diff --git a/.gitignore b/.gitignore
index b1bdb7f26..df396637a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,16 +1,5 @@
-.classpath
-.project
-.settings
-eclipsebin
-target
-*/target
-pom.xml.*
-release.properties
-
-.idea
-*.iml
-*.ipr
-*.iws
-classes
-
-.DS_Store
+/.settings
+/.project
+/.classpath
+/target/
+/log/
diff --git a/.travis.yml b/.travis.yml
deleted file mode 100644
index ee50d51cb..000000000
--- a/.travis.yml
+++ /dev/null
@@ -1,21 +0,0 @@
-language: java
-
-jdk:
-  - oraclejdk7
-  - oraclejdk8
-
-install: mvn -f gson install -DskipTests=true
-script: mvn -f gson test
-
-branches:
-  except:
-    - gh-pages
-
-notifications:
-  email: false
-
-sudo: false
-
-cache:
-  directories:
-    - $HOME/.m2
diff --git a/CHANGELOG.md b/CHANGELOG.md
deleted file mode 100644
index 7c1dd9acc..000000000
--- a/CHANGELOG.md
+++ /dev/null
@@ -1,346 +0,0 @@
-Change Log
-==========
-
-## Version 2.6.1
-
-_2016-02-11_
-
- * Fix: The 2.6 release targeted Java 1.7, but we intend to target Java 1.6. The
-   2.6.1 release is identical to 2.6, but it targets Java 1.6.
-
-
-## Version 2.6
-
-_2016-02-11_
-
- * Permit timezones without minutes in the default date adapter.
- * Update reader and writer for RFC 7159. This means that strings, numbers,
-   booleans and null may be top-level values in JSON documents, even if the
-   reader is strict.
- * New `setLenient()` method on `GsonBuilder`. This setting impacts the new
-   factory method `Gson.newJsonReader()`.
- * Adapters discovered with `@JsonAdapter` are now null safe by default.
-
-
-## Version 2.5
-
-_2015-11-24_
-
- * Updated minimum JDK version to 1.6
- * Improved Date Deserialization by accepting many date formats
- * Added support for `java.util.Currency`, `AtomicLong`, `AtomicLongArray`, `AtomicInteger`, `AtomicIntegerArray`, `AtomicBoolean`. This change is backward-incompatible because the earlier version of Gson used the default serialization which wasn't intuitive. We hope that these classes are not used enough to actually cause problems in the field.
- * Improved debugging information when some exceptions are thrown
-
-
-## Version 2.4
-
-_2015-10-04_
-
- * **Drop `IOException` from `TypeAdapter.toJson()`.** This is a binary-compatible change, but may
-   cause compiler errors where `IOExceptions` are being caught but no longer thrown. The correct fix
-   for this problem is to remove the unnecessary `catch` clause.
- * New: `Gson.newJsonWriter` method returns configured `JsonWriter` instances.
- * New: `@SerializedName` now works with [AutoValue’s][autovalue] abstract property methods.
- * New: `@SerializedName` permits alternate names when deserializing.
- * New: `JsonWriter#jsonValue` writes raw JSON values.
- * New: APIs to add primitives directly to `JsonArray` instances.
- * New: ISO 8601 date type adapter. Find this in _extras_.
- * Fix: `FieldNamingPolicy` now works properly when running on a device with a Turkish locale.
-  [autovalue]: https://github.com/google/auto/tree/master/value
-
-
-## Version 2.3.1
-
-__2014-11-20_
-
- * Added support to serialize objects with self-referential fields. The self-referential field is set to null in JSON. Previous version of Gson threw a StackOverflowException on encountering any self-referential fields.
-   * The most visible impact of this is that Gson can now serialize Throwable (Exception and Error)
- * Added support for @JsonAdapter annotation on enums which are user defined types
- * Fixed bug in getPath() with array of objects and arrays of arrays
- * Other smaller bug fixes
-
-
-## Version 2.3
-
-_2014-08-11_
-
- * The new @JsonAdapter annotation to specify a Json TypeAdapter for a class field
- * JsonPath support: JsonReader.getPath() method returns the JsonPath expression
- * New public methods in JsonArray (similar to the java.util.List): `contains(JsonElement), remove(JsonElement), remove(int index), set(int index, JsonElement element)`
- * Many other smaller bug fixes
-
-
-## Version 2.2.4
-
-_2013-05-13_
-
- * Fix internal map (LinkedHashTreeMap) hashing bug.
- * Bug fix (Issue 511)
-
-
-## Version 2.2.3
-
-_2013-04-12_
-
- * Fixes for possible DoS attack due to poor String hashing
-
-
-## Version 2.2.2
-
-_2012-07-02_
-
- * Gson now allows a user to override default type adapters for Primitives and Strings. This behavior was allowed in earlier versions of Gson but was prohibited started Gson 2.0. We decided to allow it again: This enables a user to parse 1/0 as boolean values for compatibility with iOS JSON libraries.
- * (Incompatible behavior change in `JsonParser`): In the past, if `JsonParser` encountered a stream that terminated prematurely, it returned `JsonNull`. This behavior wasn't correct because the stream had invalid JSON, not a null. `JsonParser` is now changed to throw `JsonSyntaxException` in this case. Note that if JsonParser (or Gson) encounter an empty stream, they still return `JsonNull`.
-
-
-## Version 2.2.1
-
-_2012-05-05_
-
- * Very minor fixes
-
-
-## Version 2.2
-
-_2012-05-05_
-
- * Added getDelegateAdapter in Gson class
- * Fixed a security bug related to denial of service attack with Java HashMap String collisions.
-
-
-## Version 2.1
-
-_2011-12-30_ (Targeted Dec 31, 2011)
-
- * Support for user-defined streaming type adapters
- * continued performance enhancements
- * Dropped support for type hierarchy instance creators. We don't expect this to be a problem. We'll also detect fewer errors where multiple type adapters can serialize the same type. With APIs like getNextTypeAdapter, this might actually be an improvement!
-
-
-## Version 2.0
-
-_2011-11-13_
-
-#### Faster
-
- * Previous versions first parsed complete document into a DOM-style model (JsonObject or JsonArray) and then bound data against that. Gson 2 does data binding directly from the stream parser.
-
-#### More Predictable
-
- * Objects are serialized and deserialized in the same way, regardless of where they occur in the object graph.
-
-#### Changes to watch out for
-
-  * Gson 1.7 would serialize top-level nulls as "". 2.0 serializes them as "null".
-    ```
-    String json = gson.toJson(null, Foo.class);
-    1.7: json == ""
-    2.0: json == "null"
-    ```
-
-  * Gson 1.7 permitted duplicate map keys. 2.0 forbids them.
-    ```
-    String json = "{'a':1,'a':2}";
-    Map<String, Integer> map = gson.fromJson(json, mapType);
-    1.7: map == {a=2}
-    2.0: JsonSyntaxException thrown
-    ```
-
-  * Gson 1.7 won’t serialize subclass fields in collection elements. 2.0 adds this extra information.
-    ```
-    List<Point2d> points = new ArrayList<Point2d>();
-    points.add(new Point3d(1, 2, 3));
-    String json = gson.toJson(points,
-        new TypeToken<List<Point2d>>() {}.getType());
-    1.7: json == "[{'x':1,'y':2}]"
-    2.0: json == "[{'x':1,'y':2,'z':3}]"
-    ```
-
-  * Gson 1.7 binds single-element arrays as their contents. 2.0 doesn’t.
-    ```
-    Integer i = gson.fromJson("[42]", Integer.class);
-    1.7: i == 42
-    2.0: JsonSyntaxException thrown
-    ```
-
-#### Other changes to be aware of
- * Gson 2.0 doesn’t support type adapters for primitive types.
- * Gson 1.7 uses arbitrary precision for primitive type conversion (so -122.08e-2132 != 0). Gson 2.0 uses double precision (so -122.08e-2132 == 0).
- * Gson 1.7 sets subclass fields when an InstanceCreator returns a subclass when the value is a field of another object. Gson 2.0 sets fields of the requested type only.
- * Gson 1.7 versioning never skips the top-level object. Gson 2.0 versioning applies to all objects.
- * Gson 1.7 truncates oversized large integers. Gson 2.0 fails on them.
- * Gson 2.0 permits integers to have .0 fractions like "1.0".
- * Gson 1.7 throws IllegalStateException on circular references. Gson 2.0 lets the runtime throw a StackOverflowError.
-
-
-## Version 1.7.2
-
-_2011-09-30_ (Unplanned release)
- * Fixed a threading issue in FieldAttributes (Issue 354)
-
-
-## Version 1.7.1
-
-_2011-04-13_ (Unplanned release)
-
- * Fixed Gson jars in Maven Central repository
- * Removed assembly-descriptor.xml and maven pom.xml/pom.properties files from Gson binary jar. This also ensures that jarjar can be run correctly on Gson.
-
-
-## Version 1.7
-
-_2011-04-12_ (Targeted: Jan 2011)
-
- * No need to define no-args constructors for classes serialized with Gson
- * Ability to register a hierarchical type adapter
- * Support for serialization and deserialization of maps with complex keys
- * Serialization and deserialization specific exclusion strategies
- * Allow concrete data structure fields without type adapters
- * Fixes "type" management (i.e. Wildcards, etc.)
- * Major performance enhancements by reducing the need for Java reflection
-See detailed announcement at this thread in the Gson Google Group.
-
-
-## Version 1.6
-
-_2010-11-24_ (Targeted: Oct, 2010)
-
- * New stream parser APIs
- * New parser that improves parsing performance significantly
-
-
-## Version 1.5
-
-_2010-08-19_ (Target Date: Aug 18, 2010)
-
- * Added `UPPER_CAMEL_CASE_WITH_SPACES` naming policy
- * Added SQL date and time support
- * A number of performance improvements: Using caching of field annotations for speeding up reflection, replacing recursive calls in the parser with a for loop.
-
-
-## Version 1.4 BETA
-
-_2009_10_09_
-
- * JsonStreamParser: A streaming parser API class to deserialize multiple JSON objects on a stream (such as a pipelined HTTP response)
- * Raised the deserialization limit for byte and object arrays and collection to over 11MB from 80KB. See issue 96.
- * While serializing, Gson now uses the actual type of a field. This allows serialization of base-class references holding sub-classes to the JSON for the sub-class. It also allows serialization of raw collections. See Issue 155, 156.
- * Added a `Gson.toJsonTree()` method that serializes a Java object to a tree of JsonElements. See issue 110.
- * Added a `Gson.fromJson(JsonElement)` method that deserializes from a Json parse tree.
- * Updated `Expose` annotation to contain parameters serialize and deserialize to control whether a field gets serialized or deserialized. See issue 146.
- * Added a new naming policy `LOWER_CASE_WITH_DASHES`
- * Default date type adapter is now thread-safe. See Issue 162.
- * `JsonElement.toString()` now outputs valid JSON after escaping characters properly. See issue 154.
- * `JsonPrimitive.equals()` now returns true for two numbers if their values are equal. All integral types (long, int, short, byte, BigDecimal, Long, Integer, Short, Byte) are treated equivalent for comparison. Similarly, floating point types (double, float, BigDecimal, Double, Float) are treated equivalent as well. See issue 147.
- * Fixed bugs in pretty printing. See issue 153.
- * If a field causes circular reference error, Gson lists the field name instead of the object value. See issue 118.
- * Gson now serializes a list with null elements correctly. See issue 117.
- * Fixed issue 121, 123, 126.
- * Support user defined exclusion strategies (Feature Request 138).
-
-
-## Version 1.3
-
-_2009-04-01_
-
- * Fix security token to remove the `<data>` element.
- * Changed JsonParser.parse method to be non-static
- * Throw JsonParseExceptions instead of ClassCastExceptions and UnsupportedOperationExceptions
-
-
-## Version 1.3 beta3
-
-_2009-03-17_
-
- * Supported custom mapping of field names by making `FieldNamingStrategy` public and allowing `FieldNamingStrategy` to be set in GsonBuilder. See issue 104.
- * Added a new GsonBuilder setting `generateNonExecutableJson()` that prefixes the generated JSON with some text to make the output non-executable Javascript. Gson now recognizes this text from input while deserializing and filters it out. This feature is meant to prevent script sourcing attacks. See Issue 42.
- * Supported deserialization of sets with elements that do not implement Comparable. See Issue 100
- * Supported deserialization of floating point numbers without a sign after E. See Issue 94
-
-
-## Version 1.3 beta2
-
-_2009-02-05_
-
- * Added a new Parser API. See issue 65
- * Supported deserialization of java.util.Properties. See Issue 87
- * Fixed the pretty printing of maps. See Issue 93
- * Supported automatic conversion of strings into numeric and boolean types if possible. See Issue 89
- * Supported deserialization of longs into strings. See Issue 82
-
-
-## Version 1.3 beta1
-
-_2009_01_ (Target Date Friday, Dec 15, 2008)
-
- * Made JSON parser lenient by allowing unquoted member names while parsing. See Issue 41
- * Better precision handling for floating points. See Issue 71, 72
- * Support for deserialization of special double values: NaN, infinity and negative infinity. See Issue 81
- * Backward compatibility issue found with serialization of `Collection<Object>` type.  See Issue 73 and 83.
- * Able to serialize null keys and/or values within a Map.  See Issue 77
- * Deserializing non-String value keys for Maps.  See Issue 85.
-
- * Support for clashing field name.  See Issue 76.
- * Removed the need to invoke instance creator if a deserializer is registered. See issues 37 and 69.
- * Added default support for java.util.UUID. See Issue 79
- * Changed `Gson.toJson()` methods to use `Appendable` instead of `Writer`. Issue 52. This requires that clients recompile their source code that uses Gson.
-
-
-## Version 1.2.3
-
-_2008-11-15_ (Target Date Friday, Oct 31, 2008)
-
- * Added support to serialize raw maps. See issue 45
- * Made Gson thread-safe by fixing Issue 63
- * Fixed Issue 68 to allow default type adapters for primitive types to be replaced by custom type adapters.
- * Relaxed the JSON parser to accept escaped slash (\/) as a valid character in the string. See Issue 66
-
-
-## Version 1.2.2
-
-_2008-10-14_ (Target Date: None, Unplanned)
-
- * This version was released to fix Issue 58 which caused a regression bug in version 1.2.1. It includes the contents from the release 1.2.1
-
-
-## Version 1.2.1
-
-_2008-10-13_ (Target Date Friday, Oct 7, 2008)
-
-**Note:** This release was abandoned since it caused a regression (Issue 58) bug.
-
- * Includes updated parser for JSON that supports much larger strings. For example, Gson 1.2 failed at parsing a 100k string, Gson 1.2.1 has successfully parsed strings of size 15-20MB. The parser also is faster and consumes less memory since it uses a token match instead of a recursion-based Grammar production match. See Issue 47.
- * Gson now supports field names with single quotes ' in addition to double quotes ". See Issue 55.
- * Includes bug fixes for issue 46, 49, 51, 53, 54, and 56.
-
-
-## Version 1.2
-
-_2008-08-29_ (Target Date Tuesday Aug 26, 2008)
-
- * Includes support for feature requests 21, 24, 29
- * Includes bug fixes for Issue 22, Issue 23, Issue 25, Issue 26, Issue 32 , Issue 34, Issue 35, Issue 36, Issue 37, Issue 38, Issue 39
- * Performance enhancements (see r137)
- * Documentation updates
-
-
-## Version 1.1.1
-
-_2008-07-18_ (Target Date Friday, Aug 1, 2008)
-
- * Includes fixes for Issue 19, Partial fix for Issue 20
-
-
-## Version 1.1
-
-_2008-07-01_ (Target Date Thursday, July 3, 2008)
-
- * Includes fixes for Issue 9, Issue 16, Issue 18
-
-
-## Version 1.0.1
-
-_2008-06-17_ (Target Date Friday,  Jun 13, 2008)
-
- * Includes fixes for Issue 15, Issue 14, Issue 3, Issue 8
- * Javadoc improvements
diff --git a/GsonDesignDocument.md b/GsonDesignDocument.md
deleted file mode 100644
index 51f150a92..000000000
--- a/GsonDesignDocument.md
+++ /dev/null
@@ -1,57 +0,0 @@
-#Gson Design Document
-
-This document presents issues that we faced while designing Gson. It is meant for advanced users or developers working on Gson. If you are interested in learning how to use Gson, see its user guide. 
-
-**Navigating the Json tree or the target Type Tree while deserializing**
-
-When you are deserializing a Json string into an object of desired type, you can either navigate the tree of the input, or the type tree of the desired type. Gson uses the latter approach of navigating the type of the target object. This keeps you in tight control of instantiating only the type of objects that you are expecting (essentially validating the input against the expected "schema"). By doing this, you also ignore any extra fields that the Json input has but were not expected. 
-
-As part of Gson, we wrote a general purpose ObjectNavigator that can take any object and navigate through its fields calling a visitor of your choice. 
-
-**Supporting richer serialization semantics than deserialization semantics**
-
-Gson supports serialization of arbitrary collections, but can only deserialize genericized collections. this means that Gson can, in some cases, fail to deserialize Json that it wrote. This is primarily a limitation of the Java type system since when you encounter a Json array of arbitrary types there is no way to detect the types of individual elements. We could have chosen to restrict the serialization to support only generic collections, but chose not to.This is because often the user of the library are concerned with either serialization or deserialization, but not both. In such cases, there is no need to artificially restrict the serialization capabilities. 
-
-**Supporting serialization and deserialization of classes that are not under your control and hence can not be modified**
-
-Some Json libraries use annotations on fields or methods to indicate which fields should be used for Json serialization. That approach essentially precludes the use of classes from JDK or third-party libraries. We solved this problem by defining the notion of Custom serializers and deserializers. This approach is not new, and was used by the JAX-RPC technology to solve essentially the same problem. 
-
-**Using Checked vs Unchecked exceptions to indicate a parsing error**
-
-We chose to use unchecked exceptions to indicate a parsing failure. This is primarily done because usually the client can not recover from bad input, and hence forcing them to catch a checked exception results in sloppy code in the catch() block. 
-
-**Creating class instances for deserialization**
-
-Gson needs to create a dummy class instance before it can deserialize Json data into its fields. We could have used Guice to get such an instance, but that would have resulted in a dependency on Guice. Moreover, it probably would have done the wrong thing since Guice is expected to return a valid instance, whereas we need to create a dummy one. Worse, Gson would overwrite the fields of that instance with the incoming data there by modifying the instance for all subsequent Guice injections. This is clearly not a desired behavior. Hence, we create class instances by invoking the parameterless constructor. We also handle the primitive types, enums, collections, sets, maps and trees as a special case. 
-
-To solve the problem of supporting unmodifiable types, we use custom instance creators. So, if you want to use a library types that does not define a default constructor (for example, Money class), then you can register an instance creator that returns a dummy instance when asked.
-
-**Using fields vs getters to indicate Json elements**
-
-Some Json libraries use the getters of a type to deduce the Json elements. We chose to use all fields (up the inheritance hierarchy) that are not transient, static, or synthetic. We did this because not all classes are written with suitably named getters. Moreover, getXXX or isXXX might be semantic rather than indicating properties. 
-
-However, there are good arguments to support properties as well. We intend to enhance Gson in a latter version to support properties as an alternate mapping for indicating Json fields. For now, Gson is fields-based. 
-
-**Why are most classes in Gson marked as final?**
-
-While Gson provides a fairly extensible architecture by providing pluggable serializers and deserializers, Gson classes were not specifically designed to be extensible. Providing non-final classes would have allowed a user to legitimately extend Gson classes, and then expect that behavior to work in all subsequent revisions. We chose to limit such use-cases by marking classes as final, and waiting until a good use-case emerges to allow extensibility. Marking a class final also has a minor benefit of providing additional optimization opportunities to Java compiler and virtual machine. 
-
-**Why are inner interfaces and classes used heavily in Gson?**
-
-Gson uses inner classes substantially. Many of the public interfaces are inner interfaces too (see JsonSerializer.Context or JsonDeserializer.Context as an example). These are primarily done as a matter of style. For example, we could have moved JsonSerializer.Context to be a top-level class JsonSerializerContext, but chose not to do so. However, if you can give us good reasons to rename it alternately, we are open to changing this philosophy. 
-
-**Why do you provide two ways of constructing Gson?**
-
-Gson can be constructed in two ways: by invoking new Gson() or by using a GsonBuilder. We chose to provide a simple no-args constructor to handle simple use-cases for Gson where you want to use default options, and quickly want to get going with writing code. For all other situations, where you need to configure Gson with options such as formatters, version controls etc, we use a builder pattern. The builder pattern allows a user to specify multiple optional settings for what essentially become constructor parameters for Gson. 
-
-**Comparing Gson with Alternate Approaches**
-
-Note that these comparisons were done while developing Gson so these date back to mid to late 2007.
-
-__Comparing Gson with org.json library__
-
-org.json is a much lower-level library that can be used to write a toJson() method in a class. If you can not use Gson directly (may be because of platform restrictions regarding reflection), you could use org.json to hand-code a toJson method in each object. 
-
-__Comparing Gson with org.json.simple library__
-
-org.json.simple library is very similar to org.json library and hence fairly low level. The key issue with this library is that it does not handle exceptions very well. In some cases it appeared to just eat the exception while in other cases it throws an "Error" rather than an exception.
diff --git a/LICENSE b/LICENSE
index d64569567..892eaed8f 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,202 +1,203 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
+Google Gson
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright 2008-2011 Google Inc.
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git a/README.md b/README.md
deleted file mode 100644
index d7ea3ea54..000000000
--- a/README.md
+++ /dev/null
@@ -1,50 +0,0 @@
-# google-gson
-
-[![Build Status](https://travis-ci.org/google/gson.svg?branch=master)](https://travis-ci.org/google/gson)
-
-Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object.
-Gson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of. 
-
-There are a few open-source projects that can convert Java objects to JSON. However, most of them require that you place Java annotations in your classes; something that you can not do if you do not have access to the source-code. Most also do not fully support the use of Java Generics. Gson considers both of these as very important design goals. 
-
-###*Gson Goals*
-  * Provide simple `toJson()` and `fromJson()` methods to convert Java objects to JSON and vice-versa
-  * Allow pre-existing unmodifiable objects to be converted to and from JSON
-  * Extensive support of Java Generics
-  * Allow custom representations for objects
-  * Support arbitrarily complex objects (with deep inheritance hierarchies and extensive use of generic types)
-
-###*Gson Download and Maven*
-  * [Gson 2.6.1 Download](http://search.maven.org/#artifactdetails%7Ccom.google.code.gson%7Cgson%7C2.6.1%7Cjar) downloads at Maven Central
-  * For Maven check "Dependency Information" tab, on the left side.
-
-###*Gson Documentation*
-  * Gson [API](http://google.github.io/gson/apidocs/): Javadocs for the current Gson release
-  * Gson [user guide](https://github.com/google/gson/blob/master/UserGuide.md): This guide contains examples on how to use Gson in your code.
-  * Gson [Roadmap](https://github.com/google/gson/blob/master/CHANGELOG.md): Details of changes in the recent versions
-  * Gson [design document](https://github.com/google/gson/blob/master/GsonDesignDocument.md): This document discusses issues we faced while designing Gson. It also include a comparison of Gson with other Java libraries that can be used for Json conversion
-
-Please use the [google-gson Google group](http://groups.google.com/group/google-gson) to discuss Gson, or to post questions. 
-
-###*Gson-related Content Created by Third Parties*
-  * [Gson Tutorial](http://www.studytrails.com/java/json/java-google-json-introduction.jsp) by `StudyTrails`
-
-###*License*
-
-Gson is released under the [Apache 2.0 license](LICENSE).
-
-```
-Copyright 2008 Google Inc.
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
-```
diff --git a/ReleaseProcess.md b/ReleaseProcess.md
deleted file mode 100644
index a757fe934..000000000
--- a/ReleaseProcess.md
+++ /dev/null
@@ -1,107 +0,0 @@
-#Gson Release Process
-
-The following is a step-by-step procedure for releasing a new version of Google-Gson.
-
-1. Go through all open bugs and identify which will be fixed in this release. Mark all others with an appropriate release tag. Identify duplicates, and close the bugs that will never be fixed. Fix all bugs for the release, and mark them fixed.
-1. Edit [`pom.xml`](pom.xml) and update the versions listed for Export-Package to the target version. Also add any new Java packages that have been introduced in Gson.
-1. Ensure all changelists are code-reviewed and have +1
-1. Ensure that your `~/.m2/settings.xml` is configured properly (see steps below)
-1. `cd gson`; ensure there are no open files and all changes are committed.
-1. Run `mvn release:clean`
-1. Do a dry run: `mvn release:prepare -DdryRun=true`
-1. Start the release: `mvn release:prepare`
-  * Answer questions: usually the defaults are fine.
-  * This will do a full build, change version from `-SNAPSHOT` to the released version, commit and create the tags. It will then change the version to `-SNAPSHOT` for the next release.
-1. Ensure you have defined `sonatype-nexus-staging` in your Maven `settings.xml` and run:
-
-   ```bash
-   mvn -s /home/<username>/.m2/settings.xml release:perform
-   ```
-
-1. [Log in to Nexus repository manager](https://oss.sonatype.org/index.html#welcome) at Sonatype and close the staging repository for Gson. If you run into an error regarding missing signatures, you need to manually upload the artifacts using `mvn gpg:sign-and-deploy-file` for Gson binary, source and Javadoc jars.
-
-  ```bash
-  cp -r ~/.m2/repository/com/google/code/gson/gson/1.7.2 /tmp
-  cd /tmp/1.7.2
-
-  mvn gpg:sign-and-deploy-file \
-      -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/ \
-      -DrepositoryId=sonatype-nexus-staging \
-      -DpomFile=gson-1.7.2.pom \
-      -Dfile=gson-1.7.2-javadoc.jar \
-      -Dclassifier=javadoc
-
-  mvn gpg:sign-and-deploy-file \
-      -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/ \
-      -DrepositoryId=sonatype-nexus-staging \
-      -DpomFile=gson-1.7.2.pom \
-      -Dfile=gson-1.7.2-sources.jar \
-      -Dclassifier=sources
-
-  mvn gpg:sign-and-deploy-file \
-      -Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/ \
-      -DrepositoryId=sonatype-nexus-staging \
-      -DpomFile=gson-1.7.2.pom \
-      -Dfile=gson-1.7.2.jar
-  ```
-
-1. Close the Gson repository. Download and sanity check all downloads. Do not skip this step! Once you release the staging repository, there is no going back. It will get synced with Maven central and you will not be able to update or delete anything. Your only recourse will be to release a new version of Gson and hope that no one uses the old one.
-1. Release the staging repository for Gson. Gson will now get synced to Maven central with-in the next hour. For issues consult [Sonatype Guide](https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-8.ReleaseIt).
-1. Publishing Javadocs
-
-  ```bash
-  # Switch to the branch `gh-pages`
-  git checkout gh-pages
-
-  # Unpack the generated Javadoc
-  jar xvf /tmp/2.5/gson-2.5-javadoc.jar
-
-  # Commit the new Javadoc
-  git commit -m 'Updated Javadoc to 2.5'
-
-  # Push changes to GitHub
-  git push
-  ```
-
-1. Update the version in the [Using Gson with Maven2 page](https://sites.google.com/site/gson/gson-user-guide/using-gson-with-maven2)
-1. Update [Gson Changelog](https://github.com/google/gson/blob/master/CHANGELOG.md). Also, look at all bugs that were fixed and add a few lines describing what changed in the release.
-1. Create a post on the [Gson Discussion Forum](http://groups.google.com/group/google-gson)
-1. Update the release version in [Wikipedia](http://en.wikipedia.org/wiki/GSON) and update the current "stable" release.
-
-## Configuring a machine for deployment to Sonatype Repository
-
-This section was borrowed heavily from [Doclava release process](http://code.google.com/p/doclava/wiki/ProcessRelease).
-
-1. Install/Configure GPG following this [guide](http://www.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/).
-2. [Create encrypted passwords](http://maven.apache.org/guides/mini/guide-encryption.html).
-3. Create `~/.m2/settings.xml` similar to as described in [Doclava release process](https://code.google.com/p/doclava/wiki/ProcessRelease).
-4. Now for deploying a snapshot repository, use `mvn deploy`.
-
-## Getting Maven Publishing Privileges
-
-Based on [Gson group thread](https://groups.google.com/d/topic/google-gson/DHWJHVFpIBg/discussion):
-
-1. [Sign up for a Sonatype account](https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide) following instructions under (2) on that page
-2. Ask one of the existing members of the repository to create a JIRA ticket (Step 3 of above document) to add you to the publisher list.
-
-## Running Benchmarks or Tests on Android
-
-* Download vogar
-* Put `adb` on your `$PATH` and run:
-
-  ```bash
-  vogar --benchmark --classpath gson.jar path/to/Benchmark.java
-  ```
-
-For example, here is how to run the [CollectionsDeserializationBenchmark](gson/src/main/java/com/google/gson/metrics/CollectionsDeserializationBenchmark.java):
-
-```bash
-export ANDROID_HOME=~/apps/android-sdk-mac_x86
-export PATH=$PATH:$ANDROID_HOME/platform-tools/:$ANDROID_HOME/android-sdk-mac_x86/tools/
-$VOGAR_HOME/bin/vogar \
-    --benchmark \
-    --sourcepath ../gson/src/main/java/ \
-    src/main/java/com/google/gson/metrics/CollectionsDeserializationBenchmark.java \
-    -- \
-    --vm "app_process -Xgc:noconcurrent,app_process"
-```
diff --git a/UserGuide.md b/UserGuide.md
deleted file mode 100644
index d7d1905b3..000000000
--- a/UserGuide.md
+++ /dev/null
@@ -1,662 +0,0 @@
-#Gson User Guide
-
-1. [Overview](#TOC-Overview)
-2. [Goals for Gson](#TOC-Goals-for-Gson)
-3. [Gson Performance and Scalability](#TOC-Gson-Performance-and-Scalability)
-4. [Gson Users](#TOC-Gson-Users)
-5. [Using Gson](#TOC-Using-Gson)
-  * [Using Gson with Maven](#TOC-Gson-With-Maven)
-  * [Primitives Examples](#TOC-Primitives-Examples)
-  * [Object Examples](#TOC-Object-Examples)
-  * [Finer Points with Objects](#TOC-Finer-Points-with-Objects)
-  * [Nested Classes (including Inner Classes)](#TOC-Nested-Classes-including-Inner-Classes-)
-  * [Array Examples](#TOC-Array-Examples)
-  * [Collections Examples](#TOC-Collections-Examples)
-    * [Collections Limitations](#TOC-Collections-Limitations)
-  * [Serializing and Deserializing Generic Types](#TOC-Serializing-and-Deserializing-Generic-Types)
-  * [Serializing and Deserializing Collection with Objects of Arbitrary Types](#TOC-Serializing-and-Deserializing-Collection-with-Objects-of-Arbitrary-Types)
-  * [Built-in Serializers and Deserializers](#TOC-Built-in-Serializers-and-Deserializers)
-  * [Custom Serialization and Deserialization](#TOC-Custom-Serialization-and-Deserialization)
-    * [Writing a Serializer](#TOC-Writing-a-Serializer)
-    * [Writing a Deserializer](#TOC-Writing-a-Deserializer)
-  * [Writing an Instance Creator](#TOC-Writing-an-Instance-Creator)
-    * [InstanceCreator for a Parameterized Type](#TOC-InstanceCreator-for-a-Parameterized-Type)
-  * [Compact Vs. Pretty Printing for JSON Output Format](#TOC-Compact-Vs.-Pretty-Printing-for-JSON-Output-Format)
-  * [Null Object Support](#TOC-Null-Object-Support)
-  * [Versioning Support](#TOC-Versioning-Support)
-  * [Excluding Fields From Serialization and Deserialization](#TOC-Excluding-Fields-From-Serialization-and-Deserialization)
-    * [Java Modifier Exclusion](#TOC-Java-Modifier-Exclusion)
-    * [Gson's `@Expose`](#TOC-Gson-s-Expose)
-    * [User Defined Exclusion Strategies](#TOC-User-Defined-Exclusion-Strategies)
-  * [JSON Field Naming Support](#TOC-JSON-Field-Naming-Support)
-  * [Sharing State Across Custom Serializers and Deserializers](#TOC-Sharing-State-Across-Custom-Serializers-and-Deserializers)
-  * [Streaming](#TOC-Streaming)
-6. [Issues in Designing Gson](#TOC-Issues-in-Designing-Gson)
-7. [Future Enhancements to Gson](#TOC-Future-Enhancements-to-Gson)
-
-## <a name="TOC-Overview"></a>Overview
-
-Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object.
-
-Gson can work with arbitrary Java objects including pre-existing objects that you do not have source code of.
-
-## <a name="TOC-Goals-for-Gson"></a>Goals for Gson
-
-* Provide easy to use mechanisms like `toString()` and constructor (factory method) to convert Java to JSON and vice-versa
-* Allow pre-existing unmodifiable objects to be converted to and from JSON
-* Allow custom representations for objects
-* Support arbitrarily complex objects
-* Generate compact and readability JSON output
-
-## <a name="TOC-Gson-Performance-and-Scalability"></a>Gson Performance and Scalability
-
-Here are some metrics that we obtained on a desktop (dual opteron, 8GB RAM, 64-bit Ubuntu) running lots of other things along-with the tests. You can rerun these tests by using the class [`PerformanceTest`](gson/src/test/java/com/google/gson/metrics/PerformanceTest.java).
-
-* Strings: Deserialized strings of over 25MB without any problems (see `disabled_testStringDeserializationPerformance` method in `PerformanceTest`)
-* Large collections:
-  * Serialized a collection of 1.4 million objects (see `disabled_testLargeCollectionSerialization` method in `PerformanceTest`)
-  * Deserialized a collection of 87,000 objects (see `disabled_testLargeCollectionDeserialization` in `PerformanceTest`)
-* Gson 1.4 raised the deserialization limit for byte arrays and collection to over 11MB from 80KB.
-
-Note: Delete the `disabled_` prefix to run these tests. We use this prefix to prevent running these tests every time we run JUnit tests.
-
-## <a name="TOC-Gson-Users"></a>Gson Users
-
-Gson was originally created for use inside Google where it is currently used in a number of projects. It is now used by a number of public projects and companies. See details [here](https://sites.google.com/site/gson/gson-users).
-
-## <a name="TOC-Using-Gson"></a>Using Gson
-
-The primary class to use is [`Gson`](gson/src/main/java/com/google/gson/Gson.java) which you can just create by calling `new Gson()`. There is also a class [`GsonBuilder`](gson/src/main/java/com/google/gson/GsonBuilder.java) available that can be used to create a Gson instance with various settings like version control and so on.
-
-The Gson instance does not maintain any state while invoking Json operations. So, you are free to reuse the same object for multiple Json serialization and deserialization operations.
-
-## <a name="TOC-Gson-With-Maven"></a>Using Gson with Maven
-To use Gson with Maven2/3, you can use the Gson version available in Maven Central by adding the following dependency:
-
-```xml
-<dependencies>
-    <!--  Gson: Java to Json conversion -->
-    <dependency>
-      <groupId>com.google.code.gson</groupId>
-      <artifactId>gson</artifactId>
-      <version>2.6.1</version>
-      <scope>compile</scope>
-    </dependency>
-</dependencies>
-```
-
-That is it, now your maven project is Gson enabled. 
-
-### <a name="TOC-Primitives-Examples"></a>Primitives Examples
-
-```java
-// Serialization
-Gson gson = new Gson();
-gson.toJson(1);            // ==> 1
-gson.toJson("abcd");       // ==> "abcd"
-gson.toJson(new Long(10)); // ==> 10
-int[] values = { 1 };
-gson.toJson(values);       // ==> [1]
-
-// Deserialization
-int one = gson.fromJson("1", int.class);
-Integer one = gson.fromJson("1", Integer.class);
-Long one = gson.fromJson("1", Long.class);
-Boolean false = gson.fromJson("false", Boolean.class);
-String str = gson.fromJson("\"abc\"", String.class);
-String anotherStr = gson.fromJson("[\"abc\"]", String.class);
-```
-
-### <a name="TOC-Object-Examples"></a>Object Examples
-
-```java
-class BagOfPrimitives {
-  private int value1 = 1;
-  private String value2 = "abc";
-  private transient int value3 = 3;
-  BagOfPrimitives() {
-    // no-args constructor
-  }
-}
-
-// Serialization
-BagOfPrimitives obj = new BagOfPrimitives();
-Gson gson = new Gson();
-String json = gson.toJson(obj);  
-
-// ==> json is {"value1":1,"value2":"abc"}
-```
-
-Note that you can not serialize objects with circular references since that will result in infinite recursion.
-
-```java
-// Deserialization
-BagOfPrimitives obj2 = gson.fromJson(json, BagOfPrimitives.class);
-// ==> obj2 is just like obj
-```
-
-#### <a name="TOC-Finer-Points-with-Objects"></a>**Finer Points with Objects**
-
-* It is perfectly fine (and recommended) to use private fields
-* There is no need to use any annotations to indicate a field is to be included for serialization and deserialization. All fields in the current class (and from all super classes) are included by default.
-* If a field is marked transient, (by default) it is ignored and not included in the JSON serialization or deserialization.
-* This implementation handles nulls correctly
-* While serialization, a null field is skipped from the output
-* While deserialization, a missing entry in JSON results in setting the corresponding field in the object to null
-* If a field is _synthetic_, it is ignored and not included in JSON serialization or deserialization
-* Fields corresponding to the outer classes in inner classes, anonymous classes, and local classes are ignored and not included in serialization or deserialization
-
-### <a name="TOC-Nested-Classes-including-Inner-Classes-"></a>Nested Classes (including Inner Classes)
-
-Gson can serialize static nested classes quite easily.
-
-Gson can also deserialize static nested classes. However, Gson can **not** automatically deserialize the **pure inner classes since their no-args constructor also need a reference to the containing Object** which is not available at the time of deserialization. You can address this problem by either making the inner class static or by providing a custom InstanceCreator for it. Here is an example:
-
-```java
-public class A { 
-  public String a; 
-
-  class B { 
-
-    public String b; 
-
-    public B() {
-      // No args constructor for B
-    }
-  } 
-}
-```
-
-**NOTE**: The above class B can not (by default) be serialized with Gson.
-
-Gson can not deserialize `{"b":"abc"}` into an instance of B since the class B is an inner class. if it was defined as static class B then Gson would have been able to deserialize the string. Another solution is to write a custom instance creator for B. 
-
-```java
-public class InstanceCreatorForB implements InstanceCreator<A.B> {
-  private final A a;
-  public InstanceCreatorForB(A a)  {
-    this.a = a;
-  }
-  public A.B createInstance(Type type) {
-    return a.new B();
-  }
-}
-```
-
-The above is possible, but not recommended.
-
-### <a name="TOC-Array-Examples"></a>Array Examples
-
-```java
-Gson gson = new Gson();
-int[] ints = {1, 2, 3, 4, 5};
-String[] strings = {"abc", "def", "ghi"};
-
-// Serialization
-gson.toJson(ints);     // ==> [1,2,3,4,5]
-gson.toJson(strings);  // ==> ["abc", "def", "ghi"]
-
-// Deserialization
-int[] ints2 = gson.fromJson("[1,2,3,4,5]", int[].class); 
-// ==> ints2 will be same as ints
-```
-
-We also support multi-dimensional arrays, with arbitrarily complex element types.
-
-### <a name="TOC-Collections-Examples"></a>Collections Examples
-
-```java
-Gson gson = new Gson();
-Collection<Integer> ints = Lists.immutableList(1,2,3,4,5);
-
-// Serialization
-String json = gson.toJson(ints);  // ==> json is [1,2,3,4,5]
-
-// Deserialization
-Type collectionType = new TypeToken<Collection<Integer>>(){}.getType();
-Collection<Integer> ints2 = gson.fromJson(json, collectionType);
-// ==> ints2 is same as ints
-```
-
-Fairly hideous: note how we define the type of collection.
-Unfortunately, there is no way to get around this in Java.
-
-#### <a name="TOC-Collections-Limitations"></a>Collections Limitations
-
-Gson can serialize collection of arbitrary objects but can not deserialize from it, because there is no way for the user to indicate the type of the resulting object. Instead, while deserializing, the Collection must be of a specific, generic type.
-This makes sense, and is rarely a problem when following good Java coding practices.
-
-### <a name="TOC-Serializing-and-Deserializing-Generic-Types"></a>Serializing and Deserializing Generic Types
-
-When you call `toJson(obj)`, Gson calls `obj.getClass()` to get information on the fields to serialize. Similarly, you can typically pass `MyClass.class` object in the `fromJson(json, MyClass.class)` method. This works fine if the object is a non-generic type. However, if the object is of a generic type, then the Generic type information is lost because of Java Type Erasure. Here is an example illustrating the point:
-
-```java
-class Foo<T> {
-  T value;
-}
-Gson gson = new Gson();
-Foo<Bar> foo = new Foo<Bar>();
-gson.toJson(foo); // May not serialize foo.value correctly
-
-gson.fromJson(json, foo.getClass()); // Fails to deserialize foo.value as Bar
-```
-
-The above code fails to interpret value as type Bar because Gson invokes `list.getClass()` to get its class information, but this method returns a raw class, `Foo.class`. This means that Gson has no way of knowing that this is an object of type `Foo<Bar>`, and not just plain `Foo`.
-
-You can solve this problem by specifying the correct parameterized type for your generic type. You can do this by using the [`TypeToken`](http://google.github.io/gson/apidocs/com/google/gson/reflect/TypeToken.html) class.
-
-```java
-Type fooType = new TypeToken<Foo<Bar>>() {}.getType();
-gson.toJson(foo, fooType);
-
-gson.fromJson(json, fooType);
-```
-The idiom used to get `fooType` actually defines an anonymous local inner class containing a method `getType()` that returns the fully parameterized type.
-
-### <a name="TOC-Serializing-and-Deserializing-Collection-with-Objects-of-Arbitrary-Types"></a>Serializing and Deserializing Collection with Objects of Arbitrary Types
-
-Sometimes you are dealing with JSON array that contains mixed types. For example:
-`['hello',5,{name:'GREETINGS',source:'guest'}]`
-
-The equivalent `Collection` containing this is:
-
-```java
-Collection collection = new ArrayList();
-collection.add("hello");
-collection.add(5);
-collection.add(new Event("GREETINGS", "guest"));
-```
-
-where the `Event` class is defined as:
-
-```java
-class Event {
-  private String name;
-  private String source;
-  private Event(String name, String source) {
-    this.name = name;
-    this.source = source;
-  }
-}
-```
-
-You can serialize the collection with Gson without doing anything specific: `toJson(collection)` would write out the desired output.
-
-However, deserialization with `fromJson(json, Collection.class)` will not work since Gson has no way of knowing how to map the input to the types. Gson requires that you provide a genericised version of collection type in `fromJson()`. So, you have three options:
-
-1. Use Gson's parser API (low-level streaming parser or the DOM parser JsonParser) to parse the array elements and then use `Gson.fromJson()` on each of the array elements.This is the preferred approach. [Here is an example](extras/src/main/java/com/google/gson/extras/examples/rawcollections/RawCollectionsExample.java) that demonstrates how to do this.
-
-2. Register a type adapter for `Collection.class` that looks at each of the array members and maps them to appropriate objects. The disadvantage of this approach is that it will screw up deserialization of other collection types in Gson.
-
-3. Register a type adapter for `MyCollectionMemberType` and use `fromJson()` with `Collection<MyCollectionMemberType>`.
-
-This approach is practical only if the array appears as a top-level element or if you can change the field type holding the collection to be of type `Collection<MyCollectionMemberType>`.
-
-### <a name="TOC-Built-in-Serializers-and-Deserializers"></a>Built-in Serializers and Deserializers
-
-Gson has built-in serializers and deserializers for commonly used classes whose default representation may be inappropriate.
-Here is a list of such classes:
-
-1. `java.net.URL` to match it with strings like `"https://github.com/google/gson/"`
-2. `java.net.URI` to match it with strings like `"/google/gson/"`
-
-You can also find source code for some commonly used classes such as JodaTime at [this page](https://sites.google.com/site/gson/gson-type-adapters-for-common-classes-1).
-
-### <a name="TOC-Custom-Serialization-and-Deserialization"></a>Custom Serialization and Deserialization
-
-Sometimes default representation is not what you want. This is often the case when dealing with library classes (DateTime, etc).
-Gson allows you to register your own custom serializers and deserializers. This is done by defining two parts:
-
-* Json Serialiers: Need to define custom serialization for an object
-* Json Deserializers: Needed to define custom deserialization for a type
-
-* Instance Creators: Not needed if no-args constructor is available or a deserializer is registered
-
-```java
-GsonBuilder gson = new GsonBuilder();
-gson.registerTypeAdapter(MyType2.class, new MyTypeAdapter());
-gson.registerTypeAdapter(MyType.class, new MySerializer());
-gson.registerTypeAdapter(MyType.class, new MyDeserializer());
-gson.registerTypeAdapter(MyType.class, new MyInstanceCreator());
-```
-
-`registerTypeAdapter` call checks if the type adapter implements more than one of these interfaces and register it for all of them.
-
-#### <a name="TOC-Writing-a-Serializer"></a>Writing a Serializer
-
-Here is an example of how to write a custom serializer for JodaTime `DateTime` class.
-
-```java
-private class DateTimeSerializer implements JsonSerializer<DateTime> {
-  public JsonElement serialize(DateTime src, Type typeOfSrc, JsonSerializationContext context) {
-    return new JsonPrimitive(src.toString());
-  }
-}
-```
-
-Gson calls `serialize()` when it runs into a `DateTime` object during serialization.
-
-#### <a name="TOC-Writing-a-Deserializer"></a>Writing a Deserializer
-
-Here is an example of how to write a custom deserializer for JodaTime DateTime class.
-
-```java
-private class DateTimeDeserializer implements JsonDeserializer<DateTime> {
-  public DateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
-      throws JsonParseException {
-    return new DateTime(json.getAsJsonPrimitive().getAsString());
-  }
-}
-```
-
-Gson calls `deserialize` when it needs to deserialize a JSON string fragment into a DateTime object
-
-**Finer points with Serializers and Deserializers**
-
-Often you want to register a single handler for all generic types corresponding to a raw type
-
-* For example, suppose you have an `Id` class for id representation/translation (i.e. an internal vs. external representation).
-* `Id<T>` type that has same serialization for all generic types
-  * Essentially write out the id value
-* Deserialization is very similar but not exactly the same
-  * Need to call `new Id(Class<T>, String)` which returns an instance of `Id<T>`
-
-Gson supports registering a single handler for this. You can also register a specific handler for a specific generic type (say `Id<RequiresSpecialHandling>` needed special handling).
-The `Type` parameter for the `toJson()` and `fromJson()` contains the generic type information to help you write a single handler for all generic types corresponding to the same raw type.
-
-### <a name="TOC-Writing-an-Instance-Creator"></a>Writing an Instance Creator
-
-While deserializing an Object, Gson needs to create a default instance of the class.
-Well-behaved classes that are meant for serialization and deserialization should have a no-argument constructor.
-
-* Doesn't matter whether public or private
-
-Typically, Instance Creators are needed when you are dealing with a library class that does NOT define a no-argument constructor
-
-**Instance Creator Example**
-
-```java
-private class MoneyInstanceCreator implements InstanceCreator<Money> {
-  public Money createInstance(Type type) {
-    return new Money("1000000", CurrencyCode.USD);
-  }
-}
-```
-
-Type could be of a corresponding generic type
-
-* Very useful to invoke constructors which need specific generic type information
-* For example, if the `Id` class stores the class for which the Id is being created
-
-#### <a name="TOC-InstanceCreator-for-a-Parameterized-Type"></a>InstanceCreator for a Parameterized Type
-
-Sometimes that the type that you are trying to instantiate is a parameterized type. Generally, this is not a problem since the actual instance is of raw type. Here is an example:
-
-```java
-class MyList<T> extends ArrayList<T> {
-}
-
-class MyListInstanceCreator implements InstanceCreator<MyList<?>> {
-    @SuppressWarnings("unchecked")
-  public MyList<?> createInstance(Type type) {
-    // No need to use a parameterized list since the actual instance will have the raw type anyway.
-    return new MyList();
-  }
-}
-```
-
-However, sometimes you do need to create instance based on the actual parameterized type. In this case, you can use the type parameter being passed to the `createInstance` method. Here is an example:
-
-```java
-public class Id<T> {
-  private final Class<T> classOfId;
-  private final long value;
-  public Id(Class<T> classOfId, long value) {
-    this.classOfId = classOfId;
-    this.value = value;
-  }
-}
-
-class IdInstanceCreator implements InstanceCreator<Id<?>> {
-  public Id<?> createInstance(Type type) {
-    Type[] typeParameters = ((ParameterizedType)type).getActualTypeArguments();
-    Type idType = typeParameters[0]; // Id has only one parameterized type T
-    return Id.get((Class)idType, 0L);
-  }
-}
-```
-
-In the above example, an instance of the Id class can not be created without actually passing in the actual type for the parameterized type. We solve this problem by using the passed method parameter, `type`. The `type` object in this case is the Java parameterized type representation of `Id<Foo>` where the actual instance should be bound to `Id<Foo>`. Since `Id` class has just one parameterized type parameter, `T`, we use the zeroth element of the type array returned by `getActualTypeArgument()` which will hold `Foo.class` in this case.
-
-### <a name="TOC-Compact-Vs.-Pretty-Printing-for-JSON-Output-Format"></a>Compact Vs. Pretty Printing for JSON Output Format
-
-The default JSON output that is provide by Gson is a compact JSON format. This means that there will not be any whitespace in the output JSON structure. Therefore, there will be no whitespace between field names and its value, object fields, and objects within arrays in the JSON output. As well, "null" fields will be ignored in the output (NOTE: null values will still be included in collections/arrays of objects). See the [Null Object Support](#TOC-Null-Object-Support) section for information on configure Gson to output all null values.
-
-If you like to use the Pretty Print feature, you must configure your `Gson` instance using the `GsonBuilder`. The `JsonFormatter` is not exposed through our public API, so the client is unable to configure the default print settings/margins for the JSON output. For now, we only provide a default `JsonPrintFormatter` that has default line length of 80 character, 2 character indentation, and 4 character right margin.
-
-The following is an example shows how to configure a `Gson` instance to use the default `JsonPrintFormatter` instead of the `JsonCompactFormatter`:
-```
-Gson gson = new GsonBuilder().setPrettyPrinting().create();
-String jsonOutput = gson.toJson(someObject);
-```
-### <a name="TOC-Null-Object-Support"></a>Null Object Support
-
-The default behaviour that is implemented in Gson is that `null` object fields are ignored. This allows for a more compact output format; however, the client must define a default value for these fields as the JSON format is converted back into its Java.
-
-Here's how you would configure a `Gson` instance to output null:
-
-```java
-Gson gson = new GsonBuilder().serializeNulls().create();
-```
-
-NOTE: when serializing `null`s with Gson, it will add a `JsonNull` element to the `JsonElement` structure. Therefore, this object can be used in custom serialization/deserialization.
-
-Here's an example:
-
-```java
-public class Foo {
-  private final String s;
-  private final int i;
-
-  public Foo() {
-    this(null, 5);
-  }
-
-  public Foo(String s, int i) {
-    this.s = s;
-    this.i = i;
-  }
-}
-
-Gson gson = new GsonBuilder().serializeNulls().create();
-Foo foo = new Foo();
-String json = gson.toJson(foo);
-System.out.println(json);
-
-json = gson.toJson(null);
-System.out.println(json);
-```
-
-The output is:
-
-```
-{"s":null,"i":5}
-null
-```
-
-### <a name="TOC-Versioning-Support"></a>Versioning Support
-
-Multiple versions of the same object can be maintained by using [@Since](gson/src/main/java/com/google/gson/annotations/Since.java) annotation. This annotation can be used on Classes, Fields and, in a future release, Methods. In order to leverage this feature, you must configure your `Gson` instance to ignore any field/object that is greater than some version number. If no version is set on the `Gson` instance then it will serialize and deserialize all fields and classes regardless of the version.
-
-```java
-public class VersionedClass {
-  @Since(1.1) private final String newerField;
-  @Since(1.0) private final String newField;
-  private final String field;
-
-  public VersionedClass() {
-    this.newerField = "newer";
-    this.newField = "new";
-    this.field = "old";
-  }
-}
-
-VersionedClass versionedObject = new VersionedClass();
-Gson gson = new GsonBuilder().setVersion(1.0).create();
-String jsonOutput = gson.toJson(someObject);
-System.out.println(jsonOutput);
-System.out.println();
-
-gson = new Gson();
-jsonOutput = gson.toJson(someObject);
-System.out.println(jsonOutput);
-```
-
-The output is:
-
-```
-{"newField":"new","field":"old"}
-
-{"newerField":"newer","newField":"new","field":"old"}
-```
-
-### <a name="TOC-Excluding-Fields-From-Serialization-and-Deserialization"></a>Excluding Fields From Serialization and Deserialization
-
-Gson supports numerous mechanisms for excluding top-level classes, fields and field types. Below are pluggable mechanism that allow field and class exclusion. If none of the below mechanism satisfy your needs then you can always use [custom serializers and deserializers](#TOC-Custom-Serialization-and-Deserializ).
-
-#### <a name="TOC-Java-Modifier-Exclusion"></a>Java Modifier Exclusion
-
-By default, if you mark a field as `transient`, it will be excluded. As well, if a field is marked as `static` then by default it will be excluded. If you want to include some transient fields then you can do the following:
-
-```java
-import java.lang.reflect.Modifier;
-Gson gson = new GsonBuilder()
-    .excludeFieldsWithModifiers(Modifier.STATIC)
-    .create();
-```
-
-NOTE: you can use any number of the `Modifier` constants to `excludeFieldsWithModifiers` method. For example:
-
-```java
-Gson gson = new GsonBuilder()
-    .excludeFieldsWithModifiers(Modifier.STATIC, Modifier.TRANSIENT, Modifier.VOLATILE)
-    .create();
-```
-
-#### <a name="TOC-Gson-s-Expose"></a>Gson's `@Expose`
-
-This feature provides a way where you can mark certain fields of your objects to be excluded for consideration for serialization and deserialization to JSON. To use this annotation, you must create Gson by using `new GsonBuilder().excludeFieldsWithoutExposeAnnotation().create()`. The Gson instance created will exclude all fields in a class that are not marked with `@Expose` annotation.
-
-#### <a name="TOC-User-Defined-Exclusion-Strategies"></a>User Defined Exclusion Strategies
-
-If the above mechanisms for excluding fields and class type do not work for you then you can always write your own exclusion strategy and plug it into Gson. See the [`ExclusionStrategy`](http://google.github.io/gson/apidocs/com/google/gson/ExclusionStrategy.html) JavaDoc for more information.
-
-The following example shows how to exclude fields marked with a specific `@Foo` annotation and excludes top-level types (or declared field type) of class `String`.
-
-```java
-@Retention(RetentionPolicy.RUNTIME)
-@Target({ElementType.FIELD})
-public @interface Foo {
-  // Field tag only annotation
-}
-
-public class SampleObjectForTest {
-  @Foo private final int annotatedField;
-  private final String stringField;
-  private final long longField;
-  private final Class<?> clazzField;
-
-  public SampleObjectForTest() {
-    annotatedField = 5;
-    stringField = "someDefaultValue";
-    longField = 1234;
-  }
-}
-
-public class MyExclusionStrategy implements ExclusionStrategy {
-  private final Class<?> typeToSkip;
-
-  private MyExclusionStrategy(Class<?> typeToSkip) {
-    this.typeToSkip = typeToSkip;
-  }
-
-  public boolean shouldSkipClass(Class<?> clazz) {
-    return (clazz == typeToSkip);
-  }
-
-  public boolean shouldSkipField(FieldAttributes f) {
-    return f.getAnnotation(Foo.class) != null;
-  }
-}
-
-public static void main(String[] args) {
-  Gson gson = new GsonBuilder()
-      .setExclusionStrategies(new MyExclusionStrategy(String.class))
-      .serializeNulls()
-      .create();
-  SampleObjectForTest src = new SampleObjectForTest();
-  String json = gson.toJson(src);
-  System.out.println(json);
-}
-```
-
-The output is:
-
-```
-{"longField":1234}
-```
-
-### <a name="TOC-JSON-Field-Naming-Support"></a>JSON Field Naming Support
-
-Gson supports some pre-defined field naming policies to convert the standard Java field names (i.e., camel cased names starting with lower case --- `sampleFieldNameInJava`) to a Json field name (i.e., `sample_field_name_in_java` or `SampleFieldNameInJava`). See the [FieldNamingPolicy](http://google.github.io/gson/apidocs/com/google/gson/FieldNamingPolicy.html) class for information on the pre-defined naming policies.
-
-It also has an annotation based strategy to allows clients to define custom names on a per field basis. Note, that the annotation based strategy has field name validation which will raise "Runtime" exceptions if an invalid field name is provided as the annotation value.
-
-The following is an example of how to use both Gson naming policy features:
-
-```java
-private class SomeObject {
-  @SerializedName("custom_naming") private final String someField;
-  private final String someOtherField;
-
-  public SomeObject(String a, String b) {
-    this.someField = a;
-    this.someOtherField = b;
-  }
-}
-
-SomeObject someObject = new SomeObject("first", "second");
-Gson gson = new GsonBuilder().setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE).create();
-String jsonRepresentation = gson.toJson(someObject);
-System.out.println(jsonRepresentation);
-```
-
-The output is:
-
-```
-{"custom_naming":"first","SomeOtherField":"second"}
-```
-
-If you have a need for custom naming policy ([see this discussion](http://groups.google.com/group/google-gson/browse_thread/thread/cb441a2d717f6892)), you can use the [@SerializedName](http://google.github.io/gson/apidocs/com/google/gson/annotations/SerializedName.html) annotation.
-
-### <a name="TOC-Sharing-State-Across-Custom-Serializers-and-Deserializers"></a>Sharing State Across Custom Serializers and Deserializers
-
-Sometimes you need to share state across custom serializers/deserializers ([see this discussion](http://groups.google.com/group/google-gson/browse_thread/thread/2850010691ea09fb)). You can use the following three strategies to accomplish this:
-
-1. Store shared state in static fields
-2. Declare the serializer/deserializer as inner classes of a parent type, and use the instance fields of parent type to store shared state
-3. Use Java `ThreadLocal`
-
-1 and 2 are not thread-safe options, but 3 is.
-
-### <a name="TOC-Streaming"></a>Streaming
-
-In addition Gson's object model and data binding, you can use Gson to read from and write to a [stream](https://sites.google.com/site/gson/streaming). You can also combine streaming and object model access to get the best of both approaches.
-
-## <a name="TOC-Issues-in-Designing-Gson"></a>Issues in Designing Gson
-
-See the [Gson design document](https://sites.google.com/site/gson/gson-design-document "Gson design document") for a discussion of issues we faced while designing Gson. It also include a comparison of Gson with other Java libraries that can be used for Json conversion.
-
-## <a name="TOC-Future-Enhancements-to-Gson"></a>Future Enhancements to Gson
-
-For the latest list of proposed enhancements or if you'd like to suggest new ones, see the [Issues section](https://github.com/google/gson/issues) under the project website.
diff --git a/codegen/pom.xml b/codegen/pom.xml
deleted file mode 100644
index c2f9499a3..000000000
--- a/codegen/pom.xml
+++ /dev/null
@@ -1,182 +0,0 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.google.code.gson</groupId>
-  <artifactId>gson-codegen</artifactId>
-  <packaging>jar</packaging>
-  <version>1.0-SNAPSHOT</version>
-  <inceptionYear>2008</inceptionYear>
-  <name>Gson Code Gen</name>
-  <parent>
-    <groupId>org.sonatype.oss</groupId>
-    <artifactId>oss-parent</artifactId>
-    <version>7</version>
-  </parent>
-  <url>http://code.google.com/p/google-gson/</url>
-  <description>Google Gson grab bag of utilities, type adapters, etc.</description>
-  <properties>
-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-  </properties>
-  <licenses>
-    <license>
-      <name>The Apache Software License, Version 2.0</name>
-      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-  <scm>
-    <connection>scm:svn:http://google-gson.googlecode.com/svn/trunk/extras</connection>
-    <developerConnection>scm:svn:https://google-gson.googlecode.com/svn/trunk/extras</developerConnection>
-    <url>http://google-gson.codegoogle.com/svn/trunk/extras</url>
-  </scm>
-  <issueManagement>
-    <system>Google Code Issue Tracking</system>
-    <url>http://code.google.com/p/google-gson/issues/list</url>
-  </issueManagement>
-  <organization>
-    <name>Google, Inc.</name>
-    <url>http://www.google.com</url>
-  </organization>
-  <dependencies>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <version>3.8.2</version>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-  <profiles>
-    <!-- Activate PGP signing only when performing a release -->
-    <profile>
-      <id>release-sign-artifacts</id>
-      <activation>
-        <property>
-          <name>performRelease</name>
-          <value>true</value>
-        </property>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-gpg-plugin</artifactId>
-            <version>1.4</version>
-            <executions>
-              <execution>
-                <id>sign-artifacts</id>
-                <phase>verify</phase>
-                <goals>
-                  <goal>sign</goal>
-                </goals>
-              </execution>
-            </executions>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>  
-  <build>
-    <defaultGoal>package</defaultGoal>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-compiler-plugin</artifactId>
-        <version>2.5.1</version>
-        <configuration>
-          <source>1.6</source>
-          <target>1.6</target>
-          <compilerArgument>-proc:none</compilerArgument>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-jar-plugin</artifactId>
-        <version>2.4</version>
-        <executions>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-        <configuration>
-          <archive>
-            <addMavenDescriptor>false</addMavenDescriptor>
-          </archive>
-        </configuration>
-      </plugin>
-      <plugin>
-         <groupId>org.apache.maven.plugins</groupId>
-         <artifactId>maven-source-plugin</artifactId>
-         <version>2.1.2</version>
-         <executions>
-           <execution>
-             <id>attach-sources</id>
-             <phase>verify</phase>
-             <goals>
-               <goal>jar</goal>
-             </goals>
-           </execution>
-         </executions>
-       </plugin>
-       <plugin>
-         <groupId>org.apache.maven.plugins</groupId>
-         <artifactId>maven-javadoc-plugin</artifactId>
-         <version>2.8.1</version>
-         <executions>
-           <execution>
-             <id>attach-javadocs</id>
-             <goals>
-               <goal>jar</goal>
-             </goals>
-           </execution>
-         </executions>
-         <configuration>
-           <links>
-             <link>http://download.oracle.com/javase/1.5.0/docs/api/</link>
-           </links>
-           <version>true</version>
-           <show>public</show>
-         </configuration>
-       </plugin>
-       <plugin>
-         <groupId>org.apache.maven.plugins</groupId>
-         <artifactId>maven-eclipse-plugin</artifactId>
-         <version>2.9</version>
-         <configuration>
-           <downloadSources>true</downloadSources>
-           <downloadJavadocs>true</downloadJavadocs>
-           <workspace>
-             ../eclipse-ws/
-           </workspace>
-           <workspaceCodeStylesURL>
-             file:///${basedir}/../lib/gson-formatting-styles.xml
-           </workspaceCodeStylesURL>
-         </configuration>
-       </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-release-plugin</artifactId>
-        <!--  version>2.3.2</version -->
-        <configuration>
-          <arguments>-DenableCiProfile=true</arguments>
-          <tagBase>https://google-gson.googlecode.com/svn/tags/</tagBase>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-  <developers>
-    <developer>
-      <name>Inderjeet Singh</name>
-      <organization>Trymph Inc.</organization>
-    </developer>
-    <developer>
-      <name>Joel Leitch</name>
-      <organization>Google Inc.</organization>
-    </developer>
-    <developer>
-      <name>Jesse Wilson</name>
-      <organization>Square Inc.</organization>
-    </developer>
-  </developers>
-</project>
diff --git a/codegen/src/main/java/com/google/gson/codegen/CodeGen.java b/codegen/src/main/java/com/google/gson/codegen/CodeGen.java
deleted file mode 100644
index 011568ff9..000000000
--- a/codegen/src/main/java/com/google/gson/codegen/CodeGen.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Copyright (C) 2012 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.codegen;
-
-import javax.lang.model.element.Element;
-import javax.lang.model.element.ElementKind;
-import javax.lang.model.element.PackageElement;
-import javax.lang.model.element.TypeElement;
-
-public class CodeGen {
-  private CodeGen() {
-  }
-
-  public static PackageElement getPackage(Element type) {
-    while (type.getKind() != ElementKind.PACKAGE) {
-      type = type.getEnclosingElement();
-    }
-    return (PackageElement) type;
-  }
-
-  /**
-   * Returns a fully qualified class name to complement {@code type}.
-   */
-  public static String adapterName(TypeElement typeElement, String suffix) {
-    StringBuilder builder = new StringBuilder();
-    rawTypeToString(builder, typeElement, '$');
-    builder.append(suffix);
-    return builder.toString();
-  }
-
-  static void rawTypeToString(StringBuilder result, TypeElement type, char innerClassSeparator) {
-    String packageName = getPackage(type).getQualifiedName().toString();
-    String qualifiedName = type.getQualifiedName().toString();
-    result.append(packageName);
-    result.append('.');
-    result.append(
-        qualifiedName.substring(packageName.length() + 1).replace('.', innerClassSeparator));
-  }
-}
diff --git a/codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java b/codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java
deleted file mode 100644
index 1694d88ac..000000000
--- a/codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapter.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Copyright (C) 2012 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.codegen;
-
-public @interface GeneratedTypeAdapter {
-  Class<?>[] value() default {};
-}
diff --git a/codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java b/codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java
deleted file mode 100644
index cd542bc35..000000000
--- a/codegen/src/main/java/com/google/gson/codegen/GeneratedTypeAdapterProcessor.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Copyright (C) 2012 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.codegen;
-
-import static java.lang.reflect.Modifier.FINAL;
-
-import java.io.IOException;
-import java.util.Set;
-
-import javax.annotation.processing.AbstractProcessor;
-import javax.annotation.processing.RoundEnvironment;
-import javax.annotation.processing.SupportedAnnotationTypes;
-import javax.annotation.processing.SupportedSourceVersion;
-import javax.lang.model.SourceVersion;
-import javax.lang.model.element.Element;
-import javax.lang.model.element.TypeElement;
-import javax.tools.Diagnostic;
-import javax.tools.JavaFileObject;
-
-@SupportedAnnotationTypes("com.google.gson.codegen.GeneratedTypeAdapter")
-@SupportedSourceVersion(SourceVersion.RELEASE_6)
-public final class GeneratedTypeAdapterProcessor extends AbstractProcessor {
-  @Override public boolean process(Set<? extends TypeElement> types, RoundEnvironment env) {
-    System.out.println("invoked GeneratedTypeAdapterProcessor");
-    try {
-      for (Element element : env.getElementsAnnotatedWith(GeneratedTypeAdapter.class)) {
-        writeAdapter((TypeElement) element);
-      }
-    } catch (IOException e) {
-      processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR, e.getMessage());
-    }
-    return true;
-  }
-
-  private void writeAdapter(TypeElement type) throws IOException {
-    String typeAdapterName = CodeGen.adapterName(type, "$TypeAdapter");
-    JavaFileObject sourceFile = processingEnv.getFiler()
-        .createSourceFile(typeAdapterName, type);
-    System.out.println("Generating type adapter: " + typeAdapterName + " in " + sourceFile.getName());
-
-    JavaWriter writer = new JavaWriter(sourceFile.openWriter());
-    writer.addPackage(CodeGen.getPackage(type).getQualifiedName().toString());
-    writer.beginType(typeAdapterName, "class", FINAL, null);
-    writer.endType();
-    writer.close();
-  }
-}
diff --git a/codegen/src/main/java/com/google/gson/codegen/JavaWriter.java b/codegen/src/main/java/com/google/gson/codegen/JavaWriter.java
deleted file mode 100644
index ccba6c8cd..000000000
--- a/codegen/src/main/java/com/google/gson/codegen/JavaWriter.java
+++ /dev/null
@@ -1,443 +0,0 @@
-/**
- * Copyright (C) 2012 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.codegen;
-
-import java.io.IOException;
-import java.io.Writer;
-import java.lang.annotation.Annotation;
-import java.lang.reflect.Modifier;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-/**
- * Emits Java source files.
- */
-public final class JavaWriter {
-  private static final Pattern TYPE_PATTERN = Pattern.compile("(?:[\\w$]+\\.)*([\\w$]+)");
-  private static final String INDENT = "  ";
-
-  /** Map fully qualified type names to their short names. */
-  private final Map<String, String> importedTypes = new HashMap<String, String>();
-
-  private String packagePrefix;
-  private final List<Scope> scopes = new ArrayList<Scope>();
-  private final Writer out;
-
-  /**
-   * @param out the stream to which Java source will be written. This should be
-   *     a buffered stream.
-   */
-  public JavaWriter(Writer out) {
-    this.out = out;
-  }
-
-  /**
-   * Emit a package declaration.
-   */
-  public void addPackage(String packageName) throws IOException {
-    if (this.packagePrefix != null) {
-      throw new IllegalStateException();
-    }
-    out.write("package ");
-    out.write(packageName);
-    out.write(";\n");
-    this.packagePrefix = packageName + ".";
-  }
-
-  /**
-   * Equivalent to {@code addImport(type.getName())}.
-   */
-  public void addImport(Class<?> type) throws IOException {
-    addImport(type.getName());
-  }
-
-  /**
-   * Emit an import for {@code type}. For the duration of the file, all
-   * references to this class will be automatically shortened.
-   */
-  public void addImport(String type) throws IOException {
-    Matcher matcher = TYPE_PATTERN.matcher(type);
-    if (!matcher.matches()) {
-      throw new IllegalArgumentException(type);
-    }
-    if (importedTypes.put(type, matcher.group(1)) != null) {
-      throw new IllegalArgumentException(type);
-    }
-    out.write("import ");
-    out.write(type);
-    out.write(";\n");
-  }
-
-  /**
-   * Emits a name like {@code java.lang.String} or {@code
-   * java.util.List<java.lang.String>}, shorting it with imports if
-   * possible.
-   */
-  private void type(String type) throws IOException {
-    if (this.packagePrefix == null) {
-      throw new IllegalStateException();
-    }
-
-    Matcher m = TYPE_PATTERN.matcher(type);
-    int pos = 0;
-    while (true) {
-      boolean found = m.find(pos);
-
-      // copy non-matching characters like "<"
-      int typeStart = found ? m.start() : type.length();
-      out.write(type, pos, typeStart - pos);
-
-      if (!found) {
-        break;
-      }
-
-      // copy a single class name, shortening it if possible
-      String name = m.group(0);
-      String imported;
-      if ((imported = importedTypes.get(name)) != null) {
-        out.write(imported);
-      } else if (name.startsWith(packagePrefix)
-          && name.indexOf('.', packagePrefix.length()) == -1) {
-        out.write(name.substring(packagePrefix.length()));
-      } else if (name.startsWith("java.lang.")) {
-        out.write(name.substring("java.lang.".length()));
-      } else {
-        out.write(name);
-      }
-      pos = m.end();
-    }
-  }
-
-  /**
-   * Emits a type declaration.
-   *
-   * @param kind such as "class", "interface" or "enum".
-   */
-  public void beginType(String type, String kind, int modifiers) throws IOException {
-    beginType(type, kind, modifiers, null);
-  }
-
-  /**
-   * Emits a type declaration.
-   *
-   * @param kind such as "class", "interface" or "enum".
-   * @param extendsType the class to extend, or null for no extends clause.
-   */
-  public void beginType(String type, String kind, int modifiers,
-      String extendsType, String... implementsTypes) throws IOException {
-    indent();
-    modifiers(modifiers);
-    out.write(kind);
-    out.write(" ");
-    type(type);
-    if (extendsType != null) {
-      out.write("\n");
-      indent();
-      out.write("    extends ");
-      type(extendsType);
-    }
-    if (implementsTypes.length > 0) {
-      out.write("\n");
-      indent();
-      out.write("    implements ");
-      for (int i = 0; i < implementsTypes.length; i++) {
-        if (i != 0) {
-          out.write(", ");
-        }
-        type(implementsTypes[i]);
-      }
-    }
-    out.write(" {\n");
-    pushScope(Scope.TYPE_DECLARATION);
-  }
-
-  /**
-   * Completes the current type declaration.
-   */
-  public void endType() throws IOException {
-    if (popScope() != Scope.TYPE_DECLARATION) {
-      throw new IllegalStateException();
-    }
-    indent();
-    out.write("}\n");
-  }
-
-  /**
-   * Emits a field declaration.
-   */
-  public void field(String type, String name, int modifiers) throws IOException {
-    field(type, name, modifiers, null);
-  }
-
-  public void field(String type, String name, int modifiers, String initialValue)
-      throws IOException {
-    indent();
-    modifiers(modifiers);
-    type(type);
-    out.write(" ");
-    out.write(name);
-
-    if (initialValue != null) {
-      out.write(" = ");
-      out.write(initialValue);
-    }
-    out.write(";\n");
-  }
-
-  /**
-   * Emit a method declaration.
-   *
-   * @param returnType the method's return type, or null for constructors.
-   * @param parameters alternating parameter types and names.
-   * @param name the method name, or the fully qualified class name for
-   *     constructors.
-   */
-  public void beginMethod(String returnType, String name, int modifiers, String... parameters)
-      throws IOException {
-    indent();
-    modifiers(modifiers);
-    if (returnType != null) {
-      type(returnType);
-      out.write(" ");
-      out.write(name);
-    } else {
-      type(name);
-    }
-    out.write("(");
-    for (int p = 0; p < parameters.length; ) {
-      if (p != 0) {
-        out.write(", ");
-      }
-      type(parameters[p++]);
-      out.write(" ");
-      type(parameters[p++]);
-    }
-    out.write(")");
-    if ((modifiers & Modifier.ABSTRACT) != 0) {
-      out.write(";\n");
-      pushScope(Scope.ABSTRACT_METHOD);
-    } else {
-      out.write(" {\n");
-      pushScope(Scope.NON_ABSTRACT_METHOD);
-    }
-  }
-
-  /**
-   * Annotates the next element with {@code annotation}. The annotation has no
-   * attributes.
-   */
-  public void annotation(String annotation) throws IOException {
-    indent();
-    out.write("@");
-    type(annotation);
-    out.write("\n");
-  }
-
-  /**
-   * Equivalent to {@code annotation(annotationType.getName())}.
-   */
-  public void annotation(Class<? extends Annotation> annotationType) throws IOException {
-    annotation(annotationType.getName());
-  }
-
-  /**
-   * @param pattern a code pattern like "int i = %s". Shouldn't contain a
-   * trailing semicolon or newline character.
-   */
-  public void statement(String pattern, Object... args) throws IOException {
-    checkInMethod();
-    indent();
-    out.write(String.format(pattern, args));
-    out.write(";\n");
-  }
-
-  /**
-   * @param controlFlow the control flow construct and its code, such as
-   *     "if (foo == 5)". Shouldn't contain braces or newline characters.
-   */
-  public void beginControlFlow(String controlFlow) throws IOException {
-    checkInMethod();
-    indent();
-    out.write(controlFlow);
-    out.write(" {\n");
-    pushScope(Scope.CONTROL_FLOW);
-  }
-
-  /**
-   * @param controlFlow the control flow construct and its code, such as
-   *     "else if (foo == 10)". Shouldn't contain braces or newline characters.
-   */
-  public void nextControlFlow(String controlFlow) throws IOException {
-    if (popScope() != Scope.CONTROL_FLOW) {
-      throw new IllegalArgumentException();
-    }
-
-    indent();
-    pushScope(Scope.CONTROL_FLOW);
-    out.write("} ");
-    out.write(controlFlow);
-    out.write(" {\n");
-  }
-
-  public void endControlFlow() throws IOException {
-    endControlFlow(null);
-  }
-
-  /**
-   * @param controlFlow the optional control flow construct and its code, such
-   *     as "while(foo == 20)". Only used for "do/while" control flows.
-   */
-  public void endControlFlow(String controlFlow) throws IOException {
-    if (popScope() != Scope.CONTROL_FLOW) {
-      throw new IllegalArgumentException();
-    }
-
-    indent();
-    if (controlFlow != null) {
-      out.write("} ");
-      out.write(controlFlow);
-      out.write(";\n");
-    } else {
-      out.write("}\n");
-    }
-  }
-
-  /**
-   * Completes the current method declaration.
-   */
-  public void endMethod() throws IOException {
-    Scope popped = popScope();
-    if (popped == Scope.NON_ABSTRACT_METHOD) {
-      indent();
-      out.write("}\n");
-    } else if (popped != Scope.ABSTRACT_METHOD) {
-      throw new IllegalStateException();
-    }
-  }
-
-  /**
-   * Returns the string literal representing {@code data}, including wrapping
-   * quotes.
-   */
-  public static String stringLiteral(String data) {
-    StringBuilder result = new StringBuilder();
-    result.append('"');
-    for (int i = 0; i < data.length(); i++) {
-      char c = data.charAt(i);
-      switch (c) {
-        case '"':
-          result.append("\\\"");
-          break;
-        case '\\':
-          result.append("\\\\");
-          break;
-        case '\t':
-          result.append("\\\t");
-          break;
-        case '\b':
-          result.append("\\\b");
-          break;
-        case '\n':
-          result.append("\\\n");
-          break;
-        case '\r':
-          result.append("\\\r");
-          break;
-        case '\f':
-          result.append("\\\f");
-          break;
-        default:
-          result.append(c);
-      }
-    }
-    result.append('"');
-    return result.toString();
-  }
-
-  public void close() throws IOException {
-    out.close();
-  }
-
-  /**
-   * Emit modifier names.
-   */
-  private void modifiers(int modifiers) throws IOException {
-    if ((modifiers & Modifier.PUBLIC) != 0) {
-      out.write("public ");
-    }
-    if ((modifiers & Modifier.PRIVATE) != 0) {
-      out.write("private ");
-    }
-    if ((modifiers & Modifier.PROTECTED) != 0) {
-      out.write("protected ");
-    }
-    if ((modifiers & Modifier.STATIC) != 0) {
-      out.write("static ");
-    }
-    if ((modifiers & Modifier.FINAL) != 0) {
-      out.write("final ");
-    }
-    if ((modifiers & Modifier.ABSTRACT) != 0) {
-      out.write("abstract ");
-    }
-    if ((modifiers & Modifier.SYNCHRONIZED) != 0) {
-      out.write("synchronized ");
-    }
-    if ((modifiers & Modifier.TRANSIENT) != 0) {
-      out.write("transient ");
-    }
-    if ((modifiers & Modifier.VOLATILE) != 0) {
-      out.write("volatile ");
-    }
-  }
-
-  private void indent() throws IOException {
-    for (int i = 0; i < scopes.size(); i++) {
-      out.write(INDENT);
-    }
-  }
-
-  private void checkInMethod() {
-    Scope scope = peekScope();
-    if (scope != Scope.NON_ABSTRACT_METHOD && scope != Scope.CONTROL_FLOW) {
-      throw new IllegalArgumentException();
-    }
-  }
-
-  private void pushScope(Scope pushed) {
-    scopes.add(pushed);
-  }
-
-  private Scope peekScope() {
-    return scopes.get(scopes.size() - 1);
-  }
-
-  private Scope popScope() {
-    return scopes.remove(scopes.size() - 1);
-  }
-
-  private enum Scope {
-    TYPE_DECLARATION,
-    ABSTRACT_METHOD,
-    NON_ABSTRACT_METHOD,
-    CONTROL_FLOW,
-  }
-}
diff --git a/codegen/src/main/resources/META-INF/services/javax.annotation.processing.Processor b/codegen/src/main/resources/META-INF/services/javax.annotation.processing.Processor
deleted file mode 100644
index a052da0c1..000000000
--- a/codegen/src/main/resources/META-INF/services/javax.annotation.processing.Processor
+++ /dev/null
@@ -1 +0,0 @@
-com.google.gson.codegen.GeneratedTypeAdapterProcessor
\ No newline at end of file
diff --git a/codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java b/codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java
deleted file mode 100644
index 855ee3faf..000000000
--- a/codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java
+++ /dev/null
@@ -1,26 +0,0 @@
-/*
- * Copyright (C) 2012 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.codegen.functional;
-
-import junit.framework.TestCase;
-
-public class CodeGenFunctionalTest extends TestCase {
-
-  public void testGeneratedJson() {
-    Order order = new Order("toy", 10);
-    // TODO: figure out how to access the generated type adapter
-  }
-}
diff --git a/codegen/src/test/java/com/google/gson/codegen/functional/Order.java b/codegen/src/test/java/com/google/gson/codegen/functional/Order.java
deleted file mode 100644
index 916587f3b..000000000
--- a/codegen/src/test/java/com/google/gson/codegen/functional/Order.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Copyright (C) 2012 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.codegen.functional;
-
-import com.google.gson.codegen.GeneratedTypeAdapter;
-
-@GeneratedTypeAdapter
-final class Order {
-  private final String itemName;
-  private final int price;
-
-  public Order(String itemName, int price) {
-    this.itemName = itemName;
-    this.price = price;
-  }
-
-  public String getItemName() {
-    return itemName;
-  }
-
-  public int getAmount() {
-    return price;
-  }
-}
diff --git a/examples/android-proguard-example/AndroidManifest.xml b/examples/android-proguard-example/AndroidManifest.xml
deleted file mode 100755
index 7e9b1d8b0..000000000
--- a/examples/android-proguard-example/AndroidManifest.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-  package="com.google.gson.examples.android"
-  android:versionCode="1"
-  android:versionName="1.0">
-  <uses-sdk android:minSdkVersion="3"/>
-  <application android:icon="@drawable/icon" android:label="@string/app_name">
-    <activity android:name=".GsonProguardExampleActivity" 
-              android:label="@string/app_name" 
-              android:exported="true" 
-              android:icon="@drawable/icon"
-              android:configChanges="keyboardHidden|orientation" 
-              android:enabled="true">
-      <intent-filter>
-        <action android:name="android.intent.action.MAIN" />
-        <category android:name="android.intent.category.LAUNCHER" />
-      </intent-filter>
-    </activity>
-  </application>
-  <uses-permission android:name="android.permission.INTERNET" />
-</manifest> 
diff --git a/examples/android-proguard-example/default.properties b/examples/android-proguard-example/default.properties
deleted file mode 100644
index 7d4fed0b2..000000000
--- a/examples/android-proguard-example/default.properties
+++ /dev/null
@@ -1,12 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-#
-# This file must be checked in Version Control Systems.
-#
-# To customize properties used by the Ant build system use,
-# "build.properties", and override values to adapt the script to your
-# project structure.
-
-# Project target.
-target=android-3
-proguard.config=proguard.cfg
\ No newline at end of file
diff --git a/examples/android-proguard-example/proguard.cfg b/examples/android-proguard-example/proguard.cfg
deleted file mode 100644
index a1d8fe1ae..000000000
--- a/examples/android-proguard-example/proguard.cfg
+++ /dev/null
@@ -1,16 +0,0 @@
-##---------------Begin: proguard configuration for Gson  ----------
-# Gson uses generic type information stored in a class file when working with fields. Proguard
-# removes such information by default, so configure it to keep all of it.
--keepattributes Signature
-
-# For using GSON @Expose annotation
--keepattributes *Annotation*
-
-# Gson specific classes
--keep class sun.misc.Unsafe { *; }
-#-keep class com.google.gson.stream.** { *; }
-
-# Application classes that will be serialized/deserialized over Gson
--keep class com.google.gson.examples.android.model.** { *; }
-
-##---------------End: proguard configuration for Gson  ----------
diff --git a/examples/android-proguard-example/res/drawable/icon.png b/examples/android-proguard-example/res/drawable/icon.png
deleted file mode 100644
index a07c69fa5..000000000
Binary files a/examples/android-proguard-example/res/drawable/icon.png and /dev/null differ
diff --git a/examples/android-proguard-example/res/layout/main.xml b/examples/android-proguard-example/res/layout/main.xml
deleted file mode 100644
index 0ac46e684..000000000
--- a/examples/android-proguard-example/res/layout/main.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-  xmlns:android="http://schemas.android.com/apk/res/android" 
-  android:orientation="vertical"
-  android:layout_width="fill_parent"
-  android:layout_height="fill_parent">
-  
-  <TextView android:id="@+id/tv"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" />
-</LinearLayout>
\ No newline at end of file
diff --git a/examples/android-proguard-example/res/values/strings.xml b/examples/android-proguard-example/res/values/strings.xml
deleted file mode 100644
index ba3be81e8..000000000
--- a/examples/android-proguard-example/res/values/strings.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-  <string name="app_name">Gson Proguard Example</string>
-</resources>
-
diff --git a/examples/android-proguard-example/src/com/google/gson/examples/android/GsonProguardExampleActivity.java b/examples/android-proguard-example/src/com/google/gson/examples/android/GsonProguardExampleActivity.java
deleted file mode 100644
index bd5443114..000000000
--- a/examples/android-proguard-example/src/com/google/gson/examples/android/GsonProguardExampleActivity.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.examples.android;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.widget.TextView;
-
-import com.google.gson.Gson;
-import com.google.gson.examples.android.model.Cart;
-import com.google.gson.examples.android.model.LineItem;
-
-/**
- * Activity class illustrating how to use proguard with Gson
- *
- * @author Inderjeet Singh
- */
-public class GsonProguardExampleActivity extends Activity {
-  @Override
-  public void onCreate(Bundle icicle) {
-    super.onCreate(icicle);
-    setContentView(R.layout.main);
-    TextView tv = (TextView) findViewById(R.id.tv);
-    Gson gson = new Gson();
-    Cart cart = buildCart();
-    StringBuilder sb = new StringBuilder();
-    sb.append("Gson.toJson() example: \n");
-    sb.append("  Cart Object: ").append(cart).append("\n");
-    sb.append("  Cart JSON: ").append(gson.toJson(cart)).append("\n");
-    sb.append("\n\nGson.fromJson() example: \n");
-    String json = "{buyer:'Happy Camper',creditCard:'4111-1111-1111-1111',"
-      + "lineItems:[{name:'nails',priceInMicros:100000,quantity:100,currencyCode:'USD'}]}";
-    sb.append("Cart JSON: ").append(json).append("\n");
-    sb.append("Cart Object: ").append(gson.fromJson(json, Cart.class)).append("\n");
-    tv.setText(sb.toString());
-    tv.invalidate();
-  }
-
-  private Cart buildCart() {
-    List<LineItem> lineItems = new ArrayList<LineItem>();
-    lineItems.add(new LineItem("hammer", 1, 12000000, "USD"));
-    return new Cart(lineItems, "Happy Buyer", "4111-1111-1111-1111");
-  }
-}
diff --git a/examples/android-proguard-example/src/com/google/gson/examples/android/model/Cart.java b/examples/android-proguard-example/src/com/google/gson/examples/android/model/Cart.java
deleted file mode 100644
index 7582036eb..000000000
--- a/examples/android-proguard-example/src/com/google/gson/examples/android/model/Cart.java
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.examples.android.model;
-
-import java.lang.reflect.ParameterizedType;
-import java.lang.reflect.Type;
-import java.lang.reflect.WildcardType;
-import java.util.List;
-
-import com.google.gson.annotations.SerializedName;
-
-/**
- * A model object representing a cart that can be posted to an order-processing server
- * 
- * @author Inderjeet Singh
- */
-public class Cart {
-  public final List<LineItem> lineItems;
-
-  @SerializedName("buyer")
-  private final String buyerName;
-
-  private final String creditCard;
-
-  public Cart(List<LineItem> lineItems, String buyerName, String creditCard) {
-    this.lineItems = lineItems;
-    this.buyerName = buyerName;
-    this.creditCard = creditCard;
-  }
-
-  public List<LineItem> getLineItems() {
-    return lineItems;
-  }
-
-  public String getBuyerName() {
-    return buyerName;
-  }
-
-  public String getCreditCard() {
-    return creditCard;
-  }
-
-  @Override
-  public String toString() {
-    StringBuilder itemsText = new StringBuilder();
-    boolean first = true;
-    if (lineItems != null) {
-      try {
-        Class<?> fieldType = Cart.class.getField("lineItems").getType();
-        System.out.println("LineItems CLASS: " + getSimpleTypeName(fieldType));
-      } catch (SecurityException e) {
-      } catch (NoSuchFieldException e) {
-      }
-      for (LineItem item : lineItems) {
-        if (first) {
-          first = false;
-        } else {
-          itemsText.append("; ");
-        }
-        itemsText.append(item);
-      }
-    }
-    return "[BUYER: " + buyerName + "; CC: " + creditCard + "; "
-    + "LINE_ITEMS: " + itemsText.toString() + "]";
-  }
-
-  @SuppressWarnings("unchecked")
-  public static String getSimpleTypeName(Type type) {
-    if (type == null) {
-      return "null";
-    }
-    if (type instanceof Class) {
-      return ((Class)type).getSimpleName();
-    } else if (type instanceof ParameterizedType) {
-      ParameterizedType pType = (ParameterizedType) type;
-      StringBuilder sb = new StringBuilder(getSimpleTypeName(pType.getRawType()));
-      sb.append('<');
-      boolean first = true;
-      for (Type argumentType : pType.getActualTypeArguments()) {
-        if (first) {
-          first = false;
-        } else {
-          sb.append(',');
-        }
-        sb.append(getSimpleTypeName(argumentType));
-      }
-      sb.append('>');
-      return sb.toString();
-    } else if (type instanceof WildcardType) {
-      return "?";
-    }
-    return type.toString();
-  }
-
-}
diff --git a/examples/android-proguard-example/src/com/google/gson/examples/android/model/LineItem.java b/examples/android-proguard-example/src/com/google/gson/examples/android/model/LineItem.java
deleted file mode 100644
index 1273ec971..000000000
--- a/examples/android-proguard-example/src/com/google/gson/examples/android/model/LineItem.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.examples.android.model;
-
-/**
- * A line item in a cart. This is not a rest resource, just a dependent object
- *
- * @author Inderjeet Singh
- */
-public class LineItem {
-  private final String name;
-  private final int quantity;
-  private final long priceInMicros;
-  private final String currencyCode;
-
-  public LineItem(String name, int quantity, long priceInMicros, String currencyCode) {
-    this.name = name;
-    this.quantity = quantity;
-    this.priceInMicros = priceInMicros;
-    this.currencyCode = currencyCode;
-  }
-
-  public String getName() {
-    return name;
-  }
-
-  public int getQuantity() {
-    return quantity;
-  }
-
-  public long getPriceInMicros() {
-    return priceInMicros;
-  }
-
-  public String getCurrencyCode() {
-    return currencyCode;
-  }
-
-  @Override
-  public String toString() {
-    return String.format("(item: %s, qty: %s, price: %.2f %s)",
-        name, quantity, priceInMicros / 1000000d, currencyCode);
-  }
-}
diff --git a/extras/pom.xml b/extras/pom.xml
deleted file mode 100644
index 41e6c9c9b..000000000
--- a/extras/pom.xml
+++ /dev/null
@@ -1,186 +0,0 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.google.code.gson</groupId>
-  <artifactId>gson-extras</artifactId>
-  <packaging>jar</packaging>
-  <version>1.0-SNAPSHOT</version>
-  <inceptionYear>2008</inceptionYear>
-  <name>Gson Extras</name>
-  <parent>
-    <groupId>org.sonatype.oss</groupId>
-    <artifactId>oss-parent</artifactId>
-    <version>9</version>
-  </parent>
-  <url>http://code.google.com/p/google-gson/</url>
-  <description>Google Gson grab bag of utilities, type adapters, etc.</description>
-  <properties>
-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-  </properties>
-  <licenses>
-    <license>
-      <name>The Apache Software License, Version 2.0</name>
-      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-  <scm>
-    <connection>scm:svn:http://google-gson.googlecode.com/svn/trunk/extras</connection>
-    <developerConnection>scm:svn:https://google-gson.googlecode.com/svn/trunk/extras</developerConnection>
-    <url>http://google-gson.codegoogle.com/svn/trunk/extras</url>
-  </scm>
-  <issueManagement>
-    <system>Google Code Issue Tracking</system>
-    <url>http://code.google.com/p/google-gson/issues/list</url>
-  </issueManagement>
-  <organization>
-    <name>Google, Inc.</name>
-    <url>http://www.google.com</url>
-  </organization>
-  <dependencies>
-    <dependency>
-      <groupId>com.google.code.gson</groupId>
-      <artifactId>gson</artifactId>
-      <version>2.3.1</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <version>3.8.2</version>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-  <profiles>
-    <!-- Activate PGP signing only when performing a release -->
-    <profile>
-      <id>release-sign-artifacts</id>
-      <activation>
-        <property>
-          <name>performRelease</name>
-          <value>true</value>
-        </property>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-gpg-plugin</artifactId>
-            <version>1.5</version>
-            <executions>
-              <execution>
-                <id>sign-artifacts</id>
-                <phase>verify</phase>
-                <goals>
-                  <goal>sign</goal>
-                </goals>
-              </execution>
-            </executions>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>  
-  <build>
-    <defaultGoal>package</defaultGoal>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-compiler-plugin</artifactId>
-        <version>3.2</version>
-        <configuration>
-          <source>1.5</source>
-          <target>1.5</target>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-jar-plugin</artifactId>
-        <version>2.5</version>
-        <executions>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-        <configuration>
-          <archive>
-            <addMavenDescriptor>false</addMavenDescriptor>
-          </archive>
-        </configuration>
-      </plugin>
-      <plugin>
-         <groupId>org.apache.maven.plugins</groupId>
-         <artifactId>maven-source-plugin</artifactId>
-         <version>2.4</version>
-         <executions>
-           <execution>
-             <id>attach-sources</id>
-             <phase>verify</phase>
-             <goals>
-               <goal>jar</goal>
-             </goals>
-           </execution>
-         </executions>
-       </plugin>
-       <plugin>
-         <groupId>org.apache.maven.plugins</groupId>
-         <artifactId>maven-javadoc-plugin</artifactId>
-         <version>2.10.1</version>
-         <executions>
-           <execution>
-             <id>attach-javadocs</id>
-             <goals>
-               <goal>jar</goal>
-             </goals>
-           </execution>
-         </executions>
-         <configuration>
-           <links>
-             <link>http://download.oracle.com/javase/1.5.0/docs/api/</link>
-           </links>
-           <version>true</version>
-           <show>public</show>
-         </configuration>
-       </plugin>
-       <plugin>
-         <groupId>org.apache.maven.plugins</groupId>
-         <artifactId>maven-eclipse-plugin</artifactId>
-         <version>2.9</version>
-         <configuration>
-           <downloadSources>true</downloadSources>
-           <downloadJavadocs>true</downloadJavadocs>
-           <workspace>
-             ../eclipse-ws/
-           </workspace>
-           <workspaceCodeStylesURL>
-             file:///${basedir}/../lib/gson-formatting-styles.xml
-           </workspaceCodeStylesURL>
-         </configuration>
-       </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-release-plugin</artifactId>
-        <!--  version>2.3.2</version -->
-        <configuration>
-          <arguments>-DenableCiProfile=true</arguments>
-          <tagBase>https://google-gson.googlecode.com/svn/tags/</tagBase>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-  <developers>
-    <developer>
-      <name>Inderjeet Singh</name>
-    </developer>
-    <developer>
-      <name>Joel Leitch</name>
-      <organization>Google Inc.</organization>
-    </developer>
-    <developer>
-      <name>Jesse Wilson</name>
-      <organization>Square Inc.</organization>
-    </developer>
-  </developers>
-</project>
diff --git a/extras/src/main/java/com/google/gson/extras/examples/rawcollections/RawCollectionsExample.java b/extras/src/main/java/com/google/gson/extras/examples/rawcollections/RawCollectionsExample.java
deleted file mode 100644
index bd7c2d24d..000000000
--- a/extras/src/main/java/com/google/gson/extras/examples/rawcollections/RawCollectionsExample.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.extras.examples.rawcollections;
-
-import java.util.ArrayList;
-import java.util.Collection;
-
-import com.google.gson.Gson;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonParser;
-
-public class RawCollectionsExample {
-  static class Event {
-    private String name;
-    private String source;
-    private Event(String name, String source) {
-      this.name = name;
-      this.source = source;
-    }
-    @Override
-    public String toString() {
-      return String.format("(name=%s, source=%s)", name, source);
-    }
-  }
-
-  @SuppressWarnings({ "unchecked", "rawtypes" })
-  public static void main(String[] args) {
-    Gson gson = new Gson();
-    Collection collection = new ArrayList();
-    collection.add("hello");
-    collection.add(5);
-    collection.add(new Event("GREETINGS", "guest"));
-    String json = gson.toJson(collection);
-    System.out.println("Using Gson.toJson() on a raw collection: " + json);
-    JsonParser parser = new JsonParser();
-    JsonArray array = parser.parse(json).getAsJsonArray();
-    String message = gson.fromJson(array.get(0), String.class);
-    int number = gson.fromJson(array.get(1), int.class);
-    Event event = gson.fromJson(array.get(2), Event.class);
-    System.out.printf("Using Gson.fromJson() to get: %s, %d, %s", message, number, event);
-  }
-}
diff --git a/extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java b/extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java
deleted file mode 100644
index cd8ea00f4..000000000
--- a/extras/src/main/java/com/google/gson/graph/GraphAdapterBuilder.java
+++ /dev/null
@@ -1,308 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.graph;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.InstanceCreator;
-import com.google.gson.JsonElement;
-import com.google.gson.TypeAdapter;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.internal.ConstructorConstructor;
-import com.google.gson.internal.ObjectConstructor;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonToken;
-import com.google.gson.stream.JsonWriter;
-import java.io.IOException;
-import java.lang.reflect.Type;
-import java.util.HashMap;
-import java.util.IdentityHashMap;
-import java.util.LinkedList;
-import java.util.Map;
-import java.util.Queue;
-
-/**
- * Writes a graph of objects as a list of named nodes.
- */
-// TODO: proper documentation
-@SuppressWarnings("rawtypes")
-public final class GraphAdapterBuilder {
-  private final Map<Type, InstanceCreator<?>> instanceCreators;
-  private final ConstructorConstructor constructorConstructor;
-
-  public GraphAdapterBuilder() {
-      this.instanceCreators = new HashMap<Type, InstanceCreator<?>>();
-      this.constructorConstructor = new ConstructorConstructor(instanceCreators);
-  }
-  public GraphAdapterBuilder addType(Type type) {
-    final ObjectConstructor<?> objectConstructor = constructorConstructor.get(TypeToken.get(type));
-    InstanceCreator<Object> instanceCreator = new InstanceCreator<Object>() {
-      public Object createInstance(Type type) {
-        return objectConstructor.construct();
-      }
-    };
-    return addType(type, instanceCreator);
-  }
-
-  public GraphAdapterBuilder addType(Type type, InstanceCreator<?> instanceCreator) {
-    if (type == null || instanceCreator == null) {
-      throw new NullPointerException();
-    }
-    instanceCreators.put(type, instanceCreator);
-    return this;
-  }
-
-  public void registerOn(GsonBuilder gsonBuilder) {
-    Factory factory = new Factory(instanceCreators);
-    gsonBuilder.registerTypeAdapterFactory(factory);
-    for (Map.Entry<Type, InstanceCreator<?>> entry : instanceCreators.entrySet()) {
-      gsonBuilder.registerTypeAdapter(entry.getKey(), factory);
-    }
-  }
-
-  static class Factory implements TypeAdapterFactory, InstanceCreator {
-    private final Map<Type, InstanceCreator<?>> instanceCreators;
-    private final ThreadLocal<Graph> graphThreadLocal = new ThreadLocal<Graph>();
-
-    Factory(Map<Type, InstanceCreator<?>> instanceCreators) {
-      this.instanceCreators = instanceCreators;
-    }
-
-    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
-      if (!instanceCreators.containsKey(type.getType())) {
-        return null;
-      }
-
-      final TypeAdapter<T> typeAdapter = gson.getDelegateAdapter(this, type);
-      final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
-      return new TypeAdapter<T>() {
-        @Override public void write(JsonWriter out, T value) throws IOException {
-          if (value == null) {
-            out.nullValue();
-            return;
-          }
-
-          Graph graph = graphThreadLocal.get();
-          boolean writeEntireGraph = false;
-
-          /*
-           * We have one of two cases:
-           *  1. We've encountered the first known object in this graph. Write
-           *     out the graph, starting with that object.
-           *  2. We've encountered another graph object in the course of #1.
-           *     Just write out this object's name. We'll circle back to writing
-           *     out the object's value as a part of #1.
-           */
-
-          if (graph == null) {
-            writeEntireGraph = true;
-            graph = new Graph(new IdentityHashMap<Object, Element<?>>());
-          }
-
-          @SuppressWarnings("unchecked") // graph.map guarantees consistency between value and T
-          Element<T> element = (Element<T>) graph.map.get(value);
-          if (element == null) {
-            element = new Element<T>(value, graph.nextName(), typeAdapter, null);
-            graph.map.put(value, element);
-            graph.queue.add(element);
-          }
-
-          if (writeEntireGraph) {
-            graphThreadLocal.set(graph);
-            try {
-              out.beginObject();
-              Element<?> current;
-              while ((current = graph.queue.poll()) != null) {
-                out.name(current.id);
-                current.write(out);
-              }
-              out.endObject();
-            } finally {
-              graphThreadLocal.remove();
-            }
-          } else {
-            out.value(element.id);
-          }
-        }
-
-        @Override public T read(JsonReader in) throws IOException {
-          if (in.peek() == JsonToken.NULL) {
-            in.nextNull();
-            return null;
-          }
-
-          /*
-           * Again we have one of two cases:
-           *  1. We've encountered the first known object in this graph. Read
-           *     the entire graph in as a map from names to their JsonElements.
-           *     Then convert the first JsonElement to its Java object.
-           *  2. We've encountered another graph object in the course of #1.
-           *     Read in its name, then deserialize its value from the
-           *     JsonElement in our map. We need to do this lazily because we
-           *     don't know which TypeAdapter to use until a value is
-           *     encountered in the wild.
-           */
-
-          String currentName = null;
-          Graph graph = graphThreadLocal.get();
-          boolean readEntireGraph = false;
-
-          if (graph == null) {
-            graph = new Graph(new HashMap<Object, Element<?>>());
-            readEntireGraph = true;
-
-            // read the entire tree into memory
-            in.beginObject();
-            while (in.hasNext()) {
-              String name = in.nextName();
-              if (currentName == null) {
-                currentName = name;
-              }
-              JsonElement element = elementAdapter.read(in);
-              graph.map.put(name, new Element<T>(null, name, typeAdapter, element));
-            }
-            in.endObject();
-          } else {
-            currentName = in.nextString();
-          }
-
-          if (readEntireGraph) {
-            graphThreadLocal.set(graph);
-          }
-          try {
-            @SuppressWarnings("unchecked") // graph.map guarantees consistency between value and T
-            Element<T> element = (Element<T>) graph.map.get(currentName);
-            // now that we know the typeAdapter for this name, go from JsonElement to 'T'
-            if (element.value == null) {
-              element.typeAdapter = typeAdapter;
-              element.read(graph);
-            }
-            return element.value;
-          } finally {
-            if (readEntireGraph) {
-              graphThreadLocal.remove();
-            }
-          }
-        }
-      };
-    }
-
-    /**
-     * Hook for the graph adapter to get a reference to a deserialized value
-     * before that value is fully populated. This is useful to deserialize
-     * values that directly or indirectly reference themselves: we can hand
-     * out an instance before read() returns.
-     *
-     * <p>Gson should only ever call this method when we're expecting it to;
-     * that is only when we've called back into Gson to deserialize a tree.
-     */
-    @SuppressWarnings("unchecked")
-    public Object createInstance(Type type) {
-      Graph graph = graphThreadLocal.get();
-      if (graph == null || graph.nextCreate == null) {
-        throw new IllegalStateException("Unexpected call to createInstance() for " + type);
-      }
-      InstanceCreator<?> creator = instanceCreators.get(type);
-      Object result = creator.createInstance(type);
-      graph.nextCreate.value = result;
-      graph.nextCreate = null;
-      return result;
-    }
-  }
-
-  static class Graph {
-    /**
-     * The graph elements. On serialization keys are objects (using an identity
-     * hash map) and on deserialization keys are the string names (using a
-     * standard hash map).
-     */
-    private final Map<Object, Element<?>> map;
-
-    /**
-     * The queue of elements to write during serialization. Unused during
-     * deserialization.
-     */
-    private final Queue<Element> queue = new LinkedList<Element>();
-
-    /**
-     * The instance currently being deserialized. Used as a backdoor between
-     * the graph traversal (which needs to know instances) and instance creators
-     * which create them.
-     */
-    private Element nextCreate;
-
-    private Graph(Map<Object, Element<?>> map) {
-      this.map = map;
-    }
-
-    /**
-     * Returns a unique name for an element to be inserted into the graph.
-     */
-    public String nextName() {
-      return "0x" + Integer.toHexString(map.size() + 1);
-    }
-  }
-
-  /**
-   * An element of the graph during serialization or deserialization.
-   */
-  static class Element<T> {
-    /**
-     * This element's name in the top level graph object.
-     */
-    private final String id;
-
-    /**
-     * The value if known. During deserialization this is lazily populated.
-     */
-    private T value;
-
-    /**
-     * This element's type adapter if known. During deserialization this is
-     * lazily populated.
-     */
-    private TypeAdapter<T> typeAdapter;
-
-    /**
-     * The element to deserialize. Unused in serialization.
-     */
-    private final JsonElement element;
-
-    Element(T value, String id, TypeAdapter<T> typeAdapter, JsonElement element) {
-      this.value = value;
-      this.id = id;
-      this.typeAdapter = typeAdapter;
-      this.element = element;
-    }
-
-    void write(JsonWriter out) throws IOException {
-      typeAdapter.write(out, value);
-    }
-
-    void read(Graph graph) throws IOException {
-      if (graph.nextCreate != null) {
-        throw new IllegalStateException("Unexpected recursive call to read() for " + id);
-      }
-      graph.nextCreate = this;
-      value = typeAdapter.fromJsonTree(element);
-      if (value == null) {
-        throw new IllegalStateException("non-null value deserialized to null: " + element);
-      }
-    }
-  }
-}
diff --git a/extras/src/main/java/com/google/gson/interceptors/Intercept.java b/extras/src/main/java/com/google/gson/interceptors/Intercept.java
deleted file mode 100644
index 0c4e9043f..000000000
--- a/extras/src/main/java/com/google/gson/interceptors/Intercept.java
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Copyright (C) 2012 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.interceptors;
-
-import java.lang.annotation.ElementType;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-import java.lang.annotation.Target;
-
-
-/**
- * Use this annotation to indicate various interceptors for class instances after
- * they have been processed by Gson. For example, you can use it to validate an instance
- * after it has been deserialized from Json.
- * Here is an example of how this annotation is used:
- * <p>Here is an example of how this annotation is used:
- * <p><pre>
- * &#64Intercept(postDeserialize=UserValidator.class)
- * public class User {
- *   String name;
- *   String password;
- *   String emailAddress;
- * }
- *
- * public class UserValidator implements JsonPostDeserializer&lt;User&gt; {
- *   public void postDeserialize(User user) {
- *     // Do some checks on user
- *     if (user.name == null || user.password == null) {
- *       throw new JsonParseException("name and password are required fields.");
- *     }
- *     if (user.emailAddress == null) {
- *       emailAddress = "unknown"; // assign a default value.
- *     }
- *   }
- * }
- * </pre></p>
- *
- * @author Inderjeet Singh
- */
-@Retention(RetentionPolicy.RUNTIME)
-@Target(ElementType.TYPE)
-public @interface Intercept {
-
-  /**
-   * Specify the class that provides the methods that should be invoked after an instance
-   * has been deserialized.
-   */
-  @SuppressWarnings("rawtypes")
-  public Class<? extends JsonPostDeserializer> postDeserialize();
-}
diff --git a/extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java b/extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java
deleted file mode 100644
index 907fca3a4..000000000
--- a/extras/src/main/java/com/google/gson/interceptors/InterceptorFactory.java
+++ /dev/null
@@ -1,49 +0,0 @@
-package com.google.gson.interceptors;
-
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-import java.io.IOException;
-
-/**
- * A type adapter factory that implements {@code @Intercept}.
- */
-public final class InterceptorFactory implements TypeAdapterFactory {
-  public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
-    Intercept intercept = type.getRawType().getAnnotation(Intercept.class);
-    if (intercept == null) {
-      return null;
-    }
-
-    TypeAdapter<T> delegate = gson.getDelegateAdapter(this, type);
-    return new InterceptorAdapter<T>(delegate, intercept);
-  }
-
-  static class InterceptorAdapter<T> extends TypeAdapter<T> {
-    private final TypeAdapter<T> delegate;
-    private final JsonPostDeserializer<T> postDeserializer;
-
-    @SuppressWarnings("unchecked") // ?
-    public InterceptorAdapter(TypeAdapter<T> delegate, Intercept intercept) {
-      try {
-        this.delegate = delegate;
-        this.postDeserializer = intercept.postDeserialize().newInstance();
-      } catch (Exception e) {
-        throw new RuntimeException(e);
-      }
-    }
-
-    @Override public void write(JsonWriter out, T value) throws IOException {
-      delegate.write(out, value);
-    }
-
-    @Override public T read(JsonReader in) throws IOException {
-      T result = delegate.read(in);
-      postDeserializer.postDeserialize(result);
-      return result;
-    }
-  }
-}
diff --git a/extras/src/main/java/com/google/gson/interceptors/JsonPostDeserializer.java b/extras/src/main/java/com/google/gson/interceptors/JsonPostDeserializer.java
deleted file mode 100644
index 0f3a72ca8..000000000
--- a/extras/src/main/java/com/google/gson/interceptors/JsonPostDeserializer.java
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * Copyright (C) 2012 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.interceptors;
-
-import com.google.gson.InstanceCreator;
-
-/**
- * This interface is implemented by a class that wishes to inspect or modify an object
- * after it has been deserialized. You must define a no-args constructor or register an
- * {@link InstanceCreator} for such a class.
- *
- * @author Inderjeet Singh
- */
-public interface JsonPostDeserializer<T> {
-
-  /**
-   * This method is called by Gson after the object has been deserialized from Json.
-   */
-  public void postDeserialize(T object);
-}
diff --git a/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java b/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java
deleted file mode 100644
index f9ee32b4a..000000000
--- a/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java
+++ /dev/null
@@ -1,240 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.typeadapters;
-
-import java.io.IOException;
-import java.util.LinkedHashMap;
-import java.util.Map;
-
-import com.google.gson.Gson;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
-import com.google.gson.TypeAdapter;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.internal.Streams;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-/**
- * Adapts values whose runtime type may differ from their declaration type. This
- * is necessary when a field's type is not the same type that GSON should create
- * when deserializing that field. For example, consider these types:
- * <pre>   {@code
- *   abstract class Shape {
- *     int x;
- *     int y;
- *   }
- *   class Circle extends Shape {
- *     int radius;
- *   }
- *   class Rectangle extends Shape {
- *     int width;
- *     int height;
- *   }
- *   class Diamond extends Shape {
- *     int width;
- *     int height;
- *   }
- *   class Drawing {
- *     Shape bottomShape;
- *     Shape topShape;
- *   }
- * }</pre>
- * <p>Without additional type information, the serialized JSON is ambiguous. Is
- * the bottom shape in this drawing a rectangle or a diamond? <pre>   {@code
- *   {
- *     "bottomShape": {
- *       "width": 10,
- *       "height": 5,
- *       "x": 0,
- *       "y": 0
- *     },
- *     "topShape": {
- *       "radius": 2,
- *       "x": 4,
- *       "y": 1
- *     }
- *   }}</pre>
- * This class addresses this problem by adding type information to the
- * serialized JSON and honoring that type information when the JSON is
- * deserialized: <pre>   {@code
- *   {
- *     "bottomShape": {
- *       "type": "Diamond",
- *       "width": 10,
- *       "height": 5,
- *       "x": 0,
- *       "y": 0
- *     },
- *     "topShape": {
- *       "type": "Circle",
- *       "radius": 2,
- *       "x": 4,
- *       "y": 1
- *     }
- *   }}</pre>
- * Both the type field name ({@code "type"}) and the type labels ({@code
- * "Rectangle"}) are configurable.
- *
- * <h3>Registering Types</h3>
- * Create a {@code RuntimeTypeAdapterFactory} by passing the base type and type field
- * name to the {@link #of} factory method. If you don't supply an explicit type
- * field name, {@code "type"} will be used. <pre>   {@code
- *   RuntimeTypeAdapterFactory<Shape> shapeAdapter
- *       = RuntimeTypeAdapterFactory.of(Shape.class, "type");
- * }</pre>
- * Next register all of your subtypes. Every subtype must be explicitly
- * registered. This protects your application from injection attacks. If you
- * don't supply an explicit type label, the type's simple name will be used.
- * <pre>   {@code
- *   shapeAdapter.registerSubtype(Rectangle.class, "Rectangle");
- *   shapeAdapter.registerSubtype(Circle.class, "Circle");
- *   shapeAdapter.registerSubtype(Diamond.class, "Diamond");
- * }</pre>
- * Finally, register the type adapter in your application's GSON builder:
- * <pre>   {@code
- *   Gson gson = new GsonBuilder()
- *       .registerTypeAdapter(Shape.class, shapeAdapter)
- *       .create();
- * }</pre>
- * Like {@code GsonBuilder}, this API supports chaining: <pre>   {@code
- *   RuntimeTypeAdapterFactory<Shape> shapeAdapter = RuntimeTypeAdapterFactory.of(Shape.class)
- *       .registerSubtype(Rectangle.class)
- *       .registerSubtype(Circle.class)
- *       .registerSubtype(Diamond.class);
- * }</pre>
- */
-public final class RuntimeTypeAdapterFactory<T> implements TypeAdapterFactory {
-  private final Class<?> baseType;
-  private final String typeFieldName;
-  private final Map<String, Class<?>> labelToSubtype = new LinkedHashMap<String, Class<?>>();
-  private final Map<Class<?>, String> subtypeToLabel = new LinkedHashMap<Class<?>, String>();
-
-  private RuntimeTypeAdapterFactory(Class<?> baseType, String typeFieldName) {
-    if (typeFieldName == null || baseType == null) {
-      throw new NullPointerException();
-    }
-    this.baseType = baseType;
-    this.typeFieldName = typeFieldName;
-  }
-
-  /**
-   * Creates a new runtime type adapter using for {@code baseType} using {@code
-   * typeFieldName} as the type field name. Type field names are case sensitive.
-   */
-  public static <T> RuntimeTypeAdapterFactory<T> of(Class<T> baseType, String typeFieldName) {
-    return new RuntimeTypeAdapterFactory<T>(baseType, typeFieldName);
-  }
-
-  /**
-   * Creates a new runtime type adapter for {@code baseType} using {@code "type"} as
-   * the type field name.
-   */
-  public static <T> RuntimeTypeAdapterFactory<T> of(Class<T> baseType) {
-    return new RuntimeTypeAdapterFactory<T>(baseType, "type");
-  }
-
-  /**
-   * Registers {@code type} identified by {@code label}. Labels are case
-   * sensitive.
-   *
-   * @throws IllegalArgumentException if either {@code type} or {@code label}
-   *     have already been registered on this type adapter.
-   */
-  public RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type, String label) {
-    if (type == null || label == null) {
-      throw new NullPointerException();
-    }
-    if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {
-      throw new IllegalArgumentException("types and labels must be unique");
-    }
-    labelToSubtype.put(label, type);
-    subtypeToLabel.put(type, label);
-    return this;
-  }
-
-  /**
-   * Registers {@code type} identified by its {@link Class#getSimpleName simple
-   * name}. Labels are case sensitive.
-   *
-   * @throws IllegalArgumentException if either {@code type} or its simple name
-   *     have already been registered on this type adapter.
-   */
-  public RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type) {
-    return registerSubtype(type, type.getSimpleName());
-  }
-
-  public <R> TypeAdapter<R> create(Gson gson, TypeToken<R> type) {
-    if (type.getRawType() != baseType) {
-      return null;
-    }
-
-    final Map<String, TypeAdapter<?>> labelToDelegate
-        = new LinkedHashMap<String, TypeAdapter<?>>();
-    final Map<Class<?>, TypeAdapter<?>> subtypeToDelegate
-        = new LinkedHashMap<Class<?>, TypeAdapter<?>>();
-    for (Map.Entry<String, Class<?>> entry : labelToSubtype.entrySet()) {
-      TypeAdapter<?> delegate = gson.getDelegateAdapter(this, TypeToken.get(entry.getValue()));
-      labelToDelegate.put(entry.getKey(), delegate);
-      subtypeToDelegate.put(entry.getValue(), delegate);
-    }
-
-    return new TypeAdapter<R>() {
-      @Override public R read(JsonReader in) throws IOException {
-        JsonElement jsonElement = Streams.parse(in);
-        JsonElement labelJsonElement = jsonElement.getAsJsonObject().remove(typeFieldName);
-        if (labelJsonElement == null) {
-          throw new JsonParseException("cannot deserialize " + baseType
-              + " because it does not define a field named " + typeFieldName);
-        }
-        String label = labelJsonElement.getAsString();
-        @SuppressWarnings("unchecked") // registration requires that subtype extends T
-        TypeAdapter<R> delegate = (TypeAdapter<R>) labelToDelegate.get(label);
-        if (delegate == null) {
-          throw new JsonParseException("cannot deserialize " + baseType + " subtype named "
-              + label + "; did you forget to register a subtype?");
-        }
-        return delegate.fromJsonTree(jsonElement);
-      }
-
-      @Override public void write(JsonWriter out, R value) throws IOException {
-        Class<?> srcType = value.getClass();
-        String label = subtypeToLabel.get(srcType);
-        @SuppressWarnings("unchecked") // registration requires that subtype extends T
-        TypeAdapter<R> delegate = (TypeAdapter<R>) subtypeToDelegate.get(srcType);
-        if (delegate == null) {
-          throw new JsonParseException("cannot serialize " + srcType.getName()
-              + "; did you forget to register a subtype?");
-        }
-        JsonObject jsonObject = delegate.toJsonTree(value).getAsJsonObject();
-        if (jsonObject.has(typeFieldName)) {
-          throw new JsonParseException("cannot serialize " + srcType.getName()
-              + " because it already defines a field named " + typeFieldName);
-        }
-        JsonObject clone = new JsonObject();
-        clone.add(typeFieldName, new JsonPrimitive(label));
-        for (Map.Entry<String, JsonElement> e : jsonObject.entrySet()) {
-          clone.add(e.getKey(), e.getValue());
-        }
-        Streams.write(clone, out);
-      }
-    }.nullSafe();
-  }
-}
diff --git a/extras/src/main/java/com/google/gson/typeadapters/UtcDateTypeAdapter.java b/extras/src/main/java/com/google/gson/typeadapters/UtcDateTypeAdapter.java
deleted file mode 100644
index 5e8c0ccee..000000000
--- a/extras/src/main/java/com/google/gson/typeadapters/UtcDateTypeAdapter.java
+++ /dev/null
@@ -1,282 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.typeadapters;
-
-import java.io.IOException;
-import java.text.ParseException;
-import java.text.ParsePosition;
-import java.util.Calendar;
-import java.util.Date;
-import java.util.GregorianCalendar;
-import java.util.Locale;
-import java.util.TimeZone;
-
-import com.google.gson.JsonParseException;
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-public final class UtcDateTypeAdapter extends TypeAdapter<Date> {
-  private final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("UTC");
-
-  @Override
-  public void write(JsonWriter out, Date date) throws IOException {
-    if (date == null) {
-      out.nullValue();
-    } else {
-      String value = format(date, true, UTC_TIME_ZONE);
-      out.value(value);
-    }
-  }
-
-  @Override
-  public Date read(JsonReader in) throws IOException {
-    try {
-      switch (in.peek()) {
-      case NULL:
-        in.nextNull();
-        return null;
-      default:
-        String date = in.nextString();
-        // Instead of using iso8601Format.parse(value), we use Jackson's date parsing
-        // This is because Android doesn't support XXX because it is JDK 1.6
-        return parse(date, new ParsePosition(0));
-      }
-    } catch (ParseException e) {
-      throw new JsonParseException(e);
-    }
-  }
-
-  // Date parsing code from Jackson databind ISO8601Utils.java
-  // https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java
-  private static final String GMT_ID = "GMT";
-
-  /**
-   * Format date into yyyy-MM-ddThh:mm:ss[.sss][Z|[+-]hh:mm]
-   *
-   * @param date the date to format
-   * @param millis true to include millis precision otherwise false
-   * @param tz timezone to use for the formatting (GMT will produce 'Z')
-   * @return the date formatted as yyyy-MM-ddThh:mm:ss[.sss][Z|[+-]hh:mm]
-   */
-  private static String format(Date date, boolean millis, TimeZone tz) {
-      Calendar calendar = new GregorianCalendar(tz, Locale.US);
-      calendar.setTime(date);
-
-      // estimate capacity of buffer as close as we can (yeah, that's pedantic ;)
-      int capacity = "yyyy-MM-ddThh:mm:ss".length();
-      capacity += millis ? ".sss".length() : 0;
-      capacity += tz.getRawOffset() == 0 ? "Z".length() : "+hh:mm".length();
-      StringBuilder formatted = new StringBuilder(capacity);
-
-      padInt(formatted, calendar.get(Calendar.YEAR), "yyyy".length());
-      formatted.append('-');
-      padInt(formatted, calendar.get(Calendar.MONTH) + 1, "MM".length());
-      formatted.append('-');
-      padInt(formatted, calendar.get(Calendar.DAY_OF_MONTH), "dd".length());
-      formatted.append('T');
-      padInt(formatted, calendar.get(Calendar.HOUR_OF_DAY), "hh".length());
-      formatted.append(':');
-      padInt(formatted, calendar.get(Calendar.MINUTE), "mm".length());
-      formatted.append(':');
-      padInt(formatted, calendar.get(Calendar.SECOND), "ss".length());
-      if (millis) {
-          formatted.append('.');
-          padInt(formatted, calendar.get(Calendar.MILLISECOND), "sss".length());
-      }
-
-      int offset = tz.getOffset(calendar.getTimeInMillis());
-      if (offset != 0) {
-          int hours = Math.abs((offset / (60 * 1000)) / 60);
-          int minutes = Math.abs((offset / (60 * 1000)) % 60);
-          formatted.append(offset < 0 ? '-' : '+');
-          padInt(formatted, hours, "hh".length());
-          formatted.append(':');
-          padInt(formatted, minutes, "mm".length());
-      } else {
-          formatted.append('Z');
-      }
-
-      return formatted.toString();
-  }
-  /**
-   * Zero pad a number to a specified length
-   *
-   * @param buffer buffer to use for padding
-   * @param value the integer value to pad if necessary.
-   * @param length the length of the string we should zero pad
-   */
-  private static void padInt(StringBuilder buffer, int value, int length) {
-      String strValue = Integer.toString(value);
-      for (int i = length - strValue.length(); i > 0; i--) {
-          buffer.append('0');
-      }
-      buffer.append(strValue);
-  }
-
-  /**
-   * Parse a date from ISO-8601 formatted string. It expects a format
-   * [yyyy-MM-dd|yyyyMMdd][T(hh:mm[:ss[.sss]]|hhmm[ss[.sss]])]?[Z|[+-]hh:mm]]
-   *
-   * @param date ISO string to parse in the appropriate format.
-   * @param pos The position to start parsing from, updated to where parsing stopped.
-   * @return the parsed date
-   * @throws ParseException if the date is not in the appropriate format
-   */
-  private static Date parse(String date, ParsePosition pos) throws ParseException {
-    Exception fail = null;
-    try {
-      int offset = pos.getIndex();
-
-      // extract year
-      int year = parseInt(date, offset, offset += 4);
-      if (checkOffset(date, offset, '-')) {
-        offset += 1;
-      }
-
-      // extract month
-      int month = parseInt(date, offset, offset += 2);
-      if (checkOffset(date, offset, '-')) {
-        offset += 1;
-      }
-
-      // extract day
-      int day = parseInt(date, offset, offset += 2);
-      // default time value
-      int hour = 0;
-      int minutes = 0;
-      int seconds = 0;
-      int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time
-      if (checkOffset(date, offset, 'T')) {
-
-        // extract hours, minutes, seconds and milliseconds
-        hour = parseInt(date, offset += 1, offset += 2);
-        if (checkOffset(date, offset, ':')) {
-          offset += 1;
-        }
-
-        minutes = parseInt(date, offset, offset += 2);
-        if (checkOffset(date, offset, ':')) {
-          offset += 1;
-        }
-        // second and milliseconds can be optional
-        if (date.length() > offset) {
-          char c = date.charAt(offset);
-          if (c != 'Z' && c != '+' && c != '-') {
-            seconds = parseInt(date, offset, offset += 2);
-            // milliseconds can be optional in the format
-            if (checkOffset(date, offset, '.')) {
-              milliseconds = parseInt(date, offset += 1, offset += 3);
-            }
-          }
-        }
-      }
-
-      // extract timezone
-      String timezoneId;
-      if (date.length() <= offset) {
-        throw new IllegalArgumentException("No time zone indicator");
-      }
-      char timezoneIndicator = date.charAt(offset);
-      if (timezoneIndicator == '+' || timezoneIndicator == '-') {
-        String timezoneOffset = date.substring(offset);
-        timezoneId = GMT_ID + timezoneOffset;
-        offset += timezoneOffset.length();
-      } else if (timezoneIndicator == 'Z') {
-        timezoneId = GMT_ID;
-        offset += 1;
-      } else {
-        throw new IndexOutOfBoundsException("Invalid time zone indicator " + timezoneIndicator);
-      }
-
-      TimeZone timezone = TimeZone.getTimeZone(timezoneId);
-      if (!timezone.getID().equals(timezoneId)) {
-        throw new IndexOutOfBoundsException();
-      }
-
-      Calendar calendar = new GregorianCalendar(timezone);
-      calendar.setLenient(false);
-      calendar.set(Calendar.YEAR, year);
-      calendar.set(Calendar.MONTH, month - 1);
-      calendar.set(Calendar.DAY_OF_MONTH, day);
-      calendar.set(Calendar.HOUR_OF_DAY, hour);
-      calendar.set(Calendar.MINUTE, minutes);
-      calendar.set(Calendar.SECOND, seconds);
-      calendar.set(Calendar.MILLISECOND, milliseconds);
-
-      pos.setIndex(offset);
-      return calendar.getTime();
-      // If we get a ParseException it'll already have the right message/offset.
-      // Other exception types can convert here.
-    } catch (IndexOutOfBoundsException e) {
-      fail = e;
-    } catch (NumberFormatException e) {
-      fail = e;
-    } catch (IllegalArgumentException e) {
-      fail = e;
-    }
-    String input = (date == null) ? null : ('"' + date + "'");
-    throw new ParseException("Failed to parse date [" + input + "]: " + fail.getMessage(), pos.getIndex());
-  }
-
-  /**
-   * Check if the expected character exist at the given offset in the value.
-   *
-   * @param value the string to check at the specified offset
-   * @param offset the offset to look for the expected character
-   * @param expected the expected character
-   * @return true if the expected character exist at the given offset
-   */
-  private static boolean checkOffset(String value, int offset, char expected) {
-    return (offset < value.length()) && (value.charAt(offset) == expected);
-  }
-
-  /**
-   * Parse an integer located between 2 given offsets in a string
-   *
-   * @param value the string to parse
-   * @param beginIndex the start index for the integer in the string
-   * @param endIndex the end index for the integer in the string
-   * @return the int
-   * @throws NumberFormatException if the value is not a number
-   */
-  private static int parseInt(String value, int beginIndex, int endIndex) throws NumberFormatException {
-    if (beginIndex < 0 || endIndex > value.length() || beginIndex > endIndex) {
-      throw new NumberFormatException(value);
-    }
-    // use same logic as in Integer.parseInt() but less generic we're not supporting negative values
-    int i = beginIndex;
-    int result = 0;
-    int digit;
-    if (i < endIndex) {
-      digit = Character.digit(value.charAt(i++), 10);
-      if (digit < 0) {
-        throw new NumberFormatException("Invalid number: " + value);
-      }
-      result = -digit;
-    }
-    while (i < endIndex) {
-      digit = Character.digit(value.charAt(i++), 10);
-      if (digit < 0) {
-        throw new NumberFormatException("Invalid number: " + value);
-      }
-      result *= 10;
-      result -= digit;
-    }
-    return -result;
-  }
-}
diff --git a/extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java b/extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java
deleted file mode 100644
index 8a1d7cdbf..000000000
--- a/extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java
+++ /dev/null
@@ -1,197 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.graph;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.reflect.TypeToken;
-import java.lang.reflect.Type;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import junit.framework.TestCase;
-
-public final class GraphAdapterBuilderTest extends TestCase {
-  public void testSerialization() {
-    Roshambo rock = new Roshambo("ROCK");
-    Roshambo scissors = new Roshambo("SCISSORS");
-    Roshambo paper = new Roshambo("PAPER");
-    rock.beats = scissors;
-    scissors.beats = paper;
-    paper.beats = rock;
-
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(Roshambo.class)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    assertEquals("{'0x1':{'name':'ROCK','beats':'0x2'}," +
-        "'0x2':{'name':'SCISSORS','beats':'0x3'}," +
-        "'0x3':{'name':'PAPER','beats':'0x1'}}",
-        gson.toJson(rock).replace('"', '\''));
-  }
-
-  public void testDeserialization() {
-    String json = "{'0x1':{'name':'ROCK','beats':'0x2'}," +
-        "'0x2':{'name':'SCISSORS','beats':'0x3'}," +
-        "'0x3':{'name':'PAPER','beats':'0x1'}}";
-
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(Roshambo.class)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    Roshambo rock = gson.fromJson(json, Roshambo.class);
-    assertEquals("ROCK", rock.name);
-    Roshambo scissors = rock.beats;
-    assertEquals("SCISSORS", scissors.name);
-    Roshambo paper = scissors.beats;
-    assertEquals("PAPER", paper.name);
-    assertSame(rock, paper.beats);
-  }
-
-  public void testSerializationDirectSelfReference() {
-    Roshambo suicide = new Roshambo("SUICIDE");
-    suicide.beats = suicide;
-
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(Roshambo.class)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    assertEquals("{'0x1':{'name':'SUICIDE','beats':'0x1'}}",
-        gson.toJson(suicide).replace('"', '\''));
-  }
-
-  public void testDeserializationDirectSelfReference() {
-    String json = "{'0x1':{'name':'SUICIDE','beats':'0x1'}}";
-
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(Roshambo.class)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    Roshambo suicide = gson.fromJson(json, Roshambo.class);
-    assertEquals("SUICIDE", suicide.name);
-    assertSame(suicide, suicide.beats);
-  }
-
-  public void testSerializeListOfLists() {
-    Type listOfListsType = new TypeToken<List<List<?>>>() {}.getType();
-    Type listOfAnyType = new TypeToken<List<?>>() {}.getType();
-
-    List<List<?>> listOfLists = new ArrayList<List<?>>();
-    listOfLists.add(listOfLists);
-    listOfLists.add(new ArrayList<Object>());
-
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(listOfListsType)
-        .addType(listOfAnyType)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    String json = gson.toJson(listOfLists, listOfListsType);
-    assertEquals("{'0x1':['0x1','0x2'],'0x2':[]}", json.replace('"', '\''));
-  }
-
-  public void testDeserializeListOfLists() {
-    Type listOfAnyType = new TypeToken<List<?>>() {}.getType();
-    Type listOfListsType = new TypeToken<List<List<?>>>() {}.getType();
-
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(listOfListsType)
-        .addType(listOfAnyType)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    List<List<?>> listOfLists = gson.fromJson("{'0x1':['0x1','0x2'],'0x2':[]}", listOfListsType);
-    assertEquals(2, listOfLists.size());
-    assertSame(listOfLists, listOfLists.get(0));
-    assertEquals(Collections.emptyList(), listOfLists.get(1));
-  }
-
-  public void testSerializationWithMultipleTypes() {
-    Company google = new Company("Google");
-    new Employee("Jesse", google);
-    new Employee("Joel", google);
-
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(Company.class)
-        .addType(Employee.class)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    assertEquals("{'0x1':{'name':'Google','employees':['0x2','0x3']},"
-        + "'0x2':{'name':'Jesse','company':'0x1'},"
-        + "'0x3':{'name':'Joel','company':'0x1'}}",
-        gson.toJson(google).replace('"', '\''));
-  }
-
-  public void testDeserializationWithMultipleTypes() {
-    GsonBuilder gsonBuilder = new GsonBuilder();
-    new GraphAdapterBuilder()
-        .addType(Company.class)
-        .addType(Employee.class)
-        .registerOn(gsonBuilder);
-    Gson gson = gsonBuilder.create();
-
-    String json = "{'0x1':{'name':'Google','employees':['0x2','0x3']},"
-        + "'0x2':{'name':'Jesse','company':'0x1'},"
-        + "'0x3':{'name':'Joel','company':'0x1'}}";
-    Company company = gson.fromJson(json, Company.class);
-    assertEquals("Google", company.name);
-    Employee jesse = company.employees.get(0);
-    assertEquals("Jesse", jesse.name);
-    assertEquals(company, jesse.company);
-    Employee joel = company.employees.get(1);
-    assertEquals("Joel", joel.name);
-    assertEquals(company, joel.company);
-  }
-
-  static class Roshambo {
-    String name;
-    Roshambo beats;
-    Roshambo(String name) {
-      this.name = name;
-    }
-  }
-
-  static class Employee {
-    final String name;
-    final Company company;
-    Employee(String name, Company company) {
-      this.name = name;
-      this.company = company;
-      this.company.employees.add(this);
-    }
-  }
-
-  static class Company {
-    final String name;
-    final List<Employee> employees = new ArrayList<Employee>();
-    Company(String name) {
-      this.name = name;
-    }
-  }
-}
diff --git a/extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java b/extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java
deleted file mode 100644
index 0aab6598c..000000000
--- a/extras/src/test/java/com/google/gson/interceptors/InterceptorTest.java
+++ /dev/null
@@ -1,171 +0,0 @@
-/*
- * Copyright (C) 2012 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.interceptors;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonSyntaxException;
-import com.google.gson.TypeAdapter;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-import java.io.IOException;
-import java.lang.reflect.Type;
-import java.util.Collection;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link Intercept} and {@link JsonPostDeserializer}.
- *
- * @author Inderjeet Singh
- */
-public final class InterceptorTest extends TestCase {
-
-  private Gson gson;
-
-  @Override
-  public void setUp() throws Exception {
-    super.setUp();
-    this.gson = new GsonBuilder()
-        .registerTypeAdapterFactory(new InterceptorFactory())
-        .enableComplexMapKeySerialization()
-        .create();
-  }
-
-  public void testExceptionsPropagated() {
-    try {
-      gson.fromJson("{}", User.class);
-      fail();
-    } catch (JsonParseException expected) {}
-  }
-
-  public void testTopLevelClass() {
-    User user = gson.fromJson("{name:'bob',password:'pwd'}", User.class);
-    assertEquals(User.DEFAULT_EMAIL, user.email);
-  }
-
-  public void testList() {
-    List<User> list = gson.fromJson("[{name:'bob',password:'pwd'}]", new TypeToken<List<User>>(){}.getType());
-    User user = list.get(0);
-    assertEquals(User.DEFAULT_EMAIL, user.email);
-  }
-
-  public void testCollection() {
-    Collection<User> list = gson.fromJson("[{name:'bob',password:'pwd'}]", new TypeToken<Collection<User>>(){}.getType());
-    User user = list.iterator().next();
-    assertEquals(User.DEFAULT_EMAIL, user.email);
-  }
-
-  public void testMapKeyAndValues() {
-    Type mapType = new TypeToken<Map<User, Address>>(){}.getType();
-    try {
-      gson.fromJson("[[{name:'bob',password:'pwd'},{}]]", mapType);
-      fail();
-    } catch (JsonSyntaxException expected) {}
-    Map<User, Address> map = gson.fromJson("[[{name:'bob',password:'pwd'},{city:'Mountain View',state:'CA',zip:'94043'}]]",
-        mapType);
-    Entry<User, Address> entry = map.entrySet().iterator().next();
-    assertEquals(User.DEFAULT_EMAIL, entry.getKey().email);
-    assertEquals(Address.DEFAULT_FIRST_LINE, entry.getValue().firstLine);
-  }
-
-  public void testField() {
-    UserGroup userGroup = gson.fromJson("{user:{name:'bob',password:'pwd'}}", UserGroup.class);
-    assertEquals(User.DEFAULT_EMAIL, userGroup.user.email);
-  }
-
-  public void testCustomTypeAdapter() {
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapter(User.class, new TypeAdapter<User>() {
-          @Override public void write(JsonWriter out, User value) throws IOException {
-            throw new UnsupportedOperationException();
-          }
-
-          @Override public User read(JsonReader in) throws IOException {
-            in.beginObject();
-            in.nextName();
-            String name = in.nextString();
-            in.nextName();
-            String password = in.nextString();
-            in.endObject();
-            return new User(name, password);
-          }
-        })
-        .registerTypeAdapterFactory(new InterceptorFactory())
-        .create();
-    UserGroup userGroup = gson.fromJson("{user:{name:'bob',password:'pwd'}}", UserGroup.class);
-    assertEquals(User.DEFAULT_EMAIL, userGroup.user.email);
-  }
-
-  public void testDirectInvocationOfTypeAdapter() throws Exception {
-    TypeAdapter<UserGroup> adapter = gson.getAdapter(UserGroup.class);
-    UserGroup userGroup = adapter.fromJson("{\"user\":{\"name\":\"bob\",\"password\":\"pwd\"}}");
-    assertEquals(User.DEFAULT_EMAIL, userGroup.user.email);
-  }
-
-  @SuppressWarnings("unused")
-  private static final class UserGroup {
-    User user;
-    String city;
-  }
-
-  @Intercept(postDeserialize = UserValidator.class)
-  @SuppressWarnings("unused")
-  private static final class User {
-    static final String DEFAULT_EMAIL = "invalid@invalid.com";
-    String name;
-    String password;
-    String email;
-    Address address;
-    public User(String name, String password) {
-      this.name = name;
-      this.password = password;
-    }
-  }
-
-  public static final class UserValidator implements JsonPostDeserializer<User> {
-    public void postDeserialize(User user) {
-      if (user.name == null || user.password == null) {
-        throw new JsonSyntaxException("name and password are required fields.");
-      }
-      if (user.email == null) user.email = User.DEFAULT_EMAIL;
-    }
-  }
-
-  @Intercept(postDeserialize = AddressValidator.class)
-  @SuppressWarnings("unused")
-  private static final class Address {
-    static final String DEFAULT_FIRST_LINE = "unknown";
-    String firstLine;
-    String secondLine;
-    String city;
-    String state;
-    String zip;
-  }
-
-  public static final class AddressValidator implements JsonPostDeserializer<Address> {
-    public void postDeserialize(Address address) {
-      if (address.city == null || address.state == null || address.zip == null) {
-        throw new JsonSyntaxException("Address city, state and zip are required fields.");
-      }
-      if (address.firstLine == null) address.firstLine = Address.DEFAULT_FIRST_LINE;
-    }
-  }
-}
diff --git a/extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java b/extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java
deleted file mode 100644
index 8c62bef7f..000000000
--- a/extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java
+++ /dev/null
@@ -1,211 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.typeadapters;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonParseException;
-import com.google.gson.TypeAdapterFactory;
-import junit.framework.TestCase;
-
-public final class RuntimeTypeAdapterFactoryTest extends TestCase {
-
-  public void testRuntimeTypeAdapter() {
-    RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
-        BillingInstrument.class)
-        .registerSubtype(CreditCard.class);
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapterFactory(rta)
-        .create();
-
-    CreditCard original = new CreditCard("Jesse", 234);
-    assertEquals("{\"type\":\"CreditCard\",\"cvv\":234,\"ownerName\":\"Jesse\"}",
-        gson.toJson(original, BillingInstrument.class));
-    BillingInstrument deserialized = gson.fromJson(
-        "{type:'CreditCard',cvv:234,ownerName:'Jesse'}", BillingInstrument.class);
-    assertEquals("Jesse", deserialized.ownerName);
-    assertTrue(deserialized instanceof CreditCard);
-  }
-
-  public void testRuntimeTypeIsBaseType() {
-    TypeAdapterFactory rta = RuntimeTypeAdapterFactory.of(
-        BillingInstrument.class)
-        .registerSubtype(BillingInstrument.class);
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapterFactory(rta)
-        .create();
-
-    BillingInstrument original = new BillingInstrument("Jesse");
-    assertEquals("{\"type\":\"BillingInstrument\",\"ownerName\":\"Jesse\"}",
-        gson.toJson(original, BillingInstrument.class));
-    BillingInstrument deserialized = gson.fromJson(
-        "{type:'BillingInstrument',ownerName:'Jesse'}", BillingInstrument.class);
-    assertEquals("Jesse", deserialized.ownerName);
-  }
-
-  public void testNullBaseType() {
-    try {
-      RuntimeTypeAdapterFactory.of(null);
-      fail();
-    } catch (NullPointerException expected) {
-    }
-  }
-
-  public void testNullTypeFieldName() {
-    try {
-      RuntimeTypeAdapterFactory.of(BillingInstrument.class, null);
-      fail();
-    } catch (NullPointerException expected) {
-    }
-  }
-
-  public void testNullSubtype() {
-    RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
-        BillingInstrument.class);
-    try {
-      rta.registerSubtype(null);
-      fail();
-    } catch (NullPointerException expected) {
-    }
-  }
-
-  public void testNullLabel() {
-    RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
-        BillingInstrument.class);
-    try {
-      rta.registerSubtype(CreditCard.class, null);
-      fail();
-    } catch (NullPointerException expected) {
-    }
-  }
-
-  public void testDuplicateSubtype() {
-    RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
-        BillingInstrument.class);
-    rta.registerSubtype(CreditCard.class, "CC");
-    try {
-      rta.registerSubtype(CreditCard.class, "Visa");
-      fail();
-    } catch (IllegalArgumentException expected) {
-    }
-  }
-
-  public void testDuplicateLabel() {
-    RuntimeTypeAdapterFactory<BillingInstrument> rta = RuntimeTypeAdapterFactory.of(
-        BillingInstrument.class);
-    rta.registerSubtype(CreditCard.class, "CC");
-    try {
-      rta.registerSubtype(BankTransfer.class, "CC");
-      fail();
-    } catch (IllegalArgumentException expected) {
-    }
-  }
-
-  public void testDeserializeMissingTypeField() {
-    TypeAdapterFactory billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
-        .registerSubtype(CreditCard.class);
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapterFactory(billingAdapter)
-        .create();
-    try {
-      gson.fromJson("{ownerName:'Jesse'}", BillingInstrument.class);
-      fail();
-    } catch (JsonParseException expected) {
-    }
-  }
-
-  public void testDeserializeMissingSubtype() {
-    TypeAdapterFactory billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
-        .registerSubtype(BankTransfer.class);
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapterFactory(billingAdapter)
-        .create();
-    try {
-      gson.fromJson("{type:'CreditCard',ownerName:'Jesse'}", BillingInstrument.class);
-      fail();
-    } catch (JsonParseException expected) {
-    }
-  }
-
-  public void testSerializeMissingSubtype() {
-    TypeAdapterFactory billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
-        .registerSubtype(BankTransfer.class);
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapterFactory(billingAdapter)
-        .create();
-    try {
-      gson.toJson(new CreditCard("Jesse", 456), BillingInstrument.class);
-      fail();
-    } catch (JsonParseException expected) {
-    }
-  }
-
-  public void testSerializeCollidingTypeFieldName() {
-    TypeAdapterFactory billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class, "cvv")
-        .registerSubtype(CreditCard.class);
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapterFactory(billingAdapter)
-        .create();
-    try {
-      gson.toJson(new CreditCard("Jesse", 456), BillingInstrument.class);
-      fail();
-    } catch (JsonParseException expected) {
-    }
-  }
-
-  public void testSerializeWrappedNullValue() {
-    TypeAdapterFactory billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
-        .registerSubtype(CreditCard.class)
-        .registerSubtype(BankTransfer.class);    
-    Gson gson = new GsonBuilder()
-        .registerTypeAdapterFactory(billingAdapter)
-        .create();    
-    String serialized = gson.toJson(new BillingInstrumentWrapper(null), BillingInstrumentWrapper.class);
-    BillingInstrumentWrapper deserialized = gson.fromJson(serialized, BillingInstrumentWrapper.class);
-    assertNull(deserialized.instrument);
-  }
-
-  static class BillingInstrumentWrapper {
-    BillingInstrument instrument;
-    BillingInstrumentWrapper(BillingInstrument instrument) {
-      this.instrument = instrument;
-    }
-  }
-
-  static class BillingInstrument {
-    private final String ownerName;
-    BillingInstrument(String ownerName) {
-      this.ownerName = ownerName;
-    }
-  }
-
-  static class CreditCard extends BillingInstrument {
-    int cvv;
-    CreditCard(String ownerName, int cvv) {
-      super(ownerName);
-      this.cvv = cvv;
-    }
-  }
-
-  static class BankTransfer extends BillingInstrument {
-    int bankAccount;
-    BankTransfer(String ownerName, int bankAccount) {
-      super(ownerName);
-      this.bankAccount = bankAccount;
-    }
-  }
-}
diff --git a/extras/src/test/java/com/google/gson/typeadapters/UtcDateTypeAdapterTest.java b/extras/src/test/java/com/google/gson/typeadapters/UtcDateTypeAdapterTest.java
deleted file mode 100644
index 902dc4774..000000000
--- a/extras/src/test/java/com/google/gson/typeadapters/UtcDateTypeAdapterTest.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.typeadapters;
-
-import java.text.SimpleDateFormat;
-import java.util.Calendar;
-import java.util.Date;
-import java.util.Locale;
-import java.util.TimeZone;
-
-import junit.framework.TestCase;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-
-public final class UtcDateTypeAdapterTest extends TestCase {
-  private final Gson gson = new GsonBuilder()
-    .registerTypeAdapter(Date.class, new UtcDateTypeAdapter())
-    .create();
-
-  public void testLocalTimeZone() {
-    Date expected = new Date();
-    String json = gson.toJson(expected);
-    Date actual = gson.fromJson(json, Date.class);
-    assertEquals(expected.getTime(), actual.getTime());
-  }
-
-  public void testDifferentTimeZones() {
-    for (String timeZone : TimeZone.getAvailableIDs()) {
-      Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(timeZone));
-      Date expected = cal.getTime();
-      String json = gson.toJson(expected);
-      // System.out.println(json + ": " + timeZone);
-      Date actual = gson.fromJson(json, Date.class);
-      assertEquals(expected.getTime(), actual.getTime());
-    }
-  }
-
-  /**
-   * JDK 1.7 introduced support for XXX format to indicate UTC date. But Android is older JDK.
-   * We want to make sure that this date is parseable in Android.
-   */
-  public void testUtcDatesOnJdkBefore1_7() {
-    Gson gson = new GsonBuilder()
-      .registerTypeAdapter(Date.class, new UtcDateTypeAdapter())
-      .create();
-    gson.fromJson("'2014-12-05T04:00:00.000Z'", Date.class);
-  }
-
-  public void testUtcWithJdk7Default() {
-    Date expected = new Date();
-    SimpleDateFormat iso8601Format = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX", Locale.US);
-    iso8601Format.setTimeZone(TimeZone.getTimeZone("UTC"));
-    String expectedJson = "\"" + iso8601Format.format(expected) + "\"";
-    String actualJson = gson.toJson(expected);
-    assertEquals(expectedJson, actualJson);
-    Date actual = gson.fromJson(expectedJson, Date.class);
-    assertEquals(expected.getTime(), actual.getTime());
-  }
-
-  public void testNullDateSerialization() {
-    String json = gson.toJson(null, Date.class);
-    assertEquals("null", json);
-  }
-}
diff --git a/gson/Gson 2.1 notes.txt b/gson/Gson 2.1 notes.txt
deleted file mode 100644
index def324ed8..000000000
--- a/gson/Gson 2.1 notes.txt	
+++ /dev/null
@@ -1,6 +0,0 @@
-Dropped support for GsonBuilder.registerTypeHierarchyAdapter+InstanceCreator
-
-Relax registerTypeHierarchyAdapter order
-Gson 2.0 failed if you registered Manager then Employee would fail
-Gson 2.1 it isn't a problem
-com.google.gson.functional.TypeHierarchyAdapterTest#testRegisterSubTypeFirstNotAllowed
\ No newline at end of file
diff --git a/gson/LICENSE b/gson/LICENSE
deleted file mode 100644
index 892eaed8f..000000000
--- a/gson/LICENSE
+++ /dev/null
@@ -1,203 +0,0 @@
-Google Gson
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright 2008-2011 Google Inc.
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/gson/README b/gson/README
deleted file mode 100644
index ebae78030..000000000
--- a/gson/README
+++ /dev/null
@@ -1,7 +0,0 @@
-Gson is a Java library that can be used to convert a Java object into its 
-JSON representation. It can also be used to convert a JSON string into an 
-equivalent Java object. Gson can work with arbitrary Java objects including 
-pre-existing objects that you do not have source-code of.
-
-Complete Gson documentation is available at its project page 
-https://github.com/google/gson
diff --git a/gson/assembly-descriptor.xml b/gson/assembly-descriptor.xml
deleted file mode 100644
index b734ee3aa..000000000
--- a/gson/assembly-descriptor.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<assembly>
-  <id>release</id>
-  <formats>
-    <format>zip</format>
-  </formats>
-  <fileSets>
-    <fileSet>
-      <includes>
-        <include>README*</include>
-        <include>LICENSE*</include>
-      </includes>
-    </fileSet>
-    <fileSet>
-      <directory>target</directory>
-      <outputDirectory></outputDirectory>
-      <includes>
-        <include>gson-*.jar</include>
-      </includes>
-    </fileSet>
-  </fileSets>
-</assembly>
\ No newline at end of file
diff --git a/gson/bnd.bnd b/gson/bnd.bnd
deleted file mode 100644
index c98fcfd3c..000000000
--- a/gson/bnd.bnd
+++ /dev/null
@@ -1,14 +0,0 @@
-Bundle-SymbolicName: com.google.gson
-Bundle-Name: ${project.name}
-Bundle-Description: ${project.description}
-Bundle-Vendor: Google Gson Project
-Bundle-ContactAddress: ${project.parent.url}
-Bundle-RequiredExecutionEnvironment: J2SE-1.5, JavaSE-1.6, JavaSE-1.7, JavaSE-1.8
-
--removeheaders: Private-Package
-
--exportcontents:\
-    com.google.gson,\
-    com.google.gson.annotations,\
-    com.google.gson.reflect,\
-    com.google.gson.stream
diff --git a/gson/docs/javadocs/allclasses-frame.html b/gson/docs/javadocs/allclasses-frame.html
deleted file mode 100644
index d6e484e65..000000000
--- a/gson/docs/javadocs/allclasses-frame.html
+++ /dev/null
@@ -1,98 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-All Classes (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-
-</HEAD>
-
-<BODY BGCOLOR="white">
-<FONT size="+1" CLASS="FrameHeadingFont">
-<B>All Classes</B></FONT>
-<BR>
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT CLASS="FrameItemFont"><A HREF="com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson" target="classFrame"><I>ExclusionStrategy</I></A>
-<BR>
-<A HREF="com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations" target="classFrame">Expose</A>
-<BR>
-<A HREF="com/google/gson/FieldAttributes.html" title="class in com.google.gson" target="classFrame">FieldAttributes</A>
-<BR>
-<A HREF="com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson" target="classFrame">FieldNamingPolicy</A>
-<BR>
-<A HREF="com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson" target="classFrame"><I>FieldNamingStrategy</I></A>
-<BR>
-<A HREF="com/google/gson/Gson.html" title="class in com.google.gson" target="classFrame">Gson</A>
-<BR>
-<A HREF="com/google/gson/GsonBuilder.html" title="class in com.google.gson" target="classFrame">GsonBuilder</A>
-<BR>
-<A HREF="com/google/gson/InstanceCreator.html" title="interface in com.google.gson" target="classFrame"><I>InstanceCreator</I></A>
-<BR>
-<A HREF="com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations" target="classFrame">JsonAdapter</A>
-<BR>
-<A HREF="com/google/gson/JsonArray.html" title="class in com.google.gson" target="classFrame">JsonArray</A>
-<BR>
-<A HREF="com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson" target="classFrame"><I>JsonDeserializationContext</I></A>
-<BR>
-<A HREF="com/google/gson/JsonDeserializer.html" title="interface in com.google.gson" target="classFrame"><I>JsonDeserializer</I></A>
-<BR>
-<A HREF="com/google/gson/JsonElement.html" title="class in com.google.gson" target="classFrame">JsonElement</A>
-<BR>
-<A HREF="com/google/gson/JsonIOException.html" title="class in com.google.gson" target="classFrame">JsonIOException</A>
-<BR>
-<A HREF="com/google/gson/JsonNull.html" title="class in com.google.gson" target="classFrame">JsonNull</A>
-<BR>
-<A HREF="com/google/gson/JsonObject.html" title="class in com.google.gson" target="classFrame">JsonObject</A>
-<BR>
-<A HREF="com/google/gson/JsonParseException.html" title="class in com.google.gson" target="classFrame">JsonParseException</A>
-<BR>
-<A HREF="com/google/gson/JsonParser.html" title="class in com.google.gson" target="classFrame">JsonParser</A>
-<BR>
-<A HREF="com/google/gson/JsonPrimitive.html" title="class in com.google.gson" target="classFrame">JsonPrimitive</A>
-<BR>
-<A HREF="com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream" target="classFrame">JsonReader</A>
-<BR>
-<A HREF="com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson" target="classFrame"><I>JsonSerializationContext</I></A>
-<BR>
-<A HREF="com/google/gson/JsonSerializer.html" title="interface in com.google.gson" target="classFrame"><I>JsonSerializer</I></A>
-<BR>
-<A HREF="com/google/gson/JsonStreamParser.html" title="class in com.google.gson" target="classFrame">JsonStreamParser</A>
-<BR>
-<A HREF="com/google/gson/JsonSyntaxException.html" title="class in com.google.gson" target="classFrame">JsonSyntaxException</A>
-<BR>
-<A HREF="com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream" target="classFrame">JsonToken</A>
-<BR>
-<A HREF="com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream" target="classFrame">JsonWriter</A>
-<BR>
-<A HREF="com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson" target="classFrame">LongSerializationPolicy</A>
-<BR>
-<A HREF="com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream" target="classFrame">MalformedJsonException</A>
-<BR>
-<A HREF="com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations" target="classFrame">SerializedName</A>
-<BR>
-<A HREF="com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations" target="classFrame">Since</A>
-<BR>
-<A HREF="com/google/gson/TypeAdapter.html" title="class in com.google.gson" target="classFrame">TypeAdapter</A>
-<BR>
-<A HREF="com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson" target="classFrame"><I>TypeAdapterFactory</I></A>
-<BR>
-<A HREF="com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect" target="classFrame">TypeToken</A>
-<BR>
-<A HREF="com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations" target="classFrame">Until</A>
-<BR>
-</FONT></TD>
-</TR>
-</TABLE>
-
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/allclasses-noframe.html b/gson/docs/javadocs/allclasses-noframe.html
deleted file mode 100644
index 963ffefaf..000000000
--- a/gson/docs/javadocs/allclasses-noframe.html
+++ /dev/null
@@ -1,98 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-All Classes (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-
-</HEAD>
-
-<BODY BGCOLOR="white">
-<FONT size="+1" CLASS="FrameHeadingFont">
-<B>All Classes</B></FONT>
-<BR>
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT CLASS="FrameItemFont"><A HREF="com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><I>ExclusionStrategy</I></A>
-<BR>
-<A HREF="com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations">Expose</A>
-<BR>
-<A HREF="com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<BR>
-<A HREF="com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>
-<BR>
-<A HREF="com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><I>FieldNamingStrategy</I></A>
-<BR>
-<A HREF="com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<BR>
-<A HREF="com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<BR>
-<A HREF="com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><I>InstanceCreator</I></A>
-<BR>
-<A HREF="com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations">JsonAdapter</A>
-<BR>
-<A HREF="com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<BR>
-<A HREF="com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><I>JsonDeserializationContext</I></A>
-<BR>
-<A HREF="com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><I>JsonDeserializer</I></A>
-<BR>
-<A HREF="com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<BR>
-<A HREF="com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>
-<BR>
-<A HREF="com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A>
-<BR>
-<A HREF="com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<BR>
-<A HREF="com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A>
-<BR>
-<A HREF="com/google/gson/JsonParser.html" title="class in com.google.gson">JsonParser</A>
-<BR>
-<A HREF="com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<BR>
-<A HREF="com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<BR>
-<A HREF="com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><I>JsonSerializationContext</I></A>
-<BR>
-<A HREF="com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><I>JsonSerializer</I></A>
-<BR>
-<A HREF="com/google/gson/JsonStreamParser.html" title="class in com.google.gson">JsonStreamParser</A>
-<BR>
-<A HREF="com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A>
-<BR>
-<A HREF="com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>
-<BR>
-<A HREF="com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<BR>
-<A HREF="com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>
-<BR>
-<A HREF="com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream">MalformedJsonException</A>
-<BR>
-<A HREF="com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations">SerializedName</A>
-<BR>
-<A HREF="com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations">Since</A>
-<BR>
-<A HREF="com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<BR>
-<A HREF="com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><I>TypeAdapterFactory</I></A>
-<BR>
-<A HREF="com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<BR>
-<A HREF="com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations">Until</A>
-<BR>
-</FONT></TD>
-</TR>
-</TABLE>
-
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/ExclusionStrategy.html b/gson/docs/javadocs/com/google/gson/ExclusionStrategy.html
deleted file mode 100644
index acf395202..000000000
--- a/gson/docs/javadocs/com/google/gson/ExclusionStrategy.html
+++ /dev/null
@@ -1,305 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-ExclusionStrategy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="ExclusionStrategy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/ExclusionStrategy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/ExclusionStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="ExclusionStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface ExclusionStrategy</H2>
-<HR>
-<DL>
-<DT><PRE>public interface <B>ExclusionStrategy</B></DL>
-</PRE>
-
-<P>
-A strategy (or policy) definition that is used to decide whether or not a field or top-level
- class should be serialized or deserialized as part of the JSON output/input. For serialization,
- if the <A HREF="../../../com/google/gson/ExclusionStrategy.html#shouldSkipClass(java.lang.Class)"><CODE>shouldSkipClass(Class)</CODE></A> method returns true then that class or field type
- will not be part of the JSON output.  For deserialization, if <A HREF="../../../com/google/gson/ExclusionStrategy.html#shouldSkipClass(java.lang.Class)"><CODE>shouldSkipClass(Class)</CODE></A>
- returns true, then it will not be set as part of the Java object structure.
-
- <p>The following are a few examples that shows how you can use this exclusion mechanism.
-
- <p><strong>Exclude fields and objects based on a particular class type:</strong>
- <pre class="code">
- private static class SpecificClassExclusionStrategy implements ExclusionStrategy {
-   private final Class&lt;?&gt; excludedThisClass;
-
-   public SpecificClassExclusionStrategy(Class&lt;?&gt; excludedThisClass) {
-     this.excludedThisClass = excludedThisClass;
-   }
-
-   public boolean shouldSkipClass(Class&lt;?&gt; clazz) {
-     return excludedThisClass.equals(clazz);
-   }
-
-   public boolean shouldSkipField(FieldAttributes f) {
-     return excludedThisClass.equals(f.getDeclaredClass());
-   }
- }
- </pre>
-
- <p><strong>Excludes fields and objects based on a particular annotation:</strong>
- <pre class="code">
- public &#64interface FooAnnotation {
-   // some implementation here
- }
-
- // Excludes any field (or class) that is tagged with an "&#64FooAnnotation"
- private static class FooAnnotationExclusionStrategy implements ExclusionStrategy {
-   public boolean shouldSkipClass(Class&lt;?&gt; clazz) {
-     return clazz.getAnnotation(FooAnnotation.class) != null;
-   }
-
-   public boolean shouldSkipField(FieldAttributes f) {
-     return f.getAnnotation(FooAnnotation.class) != null;
-   }
- }
- </pre>
-
- <p>Now if you want to configure <code>Gson</code> to use a user defined exclusion strategy, then
- the <code>GsonBuilder</code> is required. The following is an example of how you can use the
- <code>GsonBuilder</code> to configure Gson to use one of the above sample:
- <pre class="code">
- ExclusionStrategy excludeStrings = new UserDefinedExclusionStrategy(String.class);
- Gson gson = new GsonBuilder()
-     .setExclusionStrategies(excludeStrings)
-     .create();
- </pre>
-
- <p>For certain model classes, you may only want to serialize a field, but exclude it for
- deserialization. To do that, you can write an <code>ExclusionStrategy</code> as per normal;
- however, you would register it with the
- <A HREF="../../../com/google/gson/GsonBuilder.html#addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)"><CODE>GsonBuilder.addDeserializationExclusionStrategy(ExclusionStrategy)</CODE></A> method.
- For example:
- <pre class="code">
- ExclusionStrategy excludeStrings = new UserDefinedExclusionStrategy(String.class);
- Gson gson = new GsonBuilder()
-     .addDeserializationExclusionStrategy(excludeStrings)
-     .create();
- </pre>
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-<DT><B>See Also:</B><DD><A HREF="../../../com/google/gson/GsonBuilder.html#setExclusionStrategies(com.google.gson.ExclusionStrategy...)"><CODE>GsonBuilder.setExclusionStrategies(ExclusionStrategy...)</CODE></A>, 
-<A HREF="../../../com/google/gson/GsonBuilder.html#addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)"><CODE>GsonBuilder.addDeserializationExclusionStrategy(ExclusionStrategy)</CODE></A>, 
-<A HREF="../../../com/google/gson/GsonBuilder.html#addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)"><CODE>GsonBuilder.addSerializationExclusionStrategy(ExclusionStrategy)</CODE></A></DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/ExclusionStrategy.html#shouldSkipClass(java.lang.Class)">shouldSkipClass</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;clazz)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/ExclusionStrategy.html#shouldSkipField(com.google.gson.FieldAttributes)">shouldSkipField</A></B>(<A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>&nbsp;f)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="shouldSkipField(com.google.gson.FieldAttributes)"><!-- --></A><H3>
-shouldSkipField</H3>
-<PRE>
-boolean <B>shouldSkipField</B>(<A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>&nbsp;f)</PRE>
-<DL>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>f</CODE> - the field object that is under test
-<DT><B>Returns:</B><DD>true if the field should be ignored; otherwise false</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="shouldSkipClass(java.lang.Class)"><!-- --></A><H3>
-shouldSkipClass</H3>
-<PRE>
-boolean <B>shouldSkipClass</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;clazz)</PRE>
-<DL>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>clazz</CODE> - the class object that is under test
-<DT><B>Returns:</B><DD>true if the class should be ignored; otherwise false</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/ExclusionStrategy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/ExclusionStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="ExclusionStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/FieldAttributes.html b/gson/docs/javadocs/com/google/gson/FieldAttributes.html
deleted file mode 100644
index 620bb5c78..000000000
--- a/gson/docs/javadocs/com/google/gson/FieldAttributes.html
+++ /dev/null
@@ -1,446 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-FieldAttributes (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="FieldAttributes (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FieldAttributes.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/FieldAttributes.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldAttributes.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class FieldAttributes</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.FieldAttributes</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public final class <B>FieldAttributes</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
-</PRE>
-
-<P>
-A data object that stores attributes of a field.
-
- <p>This class is immutable; therefore, it can be safely shared across threads.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#FieldAttributes(java.lang.reflect.Field)">FieldAttributes</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Field.html?is-external=true" title="class or interface in java.lang.reflect">Field</A>&nbsp;f)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a Field Attributes object from the <code>f</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt; 
-<BR>
-T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#getAnnotation(java.lang.Class)">getAnnotation</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;annotation)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the <code>T</code> annotation object from this field if it exist; otherwise returns
- <code>null</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collection.html?is-external=true" title="class or interface in java.util">Collection</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#getAnnotations()">getAnnotations</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the annotations that are present on this field.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#getDeclaredClass()">getDeclaredClass</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <code>Class</code> object that was declared for this field.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#getDeclaredType()">getDeclaredType</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For example, assume the following class definition:
- <pre class="code">
- public class Foo {
-   private String bar;
-   private List&lt;String&gt; red;
- }
-
- Type listParmeterizedType = new TypeToken&lt;List&lt;String&gt;&gt;() {}.getType();</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#getDeclaringClass()">getDeclaringClass</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#getName()">getName</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldAttributes.html#hasModifier(int)">hasModifier</A></B>(int&nbsp;modifier)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if the field is defined with the <code>modifier</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="FieldAttributes(java.lang.reflect.Field)"><!-- --></A><H3>
-FieldAttributes</H3>
-<PRE>
-public <B>FieldAttributes</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Field.html?is-external=true" title="class or interface in java.lang.reflect">Field</A>&nbsp;f)</PRE>
-<DL>
-<DD>Constructs a Field Attributes object from the <code>f</code>.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>f</CODE> - the field to pull attributes from</DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="getDeclaringClass()"><!-- --></A><H3>
-getDeclaringClass</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt; <B>getDeclaringClass</B>()</PRE>
-<DL>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the declaring class that contains this field</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getName()"><!-- --></A><H3>
-getName</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getName</B>()</PRE>
-<DL>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the name of the field</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getDeclaredType()"><!-- --></A><H3>
-getDeclaredType</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A> <B>getDeclaredType</B>()</PRE>
-<DL>
-<DD><p>For example, assume the following class definition:
- <pre class="code">
- public class Foo {
-   private String bar;
-   private List&lt;String&gt; red;
- }
-
- Type listParmeterizedType = new TypeToken&lt;List&lt;String&gt;&gt;() {}.getType();
- </pre>
-
- <p>This method would return <code>String.class</code> for the <code>bar</code> field and
- <code>listParameterizedType</code> for the <code>red</code> field.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the specific type declared for this field</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getDeclaredClass()"><!-- --></A><H3>
-getDeclaredClass</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt; <B>getDeclaredClass</B>()</PRE>
-<DL>
-<DD>Returns the <code>Class</code> object that was declared for this field.
-
- <p>For example, assume the following class definition:
- <pre class="code">
- public class Foo {
-   private String bar;
-   private List&lt;String&gt; red;
- }
- </pre>
-
- <p>This method would return <code>String.class</code> for the <code>bar</code> field and
- <code>List.class</code> for the <code>red</code> field.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the specific class object that was declared for the field</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAnnotation(java.lang.Class)"><!-- --></A><H3>
-getAnnotation</H3>
-<PRE>
-public &lt;T extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt; T <B>getAnnotation</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;annotation)</PRE>
-<DL>
-<DD>Return the <code>T</code> annotation object from this field if it exist; otherwise returns
- <code>null</code>.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>annotation</CODE> - the class of the annotation that will be retrieved
-<DT><B>Returns:</B><DD>the annotation instance if it is bound to the field; otherwise <code>null</code></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAnnotations()"><!-- --></A><H3>
-getAnnotations</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collection.html?is-external=true" title="class or interface in java.util">Collection</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt; <B>getAnnotations</B>()</PRE>
-<DL>
-<DD>Return the annotations that are present on this field.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>an array of all the annotations set on the field<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="hasModifier(int)"><!-- --></A><H3>
-hasModifier</H3>
-<PRE>
-public boolean <B>hasModifier</B>(int&nbsp;modifier)</PRE>
-<DL>
-<DD>Returns <code>true</code> if the field is defined with the <code>modifier</code>.
-
- <p>This method is meant to be called as:
- <pre class="code">
- boolean hasPublicModifier = fieldAttribute.hasModifier(java.lang.reflect.Modifier.PUBLIC);
- </pre>
-<P>
-<DD><DL>
-<DT><B>See Also:</B><DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Modifier.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Modifier</CODE></A></DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FieldAttributes.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/FieldAttributes.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldAttributes.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/FieldNamingPolicy.html b/gson/docs/javadocs/com/google/gson/FieldNamingPolicy.html
deleted file mode 100644
index d466f9610..000000000
--- a/gson/docs/javadocs/com/google/gson/FieldNamingPolicy.html
+++ /dev/null
@@ -1,455 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-FieldNamingPolicy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="FieldNamingPolicy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FieldNamingPolicy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/FieldNamingPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#enum_constant_summary">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#enum_constant_detail">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Enum FieldNamingPolicy</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">java.lang.Enum</A>&lt;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>&gt;
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.FieldNamingPolicy</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</A>&lt;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>&gt;</DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public enum <B>FieldNamingPolicy</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</A>&lt;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>&gt;<DT>implements <A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A></DL>
-</PRE>
-
-<P>
-An enumeration that defines a few standard naming conventions for JSON field names.
- This enumeration should be used in conjunction with <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A>
- to configure a <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance to properly translate Java field
- names into the desired JSON field names.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== ENUM CONSTANT SUMMARY =========== -->
-
-<A NAME="enum_constant_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Enum Constant Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html#IDENTITY">IDENTITY</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this naming policy with Gson will ensure that the field name is
- unchanged.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html#LOWER_CASE_WITH_DASHES">LOWER_CASE_WITH_DASHES</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this naming policy with Gson will modify the Java Field name from its camel cased
- form to a lower case field name where each word is separated by a dash (-).</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html#LOWER_CASE_WITH_UNDERSCORES">LOWER_CASE_WITH_UNDERSCORES</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this naming policy with Gson will modify the Java Field name from its camel cased
- form to a lower case field name where each word is separated by an underscore (_).</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html#UPPER_CAMEL_CASE">UPPER_CAMEL_CASE</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this naming policy with Gson will ensure that the first "letter" of the Java
- field name is capitalized when serialized to its JSON form.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html#UPPER_CAMEL_CASE_WITH_SPACES">UPPER_CAMEL_CASE_WITH_SPACES</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using this naming policy with Gson will ensure that the first "letter" of the Java
- field name is capitalized when serialized to its JSON form and the words will be
- separated by a space.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html#valueOf(java.lang.String)">valueOf</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the enum constant of this type with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>[]</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html#values()">values</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array containing the constants of this enum type, in
-the order they are declared.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Enum"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#compareTo(E)" title="class or interface in java.lang">compareTo</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#getDeclaringClass()" title="class or interface in java.lang">getDeclaringClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#name()" title="class or interface in java.lang">name</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#ordinal()" title="class or interface in java.lang">ordinal</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#valueOf(java.lang.Class, java.lang.String)" title="class or interface in java.lang">valueOf</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_com.google.gson.FieldNamingStrategy"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from interface com.google.gson.<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="../../../com/google/gson/FieldNamingStrategy.html#translateName(java.lang.reflect.Field)">translateName</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ ENUM CONSTANT DETAIL =========== -->
-
-<A NAME="enum_constant_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Enum Constant Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="IDENTITY"><!-- --></A><H3>
-IDENTITY</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A> <B>IDENTITY</B></PRE>
-<DL>
-<DD>Using this naming policy with Gson will ensure that the field name is
- unchanged.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="UPPER_CAMEL_CASE"><!-- --></A><H3>
-UPPER_CAMEL_CASE</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A> <B>UPPER_CAMEL_CASE</B></PRE>
-<DL>
-<DD>Using this naming policy with Gson will ensure that the first "letter" of the Java
- field name is capitalized when serialized to its JSON form.
-
- <p>Here's a few examples of the form "Java Field Name" ---> "JSON Field Name":</p>
- <ul>
-   <li>someFieldName ---> SomeFieldName</li>
-   <li>_someFieldName ---> _SomeFieldName</li>
- </ul>
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="UPPER_CAMEL_CASE_WITH_SPACES"><!-- --></A><H3>
-UPPER_CAMEL_CASE_WITH_SPACES</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A> <B>UPPER_CAMEL_CASE_WITH_SPACES</B></PRE>
-<DL>
-<DD>Using this naming policy with Gson will ensure that the first "letter" of the Java
- field name is capitalized when serialized to its JSON form and the words will be
- separated by a space.
-
- <p>Here's a few examples of the form "Java Field Name" ---> "JSON Field Name":</p>
- <ul>
-   <li>someFieldName ---> Some Field Name</li>
-   <li>_someFieldName ---> _Some Field Name</li>
- </ul>
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DL>
-<HR>
-
-<A NAME="LOWER_CASE_WITH_UNDERSCORES"><!-- --></A><H3>
-LOWER_CASE_WITH_UNDERSCORES</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A> <B>LOWER_CASE_WITH_UNDERSCORES</B></PRE>
-<DL>
-<DD>Using this naming policy with Gson will modify the Java Field name from its camel cased
- form to a lower case field name where each word is separated by an underscore (_).
-
- <p>Here's a few examples of the form "Java Field Name" ---> "JSON Field Name":</p>
- <ul>
-   <li>someFieldName ---> some_field_name</li>
-   <li>_someFieldName ---> _some_field_name</li>
-   <li>aStringField ---> a_string_field</li>
-   <li>aURL ---> a_u_r_l</li>
- </ul>
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="LOWER_CASE_WITH_DASHES"><!-- --></A><H3>
-LOWER_CASE_WITH_DASHES</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A> <B>LOWER_CASE_WITH_DASHES</B></PRE>
-<DL>
-<DD>Using this naming policy with Gson will modify the Java Field name from its camel cased
- form to a lower case field name where each word is separated by a dash (-).
-
- <p>Here's a few examples of the form "Java Field Name" ---> "JSON Field Name":</p>
- <ul>
-   <li>someFieldName ---> some-field-name</li>
-   <li>_someFieldName ---> _some-field-name</li>
-   <li>aStringField ---> a-string-field</li>
-   <li>aURL ---> a-u-r-l</li>
- </ul>
- Using dashes in JavaScript is not recommended since dash is also used for a minus sign in
- expressions. This requires that a field named with dashes is always accessed as a quoted
- property like <code>myobject['my-field']</code>. Accessing it as an object field
- <code>myobject.my-field</code> will result in an unintended javascript expression.
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="values()"><!-- --></A><H3>
-values</H3>
-<PRE>
-public static <A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>[] <B>values</B>()</PRE>
-<DL>
-<DD>Returns an array containing the constants of this enum type, in
-the order they are declared.  This method may be used to iterate
-over the constants as follows:
-<pre>
-for (FieldNamingPolicy c : FieldNamingPolicy.values())
-&nbsp;   System.out.println(c);
-</pre>
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>an array containing the constants of this enum type, in
-the order they are declared</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="valueOf(java.lang.String)"><!-- --></A><H3>
-valueOf</H3>
-<PRE>
-public static <A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A> <B>valueOf</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</PRE>
-<DL>
-<DD>Returns the enum constant of this type with the specified name.
-The string must match <I>exactly</I> an identifier used to declare an
-enum constant in this type.  (Extraneous whitespace characters are 
-not permitted.)
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the enum constant to be returned.
-<DT><B>Returns:</B><DD>the enum constant with the specified name
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</A></CODE> - if this enum type has no constant
-with the specified name
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</A></CODE> - if the argument is null</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FieldNamingPolicy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/FieldNamingPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#enum_constant_summary">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#enum_constant_detail">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/FieldNamingStrategy.html b/gson/docs/javadocs/com/google/gson/FieldNamingStrategy.html
deleted file mode 100644
index c73183f2d..000000000
--- a/gson/docs/javadocs/com/google/gson/FieldNamingStrategy.html
+++ /dev/null
@@ -1,227 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-FieldNamingStrategy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="FieldNamingStrategy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FieldNamingStrategy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/FieldNamingStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface FieldNamingStrategy</H2>
-<DL>
-<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public interface <B>FieldNamingStrategy</B></DL>
-</PRE>
-
-<P>
-A mechanism for providing custom field naming in Gson.  This allows the client code to translate
- field names into a particular convention that is not supported as a normal Java field
- declaration rules.  For example, Java does not support "-" characters in a field name.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/FieldNamingStrategy.html#translateName(java.lang.reflect.Field)">translateName</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Field.html?is-external=true" title="class or interface in java.lang.reflect">Field</A>&nbsp;f)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Translates the field name into its JSON field name representation.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="translateName(java.lang.reflect.Field)"><!-- --></A><H3>
-translateName</H3>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>translateName</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Field.html?is-external=true" title="class or interface in java.lang.reflect">Field</A>&nbsp;f)</PRE>
-<DL>
-<DD>Translates the field name into its JSON field name representation.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>f</CODE> - the field object that we are translating
-<DT><B>Returns:</B><DD>the translated field name.<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FieldNamingStrategy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/FieldNamingStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/Gson.html b/gson/docs/javadocs/com/google/gson/Gson.html
deleted file mode 100644
index 416ee2e6c..000000000
--- a/gson/docs/javadocs/com/google/gson/Gson.html
+++ /dev/null
@@ -1,1075 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Gson (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Gson (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Gson.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/Gson.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Gson.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class Gson</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.Gson</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public final class <B>Gson</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
-</PRE>
-
-<P>
-This is the main class for using Gson. Gson is typically used by first constructing a
- Gson instance and then invoking <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object)"><CODE>toJson(Object)</CODE></A> or <A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.Class)"><CODE>fromJson(String, Class)</CODE></A>
- methods on it.
-
- <p>You can create a Gson instance by invoking <code>new Gson()</code> if the default configuration
- is all you need. You can also use <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A> to build a Gson instance with various
- configuration options such as versioning support, pretty printing, custom
- <A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><CODE>JsonSerializer</CODE></A>s, <A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><CODE>JsonDeserializer</CODE></A>s, and <A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><CODE>InstanceCreator</CODE></A>s.</p>
-
- <p>Here is an example of how Gson is used for a simple Class:
-
- <pre>
- Gson gson = new Gson(); // Or use new GsonBuilder().create();
- MyType target = new MyType();
- String json = gson.toJson(target); // serializes target to Json
- MyType target2 = gson.fromJson(json, MyType.class); // deserializes json into target2
- </pre></p>
-
- <p>If the object that your are serializing/deserializing is a <code>ParameterizedType</code>
- (i.e. contains at least one type parameter and may be an array) then you must use the
- <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type)"><CODE>toJson(Object, Type)</CODE></A> or <A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.reflect.Type)"><CODE>fromJson(String, Type)</CODE></A> method.  Here is an
- example for serializing and deserialing a <code>ParameterizedType</code>:
-
- <pre>
- Type listType = new TypeToken&lt;List&lt;String&gt;&gt;() {}.getType();
- List&lt;String&gt; target = new LinkedList&lt;String&gt;();
- target.add("blah");
-
- Gson gson = new Gson();
- String json = gson.toJson(target, listType);
- List&lt;String&gt; target2 = gson.fromJson(json, listType);
- </pre></p>
-
- <p>See the <a href="https://sites.google.com/site/gson/gson-user-guide">Gson User Guide</a>
- for a more complete set of examples.</p>
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch, Jesse Wilson</DD>
-<DT><B>See Also:</B><DD><A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><CODE>TypeToken</CODE></A></DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#Gson()">Gson</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a Gson object with default configuration.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.Class)">fromJson</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified parse tree into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified parse tree into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;reader,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads the next JSON value from <code>reader</code> and convert it to an object
- of type <code>typeOfT</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.Class)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified reader into an object of the
- specified class.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified reader into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.Class)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the specified Json into an object of the specified class.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the specified Json into an object of the specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#getAdapter(java.lang.Class)">getAdapter</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the type adapter for <code></code> type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#getAdapter(com.google.gson.reflect.TypeToken)">getAdapter</A></B>(<A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the type adapter for <code></code> type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)">getDelegateAdapter</A></B>(<A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;skipPast,
-                   <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to get an alternate type adapter for the specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement)">toJson</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s into its equivalent JSON representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, java.lang.Appendable)">toJson</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes out the equivalent JSON for a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)">toJson</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-       <A HREF="../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes the JSON for <code>jsonElement</code> to <code>writer</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object into its equivalent Json representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.Appendable)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object into its equivalent Json representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object, including those of generic types, into its
- equivalent Json representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object, including those of generic types, into its
- equivalent Json representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, com.google.gson.stream.JsonWriter)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-       <A HREF="../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes the JSON representation of <code>src</code> of type <code>typeOfSrc</code> to
- <code>writer</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJsonTree(java.lang.Object)">toJsonTree</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object into its equivalent representation as a tree of
- <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toJsonTree(java.lang.Object, java.lang.reflect.Type)">toJsonTree</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-           <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object, including those of generic types, into its
- equivalent representation as a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/Gson.html#toString()">toString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="Gson()"><!-- --></A><H3>
-Gson</H3>
-<PRE>
-public <B>Gson</B>()</PRE>
-<DL>
-<DD>Constructs a Gson object with default configuration. The default configuration has the
- following settings:
- <ul>
-   <li>The JSON generated by <code>toJson</code> methods is in compact representation. This
-   means that all the unneeded white-space is removed. You can change this behavior with
-   <A HREF="../../../com/google/gson/GsonBuilder.html#setPrettyPrinting()"><CODE>GsonBuilder.setPrettyPrinting()</CODE></A>. </li>
-   <li>The generated JSON omits all the fields that are null. Note that nulls in arrays are
-   kept as is since an array is an ordered list. Moreover, if a field is not null, but its
-   generated JSON is empty, the field is kept. You can configure Gson to serialize null values
-   by setting <A HREF="../../../com/google/gson/GsonBuilder.html#serializeNulls()"><CODE>GsonBuilder.serializeNulls()</CODE></A>.</li>
-   <li>Gson provides default serialization and deserialization for Enums, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util"><CODE>Map</CODE></A>,
-   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URL.html?is-external=true" title="class or interface in java.net"><CODE>URL</CODE></A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URI.html?is-external=true" title="class or interface in java.net"><CODE>URI</CODE></A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Locale.html?is-external=true" title="class or interface in java.util"><CODE>Locale</CODE></A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util"><CODE>Date</CODE></A>,
-   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>, and <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A> classes. If you would prefer
-   to change the default representation, you can do so by registering a type adapter through
-   <A HREF="../../../com/google/gson/GsonBuilder.html#registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)"><CODE>GsonBuilder.registerTypeAdapter(Type, Object)</CODE></A>. </li>
-   <li>The default Date format is same as <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/text/DateFormat.html?is-external=true#DEFAULT" title="class or interface in java.text"><CODE>DateFormat.DEFAULT</CODE></A>. This format
-   ignores the millisecond portion of the date during serialization. You can change
-   this by invoking <A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(int)"><CODE>GsonBuilder.setDateFormat(int)</CODE></A> or
-   <A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(java.lang.String)"><CODE>GsonBuilder.setDateFormat(String)</CODE></A>. </li>
-   <li>By default, Gson ignores the <A HREF="../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><CODE>Expose</CODE></A> annotation.
-   You can enable Gson to serialize/deserialize only those fields marked with this annotation
-   through <A HREF="../../../com/google/gson/GsonBuilder.html#excludeFieldsWithoutExposeAnnotation()"><CODE>GsonBuilder.excludeFieldsWithoutExposeAnnotation()</CODE></A>. </li>
-   <li>By default, Gson ignores the <A HREF="../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><CODE>Since</CODE></A> annotation. You
-   can enable Gson to use this annotation through <A HREF="../../../com/google/gson/GsonBuilder.html#setVersion(double)"><CODE>GsonBuilder.setVersion(double)</CODE></A>.</li>
-   <li>The default field naming policy for the output Json is same as in Java. So, a Java class
-   field <code>versionNumber</code> will be output as <code>&quot;versionNumber&quot;</code> in
-   Json. The same rules are applied for mapping incoming Json to the Java classes. You can
-   change this policy through <A HREF="../../../com/google/gson/GsonBuilder.html#setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)"><CODE>GsonBuilder.setFieldNamingPolicy(FieldNamingPolicy)</CODE></A>.</li>
-   <li>By default, Gson excludes <code>transient</code> or <code>static</code> fields from
-   consideration for serialization and deserialization. You can change this behavior through
-   <A HREF="../../../com/google/gson/GsonBuilder.html#excludeFieldsWithModifiers(int...)"><CODE>GsonBuilder.excludeFieldsWithModifiers(int...)</CODE></A>.</li>
- </ul>
-<P>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="getAdapter(com.google.gson.reflect.TypeToken)"><!-- --></A><H3>
-getAdapter</H3>
-<PRE>
-public &lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt; <B>getAdapter</B>(<A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</PRE>
-<DL>
-<DD>Returns the type adapter for <code></code> type.
-<P>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</A></CODE> - if this GSON cannot serialize and
-     deserialize <code>type</code>.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)"><!-- --></A><H3>
-getDelegateAdapter</H3>
-<PRE>
-public &lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt; <B>getDelegateAdapter</B>(<A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;skipPast,
-                                             <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</PRE>
-<DL>
-<DD>This method is used to get an alternate type adapter for the specified type. This is used
- to access a type adapter that is overridden by a <A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><CODE>TypeAdapterFactory</CODE></A> that you
- may have registered. This features is typically used when you want to register a type
- adapter that does a little bit of work but then delegates further processing to the Gson
- default type adapter. Here is an example:
- <p>Let's say we want to write a type adapter that counts the number of objects being read
-  from or written to JSON. We can achieve this by writing a type adapter factory that uses
-  the <code>getDelegateAdapter</code> method:
-  <pre> <code>class StatsTypeAdapterFactory implements TypeAdapterFactory {
-    public int numReads = 0;
-    public int numWrites = 0;
-    public &amp;lt;T&amp;gt; TypeAdapter&amp;lt;T&amp;gt; create(Gson gson, TypeToken&amp;lt;T&amp;gt; type) {
-      final TypeAdapter&amp;lt;T&amp;gt; delegate = gson.getDelegateAdapter(this, type);
-      return new TypeAdapter&amp;lt;T&amp;gt;() {
-        public void write(JsonWriter out, T value) throws IOException {
-          ++numWrites;
-          delegate.write(out, value);
-        }
-        public T read(JsonReader in) throws IOException {
-          ++numReads;
-          return delegate.read(in);
-        }
-      };
-    }
-  }
-  </code> </pre>
-  This factory can now be used like this:
-  <pre> <code>StatsTypeAdapterFactory stats = new StatsTypeAdapterFactory();
-  Gson gson = new GsonBuilder().registerTypeAdapterFactory(stats).create();
-  // Call gson.toJson() and fromJson methods on objects
-  System.out.println("Num JSON reads" + stats.numReads);
-  System.out.println("Num JSON writes" + stats.numWrites);
-  </code></pre>
-  Note that since you can not override type adapter factories for String and Java primitive
-  types, our stats factory will not count the number of String or primitives that will be
-  read or written.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>skipPast</CODE> - The type adapter factory that needs to be skipped while searching for
-   a matching type adapter. In most cases, you should just pass <i>this</i> (the type adapter
-   factory from where <A HREF="../../../com/google/gson/Gson.html#getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)"><CODE>getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken<T>)</CODE></A> method is being invoked).<DD><CODE>type</CODE> - Type for which the delegate adapter is being searched for.<DT><B>Since:</B></DT>
-  <DD>2.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAdapter(java.lang.Class)"><!-- --></A><H3>
-getAdapter</H3>
-<PRE>
-public &lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt; <B>getAdapter</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</PRE>
-<DL>
-<DD>Returns the type adapter for <code></code> type.
-<P>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</A></CODE> - if this GSON cannot serialize and
-     deserialize <code>type</code>.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJsonTree(java.lang.Object)"><!-- --></A><H3>
-toJsonTree</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>toJsonTree</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</PRE>
-<DL>
-<DD>This method serializes the specified object into its equivalent representation as a tree of
- <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s. This method should be used when the specified object is not a generic
- type. This method uses <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang"><CODE>Object.getClass()</CODE></A> to get the type for the specified object, but
- the <code>getClass()</code> loses the generic type information because of the Type Erasure feature
- of Java. Note that this method works fine if the any of the object fields are of generic type,
- just the object itself should not be of a generic type. If the object is of generic type, use
- <A HREF="../../../com/google/gson/Gson.html#toJsonTree(java.lang.Object, java.lang.reflect.Type)"><CODE>toJsonTree(Object, Type)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object for which Json representation is to be created setting for Gson
-<DT><B>Returns:</B><DD>Json representation of <code>src</code>.<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJsonTree(java.lang.Object, java.lang.reflect.Type)"><!-- --></A><H3>
-toJsonTree</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>toJsonTree</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-                              <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</PRE>
-<DL>
-<DD>This method serializes the specified object, including those of generic types, into its
- equivalent representation as a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s. This method must be used if the
- specified object is a generic type. For non-generic objects, use <A HREF="../../../com/google/gson/Gson.html#toJsonTree(java.lang.Object)"><CODE>toJsonTree(Object)</CODE></A>
- instead.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object for which JSON representation is to be created<DD><CODE>typeOfSrc</CODE> - The specific genericized type of src. You can obtain
- this type by using the <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><CODE>TypeToken</CODE></A> class. For example,
- to get the type for <code>Collection&lt;Foo&gt;</code>, you should use:
- <pre>
- Type typeOfSrc = new TypeToken&lt;Collection&lt;Foo&gt;&gt;(){}.getType();
- </pre>
-<DT><B>Returns:</B><DD>Json representation of <code>src</code><DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(java.lang.Object)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</PRE>
-<DL>
-<DD>This method serializes the specified object into its equivalent Json representation.
- This method should be used when the specified object is not a generic type. This method uses
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang"><CODE>Object.getClass()</CODE></A> to get the type for the specified object, but the
- <code>getClass()</code> loses the generic type information because of the Type Erasure feature
- of Java. Note that this method works fine if the any of the object fields are of generic type,
- just the object itself should not be of a generic type. If the object is of generic type, use
- <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type)"><CODE>toJson(Object, Type)</CODE></A> instead. If you want to write out the object to a
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A>, use <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.Appendable)"><CODE>toJson(Object, Appendable)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object for which Json representation is to be created setting for Gson
-<DT><B>Returns:</B><DD>Json representation of <code>src</code>.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(java.lang.Object, java.lang.reflect.Type)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-                     <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</PRE>
-<DL>
-<DD>This method serializes the specified object, including those of generic types, into its
- equivalent Json representation. This method must be used if the specified object is a generic
- type. For non-generic objects, use <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object)"><CODE>toJson(Object)</CODE></A> instead. If you want to write out
- the object to a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang"><CODE>Appendable</CODE></A>, use <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)"><CODE>toJson(Object, Type, Appendable)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object for which JSON representation is to be created<DD><CODE>typeOfSrc</CODE> - The specific genericized type of src. You can obtain
- this type by using the <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><CODE>TypeToken</CODE></A> class. For example,
- to get the type for <code>Collection&lt;Foo&gt;</code>, you should use:
- <pre>
- Type typeOfSrc = new TypeToken&lt;Collection&lt;Foo&gt;&gt;(){}.getType();
- </pre>
-<DT><B>Returns:</B><DD>Json representation of <code>src</code></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(java.lang.Object, java.lang.Appendable)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public void <B>toJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-                   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)
-            throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></PRE>
-<DL>
-<DD>This method serializes the specified object into its equivalent Json representation.
- This method should be used when the specified object is not a generic type. This method uses
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang"><CODE>Object.getClass()</CODE></A> to get the type for the specified object, but the
- <code>getClass()</code> loses the generic type information because of the Type Erasure feature
- of Java. Note that this method works fine if the any of the object fields are of generic type,
- just the object itself should not be of a generic type. If the object is of generic type, use
- <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)"><CODE>toJson(Object, Type, Appendable)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object for which Json representation is to be created setting for Gson<DD><CODE>writer</CODE> - Writer to which the Json representation needs to be written
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem writing to the writer<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public void <B>toJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-                   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-                   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)
-            throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></PRE>
-<DL>
-<DD>This method serializes the specified object, including those of generic types, into its
- equivalent Json representation. This method must be used if the specified object is a generic
- type. For non-generic objects, use <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.Appendable)"><CODE>toJson(Object, Appendable)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object for which JSON representation is to be created<DD><CODE>typeOfSrc</CODE> - The specific genericized type of src. You can obtain
- this type by using the <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><CODE>TypeToken</CODE></A> class. For example,
- to get the type for <code>Collection&lt;Foo&gt;</code>, you should use:
- <pre>
- Type typeOfSrc = new TypeToken&lt;Collection&lt;Foo&gt;&gt;(){}.getType();
- </pre><DD><CODE>writer</CODE> - Writer to which the Json representation of src needs to be written.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem writing to the writer<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(java.lang.Object, java.lang.reflect.Type, com.google.gson.stream.JsonWriter)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public void <B>toJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-                   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-                   <A HREF="../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)
-            throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></PRE>
-<DL>
-<DD>Writes the JSON representation of <code>src</code> of type <code>typeOfSrc</code> to
- <code>writer</code>.
-<P>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem writing to the writer</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(com.google.gson.JsonElement)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toJson</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement)</PRE>
-<DL>
-<DD>Converts a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s into its equivalent JSON representation.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>jsonElement</CODE> - root of a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s
-<DT><B>Returns:</B><DD>JSON String representation of the tree<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(com.google.gson.JsonElement, java.lang.Appendable)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public void <B>toJson</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-                   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)
-            throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></PRE>
-<DL>
-<DD>Writes out the equivalent JSON for a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>jsonElement</CODE> - root of a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s<DD><CODE>writer</CODE> - Writer to which the Json representation needs to be written
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem writing to the writer<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public void <B>toJson</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-                   <A HREF="../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)
-            throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></PRE>
-<DL>
-<DD>Writes the JSON for <code>jsonElement</code> to <code>writer</code>.
-<P>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem writing to the writer</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(java.lang.String, java.lang.Class)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public &lt;T&gt; T <B>fromJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)
-           throws <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>This method deserializes the specified Json into an object of the specified class. It is not
- suitable to use if the specified class is a generic type since it will not have the generic
- type information because of the Type Erasure feature of Java. Therefore, this method should not
- be used if the desired type is a generic type. Note that this method works fine if the any of
- the fields of the specified object are generics, just the object itself should not be a
- generic type. For the cases when the object is of generic type, invoke
- <A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.reflect.Type)"><CODE>fromJson(String, Type)</CODE></A>. If you have the Json in a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io"><CODE>Reader</CODE></A> instead of
- a String, use <A HREF="../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.Class)"><CODE>fromJson(Reader, Class)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Type Parameters:</B><DD><CODE>T</CODE> - the type of the desired object<DT><B>Parameters:</B><DD><CODE>json</CODE> - the string from which the object is to be deserialized<DD><CODE>classOfT</CODE> - the class of T
-<DT><B>Returns:</B><DD>an object of type T from the string. Returns <code>null</code> if <code>json</code> is <code>null</code>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE> - if json is not a valid representation for an object of type
- classOfT</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(java.lang.String, java.lang.reflect.Type)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public &lt;T&gt; T <B>fromJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)
-           throws <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>This method deserializes the specified Json into an object of the specified type. This method
- is useful if the specified object is a generic type. For non-generic objects, use
- <A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.Class)"><CODE>fromJson(String, Class)</CODE></A> instead. If you have the Json in a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io"><CODE>Reader</CODE></A> instead of
- a String, use <A HREF="../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.reflect.Type)"><CODE>fromJson(Reader, Type)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Type Parameters:</B><DD><CODE>T</CODE> - the type of the desired object<DT><B>Parameters:</B><DD><CODE>json</CODE> - the string from which the object is to be deserialized<DD><CODE>typeOfT</CODE> - The specific genericized type of src. You can obtain this type by using the
- <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><CODE>TypeToken</CODE></A> class. For example, to get the type for
- <code>Collection&lt;Foo&gt;</code>, you should use:
- <pre>
- Type typeOfT = new TypeToken&lt;Collection&lt;Foo&gt;&gt;(){}.getType();
- </pre>
-<DT><B>Returns:</B><DD>an object of type T from the string. Returns <code>null</code> if <code>json</code> is <code>null</code>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></CODE> - if json is not a valid representation for an object of type typeOfT
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE> - if json is not a valid representation for an object of type</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(java.io.Reader, java.lang.Class)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public &lt;T&gt; T <B>fromJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)
-           throws <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A>,
-                  <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></PRE>
-<DL>
-<DD>This method deserializes the Json read from the specified reader into an object of the
- specified class. It is not suitable to use if the specified class is a generic type since it
- will not have the generic type information because of the Type Erasure feature of Java.
- Therefore, this method should not be used if the desired type is a generic type. Note that
- this method works fine if the any of the fields of the specified object are generics, just the
- object itself should not be a generic type. For the cases when the object is of generic type,
- invoke <A HREF="../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.reflect.Type)"><CODE>fromJson(Reader, Type)</CODE></A>. If you have the Json in a String form instead of a
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io"><CODE>Reader</CODE></A>, use <A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.Class)"><CODE>fromJson(String, Class)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Type Parameters:</B><DD><CODE>T</CODE> - the type of the desired object<DT><B>Parameters:</B><DD><CODE>json</CODE> - the reader producing the Json from which the object is to be deserialized.<DD><CODE>classOfT</CODE> - the class of T
-<DT><B>Returns:</B><DD>an object of type T from the string. Returns <code>null</code> if <code>json</code> is at EOF.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem reading from the Reader
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE> - if json is not a valid representation for an object of type<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(java.io.Reader, java.lang.reflect.Type)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public &lt;T&gt; T <B>fromJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)
-           throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>,
-                  <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>This method deserializes the Json read from the specified reader into an object of the
- specified type. This method is useful if the specified object is a generic type. For
- non-generic objects, use <A HREF="../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.Class)"><CODE>fromJson(Reader, Class)</CODE></A> instead. If you have the Json in a
- String form instead of a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io"><CODE>Reader</CODE></A>, use <A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.reflect.Type)"><CODE>fromJson(String, Type)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Type Parameters:</B><DD><CODE>T</CODE> - the type of the desired object<DT><B>Parameters:</B><DD><CODE>json</CODE> - the reader producing Json from which the object is to be deserialized<DD><CODE>typeOfT</CODE> - The specific genericized type of src. You can obtain this type by using the
- <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><CODE>TypeToken</CODE></A> class. For example, to get the type for
- <code>Collection&lt;Foo&gt;</code>, you should use:
- <pre>
- Type typeOfT = new TypeToken&lt;Collection&lt;Foo&gt;&gt;(){}.getType();
- </pre>
-<DT><B>Returns:</B><DD>an object of type T from the json. Returns <code>null</code> if <code>json</code> is at EOF.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem reading from the Reader
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE> - if json is not a valid representation for an object of type<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public &lt;T&gt; T <B>fromJson</B>(<A HREF="../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;reader,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)
-           throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>,
-                  <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>Reads the next JSON value from <code>reader</code> and convert it to an object
- of type <code>typeOfT</code>. Returns <code>null</code>, if the <code>reader</code> is at EOF.
- Since Type is not parameterized by T, this method is type unsafe and should be used carefully
-<P>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE> - if there was a problem writing to the Reader
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE> - if json is not a valid representation for an object of type</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(com.google.gson.JsonElement, java.lang.Class)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public &lt;T&gt; T <B>fromJson</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)
-           throws <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>This method deserializes the Json read from the specified parse tree into an object of the
- specified type. It is not suitable to use if the specified class is a generic type since it
- will not have the generic type information because of the Type Erasure feature of Java.
- Therefore, this method should not be used if the desired type is a generic type. Note that
- this method works fine if the any of the fields of the specified object are generics, just the
- object itself should not be a generic type. For the cases when the object is of generic type,
- invoke <A HREF="../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.reflect.Type)"><CODE>fromJson(JsonElement, Type)</CODE></A>.
-<P>
-<DD><DL>
-<DT><B>Type Parameters:</B><DD><CODE>T</CODE> - the type of the desired object<DT><B>Parameters:</B><DD><CODE>json</CODE> - the root of the parse tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s from which the object is to
- be deserialized<DD><CODE>classOfT</CODE> - The class of T
-<DT><B>Returns:</B><DD>an object of type T from the json. Returns <code>null</code> if <code>json</code> is <code>null</code>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE> - if json is not a valid representation for an object of type typeOfT<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(com.google.gson.JsonElement, java.lang.reflect.Type)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public &lt;T&gt; T <B>fromJson</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)
-           throws <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>This method deserializes the Json read from the specified parse tree into an object of the
- specified type. This method is useful if the specified object is a generic type. For
- non-generic objects, use <A HREF="../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.Class)"><CODE>fromJson(JsonElement, Class)</CODE></A> instead.
-<P>
-<DD><DL>
-<DT><B>Type Parameters:</B><DD><CODE>T</CODE> - the type of the desired object<DT><B>Parameters:</B><DD><CODE>json</CODE> - the root of the parse tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s from which the object is to
- be deserialized<DD><CODE>typeOfT</CODE> - The specific genericized type of src. You can obtain this type by using the
- <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><CODE>TypeToken</CODE></A> class. For example, to get the type for
- <code>Collection&lt;Foo&gt;</code>, you should use:
- <pre>
- Type typeOfT = new TypeToken&lt;Collection&lt;Foo&gt;&gt;(){}.getType();
- </pre>
-<DT><B>Returns:</B><DD>an object of type T from the json. Returns <code>null</code> if <code>json</code> is <code>null</code>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE> - if json is not a valid representation for an object of type typeOfT<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toString()"><!-- --></A><H3>
-toString</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toString</B>()</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Gson.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/Gson.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Gson.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/GsonBuilder.html b/gson/docs/javadocs/com/google/gson/GsonBuilder.html
deleted file mode 100644
index 9f9355742..000000000
--- a/gson/docs/javadocs/com/google/gson/GsonBuilder.html
+++ /dev/null
@@ -1,975 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-GsonBuilder (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="GsonBuilder (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/GsonBuilder.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/GsonBuilder.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="GsonBuilder.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class GsonBuilder</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.GsonBuilder</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public final class <B>GsonBuilder</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
-</PRE>
-
-<P>
-<p>Use this builder to construct a <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance when you need to set configuration
- options other than the default. For <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> with default configuration, it is simpler to
- use <code>new Gson()</code>. <code>GsonBuilder</code> is best used by creating it, and then invoking its
- various configuration methods, and finally calling create.</p>
-
- <p>The following is an example shows how to use the <code>GsonBuilder</code> to construct a Gson
- instance:
-
- <pre>
- Gson gson = new GsonBuilder()
-     .registerTypeAdapter(Id.class, new IdTypeAdapter())
-     .enableComplexMapKeySerialization()
-     .serializeNulls()
-     .setDateFormat(DateFormat.LONG)
-     .setFieldNamingPolicy(FieldNamingPolicy.UPPER_CAMEL_CASE)
-     .setPrettyPrinting()
-     .setVersion(1.0)
-     .create();
- </pre></p>
-
- <p>NOTES:
- <ul>
- <li> the order of invocation of configuration methods does not matter.</li>
- <li> The default serialization of <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util"><CODE>Date</CODE></A> and its subclasses in Gson does
-  not contain time-zone information. So, if you are using date/time instances,
-  use <code>GsonBuilder</code> and its <code>setDateFormat</code> methods.</li>
-  </ul>
- </p>
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch, Jesse Wilson</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#GsonBuilder()">GsonBuilder</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a GsonBuilder instance that can be used to build Gson with various configuration
- settings.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">addDeserializationExclusionStrategy</A></B>(<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply the passed in exclusion strategy during deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">addSerializationExclusionStrategy</A></B>(<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply the passed in exclusion strategy during serialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#create()">create</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance based on the current configuration.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#disableHtmlEscaping()">disableHtmlEscaping</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;By default, Gson escapes HTML characters such as &lt; &gt; etc.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#disableInnerClassSerialization()">disableInnerClassSerialization</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to exclude inner classes during serialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#enableComplexMapKeySerialization()">enableComplexMapKeySerialization</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enabling this feature will only change the serialized form if the map key is
- a complex type (i.e.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#excludeFieldsWithModifiers(int...)">excludeFieldsWithModifiers</A></B>(int...&nbsp;modifiers)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to excludes all class fields that have the specified modifiers.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#excludeFieldsWithoutExposeAnnotation()">excludeFieldsWithoutExposeAnnotation</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to exclude all fields from consideration for serialization or deserialization
- that do not have the <A HREF="../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><CODE>Expose</CODE></A> annotation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#generateNonExecutableJson()">generateNonExecutableJson</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Makes the output JSON non-executable in Javascript by prefixing the generated JSON with some
- special text.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)">registerTypeAdapter</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type,
-                    <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;typeAdapter)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson for custom serialization or deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)">registerTypeAdapterFactory</A></B>(<A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;factory)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a factory for type adapters.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#registerTypeHierarchyAdapter(java.lang.Class, java.lang.Object)">registerTypeHierarchyAdapter</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;baseType,
-                             <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;typeAdapter)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson for custom serialization or deserialization for an inheritance type hierarchy.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#serializeNulls()">serializeNulls</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configure Gson to serialize null fields.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#serializeSpecialFloatingPointValues()">serializeSpecialFloatingPointValues</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Section 2.4 of <a href="http://www.ietf.org/rfc/rfc4627.txt">JSON specification</a> disallows
- special double values (NaN, Infinity, -Infinity).</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(int)">setDateFormat</A></B>(int&nbsp;style)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to to serialize <code>Date</code> objects according to the style value provided.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(int, int)">setDateFormat</A></B>(int&nbsp;dateStyle,
-              int&nbsp;timeStyle)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to to serialize <code>Date</code> objects according to the style value provided.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(java.lang.String)">setDateFormat</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;pattern)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to serialize <code>Date</code> objects according to the pattern provided.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setExclusionStrategies(com.google.gson.ExclusionStrategy...)">setExclusionStrategies</A></B>(<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>...&nbsp;strategies)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a set of exclusion strategies during both serialization and
- deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">setFieldNamingPolicy</A></B>(<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>&nbsp;namingConvention)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific naming policy to an object's field during serialization
- and deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)">setFieldNamingStrategy</A></B>(<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>&nbsp;fieldNamingStrategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific naming policy strategy to an object's field during
- serialization and deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">setLongSerializationPolicy</A></B>(<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>&nbsp;serializationPolicy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific serialization policy for <code>Long</code> and <code>long</code>
- objects.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setPrettyPrinting()">setPrettyPrinting</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to output Json that fits in a page for pretty printing.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/GsonBuilder.html#setVersion(double)">setVersion</A></B>(double&nbsp;ignoreVersionsAfter)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to enable versioning support.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="GsonBuilder()"><!-- --></A><H3>
-GsonBuilder</H3>
-<PRE>
-public <B>GsonBuilder</B>()</PRE>
-<DL>
-<DD>Creates a GsonBuilder instance that can be used to build Gson with various configuration
- settings. GsonBuilder follows the builder pattern, and it is typically used by first
- invoking various configuration methods to set desired options, and finally calling
- <A HREF="../../../com/google/gson/GsonBuilder.html#create()"><CODE>create()</CODE></A>.
-<P>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="setVersion(double)"><!-- --></A><H3>
-setVersion</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setVersion</B>(double&nbsp;ignoreVersionsAfter)</PRE>
-<DL>
-<DD>Configures Gson to enable versioning support.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>ignoreVersionsAfter</CODE> - any field or type marked with a version higher than this value
- are ignored during serialization or deserialization.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="excludeFieldsWithModifiers(int...)"><!-- --></A><H3>
-excludeFieldsWithModifiers</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>excludeFieldsWithModifiers</B>(int...&nbsp;modifiers)</PRE>
-<DL>
-<DD>Configures Gson to excludes all class fields that have the specified modifiers. By default,
- Gson will exclude all fields marked transient or static. This method will override that
- behavior.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>modifiers</CODE> - the field modifiers. You must use the modifiers specified in the
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Modifier.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Modifier</CODE></A> class. For example,
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Modifier.html?is-external=true#TRANSIENT" title="class or interface in java.lang.reflect"><CODE>Modifier.TRANSIENT</CODE></A>,
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Modifier.html?is-external=true#STATIC" title="class or interface in java.lang.reflect"><CODE>Modifier.STATIC</CODE></A>.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="generateNonExecutableJson()"><!-- --></A><H3>
-generateNonExecutableJson</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>generateNonExecutableJson</B>()</PRE>
-<DL>
-<DD>Makes the output JSON non-executable in Javascript by prefixing the generated JSON with some
- special text. This prevents attacks from third-party sites through script sourcing. See
- <a href="http://code.google.com/p/google-gson/issues/detail?id=42">Gson Issue 42</a>
- for details.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="excludeFieldsWithoutExposeAnnotation()"><!-- --></A><H3>
-excludeFieldsWithoutExposeAnnotation</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>excludeFieldsWithoutExposeAnnotation</B>()</PRE>
-<DL>
-<DD>Configures Gson to exclude all fields from consideration for serialization or deserialization
- that do not have the <A HREF="../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><CODE>Expose</CODE></A> annotation.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="serializeNulls()"><!-- --></A><H3>
-serializeNulls</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>serializeNulls</B>()</PRE>
-<DL>
-<DD>Configure Gson to serialize null fields. By default, Gson omits all fields that are null
- during serialization.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="enableComplexMapKeySerialization()"><!-- --></A><H3>
-enableComplexMapKeySerialization</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>enableComplexMapKeySerialization</B>()</PRE>
-<DL>
-<DD>Enabling this feature will only change the serialized form if the map key is
- a complex type (i.e. non-primitive) in its <strong>serialized</strong> JSON
- form. The default implementation of map serialization uses <code>toString()</code>
- on the key; however, when this is called then one of the following cases
- apply:
-
- <h3>Maps as JSON objects</h3>
- For this case, assume that a type adapter is registered to serialize and
- deserialize some <code>Point</code> class, which contains an x and y coordinate,
- to/from the JSON Primitive string value <code>"(x,y)"</code>. The Java map would
- then be serialized as a <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.
-
- <p>Below is an example:
- <pre>  <code>Gson gson = new GsonBuilder()
-       .register(Point.class, new MyPointTypeAdapter())
-       .enableComplexMapKeySerialization()
-       .create();
-
-   Map&lt;Point, String&gt; original = new LinkedHashMap&lt;Point, String&gt;();
-   original.put(new Point(5, 6), "a");
-   original.put(new Point(8, 8), "b");
-   System.out.println(gson.toJson(original, type));
- </code></pre>
- The above code prints this JSON object:<pre>  <code>{
-     "(5,6)": "a",
-     "(8,8)": "b"
-   }
- </code></pre>
-
- <h3>Maps as JSON arrays</h3>
- For this case, assume that a type adapter was NOT registered for some
- <code>Point</code> class, but rather the default Gson serialization is applied.
- In this case, some <code>new Point(2,3)</code> would serialize as <code>{"x":2,"y":5}</code>.
-
- <p>Given the assumption above, a <code>Map&lt;Point, String&gt;</code> will be
- serialize as an array of arrays (can be viewed as an entry set of pairs).
-
- <p>Below is an example of serializing complex types as JSON arrays:
- <pre> <code>Gson gson = new GsonBuilder()
-       .enableComplexMapKeySerialization()
-       .create();
-
-   Map&lt;Point, String&gt; original = new LinkedHashMap&lt;Point, String&gt;();
-   original.put(new Point(5, 6), "a");
-   original.put(new Point(8, 8), "b");
-   System.out.println(gson.toJson(original, type));
- </code>
-
- The JSON output would look as follows:
- <pre>   <code>[
-     [
-       {
-         "x": 5,
-         "y": 6
-       },
-       "a"
-     ],
-     [
-       {
-         "x": 8,
-         "y": 8
-       },
-       "b"
-     ]
-   ]
- </code></pre>
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.7</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="disableInnerClassSerialization()"><!-- --></A><H3>
-disableInnerClassSerialization</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>disableInnerClassSerialization</B>()</PRE>
-<DL>
-<DD>Configures Gson to exclude inner classes during serialization.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)"><!-- --></A><H3>
-setLongSerializationPolicy</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setLongSerializationPolicy</B>(<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>&nbsp;serializationPolicy)</PRE>
-<DL>
-<DD>Configures Gson to apply a specific serialization policy for <code>Long</code> and <code>long</code>
- objects.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>serializationPolicy</CODE> - the particular policy to use for serializing longs.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)"><!-- --></A><H3>
-setFieldNamingPolicy</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setFieldNamingPolicy</B>(<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>&nbsp;namingConvention)</PRE>
-<DL>
-<DD>Configures Gson to apply a specific naming policy to an object's field during serialization
- and deserialization.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>namingConvention</CODE> - the JSON field naming convention to use for serialization and
- deserialization.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)"><!-- --></A><H3>
-setFieldNamingStrategy</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setFieldNamingStrategy</B>(<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>&nbsp;fieldNamingStrategy)</PRE>
-<DL>
-<DD>Configures Gson to apply a specific naming policy strategy to an object's field during
- serialization and deserialization.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>fieldNamingStrategy</CODE> - the actual naming strategy to apply to the fields
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setExclusionStrategies(com.google.gson.ExclusionStrategy...)"><!-- --></A><H3>
-setExclusionStrategies</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setExclusionStrategies</B>(<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>...&nbsp;strategies)</PRE>
-<DL>
-<DD>Configures Gson to apply a set of exclusion strategies during both serialization and
- deserialization. Each of the <code>strategies</code> will be applied as a disjunction rule.
- This means that if one of the <code>strategies</code> suggests that a field (or class) should be
- skipped then that field (or object) is skipped during serializaiton/deserialization.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>strategies</CODE> - the set of strategy object to apply during object (de)serialization.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)"><!-- --></A><H3>
-addSerializationExclusionStrategy</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>addSerializationExclusionStrategy</B>(<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</PRE>
-<DL>
-<DD>Configures Gson to apply the passed in exclusion strategy during serialization.
- If this method is invoked numerous times with different exclusion strategy objects
- then the exclusion strategies that were added will be applied as a disjunction rule.
- This means that if one of the added exclusion strategies suggests that a field (or
- class) should be skipped then that field (or object) is skipped during its
- serialization.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>strategy</CODE> - an exclusion strategy to apply during serialization.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.7</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)"><!-- --></A><H3>
-addDeserializationExclusionStrategy</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>addDeserializationExclusionStrategy</B>(<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</PRE>
-<DL>
-<DD>Configures Gson to apply the passed in exclusion strategy during deserialization.
- If this method is invoked numerous times with different exclusion strategy objects
- then the exclusion strategies that were added will be applied as a disjunction rule.
- This means that if one of the added exclusion strategies suggests that a field (or
- class) should be skipped then that field (or object) is skipped during its
- deserialization.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>strategy</CODE> - an exclusion strategy to apply during deserialization.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.7</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setPrettyPrinting()"><!-- --></A><H3>
-setPrettyPrinting</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setPrettyPrinting</B>()</PRE>
-<DL>
-<DD>Configures Gson to output Json that fits in a page for pretty printing. This option only
- affects Json serialization.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="disableHtmlEscaping()"><!-- --></A><H3>
-disableHtmlEscaping</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>disableHtmlEscaping</B>()</PRE>
-<DL>
-<DD>By default, Gson escapes HTML characters such as &lt; &gt; etc. Use this option to configure
- Gson to pass-through HTML characters as is.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setDateFormat(java.lang.String)"><!-- --></A><H3>
-setDateFormat</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setDateFormat</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;pattern)</PRE>
-<DL>
-<DD>Configures Gson to serialize <code>Date</code> objects according to the pattern provided. You can
- call this method or <A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(int)"><CODE>setDateFormat(int)</CODE></A> multiple times, but only the last invocation
- will be used to decide the serialization format.
-
- <p>The date format will be used to serialize and deserialize <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Date.html?is-external=true" title="class or interface in java.util"><CODE>Date</CODE></A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/sql/Timestamp.html?is-external=true" title="class or interface in java.sql"><CODE>Timestamp</CODE></A> and <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/sql/Date.html?is-external=true" title="class or interface in java.sql"><CODE>Date</CODE></A>.
-
- <p>Note that this pattern must abide by the convention provided by <code>SimpleDateFormat</code>
- class. See the documentation in <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/text/SimpleDateFormat.html?is-external=true" title="class or interface in java.text"><CODE>SimpleDateFormat</CODE></A> for more information on
- valid date and time patterns.</p>
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>pattern</CODE> - the pattern that dates will be serialized/deserialized to/from
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setDateFormat(int)"><!-- --></A><H3>
-setDateFormat</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setDateFormat</B>(int&nbsp;style)</PRE>
-<DL>
-<DD>Configures Gson to to serialize <code>Date</code> objects according to the style value provided.
- You can call this method or <A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(java.lang.String)"><CODE>setDateFormat(String)</CODE></A> multiple times, but only the last
- invocation will be used to decide the serialization format.
-
- <p>Note that this style value should be one of the predefined constants in the
- <code>DateFormat</code> class. See the documentation in <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/text/DateFormat.html?is-external=true" title="class or interface in java.text"><CODE>DateFormat</CODE></A> for more
- information on the valid style constants.</p>
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>style</CODE> - the predefined date style that date objects will be serialized/deserialized
- to/from
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setDateFormat(int, int)"><!-- --></A><H3>
-setDateFormat</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>setDateFormat</B>(int&nbsp;dateStyle,
-                                 int&nbsp;timeStyle)</PRE>
-<DL>
-<DD>Configures Gson to to serialize <code>Date</code> objects according to the style value provided.
- You can call this method or <A HREF="../../../com/google/gson/GsonBuilder.html#setDateFormat(java.lang.String)"><CODE>setDateFormat(String)</CODE></A> multiple times, but only the last
- invocation will be used to decide the serialization format.
-
- <p>Note that this style value should be one of the predefined constants in the
- <code>DateFormat</code> class. See the documentation in <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/text/DateFormat.html?is-external=true" title="class or interface in java.text"><CODE>DateFormat</CODE></A> for more
- information on the valid style constants.</p>
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>dateStyle</CODE> - the predefined date style that date objects will be serialized/deserialized
- to/from<DD><CODE>timeStyle</CODE> - the predefined style for the time portion of the date objects
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)"><!-- --></A><H3>
-registerTypeAdapter</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>registerTypeAdapter</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type,
-                                       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;typeAdapter)</PRE>
-<DL>
-<DD>Configures Gson for custom serialization or deserialization. This method combines the
- registration of an <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A>, <A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><CODE>InstanceCreator</CODE></A>, <A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><CODE>JsonSerializer</CODE></A>, and a
- <A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><CODE>JsonDeserializer</CODE></A>. It is best used when a single object <code>typeAdapter</code> implements
- all the required interfaces for custom serialization with Gson. If a type adapter was
- previously registered for the specified <code>type</code>, it is overwritten.
-
- <p>This registers the type specified and no other types: you must manually register related
- types! For example, applications registering <code>boolean.class</code> should also register <code>Boolean.class</code>.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>type</CODE> - the type definition for the type adapter being registered<DD><CODE>typeAdapter</CODE> - This object must implement at least one of the <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A>,
- <A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><CODE>InstanceCreator</CODE></A>, <A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><CODE>JsonSerializer</CODE></A>, and a <A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><CODE>JsonDeserializer</CODE></A> interfaces.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)"><!-- --></A><H3>
-registerTypeAdapterFactory</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>registerTypeAdapterFactory</B>(<A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;factory)</PRE>
-<DL>
-<DD>Register a factory for type adapters. Registering a factory is useful when the type
- adapter needs to be configured based on the type of the field being processed. Gson
- is designed to handle a large number of factories, so you should consider registering
- them to be at par with registering an individual type adapter.
-<P>
-<DD><DL>
-<DT><B>Since:</B></DT>
-  <DD>2.1</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="registerTypeHierarchyAdapter(java.lang.Class, java.lang.Object)"><!-- --></A><H3>
-registerTypeHierarchyAdapter</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>registerTypeHierarchyAdapter</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;baseType,
-                                                <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;typeAdapter)</PRE>
-<DL>
-<DD>Configures Gson for custom serialization or deserialization for an inheritance type hierarchy.
- This method combines the registration of a <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A>, <A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><CODE>JsonSerializer</CODE></A> and
- a <A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><CODE>JsonDeserializer</CODE></A>. If a type adapter was previously registered for the specified
- type hierarchy, it is overridden. If a type adapter is registered for a specific type in
- the type hierarchy, it will be invoked instead of the one registered for the type hierarchy.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>baseType</CODE> - the class definition for the type adapter being registered for the base class
-        or interface<DD><CODE>typeAdapter</CODE> - This object must implement at least one of <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A>,
-        <A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><CODE>JsonSerializer</CODE></A> or <A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><CODE>JsonDeserializer</CODE></A> interfaces.
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.7</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="serializeSpecialFloatingPointValues()"><!-- --></A><H3>
-serializeSpecialFloatingPointValues</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> <B>serializeSpecialFloatingPointValues</B>()</PRE>
-<DL>
-<DD>Section 2.4 of <a href="http://www.ietf.org/rfc/rfc4627.txt">JSON specification</a> disallows
- special double values (NaN, Infinity, -Infinity). However,
- <a href="http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf">Javascript
- specification</a> (see section 4.3.20, 4.3.22, 4.3.23) allows these values as valid Javascript
- values. Moreover, most JavaScript engines will accept these special values in JSON without
- problem. So, at a practical level, it makes sense to accept these values as valid JSON even
- though JSON specification disallows them.
-
- <p>Gson always accepts these special values during deserialization. However, it outputs
- strictly compliant JSON. Hence, if it encounters a float value <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Float.html?is-external=true#NaN" title="class or interface in java.lang"><CODE>Float.NaN</CODE></A>,
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Float.html?is-external=true#POSITIVE_INFINITY" title="class or interface in java.lang"><CODE>Float.POSITIVE_INFINITY</CODE></A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Float.html?is-external=true#NEGATIVE_INFINITY" title="class or interface in java.lang"><CODE>Float.NEGATIVE_INFINITY</CODE></A>, or a double value
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#NaN" title="class or interface in java.lang"><CODE>Double.NaN</CODE></A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#POSITIVE_INFINITY" title="class or interface in java.lang"><CODE>Double.POSITIVE_INFINITY</CODE></A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#NEGATIVE_INFINITY" title="class or interface in java.lang"><CODE>Double.NEGATIVE_INFINITY</CODE></A>, it
- will throw an <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang"><CODE>IllegalArgumentException</CODE></A>. This method provides a way to override the
- default behavior when you know that the JSON receiver will be able to handle these special
- values.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a reference to this <code>GsonBuilder</code> object to fulfill the "Builder" pattern<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="create()"><!-- --></A><H3>
-create</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A> <B>create</B>()</PRE>
-<DL>
-<DD>Creates a <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance based on the current configuration. This method is free of
- side-effects to this <code>GsonBuilder</code> instance and hence can be called multiple times.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>an instance of Gson configured with the options currently set in this builder</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/GsonBuilder.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/GsonBuilder.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="GsonBuilder.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/InstanceCreator.html b/gson/docs/javadocs/com/google/gson/InstanceCreator.html
deleted file mode 100644
index 3fef64483..000000000
--- a/gson/docs/javadocs/com/google/gson/InstanceCreator.html
+++ /dev/null
@@ -1,275 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-InstanceCreator (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="InstanceCreator (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/InstanceCreator.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/InstanceCreator.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="InstanceCreator.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface InstanceCreator&lt;T&gt;</H2>
-<DL>
-<DT><DT><B>Type Parameters:</B><DD><CODE>T</CODE> - the type of object that will be created by this implementation.</DL>
-<HR>
-<DL>
-<DT><PRE>public interface <B>InstanceCreator&lt;T&gt;</B></DL>
-</PRE>
-
-<P>
-This interface is implemented to create instances of a class that does not define a no-args
- constructor. If you can modify the class, you should instead add a private, or public
- no-args constructor. However, that is not possible for library classes, such as JDK classes, or
- a third-party library that you do not have source-code of. In such cases, you should define an
- instance creator for the class. Implementations of this interface should be registered with
- <A HREF="../../../com/google/gson/GsonBuilder.html#registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)"><CODE>GsonBuilder.registerTypeAdapter(Type, Object)</CODE></A> method before Gson will be able to use
- them.
- <p>Let us look at an example where defining an InstanceCreator might be useful. The
- <code>Id</code> class defined below does not have a default no-args constructor.</p>
-
- <pre>
- public class Id&lt;T&gt; {
-   private final Class&lt;T&gt; clazz;
-   private final long value;
-   public Id(Class&lt;T&gt; clazz, long value) {
-     this.clazz = clazz;
-     this.value = value;
-   }
- }
- </pre>
-
- <p>If Gson encounters an object of type <code>Id</code> during deserialization, it will throw an
- exception. The easiest way to solve this problem will be to add a (public or private) no-args
- constructor as follows:</p>
-
- <pre>
- private Id() {
-   this(Object.class, 0L);
- }
- </pre>
-
- <p>However, let us assume that the developer does not have access to the source-code of the
- <code>Id</code> class, or does not want to define a no-args constructor for it. The developer
- can solve this problem by defining an <code>InstanceCreator</code> for <code>Id</code>:</p>
-
- <pre>
- class IdInstanceCreator implements InstanceCreator&lt;Id&gt; {
-   public Id createInstance(Type type) {
-     return new Id(Object.class, 0L);
-   }
- }
- </pre>
-
- <p>Note that it does not matter what the fields of the created instance contain since Gson will
- overwrite them with the deserialized values specified in Json. You should also ensure that a
- <i>new</i> object is returned, not a common object since its fields will be overwritten.
- The developer will need to register <code>IdInstanceCreator</code> with Gson as follows:</p>
-
- <pre>
- Gson gson = new GsonBuilder().registerTypeAdapter(Id.class, new IdInstanceCreator()).create();
- </pre>
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/InstanceCreator.html" title="type parameter in InstanceCreator">T</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/InstanceCreator.html#createInstance(java.lang.reflect.Type)">createInstance</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during deserialization to create an instance of the
- specified type.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="createInstance(java.lang.reflect.Type)"><!-- --></A><H3>
-createInstance</H3>
-<PRE>
-<A HREF="../../../com/google/gson/InstanceCreator.html" title="type parameter in InstanceCreator">T</A> <B>createInstance</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type)</PRE>
-<DL>
-<DD>Gson invokes this call-back method during deserialization to create an instance of the
- specified type. The fields of the returned instance are overwritten with the data present
- in the Json. Since the prior contents of the object are destroyed and overwritten, do not
- return an instance that is useful elsewhere. In particular, do not return a common instance,
- always use <code>new</code> to create a new instance.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>type</CODE> - the parameterized T represented as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Type</CODE></A>.
-<DT><B>Returns:</B><DD>a default object instance of type T.</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/InstanceCreator.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/InstanceCreator.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="InstanceCreator.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonArray.html b/gson/docs/javadocs/com/google/gson/JsonArray.html
deleted file mode 100644
index ad8688ec6..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonArray.html
+++ /dev/null
@@ -1,892 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonArray (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonArray (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonArray.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonArray.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonArray.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonArray</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">com.google.gson.JsonElement</A>
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonArray</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonArray</B><DT>extends <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A><DT>implements <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</DL>
-</PRE>
-
-<P>
-A class representing an array type in Json. An array is a list of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s each of
- which can be of a different type. This is an ordered list, meaning that the order in which
- elements are added is preserved.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#JsonArray()">JsonArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an empty JsonArray.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#add(com.google.gson.JsonElement)">add</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the specified element to self.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#addAll(com.google.gson.JsonArray)">addAll</A></B>(<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>&nbsp;array)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds all the elements of the specified array to self.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#contains(com.google.gson.JsonElement)">contains</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if this array contains the specified element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#equals(java.lang.Object)">equals</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;o)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#get(int)">get</A></B>(int&nbsp;i)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the ith element of the array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math">BigDecimal</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsBigDecimal()">getAsBigDecimal</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A> if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math">BigInteger</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsBigInteger()">getAsBigInteger</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A> if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsBoolean()">getAsBoolean</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a boolean if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;byte</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsByte()">getAsByte</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive byte value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;char</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsCharacter()">getAsCharacter</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive character value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;double</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsDouble()">getAsDouble</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a double if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;float</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsFloat()">getAsFloat</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a float if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsInt()">getAsInt</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as an integer if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;long</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsLong()">getAsLong</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a long if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsNumber()">getAsNumber</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A> if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;short</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsShort()">getAsShort</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a primitive short if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#getAsString()">getAsString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang"><CODE>String</CODE></A> if it contains a single element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#hashCode()">hashCode</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#iterator()">iterator</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an iterator to navigate the elemetns of the array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#remove(int)">remove</A></B>(int&nbsp;index)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the element at the specified position in this array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#remove(com.google.gson.JsonElement)">remove</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the first occurrence of the specified element from this array, if it is present.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#set(int, com.google.gson.JsonElement)">set</A></B>(int&nbsp;index,
-    <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaces the element at the specified position in this array with the specified element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonArray.html#size()">size</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of elements in the array.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_com.google.gson.JsonElement"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class com.google.gson.<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsJsonArray()">getAsJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonNull()">getAsJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonObject()">getAsJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonPrimitive()">getAsJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonArray()">isJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonNull()">isJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonObject()">isJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonPrimitive()">isJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#toString()">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonArray()"><!-- --></A><H3>
-JsonArray</H3>
-<PRE>
-public <B>JsonArray</B>()</PRE>
-<DL>
-<DD>Creates an empty JsonArray.
-<P>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="add(com.google.gson.JsonElement)"><!-- --></A><H3>
-add</H3>
-<PRE>
-public void <B>add</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</PRE>
-<DL>
-<DD>Adds the specified element to self.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>element</CODE> - the element that needs to be added to the array.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="addAll(com.google.gson.JsonArray)"><!-- --></A><H3>
-addAll</H3>
-<PRE>
-public void <B>addAll</B>(<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>&nbsp;array)</PRE>
-<DL>
-<DD>Adds all the elements of the specified array to self.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>array</CODE> - the array whose elements need to be added to the array.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="set(int, com.google.gson.JsonElement)"><!-- --></A><H3>
-set</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>set</B>(int&nbsp;index,
-                       <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</PRE>
-<DL>
-<DD>Replaces the element at the specified position in this array with the specified element.
-   Element can be null.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>index</CODE> - index of the element to replace<DD><CODE>element</CODE> - element to be stored at the specified position
-<DT><B>Returns:</B><DD>the element previously at the specified position
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">IndexOutOfBoundsException</A></CODE> - if the specified index is outside the array bounds</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="remove(com.google.gson.JsonElement)"><!-- --></A><H3>
-remove</H3>
-<PRE>
-public boolean <B>remove</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</PRE>
-<DL>
-<DD>Removes the first occurrence of the specified element from this array, if it is present.
- If the array does not contain the element, it is unchanged.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>element</CODE> - element to be removed from this array, if present
-<DT><B>Returns:</B><DD>true if this array contained the specified element, false otherwise<DT><B>Since:</B></DT>
-  <DD>2.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="remove(int)"><!-- --></A><H3>
-remove</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>remove</B>(int&nbsp;index)</PRE>
-<DL>
-<DD>Removes the element at the specified position in this array. Shifts any subsequent elements
- to the left (subtracts one from their indices). Returns the element that was removed from
- the array.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>index</CODE> - index the index of the element to be removed
-<DT><B>Returns:</B><DD>the element previously at the specified position
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">IndexOutOfBoundsException</A></CODE> - if the specified index is outside the array bounds<DT><B>Since:</B></DT>
-  <DD>2.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="contains(com.google.gson.JsonElement)"><!-- --></A><H3>
-contains</H3>
-<PRE>
-public boolean <B>contains</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</PRE>
-<DL>
-<DD>Returns true if this array contains the specified element.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>element</CODE> - whose presence in this array is to be tested
-<DT><B>Returns:</B><DD>true if this array contains the specified element.<DT><B>Since:</B></DT>
-  <DD>2.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="size()"><!-- --></A><H3>
-size</H3>
-<PRE>
-public int <B>size</B>()</PRE>
-<DL>
-<DD>Returns the number of elements in the array.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the number of elements in the array.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="iterator()"><!-- --></A><H3>
-iterator</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt; <B>iterator</B>()</PRE>
-<DL>
-<DD>Returns an iterator to navigate the elemetns of the array. Since the array is an ordered list,
- the iterator navigates the elements in the order they were inserted.
-<P>
-<DD><DL>
-<DT><B>Specified by:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Iterable.html?is-external=true#iterator()" title="class or interface in java.lang">iterator</A></CODE> in interface <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>an iterator to navigate the elements of the array.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="get(int)"><!-- --></A><H3>
-get</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>get</B>(int&nbsp;i)</PRE>
-<DL>
-<DD>Returns the ith element of the array.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>i</CODE> - the index of the element that is being sought.
-<DT><B>Returns:</B><DD>the element present at the ith index.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">IndexOutOfBoundsException</A></CODE> - if i is negative or greater than or equal to the
- <A HREF="../../../com/google/gson/JsonArray.html#size()"><CODE>size()</CODE></A> of the array.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsNumber()"><!-- --></A><H3>
-getAsNumber</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A> <B>getAsNumber</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A> if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsNumber()">getAsNumber</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a number if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid Number.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsString()"><!-- --></A><H3>
-getAsString</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getAsString</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang"><CODE>String</CODE></A> if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsString()">getAsString</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a String if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid String.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsDouble()"><!-- --></A><H3>
-getAsDouble</H3>
-<PRE>
-public double <B>getAsDouble</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a double if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsDouble()">getAsDouble</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a double if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid double.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBigDecimal()"><!-- --></A><H3>
-getAsBigDecimal</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math">BigDecimal</A> <B>getAsBigDecimal</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A> if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBigDecimal()">getAsBigDecimal</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A> if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the element at index 0 is not a valid <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBigInteger()"><!-- --></A><H3>
-getAsBigInteger</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math">BigInteger</A> <B>getAsBigInteger</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A> if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBigInteger()">getAsBigInteger</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A> if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the element at index 0 is not a valid <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsFloat()"><!-- --></A><H3>
-getAsFloat</H3>
-<PRE>
-public float <B>getAsFloat</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a float if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsFloat()">getAsFloat</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a float if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid float.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsLong()"><!-- --></A><H3>
-getAsLong</H3>
-<PRE>
-public long <B>getAsLong</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a long if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsLong()">getAsLong</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a long if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid long.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsInt()"><!-- --></A><H3>
-getAsInt</H3>
-<PRE>
-public int <B>getAsInt</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as an integer if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsInt()">getAsInt</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as an integer if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid integer.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsByte()"><!-- --></A><H3>
-getAsByte</H3>
-<PRE>
-public byte <B>getAsByte</B>()</PRE>
-<DL>
-<DD><B>Description copied from class: <CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsByte()">JsonElement</A></CODE></B></DD>
-<DD>convenience method to get this element as a primitive byte value.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsByte()">getAsByte</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive byte value.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsCharacter()"><!-- --></A><H3>
-getAsCharacter</H3>
-<PRE>
-public char <B>getAsCharacter</B>()</PRE>
-<DL>
-<DD><B>Description copied from class: <CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsCharacter()">JsonElement</A></CODE></B></DD>
-<DD>convenience method to get this element as a primitive character value.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsCharacter()">getAsCharacter</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive char value.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsShort()"><!-- --></A><H3>
-getAsShort</H3>
-<PRE>
-public short <B>getAsShort</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a primitive short if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsShort()">getAsShort</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive short if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid short.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBoolean()"><!-- --></A><H3>
-getAsBoolean</H3>
-<PRE>
-public boolean <B>getAsBoolean</B>()</PRE>
-<DL>
-<DD>convenience method to get this array as a boolean if it contains a single element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBoolean()">getAsBoolean</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a boolean if it is single element array.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element in the array is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and
- is not a valid boolean.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the array has more than one element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
-equals</H3>
-<PRE>
-public boolean <B>equals</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;o)</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="hashCode()"><!-- --></A><H3>
-hashCode</H3>
-<PRE>
-public int <B>hashCode</B>()</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonArray.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonArray.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonArray.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonDeserializationContext.html b/gson/docs/javadocs/com/google/gson/JsonDeserializationContext.html
deleted file mode 100644
index 57d0dfe4f..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonDeserializationContext.html
+++ /dev/null
@@ -1,235 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonDeserializationContext (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonDeserializationContext (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonDeserializationContext.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonDeserializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface JsonDeserializationContext</H2>
-<HR>
-<DL>
-<DT><PRE>public interface <B>JsonDeserializationContext</B></DL>
-</PRE>
-
-<P>
-Context for deserialization that is passed to a custom deserializer during invocation of its
- <A HREF="../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)"><CODE>JsonDeserializer.deserialize(JsonElement, Type, JsonDeserializationContext)</CODE></A>
- method.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonDeserializationContext.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)">deserialize</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invokes default deserialization on the specified object.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)"><!-- --></A><H3>
-deserialize</H3>
-<PRE>
-&lt;T&gt; T <B>deserialize</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-                  <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)
-              throws <A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></PRE>
-<DL>
-<DD>Invokes default deserialization on the specified object. It should never be invoked on
- the element received as a parameter of the
- <A HREF="../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)"><CODE>JsonDeserializer.deserialize(JsonElement, Type, JsonDeserializationContext)</CODE></A> method. Doing
- so will result in an infinite loop since Gson will in-turn call the custom deserializer again.
-<P>
-<DD><DL>
-<DT><B>Type Parameters:</B><DD><CODE>T</CODE> - The type of the deserialized object.<DT><B>Parameters:</B><DD><CODE>json</CODE> - the parse tree.<DD><CODE>typeOfT</CODE> - type of the expected return value.
-<DT><B>Returns:</B><DD>An object of type typeOfT.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></CODE> - if the parse tree does not contain expected data.</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonDeserializationContext.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonDeserializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonDeserializer.html b/gson/docs/javadocs/com/google/gson/JsonDeserializer.html
deleted file mode 100644
index 1f1e207ad..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonDeserializer.html
+++ /dev/null
@@ -1,278 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonDeserializer (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonDeserializer (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonDeserializer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonDeserializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface JsonDeserializer&lt;T&gt;</H2>
-<DL>
-<DT><DT><B>Type Parameters:</B><DD><CODE>T</CODE> - type for which the deserializer is being registered. It is possible that a
- deserializer may be asked to deserialize a specific generic type of the T.</DL>
-<HR>
-<DL>
-<DT><PRE>public interface <B>JsonDeserializer&lt;T&gt;</B></DL>
-</PRE>
-
-<P>
-<p>Interface representing a custom deserializer for Json. You should write a custom
- deserializer, if you are not happy with the default deserialization done by Gson. You will
- also need to register this deserializer through
- <A HREF="../../../com/google/gson/GsonBuilder.html#registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)"><CODE>GsonBuilder.registerTypeAdapter(Type, Object)</CODE></A>.</p>
-
- <p>Let us look at example where defining a deserializer will be useful. The <code>Id</code> class
- defined below has two fields: <code>clazz</code> and <code>value</code>.</p>
-
- <pre>
- public class Id&lt;T&gt; {
-   private final Class&lt;T&gt; clazz;
-   private final long value;
-   public Id(Class&lt;T&gt; clazz, long value) {
-     this.clazz = clazz;
-     this.value = value;
-   }
-   public long getValue() {
-     return value;
-   }
- }
- </pre>
-
- <p>The default deserialization of <code>Id(com.foo.MyObject.class, 20L)</code> will require the
- Json string to be <code>{"clazz":com.foo.MyObject,"value":20}</code>. Suppose, you already know
- the type of the field that the <code>Id</code> will be deserialized into, and hence just want to
- deserialize it from a Json string <code>20</code>. You can achieve that by writing a custom
- deserializer:</p>
-
- <pre>
- class IdDeserializer implements JsonDeserializer&lt;Id&gt;() {
-   public Id deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
-       throws JsonParseException {
-     return new Id((Class)typeOfT, id.getValue());
-   }
- </pre>
-
- <p>You will also need to register <code>IdDeserializer</code> with Gson as follows:</p>
-
- <pre>
- Gson gson = new GsonBuilder().registerTypeAdapter(Id.class, new IdDeserializer()).create();
- </pre>
-
- <p>New applications should prefer <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A>, whose streaming API
- is more efficient than this interface's tree API.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonDeserializer.html" title="type parameter in JsonDeserializer">T</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)">deserialize</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT,
-            <A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A>&nbsp;context)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during deserialization when it encounters a field of the
- specified type.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)"><!-- --></A><H3>
-deserialize</H3>
-<PRE>
-<A HREF="../../../com/google/gson/JsonDeserializer.html" title="type parameter in JsonDeserializer">T</A> <B>deserialize</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-              <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT,
-              <A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A>&nbsp;context)
-              throws <A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></PRE>
-<DL>
-<DD>Gson invokes this call-back method during deserialization when it encounters a field of the
- specified type.
- <p>In the implementation of this call-back method, you should consider invoking
- <A HREF="../../../com/google/gson/JsonDeserializationContext.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)"><CODE>JsonDeserializationContext.deserialize(JsonElement, Type)</CODE></A> method to create objects
- for any non-trivial field of the returned object. However, you should never invoke it on the
- the same type passing <code>json</code> since that will cause an infinite loop (Gson will call your
- call-back method again).
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>json</CODE> - The Json data being deserialized<DD><CODE>typeOfT</CODE> - The type of the Object to deserialize to
-<DT><B>Returns:</B><DD>a deserialized object of the specified type typeOfT which is a subclass of <code>T</code>
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></CODE> - if json is not in the expected format of <code>typeofT</code></DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonDeserializer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonDeserializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonElement.html b/gson/docs/javadocs/com/google/gson/JsonElement.html
deleted file mode 100644
index 785eeaae5..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonElement.html
+++ /dev/null
@@ -1,802 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonElement (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonElement (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonElement.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonElement.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonElement.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonElement</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonElement</B>
-</PRE>
-<DL>
-<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>, <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A>, <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>, <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public abstract class <B>JsonElement</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
-</PRE>
-
-<P>
-A class representing an element of Json. It could either be a <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>, a
- <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A>, a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> or a <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#JsonElement()">JsonElement</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math">BigDecimal</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsBigDecimal()">getAsBigDecimal</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math">BigInteger</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsBigInteger()">getAsBigInteger</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsBoolean()">getAsBoolean</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a boolean value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;byte</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsByte()">getAsByte</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive byte value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;char</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsCharacter()">getAsCharacter</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive character value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;double</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsDouble()">getAsDouble</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive double value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;float</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsFloat()">getAsFloat</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive float value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsInt()">getAsInt</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive integer value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsJsonArray()">getAsJsonArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsJsonNull()">getAsJsonNull</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsJsonObject()">getAsJsonObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsJsonPrimitive()">getAsJsonPrimitive</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;long</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsLong()">getAsLong</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive long value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsNumber()">getAsNumber</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;short</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsShort()">getAsShort</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive short value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#getAsString()">getAsString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a string value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#isJsonArray()">isJsonArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provides check for verifying if this element is an array or not.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#isJsonNull()">isJsonNull</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provides check for verifying if this element represents a null value or not.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#isJsonObject()">isJsonObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provides check for verifying if this element is a Json object or not.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#isJsonPrimitive()">isJsonPrimitive</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;provides check for verifying if this element is a primitive or not.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonElement.html#toString()">toString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a String representation of this element.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonElement()"><!-- --></A><H3>
-JsonElement</H3>
-<PRE>
-public <B>JsonElement</B>()</PRE>
-<DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="isJsonArray()"><!-- --></A><H3>
-isJsonArray</H3>
-<PRE>
-public boolean <B>isJsonArray</B>()</PRE>
-<DL>
-<DD>provides check for verifying if this element is an array or not.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if this element is of type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A>, false otherwise.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isJsonObject()"><!-- --></A><H3>
-isJsonObject</H3>
-<PRE>
-public boolean <B>isJsonObject</B>()</PRE>
-<DL>
-<DD>provides check for verifying if this element is a Json object or not.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if this element is of type <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>, false otherwise.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isJsonPrimitive()"><!-- --></A><H3>
-isJsonPrimitive</H3>
-<PRE>
-public boolean <B>isJsonPrimitive</B>()</PRE>
-<DL>
-<DD>provides check for verifying if this element is a primitive or not.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if this element is of type <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>, false otherwise.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isJsonNull()"><!-- --></A><H3>
-isJsonNull</H3>
-<PRE>
-public boolean <B>isJsonNull</B>()</PRE>
-<DL>
-<DD>provides check for verifying if this element represents a null value or not.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if this element is of type <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>, false otherwise.<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsJsonObject()"><!-- --></A><H3>
-getAsJsonObject</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A> <B>getAsJsonObject</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>. If the element is of some
- other type, a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang"><CODE>IllegalStateException</CODE></A> will result. Hence it is best to use this method
- after ensuring that this element is of the desired type by calling <A HREF="../../../com/google/gson/JsonElement.html#isJsonObject()"><CODE>isJsonObject()</CODE></A>
- first.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of another type.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsJsonArray()"><!-- --></A><H3>
-getAsJsonArray</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A> <B>getAsJsonArray</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A>. If the element is of some
- other type, a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang"><CODE>IllegalStateException</CODE></A> will result. Hence it is best to use this method
- after ensuring that this element is of the desired type by calling <A HREF="../../../com/google/gson/JsonElement.html#isJsonArray()"><CODE>isJsonArray()</CODE></A>
- first.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of another type.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsJsonPrimitive()"><!-- --></A><H3>
-getAsJsonPrimitive</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A> <B>getAsJsonPrimitive</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>. If the element is of some
- other type, a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang"><CODE>IllegalStateException</CODE></A> will result. Hence it is best to use this method
- after ensuring that this element is of the desired type by calling <A HREF="../../../com/google/gson/JsonElement.html#isJsonPrimitive()"><CODE>isJsonPrimitive()</CODE></A>
- first.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of another type.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsJsonNull()"><!-- --></A><H3>
-getAsJsonNull</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A> <B>getAsJsonNull</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>. If the element is of some
- other type, a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang"><CODE>IllegalStateException</CODE></A> will result. Hence it is best to use this method
- after ensuring that this element is of the desired type by calling <A HREF="../../../com/google/gson/JsonElement.html#isJsonNull()"><CODE>isJsonNull()</CODE></A>
- first.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of another type.<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBoolean()"><!-- --></A><H3>
-getAsBoolean</H3>
-<PRE>
-public boolean <B>getAsBoolean</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a boolean value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive boolean value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- boolean value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsNumber()"><!-- --></A><H3>
-getAsNumber</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A> <B>getAsNumber</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- number.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsString()"><!-- --></A><H3>
-getAsString</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getAsString</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a string value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a string value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- string value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsDouble()"><!-- --></A><H3>
-getAsDouble</H3>
-<PRE>
-public double <B>getAsDouble</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive double value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive double value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- double value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsFloat()"><!-- --></A><H3>
-getAsFloat</H3>
-<PRE>
-public float <B>getAsFloat</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive float value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive float value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- float value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsLong()"><!-- --></A><H3>
-getAsLong</H3>
-<PRE>
-public long <B>getAsLong</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive long value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive long value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- long value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsInt()"><!-- --></A><H3>
-getAsInt</H3>
-<PRE>
-public int <B>getAsInt</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive integer value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive integer value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- integer value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsByte()"><!-- --></A><H3>
-getAsByte</H3>
-<PRE>
-public byte <B>getAsByte</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive byte value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive byte value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- byte value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsCharacter()"><!-- --></A><H3>
-getAsCharacter</H3>
-<PRE>
-public char <B>getAsCharacter</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive character value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive char value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- char value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBigDecimal()"><!-- --></A><H3>
-getAsBigDecimal</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math">BigDecimal</A> <B>getAsBigDecimal</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.
- * @throws NumberFormatException if the element is not a valid <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBigInteger()"><!-- --></A><H3>
-getAsBigInteger</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math">BigInteger</A> <B>getAsBigInteger</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the element is not a valid <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsShort()"><!-- --></A><H3>
-getAsShort</H3>
-<PRE>
-public short <B>getAsShort</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive short value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive short value.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</A></CODE> - if the element is of not a <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A> and is not a valid
- short value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the element is of the type <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A> but contains
- more than a single element.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toString()"><!-- --></A><H3>
-toString</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toString</B>()</PRE>
-<DL>
-<DD>Returns a String representation of this element.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonElement.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonElement.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonElement.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonIOException.html b/gson/docs/javadocs/com/google/gson/JsonIOException.html
deleted file mode 100644
index c57a0f608..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonIOException.html
+++ /dev/null
@@ -1,285 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonIOException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonIOException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonIOException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonIOException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonIOException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonIOException</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">java.lang.Throwable</A>
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">java.lang.Exception</A>
-          <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang">java.lang.RuntimeException</A>
-              <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">com.google.gson.JsonParseException</A>
-                  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonIOException</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonIOException</B><DT>extends <A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></DL>
-</PRE>
-
-<P>
-This exception is raised when Gson was unable to read an input stream
- or write to one.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-<DT><B>See Also:</B><DD><A HREF="../../../serialized-form.html#com.google.gson.JsonIOException">Serialized Form</A></DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonIOException.html#JsonIOException(java.lang.String)">JsonIOException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonIOException.html#JsonIOException(java.lang.String, java.lang.Throwable)">JsonIOException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonIOException.html#JsonIOException(java.lang.Throwable)">JsonIOException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates exception with the specified cause.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Throwable"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#fillInStackTrace()" title="class or interface in java.lang">fillInStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getCause()" title="class or interface in java.lang">getCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getLocalizedMessage()" title="class or interface in java.lang">getLocalizedMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getMessage()" title="class or interface in java.lang">getMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getStackTrace()" title="class or interface in java.lang">getStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#initCause(java.lang.Throwable)" title="class or interface in java.lang">initCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace()" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintStream)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintWriter)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#setStackTrace(java.lang.StackTraceElement[])" title="class or interface in java.lang">setStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonIOException(java.lang.String)"><!-- --></A><H3>
-JsonIOException</H3>
-<PRE>
-public <B>JsonIOException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</PRE>
-<DL>
-</DL>
-<HR>
-
-<A NAME="JsonIOException(java.lang.String, java.lang.Throwable)"><!-- --></A><H3>
-JsonIOException</H3>
-<PRE>
-public <B>JsonIOException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</PRE>
-<DL>
-</DL>
-<HR>
-
-<A NAME="JsonIOException(java.lang.Throwable)"><!-- --></A><H3>
-JsonIOException</H3>
-<PRE>
-public <B>JsonIOException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</PRE>
-<DL>
-<DD>Creates exception with the specified cause. Consider using
- <A HREF="../../../com/google/gson/JsonIOException.html#JsonIOException(java.lang.String, java.lang.Throwable)"><CODE>JsonIOException(String, Throwable)</CODE></A> instead if you can describe what happened.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>cause</CODE> - root exception that caused this exception to be thrown.</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonIOException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonIOException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonIOException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonNull.html b/gson/docs/javadocs/com/google/gson/JsonNull.html
deleted file mode 100644
index 33b2ec64e..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonNull.html
+++ /dev/null
@@ -1,348 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonNull (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonNull (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonNull.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonNull.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonNull.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonNull</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">com.google.gson.JsonElement</A>
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonNull</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonNull</B><DT>extends <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></DL>
-</PRE>
-
-<P>
-A class representing a Json <code>null</code> value.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.2</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== FIELD SUMMARY =========== -->
-
-<A NAME="field_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Field Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonNull.html#INSTANCE">INSTANCE</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;singleton for JsonNull</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonNull.html#JsonNull()">JsonNull</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonNull.html#equals(java.lang.Object)">equals</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;other)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;All instances of JsonNull are the same</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonNull.html#hashCode()">hashCode</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;All instances of JsonNull have the same hash code since they are indistinguishable</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_com.google.gson.JsonElement"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class com.google.gson.<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBigDecimal()">getAsBigDecimal</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsBigInteger()">getAsBigInteger</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsBoolean()">getAsBoolean</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsByte()">getAsByte</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsCharacter()">getAsCharacter</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsDouble()">getAsDouble</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsFloat()">getAsFloat</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsInt()">getAsInt</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonArray()">getAsJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonNull()">getAsJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonObject()">getAsJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonPrimitive()">getAsJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsLong()">getAsLong</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsNumber()">getAsNumber</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsShort()">getAsShort</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsString()">getAsString</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonArray()">isJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonNull()">isJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonObject()">isJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonPrimitive()">isJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#toString()">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ FIELD DETAIL =========== -->
-
-<A NAME="field_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Field Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="INSTANCE"><!-- --></A><H3>
-INSTANCE</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A> <B>INSTANCE</B></PRE>
-<DL>
-<DD>singleton for JsonNull
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.8</DD>
-</DL>
-</DL>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonNull()"><!-- --></A><H3>
-JsonNull</H3>
-<PRE>
-<FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Deprecated.html?is-external=true" title="class or interface in java.lang">@Deprecated</A>
-</FONT>public <B>JsonNull</B>()</PRE>
-<DL>
-<DD><B>Deprecated.</B>&nbsp;
-<P>
-<DD>Creates a new JsonNull object.
- Deprecated since Gson version 1.8. Use <A HREF="../../../com/google/gson/JsonNull.html#INSTANCE"><CODE>INSTANCE</CODE></A> instead
-<P>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="hashCode()"><!-- --></A><H3>
-hashCode</H3>
-<PRE>
-public int <B>hashCode</B>()</PRE>
-<DL>
-<DD>All instances of JsonNull have the same hash code since they are indistinguishable
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
-equals</H3>
-<PRE>
-public boolean <B>equals</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;other)</PRE>
-<DL>
-<DD>All instances of JsonNull are the same
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonNull.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonNull.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonNull.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonObject.html b/gson/docs/javadocs/com/google/gson/JsonObject.html
deleted file mode 100644
index 3afd99e41..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonObject.html
+++ /dev/null
@@ -1,576 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonObject (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonObject (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonObject.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonObject.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonObject.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonObject</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">com.google.gson.JsonElement</A>
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonObject</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonObject</B><DT>extends <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></DL>
-</PRE>
-
-<P>
-A class representing an object type in Json. An object consists of name-value pairs where names
- are strings, and values are any other type of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>. This allows for a creating a
- tree of JsonElements. The member elements of this object are maintained in order they were added.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#JsonObject()">JsonObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#add(java.lang.String, com.google.gson.JsonElement)">add</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-    <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a member, which is a name-value pair, to self.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.Boolean)">addProperty</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to add a boolean member.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.Character)">addProperty</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Character.html?is-external=true" title="class or interface in java.lang">Character</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to add a char member.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.Number)">addProperty</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to add a primitive member.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.String)">addProperty</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to add a primitive member.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Set.html?is-external=true" title="class or interface in java.util">Set</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.Entry.html?is-external=true" title="class or interface in java.util">Map.Entry</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#entrySet()">entrySet</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a set of members of this object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#equals(java.lang.Object)">equals</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;o)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#get(java.lang.String)">get</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the member with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#getAsJsonArray(java.lang.String)">getAsJsonArray</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to get the specified member as a JsonArray.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#getAsJsonObject(java.lang.String)">getAsJsonObject</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to get the specified member as a JsonObject.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#getAsJsonPrimitive(java.lang.String)">getAsJsonPrimitive</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to get the specified member as a JsonPrimitive element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#has(java.lang.String)">has</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to check if a member with the specified name is present in this object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#hashCode()">hashCode</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonObject.html#remove(java.lang.String)">remove</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the <code>property</code> from this <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_com.google.gson.JsonElement"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class com.google.gson.<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBigDecimal()">getAsBigDecimal</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsBigInteger()">getAsBigInteger</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsBoolean()">getAsBoolean</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsByte()">getAsByte</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsCharacter()">getAsCharacter</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsDouble()">getAsDouble</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsFloat()">getAsFloat</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsInt()">getAsInt</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonArray()">getAsJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonNull()">getAsJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonObject()">getAsJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonPrimitive()">getAsJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsLong()">getAsLong</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsNumber()">getAsNumber</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsShort()">getAsShort</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsString()">getAsString</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonArray()">isJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonNull()">isJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonObject()">isJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonPrimitive()">isJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#toString()">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonObject()"><!-- --></A><H3>
-JsonObject</H3>
-<PRE>
-public <B>JsonObject</B>()</PRE>
-<DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="add(java.lang.String, com.google.gson.JsonElement)"><!-- --></A><H3>
-add</H3>
-<PRE>
-public void <B>add</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-                <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;value)</PRE>
-<DL>
-<DD>Adds a member, which is a name-value pair, to self. The name must be a String, but the value
- can be an arbitrary JsonElement, thereby allowing you to build a full tree of JsonElements
- rooted at this node.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>property</CODE> - name of the member.<DD><CODE>value</CODE> - the member object.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="remove(java.lang.String)"><!-- --></A><H3>
-remove</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>remove</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property)</PRE>
-<DL>
-<DD>Removes the <code>property</code> from this <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>property</CODE> - name of the member that should be removed.
-<DT><B>Returns:</B><DD>the <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> object that is being removed.<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="addProperty(java.lang.String, java.lang.String)"><!-- --></A><H3>
-addProperty</H3>
-<PRE>
-public void <B>addProperty</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-                        <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;value)</PRE>
-<DL>
-<DD>Convenience method to add a primitive member. The specified value is converted to a
- JsonPrimitive of String.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>property</CODE> - name of the member.<DD><CODE>value</CODE> - the string value associated with the member.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="addProperty(java.lang.String, java.lang.Number)"><!-- --></A><H3>
-addProperty</H3>
-<PRE>
-public void <B>addProperty</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-                        <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A>&nbsp;value)</PRE>
-<DL>
-<DD>Convenience method to add a primitive member. The specified value is converted to a
- JsonPrimitive of Number.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>property</CODE> - name of the member.<DD><CODE>value</CODE> - the number value associated with the member.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="addProperty(java.lang.String, java.lang.Boolean)"><!-- --></A><H3>
-addProperty</H3>
-<PRE>
-public void <B>addProperty</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-                        <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A>&nbsp;value)</PRE>
-<DL>
-<DD>Convenience method to add a boolean member. The specified value is converted to a
- JsonPrimitive of Boolean.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>property</CODE> - name of the member.<DD><CODE>value</CODE> - the number value associated with the member.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="addProperty(java.lang.String, java.lang.Character)"><!-- --></A><H3>
-addProperty</H3>
-<PRE>
-public void <B>addProperty</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-                        <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Character.html?is-external=true" title="class or interface in java.lang">Character</A>&nbsp;value)</PRE>
-<DL>
-<DD>Convenience method to add a char member. The specified value is converted to a
- JsonPrimitive of Character.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>property</CODE> - name of the member.<DD><CODE>value</CODE> - the number value associated with the member.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="entrySet()"><!-- --></A><H3>
-entrySet</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Set.html?is-external=true" title="class or interface in java.util">Set</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.Entry.html?is-external=true" title="class or interface in java.util">Map.Entry</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;&gt; <B>entrySet</B>()</PRE>
-<DL>
-<DD>Returns a set of members of this object. The set is ordered, and the order is in which the
- elements were added.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>a set of members of this object.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="has(java.lang.String)"><!-- --></A><H3>
-has</H3>
-<PRE>
-public boolean <B>has</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</PRE>
-<DL>
-<DD>Convenience method to check if a member with the specified name is present in this object.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>memberName</CODE> - name of the member that is being checked for presence.
-<DT><B>Returns:</B><DD>true if there is a member with the specified name, false otherwise.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="get(java.lang.String)"><!-- --></A><H3>
-get</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>get</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</PRE>
-<DL>
-<DD>Returns the member with the specified name.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>memberName</CODE> - name of the member that is being requested.
-<DT><B>Returns:</B><DD>the member matching the name. Null if no such member exists.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsJsonPrimitive(java.lang.String)"><!-- --></A><H3>
-getAsJsonPrimitive</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A> <B>getAsJsonPrimitive</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</PRE>
-<DL>
-<DD>Convenience method to get the specified member as a JsonPrimitive element.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>memberName</CODE> - name of the member being requested.
-<DT><B>Returns:</B><DD>the JsonPrimitive corresponding to the specified member.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsJsonArray(java.lang.String)"><!-- --></A><H3>
-getAsJsonArray</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A> <B>getAsJsonArray</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</PRE>
-<DL>
-<DD>Convenience method to get the specified member as a JsonArray.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>memberName</CODE> - name of the member being requested.
-<DT><B>Returns:</B><DD>the JsonArray corresponding to the specified member.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsJsonObject(java.lang.String)"><!-- --></A><H3>
-getAsJsonObject</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A> <B>getAsJsonObject</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</PRE>
-<DL>
-<DD>Convenience method to get the specified member as a JsonObject.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>memberName</CODE> - name of the member being requested.
-<DT><B>Returns:</B><DD>the JsonObject corresponding to the specified member.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
-equals</H3>
-<PRE>
-public boolean <B>equals</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;o)</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="hashCode()"><!-- --></A><H3>
-hashCode</H3>
-<PRE>
-public int <B>hashCode</B>()</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonObject.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonObject.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonObject.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonParseException.html b/gson/docs/javadocs/com/google/gson/JsonParseException.html
deleted file mode 100644
index 0297398e1..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonParseException.html
+++ /dev/null
@@ -1,302 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonParseException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonParseException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonParseException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonParser.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonParseException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParseException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonParseException</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">java.lang.Throwable</A>
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">java.lang.Exception</A>
-          <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang">java.lang.RuntimeException</A>
-              <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonParseException</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A></DD>
-</DL>
-<DL>
-<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>, <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public class <B>JsonParseException</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang">RuntimeException</A></DL>
-</PRE>
-
-<P>
-This exception is raised if there is a serious issue that occurs during parsing of a Json
- string.  One of the main usages for this class is for the Gson infrastructure.  If the incoming
- Json is bad/malicious, an instance of this exception is raised.
-
- <p>This exception is a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang"><CODE>RuntimeException</CODE></A> because it is exposed to the client.  Using a
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang"><CODE>RuntimeException</CODE></A> avoids bad coding practices on the client side where they catch the
- exception and do nothing.  It is often the case that you want to blow up if there is a parsing
- error (i.e. often clients do not know how to recover from a <A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><CODE>JsonParseException</CODE></A>.</p>
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-<DT><B>See Also:</B><DD><A HREF="../../../serialized-form.html#com.google.gson.JsonParseException">Serialized Form</A></DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonParseException.html#JsonParseException(java.lang.String)">JsonParseException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates exception with the specified message.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonParseException.html#JsonParseException(java.lang.String, java.lang.Throwable)">JsonParseException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                   <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates exception with the specified message and cause.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonParseException.html#JsonParseException(java.lang.Throwable)">JsonParseException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates exception with the specified cause.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Throwable"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#fillInStackTrace()" title="class or interface in java.lang">fillInStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getCause()" title="class or interface in java.lang">getCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getLocalizedMessage()" title="class or interface in java.lang">getLocalizedMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getMessage()" title="class or interface in java.lang">getMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getStackTrace()" title="class or interface in java.lang">getStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#initCause(java.lang.Throwable)" title="class or interface in java.lang">initCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace()" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintStream)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintWriter)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#setStackTrace(java.lang.StackTraceElement[])" title="class or interface in java.lang">setStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonParseException(java.lang.String)"><!-- --></A><H3>
-JsonParseException</H3>
-<PRE>
-public <B>JsonParseException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</PRE>
-<DL>
-<DD>Creates exception with the specified message. If you are wrapping another exception, consider
- using <A HREF="../../../com/google/gson/JsonParseException.html#JsonParseException(java.lang.String, java.lang.Throwable)"><CODE>JsonParseException(String, Throwable)</CODE></A> instead.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>msg</CODE> - error message describing a possible cause of this exception.</DL>
-</DL>
-<HR>
-
-<A NAME="JsonParseException(java.lang.String, java.lang.Throwable)"><!-- --></A><H3>
-JsonParseException</H3>
-<PRE>
-public <B>JsonParseException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                          <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</PRE>
-<DL>
-<DD>Creates exception with the specified message and cause.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>msg</CODE> - error message describing what happened.<DD><CODE>cause</CODE> - root exception that caused this exception to be thrown.</DL>
-</DL>
-<HR>
-
-<A NAME="JsonParseException(java.lang.Throwable)"><!-- --></A><H3>
-JsonParseException</H3>
-<PRE>
-public <B>JsonParseException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</PRE>
-<DL>
-<DD>Creates exception with the specified cause. Consider using
- <A HREF="../../../com/google/gson/JsonParseException.html#JsonParseException(java.lang.String, java.lang.Throwable)"><CODE>JsonParseException(String, Throwable)</CODE></A> instead if you can describe what happened.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>cause</CODE> - root exception that caused this exception to be thrown.</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonParseException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonParser.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonParseException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParseException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonParser.html b/gson/docs/javadocs/com/google/gson/JsonParser.html
deleted file mode 100644
index ab6c02dac..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonParser.html
+++ /dev/null
@@ -1,332 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonParser (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonParser (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonParser.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonParser</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonParser</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonParser</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
-</PRE>
-
-<P>
-A parser to parse Json into a parse tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonParser.html#JsonParser()">JsonParser</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonParser.html#parse(com.google.gson.stream.JsonReader)">parse</A></B>(<A HREF="../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next value from the JSON stream as a parse tree.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonParser.html#parse(java.io.Reader)">parse</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified JSON string into a parse tree</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonParser.html#parse(java.lang.String)">parse</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified JSON string into a parse tree</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonParser()"><!-- --></A><H3>
-JsonParser</H3>
-<PRE>
-public <B>JsonParser</B>()</PRE>
-<DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="parse(java.lang.String)"><!-- --></A><H3>
-parse</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>parse</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)
-                  throws <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>Parses the specified JSON string into a parse tree
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>json</CODE> - JSON text
-<DT><B>Returns:</B><DD>a parse tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s corresponding to the specified JSON
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></CODE> - if the specified text is not valid JSON
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE><DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="parse(java.io.Reader)"><!-- --></A><H3>
-parse</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>parse</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json)
-                  throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>,
-                         <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>Parses the specified JSON string into a parse tree
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>json</CODE> - JSON text
-<DT><B>Returns:</B><DD>a parse tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s corresponding to the specified JSON
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></CODE> - if the specified text is not valid JSON
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE>
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE><DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="parse(com.google.gson.stream.JsonReader)"><!-- --></A><H3>
-parse</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>parse</B>(<A HREF="../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;json)
-                  throws <A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>,
-                         <A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></PRE>
-<DL>
-<DD>Returns the next value from the JSON stream as a parse tree.
-<P>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></CODE> - if there is an IOException or if the specified
-     text is not valid JSON
-<DD><CODE><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></CODE>
-<DD><CODE><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></CODE><DT><B>Since:</B></DT>
-  <DD>1.6</DD>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonParser.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonPrimitive.html b/gson/docs/javadocs/com/google/gson/JsonPrimitive.html
deleted file mode 100644
index 79861db2b..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonPrimitive.html
+++ /dev/null
@@ -1,741 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonPrimitive (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonPrimitive (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonPrimitive.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonParser.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonPrimitive.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonPrimitive.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonPrimitive</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">com.google.gson.JsonElement</A>
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonPrimitive</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonPrimitive</B><DT>extends <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></DL>
-</PRE>
-
-<P>
-A class representing a Json primitive value. A primitive value
- is either a String, a Java primitive, or a Java primitive
- wrapper type.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.Boolean)">JsonPrimitive</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A>&nbsp;bool)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a primitive containing a boolean value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.Character)">JsonPrimitive</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Character.html?is-external=true" title="class or interface in java.lang">Character</A>&nbsp;c)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a primitive containing a character.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.Number)">JsonPrimitive</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A>&nbsp;number)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a primitive containing a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.String)">JsonPrimitive</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;string)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a primitive containing a String value.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#equals(java.lang.Object)">equals</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;obj)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math">BigDecimal</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsBigDecimal()">getAsBigDecimal</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math">BigInteger</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsBigInteger()">getAsBigInteger</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsBoolean()">getAsBoolean</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a boolean value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;byte</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsByte()">getAsByte</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive byte value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;char</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsCharacter()">getAsCharacter</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive character value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;double</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsDouble()">getAsDouble</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive double.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;float</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsFloat()">getAsFloat</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a float.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsInt()">getAsInt</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive integer.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;long</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsLong()">getAsLong</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive long.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsNumber()">getAsNumber</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a Number.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;short</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsShort()">getAsShort</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a primitive short.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#getAsString()">getAsString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a String.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#hashCode()">hashCode</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#isBoolean()">isBoolean</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check whether this primitive contains a boolean value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#isNumber()">isNumber</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check whether this primitive contains a Number.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonPrimitive.html#isString()">isString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check whether this primitive contains a String value.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_com.google.gson.JsonElement"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class com.google.gson.<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsJsonArray()">getAsJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonNull()">getAsJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonObject()">getAsJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#getAsJsonPrimitive()">getAsJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonArray()">isJsonArray</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonNull()">isJsonNull</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonObject()">isJsonObject</A>, <A HREF="../../../com/google/gson/JsonElement.html#isJsonPrimitive()">isJsonPrimitive</A>, <A HREF="../../../com/google/gson/JsonElement.html#toString()">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonPrimitive(java.lang.Boolean)"><!-- --></A><H3>
-JsonPrimitive</H3>
-<PRE>
-public <B>JsonPrimitive</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Boolean.html?is-external=true" title="class or interface in java.lang">Boolean</A>&nbsp;bool)</PRE>
-<DL>
-<DD>Create a primitive containing a boolean value.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>bool</CODE> - the value to create the primitive with.</DL>
-</DL>
-<HR>
-
-<A NAME="JsonPrimitive(java.lang.Number)"><!-- --></A><H3>
-JsonPrimitive</H3>
-<PRE>
-public <B>JsonPrimitive</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A>&nbsp;number)</PRE>
-<DL>
-<DD>Create a primitive containing a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>number</CODE> - the value to create the primitive with.</DL>
-</DL>
-<HR>
-
-<A NAME="JsonPrimitive(java.lang.String)"><!-- --></A><H3>
-JsonPrimitive</H3>
-<PRE>
-public <B>JsonPrimitive</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;string)</PRE>
-<DL>
-<DD>Create a primitive containing a String value.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>string</CODE> - the value to create the primitive with.</DL>
-</DL>
-<HR>
-
-<A NAME="JsonPrimitive(java.lang.Character)"><!-- --></A><H3>
-JsonPrimitive</H3>
-<PRE>
-public <B>JsonPrimitive</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Character.html?is-external=true" title="class or interface in java.lang">Character</A>&nbsp;c)</PRE>
-<DL>
-<DD>Create a primitive containing a character. The character is turned into a one character String
- since Json only supports String.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>c</CODE> - the value to create the primitive with.</DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="isBoolean()"><!-- --></A><H3>
-isBoolean</H3>
-<PRE>
-public boolean <B>isBoolean</B>()</PRE>
-<DL>
-<DD>Check whether this primitive contains a boolean value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if this primitive contains a boolean value, false otherwise.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBoolean()"><!-- --></A><H3>
-getAsBoolean</H3>
-<PRE>
-public boolean <B>getAsBoolean</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a boolean value.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBoolean()">getAsBoolean</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive boolean value.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isNumber()"><!-- --></A><H3>
-isNumber</H3>
-<PRE>
-public boolean <B>isNumber</B>()</PRE>
-<DL>
-<DD>Check whether this primitive contains a Number.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if this primitive contains a Number, false otherwise.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsNumber()"><!-- --></A><H3>
-getAsNumber</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A> <B>getAsNumber</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a Number.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsNumber()">getAsNumber</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a Number.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid Number.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isString()"><!-- --></A><H3>
-isString</H3>
-<PRE>
-public boolean <B>isString</B>()</PRE>
-<DL>
-<DD>Check whether this primitive contains a String value.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if this primitive contains a String value, false otherwise.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsString()"><!-- --></A><H3>
-getAsString</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getAsString</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a String.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsString()">getAsString</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a String.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsDouble()"><!-- --></A><H3>
-getAsDouble</H3>
-<PRE>
-public double <B>getAsDouble</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive double.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsDouble()">getAsDouble</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive double.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid double.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBigDecimal()"><!-- --></A><H3>
-getAsBigDecimal</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math">BigDecimal</A> <B>getAsBigDecimal</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBigDecimal()">getAsBigDecimal</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsBigInteger()"><!-- --></A><H3>
-getAsBigInteger</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math">BigInteger</A> <B>getAsBigInteger</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsBigInteger()">getAsBigInteger</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsFloat()"><!-- --></A><H3>
-getAsFloat</H3>
-<PRE>
-public float <B>getAsFloat</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a float.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsFloat()">getAsFloat</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a float.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid float.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsLong()"><!-- --></A><H3>
-getAsLong</H3>
-<PRE>
-public long <B>getAsLong</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive long.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsLong()">getAsLong</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive long.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid long.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsShort()"><!-- --></A><H3>
-getAsShort</H3>
-<PRE>
-public short <B>getAsShort</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive short.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsShort()">getAsShort</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive short.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid short value.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsInt()"><!-- --></A><H3>
-getAsInt</H3>
-<PRE>
-public int <B>getAsInt</B>()</PRE>
-<DL>
-<DD>convenience method to get this element as a primitive integer.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsInt()">getAsInt</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive integer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the value contained is not a valid integer.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsByte()"><!-- --></A><H3>
-getAsByte</H3>
-<PRE>
-public byte <B>getAsByte</B>()</PRE>
-<DL>
-<DD><B>Description copied from class: <CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsByte()">JsonElement</A></CODE></B></DD>
-<DD>convenience method to get this element as a primitive byte value.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsByte()">getAsByte</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive byte value.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getAsCharacter()"><!-- --></A><H3>
-getAsCharacter</H3>
-<PRE>
-public char <B>getAsCharacter</B>()</PRE>
-<DL>
-<DD><B>Description copied from class: <CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsCharacter()">JsonElement</A></CODE></B></DD>
-<DD>convenience method to get this element as a primitive character value.
-<P>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="../../../com/google/gson/JsonElement.html#getAsCharacter()">getAsCharacter</A></CODE> in class <CODE><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>get this element as a primitive char value.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="hashCode()"><!-- --></A><H3>
-hashCode</H3>
-<PRE>
-public int <B>hashCode</B>()</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
-equals</H3>
-<PRE>
-public boolean <B>equals</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;obj)</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonPrimitive.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonParser.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonPrimitive.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonPrimitive.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonSerializationContext.html b/gson/docs/javadocs/com/google/gson/JsonSerializationContext.html
deleted file mode 100644
index ef8be7d79..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonSerializationContext.html
+++ /dev/null
@@ -1,246 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonSerializationContext (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonSerializationContext (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonSerializationContext.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonSerializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface JsonSerializationContext</H2>
-<HR>
-<DL>
-<DT><PRE>public interface <B>JsonSerializationContext</B></DL>
-</PRE>
-
-<P>
-Context for serialization that is passed to a custom serializer during invocation of its
- <A HREF="../../../com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)"><CODE>JsonSerializer.serialize(Object, Type, JsonSerializationContext)</CODE></A> method.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonSerializationContext.html#serialize(java.lang.Object)">serialize</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invokes default serialization on the specified object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonSerializationContext.html#serialize(java.lang.Object, java.lang.reflect.Type)">serialize</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-          <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invokes default serialization on the specified object passing the specific type information.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="serialize(java.lang.Object)"><!-- --></A><H3>
-serialize</H3>
-<PRE>
-<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>serialize</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</PRE>
-<DL>
-<DD>Invokes default serialization on the specified object.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object that needs to be serialized.
-<DT><B>Returns:</B><DD>a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s corresponding to the serialized form of <code>src</code>.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="serialize(java.lang.Object, java.lang.reflect.Type)"><!-- --></A><H3>
-serialize</H3>
-<PRE>
-<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>serialize</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</PRE>
-<DL>
-<DD>Invokes default serialization on the specified object passing the specific type information.
- It should never be invoked on the element received as a parameter of the
- <A HREF="../../../com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)"><CODE>JsonSerializer.serialize(Object, Type, JsonSerializationContext)</CODE></A> method. Doing
- so will result in an infinite loop since Gson will in-turn call the custom serializer again.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object that needs to be serialized.<DD><CODE>typeOfSrc</CODE> - the actual genericized type of src object.
-<DT><B>Returns:</B><DD>a tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s corresponding to the serialized form of <code>src</code>.</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonSerializationContext.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonSerializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonSerializer.html b/gson/docs/javadocs/com/google/gson/JsonSerializer.html
deleted file mode 100644
index db6f39efc..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonSerializer.html
+++ /dev/null
@@ -1,275 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonSerializer (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonSerializer (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonSerializer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonSerializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface JsonSerializer&lt;T&gt;</H2>
-<DL>
-<DT><DT><B>Type Parameters:</B><DD><CODE>T</CODE> - type for which the serializer is being registered. It is possible that a serializer
-        may be asked to serialize a specific generic type of the T.</DL>
-<HR>
-<DL>
-<DT><PRE>public interface <B>JsonSerializer&lt;T&gt;</B></DL>
-</PRE>
-
-<P>
-Interface representing a custom serializer for Json. You should write a custom serializer, if
- you are not happy with the default serialization done by Gson. You will also need to register
- this serializer through <A HREF="../../../com/google/gson/GsonBuilder.html#registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)"><CODE>GsonBuilder.registerTypeAdapter(Type, Object)</CODE></A>.
-
- <p>Let us look at example where defining a serializer will be useful. The <code>Id</code> class
- defined below has two fields: <code>clazz</code> and <code>value</code>.</p>
-
- <p><pre>
- public class Id&lt;T&gt; {
-   private final Class&lt;T&gt; clazz;
-   private final long value;
-
-   public Id(Class&lt;T&gt; clazz, long value) {
-     this.clazz = clazz;
-     this.value = value;
-   }
-
-   public long getValue() {
-     return value;
-   }
- }
- </pre></p>
-
- <p>The default serialization of <code>Id(com.foo.MyObject.class, 20L)</code> will be
- <code>{"clazz":com.foo.MyObject,"value":20}</code>. Suppose, you just want the output to be
- the value instead, which is <code>20</code> in this case. You can achieve that by writing a custom
- serializer:</p>
-
- <p><pre>
- class IdSerializer implements JsonSerializer&lt;Id&gt;() {
-   public JsonElement serialize(Id id, Type typeOfId, JsonSerializationContext context) {
-     return new JsonPrimitive(id.getValue());
-   }
- }
- </pre></p>
-
- <p>You will also need to register <code>IdSerializer</code> with Gson as follows:</p>
- <pre>
- Gson gson = new GsonBuilder().registerTypeAdapter(Id.class, new IdSerializer()).create();
- </pre>
-
- <p>New applications should prefer <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A>, whose streaming API
- is more efficient than this interface's tree API.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)">serialize</A></B>(<A HREF="../../../com/google/gson/JsonSerializer.html" title="type parameter in JsonSerializer">T</A>&nbsp;src,
-          <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-          <A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A>&nbsp;context)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during serialization when it encounters a field of the
- specified type.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)"><!-- --></A><A NAME="serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)"><!-- --></A><H3>
-serialize</H3>
-<PRE>
-<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>serialize</B>(<A HREF="../../../com/google/gson/JsonSerializer.html" title="type parameter in JsonSerializer">T</A>&nbsp;src,
-                      <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-                      <A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A>&nbsp;context)</PRE>
-<DL>
-<DD>Gson invokes this call-back method during serialization when it encounters a field of the
- specified type.
-
- <p>In the implementation of this call-back method, you should consider invoking
- <A HREF="../../../com/google/gson/JsonSerializationContext.html#serialize(java.lang.Object, java.lang.reflect.Type)"><CODE>JsonSerializationContext.serialize(Object, Type)</CODE></A> method to create JsonElements for any
- non-trivial field of the <code>src</code> object. However, you should never invoke it on the
- <code>src</code> object itself since that will cause an infinite loop (Gson will call your
- call-back method again).</p>
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>src</CODE> - the object that needs to be converted to Json.<DD><CODE>typeOfSrc</CODE> - the actual type (fully genericized version) of the source object.
-<DT><B>Returns:</B><DD>a JsonElement corresponding to the specified object.</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonSerializer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonSerializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonStreamParser.html b/gson/docs/javadocs/com/google/gson/JsonStreamParser.html
deleted file mode 100644
index 208cbea3d..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonStreamParser.html
+++ /dev/null
@@ -1,369 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonStreamParser (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonStreamParser (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonStreamParser.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonStreamParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonStreamParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonStreamParser</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonStreamParser</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonStreamParser</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A><DT>implements <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</DL>
-</PRE>
-
-<P>
-A streaming parser that allows reading of multiple <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s from the specified reader
- asynchronously.
- 
- <p>This class is conditionally thread-safe (see Item 70, Effective Java second edition). To
- properly use this class across multiple threads, you will need to add some external
- synchronization.  For example:
- 
- <pre>
- JsonStreamParser parser = new JsonStreamParser("['first'] {'second':10} 'third'");
- JsonElement element;
- synchronized (parser) {  // synchronize on an object shared by threads
-   if (parser.hasNext()) {
-     element = parser.next();
-   }
- }
- </pre>
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonStreamParser.html#JsonStreamParser(java.io.Reader)">JsonStreamParser</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;reader)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonStreamParser.html#JsonStreamParser(java.lang.String)">JsonStreamParser</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonStreamParser.html#hasNext()">hasNext</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if a <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> is available on the input for consumption</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonStreamParser.html#next()">next</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next available <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> on the reader.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonStreamParser.html#remove()">remove</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This optional <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util"><CODE>Iterator</CODE></A> method is not relevant for stream parsing and hence is not
- implemented.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonStreamParser(java.lang.String)"><!-- --></A><H3>
-JsonStreamParser</H3>
-<PRE>
-public <B>JsonStreamParser</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)</PRE>
-<DL>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>json</CODE> - The string containing JSON elements concatenated to each other.<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DL>
-<HR>
-
-<A NAME="JsonStreamParser(java.io.Reader)"><!-- --></A><H3>
-JsonStreamParser</H3>
-<PRE>
-public <B>JsonStreamParser</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;reader)</PRE>
-<DL>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>reader</CODE> - The data stream containing JSON elements concatenated to each other.<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="next()"><!-- --></A><H3>
-next</H3>
-<PRE>
-public <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>next</B>()
-                 throws <A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></PRE>
-<DL>
-<DD>Returns the next available <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> on the reader. Null if none available.
-<P>
-<DD><DL>
-<DT><B>Specified by:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true#next()" title="class or interface in java.util">next</A></CODE> in interface <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the next available <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> on the reader. Null if none available.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></CODE> - if the incoming stream is malformed JSON.<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="hasNext()"><!-- --></A><H3>
-hasNext</H3>
-<PRE>
-public boolean <B>hasNext</B>()</PRE>
-<DL>
-<DD>Returns true if a <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> is available on the input for consumption
-<P>
-<DD><DL>
-<DT><B>Specified by:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true#hasNext()" title="class or interface in java.util">hasNext</A></CODE> in interface <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>true if a <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> is available on the input, false otherwise<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="remove()"><!-- --></A><H3>
-remove</H3>
-<PRE>
-public void <B>remove</B>()</PRE>
-<DL>
-<DD>This optional <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util"><CODE>Iterator</CODE></A> method is not relevant for stream parsing and hence is not
- implemented.
-<P>
-<DD><DL>
-<DT><B>Specified by:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true#remove()" title="class or interface in java.util">remove</A></CODE> in interface <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</CODE></DL>
-</DD>
-<DD><DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonStreamParser.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonStreamParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonStreamParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/JsonSyntaxException.html b/gson/docs/javadocs/com/google/gson/JsonSyntaxException.html
deleted file mode 100644
index 216d89718..000000000
--- a/gson/docs/javadocs/com/google/gson/JsonSyntaxException.html
+++ /dev/null
@@ -1,286 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonSyntaxException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonSyntaxException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonSyntaxException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonSyntaxException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSyntaxException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class JsonSyntaxException</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">java.lang.Throwable</A>
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">java.lang.Exception</A>
-          <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang">java.lang.RuntimeException</A>
-              <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">com.google.gson.JsonParseException</A>
-                  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.JsonSyntaxException</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public final class <B>JsonSyntaxException</B><DT>extends <A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></DL>
-</PRE>
-
-<P>
-This exception is raised when Gson attempts to read (or write) a malformed
- JSON element.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-<DT><B>See Also:</B><DD><A HREF="../../../serialized-form.html#com.google.gson.JsonSyntaxException">Serialized Form</A></DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonSyntaxException.html#JsonSyntaxException(java.lang.String)">JsonSyntaxException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonSyntaxException.html#JsonSyntaxException(java.lang.String, java.lang.Throwable)">JsonSyntaxException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                    <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/JsonSyntaxException.html#JsonSyntaxException(java.lang.Throwable)">JsonSyntaxException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates exception with the specified cause.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Throwable"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#fillInStackTrace()" title="class or interface in java.lang">fillInStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getCause()" title="class or interface in java.lang">getCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getLocalizedMessage()" title="class or interface in java.lang">getLocalizedMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getMessage()" title="class or interface in java.lang">getMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getStackTrace()" title="class or interface in java.lang">getStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#initCause(java.lang.Throwable)" title="class or interface in java.lang">initCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace()" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintStream)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintWriter)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#setStackTrace(java.lang.StackTraceElement[])" title="class or interface in java.lang">setStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonSyntaxException(java.lang.String)"><!-- --></A><H3>
-JsonSyntaxException</H3>
-<PRE>
-public <B>JsonSyntaxException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</PRE>
-<DL>
-</DL>
-<HR>
-
-<A NAME="JsonSyntaxException(java.lang.String, java.lang.Throwable)"><!-- --></A><H3>
-JsonSyntaxException</H3>
-<PRE>
-public <B>JsonSyntaxException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                           <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</PRE>
-<DL>
-</DL>
-<HR>
-
-<A NAME="JsonSyntaxException(java.lang.Throwable)"><!-- --></A><H3>
-JsonSyntaxException</H3>
-<PRE>
-public <B>JsonSyntaxException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;cause)</PRE>
-<DL>
-<DD>Creates exception with the specified cause. Consider using
- <A HREF="../../../com/google/gson/JsonSyntaxException.html#JsonSyntaxException(java.lang.String, java.lang.Throwable)"><CODE>JsonSyntaxException(String, Throwable)</CODE></A> instead if you can
- describe what actually happened.
-<P>
-<DL>
-<DT><B>Parameters:</B><DD><CODE>cause</CODE> - root exception that caused this exception to be thrown.</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonSyntaxException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/JsonSyntaxException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSyntaxException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/LongSerializationPolicy.html b/gson/docs/javadocs/com/google/gson/LongSerializationPolicy.html
deleted file mode 100644
index c11d122d0..000000000
--- a/gson/docs/javadocs/com/google/gson/LongSerializationPolicy.html
+++ /dev/null
@@ -1,365 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-LongSerializationPolicy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="LongSerializationPolicy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/LongSerializationPolicy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/LongSerializationPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="LongSerializationPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#enum_constant_summary">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#enum_constant_detail">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Enum LongSerializationPolicy</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">java.lang.Enum</A>&lt;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>&gt;
-      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.LongSerializationPolicy</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</A>&lt;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>&gt;</DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public enum <B>LongSerializationPolicy</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</A>&lt;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>&gt;</DL>
-</PRE>
-
-<P>
-Defines the expected format for a <code>long</code> or <code>Long</code> type when its serialized.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== ENUM CONSTANT SUMMARY =========== -->
-
-<A NAME="enum_constant_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Enum Constant Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/LongSerializationPolicy.html#DEFAULT">DEFAULT</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is the "default" serialization policy that will output a <code>long</code> object as a JSON
- number.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/LongSerializationPolicy.html#STRING">STRING</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serializes a long value as a quoted string.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>abstract &nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/LongSerializationPolicy.html#serialize(java.lang.Long)">serialize</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Long.html?is-external=true" title="class or interface in java.lang">Long</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialize this <code>value</code> using this serialization policy.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/LongSerializationPolicy.html#valueOf(java.lang.String)">valueOf</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the enum constant of this type with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>[]</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/LongSerializationPolicy.html#values()">values</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array containing the constants of this enum type, in
-the order they are declared.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Enum"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#compareTo(E)" title="class or interface in java.lang">compareTo</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#getDeclaringClass()" title="class or interface in java.lang">getDeclaringClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#name()" title="class or interface in java.lang">name</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#ordinal()" title="class or interface in java.lang">ordinal</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#valueOf(java.lang.Class, java.lang.String)" title="class or interface in java.lang">valueOf</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ ENUM CONSTANT DETAIL =========== -->
-
-<A NAME="enum_constant_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Enum Constant Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="DEFAULT"><!-- --></A><H3>
-DEFAULT</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A> <B>DEFAULT</B></PRE>
-<DL>
-<DD>This is the "default" serialization policy that will output a <code>long</code> object as a JSON
- number.  For example, assume an object has a long field named "f" then the serialized output
- would be:
- <code>{"f":123}</code>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="STRING"><!-- --></A><H3>
-STRING</H3>
-<PRE>
-public static final <A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A> <B>STRING</B></PRE>
-<DL>
-<DD>Serializes a long value as a quoted string.  For example, assume an object has a long field 
- named "f" then the serialized output would be:
- <code>{"f":"123"}</code>.
-<P>
-<DL>
-</DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="values()"><!-- --></A><H3>
-values</H3>
-<PRE>
-public static <A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>[] <B>values</B>()</PRE>
-<DL>
-<DD>Returns an array containing the constants of this enum type, in
-the order they are declared.  This method may be used to iterate
-over the constants as follows:
-<pre>
-for (LongSerializationPolicy c : LongSerializationPolicy.values())
-&nbsp;   System.out.println(c);
-</pre>
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>an array containing the constants of this enum type, in
-the order they are declared</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="valueOf(java.lang.String)"><!-- --></A><H3>
-valueOf</H3>
-<PRE>
-public static <A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A> <B>valueOf</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</PRE>
-<DL>
-<DD>Returns the enum constant of this type with the specified name.
-The string must match <I>exactly</I> an identifier used to declare an
-enum constant in this type.  (Extraneous whitespace characters are 
-not permitted.)
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the enum constant to be returned.
-<DT><B>Returns:</B><DD>the enum constant with the specified name
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</A></CODE> - if this enum type has no constant
-with the specified name
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</A></CODE> - if the argument is null</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="serialize(java.lang.Long)"><!-- --></A><H3>
-serialize</H3>
-<PRE>
-public abstract <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>serialize</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Long.html?is-external=true" title="class or interface in java.lang">Long</A>&nbsp;value)</PRE>
-<DL>
-<DD>Serialize this <code>value</code> using this serialization policy.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - the long value to be serialized into a <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>
-<DT><B>Returns:</B><DD>the serialized version of <code>value</code></DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/LongSerializationPolicy.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/LongSerializationPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="LongSerializationPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#enum_constant_summary">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#enum_constant_detail">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/TypeAdapter.html b/gson/docs/javadocs/com/google/gson/TypeAdapter.html
deleted file mode 100644
index c1a05f0e0..000000000
--- a/gson/docs/javadocs/com/google/gson/TypeAdapter.html
+++ /dev/null
@@ -1,574 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-TypeAdapter (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="TypeAdapter (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TypeAdapter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/TypeAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Class TypeAdapter&lt;T&gt;</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.TypeAdapter&lt;T&gt;</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public abstract class <B>TypeAdapter&lt;T&gt;</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
-</PRE>
-
-<P>
-Converts Java objects to and from JSON.
-
- <h3>Defining a type's JSON form</h3>
- By default Gson converts application classes to JSON using its built-in type
- adapters. If Gson's default JSON conversion isn't appropriate for a type,
- extend this class to customize the conversion. Here's an example of a type
- adapter for an (X,Y) coordinate point: <pre>   <code>public class PointAdapter extends TypeAdapter&lt;Point&gt; {
-     public Point read(JsonReader reader) throws IOException {
-       if (reader.peek() == JsonToken.NULL) {
-         reader.nextNull();
-         return null;
-       }
-       String xy = reader.nextString();
-       String[] parts = xy.split(",");
-       int x = Integer.parseInt(parts[0]);
-       int y = Integer.parseInt(parts[1]);
-       return new Point(x, y);
-     }
-     public void write(JsonWriter writer, Point value) throws IOException {
-       if (value == null) {
-         writer.nullValue();
-         return;
-       }
-       String xy = value.getX() + "," + value.getY();
-       writer.value(xy);
-     }
-   }</code></pre>
- With this type adapter installed, Gson will convert <code>Points</code> to JSON as
- strings like <code>"5,8"</code> rather than objects like <code>{"x":5,"y":8}</code>. In
- this case the type adapter binds a rich Java class to a compact JSON value.
-
- <p>The <A HREF="../../../com/google/gson/TypeAdapter.html#read(com.google.gson.stream.JsonReader)"><CODE>read()</CODE></A> method must read exactly one value
- and <A HREF="../../../com/google/gson/TypeAdapter.html#write(com.google.gson.stream.JsonWriter, T)"><CODE>write()</CODE></A> must write exactly one value.
- For primitive types this is means readers should make exactly one call to
- <code>nextBoolean()</code>, <code>nextDouble()</code>, <code>nextInt()</code>, <code>nextLong()</code>, <code>nextString()</code> or <code>nextNull()</code>. Writers should make
- exactly one call to one of <code>value()</code> or <code>nullValue()</code>.
- For arrays, type adapters should start with a call to <code>beginArray()</code>,
- convert all elements, and finish with a call to <code>endArray()</code>. For
- objects, they should start with <code>beginObject()</code>, convert the object,
- and finish with <code>endObject()</code>. Failing to convert a value or converting
- too many values may cause the application to crash.
-
- <p>Type adapters should be prepared to read null from the stream and write it
- to the stream. Alternatively, they should use <A HREF="../../../com/google/gson/TypeAdapter.html#nullSafe()"><CODE>nullSafe()</CODE></A> method while
- registering the type adapter with Gson. If your <code>Gson</code> instance
- has been configured to <A HREF="../../../com/google/gson/GsonBuilder.html#serializeNulls()"><CODE>GsonBuilder.serializeNulls()</CODE></A>, these nulls will be
- written to the final document. Otherwise the value (and the corresponding name
- when writing to a JSON object) will be omitted automatically. In either case
- your type adapter must handle null.
-
- <p>To use a custom type adapter with Gson, you must <i>register</i> it with a
- <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A>: <pre>   <code>GsonBuilder builder = new GsonBuilder();
-   builder.registerTypeAdapter(Point.class, new PointAdapter());
-   // if PointAdapter didn't check for nulls in its read/write methods, you should instead use
-   // builder.registerTypeAdapter(Point.class, new PointAdapter().nullSafe());
-   ...
-   Gson gson = builder.create();
- </code></pre>
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>2.1</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#TypeAdapter()">TypeAdapter</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#fromJson(java.io.Reader)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;in)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts the JSON document in <code>in</code> to a Java object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#fromJson(java.lang.String)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts the JSON document in <code>json</code> to a Java object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#fromJsonTree(com.google.gson.JsonElement)">fromJsonTree</A></B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonTree)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts <code>jsonTree</code> to a Java object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#nullSafe()">nullSafe</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This wrapper method is used to make a type adapter null tolerant.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>abstract &nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#read(com.google.gson.stream.JsonReader)">read</A></B>(<A HREF="../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;in)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads one JSON value (an array, object, string, number, boolean or null)
- and converts it to a Java object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#toJson(T)">toJson</A></B>(<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts <code>value</code> to a JSON document.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#toJson(java.io.Writer, T)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</A>&nbsp;out,
-       <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts <code>value</code> to a JSON document and writes it to <code>out</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#toJsonTree(T)">toJsonTree</A></B>(<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts <code>value</code> to a JSON tree.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>abstract &nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapter.html#write(com.google.gson.stream.JsonWriter, T)">write</A></B>(<A HREF="../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;out,
-      <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes one JSON value (an array, object, string, number, boolean or null)
- for <code>value</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="TypeAdapter()"><!-- --></A><H3>
-TypeAdapter</H3>
-<PRE>
-public <B>TypeAdapter</B>()</PRE>
-<DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="write(com.google.gson.stream.JsonWriter,java.lang.Object)"><!-- --></A><A NAME="write(com.google.gson.stream.JsonWriter, T)"><!-- --></A><H3>
-write</H3>
-<PRE>
-public abstract void <B>write</B>(<A HREF="../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;out,
-                           <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)
-                    throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Writes one JSON value (an array, object, string, number, boolean or null)
- for <code>value</code>.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - the Java object to write. May be null.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(java.io.Writer,java.lang.Object)"><!-- --></A><A NAME="toJson(java.io.Writer, T)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public final void <B>toJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</A>&nbsp;out,
-                         <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)
-                  throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Converts <code>value</code> to a JSON document and writes it to <code>out</code>.
- Unlike Gson's similar <A HREF="../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, java.lang.Appendable)"><CODE>toJson</CODE></A>
- method, this write is strict. Create a <A HREF="../../../com/google/gson/stream/JsonWriter.html#setLenient(boolean)"><CODE>lenient</CODE></A> <code>JsonWriter</code> and call
- <A HREF="../../../com/google/gson/TypeAdapter.html#write(com.google.gson.stream.JsonWriter, T)"><CODE>write(com.google.gson.stream.JsonWriter, Object)</CODE></A> for lenient
- writing.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - the Java object to convert. May be null.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE><DT><B>Since:</B></DT>
-  <DD>2.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nullSafe()"><!-- --></A><H3>
-nullSafe</H3>
-<PRE>
-public final <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&gt; <B>nullSafe</B>()</PRE>
-<DL>
-<DD>This wrapper method is used to make a type adapter null tolerant. In general, a
- type adapter is required to handle nulls in write and read methods. Here is how this
- is typically done:<br>
- <pre>   <code>Gson gson = new GsonBuilder().registerTypeAdapter(Foo.class,
-   new TypeAdapter&lt;Foo&gt;() {
-     public Foo read(JsonReader in) throws IOException {
-       if (in.peek() == JsonToken.NULL) {
-         in.nextNull();
-         return null;
-       }
-       // read a Foo from in and return it
-     }
-     public void write(JsonWriter out, Foo src) throws IOException {
-       if (src == null) {
-         out.nullValue();
-         return;
-       }
-       // write src as JSON to out
-     }
-   }).create();
- </code></pre>
- You can avoid this boilerplate handling of nulls by wrapping your type adapter with
- this method. Here is how we will rewrite the above example:
- <pre>   <code>Gson gson = new GsonBuilder().registerTypeAdapter(Foo.class,
-   new TypeAdapter&lt;Foo&gt;() {
-     public Foo read(JsonReader in) throws IOException {
-       // read a Foo from in and return it
-     }
-     public void write(JsonWriter out, Foo src) throws IOException {
-       // write src as JSON to out
-     }
-   }.nullSafe()).create();
- </code></pre>
- Note that we didn't need to check for nulls in our type adapter after we used nullSafe.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJson(java.lang.Object)"><!-- --></A><A NAME="toJson(T)"><!-- --></A><H3>
-toJson</H3>
-<PRE>
-public final <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toJson</B>(<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)
-                    throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Converts <code>value</code> to a JSON document. Unlike Gson's similar <A HREF="../../../com/google/gson/Gson.html#toJson(java.lang.Object)"><CODE>toJson</CODE></A> method, this write is strict. Create a <A HREF="../../../com/google/gson/stream/JsonWriter.html#setLenient(boolean)"><CODE>lenient</CODE></A> <code>JsonWriter</code> and call
- <A HREF="../../../com/google/gson/TypeAdapter.html#write(com.google.gson.stream.JsonWriter, T)"><CODE>write(com.google.gson.stream.JsonWriter, Object)</CODE></A> for lenient
- writing.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - the Java object to convert. May be null.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE><DT><B>Since:</B></DT>
-  <DD>2.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toJsonTree(java.lang.Object)"><!-- --></A><A NAME="toJsonTree(T)"><!-- --></A><H3>
-toJsonTree</H3>
-<PRE>
-public final <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> <B>toJsonTree</B>(<A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)</PRE>
-<DL>
-<DD>Converts <code>value</code> to a JSON tree.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - the Java object to convert. May be null.
-<DT><B>Returns:</B><DD>the converted JSON tree. May be <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>.<DT><B>Since:</B></DT>
-  <DD>2.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="read(com.google.gson.stream.JsonReader)"><!-- --></A><H3>
-read</H3>
-<PRE>
-public abstract <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A> <B>read</B>(<A HREF="../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;in)
-                throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Reads one JSON value (an array, object, string, number, boolean or null)
- and converts it to a Java object. Returns the converted object.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the converted Java object. May be null.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(java.io.Reader)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public final <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A> <B>fromJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;in)
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Converts the JSON document in <code>in</code> to a Java object. Unlike Gson's
- similar <A HREF="../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.Class)"><CODE>fromJson</CODE></A> method, this
- read is strict. Create a <A HREF="../../../com/google/gson/stream/JsonReader.html#setLenient(boolean)"><CODE>lenient</CODE></A>
- <code>JsonReader</code> and call <A HREF="../../../com/google/gson/TypeAdapter.html#read(com.google.gson.stream.JsonReader)"><CODE>read(JsonReader)</CODE></A> for lenient reading.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the converted Java object. May be null.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE><DT><B>Since:</B></DT>
-  <DD>2.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJson(java.lang.String)"><!-- --></A><H3>
-fromJson</H3>
-<PRE>
-public final <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A> <B>fromJson</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Converts the JSON document in <code>json</code> to a Java object. Unlike Gson's
- similar <A HREF="../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.Class)"><CODE>fromJson</CODE></A> method, this read is
- strict. Create a <A HREF="../../../com/google/gson/stream/JsonReader.html#setLenient(boolean)"><CODE>lenient</CODE></A> <code>JsonReader</code> and call <A HREF="../../../com/google/gson/TypeAdapter.html#read(com.google.gson.stream.JsonReader)"><CODE>read(JsonReader)</CODE></A> for lenient reading.
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the converted Java object. May be null.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE><DT><B>Since:</B></DT>
-  <DD>2.2</DD>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="fromJsonTree(com.google.gson.JsonElement)"><!-- --></A><H3>
-fromJsonTree</H3>
-<PRE>
-public final <A HREF="../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A> <B>fromJsonTree</B>(<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonTree)</PRE>
-<DL>
-<DD>Converts <code>jsonTree</code> to a Java object.
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>jsonTree</CODE> - the Java object to convert. May be <A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>.<DT><B>Since:</B></DT>
-  <DD>2.2</DD>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TypeAdapter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/TypeAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/TypeAdapterFactory.html b/gson/docs/javadocs/com/google/gson/TypeAdapterFactory.html
deleted file mode 100644
index 2fb30755f..000000000
--- a/gson/docs/javadocs/com/google/gson/TypeAdapterFactory.html
+++ /dev/null
@@ -1,354 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-TypeAdapterFactory (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="TypeAdapterFactory (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TypeAdapterFactory.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/TypeAdapterFactory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapterFactory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson</FONT>
-<BR>
-Interface TypeAdapterFactory</H2>
-<HR>
-<DL>
-<DT><PRE>public interface <B>TypeAdapterFactory</B></DL>
-</PRE>
-
-<P>
-Creates type adapters for set of related types. Type adapter factories are
- most useful when several types share similar structure in their JSON form.
-
- <h3>Example: Converting enums to lowercase</h3>
- In this example, we implement a factory that creates type adapters for all
- enums. The type adapters will write enums in lowercase, despite the fact
- that they're defined in <code>CONSTANT_CASE</code> in the corresponding Java
- model: <pre>   <code>public class LowercaseEnumTypeAdapterFactory implements TypeAdapterFactory {
-     public &lt;T&gt; TypeAdapter&lt;T&gt; create(Gson gson, TypeToken&lt;T&gt; type) {
-       Class&lt;T&gt; rawType = (Class&lt;T&gt;) type.getRawType();
-       if (!rawType.isEnum()) {
-         return null;
-       }
-
-       final Map&lt;String, T&gt; lowercaseToConstant = new HashMap&lt;String, T&gt;();
-       for (T constant : rawType.getEnumConstants()) {
-         lowercaseToConstant.put(toLowercase(constant), constant);
-       }
-
-       return new TypeAdapter&lt;T&gt;() {
-         public void write(JsonWriter out, T value) throws IOException {
-           if (value == null) {
-             out.nullValue();
-           } else {
-             out.value(toLowercase(value));
-           }
-         }
-
-         public T read(JsonReader reader) throws IOException {
-           if (reader.peek() == JsonToken.NULL) {
-             reader.nextNull();
-             return null;
-           } else {
-             return lowercaseToConstant.get(reader.nextString());
-           }
-         }
-       };
-     }
-
-     private String toLowercase(Object o) {
-       return o.toString().toLowerCase(Locale.US);
-     }
-   }
- </code></pre>
-
- <p>Type adapter factories select which types they provide type adapters
- for. If a factory cannot support a given type, it must return null when
- that type is passed to <A HREF="../../../com/google/gson/TypeAdapterFactory.html#create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)"><CODE>create(com.google.gson.Gson, com.google.gson.reflect.TypeToken<T>)</CODE></A>. Factories should expect <code>create()</code> to be called on them for many types and should return null for
- most of those types. In the above example the factory returns null for
- calls to <code>create()</code> where <code>type</code> is not an enum.
-
- <p>A factory is typically called once per type, but the returned type
- adapter may be used many times. It is most efficient to do expensive work
- like reflection in <code>create()</code> so that the type adapter's <code>read()</code> and <code>write()</code> methods can be very fast. In this example the
- mapping from lowercase name to enum value is computed eagerly.
-
- <p>As with type adapters, factories must be <i>registered</i> with a <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A> for them to take effect: <pre>   <code>GsonBuilder builder = new GsonBuilder();
-  builder.registerTypeAdapterFactory(new LowercaseEnumTypeAdapterFactory());
-  ...
-  Gson gson = builder.create();
- </code></pre>
- If multiple factories support the same type, the factory registered earlier
- takes precedence.
-
- <h3>Example: composing other type adapters</h3>
- In this example we implement a factory for Guava's <code>Multiset</code>
- collection type. The factory can be used to create type adapters for
- multisets of any element type: the type adapter for <code>Multiset&lt;String&gt;</code> is different from the type adapter for <code>Multiset&lt;URL&gt;</code>.
-
- <p>The type adapter <i>delegates</i> to another type adapter for the
- multiset elements. It figures out the element type by reflecting on the
- multiset's type token. A <code>Gson</code> is passed in to <code>create</code> for
- just this purpose: <pre>   <code>public class MultisetTypeAdapterFactory implements TypeAdapterFactory {
-     public &lt;T&gt; TypeAdapter&lt;T&gt; create(Gson gson, TypeToken&lt;T&gt; typeToken) {
-       Type type = typeToken.getType();
-       if (typeToken.getRawType() != Multiset.class
-           || !(type instanceof ParameterizedType)) {
-         return null;
-       }
-
-       Type elementType = ((ParameterizedType) type).getActualTypeArguments()[0];
-       TypeAdapter&lt;?&gt; elementAdapter = gson.getAdapter(TypeToken.get(elementType));
-       return (TypeAdapter&lt;T&gt;) newMultisetAdapter(elementAdapter);
-     }
-
-     private &lt;E&gt; TypeAdapter&lt;Multiset&lt;E&gt;&gt; newMultisetAdapter(
-         final TypeAdapter&lt;E&gt; elementAdapter) {
-       return new TypeAdapter&lt;Multiset&lt;E&gt;&gt;() {
-         public void write(JsonWriter out, Multiset&lt;E&gt; value) throws IOException {
-           if (value == null) {
-             out.nullValue();
-             return;
-           }
-
-           out.beginArray();
-           for (Multiset.Entry&lt;E&gt; entry : value.entrySet()) {
-             out.value(entry.getCount());
-             elementAdapter.write(out, entry.getElement());
-           }
-           out.endArray();
-         }
-
-         public Multiset&lt;E&gt; read(JsonReader in) throws IOException {
-           if (in.peek() == JsonToken.NULL) {
-             in.nextNull();
-             return null;
-           }
-
-           Multiset&lt;E&gt; result = LinkedHashMultiset.create();
-           in.beginArray();
-           while (in.hasNext()) {
-             int count = in.nextInt();
-             E element = elementAdapter.read(in);
-             result.add(element, count);
-           }
-           in.endArray();
-           return result;
-         }
-       };
-     }
-   }
- </code></pre>
- Delegating from one type adapter to another is extremely powerful; it's
- the foundation of how Gson converts Java objects and collections. Whenever
- possible your factory should retrieve its delegate type adapter in the
- <code>create()</code> method; this ensures potentially-expensive type adapter
- creation happens only once.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>2.1</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../com/google/gson/TypeAdapterFactory.html#create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)">create</A></B>(<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>&nbsp;gson,
-       <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a type adapter for <code>type</code>, or null if this factory doesn't
- support <code>type</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)"><!-- --></A><H3>
-create</H3>
-<PRE>
-&lt;T&gt; <A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt; <B>create</B>(<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>&nbsp;gson,
-                          <A HREF="../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</PRE>
-<DL>
-<DD>Returns a type adapter for <code>type</code>, or null if this factory doesn't
- support <code>type</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TypeAdapterFactory.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/TypeAdapterFactory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapterFactory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/Expose.html b/gson/docs/javadocs/com/google/gson/annotations/Expose.html
deleted file mode 100644
index e87aa8bd7..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/Expose.html
+++ /dev/null
@@ -1,277 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Expose (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Expose (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Expose.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/Expose.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Expose.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;REQUIRED&nbsp;|&nbsp;<A HREF="#annotation_type_optional_element_summary">OPTIONAL</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.annotations</FONT>
-<BR>
-Annotation Type Expose</H2>
-<HR>
-<DL>
-<DT><PRE><FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true" title="class or interface in java.lang.annotation">@Retention</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>=<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/RetentionPolicy.html?is-external=true#RUNTIME" title="class or interface in java.lang.annotation">RUNTIME</A>)
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true" title="class or interface in java.lang.annotation">@Target</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>=<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#FIELD" title="class or interface in java.lang.annotation">FIELD</A>)
-</FONT>public @interface <B>Expose</B></DL>
-</PRE>
-
-<P>
-An annotation that indicates this member should be exposed for JSON
- serialization or deserialization.
-
- <p>This annotation has no effect unless you build <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A>
- with a <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A> and invoke
- <A HREF="../../../../com/google/gson/GsonBuilder.html#excludeFieldsWithoutExposeAnnotation()"><CODE>GsonBuilder.excludeFieldsWithoutExposeAnnotation()</CODE></A>
- method.</p>
-
- <p>Here is an example of how this annotation is meant to be used:
- <p><pre>
- public class User {
-   &#64Expose private String firstName;
-   &#64Expose(serialize = false) private String lastName;
-   &#64Expose (serialize = false, deserialize = false) private String emailAddress;
-   private String password;
- }
- </pre></p>
- If you created Gson with <code>new Gson()</code>, the <code>toJson()</code> and <code>fromJson()</code>
- methods will use the <code>password</code> field along-with <code>firstName</code>, <code>lastName</code>,
- and <code>emailAddress</code> for serialization and deserialization. However, if you created Gson
- with <code>Gson gson = new GsonBuilder().excludeFieldsWithoutExposeAnnotation().create()</code>
- then the <code>toJson()</code> and <code>fromJson()</code> methods of Gson will exclude the
- <code>password</code> field. This is because the <code>password</code> field is not marked with the
- <code>@Expose</code> annotation. Gson will also exclude <code>lastName</code> and <code>emailAddress</code>
- from serialization since <code>serialize</code> is set to <code>false</code>. Similarly, Gson will
- exclude <code>emailAddress</code> from deserialization since <code>deserialize</code> is set to false.
-
- <p>Note that another way to achieve the same effect would have been to just mark the
- <code>password</code> field as <code>transient</code>, and Gson would have excluded it even with default
- settings. The <code>@Expose</code> annotation is useful in a style of programming where you want to
- explicitly specify all fields that should get considered for serialization or deserialization.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== ANNOTATION TYPE OPTIONAL MEMBER SUMMARY =========== -->
-
-<A NAME="annotation_type_optional_element_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Optional Element Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/annotations/Expose.html#deserialize()">deserialize</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If <code>true</code>, the field marked with this annotation is deserialized from the JSON.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/annotations/Expose.html#serialize()">serialize</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If <code>true</code>, the field marked with this annotation is written out in the JSON while
- serializing.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="serialize()"><!-- --></A><H3>
-serialize</H3>
-<PRE>
-public abstract boolean <B>serialize</B></PRE>
-<DL>
-<DD>If <code>true</code>, the field marked with this annotation is written out in the JSON while
- serializing. If <code>false</code>, the field marked with this annotation is skipped from the
- serialized output. Defaults to <code>true</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-<DL>
-<DT><B>Default:</B><DD>true</DD>
-</DL>
-</DL>
-<HR>
-
-<A NAME="deserialize()"><!-- --></A><H3>
-deserialize</H3>
-<PRE>
-public abstract boolean <B>deserialize</B></PRE>
-<DL>
-<DD>If <code>true</code>, the field marked with this annotation is deserialized from the JSON.
- If <code>false</code>, the field marked with this annotation is skipped during deserialization. 
- Defaults to <code>true</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Since:</B></DT>
-  <DD>1.4</DD>
-</DL>
-<DL>
-<DT><B>Default:</B><DD>true</DD>
-</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Expose.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/Expose.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Expose.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;REQUIRED&nbsp;|&nbsp;<A HREF="#annotation_type_optional_element_summary">OPTIONAL</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/JsonAdapter.html b/gson/docs/javadocs/com/google/gson/annotations/JsonAdapter.html
deleted file mode 100644
index 5b2af7b20..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/JsonAdapter.html
+++ /dev/null
@@ -1,275 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonAdapter (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonAdapter (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonAdapter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/JsonAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.annotations</FONT>
-<BR>
-Annotation Type JsonAdapter</H2>
-<HR>
-<DL>
-<DT><PRE><FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true" title="class or interface in java.lang.annotation">@Retention</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>=<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/RetentionPolicy.html?is-external=true#RUNTIME" title="class or interface in java.lang.annotation">RUNTIME</A>)
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true" title="class or interface in java.lang.annotation">@Target</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>={<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#TYPE" title="class or interface in java.lang.annotation">TYPE</A>,<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#FIELD" title="class or interface in java.lang.annotation">FIELD</A>})
-</FONT>public @interface <B>JsonAdapter</B></DL>
-</PRE>
-
-<P>
-An annotation that indicates the Gson <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A> to use with a class
- or field.
-
- <p>Here is an example of how this annotation is used:</p>
- <pre>
- &#64JsonAdapter(UserJsonAdapter.class)
- public class User {
-   public final String firstName, lastName;
-   private User(String firstName, String lastName) {
-     this.firstName = firstName;
-     this.lastName = lastName;
-   }
- }
- public class UserJsonAdapter extends TypeAdapter&lt;User&gt; {
-   &#64Override public void write(JsonWriter out, User user) throws IOException {
-     // implement write: combine firstName and lastName into name
-     out.beginObject();
-     out.name("name");
-     out.value(user.firstName + " " + user.lastName);
-     out.endObject();
-     // implement the write method
-   }
-   &#64Override public User read(JsonReader in) throws IOException {
-     // implement read: split name into firstName and lastName
-     in.beginObject();
-     in.nextName();
-     String[] nameParts = in.nextString().split(" ");
-     in.endObject();
-     return new User(nameParts[0], nameParts[1]);
-   }
- }
- </pre>
-
- Since User class specified UserJsonAdapter.class in &#64JsonAdapter annotation, it
- will automatically be invoked to serialize/deserialize User instances. <br>
-
- <p> Here is an example of how to apply this annotation to a field.
- <pre>
- private static final class Gadget {
-   &#64JsonAdapter(UserJsonAdapter2.class)
-   final User user;
-   Gadget(User user) {
-     this.user = user;
-   }
- }
- </pre>
-
- It's possible to specify different type adapters on a field, that
- field's type, and in the <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A>. Field
- annotations take precedence over <code>GsonBuilder</code>-registered type
- adapters, which in turn take precedence over annotated types.
-
- <p>The class referenced by this annotation must be either a <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A> or a <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><CODE>TypeAdapterFactory</CODE></A>. Using the factory interface
- makes it possible to delegate to the enclosing <code>Gson</code> instance.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>2.3</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch, Jesse Wilson</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== ANNOTATION TYPE REQUIRED MEMBER SUMMARY =========== -->
-
-<A NAME="annotation_type_required_element_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Required Element Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/annotations/JsonAdapter.html#value()">value</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Either a <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A> or <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><CODE>TypeAdapterFactory</CODE></A>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ ANNOTATION TYPE MEMBER DETAIL =========== -->
-
-<A NAME="annotation_type_element_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Element Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="value()"><!-- --></A><H3>
-value</H3>
-<PRE>
-public abstract <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt; <B>value</B></PRE>
-<DL>
-<DD>Either a <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A> or <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><CODE>TypeAdapterFactory</CODE></A>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonAdapter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/JsonAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/SerializedName.html b/gson/docs/javadocs/com/google/gson/annotations/SerializedName.html
deleted file mode 100644
index df6ece9ab..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/SerializedName.html
+++ /dev/null
@@ -1,253 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-SerializedName (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="SerializedName (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SerializedName.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/SerializedName.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="SerializedName.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.annotations</FONT>
-<BR>
-Annotation Type SerializedName</H2>
-<HR>
-<DL>
-<DT><PRE><FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true" title="class or interface in java.lang.annotation">@Retention</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>=<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/RetentionPolicy.html?is-external=true#RUNTIME" title="class or interface in java.lang.annotation">RUNTIME</A>)
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true" title="class or interface in java.lang.annotation">@Target</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>=<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#FIELD" title="class or interface in java.lang.annotation">FIELD</A>)
-</FONT>public @interface <B>SerializedName</B></DL>
-</PRE>
-
-<P>
-An annotation that indicates this member should be serialized to JSON with
- the provided name value as its field name.
-
- <p>This annotation will override any <A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><CODE>FieldNamingPolicy</CODE></A>, including
- the default field naming policy, that may have been set on the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A>
- instance.  A different naming policy can set using the <code>GsonBuilder</code> class.  See
- <A HREF="../../../../com/google/gson/GsonBuilder.html#setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)"><CODE>GsonBuilder.setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)</CODE></A>
- for more information.</p>
-
- <p>Here is an example of how this annotation is meant to be used:</p>
- <pre>
- public class SomeClassWithFields {
-   &#64SerializedName("name") private final String someField;
-   private final String someOtherField;
-
-   public SomeClassWithFields(String a, String b) {
-     this.someField = a;
-     this.someOtherField = b;
-   }
- }
- </pre>
-
- <p>The following shows the output that is generated when serializing an instance of the
- above example class:</p>
- <pre>
- SomeClassWithFields objectToSerialize = new SomeClassWithFields("a", "b");
- Gson gson = new Gson();
- String jsonRepresentation = gson.toJson(objectToSerialize);
- System.out.println(jsonRepresentation);
-
- ===== OUTPUT =====
- {"name":"a","someOtherField":"b"}
- </pre>
-
- <p>NOTE: The value you specify in this annotation must be a valid JSON field name.</p>
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-<DT><B>See Also:</B><DD><A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><CODE>FieldNamingPolicy</CODE></A></DL>
-<HR>
-
-<P>
-<!-- =========== ANNOTATION TYPE REQUIRED MEMBER SUMMARY =========== -->
-
-<A NAME="annotation_type_required_element_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Required Element Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/annotations/SerializedName.html#value()">value</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ ANNOTATION TYPE MEMBER DETAIL =========== -->
-
-<A NAME="annotation_type_element_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Element Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="value()"><!-- --></A><H3>
-value</H3>
-<PRE>
-public abstract <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>value</B></PRE>
-<DL>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>the desired name of the field when it is serialized</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/SerializedName.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/SerializedName.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="SerializedName.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/Since.html b/gson/docs/javadocs/com/google/gson/annotations/Since.html
deleted file mode 100644
index 06148fb2b..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/Since.html
+++ /dev/null
@@ -1,245 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Since (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Since (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Since.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/Since.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Since.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.annotations</FONT>
-<BR>
-Annotation Type Since</H2>
-<HR>
-<DL>
-<DT><PRE><FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true" title="class or interface in java.lang.annotation">@Retention</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>=<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/RetentionPolicy.html?is-external=true#RUNTIME" title="class or interface in java.lang.annotation">RUNTIME</A>)
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true" title="class or interface in java.lang.annotation">@Target</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>={<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#FIELD" title="class or interface in java.lang.annotation">FIELD</A>,<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#TYPE" title="class or interface in java.lang.annotation">TYPE</A>})
-</FONT>public @interface <B>Since</B></DL>
-</PRE>
-
-<P>
-An annotation that indicates the version number since a member or a type has been present.
- This annotation is useful to manage versioning of your Json classes for a web-service.
-
- <p>
- This annotation has no effect unless you build <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> with a
- <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A> and invoke
- <A HREF="../../../../com/google/gson/GsonBuilder.html#setVersion(double)"><CODE>GsonBuilder.setVersion(double)</CODE></A> method.
-
- <p>Here is an example of how this annotation is meant to be used:</p>
- <pre>
- public class User {
-   private String firstName;
-   private String lastName;
-   &#64Since(1.0) private String emailAddress;
-   &#64Since(1.0) private String password;
-   &#64Since(1.1) private Address address;
- }
- </pre>
-
- <p>If you created Gson with <code>new Gson()</code>, the <code>toJson()</code> and <code>fromJson()</code>
- methods will use all the fields for serialization and deserialization. However, if you created
- Gson with <code>Gson gson = new GsonBuilder().setVersion(1.0).create()</code> then the
- <code>toJson()</code> and <code>fromJson()</code> methods of Gson will exclude the <code>address</code> field
- since it's version number is set to <code>1.1</code>.</p>
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== ANNOTATION TYPE REQUIRED MEMBER SUMMARY =========== -->
-
-<A NAME="annotation_type_required_element_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Required Element Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;double</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/annotations/Since.html#value()">value</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the value indicating a version number since this member
- or type has been present.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ ANNOTATION TYPE MEMBER DETAIL =========== -->
-
-<A NAME="annotation_type_element_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Element Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="value()"><!-- --></A><H3>
-value</H3>
-<PRE>
-public abstract double <B>value</B></PRE>
-<DL>
-<DD>the value indicating a version number since this member
- or type has been present.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Since.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/Since.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Since.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/Until.html b/gson/docs/javadocs/com/google/gson/annotations/Until.html
deleted file mode 100644
index 813740cb5..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/Until.html
+++ /dev/null
@@ -1,250 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:54 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Until (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Until (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Until.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/Until.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Until.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.annotations</FONT>
-<BR>
-Annotation Type Until</H2>
-<HR>
-<DL>
-<DT><PRE><FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true" title="class or interface in java.lang.annotation">@Retention</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Retention.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>=<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/RetentionPolicy.html?is-external=true#RUNTIME" title="class or interface in java.lang.annotation">RUNTIME</A>)
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true" title="class or interface in java.lang.annotation">@Target</A>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Target.html?is-external=true#value()" title="class or interface in java.lang.annotation">value</A>={<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#FIELD" title="class or interface in java.lang.annotation">FIELD</A>,<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/ElementType.html?is-external=true#TYPE" title="class or interface in java.lang.annotation">TYPE</A>})
-</FONT>public @interface <B>Until</B></DL>
-</PRE>
-
-<P>
-An annotation that indicates the version number until a member or a type should be present.
- Basically, if Gson is created with a version number that exceeds the value stored in the
- <code>Until</code> annotation then the field will be ignored from the JSON output.  This annotation
- is useful to manage versioning of your JSON classes for a web-service.
-
- <p>
- This annotation has no effect unless you build <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> with a
- <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A> and invoke
- <A HREF="../../../../com/google/gson/GsonBuilder.html#setVersion(double)"><CODE>GsonBuilder.setVersion(double)</CODE></A> method.
-
- <p>Here is an example of how this annotation is meant to be used:</p>
- <pre>
- public class User {
-   private String firstName;
-   private String lastName;
-   &#64Until(1.1) private String emailAddress;
-   &#64Until(1.1) private String password;
- }
- </pre>
-
- <p>If you created Gson with <code>new Gson()</code>, the <code>toJson()</code> and <code>fromJson()</code>
- methods will use all the fields for serialization and deserialization. However, if you created
- Gson with <code>Gson gson = new GsonBuilder().setVersion(1.2).create()</code> then the
- <code>toJson()</code> and <code>fromJson()</code> methods of Gson will exclude the <code>emailAddress</code>
- and <code>password</code> fields from the example above, because the version number passed to the 
- GsonBuilder, <code>1.2</code>, exceeds the version number set on the <code>Until</code> annotation,
- <code>1.1</code>, for those fields.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.3</DD>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== ANNOTATION TYPE REQUIRED MEMBER SUMMARY =========== -->
-
-<A NAME="annotation_type_required_element_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Required Element Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;double</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/annotations/Until.html#value()">value</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the value indicating a version number until this member
- or type should be ignored.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ ANNOTATION TYPE MEMBER DETAIL =========== -->
-
-<A NAME="annotation_type_element_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Element Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="value()"><!-- --></A><H3>
-value</H3>
-<PRE>
-public abstract double <B>value</B></PRE>
-<DL>
-<DD>the value indicating a version number until this member
- or type should be ignored.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Until.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/Until.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Until.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;<A HREF="#annotation_type_required_element_summary">REQUIRED</A>&nbsp;|&nbsp;OPTIONAL</FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#annotation_type_element_detail">ELEMENT</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/class-use/Expose.html b/gson/docs/javadocs/com/google/gson/annotations/class-use/Expose.html
deleted file mode 100644
index 2146bfb73..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/class-use/Expose.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.annotations.Expose (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.annotations.Expose (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useExpose.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Expose.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.annotations.Expose</B></H2>
-</CENTER>
-No usage of com.google.gson.annotations.Expose
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useExpose.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Expose.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/class-use/JsonAdapter.html b/gson/docs/javadocs/com/google/gson/annotations/class-use/JsonAdapter.html
deleted file mode 100644
index d6a264221..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/class-use/JsonAdapter.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.annotations.JsonAdapter (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.annotations.JsonAdapter (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useJsonAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.annotations.JsonAdapter</B></H2>
-</CENTER>
-No usage of com.google.gson.annotations.JsonAdapter
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useJsonAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/class-use/SerializedName.html b/gson/docs/javadocs/com/google/gson/annotations/class-use/SerializedName.html
deleted file mode 100644
index 6e9cc8961..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/class-use/SerializedName.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.annotations.SerializedName (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.annotations.SerializedName (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useSerializedName.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="SerializedName.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.annotations.SerializedName</B></H2>
-</CENTER>
-No usage of com.google.gson.annotations.SerializedName
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useSerializedName.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="SerializedName.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/class-use/Since.html b/gson/docs/javadocs/com/google/gson/annotations/class-use/Since.html
deleted file mode 100644
index 7d4162c51..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/class-use/Since.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.annotations.Since (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.annotations.Since (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useSince.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Since.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.annotations.Since</B></H2>
-</CENTER>
-No usage of com.google.gson.annotations.Since
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useSince.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Since.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/class-use/Until.html b/gson/docs/javadocs/com/google/gson/annotations/class-use/Until.html
deleted file mode 100644
index d18f2702f..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/class-use/Until.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.annotations.Until (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.annotations.Until (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useUntil.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Until.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.annotations.Until</B></H2>
-</CENTER>
-No usage of com.google.gson.annotations.Until
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/annotations//class-useUntil.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Until.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/package-frame.html b/gson/docs/javadocs/com/google/gson/annotations/package-frame.html
deleted file mode 100644
index 97a313e44..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/package-frame.html
+++ /dev/null
@@ -1,41 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.annotations (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-
-</HEAD>
-
-<BODY BGCOLOR="white">
-<FONT size="+1" CLASS="FrameTitleFont">
-<A HREF="../../../../com/google/gson/annotations/package-summary.html" target="classFrame">com.google.gson.annotations</A></FONT>
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Annotation Types</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="Expose.html" title="annotation in com.google.gson.annotations" target="classFrame">Expose</A>
-<BR>
-<A HREF="JsonAdapter.html" title="annotation in com.google.gson.annotations" target="classFrame">JsonAdapter</A>
-<BR>
-<A HREF="SerializedName.html" title="annotation in com.google.gson.annotations" target="classFrame">SerializedName</A>
-<BR>
-<A HREF="Since.html" title="annotation in com.google.gson.annotations" target="classFrame">Since</A>
-<BR>
-<A HREF="Until.html" title="annotation in com.google.gson.annotations" target="classFrame">Until</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/package-summary.html b/gson/docs/javadocs/com/google/gson/annotations/package-summary.html
deleted file mode 100644
index 602236b0e..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/package-summary.html
+++ /dev/null
@@ -1,194 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.annotations (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson.annotations (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/package-summary.html"><B>PREV PACKAGE</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-summary.html"><B>NEXT PACKAGE</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<H2>
-Package com.google.gson.annotations
-</H2>
-This package provides annotations that can be used with <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A>.
-<P>
-<B>See:</B>
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#package_description"><B>Description</B></A>
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Annotation Types Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations">Expose</A></B></TD>
-<TD>An annotation that indicates this member should be exposed for JSON
- serialization or deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations">JsonAdapter</A></B></TD>
-<TD>An annotation that indicates the Gson <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A> to use with a class
- or field.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations">SerializedName</A></B></TD>
-<TD>An annotation that indicates this member should be serialized to JSON with
- the provided name value as its field name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations">Since</A></B></TD>
-<TD>An annotation that indicates the version number since a member or a type has been present.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations">Until</A></B></TD>
-<TD>An annotation that indicates the version number until a member or a type should be present.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-<A NAME="package_description"><!-- --></A><H2>
-Package com.google.gson.annotations Description
-</H2>
-
-<P>
-This package provides annotations that can be used with <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A>.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/package-summary.html"><B>PREV PACKAGE</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-summary.html"><B>NEXT PACKAGE</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/package-tree.html b/gson/docs/javadocs/com/google/gson/annotations/package-tree.html
deleted file mode 100644
index ec5d62de1..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/package-tree.html
+++ /dev/null
@@ -1,157 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.annotations Class Hierarchy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson.annotations Class Hierarchy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/package-tree.html"><B>PREV</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-tree.html"><B>NEXT</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-Hierarchy For Package com.google.gson.annotations
-</H2>
-</CENTER>
-<DL>
-<DT><B>Package Hierarchies:</B><DD><A HREF="../../../../overview-tree.html">All Packages</A></DL>
-<HR>
-<H2>
-Annotation Type Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="../../../../com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations"><B>Until</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="../../../../com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><B>Since</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="../../../../com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><B>SerializedName</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="../../../../com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><B>JsonAdapter</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="../../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><B>Expose</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-</UL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/package-tree.html"><B>PREV</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-tree.html"><B>NEXT</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/annotations/package-use.html b/gson/docs/javadocs/com/google/gson/annotations/package-use.html
deleted file mode 100644
index aa43d5cef..000000000
--- a/gson/docs/javadocs/com/google/gson/annotations/package-use.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Package com.google.gson.annotations (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Package com.google.gson.annotations (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Package<br>com.google.gson.annotations</B></H2>
-</CENTER>
-No usage of com.google.gson.annotations
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/annotations/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/ExclusionStrategy.html b/gson/docs/javadocs/com/google/gson/class-use/ExclusionStrategy.html
deleted file mode 100644
index df78f8f38..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/ExclusionStrategy.html
+++ /dev/null
@@ -1,199 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.ExclusionStrategy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.ExclusionStrategy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useExclusionStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="ExclusionStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.ExclusionStrategy</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">addDeserializationExclusionStrategy</A></B>(<A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply the passed in exclusion strategy during deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">addSerializationExclusionStrategy</A></B>(<A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply the passed in exclusion strategy during serialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setExclusionStrategies(com.google.gson.ExclusionStrategy...)">setExclusionStrategies</A></B>(<A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>...&nbsp;strategies)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a set of exclusion strategies during both serialization and
- deserialization.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useExclusionStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="ExclusionStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/FieldAttributes.html b/gson/docs/javadocs/com/google/gson/class-use/FieldAttributes.html
deleted file mode 100644
index 0bca5831d..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/FieldAttributes.html
+++ /dev/null
@@ -1,182 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.FieldAttributes (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.FieldAttributes (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useFieldAttributes.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldAttributes.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.FieldAttributes</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B>ExclusionStrategy.</B><B><A HREF="../../../../com/google/gson/ExclusionStrategy.html#shouldSkipField(com.google.gson.FieldAttributes)">shouldSkipField</A></B>(<A HREF="../../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>&nbsp;f)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useFieldAttributes.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldAttributes.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/FieldNamingPolicy.html b/gson/docs/javadocs/com/google/gson/class-use/FieldNamingPolicy.html
deleted file mode 100644
index 43ad5eb3b..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/FieldNamingPolicy.html
+++ /dev/null
@@ -1,208 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.FieldNamingPolicy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.FieldNamingPolicy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useFieldNamingPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.FieldNamingPolicy</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></CODE></FONT></TD>
-<TD><CODE><B>FieldNamingPolicy.</B><B><A HREF="../../../../com/google/gson/FieldNamingPolicy.html#valueOf(java.lang.String)">valueOf</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the enum constant of this type with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>[]</CODE></FONT></TD>
-<TD><CODE><B>FieldNamingPolicy.</B><B><A HREF="../../../../com/google/gson/FieldNamingPolicy.html#values()">values</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array containing the constants of this enum type, in
-the order they are declared.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">setFieldNamingPolicy</A></B>(<A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>&nbsp;namingConvention)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific naming policy to an object's field during serialization
- and deserialization.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useFieldNamingPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/FieldNamingStrategy.html b/gson/docs/javadocs/com/google/gson/class-use/FieldNamingStrategy.html
deleted file mode 100644
index bd2040a47..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/FieldNamingStrategy.html
+++ /dev/null
@@ -1,199 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.FieldNamingStrategy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.FieldNamingStrategy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useFieldNamingStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.FieldNamingStrategy</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Classes in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that implement <A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;class</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An enumeration that defines a few standard naming conventions for JSON field names.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)">setFieldNamingStrategy</A></B>(<A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>&nbsp;fieldNamingStrategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific naming policy strategy to an object's field during
- serialization and deserialization.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useFieldNamingStrategy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="FieldNamingStrategy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/Gson.html b/gson/docs/javadocs/com/google/gson/class-use/Gson.html
deleted file mode 100644
index aa80f0225..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/Gson.html
+++ /dev/null
@@ -1,207 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.Gson (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.Gson (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useGson.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Gson.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.Gson</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#create()">create</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance based on the current configuration.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>TypeAdapterFactory.</B><B><A HREF="../../../../com/google/gson/TypeAdapterFactory.html#create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)">create</A></B>(<A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>&nbsp;gson,
-       <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a type adapter for <code>type</code>, or null if this factory doesn't
- support <code>type</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useGson.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="Gson.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/GsonBuilder.html b/gson/docs/javadocs/com/google/gson/class-use/GsonBuilder.html
deleted file mode 100644
index 4d8c0be79..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/GsonBuilder.html
+++ /dev/null
@@ -1,361 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.GsonBuilder (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.GsonBuilder (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useGsonBuilder.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="GsonBuilder.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.GsonBuilder</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)">addDeserializationExclusionStrategy</A></B>(<A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply the passed in exclusion strategy during deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)">addSerializationExclusionStrategy</A></B>(<A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>&nbsp;strategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply the passed in exclusion strategy during serialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#disableHtmlEscaping()">disableHtmlEscaping</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;By default, Gson escapes HTML characters such as &lt; &gt; etc.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#disableInnerClassSerialization()">disableInnerClassSerialization</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to exclude inner classes during serialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#enableComplexMapKeySerialization()">enableComplexMapKeySerialization</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enabling this feature will only change the serialized form if the map key is
- a complex type (i.e.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#excludeFieldsWithModifiers(int...)">excludeFieldsWithModifiers</A></B>(int...&nbsp;modifiers)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to excludes all class fields that have the specified modifiers.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#excludeFieldsWithoutExposeAnnotation()">excludeFieldsWithoutExposeAnnotation</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to exclude all fields from consideration for serialization or deserialization
- that do not have the <A HREF="../../../../com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><CODE>Expose</CODE></A> annotation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#generateNonExecutableJson()">generateNonExecutableJson</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Makes the output JSON non-executable in Javascript by prefixing the generated JSON with some
- special text.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)">registerTypeAdapter</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type,
-                    <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;typeAdapter)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson for custom serialization or deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)">registerTypeAdapterFactory</A></B>(<A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;factory)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a factory for type adapters.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#registerTypeHierarchyAdapter(java.lang.Class, java.lang.Object)">registerTypeHierarchyAdapter</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;baseType,
-                             <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;typeAdapter)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson for custom serialization or deserialization for an inheritance type hierarchy.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#serializeNulls()">serializeNulls</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configure Gson to serialize null fields.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#serializeSpecialFloatingPointValues()">serializeSpecialFloatingPointValues</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Section 2.4 of <a href="http://www.ietf.org/rfc/rfc4627.txt">JSON specification</a> disallows
- special double values (NaN, Infinity, -Infinity).</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setDateFormat(int)">setDateFormat</A></B>(int&nbsp;style)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to to serialize <code>Date</code> objects according to the style value provided.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setDateFormat(int, int)">setDateFormat</A></B>(int&nbsp;dateStyle,
-              int&nbsp;timeStyle)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to to serialize <code>Date</code> objects according to the style value provided.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setDateFormat(java.lang.String)">setDateFormat</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;pattern)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to serialize <code>Date</code> objects according to the pattern provided.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setExclusionStrategies(com.google.gson.ExclusionStrategy...)">setExclusionStrategies</A></B>(<A HREF="../../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>...&nbsp;strategies)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a set of exclusion strategies during both serialization and
- deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)">setFieldNamingPolicy</A></B>(<A HREF="../../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>&nbsp;namingConvention)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific naming policy to an object's field during serialization
- and deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)">setFieldNamingStrategy</A></B>(<A HREF="../../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>&nbsp;fieldNamingStrategy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific naming policy strategy to an object's field during
- serialization and deserialization.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">setLongSerializationPolicy</A></B>(<A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>&nbsp;serializationPolicy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific serialization policy for <code>Long</code> and <code>long</code>
- objects.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setPrettyPrinting()">setPrettyPrinting</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to output Json that fits in a page for pretty printing.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setVersion(double)">setVersion</A></B>(double&nbsp;ignoreVersionsAfter)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to enable versioning support.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useGsonBuilder.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="GsonBuilder.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/InstanceCreator.html b/gson/docs/javadocs/com/google/gson/class-use/InstanceCreator.html
deleted file mode 100644
index 304606337..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/InstanceCreator.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.InstanceCreator (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.InstanceCreator (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useInstanceCreator.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="InstanceCreator.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.InstanceCreator</B></H2>
-</CENTER>
-No usage of com.google.gson.InstanceCreator
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useInstanceCreator.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="InstanceCreator.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonArray.html b/gson/docs/javadocs/com/google/gson/class-use/JsonArray.html
deleted file mode 100644
index 22492a1f9..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonArray.html
+++ /dev/null
@@ -1,206 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonArray (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonArray (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonArray.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonArray.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonArray</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></CODE></FONT></TD>
-<TD><CODE><B>JsonElement.</B><B><A HREF="../../../../com/google/gson/JsonElement.html#getAsJsonArray()">getAsJsonArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></CODE></FONT></TD>
-<TD><CODE><B>JsonObject.</B><B><A HREF="../../../../com/google/gson/JsonObject.html#getAsJsonArray(java.lang.String)">getAsJsonArray</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to get the specified member as a JsonArray.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#addAll(com.google.gson.JsonArray)">addAll</A></B>(<A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>&nbsp;array)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds all the elements of the specified array to self.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonArray.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonArray.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonDeserializationContext.html b/gson/docs/javadocs/com/google/gson/class-use/JsonDeserializationContext.html
deleted file mode 100644
index 6de4973f3..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonDeserializationContext.html
+++ /dev/null
@@ -1,185 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.JsonDeserializationContext (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.JsonDeserializationContext (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonDeserializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.JsonDeserializationContext</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonDeserializer.html" title="type parameter in JsonDeserializer">T</A></CODE></FONT></TD>
-<TD><CODE><B>JsonDeserializer.</B><B><A HREF="../../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)">deserialize</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT,
-            <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A>&nbsp;context)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during deserialization when it encounters a field of the
- specified type.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonDeserializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonDeserializer.html b/gson/docs/javadocs/com/google/gson/class-use/JsonDeserializer.html
deleted file mode 100644
index 3948a537e..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonDeserializer.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.JsonDeserializer (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.JsonDeserializer (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonDeserializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.JsonDeserializer</B></H2>
-</CENTER>
-No usage of com.google.gson.JsonDeserializer
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonDeserializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonDeserializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonElement.html b/gson/docs/javadocs/com/google/gson/class-use/JsonElement.html
deleted file mode 100644
index dc3cd5c0b..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonElement.html
+++ /dev/null
@@ -1,519 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonElement (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonElement (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonElement.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonElement.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonElement</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Subclasses of <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;class</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing an array type in Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;class</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing a Json <code>null</code> value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;class</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing an object type in Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;class</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing a Json primitive value.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#get(int)">get</A></B>(int&nbsp;i)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the ith element of the array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonObject.</B><B><A HREF="../../../../com/google/gson/JsonObject.html#get(java.lang.String)">get</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the member with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonStreamParser.</B><B><A HREF="../../../../com/google/gson/JsonStreamParser.html#next()">next</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next available <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> on the reader.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(com.google.gson.stream.JsonReader)">parse</A></B>(<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next value from the JSON stream as a parse tree.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(java.io.Reader)">parse</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified JSON string into a parse tree</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(java.lang.String)">parse</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified JSON string into a parse tree</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#remove(int)">remove</A></B>(int&nbsp;index)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the element at the specified position in this array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonObject.</B><B><A HREF="../../../../com/google/gson/JsonObject.html#remove(java.lang.String)">remove</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the <code>property</code> from this <A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>abstract &nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>LongSerializationPolicy.</B><B><A HREF="../../../../com/google/gson/LongSerializationPolicy.html#serialize(java.lang.Long)">serialize</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Long.html?is-external=true" title="class or interface in java.lang">Long</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serialize this <code>value</code> using this serialization policy.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonSerializationContext.</B><B><A HREF="../../../../com/google/gson/JsonSerializationContext.html#serialize(java.lang.Object)">serialize</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invokes default serialization on the specified object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonSerializationContext.</B><B><A HREF="../../../../com/google/gson/JsonSerializationContext.html#serialize(java.lang.Object, java.lang.reflect.Type)">serialize</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-          <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invokes default serialization on the specified object passing the specific type information.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonSerializer.</B><B><A HREF="../../../../com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)">serialize</A></B>(<A HREF="../../../../com/google/gson/JsonSerializer.html" title="type parameter in JsonSerializer">T</A>&nbsp;src,
-          <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-          <A HREF="../../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A>&nbsp;context)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during serialization when it encounters a field of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#set(int, com.google.gson.JsonElement)">set</A></B>(int&nbsp;index,
-    <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaces the element at the specified position in this array with the specified element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJsonTree(java.lang.Object)">toJsonTree</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object into its equivalent representation as a tree of
- <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJsonTree(java.lang.Object, java.lang.reflect.Type)">toJsonTree</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-           <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object, including those of generic types, into its
- equivalent representation as a tree of <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>TypeAdapter.</B><B><A HREF="../../../../com/google/gson/TypeAdapter.html#toJsonTree(T)">toJsonTree</A></B>(<A HREF="../../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts <code>value</code> to a JSON tree.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return types with arguments of type <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Set.html?is-external=true" title="class or interface in java.util">Set</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.Entry.html?is-external=true" title="class or interface in java.util">Map.Entry</A>&lt;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;&gt;</CODE></FONT></TD>
-<TD><CODE><B>JsonObject.</B><B><A HREF="../../../../com/google/gson/JsonObject.html#entrySet()">entrySet</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a set of members of this object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&gt;</CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#iterator()">iterator</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an iterator to navigate the elemetns of the array.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#add(com.google.gson.JsonElement)">add</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the specified element to self.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>JsonObject.</B><B><A HREF="../../../../com/google/gson/JsonObject.html#add(java.lang.String, com.google.gson.JsonElement)">add</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property,
-    <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a member, which is a name-value pair, to self.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#contains(com.google.gson.JsonElement)">contains</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if this array contains the specified element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>JsonDeserializationContext.</B><B><A HREF="../../../../com/google/gson/JsonDeserializationContext.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)">deserialize</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invokes default deserialization on the specified object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonDeserializer.html" title="type parameter in JsonDeserializer">T</A></CODE></FONT></TD>
-<TD><CODE><B>JsonDeserializer.</B><B><A HREF="../../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)">deserialize</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT,
-            <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A>&nbsp;context)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during deserialization when it encounters a field of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.Class)">fromJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified parse tree into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified parse tree into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A></CODE></FONT></TD>
-<TD><CODE><B>TypeAdapter.</B><B><A HREF="../../../../com/google/gson/TypeAdapter.html#fromJsonTree(com.google.gson.JsonElement)">fromJsonTree</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonTree)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts <code>jsonTree</code> to a Java object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#remove(com.google.gson.JsonElement)">remove</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the first occurrence of the specified element from this array, if it is present.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonArray.</B><B><A HREF="../../../../com/google/gson/JsonArray.html#set(int, com.google.gson.JsonElement)">set</A></B>(int&nbsp;index,
-    <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;element)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Replaces the element at the specified position in this array with the specified element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement)">toJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a tree of <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s into its equivalent JSON representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, java.lang.Appendable)">toJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes out the equivalent JSON for a tree of <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)">toJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-       <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes the JSON for <code>jsonElement</code> to <code>writer</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonElement.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonElement.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonIOException.html b/gson/docs/javadocs/com/google/gson/class-use/JsonIOException.html
deleted file mode 100644
index 5ae823a6f..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonIOException.html
+++ /dev/null
@@ -1,290 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonIOException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonIOException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonIOException.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonIOException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonIOException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonIOException</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that throw <A HREF="../../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;reader,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads the next JSON value from <code>reader</code> and convert it to an object
- of type <code>typeOfT</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.Class)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified reader into an object of the
- specified class.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified reader into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(com.google.gson.stream.JsonReader)">parse</A></B>(<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next value from the JSON stream as a parse tree.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(java.io.Reader)">parse</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified JSON string into a parse tree</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, java.lang.Appendable)">toJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes out the equivalent JSON for a tree of <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)">toJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-       <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes the JSON for <code>jsonElement</code> to <code>writer</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.Appendable)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object into its equivalent Json representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Appendable.html?is-external=true" title="class or interface in java.lang">Appendable</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method serializes the specified object, including those of generic types, into its
- equivalent Json representation.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, com.google.gson.stream.JsonWriter)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-       <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes the JSON representation of <code>src</code> of type <code>typeOfSrc</code> to
- <code>writer</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonIOException.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonIOException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonIOException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonNull.html b/gson/docs/javadocs/com/google/gson/class-use/JsonNull.html
deleted file mode 100644
index 81c456568..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonNull.html
+++ /dev/null
@@ -1,198 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonNull (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonNull (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonNull.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonNull.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonNull</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Fields in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> declared as <A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></CODE></FONT></TD>
-<TD><CODE><B>JsonNull.</B><B><A HREF="../../../../com/google/gson/JsonNull.html#INSTANCE">INSTANCE</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;singleton for JsonNull</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></CODE></FONT></TD>
-<TD><CODE><B>JsonElement.</B><B><A HREF="../../../../com/google/gson/JsonElement.html#getAsJsonNull()">getAsJsonNull</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonNull.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonNull.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonObject.html b/gson/docs/javadocs/com/google/gson/class-use/JsonObject.html
deleted file mode 100644
index 2e4d5dc0e..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonObject.html
+++ /dev/null
@@ -1,190 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonObject (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonObject (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonObject.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonObject.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonObject</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></CODE></FONT></TD>
-<TD><CODE><B>JsonElement.</B><B><A HREF="../../../../com/google/gson/JsonElement.html#getAsJsonObject()">getAsJsonObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></CODE></FONT></TD>
-<TD><CODE><B>JsonObject.</B><B><A HREF="../../../../com/google/gson/JsonObject.html#getAsJsonObject(java.lang.String)">getAsJsonObject</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to get the specified member as a JsonObject.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonObject.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonObject.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonParseException.html b/gson/docs/javadocs/com/google/gson/class-use/JsonParseException.html
deleted file mode 100644
index b1dd0d497..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonParseException.html
+++ /dev/null
@@ -1,235 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonParseException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonParseException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonParseException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParseException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonParseException</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Subclasses of <A HREF="../../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;class</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This exception is raised when Gson was unable to read an input stream
- or write to one.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;class</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This exception is raised when Gson attempts to read (or write) a malformed
- JSON element.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that throw <A HREF="../../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>JsonDeserializationContext.</B><B><A HREF="../../../../com/google/gson/JsonDeserializationContext.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)">deserialize</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invokes default deserialization on the specified object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonDeserializer.html" title="type parameter in JsonDeserializer">T</A></CODE></FONT></TD>
-<TD><CODE><B>JsonDeserializer.</B><B><A HREF="../../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)">deserialize</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-            <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT,
-            <A HREF="../../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A>&nbsp;context)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during deserialization when it encounters a field of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonStreamParser.</B><B><A HREF="../../../../com/google/gson/JsonStreamParser.html#next()">next</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next available <A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> on the reader.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonParseException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParseException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonParser.html b/gson/docs/javadocs/com/google/gson/class-use/JsonParser.html
deleted file mode 100644
index fad118730..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonParser.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonParser (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonParser (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonParser.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonParser</B></H2>
-</CENTER>
-No usage of com.google.gson.JsonParser
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonParser.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonPrimitive.html b/gson/docs/javadocs/com/google/gson/class-use/JsonPrimitive.html
deleted file mode 100644
index 2c548c28a..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonPrimitive.html
+++ /dev/null
@@ -1,190 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonPrimitive (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonPrimitive (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonPrimitive.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonPrimitive.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonPrimitive</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></CODE></FONT></TD>
-<TD><CODE><B>JsonElement.</B><B><A HREF="../../../../com/google/gson/JsonElement.html#getAsJsonPrimitive()">getAsJsonPrimitive</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenience method to get this element as a <A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></CODE></FONT></TD>
-<TD><CODE><B>JsonObject.</B><B><A HREF="../../../../com/google/gson/JsonObject.html#getAsJsonPrimitive(java.lang.String)">getAsJsonPrimitive</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;memberName)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenience method to get the specified member as a JsonPrimitive element.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonPrimitive.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonPrimitive.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonSerializationContext.html b/gson/docs/javadocs/com/google/gson/class-use/JsonSerializationContext.html
deleted file mode 100644
index ec258ff7e..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonSerializationContext.html
+++ /dev/null
@@ -1,185 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.JsonSerializationContext (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.JsonSerializationContext (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonSerializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.JsonSerializationContext</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonSerializer.</B><B><A HREF="../../../../com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)">serialize</A></B>(<A HREF="../../../../com/google/gson/JsonSerializer.html" title="type parameter in JsonSerializer">T</A>&nbsp;src,
-          <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-          <A HREF="../../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A>&nbsp;context)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gson invokes this call-back method during serialization when it encounters a field of the
- specified type.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonSerializationContext.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializationContext.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonSerializer.html b/gson/docs/javadocs/com/google/gson/class-use/JsonSerializer.html
deleted file mode 100644
index bd01d2f03..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonSerializer.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.JsonSerializer (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.JsonSerializer (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonSerializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.JsonSerializer</B></H2>
-</CENTER>
-No usage of com.google.gson.JsonSerializer
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonSerializer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSerializer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonStreamParser.html b/gson/docs/javadocs/com/google/gson/class-use/JsonStreamParser.html
deleted file mode 100644
index be4ce5077..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonStreamParser.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonStreamParser (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonStreamParser (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonStreamParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonStreamParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonStreamParser</B></H2>
-</CENTER>
-No usage of com.google.gson.JsonStreamParser
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonStreamParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonStreamParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/JsonSyntaxException.html b/gson/docs/javadocs/com/google/gson/class-use/JsonSyntaxException.html
deleted file mode 100644
index 38e4bdeaa..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/JsonSyntaxException.html
+++ /dev/null
@@ -1,315 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.JsonSyntaxException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.JsonSyntaxException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonSyntaxException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSyntaxException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.JsonSyntaxException</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that throw <A HREF="../../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.Class)">fromJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified parse tree into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified parse tree into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;reader,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads the next JSON value from <code>reader</code> and convert it to an object
- of type <code>typeOfT</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.Class)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified reader into an object of the
- specified class.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the Json read from the specified reader into an object of the
- specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.Class)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;classOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the specified Json into an object of the specified class.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method deserializes the specified Json into an object of the specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(com.google.gson.stream.JsonReader)">parse</A></B>(<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next value from the JSON stream as a parse tree.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(java.io.Reader)">parse</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified JSON string into a parse tree</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../com/google/gson/JsonParser.html#parse(java.lang.String)">parse</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified JSON string into a parse tree</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useJsonSyntaxException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonSyntaxException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/LongSerializationPolicy.html b/gson/docs/javadocs/com/google/gson/class-use/LongSerializationPolicy.html
deleted file mode 100644
index 292a33450..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/LongSerializationPolicy.html
+++ /dev/null
@@ -1,208 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.LongSerializationPolicy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.LongSerializationPolicy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useLongSerializationPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="LongSerializationPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.LongSerializationPolicy</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A></CODE></FONT></TD>
-<TD><CODE><B>LongSerializationPolicy.</B><B><A HREF="../../../../com/google/gson/LongSerializationPolicy.html#valueOf(java.lang.String)">valueOf</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the enum constant of this type with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>[]</CODE></FONT></TD>
-<TD><CODE><B>LongSerializationPolicy.</B><B><A HREF="../../../../com/google/gson/LongSerializationPolicy.html#values()">values</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array containing the constants of this enum type, in
-the order they are declared.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)">setLongSerializationPolicy</A></B>(<A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>&nbsp;serializationPolicy)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configures Gson to apply a specific serialization policy for <code>Long</code> and <code>long</code>
- objects.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useLongSerializationPolicy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="LongSerializationPolicy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/TypeAdapter.html b/gson/docs/javadocs/com/google/gson/class-use/TypeAdapter.html
deleted file mode 100644
index 8157c5f78..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/TypeAdapter.html
+++ /dev/null
@@ -1,245 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.TypeAdapter (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.TypeAdapter (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useTypeAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.TypeAdapter</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> that return <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>TypeAdapterFactory.</B><B><A HREF="../../../../com/google/gson/TypeAdapterFactory.html#create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)">create</A></B>(<A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>&nbsp;gson,
-       <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a type adapter for <code>type</code>, or null if this factory doesn't
- support <code>type</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#getAdapter(java.lang.Class)">getAdapter</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the type adapter for <code></code> type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#getAdapter(com.google.gson.reflect.TypeToken)">getAdapter</A></B>(<A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the type adapter for <code></code> type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)">getDelegateAdapter</A></B>(<A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;skipPast,
-                   <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to get an alternate type adapter for the specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;<A HREF="../../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&gt;</CODE></FONT></TD>
-<TD><CODE><B>TypeAdapter.</B><B><A HREF="../../../../com/google/gson/TypeAdapter.html#nullSafe()">nullSafe</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This wrapper method is used to make a type adapter null tolerant.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useTypeAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/class-use/TypeAdapterFactory.html b/gson/docs/javadocs/com/google/gson/class-use/TypeAdapterFactory.html
deleted file mode 100644
index 99ba94b3e..000000000
--- a/gson/docs/javadocs/com/google/gson/class-use/TypeAdapterFactory.html
+++ /dev/null
@@ -1,198 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Interface com.google.gson.TypeAdapterFactory (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Interface com.google.gson.TypeAdapterFactory (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useTypeAdapterFactory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapterFactory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Interface<br>com.google.gson.TypeAdapterFactory</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A> in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../com/google/gson/Gson.html#getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)">getDelegateAdapter</A></B>(<A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;skipPast,
-                   <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to get an alternate type adapter for the specified type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></CODE></FONT></TD>
-<TD><CODE><B>GsonBuilder.</B><B><A HREF="../../../../com/google/gson/GsonBuilder.html#registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)">registerTypeAdapterFactory</A></B>(<A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;factory)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a factory for type adapters.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson//class-useTypeAdapterFactory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeAdapterFactory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/package-frame.html b/gson/docs/javadocs/com/google/gson/package-frame.html
deleted file mode 100644
index 0262ca9e7..000000000
--- a/gson/docs/javadocs/com/google/gson/package-frame.html
+++ /dev/null
@@ -1,106 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-
-</HEAD>
-
-<BODY BGCOLOR="white">
-<FONT size="+1" CLASS="FrameTitleFont">
-<A HREF="../../../com/google/gson/package-summary.html" target="classFrame">com.google.gson</A></FONT>
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Interfaces</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="ExclusionStrategy.html" title="interface in com.google.gson" target="classFrame"><I>ExclusionStrategy</I></A>
-<BR>
-<A HREF="FieldNamingStrategy.html" title="interface in com.google.gson" target="classFrame"><I>FieldNamingStrategy</I></A>
-<BR>
-<A HREF="InstanceCreator.html" title="interface in com.google.gson" target="classFrame"><I>InstanceCreator</I></A>
-<BR>
-<A HREF="JsonDeserializationContext.html" title="interface in com.google.gson" target="classFrame"><I>JsonDeserializationContext</I></A>
-<BR>
-<A HREF="JsonDeserializer.html" title="interface in com.google.gson" target="classFrame"><I>JsonDeserializer</I></A>
-<BR>
-<A HREF="JsonSerializationContext.html" title="interface in com.google.gson" target="classFrame"><I>JsonSerializationContext</I></A>
-<BR>
-<A HREF="JsonSerializer.html" title="interface in com.google.gson" target="classFrame"><I>JsonSerializer</I></A>
-<BR>
-<A HREF="TypeAdapterFactory.html" title="interface in com.google.gson" target="classFrame"><I>TypeAdapterFactory</I></A></FONT></TD>
-</TR>
-</TABLE>
-
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Classes</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="FieldAttributes.html" title="class in com.google.gson" target="classFrame">FieldAttributes</A>
-<BR>
-<A HREF="Gson.html" title="class in com.google.gson" target="classFrame">Gson</A>
-<BR>
-<A HREF="GsonBuilder.html" title="class in com.google.gson" target="classFrame">GsonBuilder</A>
-<BR>
-<A HREF="JsonArray.html" title="class in com.google.gson" target="classFrame">JsonArray</A>
-<BR>
-<A HREF="JsonElement.html" title="class in com.google.gson" target="classFrame">JsonElement</A>
-<BR>
-<A HREF="JsonNull.html" title="class in com.google.gson" target="classFrame">JsonNull</A>
-<BR>
-<A HREF="JsonObject.html" title="class in com.google.gson" target="classFrame">JsonObject</A>
-<BR>
-<A HREF="JsonParser.html" title="class in com.google.gson" target="classFrame">JsonParser</A>
-<BR>
-<A HREF="JsonPrimitive.html" title="class in com.google.gson" target="classFrame">JsonPrimitive</A>
-<BR>
-<A HREF="JsonStreamParser.html" title="class in com.google.gson" target="classFrame">JsonStreamParser</A>
-<BR>
-<A HREF="TypeAdapter.html" title="class in com.google.gson" target="classFrame">TypeAdapter</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Enums</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="FieldNamingPolicy.html" title="enum in com.google.gson" target="classFrame">FieldNamingPolicy</A>
-<BR>
-<A HREF="LongSerializationPolicy.html" title="enum in com.google.gson" target="classFrame">LongSerializationPolicy</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Exceptions</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="JsonIOException.html" title="class in com.google.gson" target="classFrame">JsonIOException</A>
-<BR>
-<A HREF="JsonParseException.html" title="class in com.google.gson" target="classFrame">JsonParseException</A>
-<BR>
-<A HREF="JsonSyntaxException.html" title="class in com.google.gson" target="classFrame">JsonSyntaxException</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/package-summary.html b/gson/docs/javadocs/com/google/gson/package-summary.html
deleted file mode 100644
index 71f41005c..000000000
--- a/gson/docs/javadocs/com/google/gson/package-summary.html
+++ /dev/null
@@ -1,313 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV PACKAGE&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/annotations/package-summary.html"><B>NEXT PACKAGE</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<H2>
-Package com.google.gson
-</H2>
-This package provides the <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.
-<P>
-<B>See:</B>
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#package_description"><B>Description</B></A>
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Interface Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A></B></TD>
-<TD>A strategy (or policy) definition that is used to decide whether or not a field or top-level
- class should be serialized or deserialized as part of the JSON output/input.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A></B></TD>
-<TD>A mechanism for providing custom field naming in Gson.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson">InstanceCreator&lt;T&gt;</A></B></TD>
-<TD>This interface is implemented to create instances of a class that does not define a no-args
- constructor.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A></B></TD>
-<TD>Context for deserialization that is passed to a custom deserializer during invocation of its
- <A HREF="../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)"><CODE>JsonDeserializer.deserialize(JsonElement, Type, JsonDeserializationContext)</CODE></A>
- method.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson">JsonDeserializer&lt;T&gt;</A></B></TD>
-<TD>Interface representing a custom deserializer for Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A></B></TD>
-<TD>Context for serialization that is passed to a custom serializer during invocation of its
- <A HREF="../../../com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)"><CODE>JsonSerializer.serialize(Object, Type, JsonSerializationContext)</CODE></A> method.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson">JsonSerializer&lt;T&gt;</A></B></TD>
-<TD>Interface representing a custom serializer for Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A></B></TD>
-<TD>Creates type adapters for set of related types.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Class Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A></B></TD>
-<TD>A data object that stores attributes of a field.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A></B></TD>
-<TD>This is the main class for using Gson.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A></B></TD>
-<TD>Use this builder to construct a <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance when you need to set configuration
- options other than the default.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A></B></TD>
-<TD>A class representing an array type in Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></B></TD>
-<TD>A class representing an element of Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A></B></TD>
-<TD>A class representing a Json <code>null</code> value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A></B></TD>
-<TD>A class representing an object type in Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonParser.html" title="class in com.google.gson">JsonParser</A></B></TD>
-<TD>A parser to parse Json into a parse tree of <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A></B></TD>
-<TD>A class representing a Json primitive value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson">JsonStreamParser</A></B></TD>
-<TD>A streaming parser that allows reading of multiple <A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s from the specified reader
- asynchronously.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter&lt;T&gt;</A></B></TD>
-<TD>Converts Java objects to and from JSON.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Enum Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A></B></TD>
-<TD>An enumeration that defines a few standard naming conventions for JSON field names.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A></B></TD>
-<TD>Defines the expected format for a <code>long</code> or <code>Long</code> type when its serialized.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Exception Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A></B></TD>
-<TD>This exception is raised when Gson was unable to read an input stream
- or write to one.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A></B></TD>
-<TD>This exception is raised if there is a serious issue that occurs during parsing of a Json
- string.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A></B></TD>
-<TD>This exception is raised when Gson attempts to read (or write) a malformed
- JSON element.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-<A NAME="package_description"><!-- --></A><H2>
-Package com.google.gson Description
-</H2>
-
-<P>
-This package provides the <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.
-
- <p>The primary class to use is <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> which can be constructed with
- <code>new Gson()</code> (using default settings) or by using <A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><CODE>GsonBuilder</CODE></A>
- (to configure various options such as using versioning and so on).</p>
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV PACKAGE&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/annotations/package-summary.html"><B>NEXT PACKAGE</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/package-tree.html b/gson/docs/javadocs/com/google/gson/package-tree.html
deleted file mode 100644
index 3aca7dbda..000000000
--- a/gson/docs/javadocs/com/google/gson/package-tree.html
+++ /dev/null
@@ -1,183 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson Class Hierarchy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson Class Hierarchy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/annotations/package-tree.html"><B>NEXT</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-Hierarchy For Package com.google.gson
-</H2>
-</CENTER>
-<DL>
-<DT><B>Package Hierarchies:</B><DD><A HREF="../../../overview-tree.html">All Packages</A></DL>
-<HR>
-<H2>
-Class Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><B>Object</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/FieldAttributes.html" title="class in com.google.gson"><B>FieldAttributes</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><B>Gson</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/GsonBuilder.html" title="class in com.google.gson"><B>GsonBuilder</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonElement.html" title="class in com.google.gson"><B>JsonElement</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonArray.html" title="class in com.google.gson"><B>JsonArray</B></A> (implements java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;T&gt;)
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonNull.html" title="class in com.google.gson"><B>JsonNull</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonObject.html" title="class in com.google.gson"><B>JsonObject</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><B>JsonPrimitive</B></A></UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonParser.html" title="class in com.google.gson"><B>JsonParser</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><B>JsonStreamParser</B></A> (implements java.util.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;E&gt;)
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang"><B>Throwable</B></A> (implements java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>)
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang"><B>Exception</B></A><UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang"><B>RuntimeException</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonParseException.html" title="class in com.google.gson"><B>JsonParseException</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonIOException.html" title="class in com.google.gson"><B>JsonIOException</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><B>JsonSyntaxException</B></A></UL>
-</UL>
-</UL>
-</UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson"><B>TypeAdapter</B></A>&lt;T&gt;</UL>
-</UL>
-<H2>
-Interface Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><B>ExclusionStrategy</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><B>FieldNamingStrategy</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><B>InstanceCreator</B></A>&lt;T&gt;<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><B>JsonDeserializationContext</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><B>JsonDeserializer</B></A>&lt;T&gt;<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><B>JsonSerializationContext</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><B>JsonSerializer</B></A>&lt;T&gt;<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><B>TypeAdapterFactory</B></A></UL>
-<H2>
-Enum Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><B>Object</B></A><UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang"><B>Enum</B></A>&lt;E&gt; (implements java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</A>&lt;T&gt;, java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>)
-<UL>
-<LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><B>LongSerializationPolicy</B></A><LI TYPE="circle">com.google.gson.<A HREF="../../../com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><B>FieldNamingPolicy</B></A> (implements com.google.gson.<A HREF="../../../com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>)
-</UL>
-</UL>
-</UL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;<A HREF="../../../com/google/gson/annotations/package-tree.html"><B>NEXT</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/package-use.html b/gson/docs/javadocs/com/google/gson/package-use.html
deleted file mode 100644
index 44e1583f0..000000000
--- a/gson/docs/javadocs/com/google/gson/package-use.html
+++ /dev/null
@@ -1,288 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Package com.google.gson (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Package com.google.gson (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Package<br>com.google.gson</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Classes in <A HREF="../../../com/google/gson/package-summary.html">com.google.gson</A> used by <A HREF="../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/ExclusionStrategy.html#com.google.gson"><B>ExclusionStrategy</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A strategy (or policy) definition that is used to decide whether or not a field or top-level
- class should be serialized or deserialized as part of the JSON output/input.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/FieldAttributes.html#com.google.gson"><B>FieldAttributes</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A data object that stores attributes of a field.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/FieldNamingPolicy.html#com.google.gson"><B>FieldNamingPolicy</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An enumeration that defines a few standard naming conventions for JSON field names.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/FieldNamingStrategy.html#com.google.gson"><B>FieldNamingStrategy</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A mechanism for providing custom field naming in Gson.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/Gson.html#com.google.gson"><B>Gson</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This is the main class for using Gson.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/GsonBuilder.html#com.google.gson"><B>GsonBuilder</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use this builder to construct a <A HREF="../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance when you need to set configuration
- options other than the default.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonArray.html#com.google.gson"><B>JsonArray</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing an array type in Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonDeserializationContext.html#com.google.gson"><B>JsonDeserializationContext</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Context for deserialization that is passed to a custom deserializer during invocation of its
- <A HREF="../../../com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)"><CODE>JsonDeserializer.deserialize(JsonElement, Type, JsonDeserializationContext)</CODE></A>
- method.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonElement.html#com.google.gson"><B>JsonElement</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing an element of Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonIOException.html#com.google.gson"><B>JsonIOException</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This exception is raised when Gson was unable to read an input stream
- or write to one.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonNull.html#com.google.gson"><B>JsonNull</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing a Json <code>null</code> value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonObject.html#com.google.gson"><B>JsonObject</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing an object type in Json.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonParseException.html#com.google.gson"><B>JsonParseException</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This exception is raised if there is a serious issue that occurs during parsing of a Json
- string.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonPrimitive.html#com.google.gson"><B>JsonPrimitive</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A class representing a Json primitive value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonSerializationContext.html#com.google.gson"><B>JsonSerializationContext</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Context for serialization that is passed to a custom serializer during invocation of its
- <A HREF="../../../com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)"><CODE>JsonSerializer.serialize(Object, Type, JsonSerializationContext)</CODE></A> method.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/JsonSyntaxException.html#com.google.gson"><B>JsonSyntaxException</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This exception is raised when Gson attempts to read (or write) a malformed
- JSON element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/LongSerializationPolicy.html#com.google.gson"><B>LongSerializationPolicy</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines the expected format for a <code>long</code> or <code>Long</code> type when its serialized.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/TypeAdapter.html#com.google.gson"><B>TypeAdapter</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts Java objects to and from JSON.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../com/google/gson/class-use/TypeAdapterFactory.html#com.google.gson"><B>TypeAdapterFactory</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates type adapters for set of related types.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../index.html?com/google/gson/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/reflect/TypeToken.html b/gson/docs/javadocs/com/google/gson/reflect/TypeToken.html
deleted file mode 100644
index 9ceb5129c..000000000
--- a/gson/docs/javadocs/com/google/gson/reflect/TypeToken.html
+++ /dev/null
@@ -1,498 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-TypeToken (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="TypeToken (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TypeToken.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/TypeToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.reflect</FONT>
-<BR>
-Class TypeToken&lt;T&gt;</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.reflect.TypeToken&lt;T&gt;</B>
-</PRE>
-<HR>
-<DL>
-<DT><PRE>public class <B>TypeToken&lt;T&gt;</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
-</PRE>
-
-<P>
-Represents a generic type <code>T</code>. Java doesn't yet provide a way to
- represent generic types, so this class does. Forces clients to create a
- subclass of this class which enables retrieval the type information even at
- runtime.
-
- <p>For example, to create a type literal for <code>List&lt;String&gt;</code>, you can
- create an empty anonymous inner class:
-
- <p>
- <code>TypeToken&lt;List&lt;String&gt;&gt; list = new TypeToken&lt;List&lt;String&gt;&gt;() {};</code>
-
- <p>This syntax cannot be used to create type literals that have wildcard
- parameters, such as <code>Class&lt;?&gt;</code> or <code>List&lt;? extends CharSequence&gt;</code>.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Bob Lee, Sven Mawson, Jesse Wilson</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>protected </CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#TypeToken()">TypeToken</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new type literal.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#equals(java.lang.Object)">equals</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;o)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#get(java.lang.Class)">get</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets type literal for the given <code>Class</code> instance.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;?&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#get(java.lang.reflect.Type)">get</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets type literal for the given <code>Type</code> instance.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;? super <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="type parameter in TypeToken">T</A>&gt;</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#getRawType()">getRawType</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the raw (non-generic) type for this type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#getType()">getType</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets underlying <code>Type</code> instance.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#hashCode()">hashCode</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#isAssignableFrom(java.lang.Class)">isAssignableFrom</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;cls)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I></TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#isAssignableFrom(java.lang.reflect.Type)">isAssignableFrom</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;from)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I></TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#isAssignableFrom(com.google.gson.reflect.TypeToken)">isAssignableFrom</A></B>(<A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;?&gt;&nbsp;token)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I></TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html#toString()">toString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="TypeToken()"><!-- --></A><H3>
-TypeToken</H3>
-<PRE>
-protected <B>TypeToken</B>()</PRE>
-<DL>
-<DD>Constructs a new type literal. Derives represented class from type
- parameter.
-
- <p>Clients create an empty anonymous subclass. Doing so embeds the type
- parameter in the anonymous class's type hierarchy so we can reconstitute it
- at runtime despite erasure.
-<P>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="getRawType()"><!-- --></A><H3>
-getRawType</H3>
-<PRE>
-public final <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;? super <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="type parameter in TypeToken">T</A>&gt; <B>getRawType</B>()</PRE>
-<DL>
-<DD>Returns the raw (non-generic) type for this type.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getType()"><!-- --></A><H3>
-getType</H3>
-<PRE>
-public final <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A> <B>getType</B>()</PRE>
-<DL>
-<DD>Gets underlying <code>Type</code> instance.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isAssignableFrom(java.lang.Class)"><!-- --></A><H3>
-isAssignableFrom</H3>
-<PRE>
-<FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Deprecated.html?is-external=true" title="class or interface in java.lang">@Deprecated</A>
-</FONT>public boolean <B>isAssignableFrom</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;cls)</PRE>
-<DL>
-<DD><B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>
-<P>
-<DD>Check if this type is assignable from the given class object.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isAssignableFrom(java.lang.reflect.Type)"><!-- --></A><H3>
-isAssignableFrom</H3>
-<PRE>
-<FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Deprecated.html?is-external=true" title="class or interface in java.lang">@Deprecated</A>
-</FONT>public boolean <B>isAssignableFrom</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;from)</PRE>
-<DL>
-<DD><B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>
-<P>
-<DD>Check if this type is assignable from the given Type.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isAssignableFrom(com.google.gson.reflect.TypeToken)"><!-- --></A><H3>
-isAssignableFrom</H3>
-<PRE>
-<FONT SIZE="-1"><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Deprecated.html?is-external=true" title="class or interface in java.lang">@Deprecated</A>
-</FONT>public boolean <B>isAssignableFrom</B>(<A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;?&gt;&nbsp;token)</PRE>
-<DL>
-<DD><B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>
-<P>
-<DD>Check if this type is assignable from the given type token.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="hashCode()"><!-- --></A><H3>
-hashCode</H3>
-<PRE>
-public final int <B>hashCode</B>()</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
-equals</H3>
-<PRE>
-public final boolean <B>equals</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;o)</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toString()"><!-- --></A><H3>
-toString</H3>
-<PRE>
-public final <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toString</B>()</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="get(java.lang.reflect.Type)"><!-- --></A><H3>
-get</H3>
-<PRE>
-public static <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;?&gt; <B>get</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type)</PRE>
-<DL>
-<DD>Gets type literal for the given <code>Type</code> instance.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="get(java.lang.Class)"><!-- --></A><H3>
-get</H3>
-<PRE>
-public static &lt;T&gt; <A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt; <B>get</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</PRE>
-<DL>
-<DD>Gets type literal for the given <code>Class</code> instance.
-<P>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TypeToken.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/TypeToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/reflect/class-use/TypeToken.html b/gson/docs/javadocs/com/google/gson/reflect/class-use/TypeToken.html
deleted file mode 100644
index fccc2a1e1..000000000
--- a/gson/docs/javadocs/com/google/gson/reflect/class-use/TypeToken.html
+++ /dev/null
@@ -1,283 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.reflect.TypeToken (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.reflect.TypeToken (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/reflect//class-useTypeToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.reflect.TypeToken</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson.reflect"><B>com.google.gson.reflect</B></A></TD>
-<TD>This package provides utility classes for finding type information for generic types.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A> in <A HREF="../../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>TypeAdapterFactory.</B><B><A HREF="../../../../../com/google/gson/TypeAdapterFactory.html#create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)">create</A></B>(<A HREF="../../../../../com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>&nbsp;gson,
-       <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a type adapter for <code>type</code>, or null if this factory doesn't
- support <code>type</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../../com/google/gson/Gson.html#getAdapter(com.google.gson.reflect.TypeToken)">getAdapter</A></B>(<A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the type adapter for <code></code> type.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../../com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../../com/google/gson/Gson.html#getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)">getDelegateAdapter</A></B>(<A HREF="../../../../../com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>&nbsp;skipPast,
-                   <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is used to get an alternate type adapter for the specified type.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson.reflect"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A> in <A HREF="../../../../../com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../../com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A> that return <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;T&gt;</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>TypeToken.</B><B><A HREF="../../../../../com/google/gson/reflect/TypeToken.html#get(java.lang.Class)">get</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets type literal for the given <code>Class</code> instance.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;?&gt;</CODE></FONT></TD>
-<TD><CODE><B>TypeToken.</B><B><A HREF="../../../../../com/google/gson/reflect/TypeToken.html#get(java.lang.reflect.Type)">get</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;type)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets type literal for the given <code>Type</code> instance.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../../com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A> with parameters of type <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B>TypeToken.</B><B><A HREF="../../../../../com/google/gson/reflect/TypeToken.html#isAssignableFrom(com.google.gson.reflect.TypeToken)">isAssignableFrom</A></B>(<A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>&lt;?&gt;&nbsp;token)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/reflect//class-useTypeToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="TypeToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/reflect/package-frame.html b/gson/docs/javadocs/com/google/gson/reflect/package-frame.html
deleted file mode 100644
index c85f90ed5..000000000
--- a/gson/docs/javadocs/com/google/gson/reflect/package-frame.html
+++ /dev/null
@@ -1,33 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.reflect (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-
-</HEAD>
-
-<BODY BGCOLOR="white">
-<FONT size="+1" CLASS="FrameTitleFont">
-<A HREF="../../../../com/google/gson/reflect/package-summary.html" target="classFrame">com.google.gson.reflect</A></FONT>
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Classes</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="TypeToken.html" title="class in com.google.gson.reflect" target="classFrame">TypeToken</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/reflect/package-summary.html b/gson/docs/javadocs/com/google/gson/reflect/package-summary.html
deleted file mode 100644
index 61b34e0b0..000000000
--- a/gson/docs/javadocs/com/google/gson/reflect/package-summary.html
+++ /dev/null
@@ -1,175 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.reflect (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson.reflect (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/package-summary.html"><B>PREV PACKAGE</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/package-summary.html"><B>NEXT PACKAGE</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<H2>
-Package com.google.gson.reflect
-</H2>
-This package provides utility classes for finding type information for generic types.
-<P>
-<B>See:</B>
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#package_description"><B>Description</B></A>
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Class Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken&lt;T&gt;</A></B></TD>
-<TD>Represents a generic type <code>T</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-<A NAME="package_description"><!-- --></A><H2>
-Package com.google.gson.reflect Description
-</H2>
-
-<P>
-This package provides utility classes for finding type information for generic types.
-<P>
-
-<P>
-<DL>
-<DT><B>Author:</B></DT>
-  <DD>Inderjeet Singh, Joel Leitch</DD>
-</DL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/package-summary.html"><B>PREV PACKAGE</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/package-summary.html"><B>NEXT PACKAGE</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/reflect/package-tree.html b/gson/docs/javadocs/com/google/gson/reflect/package-tree.html
deleted file mode 100644
index 60de9ac36..000000000
--- a/gson/docs/javadocs/com/google/gson/reflect/package-tree.html
+++ /dev/null
@@ -1,154 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.reflect Class Hierarchy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson.reflect Class Hierarchy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/package-tree.html"><B>PREV</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/package-tree.html"><B>NEXT</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-Hierarchy For Package com.google.gson.reflect
-</H2>
-</CENTER>
-<DL>
-<DT><B>Package Hierarchies:</B><DD><A HREF="../../../../overview-tree.html">All Packages</A></DL>
-<HR>
-<H2>
-Class Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><B>Object</B></A><UL>
-<LI TYPE="circle">com.google.gson.reflect.<A HREF="../../../../com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><B>TypeToken</B></A>&lt;T&gt;</UL>
-</UL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/annotations/package-tree.html"><B>PREV</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/package-tree.html"><B>NEXT</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/reflect/package-use.html b/gson/docs/javadocs/com/google/gson/reflect/package-use.html
deleted file mode 100644
index e0af29245..000000000
--- a/gson/docs/javadocs/com/google/gson/reflect/package-use.html
+++ /dev/null
@@ -1,191 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Package com.google.gson.reflect (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Package com.google.gson.reflect (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Package<br>com.google.gson.reflect</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson.reflect"><B>com.google.gson.reflect</B></A></TD>
-<TD>This package provides utility classes for finding type information for generic types.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Classes in <A HREF="../../../../com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A> used by <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../../com/google/gson/reflect/class-use/TypeToken.html#com.google.gson"><B>TypeToken</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents a generic type <code>T</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson.reflect"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Classes in <A HREF="../../../../com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A> used by <A HREF="../../../../com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../../com/google/gson/reflect/class-use/TypeToken.html#com.google.gson.reflect"><B>TypeToken</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Represents a generic type <code>T</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/reflect/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/JsonReader.html b/gson/docs/javadocs/com/google/gson/stream/JsonReader.html
deleted file mode 100644
index c505aab81..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/JsonReader.html
+++ /dev/null
@@ -1,970 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonReader (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonReader (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonReader.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/JsonReader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonReader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.stream</FONT>
-<BR>
-Class JsonReader</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.stream.JsonReader</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public class <B>JsonReader</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A><DT>implements <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A></DL>
-</PRE>
-
-<P>
-Reads a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value as a stream of tokens. This stream includes both literal
- values (strings, numbers, booleans, and nulls) as well as the begin and
- end delimiters of objects and arrays. The tokens are traversed in
- depth-first order, the same order that they appear in the JSON document.
- Within JSON objects, name/value pairs are represented by a single token.
-
- <h3>Parsing JSON</h3>
- To create a recursive descent parser for your own JSON streams, first create
- an entry point method that creates a <code>JsonReader</code>.
-
- <p>Next, create handler methods for each structure in your JSON text. You'll
- need a method for each object type and for each array type.
- <ul>
-   <li>Within <strong>array handling</strong> methods, first call <A HREF="../../../../com/google/gson/stream/JsonReader.html#beginArray()"><CODE>beginArray()</CODE></A> to consume the array's opening bracket. Then create a
-       while loop that accumulates values, terminating when <A HREF="../../../../com/google/gson/stream/JsonReader.html#hasNext()"><CODE>hasNext()</CODE></A>
-       is false. Finally, read the array's closing bracket by calling <A HREF="../../../../com/google/gson/stream/JsonReader.html#endArray()"><CODE>endArray()</CODE></A>.
-   <li>Within <strong>object handling</strong> methods, first call <A HREF="../../../../com/google/gson/stream/JsonReader.html#beginObject()"><CODE>beginObject()</CODE></A> to consume the object's opening brace. Then create a
-       while loop that assigns values to local variables based on their name.
-       This loop should terminate when <A HREF="../../../../com/google/gson/stream/JsonReader.html#hasNext()"><CODE>hasNext()</CODE></A> is false. Finally,
-       read the object's closing brace by calling <A HREF="../../../../com/google/gson/stream/JsonReader.html#endObject()"><CODE>endObject()</CODE></A>.
- </ul>
- <p>When a nested object or array is encountered, delegate to the
- corresponding handler method.
-
- <p>When an unknown name is encountered, strict parsers should fail with an
- exception. Lenient parsers should call <A HREF="../../../../com/google/gson/stream/JsonReader.html#skipValue()"><CODE>skipValue()</CODE></A> to recursively
- skip the value's nested tokens, which may otherwise conflict.
-
- <p>If a value may be null, you should first check using <A HREF="../../../../com/google/gson/stream/JsonReader.html#peek()"><CODE>peek()</CODE></A>.
- Null literals can be consumed using either <A HREF="../../../../com/google/gson/stream/JsonReader.html#nextNull()"><CODE>nextNull()</CODE></A> or <A HREF="../../../../com/google/gson/stream/JsonReader.html#skipValue()"><CODE>skipValue()</CODE></A>.
-
- <h3>Example</h3>
- Suppose we'd like to parse a stream of messages such as the following: <pre> <code>[
-   {
-     "id": 912345678901,
-     "text": "How do I read a JSON stream in Java?",
-     "geo": null,
-     "user": {
-       "name": "json_newb",
-       "followers_count": 41
-      }
-   },
-   {
-     "id": 912345678902,
-     "text": "@json_newb just use JsonReader!",
-     "geo": [50.454722, -104.606667],
-     "user": {
-       "name": "jesse",
-       "followers_count": 2
-     }
-   }
- ]</code></pre>
- This code implements the parser for the above structure: <pre>   <code>public List&lt;Message&gt; readJsonStream(InputStream in) throws IOException {
-     JsonReader reader = new JsonReader(new InputStreamReader(in, "UTF-8"));
-     try {
-       return readMessagesArray(reader);
-     } finally {
-       reader.close();
-     }
-   }
-
-   public List&lt;Message&gt; readMessagesArray(JsonReader reader) throws IOException {
-     List&lt;Message&gt; messages = new ArrayList&lt;Message&gt;();
-
-     reader.beginArray();
-     while (reader.hasNext()) {
-       messages.add(readMessage(reader));
-     }
-     reader.endArray();
-     return messages;
-   }
-
-   public Message readMessage(JsonReader reader) throws IOException {
-     long id = -1;
-     String text = null;
-     User user = null;
-     List&lt;Double&gt; geo = null;
-
-     reader.beginObject();
-     while (reader.hasNext()) {
-       String name = reader.nextName();
-       if (name.equals("id")) {
-         id = reader.nextLong();
-       } else if (name.equals("text")) {
-         text = reader.nextString();
-       } else if (name.equals("geo") &amp;&amp; reader.peek() != JsonToken.NULL) {
-         geo = readDoublesArray(reader);
-       } else if (name.equals("user")) {
-         user = readUser(reader);
-       } else {
-         reader.skipValue();
-       }
-     }
-     reader.endObject();
-     return new Message(id, text, user, geo);
-   }
-
-   public List&lt;Double&gt; readDoublesArray(JsonReader reader) throws IOException {
-     List&lt;Double&gt; doubles = new ArrayList&lt;Double&gt;();
-
-     reader.beginArray();
-     while (reader.hasNext()) {
-       doubles.add(reader.nextDouble());
-     }
-     reader.endArray();
-     return doubles;
-   }
-
-   public User readUser(JsonReader reader) throws IOException {
-     String username = null;
-     int followersCount = -1;
-
-     reader.beginObject();
-     while (reader.hasNext()) {
-       String name = reader.nextName();
-       if (name.equals("name")) {
-         username = reader.nextString();
-       } else if (name.equals("followers_count")) {
-         followersCount = reader.nextInt();
-       } else {
-         reader.skipValue();
-       }
-     }
-     reader.endObject();
-     return new User(username, followersCount);
-   }</code></pre>
-
- <h3>Number Handling</h3>
- This reader permits numeric values to be read as strings and string values to
- be read as numbers. For example, both elements of the JSON array <code>[1, "1"]</code> may be read using either <A HREF="../../../../com/google/gson/stream/JsonReader.html#nextInt()"><CODE>nextInt()</CODE></A> or <A HREF="../../../../com/google/gson/stream/JsonReader.html#nextString()"><CODE>nextString()</CODE></A>.
- This behavior is intended to prevent lossy numeric conversions: double is
- JavaScript's only numeric type and very large values like <code>9007199254740993</code> cannot be represented exactly on that platform. To minimize
- precision loss, extremely large values should be written and read as strings
- in JSON.
-
- <a name="nonexecuteprefix"/><h3>Non-Execute Prefix</h3>
- Web servers that serve private data using JSON may be vulnerable to <a
- href="http://en.wikipedia.org/wiki/JSON#Cross-site_request_forgery">Cross-site
- request forgery</a> attacks. In such an attack, a malicious site gains access
- to a private JSON file by executing it with an HTML <code>&lt;script&gt;</code> tag.
-
- <p>Prefixing JSON files with <code>")]}'\n"</code> makes them non-executable
- by <code>&lt;script&gt;</code> tags, disarming the attack. Since the prefix is malformed
- JSON, strict parsing fails when it is encountered. This class permits the
- non-execute prefix when <A HREF="../../../../com/google/gson/stream/JsonReader.html#setLenient(boolean)"><CODE>lenient parsing</CODE></A> is
- enabled.
-
- <p>Each <code>JsonReader</code> may be used to read a single JSON stream. Instances
- of this class are not thread safe.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.6</DD>
-<DT><B>Author:</B></DT>
-  <DD>Jesse Wilson</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#JsonReader(java.io.Reader)">JsonReader</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;in)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new instance that reads a JSON-encoded stream from <code>in</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#beginArray()">beginArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consumes the next token from the JSON stream and asserts that it is the
- beginning of a new array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#beginObject()">beginObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consumes the next token from the JSON stream and asserts that it is the
- beginning of a new object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#close()">close</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Closes this JSON reader and the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io"><CODE>Reader</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#endArray()">endArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consumes the next token from the JSON stream and asserts that it is the
- end of the current array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#endObject()">endObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consumes the next token from the JSON stream and asserts that it is the
- end of the current object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#getPath()">getPath</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a <a href="http://goessner.net/articles/JsonPath/">JsonPath</a> to
- the current location in the JSON value.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#hasNext()">hasNext</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the current array or object has another element.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#isLenient()">isLenient</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if this parser is liberal in what it accepts.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#nextBoolean()">nextBoolean</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#BOOLEAN"><CODE>boolean</CODE></A> value of the next token,
- consuming it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;double</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#nextDouble()">nextDouble</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#NUMBER"><CODE>double</CODE></A> value of the next token,
- consuming it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;int</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#nextInt()">nextInt</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#NUMBER"><CODE>int</CODE></A> value of the next token,
- consuming it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;long</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#nextLong()">nextLong</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#NUMBER"><CODE>long</CODE></A> value of the next token,
- consuming it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#nextName()">nextName</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next token, a <A HREF="../../../../com/google/gson/stream/JsonToken.html#NAME"><CODE>property name</CODE></A>, and
- consumes it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#nextNull()">nextNull</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consumes the next token from the JSON stream and asserts that it is a
- literal null.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#nextString()">nextString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#STRING"><CODE>string</CODE></A> value of the next token,
- consuming it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#peek()">peek</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the type of the next token without consuming it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#setLenient(boolean)">setLenient</A></B>(boolean&nbsp;lenient)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configure this parser to be  be liberal in what it accepts.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#skipValue()">skipValue</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Skips the next value recursively.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonReader.html#toString()">toString</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonReader(java.io.Reader)"><!-- --></A><H3>
-JsonReader</H3>
-<PRE>
-public <B>JsonReader</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io">Reader</A>&nbsp;in)</PRE>
-<DL>
-<DD>Creates a new instance that reads a JSON-encoded stream from <code>in</code>.
-<P>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="setLenient(boolean)"><!-- --></A><H3>
-setLenient</H3>
-<PRE>
-public final void <B>setLenient</B>(boolean&nbsp;lenient)</PRE>
-<DL>
-<DD>Configure this parser to be  be liberal in what it accepts. By default,
- this parser is strict and only accepts JSON as specified by <a
- href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>. Setting the
- parser to lenient causes it to ignore the following syntax errors:
-
- <ul>
-   <li>Streams that start with the <a href="#nonexecuteprefix">non-execute
-       prefix</a>, <code>")]}'\n"</code>.
-   <li>Streams that include multiple top-level values. With strict parsing,
-       each stream must contain exactly one top-level value.
-   <li>Top-level values of any type. With strict parsing, the top-level
-       value must be an object or an array.
-   <li>Numbers may be <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isNaN()" title="class or interface in java.lang"><CODE>NaNs</CODE></A> or <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isInfinite()" title="class or interface in java.lang"><CODE>infinities</CODE></A>.
-   <li>End of line comments starting with <code>//</code> or <code>#</code> and
-       ending with a newline character.
-   <li>C-style comments starting with <code>/*</code> and ending with
-       <code>*</code><code>/</code>. Such comments may not be nested.
-   <li>Names that are unquoted or <code>'single quoted'</code>.
-   <li>Strings that are unquoted or <code>'single quoted'</code>.
-   <li>Array elements separated by <code>;</code> instead of <code>,</code>.
-   <li>Unnecessary array separators. These are interpreted as if null
-       was the omitted value.
-   <li>Names and values separated by <code>=</code> or <code>=&gt;</code> instead of
-       <code>:</code>.
-   <li>Name/value pairs separated by <code>;</code> instead of <code>,</code>.
- </ul>
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isLenient()"><!-- --></A><H3>
-isLenient</H3>
-<PRE>
-public final boolean <B>isLenient</B>()</PRE>
-<DL>
-<DD>Returns true if this parser is liberal in what it accepts.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="beginArray()"><!-- --></A><H3>
-beginArray</H3>
-<PRE>
-public void <B>beginArray</B>()
-                throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- beginning of a new array.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="endArray()"><!-- --></A><H3>
-endArray</H3>
-<PRE>
-public void <B>endArray</B>()
-              throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- end of the current array.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="beginObject()"><!-- --></A><H3>
-beginObject</H3>
-<PRE>
-public void <B>beginObject</B>()
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- beginning of a new object.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="endObject()"><!-- --></A><H3>
-endObject</H3>
-<PRE>
-public void <B>endObject</B>()
-               throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- end of the current object.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="hasNext()"><!-- --></A><H3>
-hasNext</H3>
-<PRE>
-public boolean <B>hasNext</B>()
-                throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns true if the current array or object has another element.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="peek()"><!-- --></A><H3>
-peek</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>peek</B>()
-               throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns the type of the next token without consuming it.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nextName()"><!-- --></A><H3>
-nextName</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>nextName</B>()
-                throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns the next token, a <A HREF="../../../../com/google/gson/stream/JsonToken.html#NAME"><CODE>property name</CODE></A>, and
- consumes it.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE> - if the next token in the stream is not a property
-     name.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nextString()"><!-- --></A><H3>
-nextString</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>nextString</B>()
-                  throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#STRING"><CODE>string</CODE></A> value of the next token,
- consuming it. If the next token is a number, this method will return its
- string form.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the next token is not a string or if
-     this reader is closed.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nextBoolean()"><!-- --></A><H3>
-nextBoolean</H3>
-<PRE>
-public boolean <B>nextBoolean</B>()
-                    throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#BOOLEAN"><CODE>boolean</CODE></A> value of the next token,
- consuming it.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the next token is not a boolean or if
-     this reader is closed.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nextNull()"><!-- --></A><H3>
-nextNull</H3>
-<PRE>
-public void <B>nextNull</B>()
-              throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Consumes the next token from the JSON stream and asserts that it is a
- literal null.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the next token is not null or if this
-     reader is closed.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nextDouble()"><!-- --></A><H3>
-nextDouble</H3>
-<PRE>
-public double <B>nextDouble</B>()
-                  throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#NUMBER"><CODE>double</CODE></A> value of the next token,
- consuming it. If the next token is a string, this method will attempt to
- parse it as a double using <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#parseDouble(java.lang.String)" title="class or interface in java.lang"><CODE>Double.parseDouble(String)</CODE></A>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the next token is not a literal value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the next literal value cannot be parsed
-     as a double, or is non-finite.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nextLong()"><!-- --></A><H3>
-nextLong</H3>
-<PRE>
-public long <B>nextLong</B>()
-              throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#NUMBER"><CODE>long</CODE></A> value of the next token,
- consuming it. If the next token is a string, this method will attempt to
- parse it as a long. If the next token's numeric value cannot be exactly
- represented by a Java <code>long</code>, this method throws.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the next token is not a literal value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the next literal value cannot be parsed
-     as a number, or exactly represented as a long.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nextInt()"><!-- --></A><H3>
-nextInt</H3>
-<PRE>
-public int <B>nextInt</B>()
-            throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Returns the <A HREF="../../../../com/google/gson/stream/JsonToken.html#NUMBER"><CODE>int</CODE></A> value of the next token,
- consuming it. If the next token is a string, this method will attempt to
- parse it as an int. If the next token's numeric value cannot be exactly
- represented by a Java <code>int</code>, this method throws.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if the next token is not a literal value.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NumberFormatException.html?is-external=true" title="class or interface in java.lang">NumberFormatException</A></CODE> - if the next literal value cannot be parsed
-     as a number, or exactly represented as an int.
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="close()"><!-- --></A><H3>
-close</H3>
-<PRE>
-public void <B>close</B>()
-           throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Closes this JSON reader and the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io"><CODE>Reader</CODE></A>.
-<P>
-<DD><DL>
-<DT><B>Specified by:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true#close()" title="class or interface in java.io">close</A></CODE> in interface <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="skipValue()"><!-- --></A><H3>
-skipValue</H3>
-<PRE>
-public void <B>skipValue</B>()
-               throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Skips the next value recursively. If it is an object or array, all nested
- elements are skipped. This method is intended for use when the JSON token
- stream contains unrecognized or unhandled values.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="toString()"><!-- --></A><H3>
-toString</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toString</B>()</PRE>
-<DL>
-<DD><DL>
-<DT><B>Overrides:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE> in class <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getPath()"><!-- --></A><H3>
-getPath</H3>
-<PRE>
-public <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getPath</B>()</PRE>
-<DL>
-<DD>Returns a <a href="http://goessner.net/articles/JsonPath/">JsonPath</a> to
- the current location in the JSON value.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonReader.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV CLASS&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/JsonReader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonReader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/JsonToken.html b/gson/docs/javadocs/com/google/gson/stream/JsonToken.html
deleted file mode 100644
index 64d937d5d..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/JsonToken.html
+++ /dev/null
@@ -1,487 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonToken (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonToken (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonToken.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/JsonToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#enum_constant_summary">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#enum_constant_detail">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.stream</FONT>
-<BR>
-Enum JsonToken</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">java.lang.Enum</A>&lt;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>&gt;
-      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.stream.JsonToken</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</A>&lt;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>&gt;</DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public enum <B>JsonToken</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</A>&lt;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>&gt;</DL>
-</PRE>
-
-<P>
-A structure, name or value type in a JSON-encoded string.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.6</DD>
-<DT><B>Author:</B></DT>
-  <DD>Jesse Wilson</DD>
-</DL>
-<HR>
-
-<P>
-<!-- =========== ENUM CONSTANT SUMMARY =========== -->
-
-<A NAME="enum_constant_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Enum Constant Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#BEGIN_ARRAY">BEGIN_ARRAY</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The opening of a JSON array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#BEGIN_OBJECT">BEGIN_OBJECT</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The opening of a JSON object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#BOOLEAN">BOOLEAN</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A JSON <code>true</code> or <code>false</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#END_ARRAY">END_ARRAY</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The closing of a JSON array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#END_DOCUMENT">END_DOCUMENT</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The end of the JSON stream.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#END_OBJECT">END_OBJECT</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The closing of a JSON object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#NAME">NAME</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A JSON property name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#NULL">NULL</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A JSON <code>null</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#NUMBER">NUMBER</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A JSON number represented in this API by a Java <code>double</code>, <code>long</code>, or <code>int</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#STRING">STRING</A></B></CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A JSON string.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#valueOf(java.lang.String)">valueOf</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the enum constant of this type with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>[]</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonToken.html#values()">values</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array containing the constants of this enum type, in
-the order they are declared.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Enum"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang">Enum</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#compareTo(E)" title="class or interface in java.lang">compareTo</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#getDeclaringClass()" title="class or interface in java.lang">getDeclaringClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#name()" title="class or interface in java.lang">name</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#ordinal()" title="class or interface in java.lang">ordinal</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true#valueOf(java.lang.Class, java.lang.String)" title="class or interface in java.lang">valueOf</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ============ ENUM CONSTANT DETAIL =========== -->
-
-<A NAME="enum_constant_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Enum Constant Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="BEGIN_ARRAY"><!-- --></A><H3>
-BEGIN_ARRAY</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>BEGIN_ARRAY</B></PRE>
-<DL>
-<DD>The opening of a JSON array. Written using <A HREF="../../../../com/google/gson/stream/JsonWriter.html#beginArray()"><CODE>JsonWriter.beginArray()</CODE></A>
- and read using <A HREF="../../../../com/google/gson/stream/JsonReader.html#beginArray()"><CODE>JsonReader.beginArray()</CODE></A>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="END_ARRAY"><!-- --></A><H3>
-END_ARRAY</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>END_ARRAY</B></PRE>
-<DL>
-<DD>The closing of a JSON array. Written using <A HREF="../../../../com/google/gson/stream/JsonWriter.html#endArray()"><CODE>JsonWriter.endArray()</CODE></A>
- and read using <A HREF="../../../../com/google/gson/stream/JsonReader.html#endArray()"><CODE>JsonReader.endArray()</CODE></A>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="BEGIN_OBJECT"><!-- --></A><H3>
-BEGIN_OBJECT</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>BEGIN_OBJECT</B></PRE>
-<DL>
-<DD>The opening of a JSON object. Written using <A HREF="../../../../com/google/gson/stream/JsonWriter.html#beginObject()"><CODE>JsonWriter.beginObject()</CODE></A>
- and read using <A HREF="../../../../com/google/gson/stream/JsonReader.html#beginObject()"><CODE>JsonReader.beginObject()</CODE></A>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="END_OBJECT"><!-- --></A><H3>
-END_OBJECT</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>END_OBJECT</B></PRE>
-<DL>
-<DD>The closing of a JSON object. Written using <A HREF="../../../../com/google/gson/stream/JsonWriter.html#endObject()"><CODE>JsonWriter.endObject()</CODE></A>
- and read using <A HREF="../../../../com/google/gson/stream/JsonReader.html#endObject()"><CODE>JsonReader.endObject()</CODE></A>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="NAME"><!-- --></A><H3>
-NAME</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>NAME</B></PRE>
-<DL>
-<DD>A JSON property name. Within objects, tokens alternate between names and
- their values. Written using <A HREF="../../../../com/google/gson/stream/JsonWriter.html#name(java.lang.String)"><CODE>JsonWriter.name(java.lang.String)</CODE></A> and read using <A HREF="../../../../com/google/gson/stream/JsonReader.html#nextName()"><CODE>JsonReader.nextName()</CODE></A>
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="STRING"><!-- --></A><H3>
-STRING</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>STRING</B></PRE>
-<DL>
-<DD>A JSON string.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="NUMBER"><!-- --></A><H3>
-NUMBER</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>NUMBER</B></PRE>
-<DL>
-<DD>A JSON number represented in this API by a Java <code>double</code>, <code>long</code>, or <code>int</code>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="BOOLEAN"><!-- --></A><H3>
-BOOLEAN</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>BOOLEAN</B></PRE>
-<DL>
-<DD>A JSON <code>true</code> or <code>false</code>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="NULL"><!-- --></A><H3>
-NULL</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>NULL</B></PRE>
-<DL>
-<DD>A JSON <code>null</code>.
-<P>
-<DL>
-</DL>
-</DL>
-<HR>
-
-<A NAME="END_DOCUMENT"><!-- --></A><H3>
-END_DOCUMENT</H3>
-<PRE>
-public static final <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>END_DOCUMENT</B></PRE>
-<DL>
-<DD>The end of the JSON stream. This sentinel value is returned by <A HREF="../../../../com/google/gson/stream/JsonReader.html#peek()"><CODE>JsonReader.peek()</CODE></A> to signal that the JSON-encoded value has no more
- tokens.
-<P>
-<DL>
-</DL>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="values()"><!-- --></A><H3>
-values</H3>
-<PRE>
-public static <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>[] <B>values</B>()</PRE>
-<DL>
-<DD>Returns an array containing the constants of this enum type, in
-the order they are declared.  This method may be used to iterate
-over the constants as follows:
-<pre>
-for (JsonToken c : JsonToken.values())
-&nbsp;   System.out.println(c);
-</pre>
-<P>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>an array containing the constants of this enum type, in
-the order they are declared</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="valueOf(java.lang.String)"><!-- --></A><H3>
-valueOf</H3>
-<PRE>
-public static <A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> <B>valueOf</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</PRE>
-<DL>
-<DD>Returns the enum constant of this type with the specified name.
-The string must match <I>exactly</I> an identifier used to declare an
-enum constant in this type.  (Extraneous whitespace characters are 
-not permitted.)
-<P>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the enum constant to be returned.
-<DT><B>Returns:</B><DD>the enum constant with the specified name
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</A></CODE> - if this enum type has no constant
-with the specified name
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</A></CODE> - if the argument is null</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonToken.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/JsonToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#enum_constant_summary">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;<A HREF="#enum_constant_detail">ENUM CONSTANTS</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/JsonWriter.html b/gson/docs/javadocs/com/google/gson/stream/JsonWriter.html
deleted file mode 100644
index 11578fd5f..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/JsonWriter.html
+++ /dev/null
@@ -1,898 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-JsonWriter (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="JsonWriter (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonWriter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/JsonWriter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonWriter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.stream</FONT>
-<BR>
-Class JsonWriter</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.stream.JsonWriter</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Flushable.html?is-external=true" title="class or interface in java.io">Flushable</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public class <B>JsonWriter</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A><DT>implements <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Flushable.html?is-external=true" title="class or interface in java.io">Flushable</A></DL>
-</PRE>
-
-<P>
-Writes a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value to a stream, one token at a time. The stream includes both
- literal values (strings, numbers, booleans and nulls) as well as the begin
- and end delimiters of objects and arrays.
-
- <h3>Encoding JSON</h3>
- To encode your data as JSON, create a new <code>JsonWriter</code>. Each JSON
- document must contain one top-level array or object. Call methods on the
- writer as you walk the structure's contents, nesting arrays and objects as
- necessary:
- <ul>
-   <li>To write <strong>arrays</strong>, first call <A HREF="../../../../com/google/gson/stream/JsonWriter.html#beginArray()"><CODE>beginArray()</CODE></A>.
-       Write each of the array's elements with the appropriate <A HREF="../../../../com/google/gson/stream/JsonWriter.html#value(java.lang.String)"><CODE>value(java.lang.String)</CODE></A>
-       methods or by nesting other arrays and objects. Finally close the array
-       using <A HREF="../../../../com/google/gson/stream/JsonWriter.html#endArray()"><CODE>endArray()</CODE></A>.
-   <li>To write <strong>objects</strong>, first call <A HREF="../../../../com/google/gson/stream/JsonWriter.html#beginObject()"><CODE>beginObject()</CODE></A>.
-       Write each of the object's properties by alternating calls to
-       <A HREF="../../../../com/google/gson/stream/JsonWriter.html#name(java.lang.String)"><CODE>name(java.lang.String)</CODE></A> with the property's value. Write property values with the
-       appropriate <A HREF="../../../../com/google/gson/stream/JsonWriter.html#value(java.lang.String)"><CODE>value(java.lang.String)</CODE></A> method or by nesting other objects or arrays.
-       Finally close the object using <A HREF="../../../../com/google/gson/stream/JsonWriter.html#endObject()"><CODE>endObject()</CODE></A>.
- </ul>
-
- <h3>Example</h3>
- Suppose we'd like to encode a stream of messages such as the following: <pre> <code>[
-   {
-     "id": 912345678901,
-     "text": "How do I stream JSON in Java?",
-     "geo": null,
-     "user": {
-       "name": "json_newb",
-       "followers_count": 41
-      }
-   },
-   {
-     "id": 912345678902,
-     "text": "@json_newb just use JsonWriter!",
-     "geo": [50.454722, -104.606667],
-     "user": {
-       "name": "jesse",
-       "followers_count": 2
-     }
-   }
- ]</code></pre>
- This code encodes the above structure: <pre>   <code>public void writeJsonStream(OutputStream out, List&lt;Message&gt; messages) throws IOException {
-     JsonWriter writer = new JsonWriter(new OutputStreamWriter(out, "UTF-8"));
-     writer.setIndentSpaces(4);
-     writeMessagesArray(writer, messages);
-     writer.close();
-   }
-
-   public void writeMessagesArray(JsonWriter writer, List&lt;Message&gt; messages) throws IOException {
-     writer.beginArray();
-     for (Message message : messages) {
-       writeMessage(writer, message);
-     }
-     writer.endArray();
-   }
-
-   public void writeMessage(JsonWriter writer, Message message) throws IOException {
-     writer.beginObject();
-     writer.name("id").value(message.getId());
-     writer.name("text").value(message.getText());
-     if (message.getGeo() != null) {
-       writer.name("geo");
-       writeDoublesArray(writer, message.getGeo());
-     } else {
-       writer.name("geo").nullValue();
-     }
-     writer.name("user");
-     writeUser(writer, message.getUser());
-     writer.endObject();
-   }
-
-   public void writeUser(JsonWriter writer, User user) throws IOException {
-     writer.beginObject();
-     writer.name("name").value(user.getName());
-     writer.name("followers_count").value(user.getFollowersCount());
-     writer.endObject();
-   }
-
-   public void writeDoublesArray(JsonWriter writer, List&lt;Double&gt; doubles) throws IOException {
-     writer.beginArray();
-     for (Double value : doubles) {
-       writer.value(value);
-     }
-     writer.endArray();
-   }</code></pre>
-
- <p>Each <code>JsonWriter</code> may be used to write a single JSON stream.
- Instances of this class are not thread safe. Calls that would result in a
- malformed JSON string will fail with an <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang"><CODE>IllegalStateException</CODE></A>.
-<P>
-
-<P>
-<DL>
-<DT><B>Since:</B></DT>
-  <DD>1.6</DD>
-<DT><B>Author:</B></DT>
-  <DD>Jesse Wilson</DD>
-</DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#JsonWriter(java.io.Writer)">JsonWriter</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</A>&nbsp;out)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a new instance that writes a JSON-encoded stream to <code>out</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#beginArray()">beginArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Begins encoding a new array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#beginObject()">beginObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Begins encoding a new object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#close()">close</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Flushes and closes this writer and the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#endArray()">endArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ends encoding the current array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#endObject()">endObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ends encoding the current object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#flush()">flush</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ensures all buffered data is written to the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A>
- and flushes that writer.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#getSerializeNulls()">getSerializeNulls</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if object members are serialized when their value is null.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#isHtmlSafe()">isHtmlSafe</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if this writer writes JSON that's safe for inclusion in HTML
- and XML documents.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;boolean</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#isLenient()">isLenient</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if this writer has relaxed syntax rules.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#name(java.lang.String)">name</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes the property name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#nullValue()">nullValue</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>null</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#setHtmlSafe(boolean)">setHtmlSafe</A></B>(boolean&nbsp;htmlSafe)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configure this writer to emit JSON that's safe for direct inclusion in HTML
- and XML documents.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#setIndent(java.lang.String)">setIndent</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;indent)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the indentation string to be repeated for each level of indentation
- in the encoded document.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#setLenient(boolean)">setLenient</A></B>(boolean&nbsp;lenient)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Configure this writer to relax its syntax rules.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#setSerializeNulls(boolean)">setSerializeNulls</A></B>(boolean&nbsp;serializeNulls)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets whether object members are serialized when their value is null.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#value(boolean)">value</A></B>(boolean&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#value(double)">value</A></B>(double&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#value(long)">value</A></B>(long&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#value(java.lang.Number)">value</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html#value(java.lang.String)">value</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="JsonWriter(java.io.Writer)"><!-- --></A><H3>
-JsonWriter</H3>
-<PRE>
-public <B>JsonWriter</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io">Writer</A>&nbsp;out)</PRE>
-<DL>
-<DD>Creates a new instance that writes a JSON-encoded stream to <code>out</code>.
- For best performance, ensure <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A> is buffered; wrapping in
- <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/BufferedWriter.html?is-external=true" title="class or interface in java.io"><CODE>BufferedWriter</CODE></A> if necessary.
-<P>
-</DL>
-
-<!-- ============ METHOD DETAIL ========== -->
-
-<A NAME="method_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Method Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="setIndent(java.lang.String)"><!-- --></A><H3>
-setIndent</H3>
-<PRE>
-public final void <B>setIndent</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;indent)</PRE>
-<DL>
-<DD>Sets the indentation string to be repeated for each level of indentation
- in the encoded document. If <code>indent.isEmpty()</code> the encoded document
- will be compact. Otherwise the encoded document will be more
- human-readable.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>indent</CODE> - a string containing only whitespace.</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setLenient(boolean)"><!-- --></A><H3>
-setLenient</H3>
-<PRE>
-public final void <B>setLenient</B>(boolean&nbsp;lenient)</PRE>
-<DL>
-<DD>Configure this writer to relax its syntax rules. By default, this writer
- only emits well-formed JSON as specified by <a
- href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>. Setting the writer
- to lenient permits the following:
- <ul>
-   <li>Top-level values of any type. With strict writing, the top-level
-       value must be an object or an array.
-   <li>Numbers may be <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isNaN()" title="class or interface in java.lang"><CODE>NaNs</CODE></A> or <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isInfinite()" title="class or interface in java.lang"><CODE>infinities</CODE></A>.
- </ul>
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isLenient()"><!-- --></A><H3>
-isLenient</H3>
-<PRE>
-public boolean <B>isLenient</B>()</PRE>
-<DL>
-<DD>Returns true if this writer has relaxed syntax rules.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setHtmlSafe(boolean)"><!-- --></A><H3>
-setHtmlSafe</H3>
-<PRE>
-public final void <B>setHtmlSafe</B>(boolean&nbsp;htmlSafe)</PRE>
-<DL>
-<DD>Configure this writer to emit JSON that's safe for direct inclusion in HTML
- and XML documents. This escapes the HTML characters <code>&lt;</code>, <code>&gt;</code>,
- <code>&amp;</code> and <code>=</code> before writing them to the stream. Without this
- setting, your XML/HTML encoder should replace these characters with the
- corresponding escape sequences.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="isHtmlSafe()"><!-- --></A><H3>
-isHtmlSafe</H3>
-<PRE>
-public final boolean <B>isHtmlSafe</B>()</PRE>
-<DL>
-<DD>Returns true if this writer writes JSON that's safe for inclusion in HTML
- and XML documents.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="setSerializeNulls(boolean)"><!-- --></A><H3>
-setSerializeNulls</H3>
-<PRE>
-public final void <B>setSerializeNulls</B>(boolean&nbsp;serializeNulls)</PRE>
-<DL>
-<DD>Sets whether object members are serialized when their value is null.
- This has no impact on array elements. The default is true.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="getSerializeNulls()"><!-- --></A><H3>
-getSerializeNulls</H3>
-<PRE>
-public final boolean <B>getSerializeNulls</B>()</PRE>
-<DL>
-<DD>Returns true if object members are serialized when their value is null.
- This has no impact on array elements. The default is true.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-</DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="beginArray()"><!-- --></A><H3>
-beginArray</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>beginArray</B>()
-                      throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Begins encoding a new array. Each call to this method must be paired with
- a call to <A HREF="../../../../com/google/gson/stream/JsonWriter.html#endArray()"><CODE>endArray()</CODE></A>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="endArray()"><!-- --></A><H3>
-endArray</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>endArray</B>()
-                    throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Ends encoding the current array.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="beginObject()"><!-- --></A><H3>
-beginObject</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>beginObject</B>()
-                       throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Begins encoding a new object. Each call to this method must be paired
- with a call to <A HREF="../../../../com/google/gson/stream/JsonWriter.html#endObject()"><CODE>endObject()</CODE></A>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="endObject()"><!-- --></A><H3>
-endObject</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>endObject</B>()
-                     throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Ends encoding the current object.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="name(java.lang.String)"><!-- --></A><H3>
-name</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>name</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)
-                throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Encodes the property name.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the forthcoming value. May not be null.
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="value(java.lang.String)"><!-- --></A><H3>
-value</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>value</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;value)
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Encodes <code>value</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - the literal string value, or null to encode a null literal.
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="nullValue()"><!-- --></A><H3>
-nullValue</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>nullValue</B>()
-                     throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Encodes <code>null</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="value(boolean)"><!-- --></A><H3>
-value</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>value</B>(boolean&nbsp;value)
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Encodes <code>value</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="value(double)"><!-- --></A><H3>
-value</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>value</B>(double&nbsp;value)
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Encodes <code>value</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - a finite value. May not be <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isNaN()" title="class or interface in java.lang"><CODE>NaNs</CODE></A> or
-     <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isInfinite()" title="class or interface in java.lang"><CODE>infinities</CODE></A>.
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="value(long)"><!-- --></A><H3>
-value</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>value</B>(long&nbsp;value)
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Encodes <code>value</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="value(java.lang.Number)"><!-- --></A><H3>
-value</H3>
-<PRE>
-public <A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> <B>value</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A>&nbsp;value)
-                 throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Encodes <code>value</code>.
-<P>
-<DD><DL>
-</DL>
-</DD>
-<DD><DL>
-<DT><B>Parameters:</B><DD><CODE>value</CODE> - a finite value. May not be <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isNaN()" title="class or interface in java.lang"><CODE>NaNs</CODE></A> or
-     <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Double.html?is-external=true#isInfinite()" title="class or interface in java.lang"><CODE>infinities</CODE></A>.
-<DT><B>Returns:</B><DD>this writer.
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="flush()"><!-- --></A><H3>
-flush</H3>
-<PRE>
-public void <B>flush</B>()
-           throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Ensures all buffered data is written to the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A>
- and flushes that writer.
-<P>
-<DD><DL>
-<DT><B>Specified by:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Flushable.html?is-external=true#flush()" title="class or interface in java.io">flush</A></CODE> in interface <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Flushable.html?is-external=true" title="class or interface in java.io">Flushable</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE></DL>
-</DD>
-</DL>
-<HR>
-
-<A NAME="close()"><!-- --></A><H3>
-close</H3>
-<PRE>
-public void <B>close</B>()
-           throws <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></PRE>
-<DL>
-<DD>Flushes and closes this writer and the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A>.
-<P>
-<DD><DL>
-<DT><B>Specified by:</B><DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true#close()" title="class or interface in java.io">close</A></CODE> in interface <CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A></CODE></DL>
-</DD>
-<DD><DL>
-
-<DT><B>Throws:</B>
-<DD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE> - if the JSON document is incomplete.</DL>
-</DD>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JsonWriter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;<A HREF="../../../../com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream"><B>NEXT CLASS</B></A></FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/JsonWriter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonWriter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/MalformedJsonException.html b/gson/docs/javadocs/com/google/gson/stream/MalformedJsonException.html
deleted file mode 100644
index c74d11a93..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/MalformedJsonException.html
+++ /dev/null
@@ -1,277 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-MalformedJsonException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="MalformedJsonException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/MalformedJsonException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/MalformedJsonException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="MalformedJsonException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<!-- ======== START OF CLASS DATA ======== -->
-<H2>
-<FONT SIZE="-1">
-com.google.gson.stream</FONT>
-<BR>
-Class MalformedJsonException</H2>
-<PRE>
-<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
-  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">java.lang.Throwable</A>
-      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">java.lang.Exception</A>
-          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">java.io.IOException</A>
-              <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.google.gson.stream.MalformedJsonException</B>
-</PRE>
-<DL>
-<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A></DD>
-</DL>
-<HR>
-<DL>
-<DT><PRE>public final class <B>MalformedJsonException</B><DT>extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></DL>
-</PRE>
-
-<P>
-Thrown when a reader encounters malformed JSON. Some syntax errors can be
- ignored by calling <A HREF="../../../../com/google/gson/stream/JsonReader.html#setLenient(boolean)"><CODE>JsonReader.setLenient(boolean)</CODE></A>.
-<P>
-
-<P>
-<DL>
-<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html#com.google.gson.stream.MalformedJsonException">Serialized Form</A></DL>
-<HR>
-
-<P>
-
-<!-- ======== CONSTRUCTOR SUMMARY ======== -->
-
-<A NAME="constructor_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Constructor Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/MalformedJsonException.html#MalformedJsonException(java.lang.String)">MalformedJsonException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/MalformedJsonException.html#MalformedJsonException(java.lang.String, java.lang.Throwable)">MalformedJsonException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;throwable)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><B><A HREF="../../../../com/google/gson/stream/MalformedJsonException.html#MalformedJsonException(java.lang.Throwable)">MalformedJsonException</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;throwable)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<!-- ========== METHOD SUMMARY =========== -->
-
-<A NAME="method_summary"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Method Summary</B></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Throwable"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#fillInStackTrace()" title="class or interface in java.lang">fillInStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getCause()" title="class or interface in java.lang">getCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getLocalizedMessage()" title="class or interface in java.lang">getLocalizedMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getMessage()" title="class or interface in java.lang">getMessage</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#getStackTrace()" title="class or interface in java.lang">getStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#initCause(java.lang.Throwable)" title="class or interface in java.lang">initCause</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace()" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintStream)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintWriter)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#setStackTrace(java.lang.StackTraceElement[])" title="class or interface in java.lang">setStackTrace</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><CODE><A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<!-- ========= CONSTRUCTOR DETAIL ======== -->
-
-<A NAME="constructor_detail"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
-<B>Constructor Detail</B></FONT></TH>
-</TR>
-</TABLE>
-
-<A NAME="MalformedJsonException(java.lang.String)"><!-- --></A><H3>
-MalformedJsonException</H3>
-<PRE>
-public <B>MalformedJsonException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg)</PRE>
-<DL>
-</DL>
-<HR>
-
-<A NAME="MalformedJsonException(java.lang.String, java.lang.Throwable)"><!-- --></A><H3>
-MalformedJsonException</H3>
-<PRE>
-public <B>MalformedJsonException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;msg,
-                              <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;throwable)</PRE>
-<DL>
-</DL>
-<HR>
-
-<A NAME="MalformedJsonException(java.lang.Throwable)"><!-- --></A><H3>
-MalformedJsonException</H3>
-<PRE>
-public <B>MalformedJsonException</B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A>&nbsp;throwable)</PRE>
-<DL>
-</DL>
-<!-- ========= END OF CLASS DATA ========= -->
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/MalformedJsonException.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><B>PREV CLASS</B></A>&nbsp;
-&nbsp;NEXT CLASS</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/MalformedJsonException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="MalformedJsonException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-<TR>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#methods_inherited_from_class_java.lang.Throwable">METHOD</A></FONT></TD>
-<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
-DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;METHOD</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/class-use/JsonReader.html b/gson/docs/javadocs/com/google/gson/stream/class-use/JsonReader.html
deleted file mode 100644
index fc40d6fa8..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/class-use/JsonReader.html
+++ /dev/null
@@ -1,208 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.stream.JsonReader (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.stream.JsonReader (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useJsonReader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonReader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.stream.JsonReader</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A> in <A HREF="../../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
-<TR ALIGN="right" VALIGN="">
-<TD NOWRAP><FONT SIZE="-1">
-<CODE>&lt;T&gt; T</CODE></FONT></TD>
-</TR>
-</TABLE>
-</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../../com/google/gson/Gson.html#fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type)">fromJson</A></B>(<A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;reader,
-         <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfT)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads the next JSON value from <code>reader</code> and convert it to an object
- of type <code>typeOfT</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A></CODE></FONT></TD>
-<TD><CODE><B>JsonParser.</B><B><A HREF="../../../../../com/google/gson/JsonParser.html#parse(com.google.gson.stream.JsonReader)">parse</A></B>(<A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;json)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next value from the JSON stream as a parse tree.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>abstract &nbsp;<A HREF="../../../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A></CODE></FONT></TD>
-<TD><CODE><B>TypeAdapter.</B><B><A HREF="../../../../../com/google/gson/TypeAdapter.html#read(com.google.gson.stream.JsonReader)">read</A></B>(<A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>&nbsp;in)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads one JSON value (an array, object, string, number, boolean or null)
- and converts it to a Java object.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useJsonReader.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonReader.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/class-use/JsonToken.html b/gson/docs/javadocs/com/google/gson/stream/class-use/JsonToken.html
deleted file mode 100644
index a28390f1e..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/class-use/JsonToken.html
+++ /dev/null
@@ -1,198 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.stream.JsonToken (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.stream.JsonToken (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useJsonToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.stream.JsonToken</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson.stream"><B>com.google.gson.stream</B></A></TD>
-<TD>&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson.stream"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A> in <A HREF="../../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A> that return <A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A></CODE></FONT></TD>
-<TD><CODE><B>JsonReader.</B><B><A HREF="../../../../../com/google/gson/stream/JsonReader.html#peek()">peek</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the type of the next token without consuming it.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A></CODE></FONT></TD>
-<TD><CODE><B>JsonToken.</B><B><A HREF="../../../../../com/google/gson/stream/JsonToken.html#valueOf(java.lang.String)">valueOf</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the enum constant of this type with the specified name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>static&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>[]</CODE></FONT></TD>
-<TD><CODE><B>JsonToken.</B><B><A HREF="../../../../../com/google/gson/stream/JsonToken.html#values()">values</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array containing the constants of this enum type, in
-the order they are declared.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useJsonToken.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonToken.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/class-use/JsonWriter.html b/gson/docs/javadocs/com/google/gson/stream/class-use/JsonWriter.html
deleted file mode 100644
index 08a76be23..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/class-use/JsonWriter.html
+++ /dev/null
@@ -1,313 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.stream.JsonWriter (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.stream.JsonWriter (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useJsonWriter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonWriter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.stream.JsonWriter</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson.stream"><B>com.google.gson.stream</B></A></TD>
-<TD>&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> in <A HREF="../../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../../com/google/gson/package-summary.html">com.google.gson</A> with parameters of type <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../../com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)">toJson</A></B>(<A HREF="../../../../../com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>&nbsp;jsonElement,
-       <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes the JSON for <code>jsonElement</code> to <code>writer</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>Gson.</B><B><A HREF="../../../../../com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, com.google.gson.stream.JsonWriter)">toJson</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;src,
-       <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/reflect/Type.html?is-external=true" title="class or interface in java.lang.reflect">Type</A>&nbsp;typeOfSrc,
-       <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;writer)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes the JSON representation of <code>src</code> of type <code>typeOfSrc</code> to
- <code>writer</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>abstract &nbsp;void</CODE></FONT></TD>
-<TD><CODE><B>TypeAdapter.</B><B><A HREF="../../../../../com/google/gson/TypeAdapter.html#write(com.google.gson.stream.JsonWriter, T)">write</A></B>(<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>&nbsp;out,
-      <A HREF="../../../../../com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes one JSON value (an array, object, string, number, boolean or null)
- for <code>value</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson.stream"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Uses of <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A> in <A HREF="../../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A></FONT></TH>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2">Methods in <A HREF="../../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A> that return <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#beginArray()">beginArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Begins encoding a new array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#beginObject()">beginObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Begins encoding a new object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#endArray()">endArray</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ends encoding the current array.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#endObject()">endObject</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ends encoding the current object.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#name(java.lang.String)">name</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes the property name.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#nullValue()">nullValue</A></B>()</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>null</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#value(boolean)">value</A></B>(boolean&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#value(double)">value</A></B>(double&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#value(long)">value</A></B>(long&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#value(java.lang.Number)">value</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang">Number</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
-<CODE>&nbsp;<A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></CODE></FONT></TD>
-<TD><CODE><B>JsonWriter.</B><B><A HREF="../../../../../com/google/gson/stream/JsonWriter.html#value(java.lang.String)">value</A></B>(<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;value)</CODE>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes <code>value</code>.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useJsonWriter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="JsonWriter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/class-use/MalformedJsonException.html b/gson/docs/javadocs/com/google/gson/stream/class-use/MalformedJsonException.html
deleted file mode 100644
index ddffe2894..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/class-use/MalformedJsonException.html
+++ /dev/null
@@ -1,145 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Class com.google.gson.stream.MalformedJsonException (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Class com.google.gson.stream.MalformedJsonException (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useMalformedJsonException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="MalformedJsonException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Class<br>com.google.gson.stream.MalformedJsonException</B></H2>
-</CENTER>
-No usage of com.google.gson.stream.MalformedJsonException
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream"><FONT CLASS="NavBarFont1"><B>Class</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../../index.html?com/google/gson/stream//class-useMalformedJsonException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="MalformedJsonException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/package-frame.html b/gson/docs/javadocs/com/google/gson/stream/package-frame.html
deleted file mode 100644
index 722729202..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/package-frame.html
+++ /dev/null
@@ -1,57 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.stream (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-
-</HEAD>
-
-<BODY BGCOLOR="white">
-<FONT size="+1" CLASS="FrameTitleFont">
-<A HREF="../../../../com/google/gson/stream/package-summary.html" target="classFrame">com.google.gson.stream</A></FONT>
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Classes</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="JsonReader.html" title="class in com.google.gson.stream" target="classFrame">JsonReader</A>
-<BR>
-<A HREF="JsonWriter.html" title="class in com.google.gson.stream" target="classFrame">JsonWriter</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Enums</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="JsonToken.html" title="enum in com.google.gson.stream" target="classFrame">JsonToken</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">
-Exceptions</FONT>&nbsp;
-<FONT CLASS="FrameItemFont">
-<BR>
-<A HREF="MalformedJsonException.html" title="class in com.google.gson.stream" target="classFrame">MalformedJsonException</A></FONT></TD>
-</TR>
-</TABLE>
-
-
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/package-summary.html b/gson/docs/javadocs/com/google/gson/stream/package-summary.html
deleted file mode 100644
index 8df8fcf72..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/package-summary.html
+++ /dev/null
@@ -1,192 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.stream (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson.stream (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-summary.html"><B>PREV PACKAGE</B></A>&nbsp;
-&nbsp;NEXT PACKAGE</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<H2>
-Package com.google.gson.stream
-</H2>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Class Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A></B></TD>
-<TD>Reads a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value as a stream of tokens.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A></B></TD>
-<TD>Writes a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value to a stream, one token at a time.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Enum Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A></B></TD>
-<TD>A structure, name or value type in a JSON-encoded string.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Exception Summary</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="15%"><B><A HREF="../../../../com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream">MalformedJsonException</A></B></TD>
-<TD>Thrown when a reader encounters malformed JSON.</TD>
-</TR>
-</TABLE>
-&nbsp;
-
-<P>
-<DL>
-</DL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Package</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-use.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-summary.html"><B>PREV PACKAGE</B></A>&nbsp;
-&nbsp;NEXT PACKAGE</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/package-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/package-tree.html b/gson/docs/javadocs/com/google/gson/stream/package-tree.html
deleted file mode 100644
index ed6ee8ff4..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/package-tree.html
+++ /dev/null
@@ -1,173 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-com.google.gson.stream Class Hierarchy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="com.google.gson.stream Class Hierarchy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-tree.html"><B>PREV</B></A>&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-Hierarchy For Package com.google.gson.stream
-</H2>
-</CENTER>
-<DL>
-<DT><B>Package Hierarchies:</B><DD><A HREF="../../../../overview-tree.html">All Packages</A></DL>
-<HR>
-<H2>
-Class Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><B>Object</B></A><UL>
-<LI TYPE="circle">com.google.gson.stream.<A HREF="../../../../com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream"><B>JsonReader</B></A> (implements java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A>)
-<LI TYPE="circle">com.google.gson.stream.<A HREF="../../../../com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><B>JsonWriter</B></A> (implements java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A>, java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Flushable.html?is-external=true" title="class or interface in java.io">Flushable</A>)
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang"><B>Throwable</B></A> (implements java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>)
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang"><B>Exception</B></A><UL>
-<LI TYPE="circle">java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io"><B>IOException</B></A><UL>
-<LI TYPE="circle">com.google.gson.stream.<A HREF="../../../../com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream"><B>MalformedJsonException</B></A></UL>
-</UL>
-</UL>
-</UL>
-</UL>
-<H2>
-Enum Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><B>Object</B></A><UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang"><B>Enum</B></A>&lt;E&gt; (implements java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</A>&lt;T&gt;, java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>)
-<UL>
-<LI TYPE="circle">com.google.gson.stream.<A HREF="../../../../com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><B>JsonToken</B></A></UL>
-</UL>
-</UL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;<A HREF="../../../../com/google/gson/reflect/package-tree.html"><B>PREV</B></A>&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/package-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/com/google/gson/stream/package-use.html b/gson/docs/javadocs/com/google/gson/stream/package-use.html
deleted file mode 100644
index 9276c0e4b..000000000
--- a/gson/docs/javadocs/com/google/gson/stream/package-use.html
+++ /dev/null
@@ -1,206 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Uses of Package com.google.gson.stream (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Uses of Package com.google.gson.stream (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Uses of Package<br>com.google.gson.stream</B></H2>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Packages that use <A HREF="../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson"><B>com.google.gson</B></A></TD>
-<TD>This package provides the <A HREF="../../../../com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="#com.google.gson.stream"><B>com.google.gson.stream</B></A></TD>
-<TD>&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Classes in <A HREF="../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A> used by <A HREF="../../../../com/google/gson/package-summary.html">com.google.gson</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../../com/google/gson/stream/class-use/JsonReader.html#com.google.gson"><B>JsonReader</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value as a stream of tokens.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../../com/google/gson/stream/class-use/JsonWriter.html#com.google.gson"><B>JsonWriter</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value to a stream, one token at a time.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="com.google.gson.stream"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-Classes in <A HREF="../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A> used by <A HREF="../../../../com/google/gson/stream/package-summary.html">com.google.gson.stream</A></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../../com/google/gson/stream/class-use/JsonToken.html#com.google.gson.stream"><B>JsonToken</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A structure, name or value type in a JSON-encoded string.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><B><A HREF="../../../../com/google/gson/stream/class-use/JsonWriter.html#com.google.gson.stream"><B>JsonWriter</B></A></B>
-
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value to a stream, one token at a time.</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Use</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="../../../../index.html?com/google/gson/stream/package-use.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="package-use.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/constant-values.html b/gson/docs/javadocs/constant-values.html
deleted file mode 100644
index eaf893cf2..000000000
--- a/gson/docs/javadocs/constant-values.html
+++ /dev/null
@@ -1,147 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Constant Field Values (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Constant Field Values (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?constant-values.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="constant-values.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H1>
-Constant Field Values</H1>
-</CENTER>
-<HR SIZE="4" NOSHADE>
-<B>Contents</B><UL>
-</UL>
-
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?constant-values.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="constant-values.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/deprecated-list.html b/gson/docs/javadocs/deprecated-list.html
deleted file mode 100644
index c537694fe..000000000
--- a/gson/docs/javadocs/deprecated-list.html
+++ /dev/null
@@ -1,190 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Deprecated List (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Deprecated List (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Deprecated</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?deprecated-list.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="deprecated-list.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-<B>Deprecated API</B></H2>
-</CENTER>
-<HR SIZE="4" NOSHADE>
-<B>Contents</B><UL>
-<LI><A HREF="#method">Deprecated Methods</A>
-<LI><A HREF="#constructor">Deprecated Constructors</A>
-</UL>
-
-<A NAME="method"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Deprecated Methods</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="com/google/gson/reflect/TypeToken.html#isAssignableFrom(java.lang.Class)">com.google.gson.reflect.TypeToken.isAssignableFrom(Class<?>)</A>
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="com/google/gson/reflect/TypeToken.html#isAssignableFrom(java.lang.reflect.Type)">com.google.gson.reflect.TypeToken.isAssignableFrom(Type)</A>
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>&nbsp;</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="com/google/gson/reflect/TypeToken.html#isAssignableFrom(com.google.gson.reflect.TypeToken)">com.google.gson.reflect.TypeToken.isAssignableFrom(TypeToken<?>)</A>
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<A NAME="constructor"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Deprecated Constructors</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD><A HREF="com/google/gson/JsonNull.html#JsonNull()">com.google.gson.JsonNull()</A>
-<BR>
-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
-</TR>
-</TABLE>
-&nbsp;
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Deprecated</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?deprecated-list.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="deprecated-list.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/help-doc.html b/gson/docs/javadocs/help-doc.html
deleted file mode 100644
index be40033c2..000000000
--- a/gson/docs/javadocs/help-doc.html
+++ /dev/null
@@ -1,224 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-API Help (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="API Help (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Help</B></FONT>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?help-doc.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="help-doc.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H1>
-How This API Document Is Organized</H1>
-</CENTER>
-This API (Application Programming Interface) document has pages corresponding to the items in the navigation bar, described as follows.<H3>
-Overview</H3>
-<BLOCKQUOTE>
-
-<P>
-The <A HREF="overview-summary.html">Overview</A> page is the front page of this API document and provides a list of all packages with a summary for each.  This page can also contain an overall description of the set of packages.</BLOCKQUOTE>
-<H3>
-Package</H3>
-<BLOCKQUOTE>
-
-<P>
-Each package has a page that contains a list of its classes and interfaces, with a summary for each. This page can contain four categories:<UL>
-<LI>Interfaces (italic)<LI>Classes<LI>Enums<LI>Exceptions<LI>Errors<LI>Annotation Types</UL>
-</BLOCKQUOTE>
-<H3>
-Class/Interface</H3>
-<BLOCKQUOTE>
-
-<P>
-Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a class/interface description, summary tables, and detailed member descriptions:<UL>
-<LI>Class inheritance diagram<LI>Direct Subclasses<LI>All Known Subinterfaces<LI>All Known Implementing Classes<LI>Class/interface declaration<LI>Class/interface description
-<P>
-<LI>Nested Class Summary<LI>Field Summary<LI>Constructor Summary<LI>Method Summary
-<P>
-<LI>Field Detail<LI>Constructor Detail<LI>Method Detail</UL>
-Each summary entry contains the first sentence from the detailed description for that item. The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer.</BLOCKQUOTE>
-</BLOCKQUOTE>
-<H3>
-Annotation Type</H3>
-<BLOCKQUOTE>
-
-<P>
-Each annotation type has its own separate page with the following sections:<UL>
-<LI>Annotation Type declaration<LI>Annotation Type description<LI>Required Element Summary<LI>Optional Element Summary<LI>Element Detail</UL>
-</BLOCKQUOTE>
-</BLOCKQUOTE>
-<H3>
-Enum</H3>
-<BLOCKQUOTE>
-
-<P>
-Each enum has its own separate page with the following sections:<UL>
-<LI>Enum declaration<LI>Enum description<LI>Enum Constant Summary<LI>Enum Constant Detail</UL>
-</BLOCKQUOTE>
-<H3>
-Use</H3>
-<BLOCKQUOTE>
-Each documented package, class and interface has its own Use page.  This page describes what packages, classes, methods, constructors and fields use any part of the given class or package. Given a class or interface A, its Use page includes subclasses of A, fields declared as A, methods that return A, and methods and constructors with parameters of type A.  You can access this page by first going to the package, class or interface, then clicking on the "Use" link in the navigation bar.</BLOCKQUOTE>
-<H3>
-Tree (Class Hierarchy)</H3>
-<BLOCKQUOTE>
-There is a <A HREF="overview-tree.html">Class Hierarchy</A> page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. The classes are organized by inheritance structure starting with <code>java.lang.Object</code>. The interfaces do not inherit from <code>java.lang.Object</code>.<UL>
-<LI>When viewing the Overview page, clicking on "Tree" displays the hierarchy for all packages.<LI>When viewing a particular package, class or interface page, clicking "Tree" displays the hierarchy for only that package.</UL>
-</BLOCKQUOTE>
-<H3>
-Deprecated API</H3>
-<BLOCKQUOTE>
-The <A HREF="deprecated-list.html">Deprecated API</A> page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to improvements, and a replacement API is usually given. Deprecated APIs may be removed in future implementations.</BLOCKQUOTE>
-<H3>
-Index</H3>
-<BLOCKQUOTE>
-The <A HREF="index-all.html">Index</A> contains an alphabetic list of all classes, interfaces, constructors, methods, and fields.</BLOCKQUOTE>
-<H3>
-Prev/Next</H3>
-These links take you to the next or previous class, interface, package, or related page.<H3>
-Frames/No Frames</H3>
-These links show and hide the HTML frames.  All pages are available with or without frames.
-<P>
-<H3>
-Serialized Form</H3>
-Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to re-implementors, not to developers using the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking "Serialized Form" in the "See also" section of the class description.
-<P>
-<H3>
-Constant Field Values</H3>
-The <a href="constant-values.html">Constant Field Values</a> page lists the static final fields and their values.
-<P>
-<FONT SIZE="-1">
-<EM>
-This help file applies to API documentation generated using the standard doclet.</EM>
-</FONT>
-<BR>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Help</B></FONT>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?help-doc.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="help-doc.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/index-all.html b/gson/docs/javadocs/index-all.html
deleted file mode 100644
index 758e0797e..000000000
--- a/gson/docs/javadocs/index-all.html
+++ /dev/null
@@ -1,1030 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Index (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="./stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Index (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="./index.html?index-all.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="./allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="./allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_H_">H</A> <A HREF="#_I_">I</A> <A HREF="#_J_">J</A> <A HREF="#_L_">L</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_P_">P</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_W_">W</A> <HR>
-<A NAME="_A_"><!-- --></A><H2>
-<B>A</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/JsonArray.html#add(com.google.gson.JsonElement)"><B>add(JsonElement)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Adds the specified element to self.
-<DT><A HREF="./com/google/gson/JsonObject.html#add(java.lang.String, com.google.gson.JsonElement)"><B>add(String, JsonElement)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Adds a member, which is a name-value pair, to self.
-<DT><A HREF="./com/google/gson/JsonArray.html#addAll(com.google.gson.JsonArray)"><B>addAll(JsonArray)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Adds all the elements of the specified array to self.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)"><B>addDeserializationExclusionStrategy(ExclusionStrategy)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to apply the passed in exclusion strategy during deserialization.
-<DT><A HREF="./com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.String)"><B>addProperty(String, String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to add a primitive member.
-<DT><A HREF="./com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.Number)"><B>addProperty(String, Number)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to add a primitive member.
-<DT><A HREF="./com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.Boolean)"><B>addProperty(String, Boolean)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to add a boolean member.
-<DT><A HREF="./com/google/gson/JsonObject.html#addProperty(java.lang.String, java.lang.Character)"><B>addProperty(String, Character)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to add a char member.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)"><B>addSerializationExclusionStrategy(ExclusionStrategy)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to apply the passed in exclusion strategy during serialization.
-</DL>
-<HR>
-<A NAME="_B_"><!-- --></A><H2>
-<B>B</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#beginArray()"><B>beginArray()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- beginning of a new array.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#beginArray()"><B>beginArray()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Begins encoding a new array.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#beginObject()"><B>beginObject()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- beginning of a new object.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#beginObject()"><B>beginObject()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Begins encoding a new object.
-</DL>
-<HR>
-<A NAME="_C_"><!-- --></A><H2>
-<B>C</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#close()"><B>close()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Closes this JSON reader and the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Reader.html?is-external=true" title="class or interface in java.io"><CODE>Reader</CODE></A>.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#close()"><B>close()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Flushes and closes this writer and the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A>.
-<DT><A HREF="./com/google/gson/package-summary.html"><B>com.google.gson</B></A> - package com.google.gson<DD>This package provides the <A HREF="./com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.<DT><A HREF="./com/google/gson/annotations/package-summary.html"><B>com.google.gson.annotations</B></A> - package com.google.gson.annotations<DD>This package provides annotations that can be used with <A HREF="./com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A>.<DT><A HREF="./com/google/gson/reflect/package-summary.html"><B>com.google.gson.reflect</B></A> - package com.google.gson.reflect<DD>This package provides utility classes for finding type information for generic types.<DT><A HREF="./com/google/gson/stream/package-summary.html"><B>com.google.gson.stream</B></A> - package com.google.gson.stream<DD>&nbsp;<DT><A HREF="./com/google/gson/JsonArray.html#contains(com.google.gson.JsonElement)"><B>contains(JsonElement)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Returns true if this array contains the specified element.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#create()"><B>create()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Creates a <A HREF="./com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance based on the current configuration.
-<DT><A HREF="./com/google/gson/TypeAdapterFactory.html#create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)"><B>create(Gson, TypeToken&lt;T&gt;)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson">TypeAdapterFactory</A>
-<DD>Returns a type adapter for <code>type</code>, or null if this factory doesn't
- support <code>type</code>.
-<DT><A HREF="./com/google/gson/InstanceCreator.html#createInstance(java.lang.reflect.Type)"><B>createInstance(Type)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/InstanceCreator.html" title="interface in com.google.gson">InstanceCreator</A>
-<DD>Gson invokes this call-back method during deserialization to create an instance of the
- specified type.
-</DL>
-<HR>
-<A NAME="_D_"><!-- --></A><H2>
-<B>D</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/JsonDeserializationContext.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)"><B>deserialize(JsonElement, Type)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson">JsonDeserializationContext</A>
-<DD>Invokes default deserialization on the specified object.
-<DT><A HREF="./com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)"><B>deserialize(JsonElement, Type, JsonDeserializationContext)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/JsonDeserializer.html" title="interface in com.google.gson">JsonDeserializer</A>
-<DD>Gson invokes this call-back method during deserialization when it encounters a field of the
- specified type.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#disableHtmlEscaping()"><B>disableHtmlEscaping()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>By default, Gson escapes HTML characters such as &lt; &gt; etc.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#disableInnerClassSerialization()"><B>disableInnerClassSerialization()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to exclude inner classes during serialization.
-</DL>
-<HR>
-<A NAME="_E_"><!-- --></A><H2>
-<B>E</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/GsonBuilder.html#enableComplexMapKeySerialization()"><B>enableComplexMapKeySerialization()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Enabling this feature will only change the serialized form if the map key is
- a complex type (i.e.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#endArray()"><B>endArray()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- end of the current array.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#endArray()"><B>endArray()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Ends encoding the current array.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#endObject()"><B>endObject()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Consumes the next token from the JSON stream and asserts that it is the
- end of the current object.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#endObject()"><B>endObject()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Ends encoding the current object.
-<DT><A HREF="./com/google/gson/JsonObject.html#entrySet()"><B>entrySet()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Returns a set of members of this object.
-<DT><A HREF="./com/google/gson/JsonArray.html#equals(java.lang.Object)"><B>equals(Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonNull.html#equals(java.lang.Object)"><B>equals(Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A>
-<DD>All instances of JsonNull are the same
-<DT><A HREF="./com/google/gson/JsonObject.html#equals(java.lang.Object)"><B>equals(Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#equals(java.lang.Object)"><B>equals(Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#equals(java.lang.Object)"><B>equals(Object)</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/GsonBuilder.html#excludeFieldsWithModifiers(int...)"><B>excludeFieldsWithModifiers(int...)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to excludes all class fields that have the specified modifiers.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#excludeFieldsWithoutExposeAnnotation()"><B>excludeFieldsWithoutExposeAnnotation()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to exclude all fields from consideration for serialization or deserialization
- that do not have the <A HREF="./com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><CODE>Expose</CODE></A> annotation.
-<DT><A HREF="./com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><B>ExclusionStrategy</B></A> - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A strategy (or policy) definition that is used to decide whether or not a field or top-level
- class should be serialized or deserialized as part of the JSON output/input.<DT><A HREF="./com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><B>Expose</B></A> - Annotation Type in <A HREF="./com/google/gson/annotations/package-summary.html">com.google.gson.annotations</A><DD>An annotation that indicates this member should be exposed for JSON
- serialization or deserialization.</DL>
-<HR>
-<A NAME="_F_"><!-- --></A><H2>
-<B>F</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson"><B>FieldAttributes</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A data object that stores attributes of a field.<DT><A HREF="./com/google/gson/FieldAttributes.html#FieldAttributes(java.lang.reflect.Field)"><B>FieldAttributes(Field)</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>Constructs a Field Attributes object from the <code>f</code>.
-<DT><A HREF="./com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><B>FieldNamingPolicy</B></A> - Enum in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>An enumeration that defines a few standard naming conventions for JSON field names.<DT><A HREF="./com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><B>FieldNamingStrategy</B></A> - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A mechanism for providing custom field naming in Gson.<DT><A HREF="./com/google/gson/stream/JsonWriter.html#flush()"><B>flush()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Ensures all buffered data is written to the underlying <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Writer.html?is-external=true" title="class or interface in java.io"><CODE>Writer</CODE></A>
- and flushes that writer.
-<DT><A HREF="./com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.Class)"><B>fromJson(String, Class&lt;T&gt;)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method deserializes the specified Json into an object of the specified class.
-<DT><A HREF="./com/google/gson/Gson.html#fromJson(java.lang.String, java.lang.reflect.Type)"><B>fromJson(String, Type)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method deserializes the specified Json into an object of the specified type.
-<DT><A HREF="./com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.Class)"><B>fromJson(Reader, Class&lt;T&gt;)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method deserializes the Json read from the specified reader into an object of the
- specified class.
-<DT><A HREF="./com/google/gson/Gson.html#fromJson(java.io.Reader, java.lang.reflect.Type)"><B>fromJson(Reader, Type)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method deserializes the Json read from the specified reader into an object of the
- specified type.
-<DT><A HREF="./com/google/gson/Gson.html#fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type)"><B>fromJson(JsonReader, Type)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Reads the next JSON value from <code>reader</code> and convert it to an object
- of type <code>typeOfT</code>.
-<DT><A HREF="./com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.Class)"><B>fromJson(JsonElement, Class&lt;T&gt;)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method deserializes the Json read from the specified parse tree into an object of the
- specified type.
-<DT><A HREF="./com/google/gson/Gson.html#fromJson(com.google.gson.JsonElement, java.lang.reflect.Type)"><B>fromJson(JsonElement, Type)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method deserializes the Json read from the specified parse tree into an object of the
- specified type.
-<DT><A HREF="./com/google/gson/TypeAdapter.html#fromJson(java.io.Reader)"><B>fromJson(Reader)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Converts the JSON document in <code>in</code> to a Java object.
-<DT><A HREF="./com/google/gson/TypeAdapter.html#fromJson(java.lang.String)"><B>fromJson(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Converts the JSON document in <code>json</code> to a Java object.
-<DT><A HREF="./com/google/gson/TypeAdapter.html#fromJsonTree(com.google.gson.JsonElement)"><B>fromJsonTree(JsonElement)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Converts <code>jsonTree</code> to a Java object.
-</DL>
-<HR>
-<A NAME="_G_"><!-- --></A><H2>
-<B>G</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/GsonBuilder.html#generateNonExecutableJson()"><B>generateNonExecutableJson()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Makes the output JSON non-executable in Javascript by prefixing the generated JSON with some
- special text.
-<DT><A HREF="./com/google/gson/JsonArray.html#get(int)"><B>get(int)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Returns the ith element of the array.
-<DT><A HREF="./com/google/gson/JsonObject.html#get(java.lang.String)"><B>get(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Returns the member with the specified name.
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#get(java.lang.reflect.Type)"><B>get(Type)</B></A> - 
-Static method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>Gets type literal for the given <code>Type</code> instance.
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#get(java.lang.Class)"><B>get(Class&lt;T&gt;)</B></A> - 
-Static method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>Gets type literal for the given <code>Class</code> instance.
-<DT><A HREF="./com/google/gson/Gson.html#getAdapter(com.google.gson.reflect.TypeToken)"><B>getAdapter(TypeToken&lt;T&gt;)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Returns the type adapter for <code></code> type.
-<DT><A HREF="./com/google/gson/Gson.html#getAdapter(java.lang.Class)"><B>getAdapter(Class&lt;T&gt;)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Returns the type adapter for <code></code> type.
-<DT><A HREF="./com/google/gson/FieldAttributes.html#getAnnotation(java.lang.Class)"><B>getAnnotation(Class&lt;T&gt;)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>Return the <code>T</code> annotation object from this field if it exist; otherwise returns
- <code>null</code>.
-<DT><A HREF="./com/google/gson/FieldAttributes.html#getAnnotations()"><B>getAnnotations()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>Return the annotations that are present on this field.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsBigDecimal()"><B>getAsBigDecimal()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A> if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsBigDecimal()"><B>getAsBigDecimal()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsBigDecimal()"><B>getAsBigDecimal()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html?is-external=true" title="class or interface in java.math"><CODE>BigDecimal</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsBigInteger()"><B>getAsBigInteger()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A> if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsBigInteger()"><B>getAsBigInteger()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsBigInteger()"><B>getAsBigInteger()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigInteger.html?is-external=true" title="class or interface in java.math"><CODE>BigInteger</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsBoolean()"><B>getAsBoolean()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a boolean if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsBoolean()"><B>getAsBoolean()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a boolean value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsBoolean()"><B>getAsBoolean()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a boolean value.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsByte()"><B>getAsByte()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsByte()"><B>getAsByte()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a primitive byte value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsByte()"><B>getAsByte()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsCharacter()"><B>getAsCharacter()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsCharacter()"><B>getAsCharacter()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a primitive character value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsCharacter()"><B>getAsCharacter()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsDouble()"><B>getAsDouble()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a double if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsDouble()"><B>getAsDouble()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a primitive double value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsDouble()"><B>getAsDouble()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a primitive double.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsFloat()"><B>getAsFloat()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a float if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsFloat()"><B>getAsFloat()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a primitive float value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsFloat()"><B>getAsFloat()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a float.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsInt()"><B>getAsInt()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as an integer if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsInt()"><B>getAsInt()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a primitive integer value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsInt()"><B>getAsInt()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a primitive integer.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsJsonArray()"><B>getAsJsonArray()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a <A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson"><CODE>JsonArray</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonObject.html#getAsJsonArray(java.lang.String)"><B>getAsJsonArray(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to get the specified member as a JsonArray.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsJsonNull()"><B>getAsJsonNull()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a <A HREF="./com/google/gson/JsonNull.html" title="class in com.google.gson"><CODE>JsonNull</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsJsonObject()"><B>getAsJsonObject()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a <A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonObject.html#getAsJsonObject(java.lang.String)"><B>getAsJsonObject(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to get the specified member as a JsonObject.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsJsonPrimitive()"><B>getAsJsonPrimitive()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a <A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><CODE>JsonPrimitive</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonObject.html#getAsJsonPrimitive(java.lang.String)"><B>getAsJsonPrimitive(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to get the specified member as a JsonPrimitive element.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsLong()"><B>getAsLong()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a long if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsLong()"><B>getAsLong()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a primitive long value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsLong()"><B>getAsLong()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a primitive long.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsNumber()"><B>getAsNumber()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A> if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsNumber()"><B>getAsNumber()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsNumber()"><B>getAsNumber()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a Number.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsShort()"><B>getAsShort()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a primitive short if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsShort()"><B>getAsShort()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a primitive short value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsShort()"><B>getAsShort()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a primitive short.
-<DT><A HREF="./com/google/gson/JsonArray.html#getAsString()"><B>getAsString()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>convenience method to get this array as a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang"><CODE>String</CODE></A> if it contains a single element.
-<DT><A HREF="./com/google/gson/JsonElement.html#getAsString()"><B>getAsString()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>convenience method to get this element as a string value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#getAsString()"><B>getAsString()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>convenience method to get this element as a String.
-<DT><A HREF="./com/google/gson/FieldAttributes.html#getDeclaredClass()"><B>getDeclaredClass()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>Returns the <code>Class</code> object that was declared for this field.
-<DT><A HREF="./com/google/gson/FieldAttributes.html#getDeclaredType()"><B>getDeclaredType()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>For example, assume the following class definition:
- <pre class="code">
- public class Foo {
-   private String bar;
-   private List&lt;String&gt; red;
- }
-
- Type listParmeterizedType = new TypeToken&lt;List&lt;String&gt;&gt;() {}.getType();
-<DT><A HREF="./com/google/gson/FieldAttributes.html#getDeclaringClass()"><B>getDeclaringClass()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/Gson.html#getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)"><B>getDelegateAdapter(TypeAdapterFactory, TypeToken&lt;T&gt;)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method is used to get an alternate type adapter for the specified type.
-<DT><A HREF="./com/google/gson/FieldAttributes.html#getName()"><B>getName()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#getPath()"><B>getPath()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns a <a href="http://goessner.net/articles/JsonPath/">JsonPath</a> to
- the current location in the JSON value.
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#getRawType()"><B>getRawType()</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>Returns the raw (non-generic) type for this type.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#getSerializeNulls()"><B>getSerializeNulls()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Returns true if object members are serialized when their value is null.
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#getType()"><B>getType()</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>Gets underlying <code>Type</code> instance.
-<DT><A HREF="./com/google/gson/Gson.html" title="class in com.google.gson"><B>Gson</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>This is the main class for using Gson.<DT><A HREF="./com/google/gson/Gson.html#Gson()"><B>Gson()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Constructs a Gson object with default configuration.
-<DT><A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson"><B>GsonBuilder</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Use this builder to construct a <A HREF="./com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> instance when you need to set configuration
- options other than the default.<DT><A HREF="./com/google/gson/GsonBuilder.html#GsonBuilder()"><B>GsonBuilder()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Creates a GsonBuilder instance that can be used to build Gson with various configuration
- settings.
-</DL>
-<HR>
-<A NAME="_H_"><!-- --></A><H2>
-<B>H</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/JsonObject.html#has(java.lang.String)"><B>has(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Convenience method to check if a member with the specified name is present in this object.
-<DT><A HREF="./com/google/gson/JsonArray.html#hashCode()"><B>hashCode()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonNull.html#hashCode()"><B>hashCode()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A>
-<DD>All instances of JsonNull have the same hash code since they are indistinguishable
-<DT><A HREF="./com/google/gson/JsonObject.html#hashCode()"><B>hashCode()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#hashCode()"><B>hashCode()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#hashCode()"><B>hashCode()</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/FieldAttributes.html#hasModifier(int)"><B>hasModifier(int)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/FieldAttributes.html" title="class in com.google.gson">FieldAttributes</A>
-<DD>Returns <code>true</code> if the field is defined with the <code>modifier</code>.
-<DT><A HREF="./com/google/gson/JsonStreamParser.html#hasNext()"><B>hasNext()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonStreamParser.html" title="class in com.google.gson">JsonStreamParser</A>
-<DD>Returns true if a <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> is available on the input for consumption
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#hasNext()"><B>hasNext()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns true if the current array or object has another element.
-</DL>
-<HR>
-<A NAME="_I_"><!-- --></A><H2>
-<B>I</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/JsonNull.html#INSTANCE"><B>INSTANCE</B></A> - 
-Static variable in class com.google.gson.<A HREF="./com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A>
-<DD>singleton for JsonNull
-<DT><A HREF="./com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><B>InstanceCreator</B></A>&lt;<A HREF="./com/google/gson/InstanceCreator.html" title="type parameter in InstanceCreator">T</A>&gt; - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>This interface is implemented to create instances of a class that does not define a no-args
- constructor.<DT><A HREF="./com/google/gson/reflect/TypeToken.html#isAssignableFrom(java.lang.Class)"><B>isAssignableFrom(Class&lt;?&gt;)</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD><B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#isAssignableFrom(java.lang.reflect.Type)"><B>isAssignableFrom(Type)</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD><B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#isAssignableFrom(com.google.gson.reflect.TypeToken)"><B>isAssignableFrom(TypeToken&lt;?&gt;)</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD><B>Deprecated.</B>&nbsp;<I>this implementation may be inconsistent with javac for types
-     with wildcards.</I>
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#isBoolean()"><B>isBoolean()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>Check whether this primitive contains a boolean value.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#isHtmlSafe()"><B>isHtmlSafe()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Returns true if this writer writes JSON that's safe for inclusion in HTML
- and XML documents.
-<DT><A HREF="./com/google/gson/JsonElement.html#isJsonArray()"><B>isJsonArray()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>provides check for verifying if this element is an array or not.
-<DT><A HREF="./com/google/gson/JsonElement.html#isJsonNull()"><B>isJsonNull()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>provides check for verifying if this element represents a null value or not.
-<DT><A HREF="./com/google/gson/JsonElement.html#isJsonObject()"><B>isJsonObject()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>provides check for verifying if this element is a Json object or not.
-<DT><A HREF="./com/google/gson/JsonElement.html#isJsonPrimitive()"><B>isJsonPrimitive()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>provides check for verifying if this element is a primitive or not.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#isLenient()"><B>isLenient()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns true if this parser is liberal in what it accepts.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#isLenient()"><B>isLenient()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Returns true if this writer has relaxed syntax rules.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#isNumber()"><B>isNumber()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>Check whether this primitive contains a Number.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#isString()"><B>isString()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>Check whether this primitive contains a String value.
-<DT><A HREF="./com/google/gson/JsonArray.html#iterator()"><B>iterator()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Returns an iterator to navigate the elemetns of the array.
-</DL>
-<HR>
-<A NAME="_J_"><!-- --></A><H2>
-<B>J</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><B>JsonAdapter</B></A> - Annotation Type in <A HREF="./com/google/gson/annotations/package-summary.html">com.google.gson.annotations</A><DD>An annotation that indicates the Gson <A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson"><CODE>TypeAdapter</CODE></A> to use with a class
- or field.<DT><A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson"><B>JsonArray</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A class representing an array type in Json.<DT><A HREF="./com/google/gson/JsonArray.html#JsonArray()"><B>JsonArray()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Creates an empty JsonArray.
-<DT><A HREF="./com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><B>JsonDeserializationContext</B></A> - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Context for deserialization that is passed to a custom deserializer during invocation of its
- <A HREF="./com/google/gson/JsonDeserializer.html#deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)"><CODE>JsonDeserializer.deserialize(JsonElement, Type, JsonDeserializationContext)</CODE></A>
- method.<DT><A HREF="./com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><B>JsonDeserializer</B></A>&lt;<A HREF="./com/google/gson/JsonDeserializer.html" title="type parameter in JsonDeserializer">T</A>&gt; - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Interface representing a custom deserializer for Json.<DT><A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><B>JsonElement</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A class representing an element of Json.<DT><A HREF="./com/google/gson/JsonElement.html#JsonElement()"><B>JsonElement()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonIOException.html" title="class in com.google.gson"><B>JsonIOException</B></A> - Exception in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>This exception is raised when Gson was unable to read an input stream
- or write to one.<DT><A HREF="./com/google/gson/JsonIOException.html#JsonIOException(java.lang.String)"><B>JsonIOException(String)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonIOException.html#JsonIOException(java.lang.String, java.lang.Throwable)"><B>JsonIOException(String, Throwable)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonIOException.html#JsonIOException(java.lang.Throwable)"><B>JsonIOException(Throwable)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonIOException.html" title="class in com.google.gson">JsonIOException</A>
-<DD>Creates exception with the specified cause.
-<DT><A HREF="./com/google/gson/JsonNull.html" title="class in com.google.gson"><B>JsonNull</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A class representing a Json <code>null</code> value.<DT><A HREF="./com/google/gson/JsonNull.html#JsonNull()"><B>JsonNull()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonNull.html" title="class in com.google.gson">JsonNull</A>
-<DD><B>Deprecated.</B>&nbsp;
-<DT><A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson"><B>JsonObject</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A class representing an object type in Json.<DT><A HREF="./com/google/gson/JsonObject.html#JsonObject()"><B>JsonObject()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonParseException.html" title="class in com.google.gson"><B>JsonParseException</B></A> - Exception in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>This exception is raised if there is a serious issue that occurs during parsing of a Json
- string.<DT><A HREF="./com/google/gson/JsonParseException.html#JsonParseException(java.lang.String)"><B>JsonParseException(String)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A>
-<DD>Creates exception with the specified message.
-<DT><A HREF="./com/google/gson/JsonParseException.html#JsonParseException(java.lang.String, java.lang.Throwable)"><B>JsonParseException(String, Throwable)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A>
-<DD>Creates exception with the specified message and cause.
-<DT><A HREF="./com/google/gson/JsonParseException.html#JsonParseException(java.lang.Throwable)"><B>JsonParseException(Throwable)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A>
-<DD>Creates exception with the specified cause.
-<DT><A HREF="./com/google/gson/JsonParser.html" title="class in com.google.gson"><B>JsonParser</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A parser to parse Json into a parse tree of <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s<DT><A HREF="./com/google/gson/JsonParser.html#JsonParser()"><B>JsonParser()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonParser.html" title="class in com.google.gson">JsonParser</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><B>JsonPrimitive</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A class representing a Json primitive value.<DT><A HREF="./com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.Boolean)"><B>JsonPrimitive(Boolean)</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>Create a primitive containing a boolean value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.Number)"><B>JsonPrimitive(Number)</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>Create a primitive containing a <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.String)"><B>JsonPrimitive(String)</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>Create a primitive containing a String value.
-<DT><A HREF="./com/google/gson/JsonPrimitive.html#JsonPrimitive(java.lang.Character)"><B>JsonPrimitive(Character)</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonPrimitive.html" title="class in com.google.gson">JsonPrimitive</A>
-<DD>Create a primitive containing a character.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream"><B>JsonReader</B></A> - Class in <A HREF="./com/google/gson/stream/package-summary.html">com.google.gson.stream</A><DD>Reads a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value as a stream of tokens.<DT><A HREF="./com/google/gson/stream/JsonReader.html#JsonReader(java.io.Reader)"><B>JsonReader(Reader)</B></A> - 
-Constructor for class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Creates a new instance that reads a JSON-encoded stream from <code>in</code>.
-<DT><A HREF="./com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><B>JsonSerializationContext</B></A> - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Context for serialization that is passed to a custom serializer during invocation of its
- <A HREF="./com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)"><CODE>JsonSerializer.serialize(Object, Type, JsonSerializationContext)</CODE></A> method.<DT><A HREF="./com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><B>JsonSerializer</B></A>&lt;<A HREF="./com/google/gson/JsonSerializer.html" title="type parameter in JsonSerializer">T</A>&gt; - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Interface representing a custom serializer for Json.<DT><A HREF="./com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><B>JsonStreamParser</B></A> - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>A streaming parser that allows reading of multiple <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s from the specified reader
- asynchronously.<DT><A HREF="./com/google/gson/JsonStreamParser.html#JsonStreamParser(java.lang.String)"><B>JsonStreamParser(String)</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonStreamParser.html" title="class in com.google.gson">JsonStreamParser</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonStreamParser.html#JsonStreamParser(java.io.Reader)"><B>JsonStreamParser(Reader)</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/JsonStreamParser.html" title="class in com.google.gson">JsonStreamParser</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><B>JsonSyntaxException</B></A> - Exception in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>This exception is raised when Gson attempts to read (or write) a malformed
- JSON element.<DT><A HREF="./com/google/gson/JsonSyntaxException.html#JsonSyntaxException(java.lang.String)"><B>JsonSyntaxException(String)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonSyntaxException.html#JsonSyntaxException(java.lang.String, java.lang.Throwable)"><B>JsonSyntaxException(String, Throwable)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonSyntaxException.html#JsonSyntaxException(java.lang.Throwable)"><B>JsonSyntaxException(Throwable)</B></A> - 
-Constructor for exception com.google.gson.<A HREF="./com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">JsonSyntaxException</A>
-<DD>Creates exception with the specified cause.
-<DT><A HREF="./com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><B>JsonToken</B></A> - Enum in <A HREF="./com/google/gson/stream/package-summary.html">com.google.gson.stream</A><DD>A structure, name or value type in a JSON-encoded string.<DT><A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><B>JsonWriter</B></A> - Class in <A HREF="./com/google/gson/stream/package-summary.html">com.google.gson.stream</A><DD>Writes a JSON (<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>)
- encoded value to a stream, one token at a time.<DT><A HREF="./com/google/gson/stream/JsonWriter.html#JsonWriter(java.io.Writer)"><B>JsonWriter(Writer)</B></A> - 
-Constructor for class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Creates a new instance that writes a JSON-encoded stream to <code>out</code>.
-</DL>
-<HR>
-<A NAME="_L_"><!-- --></A><H2>
-<B>L</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><B>LongSerializationPolicy</B></A> - Enum in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Defines the expected format for a <code>long</code> or <code>Long</code> type when its serialized.</DL>
-<HR>
-<A NAME="_M_"><!-- --></A><H2>
-<B>M</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream"><B>MalformedJsonException</B></A> - Exception in <A HREF="./com/google/gson/stream/package-summary.html">com.google.gson.stream</A><DD>Thrown when a reader encounters malformed JSON.<DT><A HREF="./com/google/gson/stream/MalformedJsonException.html#MalformedJsonException(java.lang.String)"><B>MalformedJsonException(String)</B></A> - 
-Constructor for exception com.google.gson.stream.<A HREF="./com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream">MalformedJsonException</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/stream/MalformedJsonException.html#MalformedJsonException(java.lang.String, java.lang.Throwable)"><B>MalformedJsonException(String, Throwable)</B></A> - 
-Constructor for exception com.google.gson.stream.<A HREF="./com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream">MalformedJsonException</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/stream/MalformedJsonException.html#MalformedJsonException(java.lang.Throwable)"><B>MalformedJsonException(Throwable)</B></A> - 
-Constructor for exception com.google.gson.stream.<A HREF="./com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream">MalformedJsonException</A>
-<DD>&nbsp;
-</DL>
-<HR>
-<A NAME="_N_"><!-- --></A><H2>
-<B>N</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#name(java.lang.String)"><B>name(String)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Encodes the property name.
-<DT><A HREF="./com/google/gson/JsonStreamParser.html#next()"><B>next()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonStreamParser.html" title="class in com.google.gson">JsonStreamParser</A>
-<DD>Returns the next available <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A> on the reader.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#nextBoolean()"><B>nextBoolean()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns the <A HREF="./com/google/gson/stream/JsonToken.html#BOOLEAN"><CODE>boolean</CODE></A> value of the next token,
- consuming it.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#nextDouble()"><B>nextDouble()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns the <A HREF="./com/google/gson/stream/JsonToken.html#NUMBER"><CODE>double</CODE></A> value of the next token,
- consuming it.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#nextInt()"><B>nextInt()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns the <A HREF="./com/google/gson/stream/JsonToken.html#NUMBER"><CODE>int</CODE></A> value of the next token,
- consuming it.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#nextLong()"><B>nextLong()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns the <A HREF="./com/google/gson/stream/JsonToken.html#NUMBER"><CODE>long</CODE></A> value of the next token,
- consuming it.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#nextName()"><B>nextName()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns the next token, a <A HREF="./com/google/gson/stream/JsonToken.html#NAME"><CODE>property name</CODE></A>, and
- consumes it.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#nextNull()"><B>nextNull()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Consumes the next token from the JSON stream and asserts that it is a
- literal null.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#nextString()"><B>nextString()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns the <A HREF="./com/google/gson/stream/JsonToken.html#STRING"><CODE>string</CODE></A> value of the next token,
- consuming it.
-<DT><A HREF="./com/google/gson/TypeAdapter.html#nullSafe()"><B>nullSafe()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>This wrapper method is used to make a type adapter null tolerant.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#nullValue()"><B>nullValue()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Encodes <code>null</code>.
-</DL>
-<HR>
-<A NAME="_P_"><!-- --></A><H2>
-<B>P</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/JsonParser.html#parse(java.lang.String)"><B>parse(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonParser.html" title="class in com.google.gson">JsonParser</A>
-<DD>Parses the specified JSON string into a parse tree
-<DT><A HREF="./com/google/gson/JsonParser.html#parse(java.io.Reader)"><B>parse(Reader)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonParser.html" title="class in com.google.gson">JsonParser</A>
-<DD>Parses the specified JSON string into a parse tree
-<DT><A HREF="./com/google/gson/JsonParser.html#parse(com.google.gson.stream.JsonReader)"><B>parse(JsonReader)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonParser.html" title="class in com.google.gson">JsonParser</A>
-<DD>Returns the next value from the JSON stream as a parse tree.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#peek()"><B>peek()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Returns the type of the next token without consuming it.
-</DL>
-<HR>
-<A NAME="_R_"><!-- --></A><H2>
-<B>R</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/TypeAdapter.html#read(com.google.gson.stream.JsonReader)"><B>read(JsonReader)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Reads one JSON value (an array, object, string, number, boolean or null)
- and converts it to a Java object.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)"><B>registerTypeAdapter(Type, Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson for custom serialization or deserialization.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)"><B>registerTypeAdapterFactory(TypeAdapterFactory)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Register a factory for type adapters.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#registerTypeHierarchyAdapter(java.lang.Class, java.lang.Object)"><B>registerTypeHierarchyAdapter(Class&lt;?&gt;, Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson for custom serialization or deserialization for an inheritance type hierarchy.
-<DT><A HREF="./com/google/gson/JsonArray.html#remove(com.google.gson.JsonElement)"><B>remove(JsonElement)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Removes the first occurrence of the specified element from this array, if it is present.
-<DT><A HREF="./com/google/gson/JsonArray.html#remove(int)"><B>remove(int)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Removes the element at the specified position in this array.
-<DT><A HREF="./com/google/gson/JsonObject.html#remove(java.lang.String)"><B>remove(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson">JsonObject</A>
-<DD>Removes the <code>property</code> from this <A HREF="./com/google/gson/JsonObject.html" title="class in com.google.gson"><CODE>JsonObject</CODE></A>.
-<DT><A HREF="./com/google/gson/JsonStreamParser.html#remove()"><B>remove()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonStreamParser.html" title="class in com.google.gson">JsonStreamParser</A>
-<DD>This optional <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util"><CODE>Iterator</CODE></A> method is not relevant for stream parsing and hence is not
- implemented.
-</DL>
-<HR>
-<A NAME="_S_"><!-- --></A><H2>
-<B>S</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/JsonSerializationContext.html#serialize(java.lang.Object)"><B>serialize(Object)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A>
-<DD>Invokes default serialization on the specified object.
-<DT><A HREF="./com/google/gson/JsonSerializationContext.html#serialize(java.lang.Object, java.lang.reflect.Type)"><B>serialize(Object, Type)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson">JsonSerializationContext</A>
-<DD>Invokes default serialization on the specified object passing the specific type information.
-<DT><A HREF="./com/google/gson/JsonSerializer.html#serialize(T, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)"><B>serialize(T, Type, JsonSerializationContext)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/JsonSerializer.html" title="interface in com.google.gson">JsonSerializer</A>
-<DD>Gson invokes this call-back method during serialization when it encounters a field of the
- specified type.
-<DT><A HREF="./com/google/gson/LongSerializationPolicy.html#serialize(java.lang.Long)"><B>serialize(Long)</B></A> - 
-Method in enum com.google.gson.<A HREF="./com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>
-<DD>Serialize this <code>value</code> using this serialization policy.
-<DT><A HREF="./com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><B>SerializedName</B></A> - Annotation Type in <A HREF="./com/google/gson/annotations/package-summary.html">com.google.gson.annotations</A><DD>An annotation that indicates this member should be serialized to JSON with
- the provided name value as its field name.<DT><A HREF="./com/google/gson/GsonBuilder.html#serializeNulls()"><B>serializeNulls()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configure Gson to serialize null fields.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#serializeSpecialFloatingPointValues()"><B>serializeSpecialFloatingPointValues()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Section 2.4 of <a href="http://www.ietf.org/rfc/rfc4627.txt">JSON specification</a> disallows
- special double values (NaN, Infinity, -Infinity).
-<DT><A HREF="./com/google/gson/JsonArray.html#set(int, com.google.gson.JsonElement)"><B>set(int, JsonElement)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Replaces the element at the specified position in this array with the specified element.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setDateFormat(java.lang.String)"><B>setDateFormat(String)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to serialize <code>Date</code> objects according to the pattern provided.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setDateFormat(int)"><B>setDateFormat(int)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to to serialize <code>Date</code> objects according to the style value provided.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setDateFormat(int, int)"><B>setDateFormat(int, int)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to to serialize <code>Date</code> objects according to the style value provided.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setExclusionStrategies(com.google.gson.ExclusionStrategy...)"><B>setExclusionStrategies(ExclusionStrategy...)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to apply a set of exclusion strategies during both serialization and
- deserialization.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)"><B>setFieldNamingPolicy(FieldNamingPolicy)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to apply a specific naming policy to an object's field during serialization
- and deserialization.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)"><B>setFieldNamingStrategy(FieldNamingStrategy)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to apply a specific naming policy strategy to an object's field during
- serialization and deserialization.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#setHtmlSafe(boolean)"><B>setHtmlSafe(boolean)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Configure this writer to emit JSON that's safe for direct inclusion in HTML
- and XML documents.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#setIndent(java.lang.String)"><B>setIndent(String)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Sets the indentation string to be repeated for each level of indentation
- in the encoded document.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#setLenient(boolean)"><B>setLenient(boolean)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Configure this parser to be  be liberal in what it accepts.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#setLenient(boolean)"><B>setLenient(boolean)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Configure this writer to relax its syntax rules.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)"><B>setLongSerializationPolicy(LongSerializationPolicy)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to apply a specific serialization policy for <code>Long</code> and <code>long</code>
- objects.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setPrettyPrinting()"><B>setPrettyPrinting()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to output Json that fits in a page for pretty printing.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#setSerializeNulls(boolean)"><B>setSerializeNulls(boolean)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Sets whether object members are serialized when their value is null.
-<DT><A HREF="./com/google/gson/GsonBuilder.html#setVersion(double)"><B>setVersion(double)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/GsonBuilder.html" title="class in com.google.gson">GsonBuilder</A>
-<DD>Configures Gson to enable versioning support.
-<DT><A HREF="./com/google/gson/ExclusionStrategy.html#shouldSkipClass(java.lang.Class)"><B>shouldSkipClass(Class&lt;?&gt;)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/ExclusionStrategy.html#shouldSkipField(com.google.gson.FieldAttributes)"><B>shouldSkipField(FieldAttributes)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson">ExclusionStrategy</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><B>Since</B></A> - Annotation Type in <A HREF="./com/google/gson/annotations/package-summary.html">com.google.gson.annotations</A><DD>An annotation that indicates the version number since a member or a type has been present.<DT><A HREF="./com/google/gson/JsonArray.html#size()"><B>size()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonArray.html" title="class in com.google.gson">JsonArray</A>
-<DD>Returns the number of elements in the array.
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#skipValue()"><B>skipValue()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>Skips the next value recursively.
-</DL>
-<HR>
-<A NAME="_T_"><!-- --></A><H2>
-<B>T</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/Gson.html#toJson(java.lang.Object)"><B>toJson(Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method serializes the specified object into its equivalent Json representation.
-<DT><A HREF="./com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type)"><B>toJson(Object, Type)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method serializes the specified object, including those of generic types, into its
- equivalent Json representation.
-<DT><A HREF="./com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.Appendable)"><B>toJson(Object, Appendable)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method serializes the specified object into its equivalent Json representation.
-<DT><A HREF="./com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)"><B>toJson(Object, Type, Appendable)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method serializes the specified object, including those of generic types, into its
- equivalent Json representation.
-<DT><A HREF="./com/google/gson/Gson.html#toJson(java.lang.Object, java.lang.reflect.Type, com.google.gson.stream.JsonWriter)"><B>toJson(Object, Type, JsonWriter)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Writes the JSON representation of <code>src</code> of type <code>typeOfSrc</code> to
- <code>writer</code>.
-<DT><A HREF="./com/google/gson/Gson.html#toJson(com.google.gson.JsonElement)"><B>toJson(JsonElement)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Converts a tree of <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s into its equivalent JSON representation.
-<DT><A HREF="./com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, java.lang.Appendable)"><B>toJson(JsonElement, Appendable)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Writes out the equivalent JSON for a tree of <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.
-<DT><A HREF="./com/google/gson/Gson.html#toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)"><B>toJson(JsonElement, JsonWriter)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>Writes the JSON for <code>jsonElement</code> to <code>writer</code>.
-<DT><A HREF="./com/google/gson/TypeAdapter.html#toJson(java.io.Writer, T)"><B>toJson(Writer, T)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Converts <code>value</code> to a JSON document and writes it to <code>out</code>.
-<DT><A HREF="./com/google/gson/TypeAdapter.html#toJson(T)"><B>toJson(T)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Converts <code>value</code> to a JSON document.
-<DT><A HREF="./com/google/gson/Gson.html#toJsonTree(java.lang.Object)"><B>toJsonTree(Object)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method serializes the specified object into its equivalent representation as a tree of
- <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.
-<DT><A HREF="./com/google/gson/Gson.html#toJsonTree(java.lang.Object, java.lang.reflect.Type)"><B>toJsonTree(Object, Type)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>This method serializes the specified object, including those of generic types, into its
- equivalent representation as a tree of <A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson"><CODE>JsonElement</CODE></A>s.
-<DT><A HREF="./com/google/gson/TypeAdapter.html#toJsonTree(T)"><B>toJsonTree(T)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Converts <code>value</code> to a JSON tree.
-<DT><A HREF="./com/google/gson/Gson.html#toString()"><B>toString()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/Gson.html" title="class in com.google.gson">Gson</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/JsonElement.html#toString()"><B>toString()</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/JsonElement.html" title="class in com.google.gson">JsonElement</A>
-<DD>Returns a String representation of this element.
-<DT><A HREF="./com/google/gson/reflect/TypeToken.html#toString()"><B>toString()</B></A> - 
-Method in class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/stream/JsonReader.html#toString()"><B>toString()</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream">JsonReader</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/FieldNamingStrategy.html#translateName(java.lang.reflect.Field)"><B>translateName(Field)</B></A> - 
-Method in interface com.google.gson.<A HREF="./com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>
-<DD>Translates the field name into its JSON field name representation.
-<DT><A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson"><B>TypeAdapter</B></A>&lt;<A HREF="./com/google/gson/TypeAdapter.html" title="type parameter in TypeAdapter">T</A>&gt; - Class in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Converts Java objects to and from JSON.<DT><A HREF="./com/google/gson/TypeAdapter.html#TypeAdapter()"><B>TypeAdapter()</B></A> - 
-Constructor for class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>&nbsp;
-<DT><A HREF="./com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><B>TypeAdapterFactory</B></A> - Interface in <A HREF="./com/google/gson/package-summary.html">com.google.gson</A><DD>Creates type adapters for set of related types.<DT><A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><B>TypeToken</B></A>&lt;<A HREF="./com/google/gson/reflect/TypeToken.html" title="type parameter in TypeToken">T</A>&gt; - Class in <A HREF="./com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A><DD>Represents a generic type <code>T</code>.<DT><A HREF="./com/google/gson/reflect/TypeToken.html#TypeToken()"><B>TypeToken()</B></A> - 
-Constructor for class com.google.gson.reflect.<A HREF="./com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect">TypeToken</A>
-<DD>Constructs a new type literal.
-</DL>
-<HR>
-<A NAME="_U_"><!-- --></A><H2>
-<B>U</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations"><B>Until</B></A> - Annotation Type in <A HREF="./com/google/gson/annotations/package-summary.html">com.google.gson.annotations</A><DD>An annotation that indicates the version number until a member or a type should be present.</DL>
-<HR>
-<A NAME="_V_"><!-- --></A><H2>
-<B>V</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#value(java.lang.String)"><B>value(String)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Encodes <code>value</code>.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#value(boolean)"><B>value(boolean)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Encodes <code>value</code>.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#value(double)"><B>value(double)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Encodes <code>value</code>.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#value(long)"><B>value(long)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Encodes <code>value</code>.
-<DT><A HREF="./com/google/gson/stream/JsonWriter.html#value(java.lang.Number)"><B>value(Number)</B></A> - 
-Method in class com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream">JsonWriter</A>
-<DD>Encodes <code>value</code>.
-<DT><A HREF="./com/google/gson/FieldNamingPolicy.html#valueOf(java.lang.String)"><B>valueOf(String)</B></A> - 
-Static method in enum com.google.gson.<A HREF="./com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>
-<DD>Returns the enum constant of this type with the specified name.
-<DT><A HREF="./com/google/gson/LongSerializationPolicy.html#valueOf(java.lang.String)"><B>valueOf(String)</B></A> - 
-Static method in enum com.google.gson.<A HREF="./com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>
-<DD>Returns the enum constant of this type with the specified name.
-<DT><A HREF="./com/google/gson/stream/JsonToken.html#valueOf(java.lang.String)"><B>valueOf(String)</B></A> - 
-Static method in enum com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>
-<DD>Returns the enum constant of this type with the specified name.
-<DT><A HREF="./com/google/gson/FieldNamingPolicy.html#values()"><B>values()</B></A> - 
-Static method in enum com.google.gson.<A HREF="./com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson">FieldNamingPolicy</A>
-<DD>Returns an array containing the constants of this enum type, in
-the order they are declared.
-<DT><A HREF="./com/google/gson/LongSerializationPolicy.html#values()"><B>values()</B></A> - 
-Static method in enum com.google.gson.<A HREF="./com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson">LongSerializationPolicy</A>
-<DD>Returns an array containing the constants of this enum type, in
-the order they are declared.
-<DT><A HREF="./com/google/gson/stream/JsonToken.html#values()"><B>values()</B></A> - 
-Static method in enum com.google.gson.stream.<A HREF="./com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream">JsonToken</A>
-<DD>Returns an array containing the constants of this enum type, in
-the order they are declared.
-</DL>
-<HR>
-<A NAME="_W_"><!-- --></A><H2>
-<B>W</B></H2>
-<DL>
-<DT><A HREF="./com/google/gson/TypeAdapter.html#write(com.google.gson.stream.JsonWriter, T)"><B>write(JsonWriter, T)</B></A> - 
-Method in class com.google.gson.<A HREF="./com/google/gson/TypeAdapter.html" title="class in com.google.gson">TypeAdapter</A>
-<DD>Writes one JSON value (an array, object, string, number, boolean or null)
- for <code>value</code>.
-</DL>
-<HR>
-<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_H_">H</A> <A HREF="#_I_">I</A> <A HREF="#_J_">J</A> <A HREF="#_L_">L</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_P_">P</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_W_">W</A> 
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="./index.html?index-all.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="./allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="./allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/index.html b/gson/docs/javadocs/index.html
deleted file mode 100644
index 9be2372ee..000000000
--- a/gson/docs/javadocs/index.html
+++ /dev/null
@@ -1,74 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc on Thu Nov 20 01:11:55 PST 2014-->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Gson 2.3.1 API
-</TITLE>
-<SCRIPT type="text/javascript">
-    targetPage = "" + window.location.search;
-    if (targetPage != "" && targetPage != "undefined")
-        targetPage = targetPage.substring(1);
-    if (targetPage.indexOf(":") != -1 || (targetPage != "" && !validURL(targetPage)))
-        targetPage = "undefined";
-    function validURL(url) {
-        var pos = url.indexOf(".html");
-        if (pos == -1 || pos != url.length - 5)
-            return false;
-        var allowNumber = false;
-        var allowSep = false;
-        var seenDot = false;
-        for (var i = 0; i < url.length - 5; i++) {
-            var ch = url.charAt(i);
-            if ('a' <= ch && ch <= 'z' ||
-                    'A' <= ch && ch <= 'Z' ||
-                    ch == '$' ||
-                    ch == '_') {
-                allowNumber = true;
-                allowSep = true;
-            } else if ('0' <= ch && ch <= '9'
-                    || ch == '-') {
-                if (!allowNumber)
-                     return false;
-            } else if (ch == '/' || ch == '.') {
-                if (!allowSep)
-                    return false;
-                allowNumber = false;
-                allowSep = false;
-                if (ch == '.')
-                     seenDot = true;
-                if (ch == '/' && seenDot)
-                     return false;
-            } else {
-                return false;
-            }
-        }
-        return true;
-    }
-    function loadFrames() {
-        if (targetPage != "" && targetPage != "undefined")
-             top.classFrame.location = top.targetPage;
-    }
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-</HEAD>
-<FRAMESET cols="20%,80%" title="" onLoad="top.loadFrames()">
-<FRAMESET rows="30%,70%" title="" onLoad="top.loadFrames()">
-<FRAME src="overview-frame.html" name="packageListFrame" title="All Packages">
-<FRAME src="allclasses-frame.html" name="packageFrame" title="All classes and interfaces (except non-static nested types)">
-</FRAMESET>
-<FRAME src="overview-summary.html" name="classFrame" title="Package, class and interface descriptions" scrolling="yes">
-<NOFRAMES>
-<H2>
-Frame Alert</H2>
-
-<P>
-This document is designed to be viewed using the frames feature. If you see this message, you are using a non-frame-capable web client.
-<BR>
-Link to<A HREF="overview-summary.html">Non-frame version.</A>
-</NOFRAMES>
-</FRAMESET>
-</HTML>
diff --git a/gson/docs/javadocs/overview-frame.html b/gson/docs/javadocs/overview-frame.html
deleted file mode 100644
index 33a3118e9..000000000
--- a/gson/docs/javadocs/overview-frame.html
+++ /dev/null
@@ -1,49 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Overview List (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-
-</HEAD>
-
-<BODY BGCOLOR="white">
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TH ALIGN="left" NOWRAP><FONT size="+1" CLASS="FrameTitleFont">
-<B></B></FONT></TH>
-</TR>
-</TABLE>
-
-<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
-<TR>
-<TD NOWRAP><FONT CLASS="FrameItemFont"><A HREF="allclasses-frame.html" target="packageFrame">All Classes</A></FONT>
-<P>
-<FONT size="+1" CLASS="FrameHeadingFont">
-Packages</FONT>
-<BR>
-<FONT CLASS="FrameItemFont"><A HREF="com/google/gson/package-frame.html" target="packageFrame">com.google.gson</A></FONT>
-<BR>
-<FONT CLASS="FrameItemFont"><A HREF="com/google/gson/annotations/package-frame.html" target="packageFrame">com.google.gson.annotations</A></FONT>
-<BR>
-<FONT CLASS="FrameItemFont"><A HREF="com/google/gson/reflect/package-frame.html" target="packageFrame">com.google.gson.reflect</A></FONT>
-<BR>
-<FONT CLASS="FrameItemFont"><A HREF="com/google/gson/stream/package-frame.html" target="packageFrame">com.google.gson.stream</A></FONT>
-<BR>
-</TD>
-</TR>
-</TABLE>
-
-<P>
-&nbsp;
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/overview-summary.html b/gson/docs/javadocs/overview-summary.html
deleted file mode 100644
index 6efe68d0a..000000000
--- a/gson/docs/javadocs/overview-summary.html
+++ /dev/null
@@ -1,170 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Overview (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Overview (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Overview</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?overview-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="overview-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H1>
-Gson 2.3.1 API
-</H1>
-</CENTER>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Packages</B></FONT></TH>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="20%"><B><A HREF="com/google/gson/package-summary.html">com.google.gson</A></B></TD>
-<TD>This package provides the <A HREF="com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A> class to convert Json to Java and
- vice-versa.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="20%"><B><A HREF="com/google/gson/annotations/package-summary.html">com.google.gson.annotations</A></B></TD>
-<TD>This package provides annotations that can be used with <A HREF="com/google/gson/Gson.html" title="class in com.google.gson"><CODE>Gson</CODE></A>.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="20%"><B><A HREF="com/google/gson/reflect/package-summary.html">com.google.gson.reflect</A></B></TD>
-<TD>This package provides utility classes for finding type information for generic types.</TD>
-</TR>
-<TR BGCOLOR="white" CLASS="TableRowColor">
-<TD WIDTH="20%"><B><A HREF="com/google/gson/stream/package-summary.html">com.google.gson.stream</A></B></TD>
-<TD>&nbsp;</TD>
-</TR>
-</TABLE>
-
-<P>
-&nbsp;<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Overview</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?overview-summary.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="overview-summary.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/overview-tree.html b/gson/docs/javadocs/overview-tree.html
deleted file mode 100644
index b3dfac95f..000000000
--- a/gson/docs/javadocs/overview-tree.html
+++ /dev/null
@@ -1,196 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Class Hierarchy (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Class Hierarchy (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?overview-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="overview-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H2>
-Hierarchy For All Packages</H2>
-</CENTER>
-<DL>
-<DT><B>Package Hierarchies:</B><DD><A HREF="com/google/gson/package-tree.html">com.google.gson</A>, <A HREF="com/google/gson/annotations/package-tree.html">com.google.gson.annotations</A>, <A HREF="com/google/gson/reflect/package-tree.html">com.google.gson.reflect</A>, <A HREF="com/google/gson/stream/package-tree.html">com.google.gson.stream</A></DL>
-<HR>
-<H2>
-Class Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><B>Object</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/FieldAttributes.html" title="class in com.google.gson"><B>FieldAttributes</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/Gson.html" title="class in com.google.gson"><B>Gson</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/GsonBuilder.html" title="class in com.google.gson"><B>GsonBuilder</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonElement.html" title="class in com.google.gson"><B>JsonElement</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonArray.html" title="class in com.google.gson"><B>JsonArray</B></A> (implements java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;T&gt;)
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonNull.html" title="class in com.google.gson"><B>JsonNull</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonObject.html" title="class in com.google.gson"><B>JsonObject</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonPrimitive.html" title="class in com.google.gson"><B>JsonPrimitive</B></A></UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonParser.html" title="class in com.google.gson"><B>JsonParser</B></A><LI TYPE="circle">com.google.gson.stream.<A HREF="com/google/gson/stream/JsonReader.html" title="class in com.google.gson.stream"><B>JsonReader</B></A> (implements java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A>)
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonStreamParser.html" title="class in com.google.gson"><B>JsonStreamParser</B></A> (implements java.util.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</A>&lt;E&gt;)
-<LI TYPE="circle">com.google.gson.stream.<A HREF="com/google/gson/stream/JsonWriter.html" title="class in com.google.gson.stream"><B>JsonWriter</B></A> (implements java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Closeable.html?is-external=true" title="class or interface in java.io">Closeable</A>, java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Flushable.html?is-external=true" title="class or interface in java.io">Flushable</A>)
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang"><B>Throwable</B></A> (implements java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>)
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang"><B>Exception</B></A><UL>
-<LI TYPE="circle">java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io"><B>IOException</B></A><UL>
-<LI TYPE="circle">com.google.gson.stream.<A HREF="com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream"><B>MalformedJsonException</B></A></UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang"><B>RuntimeException</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonParseException.html" title="class in com.google.gson"><B>JsonParseException</B></A><UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonIOException.html" title="class in com.google.gson"><B>JsonIOException</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonSyntaxException.html" title="class in com.google.gson"><B>JsonSyntaxException</B></A></UL>
-</UL>
-</UL>
-</UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/TypeAdapter.html" title="class in com.google.gson"><B>TypeAdapter</B></A>&lt;T&gt;<LI TYPE="circle">com.google.gson.reflect.<A HREF="com/google/gson/reflect/TypeToken.html" title="class in com.google.gson.reflect"><B>TypeToken</B></A>&lt;T&gt;</UL>
-</UL>
-<H2>
-Interface Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/ExclusionStrategy.html" title="interface in com.google.gson"><B>ExclusionStrategy</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson"><B>FieldNamingStrategy</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/InstanceCreator.html" title="interface in com.google.gson"><B>InstanceCreator</B></A>&lt;T&gt;<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonDeserializationContext.html" title="interface in com.google.gson"><B>JsonDeserializationContext</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonDeserializer.html" title="interface in com.google.gson"><B>JsonDeserializer</B></A>&lt;T&gt;<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonSerializationContext.html" title="interface in com.google.gson"><B>JsonSerializationContext</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/JsonSerializer.html" title="interface in com.google.gson"><B>JsonSerializer</B></A>&lt;T&gt;<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/TypeAdapterFactory.html" title="interface in com.google.gson"><B>TypeAdapterFactory</B></A></UL>
-<H2>
-Annotation Type Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="com/google/gson/annotations/Until.html" title="annotation in com.google.gson.annotations"><B>Until</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="com/google/gson/annotations/Since.html" title="annotation in com.google.gson.annotations"><B>Since</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="com/google/gson/annotations/SerializedName.html" title="annotation in com.google.gson.annotations"><B>SerializedName</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="com/google/gson/annotations/JsonAdapter.html" title="annotation in com.google.gson.annotations"><B>JsonAdapter</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-<LI TYPE="circle">com.google.gson.annotations.<A HREF="com/google/gson/annotations/Expose.html" title="annotation in com.google.gson.annotations"><B>Expose</B></A> (implements java.lang.annotation.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>)
-</UL>
-<H2>
-Enum Hierarchy
-</H2>
-<UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><B>Object</B></A><UL>
-<LI TYPE="circle">java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Enum.html?is-external=true" title="class or interface in java.lang"><B>Enum</B></A>&lt;E&gt; (implements java.lang.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</A>&lt;T&gt;, java.io.<A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>)
-<UL>
-<LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/LongSerializationPolicy.html" title="enum in com.google.gson"><B>LongSerializationPolicy</B></A><LI TYPE="circle">com.google.gson.<A HREF="com/google/gson/FieldNamingPolicy.html" title="enum in com.google.gson"><B>FieldNamingPolicy</B></A> (implements com.google.gson.<A HREF="com/google/gson/FieldNamingStrategy.html" title="interface in com.google.gson">FieldNamingStrategy</A>)
-<LI TYPE="circle">com.google.gson.stream.<A HREF="com/google/gson/stream/JsonToken.html" title="enum in com.google.gson.stream"><B>JsonToken</B></A></UL>
-</UL>
-</UL>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Tree</B></FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?overview-tree.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="overview-tree.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/package-list b/gson/docs/javadocs/package-list
deleted file mode 100644
index cdd3c1daa..000000000
--- a/gson/docs/javadocs/package-list
+++ /dev/null
@@ -1,4 +0,0 @@
-com.google.gson
-com.google.gson.annotations
-com.google.gson.reflect
-com.google.gson.stream
diff --git a/gson/docs/javadocs/resources/inherit.gif b/gson/docs/javadocs/resources/inherit.gif
deleted file mode 100644
index c814867a1..000000000
Binary files a/gson/docs/javadocs/resources/inherit.gif and /dev/null differ
diff --git a/gson/docs/javadocs/script.js b/gson/docs/javadocs/script.js
deleted file mode 100644
index b34635693..000000000
--- a/gson/docs/javadocs/script.js
+++ /dev/null
@@ -1,30 +0,0 @@
-function show(type)
-{
-    count = 0;
-    for (var key in methods) {
-        var row = document.getElementById(key);
-        if ((methods[key] &  type) != 0) {
-            row.style.display = '';
-            row.className = (count++ % 2) ? rowColor : altColor;
-        }
-        else
-            row.style.display = 'none';
-    }
-    updateTabs(type);
-}
-
-function updateTabs(type)
-{
-    for (var value in tabs) {
-        var sNode = document.getElementById(tabs[value][0]);
-        var spanNode = sNode.firstChild;
-        if (value == type) {
-            sNode.className = activeTableTab;
-            spanNode.innerHTML = tabs[value][1];
-        }
-        else {
-            sNode.className = tableTab;
-            spanNode.innerHTML = "<a href=\"javascript:show("+ value + ");\">" + tabs[value][1] + "</a>";
-        }
-    }
-}
diff --git a/gson/docs/javadocs/serialized-form.html b/gson/docs/javadocs/serialized-form.html
deleted file mode 100644
index bcec40944..000000000
--- a/gson/docs/javadocs/serialized-form.html
+++ /dev/null
@@ -1,217 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--NewPage-->
-<HTML>
-<HEAD>
-<!-- Generated by javadoc (build 1.6.0_65) on Thu Nov 20 01:11:55 PST 2014 -->
-<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
-<TITLE>
-Serialized Form (Gson 2.3.1 API)
-</TITLE>
-
-<META NAME="date" CONTENT="2014-11-20">
-
-<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
-
-<SCRIPT type="text/javascript">
-function windowTitle()
-{
-    if (location.href.indexOf('is-external=true') == -1) {
-        parent.document.title="Serialized Form (Gson 2.3.1 API)";
-    }
-}
-</SCRIPT>
-<NOSCRIPT>
-</NOSCRIPT>
-
-</HEAD>
-
-<BODY BGCOLOR="white" onload="windowTitle();">
-<HR>
-
-
-<!-- ========= START OF TOP NAVBAR ======= -->
-<A NAME="navbar_top"><!-- --></A>
-<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_top_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?serialized-form.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="serialized-form.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_top"></A>
-<!-- ========= END OF TOP NAVBAR ========= -->
-
-<HR>
-<CENTER>
-<H1>
-Serialized Form</H1>
-</CENTER>
-<HR SIZE="4" NOSHADE>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="center"><FONT SIZE="+2">
-<B>Package</B> <B>com.google.gson</B></FONT></TH>
-</TR>
-</TABLE>
-
-<P>
-<A NAME="com.google.gson.JsonIOException"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Class <A HREF="com/google/gson/JsonIOException.html" title="class in com.google.gson">com.google.gson.JsonIOException</A> extends <A HREF="com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A> implements Serializable</B></FONT></TH>
-</TR>
-</TABLE>
-
-<P>
-<B>serialVersionUID:&nbsp;</B>1L
-
-<P>
-
-<P>
-<A NAME="com.google.gson.JsonParseException"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Class <A HREF="com/google/gson/JsonParseException.html" title="class in com.google.gson">com.google.gson.JsonParseException</A> extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang">RuntimeException</A> implements Serializable</B></FONT></TH>
-</TR>
-</TABLE>
-
-<P>
-<B>serialVersionUID:&nbsp;</B>-4086729973971783390L
-
-<P>
-
-<P>
-<A NAME="com.google.gson.JsonSyntaxException"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Class <A HREF="com/google/gson/JsonSyntaxException.html" title="class in com.google.gson">com.google.gson.JsonSyntaxException</A> extends <A HREF="com/google/gson/JsonParseException.html" title="class in com.google.gson">JsonParseException</A> implements Serializable</B></FONT></TH>
-</TR>
-</TABLE>
-
-<P>
-<B>serialVersionUID:&nbsp;</B>1L
-
-<P>
-<HR SIZE="4" NOSHADE>
-
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="center"><FONT SIZE="+2">
-<B>Package</B> <B>com.google.gson.stream</B></FONT></TH>
-</TR>
-</TABLE>
-
-<P>
-<A NAME="com.google.gson.stream.MalformedJsonException"><!-- --></A>
-<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
-<TR BGCOLOR="#CCCCFF" CLASS="TableSubHeadingColor">
-<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
-<B>Class <A HREF="com/google/gson/stream/MalformedJsonException.html" title="class in com.google.gson.stream">com.google.gson.stream.MalformedJsonException</A> extends <A HREF="http://docs.oracle.com/javase/1.5.0/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A> implements Serializable</B></FONT></TH>
-</TR>
-</TABLE>
-
-<P>
-<B>serialVersionUID:&nbsp;</B>1L
-
-<P>
-
-<P>
-<HR>
-
-
-<!-- ======= START OF BOTTOM NAVBAR ====== -->
-<A NAME="navbar_bottom"><!-- --></A>
-<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
-<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
-<TR>
-<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
-<A NAME="navbar_bottom_firstrow"><!-- --></A>
-<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
-  <TR ALIGN="center" VALIGN="top">
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
-  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
-  </TR>
-</TABLE>
-</TD>
-<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
-</EM>
-</TD>
-</TR>
-
-<TR>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-&nbsp;PREV&nbsp;
-&nbsp;NEXT</FONT></TD>
-<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
-  <A HREF="index.html?serialized-form.html" target="_top"><B>FRAMES</B></A>  &nbsp;
-&nbsp;<A HREF="serialized-form.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
-&nbsp;<SCRIPT type="text/javascript">
-  <!--
-  if(window==top) {
-    document.writeln('<A HREF="allclasses-noframe.html"><B>All Classes</B></A>');
-  }
-  //-->
-</SCRIPT>
-<NOSCRIPT>
-  <A HREF="allclasses-noframe.html"><B>All Classes</B></A>
-</NOSCRIPT>
-
-
-</FONT></TD>
-</TR>
-</TABLE>
-<A NAME="skip-navbar_bottom"></A>
-<!-- ======== END OF BOTTOM NAVBAR ======= -->
-
-<HR>
-Copyright &#169; 2008&#x2013;2014 <a href="http://www.google.com">Google, Inc.</a>. All rights reserved.
-</BODY>
-</HTML>
diff --git a/gson/docs/javadocs/stylesheet.css b/gson/docs/javadocs/stylesheet.css
deleted file mode 100644
index 6ea9e5161..000000000
--- a/gson/docs/javadocs/stylesheet.css
+++ /dev/null
@@ -1,29 +0,0 @@
-/* Javadoc style sheet */
-
-/* Define colors, fonts and other style attributes here to override the defaults */
-
-/* Page background color */
-body { background-color: #FFFFFF; color:#000000 }
-
-/* Headings */
-h1 { font-size: 145% }
-
-/* Table colors */
-.TableHeadingColor     { background: #CCCCFF; color:#000000 } /* Dark mauve */
-.TableSubHeadingColor  { background: #EEEEFF; color:#000000 } /* Light mauve */
-.TableRowColor         { background: #FFFFFF; color:#000000 } /* White */
-
-/* Font used in left-hand frame lists */
-.FrameTitleFont   { font-size: 100%; font-family: Helvetica, Arial, sans-serif; color:#000000 }
-.FrameHeadingFont { font-size:  90%; font-family: Helvetica, Arial, sans-serif; color:#000000 }
-.FrameItemFont    { font-size:  90%; font-family: Helvetica, Arial, sans-serif; color:#000000 }
-
-/* Navigation bar fonts and colors */
-.NavBarCell1    { background-color:#EEEEFF; color:#000000} /* Light mauve */
-.NavBarCell1Rev { background-color:#00008B; color:#FFFFFF} /* Dark Blue */
-.NavBarFont1    { font-family: Arial, Helvetica, sans-serif; color:#000000;color:#000000;}
-.NavBarFont1Rev { font-family: Arial, Helvetica, sans-serif; color:#FFFFFF;color:#FFFFFF;}
-
-.NavBarCell2    { font-family: Arial, Helvetica, sans-serif; background-color:#FFFFFF; color:#000000}
-.NavBarCell3    { font-family: Arial, Helvetica, sans-serif; background-color:#FFFFFF; color:#000000}
-
diff --git a/gson/pom.xml b/gson/pom.xml
deleted file mode 100644
index 4e876832f..000000000
--- a/gson/pom.xml
+++ /dev/null
@@ -1,54 +0,0 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-
-  <parent>
-    <groupId>com.github.gv2011</groupId>
-    <artifactId>parent</artifactId>
-    <version>0.4.1-SNAPSHOT</version>
-  </parent>
-
-  <artifactId>gson</artifactId>
-  <version>2.6.3-SNAPSHOT</version>
-  <name>Gson</name>
-
-  <dependencies>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <scope>test</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.hamcrest</groupId>
-      <artifactId>hamcrest</artifactId>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-
-<!--   <build> -->
-<!--     <plugins> -->
-<!--       <plugin> -->
-<!--         <groupId>org.apache.maven.plugins</groupId> -->
-<!--         <artifactId>maven-javadoc-plugin</artifactId> -->
-<!--         <configuration> -->
-<!--           <includePackageNames>com.google.gson</includePackageNames> -->
-<!--           <excludePackageNames>com.google.gson.internal:com.google.gson.internal.bind</excludePackageNames> -->
-<!--           <links> -->
-<!--             <link>http://docs.oracle.com/javase/6/docs/api/</link> -->
-<!--           </links> -->
-<!--         </configuration> -->
-<!--       </plugin> -->
-<!--       <plugin> -->
-<!--         <groupId>biz.aQute.bnd</groupId> -->
-<!--         <artifactId>bnd-maven-plugin</artifactId> -->
-<!--         <version>3.1.0</version> -->
-<!--         <executions> -->
-<!--           <execution> -->
-<!--             <goals> -->
-<!--               <goal>bnd-process</goal> -->
-<!--             </goals> -->
-<!--           </execution> -->
-<!--         </executions> -->
-<!--       </plugin> -->
-<!--     </plugins> -->
-<!--   </build> -->
-</project>
diff --git a/lib/gson-cleanup-styles.xml b/lib/gson-cleanup-styles.xml
deleted file mode 100644
index 9e20cb96f..000000000
--- a/lib/gson-cleanup-styles.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<profiles version="2">
-<profile kind="CleanUpProfile" name="Gson" version="2">
-<setting id="cleanup.add_missing_nls_tags" value="false"/>
-<setting id="cleanup.format_source_code" value="false"/>
-<setting id="cleanup.add_missing_override_annotations" value="true"/>
-<setting id="cleanup.qualify_static_method_accesses_with_declaring_class" value="false"/>
-<setting id="cleanup.remove_unused_private_types" value="true"/>
-<setting id="cleanup.remove_unused_private_fields" value="true"/>
-<setting id="cleanup.always_use_parentheses_in_expressions" value="false"/>
-<setting id="cleanup.never_use_blocks" value="false"/>
-<setting id="cleanup.make_local_variable_final" value="true"/>
-<setting id="cleanup.add_missing_deprecated_annotations" value="true"/>
-<setting id="cleanup.remove_unused_private_methods" value="true"/>
-<setting id="cleanup.convert_to_enhanced_for_loop" value="true"/>
-<setting id="cleanup.remove_unnecessary_nls_tags" value="true"/>
-<setting id="cleanup.remove_unused_imports" value="true"/>
-<setting id="cleanup.remove_trailing_whitespaces_ignore_empty" value="false"/>
-<setting id="cleanup.make_private_fields_final" value="true"/>
-<setting id="cleanup.sort_members" value="false"/>
-<setting id="cleanup.add_generated_serial_version_id" value="false"/>
-<setting id="cleanup.remove_unused_local_variables" value="true"/>
-<setting id="cleanup.organize_imports" value="false"/>
-<setting id="cleanup.remove_unused_private_members" value="false"/>
-<setting id="cleanup.remove_trailing_whitespaces" value="true"/>
-<setting id="cleanup.never_use_parentheses_in_expressions" value="true"/>
-<setting id="cleanup.sort_members_all" value="false"/>
-<setting id="cleanup.remove_unnecessary_casts" value="true"/>
-<setting id="cleanup.make_parameters_final" value="false"/>
-<setting id="cleanup.use_blocks_only_for_return_and_throw" value="false"/>
-<setting id="cleanup.use_this_for_non_static_field_access" value="false"/>
-<setting id="cleanup.remove_private_constructors" value="true"/>
-<setting id="cleanup.use_blocks" value="false"/>
-<setting id="cleanup.add_missing_annotations" value="true"/>
-<setting id="cleanup.always_use_this_for_non_static_method_access" value="false"/>
-<setting id="cleanup.use_parentheses_in_expressions" value="false"/>
-<setting id="cleanup.remove_trailing_whitespaces_all" value="true"/>
-<setting id="cleanup.always_use_this_for_non_static_field_access" value="false"/>
-<setting id="cleanup.use_this_for_non_static_field_access_only_if_necessary" value="true"/>
-<setting id="cleanup.qualify_static_field_accesses_with_declaring_class" value="false"/>
-<setting id="cleanup.add_default_serial_version_id" value="true"/>
-<setting id="cleanup.use_this_for_non_static_method_access_only_if_necessary" value="true"/>
-<setting id="cleanup.use_this_for_non_static_method_access" value="false"/>
-<setting id="cleanup.qualify_static_member_accesses_through_instances_with_declaring_class" value="true"/>
-<setting id="cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class" value="true"/>
-<setting id="cleanup.add_serial_version_id" value="false"/>
-<setting id="cleanup.make_variable_declarations_final" value="false"/>
-<setting id="cleanup.always_use_blocks" value="true"/>
-<setting id="cleanup.qualify_static_member_accesses_with_declaring_class" value="true"/>
-</profile>
-</profiles>
diff --git a/lib/gson-formatting-styles.xml b/lib/gson-formatting-styles.xml
deleted file mode 100644
index 177e9997d..000000000
--- a/lib/gson-formatting-styles.xml
+++ /dev/null
@@ -1,267 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<profiles version="11">
-<profile kind="CodeFormatterProfile" name="Gson" version="11">
-<setting id="org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_before_field" value="0"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_ellipsis" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_multiple_fields" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_conditional_expression" value="80"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_binary_operator" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_array_initializer" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_after_package" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.continuation_indentation" value="2"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_binary_operator" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_before_package" value="0"/>
-<setting id="org.eclipse.jdt.core.compiler.source" value="1.5"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.format_line_comments" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_before_member_type" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.align_type_members_on_columns" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_unary_operator" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.indent_parameter_description" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.lineSplit" value="100"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration" value="0"/>
-<setting id="org.eclipse.jdt.core.formatter.indentation.size" value="4"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_assignment" value="16"/>
-<setting id="org.eclipse.jdt.core.compiler.problem.assertIdentifier" value="error"/>
-<setting id="org.eclipse.jdt.core.formatter.tabulation.char" value="space"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_statements_compare_to_body" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_before_method" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_switch" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.compiler.problem.enumIdentifier" value="error"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_ellipsis" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_block" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_method_declaration" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.compact_else_if" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_enum_constant" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.indent_root_tags" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.tabulation.size" value="2"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_empty_lines" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_block_in_case" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression" value="16"/>
-<setting id="org.eclipse.jdt.core.compiler.compliance" value="1.5"/>
-<setting id="org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer" value="2"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_unary_operator" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_binary_expression" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode" value="enabled"/>
-<setting id="org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.format_javadoc_comments" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.line_length" value="80"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_between_import_groups" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_semicolon" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body" value="0"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.wrap_before_binary_operator" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_statements_compare_to_block" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_compact_if" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_before_imports" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.format_html" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.format_source_code" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration" value="16"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer" value="insert"/>
-<setting id="org.eclipse.jdt.core.compiler.codegen.targetPlatform" value="1.5"/>
-<setting id="org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_member" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.format_header" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.comment.format_block_comments" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.alignment_for_enum_constants" value="0"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.brace_position_for_type_declaration" value="end_of_line"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.blank_lines_after_imports" value="1"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header" value="true"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for" value="insert"/>
-<setting id="org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments" value="do not insert"/>
-<setting id="org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column" value="false"/>
-<setting id="org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line" value="false"/>
-</profile>
-</profiles>
diff --git a/metrics/pom.xml b/metrics/pom.xml
deleted file mode 100644
index 9a084452c..000000000
--- a/metrics/pom.xml
+++ /dev/null
@@ -1,141 +0,0 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.google.code.gson</groupId>
-  <artifactId>gson-metrics</artifactId>
-  <packaging>jar</packaging>
-  <version>1.0-SNAPSHOT</version>
-  <inceptionYear>2011</inceptionYear>
-  <name>Gson Metrics</name>
-  <parent>
-    <groupId>org.sonatype.oss</groupId>
-    <artifactId>oss-parent</artifactId>
-    <version>5</version>
-  </parent>
-  <url>http://code.google.com/p/google-gson/</url>
-  <description>Performance Metrics for Google Gson library</description>
-  <properties>
-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-  </properties>
-  <licenses>
-    <license>
-      <name>The Apache Software License, Version 2.0</name>
-      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-  <scm>
-    <connection>scm:svn:http://google-gson.googlecode.com/svn/trunk/metrics</connection>
-    <developerConnection>scm:svn:https://google-gson.googlecode.com/svn/trunk/metrics</developerConnection>
-    <url>http://google-gson.codegoogle.com/svn/trunk/metrics</url>
-  </scm>
-  <issueManagement>
-    <system>Google Code Issue Tracking</system>
-    <url>http://code.google.com/p/google-gson/issues/list</url>
-  </issueManagement>
-  <organization>
-    <name>Google, Inc.</name>
-    <url>http://www.google.com</url>
-  </organization>
-  <dependencies>
-    <dependency>
-      <groupId>com.google.code.gson</groupId>
-      <artifactId>gson</artifactId>
-      <version>1.7.2-SNAPSHOT</version>
-    </dependency>
-    <dependency>
-      <groupId>com.google.code.caliper</groupId>
-      <artifactId>caliper</artifactId>
-      <version>1.0-SNAPSHOT</version>
-    </dependency>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <version>3.8.2</version>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-  <build>
-    <defaultGoal>package</defaultGoal>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-compiler-plugin</artifactId>
-        <version>2.3.2</version>
-        <configuration>
-          <source>1.6</source>
-          <target>1.6</target>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-eclipse-plugin</artifactId>
-        <version>2.8</version>
-        <configuration>
-          <downloadSources>true</downloadSources>
-          <downloadJavadocs>true</downloadJavadocs>
-          <workspace>../eclipse-ws/</workspace>
-          <workspaceCodeStylesURL>
-            file:///${basedir}/../lib/gson-formatting-styles.xml
-          </workspaceCodeStylesURL>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-release-plugin</artifactId>
-        <version>2.1</version>
-        <configuration>
-          <arguments>-DenableCiProfile=true</arguments>
-          <tagBase>https://google-gson.googlecode.com/svn/tags/</tagBase>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-source-plugin</artifactId>
-        <version>2.1.2</version>
-        <executions>
-          <execution>
-            <id>attach-sources</id>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-javadoc-plugin</artifactId>
-        <version>2.7</version>
-        <executions>
-          <execution>
-            <id>attach-javadocs</id>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-        <configuration>
-          <links>
-            <link>http://download.oracle.com/javase/1.5.0/docs/api/</link>
-          </links>
-          <version>true</version>
-          <show>public</show>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-  <developers>
-    <developer>
-      <name>Inderjeet Singh</name>
-      <organization>Google Inc.</organization>
-    </developer>
-    <developer>
-      <name>Joel Leitch</name>
-      <organization>Google Inc.</organization>
-    </developer>
-    <developer>
-      <name>Jesse Wilson</name>
-      <organization>Google Inc.</organization>
-    </developer>
-  </developers>
-</project>
diff --git a/metrics/src/main/java/com/google/gson/metrics/BagOfPrimitives.java b/metrics/src/main/java/com/google/gson/metrics/BagOfPrimitives.java
deleted file mode 100644
index 72cd6b6d1..000000000
--- a/metrics/src/main/java/com/google/gson/metrics/BagOfPrimitives.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.metrics;
-
-/**
- * Class with a bunch of primitive fields
- *
- * @author Inderjeet Singh
- */
-public class BagOfPrimitives {
-  public static final long DEFAULT_VALUE = 0;
-  public long longValue;
-  public int intValue;
-  public boolean booleanValue;
-  public String stringValue;
-
-  public BagOfPrimitives() {
-    this(DEFAULT_VALUE, 0, false, "");
-  }
-
-  public BagOfPrimitives(long longValue, int intValue, boolean booleanValue, String stringValue) {
-    this.longValue = longValue;
-    this.intValue = intValue;
-    this.booleanValue = booleanValue;
-    this.stringValue = stringValue;
-  }
-
-  public int getIntValue() {
-    return intValue;
-  }
-
-  public String getExpectedJson() {
-    StringBuilder sb = new StringBuilder();
-    sb.append("{");
-    sb.append("\"longValue\":").append(longValue).append(",");
-    sb.append("\"intValue\":").append(intValue).append(",");
-    sb.append("\"booleanValue\":").append(booleanValue).append(",");
-    sb.append("\"stringValue\":\"").append(stringValue).append("\"");
-    sb.append("}");
-    return sb.toString();
-  }
-
-  @Override
-  public int hashCode() {
-    final int prime = 31;
-    int result = 1;
-    result = prime * result + (booleanValue ? 1231 : 1237);
-    result = prime * result + intValue;
-    result = prime * result + (int) (longValue ^ (longValue >>> 32));
-    result = prime * result + ((stringValue == null) ? 0 : stringValue.hashCode());
-    return result;
-  }
-
-  @Override
-  public boolean equals(Object obj) {
-    if (this == obj)
-      return true;
-    if (obj == null)
-      return false;
-    if (getClass() != obj.getClass())
-      return false;
-    BagOfPrimitives other = (BagOfPrimitives) obj;
-    if (booleanValue != other.booleanValue)
-      return false;
-    if (intValue != other.intValue)
-      return false;
-    if (longValue != other.longValue)
-      return false;
-    if (stringValue == null) {
-      if (other.stringValue != null)
-        return false;
-    } else if (!stringValue.equals(other.stringValue))
-      return false;
-    return true;
-  }
-
-  @Override
-  public String toString() {
-    return String.format("(longValue=%d,intValue=%d,booleanValue=%b,stringValue=%s)",
-        longValue, intValue, booleanValue, stringValue);
-  }
-}
diff --git a/metrics/src/main/java/com/google/gson/metrics/BagOfPrimitivesDeserializationBenchmark.java b/metrics/src/main/java/com/google/gson/metrics/BagOfPrimitivesDeserializationBenchmark.java
deleted file mode 100644
index 8e6ea2b24..000000000
--- a/metrics/src/main/java/com/google/gson/metrics/BagOfPrimitivesDeserializationBenchmark.java
+++ /dev/null
@@ -1,123 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.metrics;
-
-import java.io.IOException;
-import java.io.StringReader;
-import java.lang.reflect.Field;
-
-import com.google.caliper.Runner;
-import com.google.caliper.SimpleBenchmark;
-import com.google.gson.Gson;
-import com.google.gson.stream.JsonReader;
-
-/**
- * Caliper based micro benchmarks for Gson
- *
- * @author Inderjeet Singh
- * @author Jesse Wilson
- * @author Joel Leitch
- */
-public class BagOfPrimitivesDeserializationBenchmark extends SimpleBenchmark {
-
-  private Gson gson;
-  private String json;
-
-  public static void main(String[] args) {
-    Runner.main(BagOfPrimitivesDeserializationBenchmark.class, args);
-  }
-  
-  @Override
-  protected void setUp() throws Exception {
-    this.gson = new Gson();
-    BagOfPrimitives bag = new BagOfPrimitives(10L, 1, false, "foo");
-    this.json = gson.toJson(bag);
-  }
-
-  /** 
-   * Benchmark to measure Gson performance for deserializing an object
-   */
-  public void timeBagOfPrimitivesDefault(int reps) {
-    for (int i=0; i<reps; ++i) {
-      gson.fromJson(json, BagOfPrimitives.class);
-    }
-  }
-
-  /**
-   * Benchmark to measure deserializing objects by hand
-   */
-  public void timeBagOfPrimitivesStreaming(int reps) throws IOException {
-    for (int i=0; i<reps; ++i) {
-      StringReader reader = new StringReader(json);
-      JsonReader jr = new JsonReader(reader);
-      jr.beginObject();
-      long longValue = 0;
-      int intValue = 0;
-      boolean booleanValue = false;
-      String stringValue = null;
-      while(jr.hasNext()) {
-        String name = jr.nextName();
-        if (name.equals("longValue")) {
-          longValue = jr.nextLong();
-        } else if (name.equals("intValue")) {
-          intValue = jr.nextInt();
-        } else if (name.equals("booleanValue")) {
-          booleanValue = jr.nextBoolean();
-        } else if (name.equals("stringValue")) {
-          stringValue = jr.nextString();
-        } else {
-          throw new IOException("Unexpected name: " + name);
-        }
-      }
-      jr.endObject();
-      new BagOfPrimitives(longValue, intValue, booleanValue, stringValue);
-    }
-  }
-
-  /**
-   * This benchmark measures the ideal Gson performance: the cost of parsing a JSON stream and
-   * setting object values by reflection. We should strive to reduce the discrepancy between this
-   * and {@link #timeBagOfPrimitivesDefault(int)} .
-   */
-  public void timeBagOfPrimitivesReflectionStreaming(int reps) throws Exception {
-    for (int i=0; i<reps; ++i) {
-      StringReader reader = new StringReader(json);
-      JsonReader jr = new JsonReader(reader);
-      jr.beginObject();
-      BagOfPrimitives bag = new BagOfPrimitives();
-      while(jr.hasNext()) {
-        String name = jr.nextName();
-        for (Field field : BagOfPrimitives.class.getDeclaredFields()) {
-          if (field.getName().equals(name)) {
-            Class<?> fieldType = field.getType();
-            if (fieldType.equals(long.class)) {
-              field.setLong(bag, jr.nextLong());
-            } else if (fieldType.equals(int.class)) {
-              field.setInt(bag, jr.nextInt());
-            } else if (fieldType.equals(boolean.class)) {
-              field.setBoolean(bag, jr.nextBoolean());
-            } else if (fieldType.equals(String.class)) {
-              field.set(bag, jr.nextString());
-            } else {
-              throw new RuntimeException("Unexpected: type: " + fieldType + ", name: " + name);
-            }
-          }
-        }
-      }
-      jr.endObject();
-    }
-  }
-}
diff --git a/metrics/src/main/java/com/google/gson/metrics/CollectionsDeserializationBenchmark.java b/metrics/src/main/java/com/google/gson/metrics/CollectionsDeserializationBenchmark.java
deleted file mode 100644
index 09a5782ab..000000000
--- a/metrics/src/main/java/com/google/gson/metrics/CollectionsDeserializationBenchmark.java
+++ /dev/null
@@ -1,140 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.metrics;
-
-import java.io.IOException;
-import java.io.StringReader;
-import java.lang.reflect.Field;
-import java.lang.reflect.Type;
-import java.util.ArrayList;
-import java.util.List;
-
-import com.google.caliper.Runner;
-import com.google.caliper.SimpleBenchmark;
-import com.google.gson.Gson;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-
-/**
- * Caliper based micro benchmarks for Gson
- *
- * @author Inderjeet Singh
- */
-public class CollectionsDeserializationBenchmark extends SimpleBenchmark {
-
-  private static final Type LIST_TYPE = new TypeToken<List<BagOfPrimitives>>(){}.getType();
-  private Gson gson;
-  private String json;
-
-  public static void main(String[] args) {
-    Runner.main(CollectionsDeserializationBenchmark.class, args);
-  }
-  
-  @Override
-  protected void setUp() throws Exception {
-    this.gson = new Gson();
-    List<BagOfPrimitives> bags = new ArrayList<BagOfPrimitives>();
-    for (int i = 0; i < 100; ++i) {
-      bags.add(new BagOfPrimitives(10L, 1, false, "foo"));
-    }
-    this.json = gson.toJson(bags, LIST_TYPE);
-  }
-
-  /** 
-   * Benchmark to measure Gson performance for deserializing an object
-   */
-  public void timeCollectionsDefault(int reps) {
-    for (int i=0; i<reps; ++i) {
-      gson.fromJson(json, LIST_TYPE);
-    }
-  }
-
-  /**
-   * Benchmark to measure deserializing objects by hand
-   */
-  public void timeCollectionsStreaming(int reps) throws IOException {
-    for (int i=0; i<reps; ++i) {
-      StringReader reader = new StringReader(json);
-      JsonReader jr = new JsonReader(reader);
-      jr.beginArray();
-      List<BagOfPrimitives> bags = new ArrayList<BagOfPrimitives>();
-      while(jr.hasNext()) {
-        jr.beginObject();
-        long longValue = 0;
-        int intValue = 0;
-        boolean booleanValue = false;
-        String stringValue = null;
-        while(jr.hasNext()) {
-          String name = jr.nextName();
-          if (name.equals("longValue")) {
-            longValue = jr.nextLong();
-          } else if (name.equals("intValue")) {
-            intValue = jr.nextInt();
-          } else if (name.equals("booleanValue")) {
-            booleanValue = jr.nextBoolean();
-          } else if (name.equals("stringValue")) {
-            stringValue = jr.nextString();
-          } else {
-            throw new IOException("Unexpected name: " + name);
-          }
-        }
-        jr.endObject();
-        bags.add(new BagOfPrimitives(longValue, intValue, booleanValue, stringValue));
-      }
-      jr.endArray();
-    }
-  }
-
-  /**
-   * This benchmark measures the ideal Gson performance: the cost of parsing a JSON stream and
-   * setting object values by reflection. We should strive to reduce the discrepancy between this
-   * and {@link #timeCollectionsDefault(int)} .
-   */
-  public void timeCollectionsReflectionStreaming(int reps) throws Exception {
-    for (int i=0; i<reps; ++i) {
-      StringReader reader = new StringReader(json);
-      JsonReader jr = new JsonReader(reader);
-      jr.beginArray();
-      List<BagOfPrimitives> bags = new ArrayList<BagOfPrimitives>();
-      while(jr.hasNext()) {
-        jr.beginObject();
-        BagOfPrimitives bag = new BagOfPrimitives();
-        while(jr.hasNext()) {
-          String name = jr.nextName();
-          for (Field field : BagOfPrimitives.class.getDeclaredFields()) {
-            if (field.getName().equals(name)) {
-              Class<?> fieldType = field.getType();
-              if (fieldType.equals(long.class)) {
-                field.setLong(bag, jr.nextLong());
-              } else if (fieldType.equals(int.class)) {
-                field.setInt(bag, jr.nextInt());
-              } else if (fieldType.equals(boolean.class)) {
-                field.setBoolean(bag, jr.nextBoolean());
-              } else if (fieldType.equals(String.class)) {
-                field.set(bag, jr.nextString());
-              } else {
-                throw new RuntimeException("Unexpected: type: " + fieldType + ", name: " + name);
-              }
-            }
-          }
-        }
-        jr.endObject();
-        bags.add(bag);
-      }
-      jr.endArray();
-    }
-  }
-}
diff --git a/metrics/src/main/java/com/google/gson/metrics/ParseBenchmark.java b/metrics/src/main/java/com/google/gson/metrics/ParseBenchmark.java
deleted file mode 100644
index 68134372c..000000000
--- a/metrics/src/main/java/com/google/gson/metrics/ParseBenchmark.java
+++ /dev/null
@@ -1,389 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.metrics;
-
-import com.google.caliper.Param;
-import com.google.caliper.Runner;
-import com.google.caliper.SimpleBenchmark;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonParser;
-import com.google.gson.annotations.SerializedName;
-import com.google.gson.reflect.TypeToken;
-import java.io.CharArrayReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.Reader;
-import java.io.StringWriter;
-import java.lang.reflect.Type;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.List;
-import org.codehaus.jackson.JsonFactory;
-import org.codehaus.jackson.annotate.JsonProperty;
-import org.codehaus.jackson.map.DeserializationConfig;
-import org.codehaus.jackson.map.ObjectMapper;
-import org.codehaus.jackson.type.TypeReference;
-
-/**
- * Measure Gson and Jackson parsing and binding performance.
- *
- * <p>This benchmark requires that ParseBenchmarkData.zip is on the classpath.
- * That file contains Twitter feed data, which is representative of what
- * applications will be parsing.
- */
-public final class ParseBenchmark extends SimpleBenchmark {
-  @Param Document document;
-  @Param Api api;
-
-  private enum Document {
-    TWEETS(new TypeToken<List<Tweet>>() {}, new TypeReference<List<Tweet>>() {}),
-    READER_SHORT(new TypeToken<Feed>() {}, new TypeReference<Feed>() {}),
-    READER_LONG(new TypeToken<Feed>() {}, new TypeReference<Feed>() {});
-
-    private final Type gsonType;
-    private final TypeReference<?> jacksonType;
-
-    private Document(TypeToken<?> typeToken, TypeReference<?> typeReference) {
-      this.gsonType = typeToken.getType();
-      this.jacksonType = typeReference;
-    }
-  }
-
-  private enum Api {
-    JACKSON_STREAM {
-      @Override Parser newParser() {
-        return new JacksonStreamParser();
-      }
-    },
-    JACKSON_BIND {
-      @Override Parser newParser() {
-        return new JacksonBindParser();
-      }
-    },
-    GSON_STREAM {
-      @Override Parser newParser() {
-        return new GsonStreamParser();
-      }
-    },
-    GSON_SKIP {
-      @Override Parser newParser() {
-        return new GsonSkipParser();
-      }
-    },
-    GSON_DOM {
-      @Override Parser newParser() {
-        return new GsonDomParser();
-      }
-    },
-    GSON_BIND {
-      @Override Parser newParser() {
-        return new GsonBindParser();
-      }
-    };
-    abstract Parser newParser();
-  }
-
-  private char[] text;
-  private Parser parser;
-
-  @Override protected void setUp() throws Exception {
-    text = resourceToString("/" + document.name() + ".json").toCharArray();
-    parser = api.newParser();
-  }
-
-  public void timeParse(int reps) throws Exception {
-    for (int i = 0; i < reps; i++) {
-      parser.parse(text, document);
-    }
-  }
-
-  private static String resourceToString(String path) throws Exception {
-    InputStream in = ParseBenchmark.class.getResourceAsStream(path);
-    if (in == null) {
-      throw new IllegalArgumentException("No such file: " + path);
-    }
-
-    Reader reader = new InputStreamReader(in, "UTF-8");
-    char[] buffer = new char[8192];
-    StringWriter writer = new StringWriter();
-    int count;
-    while ((count = reader.read(buffer)) != -1) {
-      writer.write(buffer, 0, count);
-    }
-    reader.close();
-    return writer.toString();
-  }
-
-  public static void main(String[] args) throws Exception {
-    Runner.main(ParseBenchmark.class, args);
-  }
-
-  interface Parser {
-    void parse(char[] data, Document document) throws Exception;
-  }
-
-  private static class GsonStreamParser implements Parser {
-    public void parse(char[] data, Document document) throws Exception {
-      com.google.gson.stream.JsonReader jsonReader
-          = new com.google.gson.stream.JsonReader(new CharArrayReader(data));
-      readToken(jsonReader);
-      jsonReader.close();
-    }
-
-    private void readToken(com.google.gson.stream.JsonReader reader) throws IOException {
-      while (true) {
-        switch (reader.peek()) {
-        case BEGIN_ARRAY:
-          reader.beginArray();
-          break;
-        case END_ARRAY:
-          reader.endArray();
-          break;
-        case BEGIN_OBJECT:
-          reader.beginObject();
-          break;
-        case END_OBJECT:
-          reader.endObject();
-          break;
-        case NAME:
-          reader.nextName();
-          break;
-        case BOOLEAN:
-          reader.nextBoolean();
-          break;
-        case NULL:
-          reader.nextNull();
-          break;
-        case NUMBER:
-          reader.nextLong();
-          break;
-        case STRING:
-          reader.nextString();
-          break;
-        case END_DOCUMENT:
-          return;
-        default:
-          throw new IllegalArgumentException("Unexpected token" + reader.peek());
-        }
-      }
-    }
-  }
-
-  private static class GsonSkipParser implements Parser {
-    public void parse(char[] data, Document document) throws Exception {
-      com.google.gson.stream.JsonReader jsonReader
-          = new com.google.gson.stream.JsonReader(new CharArrayReader(data));
-      jsonReader.skipValue();
-      jsonReader.close();
-    }
-  }
-
-  private static class JacksonStreamParser implements Parser {
-    public void parse(char[] data, Document document) throws Exception {
-      JsonFactory jsonFactory = new JsonFactory();
-      org.codehaus.jackson.JsonParser jp = jsonFactory.createJsonParser(new CharArrayReader(data));
-      jp.configure(org.codehaus.jackson.JsonParser.Feature.CANONICALIZE_FIELD_NAMES, false);
-      int depth = 0;
-      do {
-        switch (jp.nextToken()) {
-        case START_OBJECT:
-        case START_ARRAY:
-          depth++;
-          break;
-        case END_OBJECT:
-        case END_ARRAY:
-          depth--;
-          break;
-        case FIELD_NAME:
-          jp.getCurrentName();
-          break;
-        case VALUE_STRING:
-          jp.getText();
-          break;
-        case VALUE_NUMBER_INT:
-        case VALUE_NUMBER_FLOAT:
-          jp.getLongValue();
-          break;
-        }
-      } while (depth > 0);
-      jp.close();
-    }
-  }
-
-  private static class GsonDomParser implements Parser {
-    public void parse(char[] data, Document document) throws Exception {
-      new JsonParser().parse(new CharArrayReader(data));
-    }
-  }
-
-  private static class GsonBindParser implements Parser {
-    private static Gson gson = new GsonBuilder()
-        .setDateFormat("EEE MMM dd HH:mm:ss Z yyyy")
-        .create();
-
-    public void parse(char[] data, Document document) throws Exception {
-      gson.fromJson(new CharArrayReader(data), document.gsonType);
-    }
-  }
-
-  private static class JacksonBindParser implements Parser {
-    private static ObjectMapper mapper = new ObjectMapper();
-
-    static {
-      mapper.configure(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES, false);
-      mapper.configure(DeserializationConfig.Feature.AUTO_DETECT_FIELDS, true);
-      mapper.setDateFormat(new SimpleDateFormat("EEE MMM dd HH:mm:ss Z yyyy"));
-    }
-
-    public void parse(char[] data, Document document) throws Exception {
-      mapper.readValue(new CharArrayReader(data), document.jacksonType);
-    }
-  }
-
-  static class Tweet {
-    @JsonProperty String coordinates;
-    @JsonProperty boolean favorited;
-    @JsonProperty Date created_at;
-    @JsonProperty boolean truncated;
-    @JsonProperty Tweet retweeted_status;
-    @JsonProperty String id_str;
-    @JsonProperty String in_reply_to_id_str;
-    @JsonProperty String contributors;
-    @JsonProperty String text;
-    @JsonProperty long id;
-    @JsonProperty String retweet_count;
-    @JsonProperty String in_reply_to_status_id_str;
-    @JsonProperty Object geo;
-    @JsonProperty boolean retweeted;
-    @JsonProperty String in_reply_to_user_id;
-    @JsonProperty String in_reply_to_screen_name;
-    @JsonProperty Object place;
-    @JsonProperty User user;
-    @JsonProperty String source;
-    @JsonProperty String in_reply_to_user_id_str;
-  }
-
-  static class User {
-    @JsonProperty String name;
-    @JsonProperty String profile_sidebar_border_color;
-    @JsonProperty boolean profile_background_tile;
-    @JsonProperty String profile_sidebar_fill_color;
-    @JsonProperty Date created_at;
-    @JsonProperty String location;
-    @JsonProperty String profile_image_url;
-    @JsonProperty boolean follow_request_sent;
-    @JsonProperty String profile_link_color;
-    @JsonProperty boolean is_translator;
-    @JsonProperty String id_str;
-    @JsonProperty int favourites_count;
-    @JsonProperty boolean contributors_enabled;
-    @JsonProperty String url;
-    @JsonProperty boolean default_profile;
-    @JsonProperty long utc_offset;
-    @JsonProperty long id;
-    @JsonProperty boolean profile_use_background_image;
-    @JsonProperty int listed_count;
-    @JsonProperty String lang;
-    @JsonProperty("protected") @SerializedName("protected") boolean isProtected;
-    @JsonProperty int followers_count;
-    @JsonProperty String profile_text_color;
-    @JsonProperty String profile_background_color;
-    @JsonProperty String time_zone;
-    @JsonProperty String description;
-    @JsonProperty boolean notifications;
-    @JsonProperty boolean geo_enabled;
-    @JsonProperty boolean verified;
-    @JsonProperty String profile_background_image_url;
-    @JsonProperty boolean defalut_profile_image;
-    @JsonProperty int friends_count;
-    @JsonProperty int statuses_count;
-    @JsonProperty String screen_name;
-    @JsonProperty boolean following;
-    @JsonProperty boolean show_all_inline_media;
-  }
-
-  static class Feed {
-    @JsonProperty String id;
-    @JsonProperty String title;
-    @JsonProperty String description;
-    @JsonProperty("alternate") @SerializedName("alternate") List<Link> alternates;
-    @JsonProperty long updated;
-    @JsonProperty List<Item> items;
-
-    @Override public String toString() {
-      StringBuilder result = new StringBuilder()
-          .append(id)
-          .append("\n").append(title)
-          .append("\n").append(description)
-          .append("\n").append(alternates)
-          .append("\n").append(updated);
-      int i = 1;
-      for (Item item : items) {
-        result.append(i++).append(": ").append(item).append("\n\n");
-      }
-      return result.toString();
-    }
-  }
-
-  static class Link {
-    @JsonProperty String href;
-
-    @Override public String toString() {
-      return href;
-    }
-  }
-
-  static class Item {
-    @JsonProperty List<String> categories;
-    @JsonProperty String title;
-    @JsonProperty long published;
-    @JsonProperty long updated;
-    @JsonProperty("alternate") @SerializedName("alternate") List<Link> alternates;
-    @JsonProperty Content content;
-    @JsonProperty String author;
-    @JsonProperty List<ReaderUser> likingUsers;
-
-    @Override public String toString() {
-      return title
-          + "\nauthor: " + author
-          + "\npublished: " + published
-          + "\nupdated: " + updated
-          + "\n" + content
-          + "\nliking users: " + likingUsers
-          + "\nalternates: " + alternates
-          + "\ncategories: " + categories;
-    }
-  }
-
-  static class Content {
-    @JsonProperty String content;
-
-    @Override public String toString() {
-      return content;
-    }
-  }
-
-  static class ReaderUser {
-    @JsonProperty String userId;
-
-    @Override public String toString() {
-      return userId;
-    }
-  }
-}
diff --git a/metrics/src/main/java/com/google/gson/metrics/ParseBenchmarkData.zip b/metrics/src/main/java/com/google/gson/metrics/ParseBenchmarkData.zip
deleted file mode 100644
index 58e08bb50..000000000
Binary files a/metrics/src/main/java/com/google/gson/metrics/ParseBenchmarkData.zip and /dev/null differ
diff --git a/metrics/src/main/java/com/google/gson/metrics/SerializationBenchmark.java b/metrics/src/main/java/com/google/gson/metrics/SerializationBenchmark.java
deleted file mode 100644
index 9cdf085e8..000000000
--- a/metrics/src/main/java/com/google/gson/metrics/SerializationBenchmark.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Copyright (C) 2011 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.metrics;
-
-import com.google.caliper.Param;
-import com.google.caliper.Runner;
-import com.google.caliper.SimpleBenchmark;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-
-/**
- * Caliper based micro benchmarks for Gson serialization
- *
- * @author Inderjeet Singh
- * @author Jesse Wilson
- * @author Joel Leitch
- */
-public class SerializationBenchmark extends SimpleBenchmark {
-
-  private Gson gson;
-  private BagOfPrimitives bag;
-  @Param
-  private boolean pretty;
-
-  public static void main(String[] args) {
-    Runner.main(SerializationBenchmark.class, args);
-  }
-  
-  @Override
-  protected void setUp() throws Exception {
-    this.gson = pretty ? new GsonBuilder().setPrettyPrinting().create() : new Gson();
-    this.bag = new BagOfPrimitives(10L, 1, false, "foo");
-  }
-
-  public void timeObjectSerialization(int reps) {
-    for (int i=0; i<reps; ++i) {
-      gson.toJson(bag);
-    }
-  }
-}
diff --git a/pom.xml b/pom.xml
index 79fef8dff..4e876832f 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,123 +1,54 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>org.sonatype.oss</groupId>
-    <artifactId>oss-parent</artifactId>
-    <version>7</version>
+    <groupId>com.github.gv2011</groupId>
+    <artifactId>parent</artifactId>
+    <version>0.4.1-SNAPSHOT</version>
   </parent>
 
-  <groupId>com.google.code.gson</groupId>
-  <artifactId>gson-parent</artifactId>
-  <version>2.6.2</version>
-  <packaging>pom</packaging>
-
-  <name>Gson Parent</name>
-  <description>Gson JSON library</description>
-  <url>https://github.com/google/gson</url>
-
-  <modules>
-    <module>gson</module>
-  </modules>
-
-  <properties>
-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    <java.version>1.6</java.version>
-  </properties>
-
-  <scm>
-    <url>https://github.com/google/gson/</url>
-    <connection>scm:git:https://github.com/google/gson.git</connection>
-    <developerConnection>scm:git:git@github.com:google/gson.git</developerConnection>
-    <tag>gson-parent-2.6.2</tag>
-  </scm>
-
-  <issueManagement>
-    <system>GitHub Issues</system>
-    <url>https://github.com/google/gson/issues</url>
-  </issueManagement>
-
-  <licenses>
-    <license>
-      <name>Apache 2.0</name>
-      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
-    </license>
-  </licenses>
-
-  <dependencyManagement>
-    <dependencies>
-      <dependency>
-        <groupId>junit</groupId>
-        <artifactId>junit</artifactId>
-        <version>3.8.2</version>
-        <scope>test</scope>
-      </dependency>
-    </dependencies>
-  </dependencyManagement>
-
-  <build>
-    <pluginManagement>
-      <plugins>
-        <plugin>
-          <groupId>org.apache.maven.plugins</groupId>
-          <artifactId>maven-compiler-plugin</artifactId>
-          <version>3.0</version>
-          <configuration>
-            <source>${java.version}</source>
-            <target>${java.version}</target>
-          </configuration>
-        </plugin>
-        <plugin>
-          <groupId>org.apache.maven.plugins</groupId>
-          <artifactId>maven-javadoc-plugin</artifactId>
-          <version>2.10.3</version>
-        </plugin>
-        <plugin>
-          <groupId>org.apache.maven.plugins</groupId>
-          <artifactId>maven-jar-plugin</artifactId>
-          <configuration>
-            <useDefaultManifestFile>true</useDefaultManifestFile>
-          </configuration>
-        </plugin>
-      </plugins>
-    </pluginManagement>
-    <plugins>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-release-plugin</artifactId>
-        <version>2.4.2</version>
-        <dependencies>
-          <dependency>
-            <groupId>org.apache.maven.scm</groupId>
-            <artifactId>maven-scm-provider-gitexe</artifactId>
-            <version>1.9</version>
-          </dependency>
-        </dependencies>
-        <configuration>
-          <autoVersionSubmodules>true</autoVersionSubmodules>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-  <profiles>
-    <profile>
-      <id>doclint-java8-disable</id>
-      <activation>
-        <jdk>[1.8,</jdk>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.apache.maven.plugins</groupId>
-            <artifactId>maven-javadoc-plugin</artifactId>
-            <configuration>
-              <additionalparam>-Xdoclint:none</additionalparam>
-            </configuration>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
+  <artifactId>gson</artifactId>
+  <version>2.6.3-SNAPSHOT</version>
+  <name>Gson</name>
+
+  <dependencies>
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.hamcrest</groupId>
+      <artifactId>hamcrest</artifactId>
+      <scope>test</scope>
+    </dependency>
+  </dependencies>
+
+<!--   <build> -->
+<!--     <plugins> -->
+<!--       <plugin> -->
+<!--         <groupId>org.apache.maven.plugins</groupId> -->
+<!--         <artifactId>maven-javadoc-plugin</artifactId> -->
+<!--         <configuration> -->
+<!--           <includePackageNames>com.google.gson</includePackageNames> -->
+<!--           <excludePackageNames>com.google.gson.internal:com.google.gson.internal.bind</excludePackageNames> -->
+<!--           <links> -->
+<!--             <link>http://docs.oracle.com/javase/6/docs/api/</link> -->
+<!--           </links> -->
+<!--         </configuration> -->
+<!--       </plugin> -->
+<!--       <plugin> -->
+<!--         <groupId>biz.aQute.bnd</groupId> -->
+<!--         <artifactId>bnd-maven-plugin</artifactId> -->
+<!--         <version>3.1.0</version> -->
+<!--         <executions> -->
+<!--           <execution> -->
+<!--             <goals> -->
+<!--               <goal>bnd-process</goal> -->
+<!--             </goals> -->
+<!--           </execution> -->
+<!--         </executions> -->
+<!--       </plugin> -->
+<!--     </plugins> -->
+<!--   </build> -->
 </project>
diff --git a/proto/.gitignore b/proto/.gitignore
deleted file mode 100644
index f44578ac2..000000000
--- a/proto/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-src/main/java/com/google/gson/protobuf/generated/
diff --git a/proto/pom.xml b/proto/pom.xml
deleted file mode 100644
index 99f7791d5..000000000
--- a/proto/pom.xml
+++ /dev/null
@@ -1,218 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.google.code.gson</groupId>
-  <artifactId>proto</artifactId>
-  <packaging>jar</packaging>
-  <version>0.6-SNAPSHOT</version>
-  <name>Gson Protobuf Support</name>
-  <description>Gson support for Protobufs</description>
-  <properties>
-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-  </properties>
-  <distributionManagement>
-    <repository>
-      <id>local.repo</id>
-      <name>file repository to svn</name>
-      <url>file://${basedir}/../../mavenrepo</url>
-    </repository>
-  </distributionManagement>
-  <repositories>
-    <repository>
-      <id>gson</id>
-      <url>http://google-gson.googlecode.com/svn/mavenrepo</url>
-      <snapshots>
-        <enabled>true</enabled>
-      </snapshots>
-      <releases>
-        <enabled>true</enabled>
-      </releases>
-    </repository>
-  </repositories>
-  <licenses>
-    <license>
-      <name>The Apache Software License, Version 2.0</name>
-      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-  <scm>
-    <connection>scm:svn:http://google-gson.googlecode.com/svn/trunk/proto</connection>
-    <developerConnection>scm:svn:https://google-gson.googlecode.com/svn/trunk/proto</developerConnection>
-    <url>http://google-gson.codegoogle.com/svn/trunk/proto</url>
-  </scm>
-  <issueManagement>
-    <system>Google Code Issue Tracking</system>
-    <url>http://code.google.com/p/google-gson/issues/list</url>
-  </issueManagement>
-
-  <dependencies>
-
-    <!--  Gson: Java to Json conversion -->
-    <dependency>
-      <groupId>com.google.code.gson</groupId>
-      <artifactId>gson</artifactId>
-      <version>2.4</version>
-      <scope>compile</scope>
-    </dependency>
-
-    <dependency>
-      <groupId>com.google.protobuf</groupId>
-      <artifactId>protobuf-java</artifactId>
-      <version>2.6.1</version>
-      <scope>compile</scope>
-    </dependency>
-    
-    <dependency>
-      <groupId>com.google.guava</groupId>
-      <artifactId>guava</artifactId>
-      <version>18.0</version>
-      <scope>compile</scope>
-    </dependency>
-
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <version>4.12</version>
-      <scope>test</scope>
-    </dependency>
-    
-    <dependency>
-      <groupId>com.google.truth</groupId>
-      <artifactId>truth</artifactId>
-      <version>0.27</version>
-      <scope>test</scope>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <finalName>gson-proto</finalName>
-    <plugins>
-      <plugin>
-        <artifactId>maven-antrun-plugin</artifactId>
-        <version>1.8</version>
-        <executions>
-          <execution>
-            <id>compile-protoc</id>
-            <phase>generate-sources</phase>
-            <configuration>
-              <tasks>
-                <mkdir dir="target/generated" />
-                <path id="proto.path">
-                  <fileset dir="src/main/protobuf">
-                    <include name="**/*.proto" />
-                  </fileset>
-                </path>
-                <pathconvert pathsep=" " property="proto.files" refid="proto.path" />
-                <exec executable="protoc" failonerror="true">
-                  <arg value="--java_out=src/main/java" />
-                  <arg value="--proto_path=/usr/include" />
-                  <arg value="-I${project.basedir}/src/main/protobuf" />
-                  <arg line="${proto.files}" />
-                </exec>
-              </tasks>
-            </configuration>
-            <goals>
-              <goal>run</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-compiler-plugin</artifactId>
-        <version>2.3.2</version>
-        <configuration>
-          <source>1.6</source>
-          <target>1.6</target>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-eclipse-plugin</artifactId>
-        <version>2.8</version>
-        <configuration>
-          <downloadSources>true</downloadSources>
-          <downloadJavadocs>true</downloadJavadocs>
-          <workspace>../eclipse-ws</workspace>
-          <workspaceCodeStylesURL>file:///${basedir}/../lib/gson-formatting-styles.xml</workspaceCodeStylesURL>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-install-plugin</artifactId>
-        <version>2.5.2</version>
-        <!-- configuration>
-          <updateReleaseInfo>true</updateReleaseInfo>
-          <createChecksum>true</createChecksum>
-          <groupId>${groupId}</groupId>
-          <artifactId>${artifactId}</artifactId>
-          <version>${version}</version>
-          <packaging>jar</packaging>
-          <classifier>sources</classifier>
-          <file>target/proto-sources.jar</file>
-        </configuration -->
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-release-plugin</artifactId>
-        <version>2.1</version>
-        <configuration>
-          <arguments>-DenableCiProfile=true</arguments>
-          <tagBase>https://google-gson.googlecode.com/svn/tags/</tagBase>
-        </configuration>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-source-plugin</artifactId>
-        <version>2.1.2</version>
-        <executions>
-          <execution>
-            <id>attach-sources</id>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-javadoc-plugin</artifactId>
-        <version>2.7</version>
-        <executions>
-          <execution>
-            <id>attach-javadocs</id>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-          </execution>
-        </executions>
-        <configuration>
-          <links>
-            <link>http://download.oracle.com/javase/1.5.0/docs/api/</link>
-          </links>
-          <version>true</version>
-          <show>public</show>
-        </configuration>
-      </plugin>
-      <plugin>
-        <artifactId>maven-assembly-plugin</artifactId>
-        <configuration>
-          <descriptor>src/main/resources/assembly-descriptor.xml</descriptor>
-          <finalName>proto-${project.version}</finalName>
-          <outputDirectory>target/dist</outputDirectory>
-          <workDirectory>target/assembly/work</workDirectory>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-  <developers>
-    <developer>
-      <name>Inderjeet Singh</name>
-      <organization>Google Inc.</organization>
-    </developer>
-  </developers>
-</project>
diff --git a/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java b/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java
deleted file mode 100644
index ff44779f1..000000000
--- a/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java
+++ /dev/null
@@ -1,406 +0,0 @@
-/*
- * Copyright (C) 2010 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.gson.protobuf;
-
-import static com.google.common.base.Preconditions.checkNotNull;
-
-import com.google.common.base.CaseFormat;
-import com.google.common.base.Converter;
-import com.google.common.collect.MapMaker;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonDeserializationContext;
-import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import com.google.gson.JsonSerializationContext;
-import com.google.gson.JsonSerializer;
-import com.google.protobuf.DescriptorProtos.EnumValueOptions;
-import com.google.protobuf.DescriptorProtos.FieldOptions;
-import com.google.protobuf.Descriptors.Descriptor;
-import com.google.protobuf.Descriptors.EnumDescriptor;
-import com.google.protobuf.Descriptors.EnumValueDescriptor;
-import com.google.protobuf.Descriptors.FieldDescriptor;
-import com.google.protobuf.Extension;
-import com.google.protobuf.GeneratedMessage;
-import com.google.protobuf.Message;
-
-import java.lang.reflect.Field;
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-import java.lang.reflect.Type;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.ConcurrentMap;
-
-/**
- * GSON type adapter for protocol buffers that knows how to serialize enums either by using their
- * values or their names, and also supports custom proto field names.
- * <p>
- * You can specify which case representation is used for the proto fields when writing/reading the
- * JSON payload by calling {@link Builder#setFieldNameSerializationFormat(CaseFormat, CaseFormat)}.
- * <p>
- * An example of default serialization/deserialization using custom proto field names is shown
- * below:
- *
- * <pre>
- * message MyMessage {
- *   // Will be serialized as 'osBuildID' instead of the default 'osBuildId'.
- *   string os_build_id = 1 [(serialized_name) = "osBuildID"];
- * }
- * </pre>
- * <p>
- *
- * @author Inderjeet Singh
- * @author Emmanuel Cron
- * @author Stanley Wang
- */
-public class ProtoTypeAdapter
-    implements JsonSerializer<GeneratedMessage>, JsonDeserializer<GeneratedMessage> {
-  /**
-   * Determines how enum <u>values</u> should be serialized.
-   */
-  public static enum EnumSerialization {
-    /**
-     * Serializes and deserializes enum values using their <b>number</b>. When this is used, custom
-     * value names set on enums are ignored.
-     */
-    NUMBER,
-    /** Serializes and deserializes enum values using their <b>name</b>. */
-    NAME;
-  }
-
-  /**
-   * Builder for {@link ProtoTypeAdapter}s.
-   */
-  public static class Builder {
-    private final Set<Extension<FieldOptions, String>> serializedNameExtensions;
-    private final Set<Extension<EnumValueOptions, String>> serializedEnumValueExtensions;
-    private EnumSerialization enumSerialization;
-    private Converter<String, String> fieldNameSerializationFormat;
-
-    private Builder(EnumSerialization enumSerialization, CaseFormat fromFieldNameFormat,
-        CaseFormat toFieldNameFormat) {
-      this.serializedNameExtensions = new HashSet<Extension<FieldOptions, String>>();
-      this.serializedEnumValueExtensions = new HashSet<Extension<EnumValueOptions, String>>();
-      setEnumSerialization(enumSerialization);
-      setFieldNameSerializationFormat(fromFieldNameFormat, toFieldNameFormat);
-    }
-
-    public Builder setEnumSerialization(EnumSerialization enumSerialization) {
-      this.enumSerialization = checkNotNull(enumSerialization);
-      return this;
-    }
-
-    /**
-     * Sets the field names serialization format. The first parameter defines how to read the format
-     * of the proto field names you are converting to JSON. The second parameter defines which
-     * format to use when serializing them.
-     * <p>
-     * For example, if you use the following parameters: {@link CaseFormat#LOWER_UNDERSCORE},
-     * {@link CaseFormat#LOWER_CAMEL}, the following conversion will occur:
-     *
-     * <pre>
-     * PROTO     <->  JSON
-     * my_field       myField
-     * foo            foo
-     * n__id_ct       nIdCt
-     * </pre>
-     */
-    public Builder setFieldNameSerializationFormat(CaseFormat fromFieldNameFormat,
-        CaseFormat toFieldNameFormat) {
-      fieldNameSerializationFormat = fromFieldNameFormat.converterTo(toFieldNameFormat);
-      return this;
-    }
-
-    /**
-     * Adds a field proto annotation that, when set, overrides the default field name
-     * serialization/deserialization. For example, if you add the '{@code serialized_name}'
-     * annotation and you define a field in your proto like the one below:
-     *
-     * <pre>
-     * string client_app_id = 1 [(serialized_name) = "appId"];
-     * </pre>
-     *
-     * ...the adapter will serialize the field using '{@code appId}' instead of the default '
-     * {@code clientAppId}'. This lets you customize the name serialization of any proto field.
-     */
-    public Builder addSerializedNameExtension(
-        Extension<FieldOptions, String> serializedNameExtension) {
-      serializedNameExtensions.add(checkNotNull(serializedNameExtension));
-      return this;
-    }
-
-    /**
-     * Adds an enum value proto annotation that, when set, overrides the default <b>enum</b> value
-     * serialization/deserialization of this adapter. For example, if you add the '
-     * {@code serialized_value}' annotation and you define an enum in your proto like the one below:
-     *
-     * <pre>
-     * enum MyEnum {
-     *   UNKNOWN = 0;
-     *   CLIENT_APP_ID = 1 [(serialized_value) = "APP_ID"];
-     *   TWO = 2 [(serialized_value) = "2"];
-     * }
-     * </pre>
-     *
-     * ...the adapter will serialize the value {@code CLIENT_APP_ID} as "{@code APP_ID}" and the
-     * value {@code TWO} as "{@code 2}". This works for both serialization and deserialization.
-     * <p>
-     * Note that you need to set the enum serialization of this adapter to
-     * {@link EnumSerialization#NAME}, otherwise these annotations will be ignored.
-     */
-    public Builder addSerializedEnumValueExtension(
-        Extension<EnumValueOptions, String> serializedEnumValueExtension) {
-      serializedEnumValueExtensions.add(checkNotNull(serializedEnumValueExtension));
-      return this;
-    }
-
-    public ProtoTypeAdapter build() {
-      return new ProtoTypeAdapter(enumSerialization, fieldNameSerializationFormat,
-          serializedNameExtensions, serializedEnumValueExtensions);
-    }
-  }
-
-  /**
-   * Creates a new {@link ProtoTypeAdapter} builder, defaulting enum serialization to
-   * {@link EnumSerialization#NAME} and converting field serialization from
-   * {@link CaseFormat#LOWER_UNDERSCORE} to {@link CaseFormat#LOWER_CAMEL}.
-   */
-  public static Builder newBuilder() {
-    return new Builder(EnumSerialization.NAME, CaseFormat.LOWER_UNDERSCORE, CaseFormat.LOWER_CAMEL);
-  }
-
-  private static final com.google.protobuf.Descriptors.FieldDescriptor.Type ENUM_TYPE =
-      com.google.protobuf.Descriptors.FieldDescriptor.Type.ENUM;
-
-  private static final ConcurrentMap<String, Map<Class<?>, Method>> mapOfMapOfMethods =
-      new MapMaker().makeMap();
-
-  private final EnumSerialization enumSerialization;
-  private final Converter<String, String> fieldNameSerializationFormat;
-  private final Set<Extension<FieldOptions, String>> serializedNameExtensions;
-  private final Set<Extension<EnumValueOptions, String>> serializedEnumValueExtensions;
-
-  private ProtoTypeAdapter(EnumSerialization enumSerialization,
-      Converter<String, String> fieldNameSerializationFormat,
-      Set<Extension<FieldOptions, String>> serializedNameExtensions,
-      Set<Extension<EnumValueOptions, String>> serializedEnumValueExtensions) {
-    this.enumSerialization = enumSerialization;
-    this.fieldNameSerializationFormat = fieldNameSerializationFormat;
-    this.serializedNameExtensions = serializedNameExtensions;
-    this.serializedEnumValueExtensions = serializedEnumValueExtensions;
-  }
-
-  @Override
-  public JsonElement serialize(GeneratedMessage src, Type typeOfSrc,
-      JsonSerializationContext context) {
-    JsonObject ret = new JsonObject();
-    final Map<FieldDescriptor, Object> fields = src.getAllFields();
-
-    for (Map.Entry<FieldDescriptor, Object> fieldPair : fields.entrySet()) {
-      final FieldDescriptor desc = fieldPair.getKey();
-      String name = getCustSerializedName(desc.getOptions(), desc.getName());
-
-      if (desc.getType() == ENUM_TYPE) {
-        // Enum collections are also returned as ENUM_TYPE
-        if (fieldPair.getValue() instanceof Collection) {
-          // Build the array to avoid infinite loop
-          JsonArray array = new JsonArray();
-          @SuppressWarnings("unchecked")
-          Collection<EnumValueDescriptor> enumDescs =
-              (Collection<EnumValueDescriptor>) fieldPair.getValue();
-          for (EnumValueDescriptor enumDesc : enumDescs) {
-            array.add(context.serialize(getEnumValue(enumDesc)));
-            ret.add(name, array);
-          }
-        } else {
-          EnumValueDescriptor enumDesc = ((EnumValueDescriptor) fieldPair.getValue());
-          ret.add(name, context.serialize(getEnumValue(enumDesc)));
-        }
-      } else {
-        ret.add(name, context.serialize(fieldPair.getValue()));
-      }
-    }
-    return ret;
-  }
-
-  @Override
-  public GeneratedMessage deserialize(JsonElement json, Type typeOfT,
-      JsonDeserializationContext context) throws JsonParseException {
-    try {
-      JsonObject jsonObject = json.getAsJsonObject();
-      @SuppressWarnings("unchecked")
-      Class<? extends GeneratedMessage> protoClass = (Class<? extends GeneratedMessage>) typeOfT;
-
-      try {
-        // Invoke the ProtoClass.newBuilder() method
-        GeneratedMessage.Builder<?> protoBuilder =
-            (GeneratedMessage.Builder<?>) getCachedMethod(protoClass, "newBuilder").invoke(null);
-
-        Descriptor protoDescriptor =
-            (Descriptor) getCachedMethod(protoClass, "getDescriptor").invoke(null);
-        // Call setters on all of the available fields
-        for (FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {
-          String jsonFieldName =
-              getCustSerializedName(fieldDescriptor.getOptions(), fieldDescriptor.getName());
-
-          if (jsonObject.has(jsonFieldName)) {
-            JsonElement jsonElement = jsonObject.get(jsonFieldName);
-            // Do not reuse jsonFieldName here, it might have a custom value
-            Object fieldValue;
-            if (fieldDescriptor.getType() == ENUM_TYPE) {
-              if (jsonElement.isJsonArray()) {
-                // Handling array
-                Collection<EnumValueDescriptor> enumCollection =
-                    new ArrayList<EnumValueDescriptor>();
-                for (JsonElement element : jsonElement.getAsJsonArray()) {
-                  enumCollection.add(
-                      findValueByNameAndExtension(fieldDescriptor.getEnumType(), element));
-                }
-                fieldValue = enumCollection;
-              } else {
-                // No array, just a plain value
-                fieldValue =
-                    findValueByNameAndExtension(fieldDescriptor.getEnumType(), jsonElement);
-              }
-              protoBuilder.setField(fieldDescriptor, fieldValue);
-            } else if (fieldDescriptor.isRepeated()) {
-              // If the type is an array, then we have to grab the type from the class.
-              String protoArrayFieldName =
-                  fieldNameSerializationFormat.convert(fieldDescriptor.getName()) + "_";
-              Field protoArrayField = protoClass.getDeclaredField(protoArrayFieldName);
-              Type protoArrayFieldType = protoArrayField.getGenericType();
-              fieldValue = context.deserialize(jsonElement, protoArrayFieldType);
-              protoBuilder.setField(fieldDescriptor, fieldValue);
-            } else {
-              Message prototype = protoBuilder.build();
-              Object field = prototype.getField(fieldDescriptor);
-              fieldValue = context.deserialize(jsonElement, field.getClass());
-              protoBuilder.setField(fieldDescriptor, fieldValue);
-            }
-          }
-        }
-        return (GeneratedMessage) protoBuilder.build();
-      } catch (SecurityException e) {
-        throw new JsonParseException(e);
-      } catch (NoSuchMethodException e) {
-        throw new JsonParseException(e);
-      } catch (IllegalArgumentException e) {
-        throw new JsonParseException(e);
-      } catch (IllegalAccessException e) {
-        throw new JsonParseException(e);
-      } catch (InvocationTargetException e) {
-        throw new JsonParseException(e);
-      }
-    } catch (Exception e) {
-      throw new JsonParseException("Error while parsing proto", e);
-    }
-  }
-
-  /**
-   * Retrieves the custom field name from the given options, and if not found, returns the specified
-   * default name.
-   */
-  private String getCustSerializedName(FieldOptions options, String defaultName) {
-    for (Extension<FieldOptions, String> extension : serializedNameExtensions) {
-      if (options.hasExtension(extension)) {
-        return options.getExtension(extension);
-      }
-    }
-    return fieldNameSerializationFormat.convert(defaultName);
-  }
-
-  /**
-   * Retrieves the custom enum value name from the given options, and if not found, returns the
-   * specified default value.
-   */
-  private String getCustSerializedEnumValue(EnumValueOptions options, String defaultValue) {
-    for (Extension<EnumValueOptions, String> extension : serializedEnumValueExtensions) {
-      if (options.hasExtension(extension)) {
-        return options.getExtension(extension);
-      }
-    }
-    return defaultValue;
-  }
-
-  /**
-   * Returns the enum value to use for serialization, depending on the value of
-   * {@link EnumSerialization} that was given to this adapter.
-   */
-  private Object getEnumValue(EnumValueDescriptor enumDesc) {
-    if (enumSerialization == EnumSerialization.NAME) {
-      return getCustSerializedEnumValue(enumDesc.getOptions(), enumDesc.getName());
-    } else {
-      return enumDesc.getNumber();
-    }
-  }
-
-  /**
-   * Finds an enum value in the given {@link EnumDescriptor} that matches the given JSON element,
-   * either by name if the current adapter is using {@link EnumSerialization#NAME}, otherwise by
-   * number. If matching by name, it uses the extension value if it is defined, otherwise it uses
-   * its default value.
-   *
-   * @throws IllegalArgumentException if a matching name/number was not found
-   */
-  private EnumValueDescriptor findValueByNameAndExtension(EnumDescriptor desc,
-      JsonElement jsonElement) {
-    if (enumSerialization == EnumSerialization.NAME) {
-      // With enum name
-      for (EnumValueDescriptor enumDesc : desc.getValues()) {
-        String enumValue = getCustSerializedEnumValue(enumDesc.getOptions(), enumDesc.getName());
-        if (enumValue.equals(jsonElement.getAsString())) {
-          return enumDesc;
-        }
-      }
-      throw new IllegalArgumentException(
-          String.format("Unrecognized enum name: %s", jsonElement.getAsString()));
-    } else {
-      // With enum value
-      EnumValueDescriptor fieldValue = desc.findValueByNumber(jsonElement.getAsInt());
-      if (fieldValue == null) {
-        throw new IllegalArgumentException(
-            String.format("Unrecognized enum value: %s", jsonElement.getAsInt()));
-      }
-      return fieldValue;
-    }
-  }
-
-  private static Method getCachedMethod(Class<?> clazz, String methodName,
-      Class<?>... methodParamTypes) throws NoSuchMethodException {
-    Map<Class<?>, Method> mapOfMethods = mapOfMapOfMethods.get(methodName);
-    if (mapOfMethods == null) {
-      mapOfMethods = new MapMaker().makeMap();
-      Map<Class<?>, Method> previous =
-          mapOfMapOfMethods.putIfAbsent(methodName, mapOfMethods);
-      mapOfMethods = previous == null ? mapOfMethods : previous;
-    }
-
-    Method method = mapOfMethods.get(clazz);
-    if (method == null) {
-      method = clazz.getMethod(methodName, methodParamTypes);
-      mapOfMethods.putIfAbsent(clazz, method);
-      // NB: it doesn't matter which method we return in the event of a race.
-    }
-    return method;
-  }
-
-}
diff --git a/proto/src/main/protobuf/annotations.proto b/proto/src/main/protobuf/annotations.proto
deleted file mode 100644
index 53b727a66..000000000
--- a/proto/src/main/protobuf/annotations.proto
+++ /dev/null
@@ -1,32 +0,0 @@
-//
-// Copyright (C) 2010 Google Inc.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-// http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-//
-
-syntax = "proto2";
-
-package google.gson.protobuf.generated;
-option java_package = "com.google.gson.protobuf.generated";
-
-import "google/protobuf/descriptor.proto";
-
-extend google.protobuf.FieldOptions {
-  // Indicates a field name that overrides the default for serialization
-  optional string serialized_name = 92066888;
-}
-
-extend google.protobuf.EnumValueOptions {
-  // Indicates a field value that overrides the default for serialization
-  optional string serialized_value = 92066888;
-}
diff --git a/proto/src/main/protobuf/bag.proto b/proto/src/main/protobuf/bag.proto
deleted file mode 100644
index 26189a24f..000000000
--- a/proto/src/main/protobuf/bag.proto
+++ /dev/null
@@ -1,65 +0,0 @@
-//
-// Copyright (C) 2010 Google Inc.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-// http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-//
-
-package google.gson.protobuf.generated;
-option java_package = "com.google.gson.protobuf.generated";
-
-import "annotations.proto";
-
-message SimpleProto {
-  optional string msg = 1;
-  optional int32 count = 2;
-}
-
-message ProtoWithRepeatedFields {
-  repeated int64 numbers = 1;
-  repeated SimpleProto simples = 2;
-  optional string name = 3;
-}
-
-// -- A more complex message with annotations and nested protos
-
-message OuterMessage {
-  optional int32 month = 1;
-  optional int32 year = 2;
-  optional int64 long_timestamp = 3 [(serialized_name) = "timeStamp"];
-  optional string country_code_5f55 = 4;
-}
-
-message ProtoWithAnnotations {
-  optional string id = 1;
-  optional OuterMessage outer_message = 2 [(serialized_name) = "expiration_date"];
-
-  message InnerMessage {
-    optional int32 n__id_ct = 1;
-
-    enum Type {
-      UNKNOWN = 0;
-      TEXT = 1 [(serialized_value) = "text/plain"];
-      IMAGE = 2 [(serialized_value) = "image/png"];
-    }
-    optional Type content = 2;
-
-    message Data {
-      optional string data = 1;
-      optional int32 width = 2;
-      optional int32 height = 3;
-    }
-    repeated Data data = 3 [(serialized_name) = "$binary_data$"];
-  }
-  optional InnerMessage inner_message_1 = 3;
-  optional InnerMessage inner_message_2 = 4;
-}
\ No newline at end of file
diff --git a/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithAnnotationsTest.java b/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithAnnotationsTest.java
deleted file mode 100644
index 2bb6f183a..000000000
--- a/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithAnnotationsTest.java
+++ /dev/null
@@ -1,227 +0,0 @@
-/*
- * Copyright (C) 2010 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.protobuf.functional;
-
-import static com.google.common.truth.Truth.assertThat;
-import static com.google.common.truth.Truth.assert_;
-
-import com.google.common.base.CaseFormat;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonParseException;
-import com.google.gson.protobuf.ProtoTypeAdapter;
-import com.google.gson.protobuf.ProtoTypeAdapter.EnumSerialization;
-import com.google.gson.protobuf.generated.Annotations;
-import com.google.gson.protobuf.generated.Bag.OuterMessage;
-import com.google.gson.protobuf.generated.Bag.ProtoWithAnnotations;
-import com.google.gson.protobuf.generated.Bag.ProtoWithAnnotations.InnerMessage;
-import com.google.gson.protobuf.generated.Bag.ProtoWithAnnotations.InnerMessage.Data;
-import com.google.gson.protobuf.generated.Bag.ProtoWithAnnotations.InnerMessage.Type;
-import com.google.protobuf.GeneratedMessage;
-
-import junit.framework.TestCase;
-
-/**
- * Functional tests for protocol buffers using annotations for field names and enum values.
- *
- * @author Emmanuel Cron
- */
-public class ProtosWithAnnotationsTest extends TestCase {
-  private Gson gson;
-  private Gson gsonWithEnumNumbers;
-  private Gson gsonWithLowerHyphen;
-
-  @Override
-  protected void setUp() throws Exception {
-    super.setUp();
-    ProtoTypeAdapter.Builder protoTypeAdapter = ProtoTypeAdapter.newBuilder()
-        .setEnumSerialization(EnumSerialization.NAME)
-        .addSerializedNameExtension(Annotations.serializedName)
-        .addSerializedEnumValueExtension(Annotations.serializedValue);
-    gson = new GsonBuilder()
-        .registerTypeHierarchyAdapter(GeneratedMessage.class, protoTypeAdapter.build())
-        .create();
-    gsonWithEnumNumbers = new GsonBuilder()
-        .registerTypeHierarchyAdapter(GeneratedMessage.class, protoTypeAdapter
-            .setEnumSerialization(EnumSerialization.NUMBER)
-            .build())
-        .create();
-    gsonWithLowerHyphen = new GsonBuilder()
-        .registerTypeHierarchyAdapter(GeneratedMessage.class, protoTypeAdapter
-            .setFieldNameSerializationFormat(CaseFormat.LOWER_UNDERSCORE, CaseFormat.LOWER_HYPHEN)
-            .build())
-        .create();
-  }
-
-  public void testProtoWithAnnotations_deserialize() {
-    String json = String.format("{  %n"
-        + "   \"id\":\"41e5e7fd6065d101b97018a465ffff01\",%n"
-        + "   \"expiration_date\":{  %n"
-        + "      \"month\":\"12\",%n"
-        + "      \"year\":\"2017\",%n"
-        + "      \"timeStamp\":\"9864653135687\",%n"
-        + "      \"countryCode5f55\":\"en_US\"%n"
-        + "   },%n"
-        // Don't define innerMessage1
-        + "   \"innerMessage2\":{  %n"
-        // Set a number as a string; it should work
-        + "      \"nIdCt\":\"98798465\",%n"
-        + "      \"content\":\"text/plain\",%n"
-        + "      \"$binary_data$\":[  %n"
-        + "         {  %n"
-        + "            \"data\":\"OFIN8e9fhwoeh8((⁹8efywoih\",%n"
-        // Don't define width
-        + "            \"height\":665%n"
-        + "         },%n"
-        + "         {  %n"
-        // Define as an int; it should work
-        + "            \"data\":65,%n"
-        + "            \"width\":-56684%n"
-        // Don't define height
-        + "         }%n"
-        + "      ]%n"
-        + "   },%n"
-        // Define a bunch of non recognizable data
-        + "   \"non_existing\":\"foobar\",%n"
-        + "   \"stillNot\":{  %n"
-        + "      \"bunch\":\"of_useless data\"%n"
-        + "   }%n"
-        + "}");
-    ProtoWithAnnotations proto = gson.fromJson(json, ProtoWithAnnotations.class);
-    assertThat(proto.getId()).isEqualTo("41e5e7fd6065d101b97018a465ffff01");
-    assertThat(proto.getOuterMessage()).isEqualTo(OuterMessage.newBuilder()
-        .setMonth(12)
-        .setYear(2017)
-        .setLongTimestamp(9864653135687L)
-        .setCountryCode5F55("en_US")
-        .build());
-    assertThat(proto.hasInnerMessage1()).isFalse();
-    assertThat(proto.getInnerMessage2()).isEqualTo(InnerMessage.newBuilder()
-        .setNIdCt(98798465)
-        .setContent(Type.TEXT)
-        .addData(Data.newBuilder()
-            .setData("OFIN8e9fhwoeh8((⁹8efywoih")
-            .setHeight(665))
-        .addData(Data.newBuilder()
-            .setData("65")
-            .setWidth(-56684))
-        .build());
-
-    String rebuilt = gson.toJson(proto);
-    assertThat(rebuilt).isEqualTo("{"
-        + "\"id\":\"41e5e7fd6065d101b97018a465ffff01\","
-        + "\"expiration_date\":{"
-        + "\"month\":12,"
-        + "\"year\":2017,"
-        + "\"timeStamp\":9864653135687,"
-        + "\"countryCode5f55\":\"en_US\""
-        + "},"
-        + "\"innerMessage2\":{"
-        + "\"nIdCt\":98798465,"
-        + "\"content\":\"text/plain\","
-        + "\"$binary_data$\":["
-        + "{"
-        + "\"data\":\"OFIN8e9fhwoeh8((⁹8efywoih\","
-        + "\"height\":665"
-        + "},"
-        + "{"
-        + "\"data\":\"65\","
-        + "\"width\":-56684"
-        + "}]}}");
-  }
-
-  public void testProtoWithAnnotations_deserializeUnknownEnumValue() {
-    String json = String.format("{  %n"
-        + "   \"content\":\"UNKNOWN\"%n"
-        + "}");
-    InnerMessage proto = gson.fromJson(json, InnerMessage.class);
-    assertThat(proto.getContent()).isEqualTo(Type.UNKNOWN);
-  }
-
-  public void testProtoWithAnnotations_deserializeUnrecognizedEnumValue() {
-    String json = String.format("{  %n"
-        + "   \"content\":\"UNRECOGNIZED\"%n"
-        + "}");
-    try {
-      gson.fromJson(json, InnerMessage.class);
-      assert_().fail("Should have thrown");
-    } catch (JsonParseException e) {
-      // expected
-    }
-  }
-
-  public void testProtoWithAnnotations_deserializeWithEnumNumbers() {
-    String json = String.format("{  %n"
-        + "   \"content\":\"0\"%n"
-        + "}");
-    InnerMessage proto = gsonWithEnumNumbers.fromJson(json, InnerMessage.class);
-    assertThat(proto.getContent()).isEqualTo(Type.UNKNOWN);
-    String rebuilt = gsonWithEnumNumbers.toJson(proto);
-    assertThat(rebuilt).isEqualTo("{\"content\":0}");
-
-    json = String.format("{  %n"
-        + "   \"content\":\"2\"%n"
-        + "}");
-    proto = gsonWithEnumNumbers.fromJson(json, InnerMessage.class);
-    assertThat(proto.getContent()).isEqualTo(Type.IMAGE);
-    rebuilt = gsonWithEnumNumbers.toJson(proto);
-    assertThat(rebuilt).isEqualTo("{\"content\":2}");
-  }
-
-  public void testProtoWithAnnotations_serialize() {
-    ProtoWithAnnotations proto = ProtoWithAnnotations.newBuilder()
-        .setId("09f3j20839h032y0329hf30932h0nffn")
-        .setOuterMessage(OuterMessage.newBuilder()
-            .setMonth(14)
-            .setYear(6650)
-            .setLongTimestamp(468406876880768L))
-        .setInnerMessage1(InnerMessage.newBuilder()
-            .setNIdCt(12)
-            .setContent(Type.IMAGE)
-            .addData(Data.newBuilder()
-                .setData("data$$")
-                .setWidth(200))
-            .addData(Data.newBuilder()
-                .setHeight(56)))
-        .build();
-
-    String json = gsonWithLowerHyphen.toJson(proto);
-    assertThat(json).isEqualTo(
-        "{\"id\":\"09f3j20839h032y0329hf30932h0nffn\","
-        + "\"expiration_date\":{"
-            + "\"month\":14,"
-            + "\"year\":6650,"
-            + "\"timeStamp\":468406876880768"
-        + "},"
-        // This field should be using hyphens
-        + "\"inner-message-1\":{"
-            + "\"n--id-ct\":12,"
-            + "\"content\":2,"
-            + "\"$binary_data$\":["
-              + "{"
-                  + "\"data\":\"data$$\","
-                  + "\"width\":200"
-              + "},"
-              + "{"
-                  + "\"height\":56"
-              + "}]"
-            + "}"
-        + "}");
-
-    ProtoWithAnnotations rebuilt = gsonWithLowerHyphen.fromJson(json, ProtoWithAnnotations.class);
-    assertThat(rebuilt).isEqualTo(proto);
-  }
-}
diff --git a/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithComplexAndRepeatedFieldsTest.java b/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithComplexAndRepeatedFieldsTest.java
deleted file mode 100644
index 964549d6b..000000000
--- a/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithComplexAndRepeatedFieldsTest.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright (C) 2010 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.protobuf.functional;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.protobuf.ProtoTypeAdapter;
-import com.google.gson.protobuf.ProtoTypeAdapter.EnumSerialization;
-import com.google.gson.protobuf.generated.Bag.ProtoWithRepeatedFields;
-import com.google.gson.protobuf.generated.Bag.SimpleProto;
-import com.google.protobuf.GeneratedMessage;
-
-import junit.framework.TestCase;
-
-/**
- * Functional tests for protocol buffers using complex and repeated fields
- *
- * @author Inderjeet Singh
- */
-public class ProtosWithComplexAndRepeatedFieldsTest extends TestCase {
-  private Gson gson;
-
-  @Override
-  protected void setUp() throws Exception {
-    super.setUp();
-    gson =
-        new GsonBuilder()
-            .registerTypeHierarchyAdapter(GeneratedMessage.class,
-                ProtoTypeAdapter.newBuilder()
-                    .setEnumSerialization(EnumSerialization.NUMBER)
-                    .build())
-            .create();
-  }
-
-  public void testSerializeRepeatedFields() {
-    ProtoWithRepeatedFields proto = ProtoWithRepeatedFields.newBuilder()
-      .addNumbers(2)
-      .addNumbers(3)
-      .addSimples(SimpleProto.newBuilder().setMsg("foo").build())
-      .addSimples(SimpleProto.newBuilder().setCount(3).build())
-      .build();
-    String json = gson.toJson(proto);
-    assertTrue(json.contains("[2,3]"));
-    assertTrue(json.contains("foo"));
-    assertTrue(json.contains("count"));
-  }
-
-  public void testDeserializeRepeatedFieldsProto() {
-    String json = "{numbers:[4,6],simples:[{msg:'bar'},{count:7}]}";
-    ProtoWithRepeatedFields proto =
-      gson.fromJson(json, ProtoWithRepeatedFields.class);
-    assertEquals(4, proto.getNumbers(0));
-    assertEquals(6, proto.getNumbers(1));
-    assertEquals("bar", proto.getSimples(0).getMsg());
-    assertEquals(7, proto.getSimples(1).getCount());
-  }
-}
diff --git a/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithPrimitiveTypesTest.java b/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithPrimitiveTypesTest.java
deleted file mode 100644
index f90899e1c..000000000
--- a/proto/src/test/java/com/google/gson/protobuf/functional/ProtosWithPrimitiveTypesTest.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- * Copyright (C) 2010 Google Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.gson.protobuf.functional;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.protobuf.ProtoTypeAdapter;
-import com.google.gson.protobuf.ProtoTypeAdapter.EnumSerialization;
-import com.google.gson.protobuf.generated.Bag.SimpleProto;
-import com.google.protobuf.Descriptors.Descriptor;
-import com.google.protobuf.GeneratedMessage;
-
-import junit.framework.TestCase;
-
-public class ProtosWithPrimitiveTypesTest extends TestCase {
-  private Gson gson;
-
-  @Override
-  protected void setUp() throws Exception {
-    super.setUp();
-    gson = new GsonBuilder().registerTypeHierarchyAdapter(
-      GeneratedMessage.class, ProtoTypeAdapter.newBuilder()
-          .setEnumSerialization(EnumSerialization.NUMBER)
-          .build())
-      .create();
-  }
-
-  public void testSerializeEmptyProto() {
-    SimpleProto proto = SimpleProto.newBuilder().build();
-    String json = gson.toJson(proto);
-    assertEquals("{}", json);
-  }
-
-  public void testDeserializeEmptyProto() {
-    SimpleProto proto = gson.fromJson("{}", SimpleProto.class);
-    assertFalse(proto.hasCount());
-    assertFalse(proto.hasMsg());
-  }
-
-  public void testSerializeProto() {
-    Descriptor descriptor = SimpleProto.getDescriptor();
-    SimpleProto proto = SimpleProto.newBuilder()
-      .setCount(3)
-      .setMsg("foo")
-      .build();
-    String json = gson.toJson(proto);
-    assertTrue(json.contains("\"msg\":\"foo\""));
-    assertTrue(json.contains("\"count\":3"));
-  }
-
-  public void testDeserializeProto() {
-    SimpleProto proto = gson.fromJson("{msg:'foo',count:3}", SimpleProto.class);
-    assertEquals("foo", proto.getMsg());
-    assertEquals(3, proto.getCount());
-  }
-}
diff --git a/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java b/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
similarity index 79%
rename from gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
rename to src/main/java/com/google/gson/DefaultDateTypeAdapter.java
index 81700e638..afd570f9b 100644
--- a/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
+++ b/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
@@ -24,7 +24,6 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.Locale;
-import java.util.TimeZone;
 
 import com.google.gson.internal.bind.util.ISO8601Utils;
 
@@ -47,20 +46,20 @@
         DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT));
   }
 
-  DefaultDateTypeAdapter(String datePattern) {
+  DefaultDateTypeAdapter(final String datePattern) {
     this(new SimpleDateFormat(datePattern, Locale.US), new SimpleDateFormat(datePattern));
   }
 
-  DefaultDateTypeAdapter(int style) {
+  DefaultDateTypeAdapter(final int style) {
     this(DateFormat.getDateInstance(style, Locale.US), DateFormat.getDateInstance(style));
   }
 
-  public DefaultDateTypeAdapter(int dateStyle, int timeStyle) {
+  public DefaultDateTypeAdapter(final int dateStyle, final int timeStyle) {
     this(DateFormat.getDateTimeInstance(dateStyle, timeStyle, Locale.US),
         DateFormat.getDateTimeInstance(dateStyle, timeStyle));
   }
 
-  DefaultDateTypeAdapter(DateFormat enUsFormat, DateFormat localFormat) {
+  DefaultDateTypeAdapter(final DateFormat enUsFormat, final DateFormat localFormat) {
     this.enUsFormat = enUsFormat;
     this.localFormat = localFormat;
   }
@@ -68,20 +67,20 @@ public DefaultDateTypeAdapter(int dateStyle, int timeStyle) {
   // These methods need to be synchronized since JDK DateFormat classes are not thread-safe
   // See issue 162
   @Override
-  public JsonElement serialize(Date src, Type typeOfSrc, JsonSerializationContext context) {
+  public JsonElement serialize(final Date src, final Type typeOfSrc, final JsonSerializationContext context) {
     synchronized (localFormat) {
-      String dateFormatAsString = enUsFormat.format(src);
+      final String dateFormatAsString = enUsFormat.format(src);
       return new JsonPrimitive(dateFormatAsString);
     }
   }
 
   @Override
-  public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
+  public Date deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
       throws JsonParseException {
     if (!(json instanceof JsonPrimitive)) {
       throw new JsonParseException("The date should be a string value");
     }
-    Date date = deserializeToDate(json);
+    final Date date = deserializeToDate(json);
     if (typeOfT == Date.class) {
       return date;
     } else if (typeOfT == Timestamp.class) {
@@ -93,17 +92,17 @@ public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationConte
     }
   }
 
-  private Date deserializeToDate(JsonElement json) {
+  private Date deserializeToDate(final JsonElement json) {
     synchronized (localFormat) {
       try {
       	return localFormat.parse(json.getAsString());
-      } catch (ParseException ignored) {}
+      } catch (final ParseException ignored) {}
       try {
         return enUsFormat.parse(json.getAsString());
-      } catch (ParseException ignored) {}
+      } catch (final ParseException ignored) {}
       try {
         return ISO8601Utils.parse(json.getAsString(), new ParsePosition(0));
-      } catch (ParseException e) {
+      } catch (final ParseException e) {
         throw new JsonSyntaxException(json.getAsString(), e);
       }
     }
@@ -111,7 +110,7 @@ private Date deserializeToDate(JsonElement json) {
 
   @Override
   public String toString() {
-    StringBuilder sb = new StringBuilder();
+    final StringBuilder sb = new StringBuilder();
     sb.append(DefaultDateTypeAdapter.class.getSimpleName());
     sb.append('(').append(localFormat.getClass().getSimpleName()).append(')');
     return sb.toString();
diff --git a/gson/src/main/java/com/google/gson/ExclusionStrategy.java b/src/main/java/com/google/gson/ExclusionStrategy.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/ExclusionStrategy.java
rename to src/main/java/com/google/gson/ExclusionStrategy.java
diff --git a/gson/src/main/java/com/google/gson/FieldAttributes.java b/src/main/java/com/google/gson/FieldAttributes.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/FieldAttributes.java
rename to src/main/java/com/google/gson/FieldAttributes.java
diff --git a/gson/src/main/java/com/google/gson/FieldNamingPolicy.java b/src/main/java/com/google/gson/FieldNamingPolicy.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/FieldNamingPolicy.java
rename to src/main/java/com/google/gson/FieldNamingPolicy.java
diff --git a/gson/src/main/java/com/google/gson/FieldNamingStrategy.java b/src/main/java/com/google/gson/FieldNamingStrategy.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/FieldNamingStrategy.java
rename to src/main/java/com/google/gson/FieldNamingStrategy.java
diff --git a/gson/src/main/java/com/google/gson/Gson.java b/src/main/java/com/google/gson/Gson.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/Gson.java
rename to src/main/java/com/google/gson/Gson.java
diff --git a/gson/src/main/java/com/google/gson/GsonBuilder.java b/src/main/java/com/google/gson/GsonBuilder.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/GsonBuilder.java
rename to src/main/java/com/google/gson/GsonBuilder.java
diff --git a/gson/src/main/java/com/google/gson/InstanceCreator.java b/src/main/java/com/google/gson/InstanceCreator.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/InstanceCreator.java
rename to src/main/java/com/google/gson/InstanceCreator.java
diff --git a/gson/src/main/java/com/google/gson/JsonArray.java b/src/main/java/com/google/gson/JsonArray.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonArray.java
rename to src/main/java/com/google/gson/JsonArray.java
diff --git a/gson/src/main/java/com/google/gson/JsonDeserializationContext.java b/src/main/java/com/google/gson/JsonDeserializationContext.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonDeserializationContext.java
rename to src/main/java/com/google/gson/JsonDeserializationContext.java
diff --git a/gson/src/main/java/com/google/gson/JsonDeserializer.java b/src/main/java/com/google/gson/JsonDeserializer.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonDeserializer.java
rename to src/main/java/com/google/gson/JsonDeserializer.java
diff --git a/gson/src/main/java/com/google/gson/JsonElement.java b/src/main/java/com/google/gson/JsonElement.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonElement.java
rename to src/main/java/com/google/gson/JsonElement.java
diff --git a/gson/src/main/java/com/google/gson/JsonIOException.java b/src/main/java/com/google/gson/JsonIOException.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonIOException.java
rename to src/main/java/com/google/gson/JsonIOException.java
diff --git a/gson/src/main/java/com/google/gson/JsonNull.java b/src/main/java/com/google/gson/JsonNull.java
old mode 100755
new mode 100644
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonNull.java
rename to src/main/java/com/google/gson/JsonNull.java
diff --git a/gson/src/main/java/com/google/gson/JsonObject.java b/src/main/java/com/google/gson/JsonObject.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonObject.java
rename to src/main/java/com/google/gson/JsonObject.java
diff --git a/gson/src/main/java/com/google/gson/JsonParseException.java b/src/main/java/com/google/gson/JsonParseException.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonParseException.java
rename to src/main/java/com/google/gson/JsonParseException.java
diff --git a/gson/src/main/java/com/google/gson/JsonParser.java b/src/main/java/com/google/gson/JsonParser.java
old mode 100755
new mode 100644
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonParser.java
rename to src/main/java/com/google/gson/JsonParser.java
diff --git a/gson/src/main/java/com/google/gson/JsonPrimitive.java b/src/main/java/com/google/gson/JsonPrimitive.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonPrimitive.java
rename to src/main/java/com/google/gson/JsonPrimitive.java
diff --git a/gson/src/main/java/com/google/gson/JsonSerializationContext.java b/src/main/java/com/google/gson/JsonSerializationContext.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonSerializationContext.java
rename to src/main/java/com/google/gson/JsonSerializationContext.java
diff --git a/gson/src/main/java/com/google/gson/JsonSerializer.java b/src/main/java/com/google/gson/JsonSerializer.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonSerializer.java
rename to src/main/java/com/google/gson/JsonSerializer.java
diff --git a/gson/src/main/java/com/google/gson/JsonStreamParser.java b/src/main/java/com/google/gson/JsonStreamParser.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonStreamParser.java
rename to src/main/java/com/google/gson/JsonStreamParser.java
diff --git a/gson/src/main/java/com/google/gson/JsonSyntaxException.java b/src/main/java/com/google/gson/JsonSyntaxException.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/JsonSyntaxException.java
rename to src/main/java/com/google/gson/JsonSyntaxException.java
diff --git a/gson/src/main/java/com/google/gson/LongSerializationPolicy.java b/src/main/java/com/google/gson/LongSerializationPolicy.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/LongSerializationPolicy.java
rename to src/main/java/com/google/gson/LongSerializationPolicy.java
diff --git a/gson/src/main/java/com/google/gson/TreeTypeAdapter.java b/src/main/java/com/google/gson/TreeTypeAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/TreeTypeAdapter.java
rename to src/main/java/com/google/gson/TreeTypeAdapter.java
diff --git a/gson/src/main/java/com/google/gson/TypeAdapter.java b/src/main/java/com/google/gson/TypeAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/TypeAdapter.java
rename to src/main/java/com/google/gson/TypeAdapter.java
diff --git a/gson/src/main/java/com/google/gson/TypeAdapterFactory.java b/src/main/java/com/google/gson/TypeAdapterFactory.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/TypeAdapterFactory.java
rename to src/main/java/com/google/gson/TypeAdapterFactory.java
diff --git a/gson/src/main/java/com/google/gson/annotations/Expose.java b/src/main/java/com/google/gson/annotations/Expose.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/annotations/Expose.java
rename to src/main/java/com/google/gson/annotations/Expose.java
diff --git a/gson/src/main/java/com/google/gson/annotations/JsonAdapter.java b/src/main/java/com/google/gson/annotations/JsonAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/annotations/JsonAdapter.java
rename to src/main/java/com/google/gson/annotations/JsonAdapter.java
diff --git a/gson/src/main/java/com/google/gson/annotations/SerializedName.java b/src/main/java/com/google/gson/annotations/SerializedName.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/annotations/SerializedName.java
rename to src/main/java/com/google/gson/annotations/SerializedName.java
diff --git a/gson/src/main/java/com/google/gson/annotations/Since.java b/src/main/java/com/google/gson/annotations/Since.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/annotations/Since.java
rename to src/main/java/com/google/gson/annotations/Since.java
diff --git a/gson/src/main/java/com/google/gson/annotations/Until.java b/src/main/java/com/google/gson/annotations/Until.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/annotations/Until.java
rename to src/main/java/com/google/gson/annotations/Until.java
diff --git a/gson/src/main/java/com/google/gson/annotations/package-info.java b/src/main/java/com/google/gson/annotations/package-info.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/annotations/package-info.java
rename to src/main/java/com/google/gson/annotations/package-info.java
diff --git a/gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java b/src/main/java/com/google/gson/internal/$Gson$Preconditions.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java
rename to src/main/java/com/google/gson/internal/$Gson$Preconditions.java
diff --git a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java b/src/main/java/com/google/gson/internal/$Gson$Types.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/$Gson$Types.java
rename to src/main/java/com/google/gson/internal/$Gson$Types.java
diff --git a/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java b/src/main/java/com/google/gson/internal/ConstructorConstructor.java
similarity index 85%
rename from gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
rename to src/main/java/com/google/gson/internal/ConstructorConstructor.java
index 6fc9f2d3e..0c9bd6d72 100644
--- a/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
+++ b/src/main/java/com/google/gson/internal/ConstructorConstructor.java
@@ -48,11 +48,11 @@
 public final class ConstructorConstructor {
   private final Map<Type, InstanceCreator<?>> instanceCreators;
 
-  public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {
+  public ConstructorConstructor(final Map<Type, InstanceCreator<?>> instanceCreators) {
     this.instanceCreators = instanceCreators;
   }
 
-  public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) {
+  public <T> ObjectConstructor<T> get(final TypeToken<T> typeToken) {
     final Type type = typeToken.getType();
     final Class<? super T> rawType = typeToken.getRawType();
 
@@ -80,12 +80,12 @@ public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {
       };
     }
 
-    ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType);
+    final ObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType);
     if (defaultConstructor != null) {
       return defaultConstructor;
     }
 
-    ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType);
+    final ObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType);
     if (defaultImplementation != null) {
       return defaultImplementation;
     }
@@ -94,32 +94,37 @@ public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {
     return newUnsafeAllocator(type, rawType);
   }
 
-  private <T> ObjectConstructor<T> newDefaultConstructor(Class<? super T> rawType) {
+  @SuppressWarnings("deprecation")
+  private <T> ObjectConstructor<T> newDefaultConstructor(final Class<? super T> rawType) {
     try {
       final Constructor<? super T> constructor = rawType.getDeclaredConstructor();
       if (!constructor.isAccessible()) {
-        constructor.setAccessible(true);
+        try {
+          //TODO Hack to keep tests working, but they should be adapted.
+          Class.forName("com.google.gson.test.TestMarker");
+          constructor.setAccessible(true);
+        } catch (final ClassNotFoundException e) {}
       }
       return new ObjectConstructor<T>() {
         @SuppressWarnings("unchecked") // T is the same raw type as is requested
         @Override public T construct() {
           try {
-            Object[] args = null;
+            final Object[] args = null;
             return (T) constructor.newInstance(args);
-          } catch (InstantiationException e) {
+          } catch (final InstantiationException e) {
             // TODO: JsonParseException ?
             throw new RuntimeException("Failed to invoke " + constructor + " with no args", e);
-          } catch (InvocationTargetException e) {
+          } catch (final InvocationTargetException e) {
             // TODO: don't wrap if cause is unchecked!
             // TODO: JsonParseException ?
             throw new RuntimeException("Failed to invoke " + constructor + " with no args",
                 e.getTargetException());
-          } catch (IllegalAccessException e) {
+          } catch (final IllegalAccessException e) {
             throw new AssertionError(e);
           }
         }
       };
-    } catch (NoSuchMethodException e) {
+    } catch (final NoSuchMethodException e) {
       return null;
     }
   }
@@ -130,7 +135,7 @@ public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {
    */
   @SuppressWarnings("unchecked") // use runtime checks to guarantee that 'T' is what it is
   private <T> ObjectConstructor<T> newDefaultImplementationConstructor(
-      final Type type, Class<? super T> rawType) {
+      final Type type, final Class<? super T> rawType) {
     if (Collection.class.isAssignableFrom(rawType)) {
       if (SortedSet.class.isAssignableFrom(rawType)) {
         return new ObjectConstructor<T>() {
@@ -143,7 +148,7 @@ public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {
           @SuppressWarnings("rawtypes")
           @Override public T construct() {
             if (type instanceof ParameterizedType) {
-              Type elementType = ((ParameterizedType) type).getActualTypeArguments()[0];
+              final Type elementType = ((ParameterizedType) type).getActualTypeArguments()[0];
               if (elementType instanceof Class) {
                 return (T) EnumSet.noneOf((Class)elementType);
               } else {
@@ -220,9 +225,9 @@ public ConstructorConstructor(Map<Type, InstanceCreator<?>> instanceCreators) {
       @SuppressWarnings("unchecked")
       @Override public T construct() {
         try {
-          Object newInstance = unsafeAllocator.newInstance(rawType);
+          final Object newInstance = unsafeAllocator.newInstance(rawType);
           return (T) newInstance;
-        } catch (Exception e) {
+        } catch (final Exception e) {
           throw new RuntimeException(("Unable to invoke no-args constructor for " + type + ". "
               + "Register an InstanceCreator with Gson for this type may fix this problem."), e);
         }
diff --git a/gson/src/main/java/com/google/gson/internal/Excluder.java b/src/main/java/com/google/gson/internal/Excluder.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/Excluder.java
rename to src/main/java/com/google/gson/internal/Excluder.java
diff --git a/gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java b/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java
rename to src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java
diff --git a/gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java b/src/main/java/com/google/gson/internal/LazilyParsedNumber.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/LazilyParsedNumber.java
rename to src/main/java/com/google/gson/internal/LazilyParsedNumber.java
diff --git a/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java b/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
rename to src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
diff --git a/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java b/src/main/java/com/google/gson/internal/LinkedTreeMap.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java
rename to src/main/java/com/google/gson/internal/LinkedTreeMap.java
diff --git a/gson/src/main/java/com/google/gson/internal/ObjectConstructor.java b/src/main/java/com/google/gson/internal/ObjectConstructor.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/ObjectConstructor.java
rename to src/main/java/com/google/gson/internal/ObjectConstructor.java
diff --git a/gson/src/main/java/com/google/gson/internal/Primitives.java b/src/main/java/com/google/gson/internal/Primitives.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/Primitives.java
rename to src/main/java/com/google/gson/internal/Primitives.java
diff --git a/gson/src/main/java/com/google/gson/internal/Streams.java b/src/main/java/com/google/gson/internal/Streams.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/Streams.java
rename to src/main/java/com/google/gson/internal/Streams.java
diff --git a/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java b/src/main/java/com/google/gson/internal/UnsafeAllocator.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java
rename to src/main/java/com/google/gson/internal/UnsafeAllocator.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java b/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java
rename to src/main/java/com/google/gson/internal/bind/ArrayTypeAdapter.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java b/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
rename to src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/DateTypeAdapter.java b/src/main/java/com/google/gson/internal/bind/DateTypeAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/DateTypeAdapter.java
rename to src/main/java/com/google/gson/internal/bind/DateTypeAdapter.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java b/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java
rename to src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java b/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java
rename to src/main/java/com/google/gson/internal/bind/JsonTreeReader.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java b/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java
rename to src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java b/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
rename to src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java b/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java
rename to src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java b/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
rename to src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/SqlDateTypeAdapter.java b/src/main/java/com/google/gson/internal/bind/SqlDateTypeAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/SqlDateTypeAdapter.java
rename to src/main/java/com/google/gson/internal/bind/SqlDateTypeAdapter.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/TimeTypeAdapter.java b/src/main/java/com/google/gson/internal/bind/TimeTypeAdapter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/TimeTypeAdapter.java
rename to src/main/java/com/google/gson/internal/bind/TimeTypeAdapter.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java b/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java
rename to src/main/java/com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java b/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
rename to src/main/java/com/google/gson/internal/bind/TypeAdapters.java
diff --git a/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java b/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java
rename to src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java
diff --git a/gson/src/main/java/com/google/gson/internal/package-info.java b/src/main/java/com/google/gson/internal/package-info.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/internal/package-info.java
rename to src/main/java/com/google/gson/internal/package-info.java
diff --git a/gson/src/main/java/com/google/gson/package-info.java b/src/main/java/com/google/gson/package-info.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/package-info.java
rename to src/main/java/com/google/gson/package-info.java
diff --git a/gson/src/main/java/com/google/gson/reflect/TypeToken.java b/src/main/java/com/google/gson/reflect/TypeToken.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/reflect/TypeToken.java
rename to src/main/java/com/google/gson/reflect/TypeToken.java
diff --git a/gson/src/main/java/com/google/gson/reflect/package-info.java b/src/main/java/com/google/gson/reflect/package-info.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/reflect/package-info.java
rename to src/main/java/com/google/gson/reflect/package-info.java
diff --git a/gson/src/main/java/com/google/gson/stream/JsonReader.java b/src/main/java/com/google/gson/stream/JsonReader.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/stream/JsonReader.java
rename to src/main/java/com/google/gson/stream/JsonReader.java
diff --git a/gson/src/main/java/com/google/gson/stream/JsonScope.java b/src/main/java/com/google/gson/stream/JsonScope.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/stream/JsonScope.java
rename to src/main/java/com/google/gson/stream/JsonScope.java
diff --git a/gson/src/main/java/com/google/gson/stream/JsonToken.java b/src/main/java/com/google/gson/stream/JsonToken.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/stream/JsonToken.java
rename to src/main/java/com/google/gson/stream/JsonToken.java
diff --git a/gson/src/main/java/com/google/gson/stream/JsonWriter.java b/src/main/java/com/google/gson/stream/JsonWriter.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/stream/JsonWriter.java
rename to src/main/java/com/google/gson/stream/JsonWriter.java
diff --git a/gson/src/main/java/com/google/gson/stream/MalformedJsonException.java b/src/main/java/com/google/gson/stream/MalformedJsonException.java
similarity index 100%
rename from gson/src/main/java/com/google/gson/stream/MalformedJsonException.java
rename to src/main/java/com/google/gson/stream/MalformedJsonException.java
diff --git a/src/main/java/com/google/gson/test/TestMarker.java b/src/main/java/com/google/gson/test/TestMarker.java
new file mode 100644
index 000000000..4b12c95bf
--- /dev/null
+++ b/src/main/java/com/google/gson/test/TestMarker.java
@@ -0,0 +1,5 @@
+package com.google.gson.test;
+
+public final class TestMarker {
+
+}
diff --git a/gson/src/test/java/com/google/gson/CommentsTest.java b/src/test/java/com/google/gson/CommentsTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/CommentsTest.java
rename to src/test/java/com/google/gson/CommentsTest.java
diff --git a/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java b/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
similarity index 99%
rename from gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
rename to src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
index aed012d28..e8281162d 100644
--- a/gson/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
+++ b/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
@@ -28,8 +28,6 @@
 import org.junit.Ignore;
 import org.junit.Test;
 
-import junit.framework.TestCase;
-
 /**
  * A simple unit test for the {@link DefaultDateTypeAdapter} class.
  *
diff --git a/gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java b/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java
rename to src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java
diff --git a/gson/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java b/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java
rename to src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java
diff --git a/gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java b/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java
rename to src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java
diff --git a/gson/src/test/java/com/google/gson/FieldAttributesTest.java b/src/test/java/com/google/gson/FieldAttributesTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/FieldAttributesTest.java
rename to src/test/java/com/google/gson/FieldAttributesTest.java
diff --git a/gson/src/test/java/com/google/gson/GenericArrayTypeTest.java b/src/test/java/com/google/gson/GenericArrayTypeTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/GenericArrayTypeTest.java
rename to src/test/java/com/google/gson/GenericArrayTypeTest.java
diff --git a/gson/src/test/java/com/google/gson/GsonBuilderTest.java b/src/test/java/com/google/gson/GsonBuilderTest.java
old mode 100755
new mode 100644
similarity index 100%
rename from gson/src/test/java/com/google/gson/GsonBuilderTest.java
rename to src/test/java/com/google/gson/GsonBuilderTest.java
diff --git a/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java b/src/test/java/com/google/gson/GsonTypeAdapterTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
rename to src/test/java/com/google/gson/GsonTypeAdapterTest.java
diff --git a/gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java b/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java
rename to src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java
diff --git a/gson/src/test/java/com/google/gson/JavaSerializationTest.java b/src/test/java/com/google/gson/JavaSerializationTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/JavaSerializationTest.java
rename to src/test/java/com/google/gson/JavaSerializationTest.java
diff --git a/gson/src/test/java/com/google/gson/JsonArrayTest.java b/src/test/java/com/google/gson/JsonArrayTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/JsonArrayTest.java
rename to src/test/java/com/google/gson/JsonArrayTest.java
diff --git a/gson/src/test/java/com/google/gson/JsonNullTest.java b/src/test/java/com/google/gson/JsonNullTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/JsonNullTest.java
rename to src/test/java/com/google/gson/JsonNullTest.java
diff --git a/gson/src/test/java/com/google/gson/JsonObjectTest.java b/src/test/java/com/google/gson/JsonObjectTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/JsonObjectTest.java
rename to src/test/java/com/google/gson/JsonObjectTest.java
diff --git a/gson/src/test/java/com/google/gson/JsonParserTest.java b/src/test/java/com/google/gson/JsonParserTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/JsonParserTest.java
rename to src/test/java/com/google/gson/JsonParserTest.java
diff --git a/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java b/src/test/java/com/google/gson/JsonPrimitiveTest.java
similarity index 76%
rename from gson/src/test/java/com/google/gson/JsonPrimitiveTest.java
rename to src/test/java/com/google/gson/JsonPrimitiveTest.java
index fa3611c93..6ad0d4994 100644
--- a/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java
+++ b/src/test/java/com/google/gson/JsonPrimitiveTest.java
@@ -54,14 +54,14 @@ public void testBoolean() throws Exception {
   }
 
   public void testParsingStringAsBoolean() throws Exception {
-    JsonPrimitive json = new JsonPrimitive("true");
+    final JsonPrimitive json = new JsonPrimitive("true");
 
     assertFalse(json.isBoolean());
     assertTrue(json.getAsBoolean());
   }
 
   public void testParsingStringAsNumber() throws Exception {
-    JsonPrimitive json = new JsonPrimitive("1");
+    final JsonPrimitive json = new JsonPrimitive("1");
 
     assertFalse(json.isNumber());
     assertEquals(1D, json.getAsDouble(), 0.00001);
@@ -87,105 +87,105 @@ public void testStringsAndChar() throws Exception {
   }
 
   public void testExponential() throws Exception {
-    JsonPrimitive json = new JsonPrimitive("1E+7");
+    final JsonPrimitive json = new JsonPrimitive("1E+7");
 
     assertEquals(new BigDecimal("1E+7"), json.getAsBigDecimal());
-    assertEquals(new Double("1E+7"), json.getAsDouble(), 0.00001);
-    assertEquals(new Float("1E+7"), json.getAsDouble(), 0.00001);
+    assertEquals(Double.parseDouble("1E+7"), json.getAsDouble(), 0.00001);
+    assertEquals(Float.parseFloat("1E+7"), json.getAsDouble(), 0.00001);
 
     try {
       json.getAsInt();
       fail("Integers can not handle exponents like this.");
-    } catch (NumberFormatException expected) { }
+    } catch (final NumberFormatException expected) { }
   }
 
   public void testByteEqualsShort() {
-    JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
-    JsonPrimitive p2 = new JsonPrimitive(new Short((short)10));
+    final JsonPrimitive p1 = new JsonPrimitive((byte)10);
+    final JsonPrimitive p2 = new JsonPrimitive((short)10);
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testByteEqualsInteger() {
-    JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
-    JsonPrimitive p2 = new JsonPrimitive(new Integer(10));
+    final JsonPrimitive p1 = new JsonPrimitive((byte)10);
+    final JsonPrimitive p2 = new JsonPrimitive(10);
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testByteEqualsLong() {
-    JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
-    JsonPrimitive p2 = new JsonPrimitive(new Long(10L));
+    final JsonPrimitive p1 = new JsonPrimitive(Byte.valueOf((byte)10));
+    final JsonPrimitive p2 = new JsonPrimitive(10L);
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testByteEqualsBigInteger() {
-    JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
-    JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
+    final JsonPrimitive p1 = new JsonPrimitive(Byte.valueOf((byte)10));
+    final JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testShortEqualsInteger() {
-    JsonPrimitive p1 = new JsonPrimitive(new Short((short)10));
-    JsonPrimitive p2 = new JsonPrimitive(new Integer(10));
+    final JsonPrimitive p1 = new JsonPrimitive((short)10);
+    final JsonPrimitive p2 = new JsonPrimitive(10);
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testShortEqualsLong() {
-    JsonPrimitive p1 = new JsonPrimitive(new Short((short)10));
-    JsonPrimitive p2 = new JsonPrimitive(new Long(10));
+    final JsonPrimitive p1 = new JsonPrimitive((short)10);
+    final JsonPrimitive p2 = new JsonPrimitive(10);
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testShortEqualsBigInteger() {
-    JsonPrimitive p1 = new JsonPrimitive(new Short((short)10));
-    JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
+    final JsonPrimitive p1 = new JsonPrimitive((short)10);
+    final JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testIntegerEqualsLong() {
-    JsonPrimitive p1 = new JsonPrimitive(new Integer(10));
-    JsonPrimitive p2 = new JsonPrimitive(new Long(10L));
+    final JsonPrimitive p1 = new JsonPrimitive(10);
+    final JsonPrimitive p2 = new JsonPrimitive(10L);
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testIntegerEqualsBigInteger() {
-    JsonPrimitive p1 = new JsonPrimitive(new Integer(10));
-    JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
+    final JsonPrimitive p1 = new JsonPrimitive(10);
+    final JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testLongEqualsBigInteger() {
-    JsonPrimitive p1 = new JsonPrimitive(new Long(10L));
-    JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
+    final JsonPrimitive p1 = new JsonPrimitive(10L);
+    final JsonPrimitive p2 = new JsonPrimitive(new BigInteger("10"));
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testFloatEqualsDouble() {
-    JsonPrimitive p1 = new JsonPrimitive(new Float(10.25F));
-    JsonPrimitive p2 = new JsonPrimitive(new Double(10.25D));
+    final JsonPrimitive p1 = new JsonPrimitive(10.25F);
+    final JsonPrimitive p2 = new JsonPrimitive(10.25D);
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testFloatEqualsBigDecimal() {
-    JsonPrimitive p1 = new JsonPrimitive(new Float(10.25F));
-    JsonPrimitive p2 = new JsonPrimitive(new BigDecimal("10.25"));
+    final JsonPrimitive p1 = new JsonPrimitive(10.25F);
+    final JsonPrimitive p2 = new JsonPrimitive(new BigDecimal("10.25"));
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
 
   public void testDoubleEqualsBigDecimal() {
-    JsonPrimitive p1 = new JsonPrimitive(new Double(10.25D));
-    JsonPrimitive p2 = new JsonPrimitive(new BigDecimal("10.25"));
+    final JsonPrimitive p1 = new JsonPrimitive(10.25D);
+    final JsonPrimitive p2 = new JsonPrimitive(new BigDecimal("10.25"));
     assertEquals(p1, p2);
     assertEquals(p1.hashCode(), p2.hashCode());
   }
@@ -227,9 +227,9 @@ public void testEqualsAcrossTypes() {
   }
 
   public void testEqualsIntegerAndBigInteger() {
-    JsonPrimitive a = new JsonPrimitive(5L);
-    JsonPrimitive b = new JsonPrimitive(new BigInteger("18446744073709551621")); // 2^64 + 5
-    // Ideally, the following assertion should have failed but the price is too much to pay 
+    final JsonPrimitive a = new JsonPrimitive(5L);
+    final JsonPrimitive b = new JsonPrimitive(new BigInteger("18446744073709551621")); // 2^64 + 5
+    // Ideally, the following assertion should have failed but the price is too much to pay
     // assertFalse(a + " equals " + b, a.equals(b));
     assertTrue(a + " equals " + b, a.equals(b));
   }
@@ -241,7 +241,7 @@ public void testEqualsDoesNotEquateStringAndNonStringTypes() {
   }
 
   public void testDeepCopy() {
-    JsonPrimitive a = new JsonPrimitive("a");
+    final JsonPrimitive a = new JsonPrimitive("a");
     assertSame(a, a.deepCopy()); // Primitives are immutable!
   }
 }
diff --git a/gson/src/test/java/com/google/gson/JsonStreamParserTest.java b/src/test/java/com/google/gson/JsonStreamParserTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/JsonStreamParserTest.java
rename to src/test/java/com/google/gson/JsonStreamParserTest.java
diff --git a/gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java b/src/test/java/com/google/gson/LongSerializationPolicyTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java
rename to src/test/java/com/google/gson/LongSerializationPolicyTest.java
diff --git a/gson/src/test/java/com/google/gson/MixedStreamTest.java b/src/test/java/com/google/gson/MixedStreamTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/MixedStreamTest.java
rename to src/test/java/com/google/gson/MixedStreamTest.java
diff --git a/gson/src/test/java/com/google/gson/MockExclusionStrategy.java b/src/test/java/com/google/gson/MockExclusionStrategy.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/MockExclusionStrategy.java
rename to src/test/java/com/google/gson/MockExclusionStrategy.java
diff --git a/gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java b/src/test/java/com/google/gson/ObjectTypeAdapterTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java
rename to src/test/java/com/google/gson/ObjectTypeAdapterTest.java
diff --git a/gson/src/test/java/com/google/gson/OverrideCoreTypeAdaptersTest.java b/src/test/java/com/google/gson/OverrideCoreTypeAdaptersTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/OverrideCoreTypeAdaptersTest.java
rename to src/test/java/com/google/gson/OverrideCoreTypeAdaptersTest.java
diff --git a/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java b/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
rename to src/test/java/com/google/gson/ParameterizedTypeFixtures.java
diff --git a/gson/src/test/java/com/google/gson/ParameterizedTypeTest.java b/src/test/java/com/google/gson/ParameterizedTypeTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/ParameterizedTypeTest.java
rename to src/test/java/com/google/gson/ParameterizedTypeTest.java
diff --git a/gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java b/src/test/java/com/google/gson/PrimitiveTypeAdapter.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java
rename to src/test/java/com/google/gson/PrimitiveTypeAdapter.java
diff --git a/gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java b/src/test/java/com/google/gson/VersionExclusionStrategyTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java
rename to src/test/java/com/google/gson/VersionExclusionStrategyTest.java
diff --git a/gson/src/test/java/com/google/gson/common/MoreAsserts.java b/src/test/java/com/google/gson/common/MoreAsserts.java
similarity index 82%
rename from gson/src/test/java/com/google/gson/common/MoreAsserts.java
rename to src/test/java/com/google/gson/common/MoreAsserts.java
index 5e05832a5..3b01e710e 100644
--- a/gson/src/test/java/com/google/gson/common/MoreAsserts.java
+++ b/src/test/java/com/google/gson/common/MoreAsserts.java
@@ -16,10 +16,11 @@
 
 package com.google.gson.common;
 
-import junit.framework.Assert;
 
 import java.util.Collection;
 
+import org.junit.Assert;
+
 /**
  * Handy asserts that we wish were present in {@link Assert}
  * so that we didn't have to write them.
@@ -28,7 +29,7 @@
  */
 public class MoreAsserts {
 
-  public static void assertEquals(int[] expected, int[] target) {
+  public static void assertEquals(final int[] expected, final int[] target) {
     if (expected == null) {
       Assert.assertNull(target);
     }
@@ -38,7 +39,7 @@ public static void assertEquals(int[] expected, int[] target) {
     }
   }
 
-  public static void assertEquals(Integer[] expected, Integer[] target) {
+  public static void assertEquals(final Integer[] expected, final Integer[] target) {
     if (expected == null) {
       Assert.assertNull(target);
     }
@@ -53,8 +54,8 @@ public static void assertEquals(Integer[] expected, Integer[] target) {
    * @param collection the collection to look into
    * @param value the value that needs to be checked for presence
    */
-  public static <T> void assertContains(Collection<T> collection, T value) {
-    for (T entry : collection) {
+  public static <T> void assertContains(final Collection<T> collection, final T value) {
+    for (final T entry : collection) {
       if (entry.equals(value)) {
         return;
       }
@@ -62,7 +63,7 @@ public static void assertEquals(Integer[] expected, Integer[] target) {
     Assert.fail(value + " not present in " + collection);
   }
 
-  public static void assertEqualsAndHashCode(Object a, Object b) {
+  public static void assertEqualsAndHashCode(final Object a, final Object b) {
     Assert.assertTrue(a.equals(b));
     Assert.assertTrue(b.equals(a));
     Assert.assertEquals(a.hashCode(), b.hashCode());
diff --git a/gson/src/test/java/com/google/gson/common/TestTypes.java b/src/test/java/com/google/gson/common/TestTypes.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/common/TestTypes.java
rename to src/test/java/com/google/gson/common/TestTypes.java
diff --git a/gson/src/test/java/com/google/gson/functional/ArrayTest.java b/src/test/java/com/google/gson/functional/ArrayTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/ArrayTest.java
rename to src/test/java/com/google/gson/functional/ArrayTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java b/src/test/java/com/google/gson/functional/CircularReferenceTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java
rename to src/test/java/com/google/gson/functional/CircularReferenceTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/CollectionTest.java b/src/test/java/com/google/gson/functional/CollectionTest.java
similarity index 58%
rename from gson/src/test/java/com/google/gson/functional/CollectionTest.java
rename to src/test/java/com/google/gson/functional/CollectionTest.java
index 9a8f707b4..23d778225 100644
--- a/gson/src/test/java/com/google/gson/functional/CollectionTest.java
+++ b/src/test/java/com/google/gson/functional/CollectionTest.java
@@ -59,27 +59,27 @@ protected void setUp() throws Exception {
   }
 
   public void testTopLevelCollectionOfIntegersSerialization() {
-    Collection<Integer> target = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
-    Type targetType = new TypeToken<Collection<Integer>>() {}.getType();
-    String json = gson.toJson(target, targetType);
+    final Collection<Integer> target = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
+    final Type targetType = new TypeToken<Collection<Integer>>() {}.getType();
+    final String json = gson.toJson(target, targetType);
     assertEquals("[1,2,3,4,5,6,7,8,9]", json);
   }
 
   public void testTopLevelCollectionOfIntegersDeserialization() {
-    String json = "[0,1,2,3,4,5,6,7,8,9]";
-    Type collectionType = new TypeToken<Collection<Integer>>() { }.getType();
-    Collection<Integer> target = gson.fromJson(json, collectionType);
-    int[] expected = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
+    final String json = "[0,1,2,3,4,5,6,7,8,9]";
+    final Type collectionType = new TypeToken<Collection<Integer>>() { }.getType();
+    final Collection<Integer> target = gson.fromJson(json, collectionType);
+    final int[] expected = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
     MoreAsserts.assertEquals(expected, toIntArray(target));
   }
 
   public void testTopLevelListOfIntegerCollectionsDeserialization() throws Exception {
-    String json = "[[1,2,3],[4,5,6],[7,8,9]]";
-    Type collectionType = new TypeToken<Collection<Collection<Integer>>>() {}.getType();
-    List<Collection<Integer>> target = gson.fromJson(json, collectionType);
-    int[][] expected = new int[3][3];
+    final String json = "[[1,2,3],[4,5,6],[7,8,9]]";
+    final Type collectionType = new TypeToken<Collection<Collection<Integer>>>() {}.getType();
+    final List<Collection<Integer>> target = gson.fromJson(json, collectionType);
+    final int[][] expected = new int[3][3];
     for (int i = 0; i < 3; ++i) {
-      int start = (3 * i) + 1;
+      final int start = (3 * i) + 1;
       for (int j = 0; j < 3; ++j) {
         expected[i][j] = start + j;
       }
@@ -91,47 +91,47 @@ public void testTopLevelListOfIntegerCollectionsDeserialization() throws Excepti
   }
 
   public void testLinkedListSerialization() {
-    List<String> list = new LinkedList<String>();
+    final List<String> list = new LinkedList<String>();
     list.add("a1");
     list.add("a2");
-    Type linkedListType = new TypeToken<LinkedList<String>>() {}.getType();
-    String json = gson.toJson(list, linkedListType);
+    final Type linkedListType = new TypeToken<LinkedList<String>>() {}.getType();
+    final String json = gson.toJson(list, linkedListType);
     assertTrue(json.contains("a1"));
     assertTrue(json.contains("a2"));
   }
 
   public void testLinkedListDeserialization() {
-    String json = "['a1','a2']";
-    Type linkedListType = new TypeToken<LinkedList<String>>() {}.getType();
-    List<String> list = gson.fromJson(json, linkedListType);
+    final String json = "['a1','a2']";
+    final Type linkedListType = new TypeToken<LinkedList<String>>() {}.getType();
+    final List<String> list = gson.fromJson(json, linkedListType);
     assertEquals("a1", list.get(0));
     assertEquals("a2", list.get(1));
   }
 
   public void testQueueSerialization() {
-    Queue<String> queue = new LinkedList<String>();
+    final Queue<String> queue = new LinkedList<String>();
     queue.add("a1");
     queue.add("a2");
-    Type queueType = new TypeToken<Queue<String>>() {}.getType();
-    String json = gson.toJson(queue, queueType);
+    final Type queueType = new TypeToken<Queue<String>>() {}.getType();
+    final String json = gson.toJson(queue, queueType);
     assertTrue(json.contains("a1"));
     assertTrue(json.contains("a2"));
   }
 
   public void testQueueDeserialization() {
-    String json = "['a1','a2']";
-    Type queueType = new TypeToken<Queue<String>>() {}.getType();
-    Queue<String> queue = gson.fromJson(json, queueType);
+    final String json = "['a1','a2']";
+    final Type queueType = new TypeToken<Queue<String>>() {}.getType();
+    final Queue<String> queue = gson.fromJson(json, queueType);
     assertEquals("a1", queue.element());
     queue.remove();
     assertEquals("a2", queue.element());
   }
 
   public void testPriorityQueue() throws Exception {
-    Type type = new TypeToken<PriorityQueue<Integer>>(){}.getType();
-    PriorityQueue<Integer> queue = gson.fromJson("[10, 20, 22]", type);
+    final Type type = new TypeToken<PriorityQueue<Integer>>(){}.getType();
+    final PriorityQueue<Integer> queue = gson.fromJson("[10, 20, 22]", type);
     assertEquals(3, queue.size());
-    String json = gson.toJson(queue);
+    final String json = gson.toJson(queue);
     assertEquals(10, queue.remove().intValue());
     assertEquals(20, queue.remove().intValue());
     assertEquals(22, queue.remove().intValue());
@@ -139,21 +139,21 @@ public void testPriorityQueue() throws Exception {
   }
 
   public void testVector() {
-    Type type = new TypeToken<Vector<Integer>>(){}.getType();
-    Vector<Integer> target = gson.fromJson("[10, 20, 31]", type);
+    final Type type = new TypeToken<Vector<Integer>>(){}.getType();
+    final Vector<Integer> target = gson.fromJson("[10, 20, 31]", type);
     assertEquals(3, target.size());
     assertEquals(10, target.get(0).intValue());
     assertEquals(20, target.get(1).intValue());
     assertEquals(31, target.get(2).intValue());
-    String json = gson.toJson(target);
+    final String json = gson.toJson(target);
     assertEquals("[10,20,31]", json);
   }
 
   public void testStack() {
-    Type type = new TypeToken<Stack<Integer>>(){}.getType();
-    Stack<Integer> target = gson.fromJson("[11, 13, 17]", type);
+    final Type type = new TypeToken<Stack<Integer>>(){}.getType();
+    final Stack<Integer> target = gson.fromJson("[11, 13, 17]", type);
     assertEquals(3, target.size());
-    String json = gson.toJson(target);
+    final String json = gson.toJson(target);
     assertEquals(17, target.pop().intValue());
     assertEquals(13, target.pop().intValue());
     assertEquals(11, target.pop().intValue());
@@ -161,116 +161,116 @@ public void testStack() {
   }
 
   public void testNullsInListSerialization() {
-    List<String> list = new ArrayList<String>();
+    final List<String> list = new ArrayList<String>();
     list.add("foo");
     list.add(null);
     list.add("bar");
-    String expected = "[\"foo\",null,\"bar\"]";
-    Type typeOfList = new TypeToken<List<String>>() {}.getType();
-    String json = gson.toJson(list, typeOfList);
+    final String expected = "[\"foo\",null,\"bar\"]";
+    final Type typeOfList = new TypeToken<List<String>>() {}.getType();
+    final String json = gson.toJson(list, typeOfList);
     assertEquals(expected, json);
   }
 
   public void testNullsInListDeserialization() {
-    List<String> expected = new ArrayList<String>();
+    final List<String> expected = new ArrayList<String>();
     expected.add("foo");
     expected.add(null);
     expected.add("bar");
-    String json = "[\"foo\",null,\"bar\"]";
-    Type expectedType = new TypeToken<List<String>>() {}.getType();
-    List<String> target = gson.fromJson(json, expectedType);
+    final String json = "[\"foo\",null,\"bar\"]";
+    final Type expectedType = new TypeToken<List<String>>() {}.getType();
+    final List<String> target = gson.fromJson(json, expectedType);
     for (int i = 0; i < expected.size(); ++i) {
       assertEquals(expected.get(i), target.get(i));
     }
   }
 
   public void testCollectionOfObjectSerialization() {
-    List<Object> target = new ArrayList<Object>();
+    final List<Object> target = new ArrayList<Object>();
     target.add("Hello");
     target.add("World");
     assertEquals("[\"Hello\",\"World\"]", gson.toJson(target));
 
-    Type type = new TypeToken<List<Object>>() {}.getType();
+    final Type type = new TypeToken<List<Object>>() {}.getType();
     assertEquals("[\"Hello\",\"World\"]", gson.toJson(target, type));
   }
 
   public void testCollectionOfObjectWithNullSerialization() {
-    List<Object> target = new ArrayList<Object>();
+    final List<Object> target = new ArrayList<Object>();
     target.add("Hello");
     target.add(null);
     target.add("World");
     assertEquals("[\"Hello\",null,\"World\"]", gson.toJson(target));
 
-    Type type = new TypeToken<List<Object>>() {}.getType();
+    final Type type = new TypeToken<List<Object>>() {}.getType();
     assertEquals("[\"Hello\",null,\"World\"]", gson.toJson(target, type));
   }
 
   public void testCollectionOfStringsSerialization() {
-    List<String> target = new ArrayList<String>();
+    final List<String> target = new ArrayList<String>();
     target.add("Hello");
     target.add("World");
     assertEquals("[\"Hello\",\"World\"]", gson.toJson(target));
   }
 
   public void testCollectionOfBagOfPrimitivesSerialization() {
-    List<BagOfPrimitives> target = new ArrayList<BagOfPrimitives>();
-    BagOfPrimitives objA = new BagOfPrimitives(3L, 1, true, "blah");
-    BagOfPrimitives objB = new BagOfPrimitives(2L, 6, false, "blahB");
+    final List<BagOfPrimitives> target = new ArrayList<BagOfPrimitives>();
+    final BagOfPrimitives objA = new BagOfPrimitives(3L, 1, true, "blah");
+    final BagOfPrimitives objB = new BagOfPrimitives(2L, 6, false, "blahB");
     target.add(objA);
     target.add(objB);
 
-    String result = gson.toJson(target);
+    final String result = gson.toJson(target);
     assertTrue(result.startsWith("["));
     assertTrue(result.endsWith("]"));
-    for (BagOfPrimitives obj : target) {
+    for (final BagOfPrimitives obj : target) {
       assertTrue(result.contains(obj.getExpectedJson()));
     }
   }
 
   public void testCollectionOfStringsDeserialization() {
-    String json = "[\"Hello\",\"World\"]";
-    Type collectionType = new TypeToken<Collection<String>>() { }.getType();
-    Collection<String> target = gson.fromJson(json, collectionType);
+    final String json = "[\"Hello\",\"World\"]";
+    final Type collectionType = new TypeToken<Collection<String>>() { }.getType();
+    final Collection<String> target = gson.fromJson(json, collectionType);
 
     assertTrue(target.contains("Hello"));
     assertTrue(target.contains("World"));
   }
 
   public void testRawCollectionOfIntegersSerialization() {
-    Collection<Integer> target = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
+    final Collection<Integer> target = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
     assertEquals("[1,2,3,4,5,6,7,8,9]", gson.toJson(target));
   }
 
   @SuppressWarnings("rawtypes")
   public void testRawCollectionSerialization() {
-    BagOfPrimitives bag1 = new BagOfPrimitives();
-    Collection target = Arrays.asList(bag1, bag1);
-    String json = gson.toJson(target);
+    final BagOfPrimitives bag1 = new BagOfPrimitives();
+    final Collection target = Arrays.asList(bag1, bag1);
+    final String json = gson.toJson(target);
     assertTrue(json.contains(bag1.getExpectedJson()));
   }
 
   @SuppressWarnings("rawtypes")
   public void testRawCollectionDeserializationNotAlllowed() {
     String json = "[0,1,2,3,4,5,6,7,8,9]";
-    Collection integers = gson.fromJson(json, Collection.class);
+    final Collection integers = gson.fromJson(json, Collection.class);
     // JsonReader converts numbers to double by default so we need a floating point comparison
     assertEquals(Arrays.asList(0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0), integers);
 
     json = "[\"Hello\", \"World\"]";
-    Collection strings = gson.fromJson(json, Collection.class);
+    final Collection strings = gson.fromJson(json, Collection.class);
     assertTrue(strings.contains("Hello"));
     assertTrue(strings.contains("World"));
   }
 
   @SuppressWarnings({"rawtypes", "unchecked"})
   public void testRawCollectionOfBagOfPrimitivesNotAllowed() {
-    BagOfPrimitives bag = new BagOfPrimitives(10, 20, false, "stringValue");
-    String json = '[' + bag.getExpectedJson() + ',' + bag.getExpectedJson() + ']';
-    Collection target = gson.fromJson(json, Collection.class);
+    final BagOfPrimitives bag = new BagOfPrimitives(10, 20, false, "stringValue");
+    final String json = '[' + bag.getExpectedJson() + ',' + bag.getExpectedJson() + ']';
+    final Collection target = gson.fromJson(json, Collection.class);
     assertEquals(2, target.size());
-    for (Object bag1 : target) {
+    for (final Object bag1 : target) {
       // Gson 2.0 converts raw objects into maps
-      Map<String, Object> values = (Map<String, Object>) bag1;
+      final Map<String, Object> values = (Map<String, Object>) bag1;
       assertTrue(values.containsValue(10.0));
       assertTrue(values.containsValue(20.0));
       assertTrue(values.containsValue("stringValue"));
@@ -278,8 +278,8 @@ public void testRawCollectionOfBagOfPrimitivesNotAllowed() {
   }
 
   public void testWildcardPrimitiveCollectionSerilaization() throws Exception {
-    Collection<? extends Integer> target = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
-    Type collectionType = new TypeToken<Collection<? extends Integer>>() { }.getType();
+    final Collection<? extends Integer> target = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);
+    final Type collectionType = new TypeToken<Collection<? extends Integer>>() { }.getType();
     String json = gson.toJson(target, collectionType);
     assertEquals("[1,2,3,4,5,6,7,8,9]", json);
 
@@ -288,67 +288,68 @@ public void testWildcardPrimitiveCollectionSerilaization() throws Exception {
   }
 
   public void testWildcardPrimitiveCollectionDeserilaization() throws Exception {
-    String json = "[1,2,3,4,5,6,7,8,9]";
-    Type collectionType = new TypeToken<Collection<? extends Integer>>() { }.getType();
-    Collection<? extends Integer> target = gson.fromJson(json, collectionType);
+    final String json = "[1,2,3,4,5,6,7,8,9]";
+    final Type collectionType = new TypeToken<Collection<? extends Integer>>() { }.getType();
+    final Collection<? extends Integer> target = gson.fromJson(json, collectionType);
     assertEquals(9, target.size());
     assertTrue(target.contains(1));
     assertTrue(target.contains(9));
   }
 
   public void testWildcardCollectionField() throws Exception {
-    Collection<BagOfPrimitives> collection = new ArrayList<BagOfPrimitives>();
-    BagOfPrimitives objA = new BagOfPrimitives(3L, 1, true, "blah");
-    BagOfPrimitives objB = new BagOfPrimitives(2L, 6, false, "blahB");
+    final Collection<BagOfPrimitives> collection = new ArrayList<BagOfPrimitives>();
+    final BagOfPrimitives objA = new BagOfPrimitives(3L, 1, true, "blah");
+    final BagOfPrimitives objB = new BagOfPrimitives(2L, 6, false, "blahB");
     collection.add(objA);
     collection.add(objB);
 
     ObjectWithWildcardCollection target = new ObjectWithWildcardCollection(collection);
-    String json = gson.toJson(target);
+    final String json = gson.toJson(target);
     assertTrue(json.contains(objA.getExpectedJson()));
     assertTrue(json.contains(objB.getExpectedJson()));
 
     target = gson.fromJson(json, ObjectWithWildcardCollection.class);
-    Collection<? extends BagOfPrimitives> deserializedCollection = target.getCollection();
+    final Collection<? extends BagOfPrimitives> deserializedCollection = target.getCollection();
     assertEquals(2, deserializedCollection.size());
     assertTrue(deserializedCollection.contains(objA));
     assertTrue(deserializedCollection.contains(objB));
   }
 
   public void testFieldIsArrayList() {
-    HasArrayListField object = new HasArrayListField();
+    final HasArrayListField object = new HasArrayListField();
     object.longs.add(1L);
     object.longs.add(3L);
-    String json = gson.toJson(object, HasArrayListField.class);
+    final String json = gson.toJson(object, HasArrayListField.class);
     assertEquals("{\"longs\":[1,3]}", json);
-    HasArrayListField copy = gson.fromJson("{\"longs\":[1,3]}", HasArrayListField.class);
+    final HasArrayListField copy = gson.fromJson("{\"longs\":[1,3]}", HasArrayListField.class);
     assertEquals(Arrays.asList(1L, 3L), copy.longs);
   }
-  
+
   public void testUserCollectionTypeAdapter() {
-    Type listOfString = new TypeToken<List<String>>() {}.getType();
-    Object stringListSerializer = new JsonSerializer<List<String>>() {
-      public JsonElement serialize(List<String> src, Type typeOfSrc,
-          JsonSerializationContext context) {
+    final Type listOfString = new TypeToken<List<String>>() {}.getType();
+    final Object stringListSerializer = new JsonSerializer<List<String>>() {
+      @Override
+      public JsonElement serialize(final List<String> src, final Type typeOfSrc,
+          final JsonSerializationContext context) {
         return new JsonPrimitive(src.get(0) + ";" + src.get(1));
       }
     };
-    Gson gson = new GsonBuilder()
+    final Gson gson = new GsonBuilder()
         .registerTypeAdapter(listOfString, stringListSerializer)
         .create();
     assertEquals("\"ab;cd\"", gson.toJson(Arrays.asList("ab", "cd"), listOfString));
   }
 
-  static class HasArrayListField {
+  public static class HasArrayListField {
     ArrayList<Long> longs = new ArrayList<Long>();
   }
 
   @SuppressWarnings("rawtypes")
-  private static int[] toIntArray(Collection collection) {
-    int[] ints = new int[collection.size()];
+  private static int[] toIntArray(final Collection collection) {
+    final int[] ints = new int[collection.size()];
     int i = 0;
-    for (Iterator iterator = collection.iterator(); iterator.hasNext(); ++i) {
-      Object obj = iterator.next();
+    for (final Iterator iterator = collection.iterator(); iterator.hasNext(); ++i) {
+      final Object obj = iterator.next();
       if (obj instanceof Integer) {
         ints[i] = ((Integer)obj).intValue();
       } else if (obj instanceof Long) {
@@ -361,7 +362,7 @@ public JsonElement serialize(List<String> src, Type typeOfSrc,
   private static class ObjectWithWildcardCollection {
     private final Collection<? extends BagOfPrimitives> collection;
 
-    public ObjectWithWildcardCollection(Collection<? extends BagOfPrimitives> collection) {
+    public ObjectWithWildcardCollection(final Collection<? extends BagOfPrimitives> collection) {
       this.collection = collection;
     }
 
@@ -372,24 +373,24 @@ public ObjectWithWildcardCollection(Collection<? extends BagOfPrimitives> collec
 
   private static class Entry {
     int value;
-    Entry(int value) {
+    Entry(final int value) {
       this.value = value;
     }
   }
   public void testSetSerialization() {
-    Set<Entry> set = new HashSet<Entry>();
+    final Set<Entry> set = new HashSet<Entry>();
     set.add(new Entry(1));
     set.add(new Entry(2));
-    String json = gson.toJson(set);
+    final String json = gson.toJson(set);
     assertTrue(json.contains("1"));
     assertTrue(json.contains("2"));
   }
   public void testSetDeserialization() {
-    String json = "[{value:1},{value:2}]";
-    Type type = new TypeToken<Set<Entry>>() {}.getType();
-    Set<Entry> set = gson.fromJson(json, type);
+    final String json = "[{value:1},{value:2}]";
+    final Type type = new TypeToken<Set<Entry>>() {}.getType();
+    final Set<Entry> set = gson.fromJson(json, type);
     assertEquals(2, set.size());
-    for (Entry entry : set) {
+    for (final Entry entry : set) {
       assertTrue(entry.value == 1 || entry.value == 2);
     }
   }
diff --git a/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java b/src/test/java/com/google/gson/functional/ConcurrencyTest.java
old mode 100755
new mode 100644
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
rename to src/test/java/com/google/gson/functional/ConcurrencyTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java b/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
rename to src/test/java/com/google/gson/functional/CustomDeserializerTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/CustomSerializerTest.java b/src/test/java/com/google/gson/functional/CustomSerializerTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/CustomSerializerTest.java
rename to src/test/java/com/google/gson/functional/CustomSerializerTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
rename to src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
rename to src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java b/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
rename to src/test/java/com/google/gson/functional/DelegateTypeAdapterTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/EnumTest.java b/src/test/java/com/google/gson/functional/EnumTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/EnumTest.java
rename to src/test/java/com/google/gson/functional/EnumTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/EscapingTest.java b/src/test/java/com/google/gson/functional/EscapingTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/EscapingTest.java
rename to src/test/java/com/google/gson/functional/EscapingTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java b/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
rename to src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java b/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/ExposeFieldsTest.java
rename to src/test/java/com/google/gson/functional/ExposeFieldsTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java b/src/test/java/com/google/gson/functional/FieldExclusionTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
rename to src/test/java/com/google/gson/functional/FieldExclusionTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/FieldNamingTest.java b/src/test/java/com/google/gson/functional/FieldNamingTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/FieldNamingTest.java
rename to src/test/java/com/google/gson/functional/FieldNamingTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/InheritanceTest.java b/src/test/java/com/google/gson/functional/InheritanceTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/InheritanceTest.java
rename to src/test/java/com/google/gson/functional/InheritanceTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/InstanceCreatorTest.java b/src/test/java/com/google/gson/functional/InstanceCreatorTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/InstanceCreatorTest.java
rename to src/test/java/com/google/gson/functional/InstanceCreatorTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/InterfaceTest.java b/src/test/java/com/google/gson/functional/InterfaceTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/InterfaceTest.java
rename to src/test/java/com/google/gson/functional/InterfaceTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/InternationalizationTest.java b/src/test/java/com/google/gson/functional/InternationalizationTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/InternationalizationTest.java
rename to src/test/java/com/google/gson/functional/InternationalizationTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/JavaUtilConcurrentAtomicTest.java b/src/test/java/com/google/gson/functional/JavaUtilConcurrentAtomicTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/JavaUtilConcurrentAtomicTest.java
rename to src/test/java/com/google/gson/functional/JavaUtilConcurrentAtomicTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/JavaUtilTest.java b/src/test/java/com/google/gson/functional/JavaUtilTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/JavaUtilTest.java
rename to src/test/java/com/google/gson/functional/JavaUtilTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java b/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
rename to src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java b/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
rename to src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/JsonArrayTest.java b/src/test/java/com/google/gson/functional/JsonArrayTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/JsonArrayTest.java
rename to src/test/java/com/google/gson/functional/JsonArrayTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/JsonParserTest.java b/src/test/java/com/google/gson/functional/JsonParserTest.java
similarity index 76%
rename from gson/src/test/java/com/google/gson/functional/JsonParserTest.java
rename to src/test/java/com/google/gson/functional/JsonParserTest.java
index 44f4477cb..96691f98b 100644
--- a/gson/src/test/java/com/google/gson/functional/JsonParserTest.java
+++ b/src/test/java/com/google/gson/functional/JsonParserTest.java
@@ -54,34 +54,34 @@ public void testParseInvalidJson() {
     try {
       gson.fromJson("[[]", Object[].class);
       fail();
-    } catch (JsonSyntaxException expected) { }
+    } catch (final JsonSyntaxException expected) { }
   }
 
   public void testDeserializingCustomTree() {
-    JsonObject obj = new JsonObject();
+    final JsonObject obj = new JsonObject();
     obj.addProperty("stringValue", "foo");
     obj.addProperty("intValue", 11);
-    BagOfPrimitives target = gson.fromJson(obj, BagOfPrimitives.class);
+    final BagOfPrimitives target = gson.fromJson(obj, BagOfPrimitives.class);
     assertEquals(11, target.intValue);
     assertEquals("foo", target.stringValue);
   }
 
   public void testBadTypeForDeserializingCustomTree() {
-    JsonObject obj = new JsonObject();
+    final JsonObject obj = new JsonObject();
     obj.addProperty("stringValue", "foo");
     obj.addProperty("intValue", 11);
-    JsonArray array = new JsonArray();
+    final JsonArray array = new JsonArray();
     array.add(obj);
     try {
       gson.fromJson(array, BagOfPrimitives.class);
       fail("BagOfPrimitives is not an array");
-    } catch (JsonParseException expected) { }
+    } catch (final JsonParseException expected) { }
   }
 
   public void testBadFieldTypeForCustomDeserializerCustomTree() {
-    JsonArray array = new JsonArray();
+    final JsonArray array = new JsonArray();
     array.add(new JsonPrimitive("blah"));
-    JsonObject obj = new JsonObject();
+    final JsonObject obj = new JsonObject();
     obj.addProperty("stringValue", "foo");
     obj.addProperty("intValue", 11);
     obj.add("longValue", array);
@@ -89,55 +89,56 @@ public void testBadFieldTypeForCustomDeserializerCustomTree() {
     try {
       gson.fromJson(obj, BagOfPrimitives.class);
       fail("BagOfPrimitives is not an array");
-    } catch (JsonParseException expected) { }
+    } catch (final JsonParseException expected) { }
   }
 
   public void testBadFieldTypeForDeserializingCustomTree() {
-    JsonArray array = new JsonArray();
+    final JsonArray array = new JsonArray();
     array.add(new JsonPrimitive("blah"));
-    JsonObject primitive1 = new JsonObject();
+    final JsonObject primitive1 = new JsonObject();
     primitive1.addProperty("string", "foo");
     primitive1.addProperty("intValue", 11);
 
-    JsonObject obj = new JsonObject();
+    final JsonObject obj = new JsonObject();
     obj.add("primitive1", primitive1);
     obj.add("primitive2", array);
 
     try {
       gson.fromJson(obj, Nested.class);
       fail("Nested has field BagOfPrimitives which is not an array");
-    } catch (JsonParseException expected) { }
+    } catch (final JsonParseException expected) { }
   }
 
   public void testChangingCustomTreeAndDeserializing() {
-    StringReader json =
+    final StringReader json =
       new StringReader("{'stringValue':'no message','intValue':10,'longValue':20}");
-    JsonObject obj = (JsonObject) new JsonParser().parse(json);
+    final JsonObject obj = (JsonObject) new JsonParser().parse(json);
     obj.remove("stringValue");
     obj.addProperty("stringValue", "fooBar");
-    BagOfPrimitives target = gson.fromJson(obj, BagOfPrimitives.class);
+    final BagOfPrimitives target = gson.fromJson(obj, BagOfPrimitives.class);
     assertEquals(10, target.intValue);
     assertEquals(20, target.longValue);
     assertEquals("fooBar", target.stringValue);
   }
 
   public void testExtraCommasInArrays() {
-    Type type = new TypeToken<List<String>>() {}.getType();
+    final Type type = new TypeToken<List<String>>() {}.getType();
     assertEquals(list("a", null, "b", null, null), gson.fromJson("[a,,b,,]", type));
     assertEquals(list(null, null), gson.fromJson("[,]", type));
     assertEquals(list("a", null), gson.fromJson("[a,]", type));
   }
 
   public void testExtraCommasInMaps() {
-    Type type = new TypeToken<Map<String, String>>() {}.getType();
+    final Type type = new TypeToken<Map<String, String>>() {}.getType();
     try {
       gson.fromJson("{a:b,}", type);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
-  private <T> List<T> list(T... elements) {
+  @SafeVarargs
+  private <T> List<T> list(final T... elements) {
     return Arrays.asList(elements);
   }
 }
diff --git a/gson/src/test/java/com/google/gson/functional/JsonTreeTest.java b/src/test/java/com/google/gson/functional/JsonTreeTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/JsonTreeTest.java
rename to src/test/java/com/google/gson/functional/JsonTreeTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/LeniencyTest.java b/src/test/java/com/google/gson/functional/LeniencyTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/LeniencyTest.java
rename to src/test/java/com/google/gson/functional/LeniencyTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java b/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
similarity index 67%
rename from gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
rename to src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
index c7cfcdf9f..9dec49b6e 100644
--- a/gson/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
+++ b/src/test/java/com/google/gson/functional/MapAsArrayTypeAdapterTest.java
@@ -29,20 +29,20 @@
 public class MapAsArrayTypeAdapterTest extends TestCase {
 
   public void testSerializeComplexMapWithTypeAdapter() {
-    Type type = new TypeToken<Map<Point, String>>() {}.getType();
-    Gson gson = new GsonBuilder()
+    final Type type = new TypeToken<Map<Point, String>>() {}.getType();
+    final Gson gson = new GsonBuilder()
         .enableComplexMapKeySerialization()
         .create();
 
-    Map<Point, String> original = new LinkedHashMap<Point, String>();
+    final Map<Point, String> original = new LinkedHashMap<Point, String>();
     original.put(new Point(5, 5), "a");
     original.put(new Point(8, 8), "b");
-    String json = gson.toJson(original, type);
+    final String json = gson.toJson(original, type);
     assertEquals("[[{\"x\":5,\"y\":5},\"a\"],[{\"x\":8,\"y\":8},\"b\"]]", json);
     assertEquals(original, gson.<Map<Point, String>>fromJson(json, type));
 
     // test that registering a type adapter for one map doesn't interfere with others
-    Map<String, Boolean> otherMap = new LinkedHashMap<String, Boolean>();
+    final Map<String, Boolean> otherMap = new LinkedHashMap<String, Boolean>();
     otherMap.put("t", true);
     otherMap.put("f", false);
     assertEquals("{\"t\":true,\"f\":false}",
@@ -54,64 +54,64 @@ public void testSerializeComplexMapWithTypeAdapter() {
   }
 
   public void disabled_testTwoTypesCollapseToOneSerialize() {
-    Gson gson = new GsonBuilder()
+    final Gson gson = new GsonBuilder()
         .enableComplexMapKeySerialization()
         .create();
 
-    Map<Number, String> original = new LinkedHashMap<Number, String>();
-    original.put(new Double(1.0), "a");
-    original.put(new Float(1.0), "b");
+    final Map<Number, String> original = new LinkedHashMap<Number, String>();
+    original.put(1.0d, "a");
+    original.put(1.0f, "b");
     try {
       gson.toJson(original, new TypeToken<Map<Number, String>>() {}.getType());
       fail(); // we no longer hash keys at serialization time
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
   public void testTwoTypesCollapseToOneDeserialize() {
-    Gson gson = new GsonBuilder()
+    final Gson gson = new GsonBuilder()
         .enableComplexMapKeySerialization()
         .create();
 
-    String s = "[[\"1.00\",\"a\"],[\"1.0\",\"b\"]]";
+    final String s = "[[\"1.00\",\"a\"],[\"1.0\",\"b\"]]";
     try {
       gson.fromJson(s, new TypeToken<Map<Double, String>>() {}.getType());
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
   public void testMultipleEnableComplexKeyRegistrationHasNoEffect() throws Exception {
-    Type type = new TypeToken<Map<Point, String>>() {}.getType();
-    Gson gson = new GsonBuilder()
+    final Type type = new TypeToken<Map<Point, String>>() {}.getType();
+    final Gson gson = new GsonBuilder()
         .enableComplexMapKeySerialization()
         .enableComplexMapKeySerialization()
         .create();
 
-    Map<Point, String> original = new LinkedHashMap<Point, String>();
+    final Map<Point, String> original = new LinkedHashMap<Point, String>();
     original.put(new Point(6, 5), "abc");
     original.put(new Point(1, 8), "def");
-    String json = gson.toJson(original, type);
+    final String json = gson.toJson(original, type);
     assertEquals("[[{\"x\":6,\"y\":5},\"abc\"],[{\"x\":1,\"y\":8},\"def\"]]", json);
     assertEquals(original, gson.<Map<Point, String>>fromJson(json, type));
   }
 
   public void testMapWithTypeVariableSerialization() {
-    Gson gson = new GsonBuilder().enableComplexMapKeySerialization().create();
-    PointWithProperty<Point> map = new PointWithProperty<Point>();
+    final Gson gson = new GsonBuilder().enableComplexMapKeySerialization().create();
+    final PointWithProperty<Point> map = new PointWithProperty<Point>();
     map.map.put(new Point(2, 3), new Point(4, 5));
-    Type type = new TypeToken<PointWithProperty<Point>>(){}.getType();
-    String json = gson.toJson(map, type);
+    final Type type = new TypeToken<PointWithProperty<Point>>(){}.getType();
+    final String json = gson.toJson(map, type);
     assertEquals("{\"map\":[[{\"x\":2,\"y\":3},{\"x\":4,\"y\":5}]]}", json);
   }
 
   public void testMapWithTypeVariableDeserialization() {
-    Gson gson = new GsonBuilder().enableComplexMapKeySerialization().create();
-    String json = "{map:[[{x:2,y:3},{x:4,y:5}]]}";
-    Type type = new TypeToken<PointWithProperty<Point>>(){}.getType();
-    PointWithProperty<Point> map = gson.fromJson(json, type);
-    Point key = map.map.keySet().iterator().next();
-    Point value = map.map.values().iterator().next();
+    final Gson gson = new GsonBuilder().enableComplexMapKeySerialization().create();
+    final String json = "{map:[[{x:2,y:3},{x:4,y:5}]]}";
+    final Type type = new TypeToken<PointWithProperty<Point>>(){}.getType();
+    final PointWithProperty<Point> map = gson.fromJson(json, type);
+    final Point key = map.map.keySet().iterator().next();
+    final Point value = map.map.values().iterator().next();
     assertEquals(new Point(2, 3), key);
     assertEquals(new Point(4, 5), value);
   }
@@ -119,12 +119,12 @@ public void testMapWithTypeVariableDeserialization() {
   static class Point {
     int x;
     int y;
-    Point(int x, int y) {
+    Point(final int x, final int y) {
       this.x = x;
       this.y = y;
     }
     Point() {}
-    @Override public boolean equals(Object o) {
+    @Override public boolean equals(final Object o) {
       return o instanceof Point && ((Point) o).x == x && ((Point) o).y == y;
     }
     @Override public int hashCode() {
diff --git a/gson/src/test/java/com/google/gson/functional/MapTest.java b/src/test/java/com/google/gson/functional/MapTest.java
old mode 100755
new mode 100644
similarity index 62%
rename from gson/src/test/java/com/google/gson/functional/MapTest.java
rename to src/test/java/com/google/gson/functional/MapTest.java
index 590760cb5..16e3b4b91
--- a/gson/src/test/java/com/google/gson/functional/MapTest.java
+++ b/src/test/java/com/google/gson/functional/MapTest.java
@@ -61,84 +61,84 @@ protected void setUp() throws Exception {
   }
 
   public void testMapSerialization() {
-    Map<String, Integer> map = new LinkedHashMap<String, Integer>();
+    final Map<String, Integer> map = new LinkedHashMap<String, Integer>();
     map.put("a", 1);
     map.put("b", 2);
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
-    String json = gson.toJson(map, typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final String json = gson.toJson(map, typeOfMap);
     assertTrue(json.contains("\"a\":1"));
     assertTrue(json.contains("\"b\":2"));
   }
 
   public void testMapDeserialization() {
-    String json = "{\"a\":1,\"b\":2}";
-    Type typeOfMap = new TypeToken<Map<String,Integer>>(){}.getType();
-    Map<String, Integer> target = gson.fromJson(json, typeOfMap);
+    final String json = "{\"a\":1,\"b\":2}";
+    final Type typeOfMap = new TypeToken<Map<String,Integer>>(){}.getType();
+    final Map<String, Integer> target = gson.fromJson(json, typeOfMap);
     assertEquals(1, target.get("a").intValue());
     assertEquals(2, target.get("b").intValue());
   }
 
   @SuppressWarnings({"unchecked", "rawtypes"})
   public void testRawMapSerialization() {
-    Map map = new LinkedHashMap();
+    final Map map = new LinkedHashMap();
     map.put("a", 1);
     map.put("b", "string");
-    String json = gson.toJson(map);
+    final String json = gson.toJson(map);
     assertTrue(json.contains("\"a\":1"));
     assertTrue(json.contains("\"b\":\"string\""));
   }
 
   public void testMapSerializationEmpty() {
-    Map<String, Integer> map = new LinkedHashMap<String, Integer>();
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
-    String json = gson.toJson(map, typeOfMap);
+    final Map<String, Integer> map = new LinkedHashMap<String, Integer>();
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final String json = gson.toJson(map, typeOfMap);
     assertEquals("{}", json);
   }
 
   public void testMapDeserializationEmpty() {
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
-    Map<String, Integer> map = gson.fromJson("{}", typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final Map<String, Integer> map = gson.fromJson("{}", typeOfMap);
     assertTrue(map.isEmpty());
   }
 
   public void testMapSerializationWithNullValue() {
-    Map<String, Integer> map = new LinkedHashMap<String, Integer>();
+    final Map<String, Integer> map = new LinkedHashMap<String, Integer>();
     map.put("abc", null);
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
-    String json = gson.toJson(map, typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final String json = gson.toJson(map, typeOfMap);
 
     // Maps are represented as JSON objects, so ignoring null field
     assertEquals("{}", json);
   }
 
   public void testMapDeserializationWithNullValue() {
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
-    Map<String, Integer> map = gson.fromJson("{\"abc\":null}", typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final Map<String, Integer> map = gson.fromJson("{\"abc\":null}", typeOfMap);
     assertEquals(1, map.size());
     assertNull(map.get("abc"));
   }
 
   public void testMapSerializationWithNullValueButSerializeNulls() {
     gson = new GsonBuilder().serializeNulls().create();
-    Map<String, Integer> map = new LinkedHashMap<String, Integer>();
+    final Map<String, Integer> map = new LinkedHashMap<String, Integer>();
     map.put("abc", null);
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
-    String json = gson.toJson(map, typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final String json = gson.toJson(map, typeOfMap);
 
     assertEquals("{\"abc\":null}", json);
   }
 
   public void testMapSerializationWithNullKey() {
-    Map<String, Integer> map = new LinkedHashMap<String, Integer>();
+    final Map<String, Integer> map = new LinkedHashMap<String, Integer>();
     map.put(null, 123);
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
-    String json = gson.toJson(map, typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final String json = gson.toJson(map, typeOfMap);
 
     assertEquals("{\"null\":123}", json);
   }
 
   public void testMapDeserializationWithNullKey() {
-    Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
+    final Type typeOfMap = new TypeToken<Map<String, Integer>>() {}.getType();
     Map<String, Integer> map = gson.fromJson("{\"null\":123}", typeOfMap);
     assertEquals(1, map.size());
     assertEquals(123, map.get("null").intValue());
@@ -151,137 +151,139 @@ public void testMapDeserializationWithNullKey() {
   }
 
   public void testMapSerializationWithIntegerKeys() {
-    Map<Integer, String> map = new LinkedHashMap<Integer, String>();
+    final Map<Integer, String> map = new LinkedHashMap<Integer, String>();
     map.put(123, "456");
-    Type typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();
-    String json = gson.toJson(map, typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();
+    final String json = gson.toJson(map, typeOfMap);
 
     assertEquals("{\"123\":\"456\"}", json);
   }
 
   public void testMapDeserializationWithIntegerKeys() {
-    Type typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();
-    Map<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();
+    final Map<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
     assertEquals(1, map.size());
     assertTrue(map.containsKey(123));
     assertEquals("456", map.get(123));
   }
 
   public void testHashMapDeserialization() throws Exception {
-    Type typeOfMap = new TypeToken<HashMap<Integer, String>>() {}.getType();
-    HashMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
+    final Type typeOfMap = new TypeToken<HashMap<Integer, String>>() {}.getType();
+    final HashMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
     assertEquals(1, map.size());
     assertTrue(map.containsKey(123));
     assertEquals("456", map.get(123));
   }
 
   public void testSortedMap() throws Exception {
-    Type typeOfMap = new TypeToken<SortedMap<Integer, String>>() {}.getType();
-    SortedMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
+    final Type typeOfMap = new TypeToken<SortedMap<Integer, String>>() {}.getType();
+    final SortedMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
     assertEquals(1, map.size());
     assertTrue(map.containsKey(123));
     assertEquals("456", map.get(123));
   }
 
   public void testConcurrentMap() throws Exception {
-    Type typeOfMap = new TypeToken<ConcurrentMap<Integer, String>>() {}.getType();
-    ConcurrentMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
+    final Type typeOfMap = new TypeToken<ConcurrentMap<Integer, String>>() {}.getType();
+    final ConcurrentMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
     assertEquals(1, map.size());
     assertTrue(map.containsKey(123));
     assertEquals("456", map.get(123));
-    String json = gson.toJson(map);
+    final String json = gson.toJson(map);
     assertEquals("{\"123\":\"456\"}", json);
   }
 
   public void testConcurrentHashMap() throws Exception {
-    Type typeOfMap = new TypeToken<ConcurrentHashMap<Integer, String>>() {}.getType();
-    ConcurrentHashMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
+    final Type typeOfMap = new TypeToken<ConcurrentHashMap<Integer, String>>() {}.getType();
+    final ConcurrentHashMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
     assertEquals(1, map.size());
     assertTrue(map.containsKey(123));
     assertEquals("456", map.get(123));
-    String json = gson.toJson(map);
+    final String json = gson.toJson(map);
     assertEquals("{\"123\":\"456\"}", json);
   }
 
   public void testConcurrentNavigableMap() throws Exception {
-    Type typeOfMap = new TypeToken<ConcurrentNavigableMap<Integer, String>>() {}.getType();
-    ConcurrentNavigableMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
+    final Type typeOfMap = new TypeToken<ConcurrentNavigableMap<Integer, String>>() {}.getType();
+    final ConcurrentNavigableMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
     assertEquals(1, map.size());
     assertTrue(map.containsKey(123));
     assertEquals("456", map.get(123));
-    String json = gson.toJson(map);
+    final String json = gson.toJson(map);
     assertEquals("{\"123\":\"456\"}", json);
   }
 
   public void testConcurrentSkipListMap() throws Exception {
-    Type typeOfMap = new TypeToken<ConcurrentSkipListMap<Integer, String>>() {}.getType();
-    ConcurrentSkipListMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
+    final Type typeOfMap = new TypeToken<ConcurrentSkipListMap<Integer, String>>() {}.getType();
+    final ConcurrentSkipListMap<Integer, String> map = gson.fromJson("{\"123\":\"456\"}", typeOfMap);
     assertEquals(1, map.size());
     assertTrue(map.containsKey(123));
     assertEquals("456", map.get(123));
-    String json = gson.toJson(map);
+    final String json = gson.toJson(map);
     assertEquals("{\"123\":\"456\"}", json);
   }
 
   public void testParameterizedMapSubclassSerialization() {
-    MyParameterizedMap<String, String> map = new MyParameterizedMap<String, String>(10);
+    final MyParameterizedMap<String, String> map = new MyParameterizedMap<String, String>(10);
     map.put("a", "b");
-    Type type = new TypeToken<MyParameterizedMap<String, String>>() {}.getType();
-    String json = gson.toJson(map, type);
+    final Type type = new TypeToken<MyParameterizedMap<String, String>>() {}.getType();
+    final String json = gson.toJson(map, type);
     assertTrue(json.contains("\"a\":\"b\""));
   }
 
   @SuppressWarnings({ "unused", "serial" })
   private static class MyParameterizedMap<K, V> extends LinkedHashMap<K, V> {
     final int foo;
-    MyParameterizedMap(int foo) {
+    MyParameterizedMap(final int foo) {
       this.foo = foo;
     }
   }
 
   public void testMapSubclassSerialization() {
-    MyMap map = new MyMap();
+    final MyMap map = new MyMap();
     map.put("a", "b");
-    String json = gson.toJson(map, MyMap.class);
+    final String json = gson.toJson(map, MyMap.class);
     assertTrue(json.contains("\"a\":\"b\""));
   }
 
   public void testMapStandardSubclassDeserialization() {
-    String json = "{a:'1',b:'2'}";
-    Type type = new TypeToken<LinkedHashMap<String, String>>() {}.getType();
-    LinkedHashMap<String, Integer> map = gson.fromJson(json, type);
+    final String json = "{a:'1',b:'2'}";
+    final Type type = new TypeToken<LinkedHashMap<String, String>>() {}.getType();
+    final LinkedHashMap<String, Integer> map = gson.fromJson(json, type);
     assertEquals("1", map.get("a"));
     assertEquals("2", map.get("b"));
   }
 
   public void testMapSubclassDeserialization() {
-    Gson gson = new GsonBuilder().registerTypeAdapter(MyMap.class, new InstanceCreator<MyMap>() {
-      public MyMap createInstance(Type type) {
+    final Gson gson = new GsonBuilder().registerTypeAdapter(MyMap.class, new InstanceCreator<MyMap>() {
+      @Override
+      public MyMap createInstance(final Type type) {
         return new MyMap();
       }
     }).create();
-    String json = "{\"a\":1,\"b\":2}";
-    MyMap map = gson.fromJson(json, MyMap.class);
+    final String json = "{\"a\":1,\"b\":2}";
+    final MyMap map = gson.fromJson(json, MyMap.class);
     assertEquals("1", map.get("a"));
     assertEquals("2", map.get("b"));
   }
 
   public void testCustomSerializerForSpecificMapType() {
-    Type type = $Gson$Types.newParameterizedTypeWithOwner(
+    final Type type = $Gson$Types.newParameterizedTypeWithOwner(
         null, Map.class, String.class, Long.class);
-    Gson gson = new GsonBuilder()
+    final Gson gson = new GsonBuilder()
         .registerTypeAdapter(type, new JsonSerializer<Map<String, Long>>() {
-          public JsonElement serialize(Map<String, Long> src, Type typeOfSrc,
-              JsonSerializationContext context) {
-            JsonArray array = new JsonArray();
-            for (long value : src.values()) {
+          @Override
+          public JsonElement serialize(final Map<String, Long> src, final Type typeOfSrc,
+              final JsonSerializationContext context) {
+            final JsonArray array = new JsonArray();
+            for (final long value : src.values()) {
               array.add(new JsonPrimitive(value));
             }
             return array;
           }
         }).create();
 
-    Map<String, Long> src = new LinkedHashMap<String, Long>();
+    final Map<String, Long> src = new LinkedHashMap<String, Long>();
     src.put("one", 1L);
     src.put("two", 2L);
     src.put("three", 3L);
@@ -300,10 +302,10 @@ public JsonElement serialize(Map<String, Long> src, Type typeOfSrc,
    * Created in response to http://code.google.com/p/google-gson/issues/detail?id=99
    */
   public void testMapSerializationWithNullValues() {
-    ClassWithAMap target = new ClassWithAMap();
+    final ClassWithAMap target = new ClassWithAMap();
     target.map.put("name1", null);
     target.map.put("name2", "value2");
-    String json = gson.toJson(target);
+    final String json = gson.toJson(target);
     assertFalse(json.contains("name1"));
     assertTrue(json.contains("name2"));
   }
@@ -312,31 +314,31 @@ public void testMapSerializationWithNullValues() {
    * Created in response to http://code.google.com/p/google-gson/issues/detail?id=99
    */
   public void testMapSerializationWithNullValuesSerialized() {
-    Gson gson = new GsonBuilder().serializeNulls().create();
-    ClassWithAMap target = new ClassWithAMap();
+    final Gson gson = new GsonBuilder().serializeNulls().create();
+    final ClassWithAMap target = new ClassWithAMap();
     target.map.put("name1", null);
     target.map.put("name2", "value2");
-    String json = gson.toJson(target);
+    final String json = gson.toJson(target);
     assertTrue(json.contains("name1"));
     assertTrue(json.contains("name2"));
   }
 
   public void testMapSerializationWithWildcardValues() {
-    Map<String, ? extends Collection<? extends Integer>> map =
+    final Map<String, ? extends Collection<? extends Integer>> map =
         new LinkedHashMap<String, Collection<Integer>>();
     map.put("test", null);
-    Type typeOfMap =
+    final Type typeOfMap =
         new TypeToken<Map<String, ? extends Collection<? extends Integer>>>() {}.getType();
-    String json = gson.toJson(map, typeOfMap);
+    final String json = gson.toJson(map, typeOfMap);
 
     assertEquals("{}", json);
   }
 
   public void testMapDeserializationWithWildcardValues() {
-    Type typeOfMap = new TypeToken<Map<String, ? extends Long>>() {}.getType();
-    Map<String, ? extends Long> map = gson.fromJson("{\"test\":123}", typeOfMap);
+    final Type typeOfMap = new TypeToken<Map<String, ? extends Long>>() {}.getType();
+    final Map<String, ? extends Long> map = gson.fromJson("{\"test\":123}", typeOfMap);
     assertEquals(1, map.size());
-    assertEquals(new Long(123L), map.get("test"));
+    assertEquals((Long)123L, map.get("test"));
   }
 
 
@@ -351,12 +353,12 @@ public void testMapDeserializationWithWildcardValues() {
    * From bug report http://code.google.com/p/google-gson/issues/detail?id=95
    */
   public void testMapOfMapSerialization() {
-    Map<String, Map<String, String>> map = new HashMap<String, Map<String, String>>();
-    Map<String, String> nestedMap = new HashMap<String, String>();
+    final Map<String, Map<String, String>> map = new HashMap<String, Map<String, String>>();
+    final Map<String, String> nestedMap = new HashMap<String, String>();
     nestedMap.put("1", "1");
     nestedMap.put("2", "2");
     map.put("nestedMap", nestedMap);
-    String json = gson.toJson(map);
+    final String json = gson.toJson(map);
     assertTrue(json.contains("nestedMap"));
     assertTrue(json.contains("\"1\":\"1\""));
     assertTrue(json.contains("\"2\":\"2\""));
@@ -366,10 +368,10 @@ public void testMapOfMapSerialization() {
    * From bug report http://code.google.com/p/google-gson/issues/detail?id=95
    */
   public void testMapOfMapDeserialization() {
-    String json = "{nestedMap:{'2':'2','1':'1'}}";
-    Type type = new TypeToken<Map<String, Map<String, String>>>(){}.getType();
-    Map<String, Map<String, String>> map = gson.fromJson(json, type);
-    Map<String, String> nested = map.get("nestedMap");
+    final String json = "{nestedMap:{'2':'2','1':'1'}}";
+    final Type type = new TypeToken<Map<String, Map<String, String>>>(){}.getType();
+    final Map<String, Map<String, String>> map = gson.fromJson(json, type);
+    final Map<String, String> nested = map.get("nestedMap");
     assertEquals("1", nested.get("1"));
     assertEquals("2", nested.get("2"));
   }
@@ -378,9 +380,9 @@ public void testMapOfMapDeserialization() {
    * From bug report http://code.google.com/p/google-gson/issues/detail?id=178
    */
   public void testMapWithQuotes() {
-    Map<String, String> map = new HashMap<String, String>();
+    final Map<String, String> map = new HashMap<String, String>();
     map.put("a\"b", "c\"d");
-    String json = gson.toJson(map);
+    final String json = gson.toJson(map);
     assertEquals("{\"a\\\"b\":\"c\\\"d\"}", json);
   }
 
@@ -388,14 +390,14 @@ public void testMapWithQuotes() {
    * From issue 227.
    */
   public void testWriteMapsWithEmptyStringKey() {
-    Map<String, Boolean> map = new HashMap<String, Boolean>();
+    final Map<String, Boolean> map = new HashMap<String, Boolean>();
     map.put("", true);
     assertEquals("{\"\":true}", gson.toJson(map));
 
   }
 
   public void testReadMapsWithEmptyStringKey() {
-    Map<String, Boolean> map = gson.fromJson("{\"\":true}", new TypeToken<Map<String, Boolean>>() {}.getType());
+    final Map<String, Boolean> map = gson.fromJson("{\"\":true}", new TypeToken<Map<String, Boolean>>() {}.getType());
     assertEquals(Boolean.TRUE, map.get(""));
   }
 
@@ -403,11 +405,11 @@ public void testReadMapsWithEmptyStringKey() {
    * From bug report http://code.google.com/p/google-gson/issues/detail?id=204
    */
   public void testSerializeMaps() {
-    Map<String, Object> map = new LinkedHashMap<String, Object>();
+    final Map<String, Object> map = new LinkedHashMap<String, Object>();
     map.put("a", 12);
     map.put("b", null);
 
-    LinkedHashMap<String, Object> innerMap = new LinkedHashMap<String, Object>();
+    final LinkedHashMap<String, Object> innerMap = new LinkedHashMap<String, Object>();
     innerMap.put("test", 1);
     innerMap.put("TestStringArray", new String[] { "one", "two" });
     map.put("c", innerMap);
@@ -431,42 +433,43 @@ public void testSerializeMaps() {
   }
 
   public final void testInterfaceTypeMap() {
-    MapClass element = new MapClass();
-    TestTypes.Sub subType = new TestTypes.Sub();
+    final MapClass element = new MapClass();
+    final TestTypes.Sub subType = new TestTypes.Sub();
     element.addBase("Test", subType);
     element.addSub("Test", subType);
 
-    String subTypeJson = new Gson().toJson(subType);
-    String expected = "{\"bases\":{\"Test\":" + subTypeJson + "},"
+    final String subTypeJson = new Gson().toJson(subType);
+    final String expected = "{\"bases\":{\"Test\":" + subTypeJson + "},"
       + "\"subs\":{\"Test\":" + subTypeJson + "}}";
 
-    Gson gsonWithComplexKeys = new GsonBuilder()
+    final Gson gsonWithComplexKeys = new GsonBuilder()
         .enableComplexMapKeySerialization()
         .create();
     String json = gsonWithComplexKeys.toJson(element);
     assertEquals(expected, json);
 
-    Gson gson = new Gson();
+    final Gson gson = new Gson();
     json = gson.toJson(element);
     assertEquals(expected, json);
   }
 
   public final void testInterfaceTypeMapWithSerializer() {
-    MapClass element = new MapClass();
-    TestTypes.Sub subType = new TestTypes.Sub();
+    final MapClass element = new MapClass();
+    final TestTypes.Sub subType = new TestTypes.Sub();
     element.addBase("Test", subType);
     element.addSub("Test", subType);
 
-    Gson tempGson = new Gson();
-    String subTypeJson = tempGson.toJson(subType);
+    final Gson tempGson = new Gson();
+    final String subTypeJson = tempGson.toJson(subType);
     final JsonElement baseTypeJsonElement = tempGson.toJsonTree(subType, TestTypes.Base.class);
-    String baseTypeJson = tempGson.toJson(baseTypeJsonElement);
-    String expected = "{\"bases\":{\"Test\":" + baseTypeJson + "},"
+    final String baseTypeJson = tempGson.toJson(baseTypeJsonElement);
+    final String expected = "{\"bases\":{\"Test\":" + baseTypeJson + "},"
         + "\"subs\":{\"Test\":" + subTypeJson + "}}";
 
-    JsonSerializer<TestTypes.Base> baseTypeAdapter = new JsonSerializer<TestTypes.Base>() {
-      public JsonElement serialize(TestTypes.Base src, Type typeOfSrc,
-          JsonSerializationContext context) {
+    final JsonSerializer<TestTypes.Base> baseTypeAdapter = new JsonSerializer<TestTypes.Base>() {
+      @Override
+      public JsonElement serialize(final TestTypes.Base src, final Type typeOfSrc,
+          final JsonSerializationContext context) {
         return baseTypeJsonElement;
       }
     };
@@ -486,12 +489,12 @@ public JsonElement serialize(TestTypes.Base src, Type typeOfSrc,
   }
 
   public void testGeneralMapField() throws Exception {
-    MapWithGeneralMapParameters map = new MapWithGeneralMapParameters();
+    final MapWithGeneralMapParameters map = new MapWithGeneralMapParameters();
     map.map.put("string", "testString");
     map.map.put("stringArray", new String[]{"one", "two"});
     map.map.put("objectArray", new Object[]{1, 2L, "three"});
 
-    String expected = "{\"map\":{\"string\":\"testString\",\"stringArray\":"
+    final String expected = "{\"map\":{\"string\":\"testString\",\"stringArray\":"
         + "[\"one\",\"two\"],\"objectArray\":[1,2,\"three\"]}}";
     assertEquals(expected, gson.toJson(map));
 
@@ -502,42 +505,42 @@ public void testGeneralMapField() throws Exception {
   }
 
   public void testComplexKeysSerialization() {
-    Map<Point, String> map = new LinkedHashMap<Point, String>();
+    final Map<Point, String> map = new LinkedHashMap<Point, String>();
     map.put(new Point(2, 3), "a");
     map.put(new Point(5, 7), "b");
-    String json = "{\"2,3\":\"a\",\"5,7\":\"b\"}";
+    final String json = "{\"2,3\":\"a\",\"5,7\":\"b\"}";
     assertEquals(json, gson.toJson(map, new TypeToken<Map<Point, String>>() {}.getType()));
     assertEquals(json, gson.toJson(map, Map.class));
   }
 
   public void testComplexKeysDeserialization() {
-    String json = "{'2,3':'a','5,7':'b'}";
+    final String json = "{'2,3':'a','5,7':'b'}";
     try {
       gson.fromJson(json, new TypeToken<Map<Point, String>>() {}.getType());
       fail();
-    } catch (JsonParseException expected) {
+    } catch (final JsonParseException expected) {
     }
   }
 
   public void testStringKeyDeserialization() {
-    String json = "{'2,3':'a','5,7':'b'}";
-    Map<String, String> map = new LinkedHashMap<String, String>();
+    final String json = "{'2,3':'a','5,7':'b'}";
+    final Map<String, String> map = new LinkedHashMap<String, String>();
     map.put("2,3", "a");
     map.put("5,7", "b");
     assertEquals(map, gson.fromJson(json, new TypeToken<Map<String, String>>() {}.getType()));
   }
 
   public void testNumberKeyDeserialization() {
-    String json = "{'2.3':'a','5.7':'b'}";
-    Map<Double, String> map = new LinkedHashMap<Double, String>();
+    final String json = "{'2.3':'a','5.7':'b'}";
+    final Map<Double, String> map = new LinkedHashMap<Double, String>();
     map.put(2.3, "a");
     map.put(5.7, "b");
     assertEquals(map, gson.fromJson(json, new TypeToken<Map<Double, String>>() {}.getType()));
   }
 
   public void testBooleanKeyDeserialization() {
-    String json = "{'true':'a','false':'b'}";
-    Map<Boolean, String> map = new LinkedHashMap<Boolean, String>();
+    final String json = "{'true':'a','false':'b'}";
+    final Map<Boolean, String> map = new LinkedHashMap<Boolean, String>();
     map.put(true, "a");
     map.put(false, "b");
     assertEquals(map, gson.fromJson(json, new TypeToken<Map<Boolean, String>>() {}.getType()));
@@ -547,13 +550,13 @@ public void testMapDeserializationWithDuplicateKeys() {
     try {
       gson.fromJson("{'a':1,'a':2}", new TypeToken<Map<String, Integer>>() {}.getType());
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
   public void testSerializeMapOfMaps() {
-    Type type = new TypeToken<Map<String, Map<String, String>>>() {}.getType();
-    Map<String, Map<String, String>> map = newMap(
+    final Type type = new TypeToken<Map<String, Map<String, String>>>() {}.getType();
+    final Map<String, Map<String, String>> map = newMap(
         "a", newMap("ka1", "va1", "ka2", "va2"),
         "b", newMap("kb1", "vb1", "kb2", "vb2"));
     assertEquals("{'a':{'ka1':'va1','ka2':'va2'},'b':{'kb1':'vb1','kb2':'vb2'}}",
@@ -561,26 +564,26 @@ public void testSerializeMapOfMaps() {
   }
 
   public void testDeerializeMapOfMaps() {
-    Type type = new TypeToken<Map<String, Map<String, String>>>() {}.getType();
-    Map<String, Map<String, String>> map = newMap(
+    final Type type = new TypeToken<Map<String, Map<String, String>>>() {}.getType();
+    final Map<String, Map<String, String>> map = newMap(
         "a", newMap("ka1", "va1", "ka2", "va2"),
         "b", newMap("kb1", "vb1", "kb2", "vb2"));
-    String json = "{'a':{'ka1':'va1','ka2':'va2'},'b':{'kb1':'vb1','kb2':'vb2'}}";
+    final String json = "{'a':{'ka1':'va1','ka2':'va2'},'b':{'kb1':'vb1','kb2':'vb2'}}";
     assertEquals(map, gson.fromJson(json, type));
   }
 
-  private <K, V> Map<K, V> newMap(K key1, V value1, K key2, V value2) {
-    Map<K, V> result = new LinkedHashMap<K, V>();
+  private <K, V> Map<K, V> newMap(final K key1, final V value1, final K key2, final V value2) {
+    final Map<K, V> result = new LinkedHashMap<K, V>();
     result.put(key1, value1);
     result.put(key2, value2);
     return result;
   }
 
   public void testMapNamePromotionWithJsonElementReader() {
-    String json = "{'2.3':'a'}";
-    Map<Double, String> map = new LinkedHashMap<Double, String>();
+    final String json = "{'2.3':'a'}";
+    final Map<Double, String> map = new LinkedHashMap<Double, String>();
     map.put(2.3, "a");
-    JsonElement tree = new JsonParser().parse(json);
+    final JsonElement tree = new JsonParser().parse(json);
     assertEquals(map, gson.fromJson(tree, new TypeToken<Map<Double, String>>() {}.getType()));
   }
 
@@ -588,12 +591,12 @@ public void testMapNamePromotionWithJsonElementReader() {
     private final int x;
     private final int y;
 
-    Point(int x, int y) {
+    Point(final int x, final int y) {
       this.x = x;
       this.y = y;
     }
 
-    @Override public boolean equals(Object o) {
+    @Override public boolean equals(final Object o) {
       return o instanceof Point && x == ((Point) o).x && y == ((Point) o).y;
     }
 
@@ -610,11 +613,11 @@ public void testMapNamePromotionWithJsonElementReader() {
     private final Map<String, TestTypes.Base> bases = new HashMap<String, TestTypes.Base>();
     private final Map<String, TestTypes.Sub> subs = new HashMap<String, TestTypes.Sub>();
 
-    public final void addBase(String name, TestTypes.Base value) {
+    public final void addBase(final String name, final TestTypes.Base value) {
       bases.put(name, value);
     }
 
-    public final void addSub(String name, TestTypes.Sub value) {
+    public final void addSub(final String name, final TestTypes.Sub value) {
       subs.put(name, value);
     }
   }
diff --git a/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java b/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
rename to src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java b/src/test/java/com/google/gson/functional/NamingPolicyTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java
rename to src/test/java/com/google/gson/functional/NamingPolicyTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java b/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
old mode 100755
new mode 100644
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
rename to src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/ObjectTest.java b/src/test/java/com/google/gson/functional/ObjectTest.java
similarity index 99%
rename from gson/src/test/java/com/google/gson/functional/ObjectTest.java
rename to src/test/java/com/google/gson/functional/ObjectTest.java
index 973074191..4cfb04054 100644
--- a/gson/src/test/java/com/google/gson/functional/ObjectTest.java
+++ b/src/test/java/com/google/gson/functional/ObjectTest.java
@@ -16,6 +16,15 @@
 
 package com.google.gson.functional;
 
+import java.lang.reflect.Type;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.TimeZone;
+
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.InstanceCreator;
@@ -34,15 +43,7 @@
 import com.google.gson.common.TestTypes.Nested;
 import com.google.gson.common.TestTypes.PrimitiveArray;
 import com.google.gson.reflect.TypeToken;
-import java.lang.reflect.Type;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Locale;
-import java.util.Map;
-import java.util.TimeZone;
+
 import junit.framework.TestCase;
 
 /**
diff --git a/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java b/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
similarity index 61%
rename from gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
rename to src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
index 190603deb..2d3dddc3b 100644
--- a/gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
+++ b/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java
@@ -52,208 +52,208 @@ protected void setUp() throws Exception {
   }
 
   public void testParameterizedTypesSerialization() throws Exception {
-    MyParameterizedType<Integer> src = new MyParameterizedType<Integer>(10);
-    Type typeOfSrc = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
-    String json = gson.toJson(src, typeOfSrc);
+    final MyParameterizedType<Integer> src = new MyParameterizedType<Integer>(10);
+    final Type typeOfSrc = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
+    final String json = gson.toJson(src, typeOfSrc);
     assertEquals(src.getExpectedJson(), json);
   }
 
   public void testParameterizedTypeDeserialization() throws Exception {
-    BagOfPrimitives bag = new BagOfPrimitives();
-    MyParameterizedType<BagOfPrimitives> expected = new MyParameterizedType<BagOfPrimitives>(bag);
-    Type expectedType = new TypeToken<MyParameterizedType<BagOfPrimitives>>() {}.getType();
-    BagOfPrimitives bagDefaultInstance = new BagOfPrimitives();
-    Gson gson = new GsonBuilder().registerTypeAdapter(
+    final BagOfPrimitives bag = new BagOfPrimitives();
+    final MyParameterizedType<BagOfPrimitives> expected = new MyParameterizedType<BagOfPrimitives>(bag);
+    final Type expectedType = new TypeToken<MyParameterizedType<BagOfPrimitives>>() {}.getType();
+    final BagOfPrimitives bagDefaultInstance = new BagOfPrimitives();
+    final Gson gson = new GsonBuilder().registerTypeAdapter(
         expectedType, new MyParameterizedTypeInstanceCreator<BagOfPrimitives>(bagDefaultInstance))
         .create();
 
-    String json = expected.getExpectedJson();
-    MyParameterizedType<BagOfPrimitives> actual = gson.fromJson(json, expectedType);
+    final String json = expected.getExpectedJson();
+    final MyParameterizedType<BagOfPrimitives> actual = gson.fromJson(json, expectedType);
     assertEquals(expected, actual);
   }
 
   public void testTypesWithMultipleParametersSerialization() throws Exception {
-    MultiParameters<Integer, Float, Double, String, BagOfPrimitives> src =
+    final MultiParameters<Integer, Float, Double, String, BagOfPrimitives> src =
         new MultiParameters<Integer, Float, Double, String, BagOfPrimitives>(10, 1.0F, 2.1D,
             "abc", new BagOfPrimitives());
-    Type typeOfSrc = new TypeToken<MultiParameters<Integer, Float, Double, String,
+    final Type typeOfSrc = new TypeToken<MultiParameters<Integer, Float, Double, String,
         BagOfPrimitives>>() {}.getType();
-    String json = gson.toJson(src, typeOfSrc);
-    String expected = "{\"a\":10,\"b\":1.0,\"c\":2.1,\"d\":\"abc\","
+    final String json = gson.toJson(src, typeOfSrc);
+    final String expected = "{\"a\":10,\"b\":1.0,\"c\":2.1,\"d\":\"abc\","
         + "\"e\":{\"longValue\":0,\"intValue\":0,\"booleanValue\":false,\"stringValue\":\"\"}}";
     assertEquals(expected, json);
   }
 
   public void testTypesWithMultipleParametersDeserialization() throws Exception {
-    Type typeOfTarget = new TypeToken<MultiParameters<Integer, Float, Double, String,
+    final Type typeOfTarget = new TypeToken<MultiParameters<Integer, Float, Double, String,
         BagOfPrimitives>>() {}.getType();
-    String json = "{\"a\":10,\"b\":1.0,\"c\":2.1,\"d\":\"abc\","
+    final String json = "{\"a\":10,\"b\":1.0,\"c\":2.1,\"d\":\"abc\","
         + "\"e\":{\"longValue\":0,\"intValue\":0,\"booleanValue\":false,\"stringValue\":\"\"}}";
-    MultiParameters<Integer, Float, Double, String, BagOfPrimitives> target =
+    final MultiParameters<Integer, Float, Double, String, BagOfPrimitives> target =
         gson.fromJson(json, typeOfTarget);
-    MultiParameters<Integer, Float, Double, String, BagOfPrimitives> expected =
+    final MultiParameters<Integer, Float, Double, String, BagOfPrimitives> expected =
         new MultiParameters<Integer, Float, Double, String, BagOfPrimitives>(10, 1.0F, 2.1D,
             "abc", new BagOfPrimitives());
     assertEquals(expected, target);
   }
 
   public void testParameterizedTypeWithCustomSerializer() {
-    Type ptIntegerType = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
-    Type ptStringType = new TypeToken<MyParameterizedType<String>>() {}.getType();
-    Gson gson = new GsonBuilder()
+    final Type ptIntegerType = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
+    final Type ptStringType = new TypeToken<MyParameterizedType<String>>() {}.getType();
+    final Gson gson = new GsonBuilder()
         .registerTypeAdapter(ptIntegerType, new MyParameterizedTypeAdapter<Integer>())
         .registerTypeAdapter(ptStringType, new MyParameterizedTypeAdapter<String>())
         .create();
-    MyParameterizedType<Integer> intTarget = new MyParameterizedType<Integer>(10);
+    final MyParameterizedType<Integer> intTarget = new MyParameterizedType<Integer>(10);
     String json = gson.toJson(intTarget, ptIntegerType);
     assertEquals(MyParameterizedTypeAdapter.<Integer>getExpectedJson(intTarget), json);
 
-    MyParameterizedType<String> stringTarget = new MyParameterizedType<String>("abc");
+    final MyParameterizedType<String> stringTarget = new MyParameterizedType<String>("abc");
     json = gson.toJson(stringTarget, ptStringType);
     assertEquals(MyParameterizedTypeAdapter.<String>getExpectedJson(stringTarget), json);
   }
 
   public void testParameterizedTypesWithCustomDeserializer() {
-    Type ptIntegerType = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
-    Type ptStringType = new TypeToken<MyParameterizedType<String>>() {}.getType();
-    Gson gson = new GsonBuilder().registerTypeAdapter(
+    final Type ptIntegerType = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
+    final Type ptStringType = new TypeToken<MyParameterizedType<String>>() {}.getType();
+    final Gson gson = new GsonBuilder().registerTypeAdapter(
         ptIntegerType, new MyParameterizedTypeAdapter<Integer>())
         .registerTypeAdapter(ptStringType, new MyParameterizedTypeAdapter<String>())
         .registerTypeAdapter(ptStringType, new MyParameterizedTypeInstanceCreator<String>(""))
         .registerTypeAdapter(ptIntegerType,
-            new MyParameterizedTypeInstanceCreator<Integer>(new Integer(0)))
+            new MyParameterizedTypeInstanceCreator<Integer>(0))
         .create();
 
-    MyParameterizedType<Integer> src = new MyParameterizedType<Integer>(10);
+    final MyParameterizedType<Integer> src = new MyParameterizedType<Integer>(10);
     String json = MyParameterizedTypeAdapter.<Integer>getExpectedJson(src);
-    MyParameterizedType<Integer> intTarget = gson.fromJson(json, ptIntegerType);
+    final MyParameterizedType<Integer> intTarget = gson.fromJson(json, ptIntegerType);
     assertEquals(10, intTarget.value.intValue());
 
-    MyParameterizedType<String> srcStr = new MyParameterizedType<String>("abc");
+    final MyParameterizedType<String> srcStr = new MyParameterizedType<String>("abc");
     json = MyParameterizedTypeAdapter.<String>getExpectedJson(srcStr);
-    MyParameterizedType<String> stringTarget = gson.fromJson(json, ptStringType);
+    final MyParameterizedType<String> stringTarget = gson.fromJson(json, ptStringType);
     assertEquals("abc", stringTarget.value);
   }
 
   public void testParameterizedTypesWithWriterSerialization() throws Exception {
-    Writer writer = new StringWriter();
-    MyParameterizedType<Integer> src = new MyParameterizedType<Integer>(10);
-    Type typeOfSrc = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
+    final Writer writer = new StringWriter();
+    final MyParameterizedType<Integer> src = new MyParameterizedType<Integer>(10);
+    final Type typeOfSrc = new TypeToken<MyParameterizedType<Integer>>() {}.getType();
     gson.toJson(src, typeOfSrc, writer);
     assertEquals(src.getExpectedJson(), writer.toString());
   }
 
   public void testParameterizedTypeWithReaderDeserialization() throws Exception {
-    BagOfPrimitives bag = new BagOfPrimitives();
-    MyParameterizedType<BagOfPrimitives> expected = new MyParameterizedType<BagOfPrimitives>(bag);
-    Type expectedType = new TypeToken<MyParameterizedType<BagOfPrimitives>>() {}.getType();
-    BagOfPrimitives bagDefaultInstance = new BagOfPrimitives();
-    Gson gson = new GsonBuilder().registerTypeAdapter(
+    final BagOfPrimitives bag = new BagOfPrimitives();
+    final MyParameterizedType<BagOfPrimitives> expected = new MyParameterizedType<BagOfPrimitives>(bag);
+    final Type expectedType = new TypeToken<MyParameterizedType<BagOfPrimitives>>() {}.getType();
+    final BagOfPrimitives bagDefaultInstance = new BagOfPrimitives();
+    final Gson gson = new GsonBuilder().registerTypeAdapter(
         expectedType, new MyParameterizedTypeInstanceCreator<BagOfPrimitives>(bagDefaultInstance))
         .create();
 
-    Reader json = new StringReader(expected.getExpectedJson());
-    MyParameterizedType<Integer> actual = gson.fromJson(json, expectedType);
+    final Reader json = new StringReader(expected.getExpectedJson());
+    final MyParameterizedType<Integer> actual = gson.fromJson(json, expectedType);
     assertEquals(expected, actual);
   }
 
   @SuppressWarnings("unchecked")
   public void testVariableTypeFieldsAndGenericArraysSerialization() throws Exception {
-    Integer obj = 0;
-    Integer[] array = { 1, 2, 3 };
-    List<Integer> list = new ArrayList<Integer>();
+    final Integer obj = 0;
+    final Integer[] array = { 1, 2, 3 };
+    final List<Integer> list = new ArrayList<Integer>();
     list.add(4);
     list.add(5);
-    List<Integer>[] arrayOfLists = new List[] { list, list };
+    final List<Integer>[] arrayOfLists = new List[] { list, list };
 
-    Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
-    ObjectWithTypeVariables<Integer> objToSerialize =
+    final Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
+    final ObjectWithTypeVariables<Integer> objToSerialize =
         new ObjectWithTypeVariables<Integer>(obj, array, list, arrayOfLists, list, arrayOfLists);
-    String json = gson.toJson(objToSerialize, typeOfSrc);
+    final String json = gson.toJson(objToSerialize, typeOfSrc);
 
     assertEquals(objToSerialize.getExpectedJson(), json);
   }
 
   @SuppressWarnings("unchecked")
   public void testVariableTypeFieldsAndGenericArraysDeserialization() throws Exception {
-    Integer obj = 0;
-    Integer[] array = { 1, 2, 3 };
-    List<Integer> list = new ArrayList<Integer>();
+    final Integer obj = 0;
+    final Integer[] array = { 1, 2, 3 };
+    final List<Integer> list = new ArrayList<Integer>();
     list.add(4);
     list.add(5);
-    List<Integer>[] arrayOfLists = new List[] { list, list };
+    final List<Integer>[] arrayOfLists = new List[] { list, list };
 
-    Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
-    ObjectWithTypeVariables<Integer> objToSerialize =
+    final Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
+    final ObjectWithTypeVariables<Integer> objToSerialize =
         new ObjectWithTypeVariables<Integer>(obj, array, list, arrayOfLists, list, arrayOfLists);
-    String json = gson.toJson(objToSerialize, typeOfSrc);
-    ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
+    final String json = gson.toJson(objToSerialize, typeOfSrc);
+    final ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
 
     assertEquals(objAfterDeserialization.getExpectedJson(), json);
   }
 
   public void testVariableTypeDeserialization() throws Exception {
-    Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
-    ObjectWithTypeVariables<Integer> objToSerialize =
+    final Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
+    final ObjectWithTypeVariables<Integer> objToSerialize =
         new ObjectWithTypeVariables<Integer>(0, null, null, null, null, null);
-    String json = gson.toJson(objToSerialize, typeOfSrc);
-    ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
+    final String json = gson.toJson(objToSerialize, typeOfSrc);
+    final ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
 
     assertEquals(objAfterDeserialization.getExpectedJson(), json);
   }
 
   public void testVariableTypeArrayDeserialization() throws Exception {
-    Integer[] array = { 1, 2, 3 };
+    final Integer[] array = { 1, 2, 3 };
 
-    Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
-    ObjectWithTypeVariables<Integer> objToSerialize =
+    final Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
+    final ObjectWithTypeVariables<Integer> objToSerialize =
         new ObjectWithTypeVariables<Integer>(null, array, null, null, null, null);
-    String json = gson.toJson(objToSerialize, typeOfSrc);
-    ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
+    final String json = gson.toJson(objToSerialize, typeOfSrc);
+    final ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
 
     assertEquals(objAfterDeserialization.getExpectedJson(), json);
   }
 
   public void testParameterizedTypeWithVariableTypeDeserialization() throws Exception {
-    List<Integer> list = new ArrayList<Integer>();
+    final List<Integer> list = new ArrayList<Integer>();
     list.add(4);
     list.add(5);
 
-    Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
-    ObjectWithTypeVariables<Integer> objToSerialize =
+    final Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
+    final ObjectWithTypeVariables<Integer> objToSerialize =
         new ObjectWithTypeVariables<Integer>(null, null, list, null, null, null);
-    String json = gson.toJson(objToSerialize, typeOfSrc);
-    ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
+    final String json = gson.toJson(objToSerialize, typeOfSrc);
+    final ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
 
     assertEquals(objAfterDeserialization.getExpectedJson(), json);
   }
 
   @SuppressWarnings("unchecked")
   public void testParameterizedTypeGenericArraysSerialization() throws Exception {
-    List<Integer> list = new ArrayList<Integer>();
+    final List<Integer> list = new ArrayList<Integer>();
     list.add(1);
     list.add(2);
-    List<Integer>[] arrayOfLists = new List[] { list, list };
+    final List<Integer>[] arrayOfLists = new List[] { list, list };
 
-    Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
-    ObjectWithTypeVariables<Integer> objToSerialize =
+    final Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
+    final ObjectWithTypeVariables<Integer> objToSerialize =
         new ObjectWithTypeVariables<Integer>(null, null, null, arrayOfLists, null, null);
-    String json = gson.toJson(objToSerialize, typeOfSrc);
+    final String json = gson.toJson(objToSerialize, typeOfSrc);
     assertEquals("{\"arrayOfListOfTypeParameters\":[[1,2],[1,2]]}", json);
   }
 
   @SuppressWarnings("unchecked")
   public void testParameterizedTypeGenericArraysDeserialization() throws Exception {
-    List<Integer> list = new ArrayList<Integer>();
+    final List<Integer> list = new ArrayList<Integer>();
     list.add(1);
     list.add(2);
-    List<Integer>[] arrayOfLists = new List[] { list, list };
+    final List<Integer>[] arrayOfLists = new List[] { list, list };
 
-    Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
-    ObjectWithTypeVariables<Integer> objToSerialize =
+    final Type typeOfSrc = new TypeToken<ObjectWithTypeVariables<Integer>>() {}.getType();
+    final ObjectWithTypeVariables<Integer> objToSerialize =
         new ObjectWithTypeVariables<Integer>(null, null, null, arrayOfLists, null, null);
-    String json = gson.toJson(objToSerialize, typeOfSrc);
-    ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
+    final String json = gson.toJson(objToSerialize, typeOfSrc);
+    final ObjectWithTypeVariables<Integer> objAfterDeserialization = gson.fromJson(json, typeOfSrc);
 
     assertEquals(objAfterDeserialization.getExpectedJson(), json);
   }
@@ -263,7 +263,7 @@ public void testParameterizedTypeGenericArraysDeserialization() throws Exception
    *
    * @param <T> Enforce T to be a string to make writing the "toExpectedJson" method easier.
    */
-  private static class ObjectWithTypeVariables<T extends Number> {
+  public static class ObjectWithTypeVariables<T extends Number> {
     private final T typeParameterObj;
     private final T[] typeParameterArray;
     private final List<T> listOfTypeParameters;
@@ -272,13 +272,12 @@ public void testParameterizedTypeGenericArraysDeserialization() throws Exception
     private final List<? extends T>[] arrayOfListOfWildcardTypeParameters;
 
     // For use by Gson
-    @SuppressWarnings("unused")
-    private ObjectWithTypeVariables() {
+    public ObjectWithTypeVariables() {
       this(null, null, null, null, null, null);
     }
 
-    public ObjectWithTypeVariables(T obj, T[] array, List<T> list, List<T>[] arrayOfList,
-        List<? extends T> wildcardList, List<? extends T>[] arrayOfWildcardList) {
+    public ObjectWithTypeVariables(final T obj, final T[] array, final List<T> list, final List<T>[] arrayOfList,
+        final List<? extends T> wildcardList, final List<? extends T>[] arrayOfWildcardList) {
       this.typeParameterObj = obj;
       this.typeParameterArray = array;
       this.listOfTypeParameters = list;
@@ -288,7 +287,7 @@ public ObjectWithTypeVariables(T obj, T[] array, List<T> list, List<T>[] arrayOf
     }
 
     public String getExpectedJson() {
-      StringBuilder sb = new StringBuilder().append("{");
+      final StringBuilder sb = new StringBuilder().append("{");
 
       boolean needsComma = false;
       if (typeParameterObj != null) {
@@ -349,9 +348,9 @@ public String getExpectedJson() {
       return sb.toString();
     }
 
-    private void appendObjectsToBuilder(StringBuilder sb, Iterable<? extends T> iterable) {
+    private void appendObjectsToBuilder(final StringBuilder sb, final Iterable<? extends T> iterable) {
       boolean isFirst = true;
-      for (T obj : iterable) {
+      for (final T obj : iterable) {
         if (!isFirst) {
           sb.append(',');
         }
@@ -360,9 +359,9 @@ private void appendObjectsToBuilder(StringBuilder sb, Iterable<? extends T> iter
       }
     }
 
-    private void appendObjectsToBuilder(StringBuilder sb, List<? extends T>[] arrayOfList) {
+    private void appendObjectsToBuilder(final StringBuilder sb, final List<? extends T>[] arrayOfList) {
       boolean isFirst = true;
-      for (List<? extends T> list : arrayOfList) {
+      for (final List<? extends T> list : arrayOfList) {
         if (!isFirst) {
           sb.append(',');
         }
@@ -377,22 +376,21 @@ private void appendObjectsToBuilder(StringBuilder sb, List<? extends T>[] arrayO
       }
     }
 
-    public String toString(T obj) {
+    public String toString(final T obj) {
       return obj.toString();
     }
   }
 
-  private static class MultiParameters<A, B, C, D, E> {
+  public static class MultiParameters<A, B, C, D, E> {
     A a;
     B b;
     C c;
     D d;
     E e;
     // For use by Gson
-    @SuppressWarnings("unused")
-    private MultiParameters() {
+    public MultiParameters() {
     }
-    MultiParameters(A a, B b, C c, D d, E e) {
+    MultiParameters(final A a, final B b, final C c, final D d, final E e) {
       super();
       this.a = a;
       this.b = b;
@@ -413,7 +411,7 @@ public int hashCode() {
     }
     @Override
     @SuppressWarnings("unchecked")
-    public boolean equals(Object obj) {
+    public boolean equals(final Object obj) {
       if (this == obj) {
         return true;
       }
@@ -423,7 +421,7 @@ public boolean equals(Object obj) {
       if (getClass() != obj.getClass()) {
         return false;
       }
-      MultiParameters<A, B, C, D, E> other = (MultiParameters<A, B, C, D, E>) obj;
+      final MultiParameters<A, B, C, D, E> other = (MultiParameters<A, B, C, D, E>) obj;
       if (a == null) {
         if (other.a != null) {
           return false;
@@ -462,7 +460,7 @@ public boolean equals(Object obj) {
       return true;
     }
   }
-  
+
   // Begin: tests to reproduce issue 103
   private static class Quantity {
     @SuppressWarnings("unused")
@@ -472,31 +470,31 @@ public boolean equals(Object obj) {
     @SuppressWarnings("unused")
     int q2 = 20;
   }
-  private interface Measurable<T> {    
+  private interface Measurable<T> {
   }
-  private interface Field<T> {    
+  private interface Field<T> {
   }
-  private interface Immutable {    
+  private interface Immutable {
   }
-  
-  public static final class Amount<Q extends Quantity> 
+
+  public static final class Amount<Q extends Quantity>
       implements Measurable<Q>, Field<Amount<?>>, Serializable, Immutable {
     private static final long serialVersionUID = -7560491093120970437L;
 
     int value = 30;
   }
-  
+
   public void testDeepParameterizedTypeSerialization() {
-    Amount<MyQuantity> amount = new Amount<MyQuantity>();
-    String json = gson.toJson(amount);
+    final Amount<MyQuantity> amount = new Amount<MyQuantity>();
+    final String json = gson.toJson(amount);
     assertTrue(json.contains("value"));
-    assertTrue(json.contains("30"));    
+    assertTrue(json.contains("30"));
   }
-  
+
   public void testDeepParameterizedTypeDeserialization() {
-    String json = "{value:30}";
-    Type type = new TypeToken<Amount<MyQuantity>>() {}.getType();    
-    Amount<MyQuantity> amount = gson.fromJson(json, type);
+    final String json = "{value:30}";
+    final Type type = new TypeToken<Amount<MyQuantity>>() {}.getType();
+    final Amount<MyQuantity> amount = gson.fromJson(json, type);
     assertEquals(30, amount.value);
   }
   // End: tests to reproduce issue 103
diff --git a/gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java b/src/test/java/com/google/gson/functional/PrettyPrintingTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/PrettyPrintingTest.java
rename to src/test/java/com/google/gson/functional/PrettyPrintingTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/PrimitiveCharacterTest.java b/src/test/java/com/google/gson/functional/PrimitiveCharacterTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/PrimitiveCharacterTest.java
rename to src/test/java/com/google/gson/functional/PrimitiveCharacterTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java b/src/test/java/com/google/gson/functional/PrimitiveTest.java
similarity index 72%
rename from gson/src/test/java/com/google/gson/functional/PrimitiveTest.java
rename to src/test/java/com/google/gson/functional/PrimitiveTest.java
index bb28ed1ec..f801b3623 100644
--- a/gson/src/test/java/com/google/gson/functional/PrimitiveTest.java
+++ b/src/test/java/com/google/gson/functional/PrimitiveTest.java
@@ -50,7 +50,7 @@ public void testPrimitiveIntegerAutoboxedSerialization() {
   }
 
   public void testPrimitiveIntegerAutoboxedDeserialization() {
-    int expected = 1;
+    final int expected = 1;
     int actual = gson.fromJson("1", int.class);
     assertEquals(expected, actual);
 
@@ -69,27 +69,27 @@ public void testShortSerialization() {
   }
 
   public void testByteDeserialization() {
-    Byte target = gson.fromJson("1", Byte.class);
+    final Byte target = gson.fromJson("1", Byte.class);
     assertEquals(1, (byte)target);
-    byte primitive = gson.fromJson("1", byte.class);
+    final byte primitive = gson.fromJson("1", byte.class);
     assertEquals(1, primitive);
   }
 
   public void testPrimitiveIntegerAutoboxedInASingleElementArraySerialization() {
-    int target[] = {-9332};
+    final int target[] = {-9332};
     assertEquals("[-9332]", gson.toJson(target));
     assertEquals("[-9332]", gson.toJson(target, int[].class));
     assertEquals("[-9332]", gson.toJson(target, Integer[].class));
   }
 
   public void testReallyLongValuesSerialization() {
-    long value = 333961828784581L;
+    final long value = 333961828784581L;
     assertEquals("333961828784581", gson.toJson(value));
   }
 
   public void testReallyLongValuesDeserialization() {
-    String json = "333961828784581";
-    long value = gson.fromJson(json, Long.class);
+    final String json = "333961828784581";
+    final long value = gson.fromJson(json, Long.class);
     assertEquals(333961828784581L, value);
   }
 
@@ -99,7 +99,7 @@ public void testPrimitiveLongAutoboxedSerialization() {
   }
 
   public void testPrimitiveLongAutoboxedDeserialization() {
-    long expected = 1L;
+    final long expected = 1L;
     long actual = gson.fromJson("1", long.class);
     assertEquals(expected, actual);
 
@@ -108,7 +108,7 @@ public void testPrimitiveLongAutoboxedDeserialization() {
   }
 
   public void testPrimitiveLongAutoboxedInASingleElementArraySerialization() {
-    long[] target = {-23L};
+    final long[] target = {-23L};
     assertEquals("[-23]", gson.toJson(target));
     assertEquals("[-23]", gson.toJson(target, long[].class));
     assertEquals("[-23]", gson.toJson(target, Long[].class));
@@ -127,14 +127,14 @@ public void testBooleanDeserialization() {
   }
 
   public void testPrimitiveBooleanAutoboxedInASingleElementArraySerialization() {
-    boolean target[] = {false};
+    final boolean target[] = {false};
     assertEquals("[false]", gson.toJson(target));
     assertEquals("[false]", gson.toJson(target, boolean[].class));
     assertEquals("[false]", gson.toJson(target, Boolean[].class));
   }
 
   public void testNumberSerialization() {
-    Number expected = 1L;
+    final Number expected = 1L;
     String json = gson.toJson(expected);
     assertEquals(expected.toString(), json);
 
@@ -144,12 +144,12 @@ public void testNumberSerialization() {
 
   public void testNumberDeserialization() {
     String json = "1";
-    Number expected = new Integer(json);
+    Number expected = Integer.valueOf(json);
     Number actual = gson.fromJson(json, Number.class);
     assertEquals(expected.intValue(), actual.intValue());
 
     json = String.valueOf(Long.MAX_VALUE);
-    expected = new Long(json);
+    expected = Long.valueOf(json);
     actual = gson.fromJson(json, Number.class);
     assertEquals(expected.longValue(), actual.longValue());
 
@@ -160,7 +160,7 @@ public void testNumberDeserialization() {
 
   public void testPrimitiveDoubleAutoboxedSerialization() {
     assertEquals("-122.08234335", gson.toJson(-122.08234335));
-    assertEquals("122.08112002", gson.toJson(new Double(122.08112002)));
+    assertEquals("122.08112002", gson.toJson(122.08112002D));
   }
 
   public void testPrimitiveDoubleAutoboxedDeserialization() {
@@ -172,36 +172,36 @@ public void testPrimitiveDoubleAutoboxedDeserialization() {
   }
 
   public void testPrimitiveDoubleAutoboxedInASingleElementArraySerialization() {
-    double[] target = {-122.08D};
+    final double[] target = {-122.08D};
     assertEquals("[-122.08]", gson.toJson(target));
     assertEquals("[-122.08]", gson.toJson(target, double[].class));
     assertEquals("[-122.08]", gson.toJson(target, Double[].class));
   }
 
   public void testDoubleAsStringRepresentationDeserialization() {
-    String doubleValue = "1.0043E+5";
-    Double expected = Double.valueOf(doubleValue);
-    Double actual = gson.fromJson(doubleValue, Double.class);
+    final String doubleValue = "1.0043E+5";
+    final Double expected = Double.valueOf(doubleValue);
+    final Double actual = gson.fromJson(doubleValue, Double.class);
     assertEquals(expected, actual);
 
-    double actual1 = gson.fromJson(doubleValue, double.class);
+    final double actual1 = gson.fromJson(doubleValue, double.class);
     assertEquals(expected.doubleValue(), actual1);
   }
 
   public void testDoubleNoFractAsStringRepresentationDeserialization() {
-    String doubleValue = "1E+5";
-    Double expected = Double.valueOf(doubleValue);
-    Double actual = gson.fromJson(doubleValue, Double.class);
+    final String doubleValue = "1E+5";
+    final Double expected = Double.valueOf(doubleValue);
+    final Double actual = gson.fromJson(doubleValue, Double.class);
     assertEquals(expected, actual);
 
-    double actual1 = gson.fromJson(doubleValue, double.class);
+    final double actual1 = gson.fromJson(doubleValue, double.class);
     assertEquals(expected.doubleValue(), actual1);
   }
 
   public void testDoubleArrayDeserialization() {
-      String json = "[0.0, 0.004761904761904762, 3.4013606962703525E-4, 7.936508173034305E-4,"
+      final String json = "[0.0, 0.004761904761904762, 3.4013606962703525E-4, 7.936508173034305E-4,"
               + "0.0011904761904761906, 0.0]";
-      double[] values = gson.fromJson(json, double[].class);
+      final double[] values = gson.fromJson(json, double[].class);
       assertEquals(6, values.length);
       assertEquals(0.0, values[0]);
       assertEquals(0.004761904761904762, values[1]);
@@ -212,29 +212,29 @@ public void testDoubleArrayDeserialization() {
   }
 
   public void testLargeDoubleDeserialization() {
-    String doubleValue = "1.234567899E8";
-    Double expected = Double.valueOf(doubleValue);
-    Double actual = gson.fromJson(doubleValue, Double.class);
+    final String doubleValue = "1.234567899E8";
+    final Double expected = Double.valueOf(doubleValue);
+    final Double actual = gson.fromJson(doubleValue, Double.class);
     assertEquals(expected, actual);
 
-    double actual1 = gson.fromJson(doubleValue, double.class);
+    final double actual1 = gson.fromJson(doubleValue, double.class);
     assertEquals(expected.doubleValue(), actual1);
   }
 
   public void testBigDecimalSerialization() {
-    BigDecimal target = new BigDecimal("-122.0e-21");
-    String json = gson.toJson(target);
+    final BigDecimal target = new BigDecimal("-122.0e-21");
+    final String json = gson.toJson(target);
     assertEquals(target, new BigDecimal(json));
   }
 
   public void testBigDecimalDeserialization() {
-    BigDecimal target = new BigDecimal("-122.0e-21");
-    String json = "-122.0e-21";
+    final BigDecimal target = new BigDecimal("-122.0e-21");
+    final String json = "-122.0e-21";
     assertEquals(target, gson.fromJson(json, BigDecimal.class));
   }
 
   public void testBigDecimalInASingleElementArraySerialization() {
-    BigDecimal[] target = {new BigDecimal("-122.08e-21")};
+    final BigDecimal[] target = {new BigDecimal("-122.08e-21")};
     String json = gson.toJson(target);
     String actual = extractElementFromArray(json);
     assertEquals(target[0], new BigDecimal(actual));
@@ -245,60 +245,60 @@ public void testBigDecimalInASingleElementArraySerialization() {
   }
 
   public void testSmallValueForBigDecimalSerialization() {
-    BigDecimal target = new BigDecimal("1.55");
-    String actual = gson.toJson(target);
+    final BigDecimal target = new BigDecimal("1.55");
+    final String actual = gson.toJson(target);
     assertEquals(target.toString(), actual);
   }
 
   public void testSmallValueForBigDecimalDeserialization() {
-    BigDecimal expected = new BigDecimal("1.55");
-    BigDecimal actual = gson.fromJson("1.55", BigDecimal.class);
+    final BigDecimal expected = new BigDecimal("1.55");
+    final BigDecimal actual = gson.fromJson("1.55", BigDecimal.class);
     assertEquals(expected, actual);
   }
 
   public void testBigDecimalPreservePrecisionSerialization() {
-    String expectedValue = "1.000";
-    BigDecimal obj = new BigDecimal(expectedValue);
-    String actualValue = gson.toJson(obj);
+    final String expectedValue = "1.000";
+    final BigDecimal obj = new BigDecimal(expectedValue);
+    final String actualValue = gson.toJson(obj);
 
     assertEquals(expectedValue, actualValue);
   }
 
   public void testBigDecimalPreservePrecisionDeserialization() {
-    String json = "1.000";
-    BigDecimal expected = new BigDecimal(json);
-    BigDecimal actual = gson.fromJson(json, BigDecimal.class);
+    final String json = "1.000";
+    final BigDecimal expected = new BigDecimal(json);
+    final BigDecimal actual = gson.fromJson(json, BigDecimal.class);
 
     assertEquals(expected, actual);
   }
 
   public void testBigDecimalAsStringRepresentationDeserialization() {
-    String doubleValue = "0.05E+5";
-    BigDecimal expected = new BigDecimal(doubleValue);
-    BigDecimal actual = gson.fromJson(doubleValue, BigDecimal.class);
+    final String doubleValue = "0.05E+5";
+    final BigDecimal expected = new BigDecimal(doubleValue);
+    final BigDecimal actual = gson.fromJson(doubleValue, BigDecimal.class);
     assertEquals(expected, actual);
   }
 
   public void testBigDecimalNoFractAsStringRepresentationDeserialization() {
-    String doubleValue = "5E+5";
-    BigDecimal expected = new BigDecimal(doubleValue);
-    BigDecimal actual = gson.fromJson(doubleValue, BigDecimal.class);
+    final String doubleValue = "5E+5";
+    final BigDecimal expected = new BigDecimal(doubleValue);
+    final BigDecimal actual = gson.fromJson(doubleValue, BigDecimal.class);
     assertEquals(expected, actual);
   }
 
   public void testBigIntegerSerialization() {
-    BigInteger target = new BigInteger("12121211243123245845384534687435634558945453489543985435");
+    final BigInteger target = new BigInteger("12121211243123245845384534687435634558945453489543985435");
     assertEquals(target.toString(), gson.toJson(target));
   }
 
   public void testBigIntegerDeserialization() {
-    String json = "12121211243123245845384534687435634558945453489543985435";
-    BigInteger target = new BigInteger(json);
+    final String json = "12121211243123245845384534687435634558945453489543985435";
+    final BigInteger target = new BigInteger(json);
     assertEquals(target, gson.fromJson(json, BigInteger.class));
   }
 
   public void testBigIntegerInASingleElementArraySerialization() {
-    BigInteger[] target = {new BigInteger("1212121243434324323254365345367456456456465464564564")};
+    final BigInteger[] target = {new BigInteger("1212121243434324323254365345367456456456465464564564")};
     String json = gson.toJson(target);
     String actual = extractElementFromArray(json);
     assertEquals(target[0], new BigInteger(actual));
@@ -309,14 +309,14 @@ public void testBigIntegerInASingleElementArraySerialization() {
   }
 
   public void testSmallValueForBigIntegerSerialization() {
-    BigInteger target = new BigInteger("15");
-    String actual = gson.toJson(target);
+    final BigInteger target = new BigInteger("15");
+    final String actual = gson.toJson(target);
     assertEquals(target.toString(), actual);
   }
 
   public void testSmallValueForBigIntegerDeserialization() {
-    BigInteger expected = new BigInteger("15");
-    BigInteger actual = gson.fromJson("15", BigInteger.class);
+    final BigInteger expected = new BigInteger("15");
+    final BigInteger actual = gson.fromJson("15", BigInteger.class);
     assertEquals(expected, actual);
   }
 
@@ -324,40 +324,40 @@ public void testBadValueForBigIntegerDeserialization() {
     try {
       gson.fromJson("15.099", BigInteger.class);
       fail("BigInteger can not be decimal values.");
-    } catch (JsonSyntaxException expected) { }
+    } catch (final JsonSyntaxException expected) { }
   }
 
   public void testMoreSpecificSerialization() {
-    Gson gson = new Gson();
-    String expected = "This is a string";
-    String expectedJson = gson.toJson(expected);
+    final Gson gson = new Gson();
+    final String expected = "This is a string";
+    final String expectedJson = gson.toJson(expected);
 
-    Serializable serializableString = expected;
-    String actualJson = gson.toJson(serializableString, Serializable.class);
+    final Serializable serializableString = expected;
+    final String actualJson = gson.toJson(serializableString, Serializable.class);
     assertFalse(expectedJson.equals(actualJson));
   }
 
-  private String extractElementFromArray(String json) {
+  private String extractElementFromArray(final String json) {
     return json.substring(json.indexOf('[') + 1, json.indexOf(']'));
   }
 
   public void testDoubleNaNSerializationNotSupportedByDefault() {
     try {
-      double nan = Double.NaN;
+      final double nan = Double.NaN;
       gson.toJson(nan);
       fail("Gson should not accept NaN for serialization");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       gson.toJson(Double.NaN);
       fail("Gson should not accept NaN for serialization");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testDoubleNaNSerialization() {
-    Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
-    double nan = Double.NaN;
+    final Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
+    final double nan = Double.NaN;
     assertEquals("NaN", gson.toJson(nan));
     assertEquals("NaN", gson.toJson(Double.NaN));
   }
@@ -369,21 +369,21 @@ public void testDoubleNaNDeserialization() {
 
   public void testFloatNaNSerializationNotSupportedByDefault() {
     try {
-      float nan = Float.NaN;
+      final float nan = Float.NaN;
       gson.toJson(nan);
       fail("Gson should not accept NaN for serialization");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       gson.toJson(Float.NaN);
       fail("Gson should not accept NaN for serialization");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testFloatNaNSerialization() {
-    Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
-    float nan = Float.NaN;
+    final Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
+    final float nan = Float.NaN;
     assertEquals("NaN", gson.toJson(nan));
     assertEquals("NaN", gson.toJson(Float.NaN));
   }
@@ -397,27 +397,27 @@ public void testBigDecimalNaNDeserializationNotSupported() {
     try {
       gson.fromJson("NaN", BigDecimal.class);
       fail("Gson should not accept NaN for deserialization by default.");
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
   public void testDoubleInfinitySerializationNotSupportedByDefault() {
     try {
-      double infinity = Double.POSITIVE_INFINITY;
+      final double infinity = Double.POSITIVE_INFINITY;
       gson.toJson(infinity);
       fail("Gson should not accept positive infinity for serialization by default.");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       gson.toJson(Double.POSITIVE_INFINITY);
       fail("Gson should not accept positive infinity for serialization by default.");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testDoubleInfinitySerialization() {
-    Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
-    double infinity = Double.POSITIVE_INFINITY;
+    final Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
+    final double infinity = Double.POSITIVE_INFINITY;
     assertEquals("Infinity", gson.toJson(infinity));
     assertEquals("Infinity", gson.toJson(Double.POSITIVE_INFINITY));
   }
@@ -429,21 +429,21 @@ public void testDoubleInfinityDeserialization() {
 
   public void testFloatInfinitySerializationNotSupportedByDefault() {
     try {
-      float infinity = Float.POSITIVE_INFINITY;
+      final float infinity = Float.POSITIVE_INFINITY;
       gson.toJson(infinity);
       fail("Gson should not accept positive infinity for serialization by default");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       gson.toJson(Float.POSITIVE_INFINITY);
       fail("Gson should not accept positive infinity for serialization by default");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testFloatInfinitySerialization() {
-    Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
-    float infinity = Float.POSITIVE_INFINITY;
+    final Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
+    final float infinity = Float.POSITIVE_INFINITY;
     assertEquals("Infinity", gson.toJson(infinity));
     assertEquals("Infinity", gson.toJson(Float.POSITIVE_INFINITY));
   }
@@ -457,27 +457,27 @@ public void testBigDecimalInfinityDeserializationNotSupported() {
     try {
       gson.fromJson("Infinity", BigDecimal.class);
       fail("Gson should not accept positive infinity for deserialization with BigDecimal");
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
   public void testNegativeInfinitySerializationNotSupportedByDefault() {
     try {
-      double negativeInfinity = Double.NEGATIVE_INFINITY;
+      final double negativeInfinity = Double.NEGATIVE_INFINITY;
       gson.toJson(negativeInfinity);
       fail("Gson should not accept negative infinity for serialization by default");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       gson.toJson(Double.NEGATIVE_INFINITY);
       fail("Gson should not accept negative infinity for serialization by default");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testNegativeInfinitySerialization() {
-    Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
-    double negativeInfinity = Double.NEGATIVE_INFINITY;
+    final Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
+    final double negativeInfinity = Double.NEGATIVE_INFINITY;
     assertEquals("-Infinity", gson.toJson(negativeInfinity));
     assertEquals("-Infinity", gson.toJson(Double.NEGATIVE_INFINITY));
   }
@@ -489,21 +489,21 @@ public void testNegativeInfinityDeserialization() {
 
   public void testNegativeInfinityFloatSerializationNotSupportedByDefault() {
     try {
-      float negativeInfinity = Float.NEGATIVE_INFINITY;
+      final float negativeInfinity = Float.NEGATIVE_INFINITY;
       gson.toJson(negativeInfinity);
       fail("Gson should not accept negative infinity for serialization by default");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       gson.toJson(Float.NEGATIVE_INFINITY);
       fail("Gson should not accept negative infinity for serialization by default");
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testNegativeInfinityFloatSerialization() {
-    Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
-    float negativeInfinity = Float.NEGATIVE_INFINITY;
+    final Gson gson = new GsonBuilder().serializeSpecialFloatingPointValues().create();
+    final float negativeInfinity = Float.NEGATIVE_INFINITY;
     assertEquals("-Infinity", gson.toJson(negativeInfinity));
     assertEquals("-Infinity", gson.toJson(Float.NEGATIVE_INFINITY));
   }
@@ -517,7 +517,7 @@ public void testBigDecimalNegativeInfinityDeserializationNotSupported() {
     try {
       gson.fromJson("-Infinity", BigDecimal.class);
       fail("Gson should not accept positive infinity for deserialization");
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
@@ -541,26 +541,26 @@ public void testLongAsStringDeserialization() throws Exception {
   }
 
   public void testQuotedStringSerializationAndDeserialization() throws Exception {
-    String value = "String Blah Blah Blah...1, 2, 3";
-    String serializedForm = gson.toJson(value);
+    final String value = "String Blah Blah Blah...1, 2, 3";
+    final String serializedForm = gson.toJson(value);
     assertEquals("\"" + value + "\"", serializedForm);
 
-    String actual = gson.fromJson(serializedForm, String.class);
+    final String actual = gson.fromJson(serializedForm, String.class);
     assertEquals(value, actual);
   }
 
   public void testUnquotedStringDeserializationFails() throws Exception {
     assertEquals("UnquotedSingleWord", gson.fromJson("UnquotedSingleWord", String.class));
 
-    String value = "String Blah Blah Blah...1, 2, 3";
+    final String value = "String Blah Blah Blah...1, 2, 3";
     try {
       gson.fromJson(value, String.class);
       fail();
-    } catch (JsonSyntaxException expected) { }
+    } catch (final JsonSyntaxException expected) { }
   }
 
   public void testHtmlCharacterSerialization() throws Exception {
-    String target = "<script>var a = 12;</script>";
+    final String target = "<script>var a = 12;</script>";
     String result = gson.toJson(target);
     assertFalse(result.equals('"' + target + '"'));
 
@@ -570,8 +570,8 @@ public void testHtmlCharacterSerialization() throws Exception {
   }
 
   public void testDeserializePrimitiveWrapperAsObjectField() {
-    String json = "{i:10}";
-    ClassWithIntegerField target = gson.fromJson(json, ClassWithIntegerField.class);
+    final String json = "{i:10}";
+    final ClassWithIntegerField target = gson.fromJson(json, ClassWithIntegerField.class);
     assertEquals(10, target.i.intValue());
   }
 
@@ -589,140 +589,140 @@ public void testDeserializeJsonObjectAsLongPrimitive() {
     try {
       gson.fromJson("{'abc':1}", long.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsLongWrapper() {
     try {
       gson.fromJson("[1,2,3]", Long.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsInt() {
     try {
       gson.fromJson("[1, 2, 3, 4]", int.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsInteger() {
     try {
       gson.fromJson("{}", Integer.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsShortPrimitive() {
     try {
       gson.fromJson("{'abc':1}", short.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsShortWrapper() {
     try {
       gson.fromJson("['a','b']", Short.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsDoublePrimitive() {
     try {
       gson.fromJson("[1,2]", double.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsDoubleWrapper() {
     try {
       gson.fromJson("{'abc':1}", Double.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsFloatPrimitive() {
     try {
       gson.fromJson("{'abc':1}", float.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsFloatWrapper() {
     try {
       gson.fromJson("[1,2,3]", Float.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsBytePrimitive() {
     try {
       gson.fromJson("{'abc':1}", byte.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsByteWrapper() {
     try {
       gson.fromJson("[1,2,3,4]", Byte.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsBooleanPrimitive() {
     try {
       gson.fromJson("{'abc':1}", boolean.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsBooleanWrapper() {
     try {
       gson.fromJson("[1,2,3,4]", Boolean.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsBigDecimal() {
     try {
       gson.fromJson("[1,2,3,4]", BigDecimal.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsBigDecimal() {
     try {
       gson.fromJson("{'a':1}", BigDecimal.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsBigInteger() {
     try {
       gson.fromJson("[1,2,3,4]", BigInteger.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsBigInteger() {
     try {
       gson.fromJson("{'c':2}", BigInteger.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonArrayAsNumber() {
     try {
       gson.fromJson("[1,2,3,4]", Number.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializeJsonObjectAsNumber() {
     try {
       gson.fromJson("{'c':2}", Number.class);
       fail();
-    } catch (JsonSyntaxException expected) {}
+    } catch (final JsonSyntaxException expected) {}
   }
 
   public void testDeserializingDecimalPointValueZeroSucceeds() {
@@ -733,22 +733,22 @@ public void testDeserializingNonZeroDecimalPointValuesAsIntegerFails() {
     try {
       gson.fromJson("1.02", Byte.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
     try {
       gson.fromJson("1.02", Short.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
     try {
       gson.fromJson("1.02", Integer.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
     try {
       gson.fromJson("1.02", Long.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
@@ -756,7 +756,7 @@ public void testDeserializingBigDecimalAsIntegerFails() {
     try {
       gson.fromJson("-122.08e-213", Integer.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
@@ -764,7 +764,7 @@ public void testDeserializingBigIntegerAsInteger() {
     try {
       gson.fromJson("12121211243123245845384534687435634558945453489543985435", Integer.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
@@ -772,7 +772,7 @@ public void testDeserializingBigIntegerAsLong() {
     try {
       gson.fromJson("12121211243123245845384534687435634558945453489543985435", Long.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
@@ -788,14 +788,14 @@ public void testValueVeryCloseToZeroIsZero() {
   }
 
   public void testDeserializingBigDecimalAsFloat() {
-    String json = "-122.08e-2132332";
-    float actual = gson.fromJson(json, float.class);
+    final String json = "-122.08e-2132332";
+    final float actual = gson.fromJson(json, float.class);
     assertEquals(-0.0f, actual);
   }
 
   public void testDeserializingBigDecimalAsDouble() {
-    String json = "-122.08e-2132332";
-    double actual = gson.fromJson(json, double.class);
+    final String json = "-122.08e-2132332";
+    final double actual = gson.fromJson(json, double.class);
     assertEquals(-0.0d, actual);
   }
 
@@ -803,18 +803,18 @@ public void testDeserializingBigDecimalAsBigIntegerFails() {
     try {
       gson.fromJson("-122.08e-213", BigInteger.class);
       fail();
-    } catch (JsonSyntaxException expected) {
+    } catch (final JsonSyntaxException expected) {
     }
   }
 
   public void testDeserializingBigIntegerAsBigDecimal() {
-    BigDecimal actual =
+    final BigDecimal actual =
       gson.fromJson("12121211243123245845384534687435634558945453489543985435", BigDecimal.class);
     assertEquals("12121211243123245845384534687435634558945453489543985435", actual.toPlainString());
   }
 
   public void testStringsAsBooleans() {
-    String json = "['true', 'false', 'TRUE', 'yes', '1']";
+    final String json = "['true', 'false', 'TRUE', 'yes', '1']";
     assertEquals(Arrays.asList(true, false, true, false, false),
         gson.<List<Boolean>>fromJson(json, new TypeToken<List<Boolean>>() {}.getType()));
   }
diff --git a/gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java b/src/test/java/com/google/gson/functional/PrintFormattingTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java
rename to src/test/java/com/google/gson/functional/PrintFormattingTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java b/src/test/java/com/google/gson/functional/RawSerializationTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
rename to src/test/java/com/google/gson/functional/RawSerializationTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/ReadersWritersTest.java b/src/test/java/com/google/gson/functional/ReadersWritersTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/ReadersWritersTest.java
rename to src/test/java/com/google/gson/functional/ReadersWritersTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java b/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
rename to src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/SecurityTest.java b/src/test/java/com/google/gson/functional/SecurityTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/SecurityTest.java
rename to src/test/java/com/google/gson/functional/SecurityTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/SerializedNameTest.java b/src/test/java/com/google/gson/functional/SerializedNameTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/SerializedNameTest.java
rename to src/test/java/com/google/gson/functional/SerializedNameTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
rename to src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/StringTest.java b/src/test/java/com/google/gson/functional/StringTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/StringTest.java
rename to src/test/java/com/google/gson/functional/StringTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java b/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java
rename to src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
similarity index 80%
rename from gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
rename to src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
index ad737ec51..85294e2dc 100644
--- a/gson/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
+++ b/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
@@ -44,7 +44,7 @@
   private static final Student STUDENT1 = new Student(STUDENT1_ID, "first");
   private static final Student STUDENT2 = new Student(STUDENT2_ID, "second");
   private static final Type TYPE_COURSE_HISTORY =
-    new TypeToken<Course<HistoryCourse>>(){}.getType(); 
+    new TypeToken<Course<HistoryCourse>>(){}.getType();
   private static final Id<Course<HistoryCourse>> COURSE_ID =
       new Id<Course<HistoryCourse>>("10", TYPE_COURSE_HISTORY);
 
@@ -61,16 +61,16 @@ protected void setUp() {
   }
 
   public void testSerializeId() {
-    String json = gson.toJson(course, TYPE_COURSE_HISTORY);
+    final String json = gson.toJson(course, TYPE_COURSE_HISTORY);
     assertTrue(json.contains(String.valueOf(COURSE_ID.getValue())));
     assertTrue(json.contains(String.valueOf(STUDENT1_ID.getValue())));
     assertTrue(json.contains(String.valueOf(STUDENT2_ID.getValue())));
   }
 
   public void testDeserializeId() {
-    String json = "{courseId:1,students:[{id:1,name:'first'},{id:6,name:'second'}],"
+    final String json = "{courseId:1,students:[{id:1,name:'first'},{id:6,name:'second'}],"
       + "numAssignments:4,assignment:{}}";
-    Course<HistoryCourse> target = gson.fromJson(json, TYPE_COURSE_HISTORY);
+    final Course<HistoryCourse> target = gson.fromJson(json, TYPE_COURSE_HISTORY);
     assertEquals("1", target.getStudents().get(0).id.getValue());
     assertEquals("6", target.getStudents().get(1).id.getValue());
     assertEquals("1", target.getId().getValue());
@@ -81,7 +81,7 @@ public void testDeserializeId() {
     @SuppressWarnings("unused")
     final Type typeOfId;
 
-    private Id(String value, Type typeOfId) {
+    private Id(final String value, final Type typeOfId) {
       this.value = value;
       this.typeOfId = typeOfId;
     }
@@ -95,20 +95,20 @@ public String getValue() {
 
     @SuppressWarnings("rawtypes")
     @Override
-    public Id<?> deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
+    public Id<?> deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
         throws JsonParseException {
       if (!(typeOfT instanceof ParameterizedType)) {
         throw new JsonParseException("Id of unknown type: " + typeOfT);
       }
-      ParameterizedType parameterizedType = (ParameterizedType) typeOfT;
+      final ParameterizedType parameterizedType = (ParameterizedType) typeOfT;
       // Since Id takes only one TypeVariable, the actual type corresponding to the first
       // TypeVariable is the Type we are looking for
-      Type typeOfId = parameterizedType.getActualTypeArguments()[0];
+      final Type typeOfId = parameterizedType.getActualTypeArguments()[0];
       return new Id(json.getAsString(), typeOfId);
     }
 
     @Override
-    public JsonElement serialize(Id<?> src, Type typeOfSrc, JsonSerializationContext context) {
+    public JsonElement serialize(final Id<?> src, final Type typeOfSrc, final JsonSerializationContext context) {
       return new JsonPrimitive(src.getValue());
     }
   }
@@ -121,25 +121,25 @@ public JsonElement serialize(Id<?> src, Type typeOfSrc, JsonSerializationContext
     private Student() {
       this(null, null);
     }
-    public Student(Id<Student> id, String name) {
+    public Student(final Id<Student> id, final String name) {
       this.id = id;
       this.name = name;
     }
   }
 
   @SuppressWarnings("unused")
-  private static class Course<T> {
+  public static class Course<T> {
     final List<Student> students;
     private final Id<Course<T>> courseId;
     private final int numAssignments;
     private final Assignment<T> assignment;
 
-    private Course() {
+    public Course() {
       this(null, 0, null, new ArrayList<Student>());
     }
 
-    public Course(Id<Course<T>> courseId, int numAssignments,
-        Assignment<T> assignment, List<Student> players) {
+    public Course(final Id<Course<T>> courseId, final int numAssignments,
+        final Assignment<T> assignment, final List<Student> players) {
       this.courseId = courseId;
       this.numAssignments = numAssignments;
       this.assignment = assignment;
@@ -161,7 +161,7 @@ public Course(Id<Course<T>> courseId, int numAssignments,
     private Assignment() {
       this(null, null);
     }
-    public Assignment(Id<Assignment<T>> id, T data) {
+    public Assignment(final Id<Assignment<T>> id, final T data) {
       this.id = id;
       this.data = data;
     }
@@ -172,7 +172,8 @@ public Assignment(Id<Assignment<T>> id, T data) {
     int numClasses;
   }
 
-  private static <T> List<T> createList(T ...items) {
+  @SafeVarargs
+  private static <T> List<T> createList(final T ...items) {
     return Arrays.asList(items);
   }
 }
diff --git a/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java b/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
rename to src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java b/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
similarity index 81%
rename from gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
rename to src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
index 25b9c3436..65c4e1547 100644
--- a/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
+++ b/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
@@ -35,7 +35,7 @@
 public final class TypeHierarchyAdapterTest extends TestCase {
 
   public void testTypeHierarchy() {
-    Manager andy = new Manager();
+    final Manager andy = new Manager();
     andy.userid = "andy";
     andy.startDate = 2005;
     andy.minions = new Employee[] {
@@ -44,7 +44,7 @@ public void testTypeHierarchy() {
         new Employee("jesse", 2006),
     };
 
-    CEO eric = new CEO();
+    final CEO eric = new CEO();
     eric.userid = "eric";
     eric.startDate = 2001;
     eric.assistant = new Employee("jerome", 2006);
@@ -55,15 +55,15 @@ public void testTypeHierarchy() {
         andy,
     };
 
-    Gson gson = new GsonBuilder()
+    final Gson gson = new GsonBuilder()
         .registerTypeHierarchyAdapter(Employee.class, new EmployeeAdapter())
         .setPrettyPrinting()
         .create();
 
-    Company company = new Company();
+    final Company company = new Company();
     company.ceo = eric;
 
-    String json = gson.toJson(company, Company.class);
+    final String json = gson.toJson(company, Company.class);
     assertEquals("{\n" +
         "  \"ceo\": {\n" +
         "    \"userid\": \"eric\",\n" +
@@ -103,7 +103,7 @@ public void testTypeHierarchy() {
         "  }\n" +
         "}", json);
 
-    Company copied = gson.fromJson(json, Company.class);
+    final Company copied = gson.fromJson(json, Company.class);
     assertEquals(json, gson.toJson(copied, Company.class));
     assertEquals(copied.ceo.userid, company.ceo.userid);
     assertEquals(copied.ceo.assistant.userid, company.ceo.assistant.userid);
@@ -117,17 +117,17 @@ public void testTypeHierarchy() {
   }
 
   public void testRegisterSuperTypeFirst() {
-    Gson gson = new GsonBuilder()
+    final Gson gson = new GsonBuilder()
         .registerTypeHierarchyAdapter(Employee.class, new EmployeeAdapter())
         .registerTypeHierarchyAdapter(Manager.class, new ManagerAdapter())
         .create();
 
-    Manager manager = new Manager();
+    final Manager manager = new Manager();
     manager.userid = "inder";
 
-    String json = gson.toJson(manager, Manager.class);
+    final String json = gson.toJson(manager, Manager.class);
     assertEquals("\"inder\"", json);
-    Manager copied = gson.fromJson(json, Manager.class);
+    final Manager copied = gson.fromJson(json, Manager.class);
     assertEquals(manager.userid, copied.userid);
   }
 
@@ -140,20 +140,20 @@ public void testRegisterSubTypeFirstAllowed() {
   }
 
   static class ManagerAdapter implements JsonSerializer<Manager>, JsonDeserializer<Manager> {
-    @Override public Manager deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {
-      Manager result = new Manager();
+    @Override public Manager deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context) {
+      final Manager result = new Manager();
       result.userid = json.getAsString();
       return result;
     }
-    @Override public JsonElement serialize(Manager src, Type typeOfSrc, JsonSerializationContext context) {
+    @Override public JsonElement serialize(final Manager src, final Type typeOfSrc, final JsonSerializationContext context) {
       return new JsonPrimitive(src.userid);
     }
   }
 
   static class EmployeeAdapter implements JsonSerializer<Employee>, JsonDeserializer<Employee> {
-    @Override public JsonElement serialize(Employee employee, Type typeOfSrc,
-        JsonSerializationContext context) {
-      JsonObject result = new JsonObject();
+    @Override public JsonElement serialize(final Employee employee, final Type typeOfSrc,
+        final JsonSerializationContext context) {
+      final JsonObject result = new JsonObject();
       result.add("userid", context.serialize(employee.userid, String.class));
       result.add("startDate", context.serialize(employee.startDate, long.class));
       if (employee instanceof Manager) {
@@ -165,20 +165,20 @@ public void testRegisterSubTypeFirstAllowed() {
       return result;
     }
 
-    @Override public Employee deserialize(JsonElement json, Type typeOfT,
-        JsonDeserializationContext context) throws JsonParseException {
-      JsonObject object = json.getAsJsonObject();
+    @Override public Employee deserialize(final JsonElement json, final Type typeOfT,
+        final JsonDeserializationContext context) throws JsonParseException {
+      final JsonObject object = json.getAsJsonObject();
       Employee result = null;
 
       // if the employee has an assistant, she must be the CEO
-      JsonElement assistant = object.get("assistant");
+      final JsonElement assistant = object.get("assistant");
       if (assistant != null) {
         result = new CEO();
         ((CEO) result).assistant = context.deserialize(assistant, Employee.class);
       }
 
       // only managers have minions
-      JsonElement minons = object.get("minions");
+      final JsonElement minons = object.get("minions");
       if (minons != null) {
         if (result == null) {
           result = new Manager();
@@ -199,7 +199,7 @@ public void testRegisterSubTypeFirstAllowed() {
     String userid;
     long startDate;
 
-    Employee(String userid, long startDate) {
+    Employee(final String userid, final long startDate) {
       this.userid = userid;
       this.startDate = startDate;
     }
@@ -215,7 +215,7 @@ public void testRegisterSubTypeFirstAllowed() {
     Employee assistant;
   }
 
-  static class Company {
+  public static class Company {
     CEO ceo;
   }
 }
diff --git a/gson/src/test/java/com/google/gson/functional/TypeVariableTest.java b/src/test/java/com/google/gson/functional/TypeVariableTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/TypeVariableTest.java
rename to src/test/java/com/google/gson/functional/TypeVariableTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java b/src/test/java/com/google/gson/functional/UncategorizedTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
rename to src/test/java/com/google/gson/functional/UncategorizedTest.java
diff --git a/gson/src/test/java/com/google/gson/functional/VersioningTest.java b/src/test/java/com/google/gson/functional/VersioningTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/functional/VersioningTest.java
rename to src/test/java/com/google/gson/functional/VersioningTest.java
diff --git a/gson/src/test/java/com/google/gson/internal/GsonTypesTest.java b/src/test/java/com/google/gson/internal/GsonTypesTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/internal/GsonTypesTest.java
rename to src/test/java/com/google/gson/internal/GsonTypesTest.java
diff --git a/gson/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java b/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java
rename to src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java
diff --git a/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java b/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
similarity index 74%
rename from gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
rename to src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
index 2aeeeb764..4b027eccb 100644
--- a/gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
+++ b/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java
@@ -29,7 +29,7 @@
 
 public final class LinkedHashTreeMapTest extends TestCase {
   public void testIterationOrder() {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     map.put("a", "android");
     map.put("c", "cola");
     map.put("b", "bbq");
@@ -38,11 +38,11 @@ public void testIterationOrder() {
   }
 
   public void testRemoveRootDoesNotDoubleUnlink() {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     map.put("a", "android");
     map.put("c", "cola");
     map.put("b", "bbq");
-    Iterator<Map.Entry<String,String>> it = map.entrySet().iterator();
+    final Iterator<Map.Entry<String,String>> it = map.entrySet().iterator();
     it.next();
     it.next();
     it.next();
@@ -51,36 +51,36 @@ public void testRemoveRootDoesNotDoubleUnlink() {
   }
 
   public void testPutNullKeyFails() {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     try {
       map.put(null, "android");
       fail();
-    } catch (NullPointerException expected) {
+    } catch (final NullPointerException expected) {
     }
   }
 
   public void testPutNonComparableKeyFails() {
-    LinkedHashTreeMap<Object, String> map = new LinkedHashTreeMap<Object, String>();
+    final LinkedHashTreeMap<Object, String> map = new LinkedHashTreeMap<Object, String>();
     try {
       map.put(new Object(), "android");
       fail();
-    } catch (ClassCastException expected) {}
+    } catch (final ClassCastException expected) {}
   }
 
   public void testContainsNonComparableKeyReturnsFalse() {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     map.put("a", "android");
     assertFalse(map.containsKey(new Object()));
   }
 
   public void testContainsNullKeyIsAlwaysFalse() {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     map.put("a", "android");
     assertFalse(map.containsKey(null));
   }
 
   public void testPutOverrides() throws Exception {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     assertNull(map.put("d", "donut"));
     assertNull(map.put("e", "eclair"));
     assertNull(map.put("f", "froyo"));
@@ -92,7 +92,7 @@ public void testPutOverrides() throws Exception {
   }
 
   public void testEmptyStringValues() {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     map.put("a", "");
     assertTrue(map.containsKey("a"));
     assertEquals("", map.get("a"));
@@ -102,23 +102,23 @@ public void testEmptyStringValues() {
   // this test will consistently fail (assuming the initial size is 16 and rehashing
   // size remains at 3/4)
   public void testForceDoublingAndRehash() throws Exception {
-    Random random = new Random(1367593214724L);
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
-    String[] keys = new String[1000];
+    final Random random = new Random(1367593214724L);
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final String[] keys = new String[1000];
     for (int i = 0; i < keys.length; i++) {
       keys[i] = Integer.toString(Math.abs(random.nextInt()), 36) + "-" + i;
       map.put(keys[i], "" + i);
     }
 
     for (int i = 0; i < keys.length; i++) {
-      String key = keys[i];
+      final String key = keys[i];
       assertTrue(map.containsKey(key));
       assertEquals("" + i, map.get(key));
     }
   }
 
   public void testClear() {
-    LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
+    final LinkedHashTreeMap<String, String> map = new LinkedHashTreeMap<String, String>();
     map.put("a", "android");
     map.put("c", "cola");
     map.put("b", "bbq");
@@ -128,13 +128,13 @@ public void testClear() {
   }
 
   public void testEqualsAndHashCode() throws Exception {
-    LinkedHashTreeMap<String, Integer> map1 = new LinkedHashTreeMap<String, Integer>();
+    final LinkedHashTreeMap<String, Integer> map1 = new LinkedHashTreeMap<String, Integer>();
     map1.put("A", 1);
     map1.put("B", 2);
     map1.put("C", 3);
     map1.put("D", 4);
 
-    LinkedHashTreeMap<String, Integer> map2 = new LinkedHashTreeMap<String, Integer>();
+    final LinkedHashTreeMap<String, Integer> map2 = new LinkedHashTreeMap<String, Integer>();
     map2.put("C", 3);
     map2.put("B", 2);
     map2.put("D", 4);
@@ -156,10 +156,10 @@ public void testAvlWalker() {
         "a", "b", "c", "d");
   }
 
-  private void assertAvlWalker(Node<String, String> root, String... values) {
-    AvlIterator<String, String> iterator = new AvlIterator<String, String>();
+  private void assertAvlWalker(final Node<String, String> root, final String... values) {
+    final AvlIterator<String, String> iterator = new AvlIterator<String, String>();
     iterator.reset(root);
-    for (String value : values) {
+    for (final String value : values) {
       assertEquals(value, iterator.next().getKey());
     }
     assertNull(iterator.next());
@@ -188,9 +188,9 @@ public void testAvlBuilder() {
         + "(((q r s) t (u v w)) x ((y z A) B (C D E))))");
   }
 
-  private void assertAvlBuilder(int size, String expected) {
-    char[] values = "abcdefghijklmnopqrstuvwxyzABCDE".toCharArray();
-    AvlBuilder<String, String> avlBuilder = new AvlBuilder<String, String>();
+  private void assertAvlBuilder(final int size, final String expected) {
+    final char[] values = "abcdefghijklmnopqrstuvwxyzABCDE".toCharArray();
+    final AvlBuilder<String, String> avlBuilder = new AvlBuilder<String, String>();
     avlBuilder.reset(size);
     for (int i = 0; i < size; i++) {
       avlBuilder.add(node(Character.toString(values[i])));
@@ -200,24 +200,26 @@ private void assertAvlBuilder(int size, String expected) {
 
   public void testDoubleCapacity() {
     @SuppressWarnings("unchecked") // Arrays and generics don't get along.
+    final
     Node<String, String>[] oldTable = new Node[1];
     oldTable[0] = node(node(node("a"), "b", node("c")), "d", node(node("e"), "f", node("g")));
 
-    Node<String, String>[] newTable = LinkedHashTreeMap.doubleCapacity(oldTable);
+    final Node<String, String>[] newTable = LinkedHashTreeMap.doubleCapacity(oldTable);
     assertTree("(b d f)", newTable[0]); // Even hash codes!
     assertTree("(a c (. e g))", newTable[1]); // Odd hash codes!
   }
 
   public void testDoubleCapacityAllNodesOnLeft() {
     @SuppressWarnings("unchecked") // Arrays and generics don't get along.
+    final
     Node<String, String>[] oldTable = new Node[1];
     oldTable[0] = node(node("b"), "d", node("f"));
 
-    Node<String, String>[] newTable = LinkedHashTreeMap.doubleCapacity(oldTable);
+    final Node<String, String>[] newTable = LinkedHashTreeMap.doubleCapacity(oldTable);
     assertTree("(b d f)", newTable[0]); // Even hash codes!
     assertNull(newTable[1]); // Odd hash codes!
 
-    for (Node<?, ?> node : newTable) {
+    for (final Node<?, ?> node : newTable) {
       if (node != null) {
         assertConsistent(node);
       }
@@ -226,13 +228,13 @@ public void testDoubleCapacityAllNodesOnLeft() {
 
   private static final Node<String, String> head = new Node<String, String>();
 
-  private Node<String, String> node(String value) {
+  private Node<String, String> node(final String value) {
     return new Node<String, String>(null, value, value.hashCode(), head, head);
   }
 
-  private Node<String, String> node(Node<String, String> left, String value,
-      Node<String, String> right) {
-    Node<String, String> result = node(value);
+  private Node<String, String> node(final Node<String, String> left, final String value,
+      final Node<String, String> right) {
+    final Node<String, String> result = node(value);
     if (left != null) {
       result.left = left;
       left.parent = result;
@@ -244,12 +246,12 @@ public void testDoubleCapacityAllNodesOnLeft() {
     return result;
   }
 
-  private void assertTree(String expected, Node<?, ?> root) {
+  private void assertTree(final String expected, final Node<?, ?> root) {
     assertEquals(expected, toString(root));
     assertConsistent(root);
   }
 
-  private void assertConsistent(Node<?, ?> node) {
+  private void assertConsistent(final Node<?, ?> node) {
     int leftHeight = 0;
     if (node.left != null) {
       assertConsistent(node.left);
@@ -270,7 +272,7 @@ private void assertConsistent(Node<?, ?> node) {
     }
   }
 
-  private String toString(Node<?, ?> root) {
+  private String toString(final Node<?, ?> root) {
     if (root == null) {
       return ".";
     } else if (root.left == null && root.right == null) {
@@ -280,9 +282,10 @@ private String toString(Node<?, ?> root) {
     }
   }
 
-  private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
-    ArrayList<T> actualList = new ArrayList<T>();
-    for (T t : actual) {
+  @SafeVarargs
+  private <T> void assertIterationOrder(final Iterable<T> actual, final T... expected) {
+    final ArrayList<T> actualList = new ArrayList<T>();
+    for (final T t : actual) {
       actualList.add(t);
     }
     assertEquals(Arrays.asList(expected), actualList);
diff --git a/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java b/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
similarity index 68%
rename from gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
rename to src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
index 580d25a57..c872bc0fd 100644
--- a/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
+++ b/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
@@ -29,7 +29,7 @@
 public final class LinkedTreeMapTest extends TestCase {
 
   public void testIterationOrder() {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     map.put("a", "android");
     map.put("c", "cola");
     map.put("b", "bbq");
@@ -38,11 +38,11 @@ public void testIterationOrder() {
   }
 
   public void testRemoveRootDoesNotDoubleUnlink() {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     map.put("a", "android");
     map.put("c", "cola");
     map.put("b", "bbq");
-    Iterator<Map.Entry<String,String>> it = map.entrySet().iterator();
+    final Iterator<Map.Entry<String,String>> it = map.entrySet().iterator();
     it.next();
     it.next();
     it.next();
@@ -51,36 +51,36 @@ public void testRemoveRootDoesNotDoubleUnlink() {
   }
 
   public void testPutNullKeyFails() {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     try {
       map.put(null, "android");
       fail();
-    } catch (NullPointerException expected) {
+    } catch (final NullPointerException expected) {
     }
   }
 
   public void testPutNonComparableKeyFails() {
-    LinkedTreeMap<Object, String> map = new LinkedTreeMap<Object, String>();
+    final LinkedTreeMap<Object, String> map = new LinkedTreeMap<Object, String>();
     try {
       map.put(new Object(), "android");
       fail();
-    } catch (ClassCastException expected) {}
+    } catch (final ClassCastException expected) {}
   }
 
   public void testContainsNonComparableKeyReturnsFalse() {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     map.put("a", "android");
     assertFalse(map.containsKey(new Object()));
   }
 
   public void testContainsNullKeyIsAlwaysFalse() {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     map.put("a", "android");
     assertFalse(map.containsKey(null));
   }
 
   public void testPutOverrides() throws Exception {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     assertNull(map.put("d", "donut"));
     assertNull(map.put("e", "eclair"));
     assertNull(map.put("f", "froyo"));
@@ -92,30 +92,30 @@ public void testPutOverrides() throws Exception {
   }
 
   public void testEmptyStringValues() {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     map.put("a", "");
     assertTrue(map.containsKey("a"));
     assertEquals("", map.get("a"));
   }
 
   public void testLargeSetOfRandomKeys() throws Exception {
-    Random random = new Random(1367593214724L);
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
-    String[] keys = new String[1000];
+    final Random random = new Random(1367593214724L);
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final String[] keys = new String[1000];
     for (int i = 0; i < keys.length; i++) {
       keys[i] = Integer.toString(Math.abs(random.nextInt()), 36) + "-" + i;
       map.put(keys[i], "" + i);
     }
 
     for (int i = 0; i < keys.length; i++) {
-      String key = keys[i];
+      final String key = keys[i];
       assertTrue(map.containsKey(key));
       assertEquals("" + i, map.get(key));
     }
   }
 
   public void testClear() {
-    LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
+    final LinkedTreeMap<String, String> map = new LinkedTreeMap<String, String>();
     map.put("a", "android");
     map.put("c", "cola");
     map.put("b", "bbq");
@@ -125,13 +125,13 @@ public void testClear() {
   }
 
   public void testEqualsAndHashCode() throws Exception {
-    LinkedTreeMap<String, Integer> map1 = new LinkedTreeMap<String, Integer>();
+    final LinkedTreeMap<String, Integer> map1 = new LinkedTreeMap<String, Integer>();
     map1.put("A", 1);
     map1.put("B", 2);
     map1.put("C", 3);
     map1.put("D", 4);
 
-    LinkedTreeMap<String, Integer> map2 = new LinkedTreeMap<String, Integer>();
+    final LinkedTreeMap<String, Integer> map2 = new LinkedTreeMap<String, Integer>();
     map2.put("C", 3);
     map2.put("B", 2);
     map2.put("D", 4);
@@ -140,9 +140,10 @@ public void testEqualsAndHashCode() throws Exception {
     MoreAsserts.assertEqualsAndHashCode(map1, map2);
   }
 
-  private <T> void assertIterationOrder(Iterable<T> actual, T... expected) {
-    ArrayList<T> actualList = new ArrayList<T>();
-    for (T t : actual) {
+  @SafeVarargs
+  private <T> void assertIterationOrder(final Iterable<T> actual, final T... expected) {
+    final ArrayList<T> actualList = new ArrayList<T>();
+    for (final T t : actual) {
       actualList.add(t);
     }
     assertEquals(Arrays.asList(expected), actualList);
diff --git a/gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java b/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java
rename to src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java
diff --git a/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java b/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
similarity index 75%
rename from gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
rename to src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
index e07014d3f..c87a071e3 100644
--- a/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
+++ b/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
@@ -23,7 +23,7 @@
 @SuppressWarnings("resource")
 public final class JsonTreeWriterTest extends TestCase {
   public void testArray() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.beginArray();
     writer.value(1);
     writer.value(2);
@@ -33,7 +33,7 @@ public void testArray() throws IOException {
   }
 
   public void testNestedArray() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.beginArray();
     writer.beginArray();
     writer.endArray();
@@ -46,7 +46,7 @@ public void testNestedArray() throws IOException {
   }
 
   public void testObject() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.beginObject();
     writer.name("A").value(1);
     writer.name("B").value(2);
@@ -55,7 +55,7 @@ public void testObject() throws IOException {
   }
 
   public void testNestedObject() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.beginObject();
     writer.name("A");
     writer.beginObject();
@@ -71,7 +71,7 @@ public void testNestedObject() throws IOException {
   }
 
   public void testWriteAfterClose() throws Exception {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.setLenient(true);
     writer.beginArray();
     writer.value("A");
@@ -80,23 +80,23 @@ public void testWriteAfterClose() throws Exception {
     try {
       writer.beginArray();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testPrematureClose() throws Exception {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.setLenient(true);
     writer.beginArray();
     try {
       writer.close();
       fail();
-    } catch (IOException expected) {
+    } catch (final IOException expected) {
     }
   }
 
   public void testSerializeNullsFalse() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.setSerializeNulls(false);
     writer.beginObject();
     writer.name("A");
@@ -106,7 +106,7 @@ public void testSerializeNullsFalse() throws IOException {
   }
 
   public void testSerializeNullsTrue() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.setSerializeNulls(true);
     writer.beginObject();
     writer.name("A");
@@ -116,12 +116,12 @@ public void testSerializeNullsTrue() throws IOException {
   }
 
   public void testEmptyWriter() {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     assertEquals(JsonNull.INSTANCE, writer.get());
   }
 
   public void testLenientNansAndInfinities() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.setLenient(true);
     writer.beginArray();
     writer.value(Double.NaN);
@@ -132,44 +132,44 @@ public void testLenientNansAndInfinities() throws IOException {
   }
 
   public void testStrictNansAndInfinities() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.setLenient(false);
     writer.beginArray();
     try {
       writer.value(Double.NaN);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       writer.value(Double.NEGATIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       writer.value(Double.POSITIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testStrictBoxedNansAndInfinities() throws IOException {
-    JsonTreeWriter writer = new JsonTreeWriter();
+    final JsonTreeWriter writer = new JsonTreeWriter();
     writer.setLenient(false);
     writer.beginArray();
     try {
-      writer.value(new Double(Double.NaN));
+      writer.value(Double.NaN);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
-      writer.value(new Double(Double.NEGATIVE_INFINITY));
+      writer.value(Double.NEGATIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
-      writer.value(new Double(Double.POSITIVE_INFINITY));
+      writer.value(Double.POSITIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 }
diff --git a/gson/src/test/java/com/google/gson/metrics/PerformanceTest.java b/src/test/java/com/google/gson/metrics/PerformanceTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/metrics/PerformanceTest.java
rename to src/test/java/com/google/gson/metrics/PerformanceTest.java
diff --git a/gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java b/src/test/java/com/google/gson/reflect/TypeTokenTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java
rename to src/test/java/com/google/gson/reflect/TypeTokenTest.java
diff --git a/gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java b/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
rename to src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java
diff --git a/gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java b/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java
rename to src/test/java/com/google/gson/stream/JsonReaderPathTest.java
diff --git a/gson/src/test/java/com/google/gson/stream/JsonReaderTest.java b/src/test/java/com/google/gson/stream/JsonReaderTest.java
similarity index 100%
rename from gson/src/test/java/com/google/gson/stream/JsonReaderTest.java
rename to src/test/java/com/google/gson/stream/JsonReaderTest.java
diff --git a/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java b/src/test/java/com/google/gson/stream/JsonWriterTest.java
similarity index 67%
rename from gson/src/test/java/com/google/gson/stream/JsonWriterTest.java
rename to src/test/java/com/google/gson/stream/JsonWriterTest.java
index 91763d184..5c3f64d43 100644
--- a/gson/src/test/java/com/google/gson/stream/JsonWriterTest.java
+++ b/src/test/java/com/google/gson/stream/JsonWriterTest.java
@@ -26,132 +26,132 @@
 public final class JsonWriterTest extends TestCase {
 
   public void testTopLevelValueTypes() throws IOException {
-    StringWriter string1 = new StringWriter();
-    JsonWriter writer1 = new JsonWriter(string1);
+    final StringWriter string1 = new StringWriter();
+    final JsonWriter writer1 = new JsonWriter(string1);
     writer1.value(true);
     writer1.close();
     assertEquals("true", string1.toString());
 
-    StringWriter string2 = new StringWriter();
-    JsonWriter writer2 = new JsonWriter(string2);
+    final StringWriter string2 = new StringWriter();
+    final JsonWriter writer2 = new JsonWriter(string2);
     writer2.nullValue();
     writer2.close();
     assertEquals("null", string2.toString());
 
-    StringWriter string3 = new StringWriter();
-    JsonWriter writer3 = new JsonWriter(string3);
+    final StringWriter string3 = new StringWriter();
+    final JsonWriter writer3 = new JsonWriter(string3);
     writer3.value(123);
     writer3.close();
     assertEquals("123", string3.toString());
 
-    StringWriter string4 = new StringWriter();
-    JsonWriter writer4 = new JsonWriter(string4);
+    final StringWriter string4 = new StringWriter();
+    final JsonWriter writer4 = new JsonWriter(string4);
     writer4.value(123.4);
     writer4.close();
     assertEquals("123.4", string4.toString());
 
-    StringWriter string5 = new StringWriter();
-    JsonWriter writert = new JsonWriter(string5);
+    final StringWriter string5 = new StringWriter();
+    final JsonWriter writert = new JsonWriter(string5);
     writert.value("a");
     writert.close();
     assertEquals("\"a\"", string5.toString());
   }
 
   public void testInvalidTopLevelTypes() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.name("hello");
     try {
       jsonWriter.value("world");
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testTwoNames() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     jsonWriter.name("a");
     try {
       jsonWriter.name("a");
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testNameWithoutValue() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     jsonWriter.name("a");
     try {
       jsonWriter.endObject();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testValueWithoutName() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     try {
       jsonWriter.value(true);
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testMultipleTopLevelValues() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray().endArray();
     try {
       jsonWriter.beginArray();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testBadNestingObject() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.beginObject();
     try {
       jsonWriter.endArray();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testBadNestingArray() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.beginArray();
     try {
       jsonWriter.endObject();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testNullName() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     try {
       jsonWriter.name(null);
       fail();
-    } catch (NullPointerException expected) {
+    } catch (final NullPointerException expected) {
     }
   }
 
   public void testNullStringValue() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     jsonWriter.name("a");
     jsonWriter.value((String) null);
@@ -160,8 +160,8 @@ public void testNullStringValue() throws IOException {
   }
 
   public void testJsonValue() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     jsonWriter.name("a");
     jsonWriter.jsonValue("{\"b\":true}");
@@ -172,50 +172,50 @@ public void testJsonValue() throws IOException {
   }
 
   public void testNonFiniteDoubles() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     try {
       jsonWriter.value(Double.NaN);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       jsonWriter.value(Double.NEGATIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
       jsonWriter.value(Double.POSITIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testNonFiniteBoxedDoubles() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     try {
-      jsonWriter.value(new Double(Double.NaN));
+      jsonWriter.value(Double.NaN);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
-      jsonWriter.value(new Double(Double.NEGATIVE_INFINITY));
+      jsonWriter.value(Double.NEGATIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
     try {
-      jsonWriter.value(new Double(Double.POSITIVE_INFINITY));
+      jsonWriter.value(Double.POSITIVE_INFINITY);
       fail();
-    } catch (IllegalArgumentException expected) {
+    } catch (final IllegalArgumentException expected) {
     }
   }
 
   public void testDoubles() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.value(-0.0);
     jsonWriter.value(1.0);
@@ -240,8 +240,8 @@ public void testDoubles() throws IOException {
   }
 
   public void testLongs() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.value(0);
     jsonWriter.value(1);
@@ -258,8 +258,8 @@ public void testLongs() throws IOException {
   }
 
   public void testNumbers() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.value(new BigInteger("0"));
     jsonWriter.value(new BigInteger("9223372036854775808"));
@@ -274,8 +274,8 @@ public void testNumbers() throws IOException {
   }
 
   public void testBooleans() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.value(true);
     jsonWriter.value(false);
@@ -284,8 +284,8 @@ public void testBooleans() throws IOException {
   }
 
   public void testNulls() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.nullValue();
     jsonWriter.endArray();
@@ -293,8 +293,8 @@ public void testNulls() throws IOException {
   }
 
   public void testStrings() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.value("a");
     jsonWriter.value("a\"");
@@ -336,8 +336,8 @@ public void testStrings() throws IOException {
   }
 
   public void testUnicodeLineBreaksEscaped() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.value("\u2028 \u2029");
     jsonWriter.endArray();
@@ -345,24 +345,24 @@ public void testUnicodeLineBreaksEscaped() throws IOException {
   }
 
   public void testEmptyArray() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.endArray();
     assertEquals("[]", stringWriter.toString());
   }
 
   public void testEmptyObject() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     jsonWriter.endObject();
     assertEquals("{}", stringWriter.toString());
   }
 
   public void testObjectsInArrays() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginArray();
     jsonWriter.beginObject();
     jsonWriter.name("a").value(5);
@@ -378,8 +378,8 @@ public void testObjectsInArrays() throws IOException {
   }
 
   public void testArraysInObjects() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     jsonWriter.name("a");
     jsonWriter.beginArray();
@@ -397,8 +397,8 @@ public void testArraysInObjects() throws IOException {
   }
 
   public void testDeepNestingArrays() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     for (int i = 0; i < 20; i++) {
       jsonWriter.beginArray();
     }
@@ -409,8 +409,8 @@ public void testDeepNestingArrays() throws IOException {
   }
 
   public void testDeepNestingObjects() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     for (int i = 0; i < 20; i++) {
       jsonWriter.name("a");
@@ -426,8 +426,8 @@ public void testDeepNestingObjects() throws IOException {
   }
 
   public void testRepeatedName() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.beginObject();
     jsonWriter.name("a").value(true);
     jsonWriter.name("a").value(false);
@@ -437,8 +437,8 @@ public void testRepeatedName() throws IOException {
   }
 
   public void testPrettyPrintObject() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.setIndent("   ");
 
     jsonWriter.beginObject();
@@ -456,7 +456,7 @@ public void testPrettyPrintObject() throws IOException {
     jsonWriter.endObject();
     jsonWriter.endObject();
 
-    String expected = "{\n"
+    final String expected = "{\n"
         + "   \"a\": true,\n"
         + "   \"b\": false,\n"
         + "   \"c\": 5.0,\n"
@@ -474,8 +474,8 @@ public void testPrettyPrintObject() throws IOException {
   }
 
   public void testPrettyPrintArray() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter jsonWriter = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter jsonWriter = new JsonWriter(stringWriter);
     jsonWriter.setIndent("   ");
 
     jsonWriter.beginArray();
@@ -493,7 +493,7 @@ public void testPrettyPrintArray() throws IOException {
     jsonWriter.endArray();
     jsonWriter.endArray();
 
-    String expected = "[\n"
+    final String expected = "[\n"
         + "   true,\n"
         + "   false,\n"
         + "   5.0,\n"
@@ -511,8 +511,8 @@ public void testPrettyPrintArray() throws IOException {
   }
 
   public void testLenientWriterPermitsMultipleTopLevelValues() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter writer = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter writer = new JsonWriter(stringWriter);
     writer.setLenient(true);
     writer.beginArray();
     writer.endArray();
@@ -523,87 +523,87 @@ public void testLenientWriterPermitsMultipleTopLevelValues() throws IOException
   }
 
   public void testStrictWriterDoesNotPermitMultipleTopLevelValues() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter writer = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter writer = new JsonWriter(stringWriter);
     writer.beginArray();
     writer.endArray();
     try {
       writer.beginArray();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testClosedWriterThrowsOnStructure() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter writer = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter writer = new JsonWriter(stringWriter);
     writer.beginArray();
     writer.endArray();
     writer.close();
     try {
       writer.beginArray();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
     try {
       writer.endArray();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
     try {
       writer.beginObject();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
     try {
       writer.endObject();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testClosedWriterThrowsOnName() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter writer = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter writer = new JsonWriter(stringWriter);
     writer.beginArray();
     writer.endArray();
     writer.close();
     try {
       writer.name("a");
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testClosedWriterThrowsOnValue() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter writer = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter writer = new JsonWriter(stringWriter);
     writer.beginArray();
     writer.endArray();
     writer.close();
     try {
       writer.value("a");
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testClosedWriterThrowsOnFlush() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter writer = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter writer = new JsonWriter(stringWriter);
     writer.beginArray();
     writer.endArray();
     writer.close();
     try {
       writer.flush();
       fail();
-    } catch (IllegalStateException expected) {
+    } catch (final IllegalStateException expected) {
     }
   }
 
   public void testWriterCloseIsIdempotent() throws IOException {
-    StringWriter stringWriter = new StringWriter();
-    JsonWriter writer = new JsonWriter(stringWriter);
+    final StringWriter stringWriter = new StringWriter();
+    final JsonWriter writer = new JsonWriter(stringWriter);
     writer.beginArray();
     writer.endArray();
     writer.close();
