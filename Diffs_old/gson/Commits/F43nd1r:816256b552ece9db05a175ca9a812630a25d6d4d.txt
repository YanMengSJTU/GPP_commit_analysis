diff --git a/gson/src/main/java/com/google/gson/Gson.java b/gson/src/main/java/com/google/gson/Gson.java
index e97b16279..9d1503327 100644
--- a/gson/src/main/java/com/google/gson/Gson.java
+++ b/gson/src/main/java/com/google/gson/Gson.java
@@ -255,6 +255,10 @@ public Gson() {
     this.factories = Collections.unmodifiableList(factories);
   }
 
+  public ConstructorConstructor constructorConstructor() {
+    return constructorConstructor;
+  }
+
   public Excluder excluder() {
     return excluder;
   }
diff --git a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java b/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
index 34e97664e..a3b6e9dbd 100644
--- a/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
+++ b/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java
@@ -139,7 +139,7 @@ static boolean excludeField(Field f, boolean serialize, Excluder excluder) {
     };
   }
 
-  private Map<String, BoundField> getBoundFields(Gson context, TypeToken<?> type, Class<?> raw) {
+  protected Map<String, BoundField> getBoundFields(Gson context, TypeToken<?> type, Class<?> raw) {
     Map<String, BoundField> result = new LinkedHashMap<String, BoundField>();
     if (raw.isInterface()) {
       return result;
@@ -177,7 +177,7 @@ static boolean excludeField(Field f, boolean serialize, Excluder excluder) {
     return result;
   }
 
-  static abstract class BoundField {
+  protected static abstract class BoundField {
     final String name;
     final boolean serialized;
     final boolean deserialized;
