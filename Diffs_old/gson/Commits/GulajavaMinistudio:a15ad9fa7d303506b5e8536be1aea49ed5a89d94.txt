diff --git a/README.md b/README.md
index 2648a7ea5..2a9714b6d 100644
--- a/README.md
+++ b/README.md
@@ -17,6 +17,13 @@ There are a few open-source projects that can convert Java objects to JSON. Howe
   * Support arbitrarily complex objects (with deep inheritance hierarchies and extensive use of generic types)
 
 ### Gson Download and Maven
+  * To use Gson in Android
+```
+dependencies {
+    compile 'com.google.code.gson:gson:2.8.2'
+}
+```
+
   * [Gson Download](https://maven-badges.herokuapp.com/maven-central/com.google.code.gson/gson) downloads at Maven Central
   * For Maven check "Dependency Information" tab, on the left side.
 
diff --git a/UserGuide.md b/UserGuide.md
index 304a0eefb..67a7c22a7 100644
--- a/UserGuide.md
+++ b/UserGuide.md
@@ -5,6 +5,7 @@
 3. [Gson Performance and Scalability](#TOC-Gson-Performance-and-Scalability)
 4. [Gson Users](#TOC-Gson-Users)
 5. [Using Gson](#TOC-Using-Gson)
+   * [Using Gson with Gradle/Android](#TOC-Gson-With-Gradle)
    * [Using Gson with Maven](#TOC-Gson-With-Maven)
    * [Primitives Examples](#TOC-Primitives-Examples)
    * [Object Examples](#TOC-Object-Examples)
@@ -70,6 +71,12 @@ The primary class to use is [`Gson`](gson/src/main/java/com/google/gson/Gson.jav
 
 The Gson instance does not maintain any state while invoking Json operations. So, you are free to reuse the same object for multiple Json serialization and deserialization operations.
 
+## <a name="TOC-Gson-With-Gradle"></a>Using Gson with Gradle/Android
+```
+dependencies {
+    compile 'com.google.code.gson:gson:2.8.2'
+}
+```
 ## <a name="TOC-Gson-With-Maven"></a>Using Gson with Maven
 To use Gson with Maven2/3, you can use the Gson version available in Maven Central by adding the following dependency:
 
