diff --git a/gson/src/main/java/com/google/gson/DateFormatType.java b/gson/src/main/java/com/google/gson/DateFormatType.java
index 1ae77bf8b..72ec509a8 100644
--- a/gson/src/main/java/com/google/gson/DateFormatType.java
+++ b/gson/src/main/java/com/google/gson/DateFormatType.java
@@ -17,5 +17,33 @@
 package com.google.gson;
 
 public enum DateFormatType {
-	CUSTOM, EN_US, LOCAL, ISO_8601, MILLIS, UNIX, DEFAULT;
+	/**
+	 * Use custom {@link java.text.DateFormat} to format Date at serialization.
+	 * Otherwise uses {@code DateFormatType.DEFAULT}
+	 */
+	CUSTOM,
+	/**
+	 * Format dates using EN-US format.
+	 */
+	EN_US,
+	/**
+	 * Format dates with local format.
+	 */
+	LOCAL,
+	/**
+	 * Format dates with ISO8601 format ( yyyy-MM-dd'T'HH:mm:ss.SSS'Z' )
+	 */
+	ISO_8601,
+	/**
+	 * Format dates as milliseconds
+	 */
+	MILLIS,
+	/**
+	 * Format dates as seconds
+	 */
+	UNIX,
+	/**
+	 * Use default: EN-US.
+	 */
+	DEFAULT;
 }
diff --git a/gson/src/main/java/com/google/gson/GsonBuilder.java b/gson/src/main/java/com/google/gson/GsonBuilder.java
index 651353717..aabe47632 100644
--- a/gson/src/main/java/com/google/gson/GsonBuilder.java
+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java
@@ -399,14 +399,18 @@ public GsonBuilder setDateFormat(String pattern) {
    * <p>Note that any modification done on the date format object will be applied until {@link #create()} is called.</p>
    *
    * @param dateFormat the date format that will serialize/deserialize dates
+   * @param useAsOutputFormat calls {@link setOutputDateFormatType} with {@code DateFormatType.CUSTOM} if set to true.
    * @return a reference to this {@code GsonBuilder} object to fulfill the "Builder" pattern
    * @since 2.6
    */
-  public GsonBuilder setDateFormat(DateFormat dateFormat) {
-    this.customDateFormat = dateFormat;
-    this.datePattern = null;
-    return this;
-  }
+	public GsonBuilder setDateFormat(DateFormat dateFormat, boolean useAsOutputFormat) {
+		this.customDateFormat = dateFormat;
+		if (useAsOutputFormat) {
+			this.outputDateFormatType = DateFormatType.CUSTOM;
+		}
+		this.datePattern = null;
+		return this;
+	}
 
   /**
    * Configures Gson to to serialize {@code Date} objects according to the style value provided.
@@ -439,7 +443,7 @@ public GsonBuilder setDateFormat(int style) {
    * @return a reference to this {@code GsonBuilder} object to fulfill the "Builder" pattern
    * @since 2.6
    */
-  public GsonBuilder setDateFormatType(DateFormatType outputDateFormatType) {
+  public GsonBuilder setOutputDateFormatType(DateFormatType outputDateFormatType) {
     this.outputDateFormatType = outputDateFormatType;
     return this;
   }
