diff --git a/gson/src/main/java/com/economic/persistgson/JsonObject.java b/gson/src/main/java/com/economic/persistgson/JsonObject.java
index a64010695..8b00f6122 100644
--- a/gson/src/main/java/com/economic/persistgson/JsonObject.java
+++ b/gson/src/main/java/com/economic/persistgson/JsonObject.java
@@ -55,7 +55,7 @@ JsonObject deepCopy() {
    */
   public void add(String property, com.economic.persistgson.JsonElement value) {
     if (value == null) {
-      value = com.economic.persistgson.JsonNull.INSTANCE;
+      value = JsonNull.INSTANCE;
     }
     members.put(property, value);
   }
diff --git a/gson/src/main/java/com/economic/persistgson/internal/bind/TypeAdapterRuntimeTypeWrapper.java b/gson/src/main/java/com/economic/persistgson/internal/bind/TypeAdapterRuntimeTypeWrapper.java
index ceb9bb10e..bd1bde873 100644
--- a/gson/src/main/java/com/economic/persistgson/internal/bind/TypeAdapterRuntimeTypeWrapper.java
+++ b/gson/src/main/java/com/economic/persistgson/internal/bind/TypeAdapterRuntimeTypeWrapper.java
@@ -21,6 +21,7 @@
 
 import com.economic.persistgson.Gson;
 import com.economic.persistgson.TypeAdapter;
+import com.economic.persistgson.persist.PersistReflectiveTypeAdapterFactory;
 import com.economic.persistgson.stream.JsonReader;
 import com.economic.persistgson.reflect.TypeToken;
 import com.economic.persistgson.stream.JsonWriter;
@@ -54,10 +55,10 @@ public void write(JsonWriter out, T value) throws IOException {
     Type runtimeType = getRuntimeTypeIfMoreSpecific(type, value);
     if (runtimeType != type) {
       TypeAdapter runtimeTypeAdapter = context.getAdapter(TypeToken.get(runtimeType));
-      if (!(runtimeTypeAdapter instanceof ReflectiveTypeAdapterFactory.Adapter)) {
+      if (!(runtimeTypeAdapter instanceof PersistReflectiveTypeAdapterFactory.Adapter)) {
         // The user registered a type adapter for the runtime type, so we will use that
         chosen = runtimeTypeAdapter;
-      } else if (!(delegate instanceof ReflectiveTypeAdapterFactory.Adapter)) {
+      } else if (!(delegate instanceof PersistReflectiveTypeAdapterFactory.Adapter)) {
         // The user registered a type adapter for Base class, so we prefer it over the
         // reflective type adapter for the runtime type
         chosen = delegate;
diff --git a/gson/src/test/java/com/economic/persistgson/functional/DefaultTypeAdaptersTest.java b/gson/src/test/java/com/economic/persistgson/functional/DefaultTypeAdaptersTest.java
index 80c9141ee..c47e73294 100644
--- a/gson/src/test/java/com/economic/persistgson/functional/DefaultTypeAdaptersTest.java
+++ b/gson/src/test/java/com/economic/persistgson/functional/DefaultTypeAdaptersTest.java
@@ -624,7 +624,7 @@ public void testJsonElementTypeMismatch() {
       gson.fromJson("\"abc\"", JsonObject.class);
       fail();
     } catch (JsonSyntaxException expected) {
-      assertEquals("Expected a JsonObject but was JsonPrimitive",
+      assertEquals("Expected a com.economic.persistgson.JsonObject but was com.economic.persistgson.JsonPrimitive",
           expected.getMessage());
     }
   }
