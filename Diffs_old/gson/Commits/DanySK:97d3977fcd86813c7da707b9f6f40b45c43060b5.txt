diff --git a/build.gradle b/build.gradle
index e9ef38651..fc7b96f3a 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,12 +1,13 @@
-apply plugin: 'java'
-apply plugin: 'eclipse'
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-sourceCompatibility = jdkVersion
-targetCompatibility = jdkVersion
+buildscript {
+    repositories {
+        maven { url "https://plugins.gradle.org/m2/" }
+    }
+    dependencies { classpath "gradle.plugin.org.danilopianini:javadoc.io-linker:0.1.0" }
+}
 
-repositories { mavenCentral() }
+plugins {
+    id "org.danilopianini.build-commons" version "0.1.7"
+}
 
 configurations {
     doc { transitive false }
@@ -19,81 +20,12 @@ dependencies {
    doclet "org.jboss.apiviz:apiviz:$apivizVersion"
 }
 
-eclipse {
-    classpath {
-        downloadSources = true
-        downloadJavadoc = true
-    }
-}
-
-jar {
-    manifest {
-        attributes 'Implementation-Title': artifactId, 'Implementation-Version': version
-    }
-    manifest.attributes provider: 'Alma Mater Studiorum UniversitÃ  di Bologna'
-}
-
-task javadoc(type: Javadoc, overwrite: true) {
-    source configurations.doc.collect { zipTree(it) }
-    source sourceSets.main.allJava
-    classpath = sourceSets.main.output + sourceSets.main.compileClasspath
-    include '**/*.java'
-    destinationDir file("$project.buildDir/docs/javadoc/")
-    failOnError = false
-    options.showAll()
-    options.addBooleanOption('nopackagediagram', true)
-    if(JavaVersion.current() == JavaVersion.VERSION_1_8){
-        options.addStringOption('Xdoclint:none', '-quiet')
-    }
-    configure(options) {
-        windowTitle "$projectLongName version $project.version Javadoc API"
-        docTitle "$projectLongName $project.version reference API"
-        links 'http://docs.oracle.com/javase/8/docs/api/'
-        links 'https://google.github.io/gson/apidocs/'
-        doclet 'org.jboss.apiviz.APIviz'
-        docletpath file(configurations.doclet.asPath)
-    }
-}
-
-task sourcesJar(type: Jar, dependsOn: classes) {
-    classifier = 'sources'
-    from sourceSets.main.allSource
-}
-
-task javadocJar(type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from javadoc.destinationDir
-}
-
-artifacts {
-    archives sourcesJar
-    archives javadocJar
-}
-
-signing { sign configurations.archives }
-signArchives.onlyIf { Boolean.parseBoolean(signArchivesIsEnabled) }
+apply plugin: "org.danilopianini.javadoc.io-linker"
 
 uploadArchives {
     repositories {
         mavenDeployer {
-            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
-                authentication(userName: ossrhUsername, password: ossrhPassword)
-            }
-            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
-                authentication(userName: ossrhUsername, password: ossrhPassword)
-            }
             pom.project {
-                name artifactId
-                description projectDescription
-                packaging 'jar'
-                url "$scmRootUrl/$artifactId"
-                licenses {
-                    license {
-                        name licenseName
-                        url licenseUrl
-                    }
-                }
                 developers {
                     developer {
                         name 'Danilo Pianini'
@@ -105,17 +37,10 @@ uploadArchives {
                         email 'matteo.francia2@studio.unibo.it'
                     }
                 }
-                scm {
-                    url "$scmRootUrl/$artifactId"
-                    connection "$scmType:$scmLogin/$scmRepoName"
-                    developerConnection "$scmType:$scmLogin/$scmRepoName"
-                }
             }
         }
     }
 }
 
-task wrapper(type: Wrapper) { gradleVersion = gradleVersion }
-
-defaultTasks 'wrapper', 'clean', 'build', 'check', 'javadoc', 'assemble', 'install'
+defaultTasks 'clean', 'build', 'check', 'javadoc', 'assemble', 'install'
 
diff --git a/google_checks.xml b/google_checks.xml
new file mode 100644
index 000000000..6a7718a70
--- /dev/null
+++ b/google_checks.xml
@@ -0,0 +1,178 @@
+<?xml version="1.0"?>
+<!DOCTYPE module PUBLIC
+          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
+          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
+
+<!--
+    Checkstyle configuration that checks the Google coding conventions from Google Java Style
+    that can be found at https://google.github.io/styleguide/javaguide.html.
+
+    Checkstyle is very configurable. Be sure to read the documentation at
+    http://checkstyle.sf.net (or in your downloaded distribution).
+
+    To completely disable a check, just comment it out or delete it from the file.
+
+    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.
+ -->
+
+<module name = "Checker">
+    <property name="charset" value="UTF-8"/>
+
+    <property name="severity" value="warning"/>
+
+    <!-- Checks for whitespace                               -->
+    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
+        <module name="FileTabCharacter">
+            <property name="eachLine" value="true"/>
+        </module>
+
+    <module name="TreeWalker">
+        <module name="OuterTypeFilename"/>
+        <module name="IllegalTokenText">
+            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
+            <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
+            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
+        </module>
+        <module name="AvoidEscapedUnicodeCharacters">
+            <property name="allowEscapesForControlCharacters" value="true"/>
+            <property name="allowByTailComment" value="true"/>
+            <property name="allowNonPrintableEscapes" value="true"/>
+        </module>
+        <module name="LineLength">
+            <property name="max" value="100"/>
+            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
+        </module>
+        <module name="AvoidStarImport"/>
+        <module name="OneTopLevelClass"/>
+        <module name="NoLineWrap"/>
+        <module name="EmptyBlock">
+            <property name="option" value="TEXT"/>
+            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
+        </module>
+        <module name="NeedBraces"/>
+        <module name="LeftCurly">
+            <property name="maxLineLength" value="100"/>
+        </module>
+        <module name="RightCurly"/>
+        <module name="RightCurly">
+            <property name="option" value="alone"/>
+            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
+        </module>
+        <module name="WhitespaceAround">
+            <property name="allowEmptyConstructors" value="true"/>
+            <property name="allowEmptyMethods" value="true"/>
+            <property name="allowEmptyTypes" value="true"/>
+            <property name="allowEmptyLoops" value="true"/>
+            <message key="ws.notFollowed"
+             value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
+             <message key="ws.notPreceded"
+             value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
+        </module>
+        <module name="OneStatementPerLine"/>
+        <module name="MultipleVariableDeclarations"/>
+        <module name="ArrayTypeStyle"/>
+        <module name="MissingSwitchDefault"/>
+        <module name="FallThrough"/>
+        <module name="UpperEll"/>
+        <module name="ModifierOrder"/>
+        <module name="EmptyLineSeparator">
+            <property name="allowNoEmptyLineBetweenFields" value="true"/>
+        </module>
+        <module name="SeparatorWrap">
+            <property name="tokens" value="DOT"/>
+            <property name="option" value="nl"/>
+        </module>
+        <module name="SeparatorWrap">
+            <property name="tokens" value="COMMA"/>
+            <property name="option" value="EOL"/>
+        </module>
+        <module name="PackageName">
+            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
+            <message key="name.invalidPattern"
+             value="Package name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="TypeName">
+            <message key="name.invalidPattern"
+             value="Type name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="MemberName">
+            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
+            <message key="name.invalidPattern"
+             value="Member name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="ParameterName">
+            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
+            <message key="name.invalidPattern"
+             value="Parameter name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="LocalVariableName">
+            <property name="tokens" value="VARIABLE_DEF"/>
+            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
+            <property name="allowOneCharVarInForLoop" value="true"/>
+            <message key="name.invalidPattern"
+             value="Local variable name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="ClassTypeParameterName">
+            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
+            <message key="name.invalidPattern"
+             value="Class type name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="MethodTypeParameterName">
+            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
+            <message key="name.invalidPattern"
+             value="Method type name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="InterfaceTypeParameterName">
+            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
+            <message key="name.invalidPattern"
+             value="Interface type name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+        <module name="NoFinalizer"/>
+        <module name="GenericWhitespace">
+            <message key="ws.followed"
+             value="GenericWhitespace ''{0}'' is followed by whitespace."/>
+             <message key="ws.preceded"
+             value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
+             <message key="ws.illegalFollow"
+             value="GenericWhitespace ''{0}'' should followed by whitespace."/>
+             <message key="ws.notPreceded"
+             value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
+        </module>
+        <module name="Indentation">
+            <property name="basicOffset" value="2"/>
+            <property name="braceAdjustment" value="0"/>
+            <property name="caseIndent" value="2"/>
+            <property name="throwsIndent" value="4"/>
+            <property name="lineWrappingIndentation" value="4"/>
+            <property name="arrayInitIndent" value="2"/>
+        </module>
+        <module name="AbbreviationAsWordInName">
+            <property name="ignoreFinal" value="false"/>
+            <property name="allowedAbbreviationLength" value="1"/>
+        </module>
+        <module name="OverloadMethodsDeclarationOrder"/>
+        <module name="VariableDeclarationUsageDistance"/>
+        <module name="CustomImportOrder">
+            <property name="sortImportsInGroupAlphabetically" value="true"/>
+            <property name="separateLineBetweenGroups" value="true"/>
+            <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
+        </module>
+        <module name="MethodParamPad"/>
+        <module name="OperatorWrap">
+            <property name="option" value="NL"/>
+            <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
+        </module>
+        <module name="JavadocMethod">
+            <property name="scope" value="public"/>
+            <property name="allowMissingParamTags" value="true"/>
+            <property name="allowMissingThrowsTags" value="true"/>
+            <property name="allowMissingReturnTag" value="true"/>
+            <property name="allowThrowsTagsForSubclasses" value="true"/>
+        </module>
+        <module name="MethodName">
+            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
+            <message key="name.invalidPattern"
+             value="Method name ''{0}'' must match pattern ''{1}''."/>
+        </module>
+    </module>
+</module>
diff --git a/gradle.properties b/gradle.properties
index 3358306b5..9b8b2efc4 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,4 +1,4 @@
-projectLongName = Gson Extras
+longName = Gson Extras
 projectDescription = Extra goodies for Gson, available on Google's Github repository, made available on Central.
 group = org.danilopianini
 artifactId = gson-extras
@@ -11,6 +11,11 @@ gsonVersion = [2.3.1, )
 junitVersion = [4.12, 5.0[
 apivizVersion = 1.3.2.GA
 
+pmdVersion = 5.5.2
+pmdTargetJdk = 1.6
+pmdConfigFile = pmd.xml
+checkstyleConfigFile = google_checks.xml
+
 licenseName = Apache License 2.0
 licenseUrl = https://raw.githubusercontent.com/DanySK/gson-extras/master/LICENSE
 
diff --git a/pmd.xml b/pmd.xml
new file mode 100644
index 000000000..33c899965
--- /dev/null
+++ b/pmd.xml
@@ -0,0 +1,234 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="alchemist-pmd"
+	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
+	<description>Alchemist PMD Plugin preferences rule set</description>
+	<rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod" />
+	<rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod" />
+	<rule ref="rulesets/java/optimizations.xml/AddEmptyString" />
+	<rule ref="rulesets/java/strings.xml/AppendCharacterWithChar" />
+	<rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly" />
+	<rule ref="rulesets/java/controversial.xml/AssignmentInOperand" />
+	<rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic" />
+	<rule ref="rulesets/java/controversial.xml/AvoidAccessibilityAlteration" />
+	<rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops" />
+	<rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier" />
+	<rule ref="rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop" />
+	<rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize" />
+	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE" />
+	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable" />
+	<rule ref="rulesets/java/design.xml/AvoidConstantsInterface" />
+	<rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
+	<rule ref="rulesets/java/naming.xml/AvoidDollarSigns" />
+	<rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals" />
+	<rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier" />
+	<rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName" />
+	<rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName" />
+	<rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause" />
+	<rule ref="rulesets/java/strictexception.xml/AvoidLosingExceptionInformation" />
+	<rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators" />
+	<rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace" />
+	<rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass" />
+	<rule ref="rulesets/java/design.xml/AvoidProtectedMethodInFinalClassNotExtending" />
+	<rule ref="rulesets/vm/basic.xml/AvoidReassigningParameters" />
+	<rule ref="rulesets/java/design.xml/AvoidReassigningParameters" />
+	<rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException" />
+	<rule ref="rulesets/java/strings.xml/AvoidStringBufferField" />
+	<rule ref="rulesets/java/basic.xml/AvoidThreadGroup" />
+	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException" />
+	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException" />
+	<rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP" />
+	<rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode" />
+	<rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues" />
+	<rule ref="rulesets/java/controversial.xml/AvoidUsingShortType" />
+	<rule ref="rulesets/java/design.xml/BadComparison" />
+	<rule ref="rulesets/java/basic.xml/BigIntegerInstantiation" />
+	<rule ref="rulesets/java/naming.xml/BooleanGetMethodName" />
+	<rule ref="rulesets/java/basic.xml/BooleanInstantiation" />
+	<rule ref="rulesets/java/basic.xml/BrokenNullCheck" />
+	<rule ref="rulesets/java/migrating.xml/ByteInstantiation" />
+	<rule ref="rulesets/java/android.xml/CallSuperLast" />
+	<rule ref="rulesets/java/basic.xml/CheckResultSet" />
+	<rule ref="rulesets/java/basic.xml/CheckSkipResult" />
+	<rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray" />
+	<rule ref="rulesets/java/naming.xml/ClassNamingConventions" />
+	<rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
+	<rule ref="rulesets/java/design.xml/CloseResource" />
+	<rule ref="rulesets/vm/basic.xml/CollapsibleIfStatements" />
+	<rule ref="rulesets/java/basic.xml/CollapsibleIfStatements" />
+	<rule ref="rulesets/java/comments.xml/CommentContent" />
+	<rule ref="rulesets/java/design.xml/CompareObjectsWithEquals" />
+	<rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends" />
+	<rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod" />
+	<rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt" />
+	<rule ref="rulesets/java/controversial.xml/DefaultPackage" />
+	<rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly" />
+	<rule ref="rulesets/java/strictexception.xml/DoNotExtendJavaLangError" />
+	<rule ref="rulesets/java/android.xml/DoNotHardCodeSDCard" />
+	<rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally" />
+	<rule ref="rulesets/java/basic.xml/DontCallThreadRun" />
+	<rule ref="rulesets/java/imports.xml/DontImportJavaLang" />
+	<rule ref="rulesets/java/controversial.xml/DontImportSun" />
+	<rule ref="rulesets/jsp/basic-jsf.xml/DontNestJsfInJstlIteration" />
+	<rule ref="rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices" />
+	<rule ref="rulesets/java/basic.xml/DoubleCheckedLocking" />
+	<rule ref="rulesets/java/imports.xml/DuplicateImports" />
+	<rule ref="rulesets/jsp/basic.xml/DuplicateJspImports" />
+	<rule ref="rulesets/java/empty.xml/EmptyCatchBlock" />
+	<rule ref="rulesets/java/finalizers.xml/EmptyFinalizer" />
+	<rule ref="rulesets/java/empty.xml/EmptyFinallyBlock" />
+	<rule ref="rulesets/vm/basic.xml/EmptyForeachStmt" />
+	<rule ref="rulesets/java/empty.xml/EmptyIfStmt" />
+	<rule ref="rulesets/vm/basic.xml/EmptyIfStmt" />
+	<rule ref="rulesets/java/empty.xml/EmptyInitializer" />
+	<rule ref="rulesets/java/empty.xml/EmptyStatementBlock" />
+	<rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop" />
+	<rule ref="rulesets/java/empty.xml/EmptyStaticInitializer" />
+	<rule ref="rulesets/java/empty.xml/EmptySwitchStatements" />
+	<rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock" />
+	<rule ref="rulesets/java/empty.xml/EmptyTryBlock" />
+	<rule ref="rulesets/java/empty.xml/EmptyWhileStmt" />
+	<rule ref="rulesets/java/design.xml/EqualsNull" />
+	<rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl" />
+	<rule ref="rulesets/java/codesize.xml/ExcessivePublicCount" />
+	<rule ref="rulesets/vm/basic.xml/ExcessiveTemplateLength" />
+	<rule ref="rulesets/plsql/codesize.xml/ExcessiveTypeLength" />
+	<rule ref="rulesets/java/basic.xml/ExtendsObject" />
+	<rule ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass" />
+	<rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic" />
+	<rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize" />
+	<rule ref="rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize" />
+	<rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded" />
+	<rule ref="rulesets/java/finalizers.xml/FinalizeShouldBeProtected" />
+	<rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop" />
+	<rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces" />
+	<rule ref="rulesets/java/naming.xml/GenericsNaming" />
+	<rule ref="rulesets/java/design.xml/IdempotentOperations" />
+	<rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces" />
+	<rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces" />
+	<rule ref="rulesets/jsp/basic.xml/IframeMissingSrcAttribute" />
+	<rule ref="rulesets/java/design.xml/ImmutableField" />
+	<rule ref="rulesets/java/imports.xml/ImportFromSamePackage" />
+	<rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck" />
+	<rule ref="rulesets/java/strings.xml/InefficientStringBuffering" />
+	<rule ref="rulesets/java/design.xml/InstantiationToGetClass" />
+	<rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration" />
+	<rule ref="rulesets/java/migrating.xml/IntegerInstantiation" />
+	<rule ref="rulesets/java/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation" />
+	<rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseAfterAnnotation" />
+	<rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseBeforeAnnotation" />
+	<rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseTestAnnotation" />
+	<rule ref="rulesets/java/junit.xml/JUnitSpelling" />
+	<rule ref="rulesets/java/junit.xml/JUnitStaticSuite" />
+	<rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert" />
+	<rule ref="rulesets/java/migrating.xml/JUnitUseExpected" />
+	<rule ref="rulesets/jsp/basic.xml/JspEncoding" />
+	<rule ref="rulesets/java/basic.xml/JumbledIncrementer" />
+	<rule ref="rulesets/java/j2ee.xml/LocalHomeNamingConvention" />
+	<rule ref="rulesets/java/j2ee.xml/LocalInterfaceSessionNamingConvention" />
+	<rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal" />
+	<rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal" />
+	<rule ref="rulesets/java/design.xml/LogicInversion" />
+	<rule ref="rulesets/java/migrating.xml/LongInstantiation" />
+	<rule ref="rulesets/java/coupling.xml/LooseCoupling" />
+	<rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal" />
+	<rule ref="rulesets/java/naming.xml/MethodNamingConventions" />
+	<rule ref="rulesets/java/sunsecure.xml/MethodReturnsInternalArray" />
+	<rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass" />
+	<rule ref="rulesets/java/naming.xml/MisleadingVariableName" />
+	<rule ref="rulesets/java/basic.xml/MisplacedNullCheck" />
+	<rule ref="rulesets/java/javabeans.xml/MissingSerialVersionUID" />
+	<rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass" />
+	<rule ref="rulesets/xml/basic.xml/MistypedCDATASection" />
+	<rule ref="rulesets/java/logging-java.xml/MoreThanOneLogger" />
+	<rule ref="rulesets/jsp/basic.xml/NoClassAttribute" />
+	<rule ref="rulesets/jsp/basic.xml/NoHtmlComments" />
+	<rule ref="rulesets/vm/basic.xml/NoInlineJavaScript" />
+	<rule ref="rulesets/jsp/basic.xml/NoInlineScript" />
+	<rule ref="rulesets/jsp/basic.xml/NoInlineStyleInformation" />
+	<rule ref="rulesets/vm/basic.xml/NoInlineStyles" />
+	<rule ref="rulesets/jsp/basic.xml/NoJspForward" />
+	<rule ref="rulesets/jsp/basic.xml/NoLongScripts" />
+	<rule ref="rulesets/java/naming.xml/NoPackage" />
+	<rule ref="rulesets/jsp/basic.xml/NoScriptlets" />
+	<rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement" />
+	<rule ref="rulesets/java/design.xml/NonStaticInitializer" />
+	<rule ref="rulesets/java/design.xml/NonThreadSafeSingleton" />
+	<rule ref="rulesets/java/design.xml/OptimizableToArrayCall" />
+	<rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode" />
+	<rule ref="rulesets/java/naming.xml/PackageCase" />
+	<rule ref="rulesets/java/optimizations.xml/PrematureDeclaration" />
+	<rule ref="rulesets/java/logging-jakarta-commons.xml/ProperLogger" />
+	<rule ref="rulesets/java/optimizations.xml/RedundantFieldInitializer" />
+	<rule ref="rulesets/java/j2ee.xml/RemoteInterfaceNamingConvention" />
+	<rule ref="rulesets/java/j2ee.xml/RemoteSessionInterfaceNamingConvention" />
+	<rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator" />
+	<rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap" />
+	<rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList" />
+	<rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock" />
+	<rule ref="rulesets/java/migrating.xml/ShortInstantiation" />
+	<rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException" />
+	<rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale" />
+	<rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion" />
+	<rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions" />
+	<rule ref="rulesets/java/design.xml/SimplifyBooleanReturns" />
+	<rule ref="rulesets/java/design.xml/SimplifyConditional" />
+	<rule ref="rulesets/java/design.xml/SingularField" />
+	<rule ref="rulesets/java/j2ee.xml/StaticEJBFieldShouldBeFinal" />
+	<rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar" />
+	<rule ref="rulesets/java/strings.xml/StringInstantiation" />
+	<rule ref="rulesets/java/strings.xml/StringToString" />
+	<rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName" />
+	<rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName" />
+	<rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape" />
+	<rule ref="rulesets/java/design.xml/SwitchDensity" />
+	<rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault" />
+	<rule ref="rulesets/java/logging-java.xml/SystemPrintln" />
+	<rule ref="rulesets/plsql/dates.xml/TO_DATEWithoutDateFormat" />
+	<rule ref="rulesets/plsql/dates.xml/TO_DATE_TO_CHAR" />
+	<rule ref="rulesets/plsql/dates.xml/TO_TIMESTAMPWithoutDateFormat" />
+	<rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases" />
+	<rule ref="rulesets/plsql/TomKytesDespair.xml/TomKytesDespair" />
+	<rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement" />
+	<rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor" />
+	<rule ref="rulesets/java/basic.xml/UnconditionalIfStatement" />
+	<rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion" />
+	<rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange" />
+	<rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor" />
+	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary" />
+	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier" />
+	<rule ref="rulesets/java/imports.xml/UnnecessaryFullyQualifiedName" />
+	<rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn" />
+	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn" />
+	<rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation" />
+	<rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter" />
+	<rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter" />
+	<rule ref="rulesets/java/imports.xml/UnusedImports" />
+	<rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable" />
+	<rule ref="rulesets/vm/basic.xml/UnusedMacroParameter" />
+	<rule ref="rulesets/java/unusedcode.xml/UnusedModifier" />
+	<rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals" />
+	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField" />
+	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod" />
+	<rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector" />
+	<rule ref="rulesets/java/optimizations.xml/UseArraysAsList" />
+	<rule ref="rulesets/java/junit.xml/UseAssertEqualsInsteadOfAssertTrue" />
+	<rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue" />
+	<rule ref="rulesets/java/junit.xml/UseAssertSameInsteadOfAssertTrue" />
+	<rule ref="rulesets/java/junit.xml/UseAssertTrueInsteadOfAssertEquals" />
+	<rule ref="rulesets/java/design.xml/UseCollectionIsEmpty" />
+	<rule ref="rulesets/xsl/xpath.xml/UseConcatOnce" />
+	<rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging" />
+	<rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings" />
+	<rule ref="rulesets/java/strings.xml/UseIndexOfChar" />
+	<rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions" />
+	<rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify" />
+	<rule ref="rulesets/java/controversial.xml/UseObjectForClearerAPI" />
+	<rule ref="rulesets/java/strings.xml/UseStringBufferLength" />
+	<rule ref="rulesets/java/design.xml/UseUtilityClass" />
+	<rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable" />
+	<rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod" />
+	<rule ref="rulesets/java/strings.xml/UselessStringValueOf" />
+	<rule ref="rulesets/java/naming.xml/VariableNamingConventions" />
+	<rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces" />
+</ruleset>
diff --git a/version.info b/version.info
new file mode 100644
index 000000000..7a5c347f2
--- /dev/null
+++ b/version.info
@@ -0,0 +1 @@
+0.1.0-84ead6d
\ No newline at end of file
