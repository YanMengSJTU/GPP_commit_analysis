diff --git a/javatests/dagger/producers/monitoring/TimingRecordersTest.java b/javatests/dagger/producers/monitoring/TimingRecordersTest.java
index c0c7eb6c5..ef0f21872 100644
--- a/javatests/dagger/producers/monitoring/TimingRecordersTest.java
+++ b/javatests/dagger/producers/monitoring/TimingRecordersTest.java
@@ -18,6 +18,7 @@
 
 import static com.google.common.truth.Truth.assertThat;
 import static org.mockito.Mockito.any;
+import static org.mockito.Mockito.anyLong;
 import static org.mockito.Mockito.doThrow;
 import static org.mockito.Mockito.inOrder;
 import static org.mockito.Mockito.verifyNoMoreInteractions;
@@ -160,10 +161,10 @@ public void singleRecorder_throwingProducerTimingRecorderSuccess() {
     setUpNormalSingleRecorder();
     doThrow(new RuntimeException("monkey"))
         .when(mockProducerTimingRecorder)
-        .recordMethod(any(Long.class), any(Long.class));
+        .recordMethod(anyLong(), anyLong());
     doThrow(new RuntimeException("monkey"))
         .when(mockProducerTimingRecorder)
-        .recordSuccess(any(Long.class));
+        .recordSuccess(anyLong());
     ProductionComponentTimingRecorder.Factory factory =
         TimingRecorders.delegatingProductionComponentTimingRecorderFactory(
             ImmutableList.of(mockProductionComponentTimingRecorderFactory));
@@ -302,13 +303,13 @@ public void multipleRecorders_someThrowingProducerTimingRecordersSuccess() {
     setUpNormalMultipleRecorders();
     doThrow(new RuntimeException("monkey"))
         .when(mockProducerTimingRecorderA)
-        .recordMethod(any(Long.class), any(Long.class));
+        .recordMethod(anyLong(), anyLong());
     doThrow(new RuntimeException("monkey"))
         .when(mockProducerTimingRecorderB)
-        .recordSuccess(any(Long.class));
+        .recordSuccess(anyLong());
     doThrow(new RuntimeException("monkey"))
         .when(mockProducerTimingRecorderC)
-        .recordMethod(any(Long.class), any(Long.class));
+        .recordMethod(anyLong(), anyLong());
     ProductionComponentTimingRecorder.Factory factory =
         TimingRecorders.delegatingProductionComponentTimingRecorderFactory(
             ImmutableList.of(
