diff --git a/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java b/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
index f10efa31d..870fb87d6 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
@@ -99,6 +99,8 @@
       remainingTypes.putAll(providerMethodsByClass(env));
     } catch (ClassCastException e) {
       return false; // upstream compiler issues - bail cleanly.
+    } catch (CodeGenerationIncompleteException e) {
+      return false; // upstream compiler issues - bail cleanly.
     }
     for (Iterator<String> i = remainingTypes.keySet().iterator(); i.hasNext();) {
       String typeName = i.next();
@@ -147,6 +149,10 @@ private void error(String msg, Element element) {
 
     provides:
     for (Element providerMethod : findProvidesMethods(env)) {
+      if (providerMethod.getAnnotation(Provides.class) == null) {
+        throw new CodeGenerationIncompleteException("Missing import of dagger.Provides.");
+      }
+
       switch (providerMethod.getEnclosingElement().getKind()) {
         case CLASS:
           break; // valid, move along
