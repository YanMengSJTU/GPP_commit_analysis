diff --git a/producers/src/main/java/dagger/producers/monitoring/TimingProductionComponentMonitor.java b/producers/src/main/java/dagger/producers/monitoring/TimingProductionComponentMonitor.java
index f84891ae6..fcdcb218b 100644
--- a/producers/src/main/java/dagger/producers/monitoring/TimingProductionComponentMonitor.java
+++ b/producers/src/main/java/dagger/producers/monitoring/TimingProductionComponentMonitor.java
@@ -17,6 +17,7 @@
 
 import com.google.common.base.Stopwatch;
 import com.google.common.base.Ticker;
+import dagger.internal.Beta;
 
 /**
  * A monitor that measures the timing of the execution of a production component, and logs those
@@ -25,7 +26,9 @@
  * <p>This assumes that the given recorders do not throw or return null; for example, by using
  * {@link TimingRecorders#delegatingProductionComponentTimingRecorderFactory}.
  */
-final class TimingProductionComponentMonitor extends ProductionComponentMonitor {
+// TODO(beder): Reduce the visibility of this class to package-private.
+@Beta
+public final class TimingProductionComponentMonitor extends ProductionComponentMonitor {
   private final ProductionComponentTimingRecorder recorder;
   private final Ticker ticker;
   private final Stopwatch stopwatch;
@@ -41,11 +44,11 @@ public ProducerMonitor producerMonitorFor(ProducerToken token) {
     return new TimingProducerMonitor(recorder.producerTimingRecorderFor(token), ticker, stopwatch);
   }
 
-  static final class Factory extends ProductionComponentMonitor.Factory {
+  public static final class Factory extends ProductionComponentMonitor.Factory {
     private final ProductionComponentTimingRecorder.Factory recorderFactory;
     private final Ticker ticker;
 
-    Factory(ProductionComponentTimingRecorder.Factory recorderFactory) {
+    public Factory(ProductionComponentTimingRecorder.Factory recorderFactory) {
       this(recorderFactory, Ticker.systemTicker());
     }
 
