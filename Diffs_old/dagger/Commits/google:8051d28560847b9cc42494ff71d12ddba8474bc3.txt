diff --git a/java/dagger/internal/codegen/ComponentCreatorDescriptor.java b/java/dagger/internal/codegen/ComponentCreatorDescriptor.java
index 5fcba0ab0..ae3351463 100644
--- a/java/dagger/internal/codegen/ComponentCreatorDescriptor.java
+++ b/java/dagger/internal/codegen/ComponentCreatorDescriptor.java
@@ -171,7 +171,8 @@ static ComponentCreatorDescriptor create(
         VariableElement parameter = getOnlyElement(method.getParameters());
         TypeMirror parameterType = getOnlyElement(resolvedMethodType.getParameterTypes());
         setterMethods.put(
-            requirement(method, parameter, parameterType, dependencyRequestFactory), method);
+            requirement(method, parameter, parameterType, dependencyRequestFactory, method),
+            method);
       }
     }
     verify(factoryMethod != null); // validation should have ensured this.
@@ -187,7 +188,7 @@ static ComponentCreatorDescriptor create(
       VariableElement parameter = parameters.get(i);
       TypeMirror parameterType = parameterTypes.get(i);
       factoryParameters.put(
-          requirement(factoryMethod, parameter, parameterType, dependencyRequestFactory),
+          requirement(factoryMethod, parameter, parameterType, dependencyRequestFactory, parameter),
           parameter);
     }
 
@@ -201,15 +202,13 @@ private static ComponentRequirement requirement(
       ExecutableElement method,
       VariableElement parameter,
       TypeMirror type,
-      DependencyRequestFactory dependencyRequestFactory) {
-    Element bindsInstanceElement =
-        isAnnotationPresent(method, BindsInstance.class)
-            ? method
-            : (isAnnotationPresent(parameter, BindsInstance.class) ? parameter : null);
-    if (bindsInstanceElement != null) {
+      DependencyRequestFactory dependencyRequestFactory,
+      Element elementForVariableName) {
+    if (isAnnotationPresent(method, BindsInstance.class)
+        || isAnnotationPresent(parameter, BindsInstance.class)) {
       DependencyRequest request =
           dependencyRequestFactory.forRequiredResolvedVariable(parameter, type);
-      String variableName = bindsInstanceElement.getSimpleName().toString();
+      String variableName = elementForVariableName.getSimpleName().toString();
       return ComponentRequirement.forBoundInstance(
           request.key(), request.isNullable(), variableName);
     }
diff --git a/javatests/dagger/functional/builder/BuilderBindsInstanceParameterTest.java b/javatests/dagger/functional/builder/BuilderBindsInstanceParameterTest.java
index f2f44b23c..33d381623 100644
--- a/javatests/dagger/functional/builder/BuilderBindsInstanceParameterTest.java
+++ b/javatests/dagger/functional/builder/BuilderBindsInstanceParameterTest.java
@@ -39,7 +39,8 @@
 
     @Component.Builder
     interface Builder {
-      Builder s(@BindsInstance String s);
+      // https://github.com/google/dagger/issues/1464
+      Builder s(@BindsInstance String notTheSameNameAsMethod);
 
       Builder i(@BindsInstance int i);
 
