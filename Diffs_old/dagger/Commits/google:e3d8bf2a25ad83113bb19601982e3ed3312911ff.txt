diff --git a/BUILD b/BUILD
index ddffe1436..6f926f057 100644
--- a/BUILD
+++ b/BUILD
@@ -21,8 +21,8 @@ package_group(
 
 py_test(
     name = "maven_sha1_test",
-    srcs = ["//tools:maven_sha1_tester"],
-    data = [":WORKSPACE"],
+    srcs = ["maven_sha1_test.py"],
+    data = ["WORKSPACE"],
 )
 
 java_library(
@@ -39,6 +39,23 @@ java_library(
     ],
 )
 
+load("//tools:jarjar.bzl", "jarjar_library")
+
+genrule(
+    name = "rules_file",
+    outs = ["rules_file.txt"],
+    cmd = "echo \"rule com.google.auto.common.** dagger.shaded.auto.common.@1\" > $@",
+)
+
+jarjar_library(
+    name = "shaded_compiler",
+    rules_file = ":rules_file.txt",
+    deps = [
+        "//compiler",
+        "@com_google_auto_auto_common//jar",
+    ],
+)
+
 load("//tools:javadoc.bzl", "javadoc_library")
 
 # coalesced javadocs used for the gh-pages site
diff --git a/WORKSPACE b/WORKSPACE
index 0c2b83e3f..89481ad45 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -24,7 +24,7 @@ bind(
 )
 
 maven_jar(
-    name = "javax_annotations_jsr250_api",
+    name = "javax_annotation_jsr250_api",
     artifact = "javax.annotation:jsr250-api:1.0",
     sha1 = "5025422767732a1ab45d93abfea846513d742dcf",
 )
@@ -148,3 +148,7 @@ maven_jar(
     artifact = "com.squareup:javapoet:1.7.0",
     sha1 = "4fdcf1fc27c1a8f55d1109df986c923152f07759",
 )
+
+load("//tools:jarjar.bzl", "jarjar_deps")
+
+jarjar_deps()
diff --git a/tools/maven_sha1_test.py b/maven_sha1_test.py
similarity index 100%
rename from tools/maven_sha1_test.py
rename to maven_sha1_test.py
diff --git a/third_party/BUILD b/third_party/BUILD
index 7aa46968c..28353652d 100644
--- a/third_party/BUILD
+++ b/third_party/BUILD
@@ -16,7 +16,7 @@ package(default_visibility = ["//visibility:public"])
 
 java_library(
     name = "jsr_250",
-    exports = ["@javax_annotations_jsr250_api//jar"],
+    exports = ["@javax_annotation_jsr250_api//jar"],
 )
 
 java_library(
diff --git a/tools/BUILD b/tools/BUILD
index 22f97b986..8ea1fc720 100644
--- a/tools/BUILD
+++ b/tools/BUILD
@@ -22,9 +22,50 @@ sh_library(
     srcs = ["javadoc_library_impl.sh"],
 )
 
-py_library(
-    name = "maven_sha1_tester",
-    srcs = ["maven_sha1_test.py"],
+sh_binary(
+    name = "jarjar_library_impl",
+    srcs = ["jarjar_library_impl.sh"],
+)
+
+sh_test(
+    name = "jarjar_library_impl_test",
+    srcs = ["jarjar_library_impl_test.sh"],
+    args = ["$(JAVABASE)"],
+    data = [
+        ":jarjar_deploy.jar",
+        ":jarjar_library_impl",
+        "//tools/testdata:bar",
+        "//tools/testdata:bar_with_dupe_file",
+        "//tools/testdata:foo",
+        "//tools/testdata:foo_with_dupe_file",
+        "@local_jdk//:bin/jar",
+        "@local_jdk//:bin/java",
+        "@local_jdk//:jre",
+    ],
+)
+
+java_binary(
+    name = "jarjar",
+    main_class = "org.pantsbuild.jarjar.Main",
+    runtime_deps = [
+        "@javax_annotation_jsr250_api//jar",
+        "@javax_enterprise_cdi_api//jar",
+        "@javax_inject_javax_inject//jar",
+        "@org_apache_ant_ant//jar",
+        "@org_apache_ant_ant_launcher//jar",
+        "@org_apache_maven_maven_artifact//jar",
+        "@org_apache_maven_maven_model//jar",
+        "@org_apache_maven_maven_plugin_api//jar",
+        "@org_codehaus_plexus_plexus_classworlds//jar",
+        "@org_codehaus_plexus_plexus_component_annotations//jar",
+        "@org_codehaus_plexus_plexus_utils//jar",
+        "@org_eclipse_sisu_org_eclipse_sisu_inject//jar",
+        "@org_eclipse_sisu_org_eclipse_sisu_plexus//jar",
+        "@org_ow2_asm_asm//jar",
+        "@org_ow2_asm_asm_commons//jar",
+        "@org_ow2_asm_asm_tree//jar",
+        "@org_pantsbuild_jarjar//jar",
+    ],
 )
 
 exports_files(["AndroidManifest.xml"])
diff --git a/tools/jarjar.bzl b/tools/jarjar.bzl
new file mode 100644
index 000000000..17e1aed31
--- /dev/null
+++ b/tools/jarjar.bzl
@@ -0,0 +1,140 @@
+# Copyright (C) 2017 The Dagger Authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+def jarjar_deps():
+  """
+  Deps that are necessary to build jarjar_binary() but aren't used in the regular build process for
+  Dagger, so they are organized separately from the workspace file.
+  """
+  native.maven_jar(
+      name = "org_codehaus_plexus_plexus_utils",
+      artifact = "org.codehaus.plexus:plexus-utils:3.0.20",
+      sha1 = "e121ed37af8ee3928952f6d8a303de24e019aab0",
+  )
+
+  native.maven_jar(
+      name = "org_eclipse_sisu_org_eclipse_sisu_plexus",
+      artifact = "org.eclipse.sisu:org.eclipse.sisu.plexus:0.3.0",
+      sha1 = "3f53953a998d03b9b0f7d5098f63119e434af0ef",
+  )
+
+  native.maven_jar(
+      name = "org_apache_ant_ant_launcher",
+      artifact = "org.apache.ant:ant-launcher:1.9.6",
+      sha1 = "d75dd4c39ba06401f20e7afffb861d268baec6bc",
+  )
+
+  native.maven_jar(
+      name = "org_apache_maven_maven_plugin_api",
+      artifact = "org.apache.maven:maven-plugin-api:3.3.3",
+      sha1 = "3b78a7e40707be313c4d5449ba514c9747e1c731",
+  )
+
+  native.maven_jar(
+      name = "org_eclipse_sisu_org_eclipse_sisu_inject",
+      artifact = "org.eclipse.sisu:org.eclipse.sisu.inject:0.3.0",
+      sha1 = "6c25adce9ca9af097728ed57834e8807e3b6e2b5",
+  )
+
+  native.maven_jar(
+      name = "org_ow2_asm_asm",
+      artifact = "org.ow2.asm:asm:5.0.4",
+      sha1 = "0da08b8cce7bbf903602a25a3a163ae252435795",
+  )
+
+  native.maven_jar(
+      name = "org_ow2_asm_asm_tree",
+      artifact = "org.ow2.asm:asm-tree:5.0.4",
+      sha1 = "396ce0c07ba2b481f25a70195c7c94922f0d1b0b",
+  )
+
+  native.maven_jar(
+      name = "javax_enterprise_cdi_api",
+      artifact = "javax.enterprise:cdi-api:1.0",
+      sha1 = "44c453f60909dfc223552ace63e05c694215156b",
+  )
+
+  native.maven_jar(
+      name = "org_ow2_asm_asm_commons",
+      artifact = "org.ow2.asm:asm-commons:5.0.4",
+      sha1 = "5a556786086c23cd689a0328f8519db93821c04c",
+  )
+
+  native.maven_jar(
+      name = "org_apache_maven_maven_model",
+      artifact = "org.apache.maven:maven-model:3.3.3",
+      sha1 = "73ba535c2e3a1381aeab131598010b3a723d4b47",
+  )
+
+  native.maven_jar(
+      name = "org_apache_maven_maven_artifact",
+      artifact = "org.apache.maven:maven-artifact:3.3.3",
+      sha1 = "d9f439dfef726e54eebb390ff38dd27356901528",
+  )
+
+  native.maven_jar(
+      name = "org_pantsbuild_jarjar",
+      artifact = "org.pantsbuild:jarjar:1.6.3",
+      sha1 = "cf54d4b142f5409c394095181c8d308a81869622",
+  )
+
+  native.maven_jar(
+      name = "org_codehaus_plexus_plexus_classworlds",
+      artifact = "org.codehaus.plexus:plexus-classworlds:2.5.2",
+      sha1 = "4abb111bfdace5b8167db4c0ef74644f3f88f142",
+  )
+
+  native.maven_jar(
+      name = "org_apache_ant_ant",
+      artifact = "org.apache.ant:ant:1.9.6",
+      sha1 = "80e2063b01bab3c79c2d84e4ed5e73868394c85a",
+  )
+
+  native.maven_jar(
+      name = "org_codehaus_plexus_plexus_component_annotations",
+      artifact = "org.codehaus.plexus:plexus-component-annotations:1.5.5",
+      sha1 = "c72f2660d0cbed24246ddb55d7fdc4f7374d2078",
+  )
+
+def jarjar_library(name, deps, rules_file):
+  """
+  Combines `deps` into one jar file named <name>.jar and jarjar with the rules specified in
+  `rules_file`.
+
+  See: https://github.com/pantsbuild/jarjar
+  """
+  native.genrule(
+      name = name,
+      srcs = deps + [
+          rules_file,
+          "//tools:jarjar_deploy.jar",
+      ],
+      tools = [
+          "//tools:jarjar_library_impl",
+          "@local_jdk//:bin/jar",
+          "@local_jdk//:bin/java",
+          "@local_jdk//:jre",
+      ],
+      outs = [name + ".jar"],
+      cmd = """
+      export JAVA_HOME=$(JAVABASE)
+      $(location //tools:jarjar_library_impl) $@ "{deps}" {rules} \
+        $(location //tools:jarjar_deploy.jar) \
+        $$(readlink $(location @local_jdk//:bin/jar)) \
+        $$(readlink $(location @local_jdk//:bin/java)) \
+        $(@D)
+      """.format(
+          deps=" ".join(["$(location %s)" % dep for dep in deps]),
+          rules="$(location %s)" % rules_file),
+  )
diff --git a/tools/jarjar_library_impl.sh b/tools/jarjar_library_impl.sh
new file mode 100755
index 000000000..357628d14
--- /dev/null
+++ b/tools/jarjar_library_impl.sh
@@ -0,0 +1,56 @@
+#!/usr/bin/env bash
+
+# Copyright (C) 2017 The Dagger Authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+if [[ ! $JAVA_HOME =~ ^/ ]]; then
+  JAVA_HOME=$(readlink -f $JAVA_HOME)
+fi
+
+OUT=$1
+DEPS=$2
+RULES_FILE=$3
+JARJAR=$4
+JAR_BINARY=$5
+JAVA_BINARY=$6
+TMPDIR=$7/combined
+
+mkdir -p $TMPDIR
+for dep in $DEPS; do
+  unzip -B $dep -d $TMPDIR
+done
+pushd $TMPDIR
+
+# Concatenate similar files in META-INF/services
+for file in META-INF/services/*; do
+  original=$(echo $file | sed s/"~[0-9]*$"//)
+  if [[ "$file" != "$original" ]]; then
+    cat $file >> $original
+    rm $file
+  fi
+done
+
+rm META-INF/MANIFEST.MF*
+rm -rf META-INF/maven/
+duplicate_files=$(find * -type f -regex ".*~[0-9]*$")
+if [[ -n "$duplicate_files" ]]; then
+  echo "Error: duplicate files in merged jar: $duplicate_files"
+  exit 1
+fi
+$JAR_BINARY cvf combined.jar *
+
+popd
+
+$JAVA_BINARY -jar $JARJAR process $RULES_FILE $TMPDIR/combined.jar $OUT
+rm -rf $TMPDIR
diff --git a/tools/jarjar_library_impl_test.sh b/tools/jarjar_library_impl_test.sh
new file mode 100755
index 000000000..edc65d44c
--- /dev/null
+++ b/tools/jarjar_library_impl_test.sh
@@ -0,0 +1,60 @@
+#!/usr/bin/env bash
+
+# Copyright (C) 2017 The Dagger Authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+
+export JAVA_HOME=$(readlink -f $1)
+
+set -eu
+
+JAR_BINARY="$(readlink external/local_jdk/bin/jar)"
+JAVA_BINARY="$(readlink external/local_jdk/bin/java)"
+
+report_bad_output() {
+  $JAR_BINARY tf output.jar
+  echo $1
+  exit 1
+}
+
+ROOT=$TEST_SRCDIR/$TEST_WORKSPACE
+
+cd $TEST_TMPDIR
+
+echo "rule foo.** baz.@1" > rules_file
+
+$ROOT/tools/jarjar_library_impl.sh \
+  "output.jar" \
+  "$ROOT/tools/testdata/libfoo.jar $ROOT/tools/testdata/libbar.jar" \
+  "rules_file" \
+  "$ROOT/tools/jarjar_deploy.jar" \
+  "$JAR_BINARY" \
+  "$JAVA_BINARY" \
+  "."
+if $JAR_BINARY  tf output.jar | grep -F -q foo/Foo.class; then
+  report_bad_output "Expected foo/Foo.class to be renamed to baz/Foo.class"
+elif ! $JAR_BINARY tf output.jar | grep -F -q baz/Foo.class; then
+  report_bad_output "Expected baz/Foo.class to be in the output jar"
+fi
+
+if $ROOT/tools/jarjar_library_impl.sh \
+  "output.jar" \
+  "$ROOT/tools/testdata/libfoo_with_dupe_file.jar $ROOT/tools/testdata/libbar_with_dupe_file.jar" \
+  "rules_file" \
+  "$ROOT/tools/jarjar_deploy.jar" \
+  "$JAR_BINARY" \
+  "$JAVA_BINARY" \
+  "."; then
+  report_bad_output 'Expected duplicate file "dupe"'
+fi
diff --git a/tools/javadoc_library_impl.sh b/tools/javadoc_library_impl.sh
index d2a745f84..2990e614b 100755
--- a/tools/javadoc_library_impl.sh
+++ b/tools/javadoc_library_impl.sh
@@ -1,5 +1,19 @@
 #!/usr/bin/env sh
 
+# Copyright (C) 2017 The Dagger Authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
 JAVADOC_BINARY=$1
 JAR_BINARY=$2
 OUTPUT=$3
diff --git a/tools/testdata/BUILD b/tools/testdata/BUILD
new file mode 100644
index 000000000..b994ff545
--- /dev/null
+++ b/tools/testdata/BUILD
@@ -0,0 +1,44 @@
+# Copyright (C) 2017 The Dagger Authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+# http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Description:
+#   Tools for Dagger
+
+package(default_visibility = ["//:src"])
+
+java_library(
+    name = "foo",
+    srcs = ["Foo.java"],
+    deps = ["//third_party:auto_service"],
+)
+
+java_library(
+    name = "foo_with_dupe_file",
+    srcs = ["Foo.java"],
+    resources = ["dupe"],
+    deps = ["//third_party:auto_service"],
+)
+
+java_library(
+    name = "bar",
+    srcs = ["Bar.java"],
+    deps = ["//third_party:auto_service"],
+)
+
+java_library(
+    name = "bar_with_dupe_file",
+    srcs = ["Bar.java"],
+    resources = ["dupe"],
+    deps = ["//third_party:auto_service"],
+)
diff --git a/tools/testdata/Bar.java b/tools/testdata/Bar.java
new file mode 100644
index 000000000..e040e39fd
--- /dev/null
+++ b/tools/testdata/Bar.java
@@ -0,0 +1,22 @@
+/*
+ * Copyright (C) 2017 The Dagger Authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package bar;
+
+import com.google.auto.service.AutoService;
+
+@AutoService(Object.class)
+class Bar {}
diff --git a/tools/testdata/Foo.java b/tools/testdata/Foo.java
new file mode 100644
index 000000000..f2305c83a
--- /dev/null
+++ b/tools/testdata/Foo.java
@@ -0,0 +1,22 @@
+/*
+ * Copyright (C) 2017 The Dagger Authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package foo;
+
+import com.google.auto.service.AutoService;
+
+@AutoService(Object.class)
+class Foo {}
diff --git a/tools/testdata/dupe b/tools/testdata/dupe
new file mode 100644
index 000000000..b68619fc0
--- /dev/null
+++ b/tools/testdata/dupe
@@ -0,0 +1 @@
+duped data file
