diff --git a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
index 0476c78a7..58f54084f 100644
--- a/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
+++ b/compiler/src/main/java/dagger/internal/codegen/AbstractComponentWriter.java
@@ -365,6 +365,7 @@ private void addBuildMethod(
    */
   private void addBuilderMethods(
       TypeSpec.Builder componentBuilder, Optional<BuilderSpec> builderSpec) {
+    ImmutableSet<TypeElement> componentRequirements = graph.componentRequirements();
     if (builderSpec.isPresent()) {
       UniqueNameSet parameterNames = new UniqueNameSet();
       for (Map.Entry<TypeElement, ExecutableElement> builderMethodEntry :
@@ -376,7 +377,7 @@ private void addBuilderMethods(
             parameterNames.getUniqueName(
                 Iterables.getOnlyElement(specMethod.getParameters()).getSimpleName());
         builderMethod.addParameter(ClassName.get(builderMethodType), parameterName);
-        if (graph.componentRequirements().contains(builderMethodType)) {
+        if (componentRequirements.contains(builderMethodType)) {
           // required type
           builderMethod.addStatement(
               "this.$N = $T.checkNotNull($L)",
@@ -407,7 +408,7 @@ private void addBuilderMethods(
                 .returns(builderName.get())
                 .addModifiers(PUBLIC)
                 .addParameter(ClassName.get(componentRequirement), componentRequirementName);
-        if (graph.componentRequirements().contains(componentRequirement)) {
+        if (componentRequirements.contains(componentRequirement)) {
           builderMethod.addStatement(
               "this.$N = $T.checkNotNull($L)",
               builderFields.get(componentRequirement),
