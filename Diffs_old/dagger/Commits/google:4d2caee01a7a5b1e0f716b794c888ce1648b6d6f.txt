diff --git a/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java b/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java
index a3d1d5d7f..678b72c93 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java
@@ -35,9 +35,9 @@
 import com.google.common.collect.Sets;
 import com.google.common.util.concurrent.ListenableFuture;
 import dagger.Component;
-import dagger.Factory;
 import dagger.MapKey;
 import dagger.MembersInjector;
+import dagger.internal.Factory;
 import dagger.internal.InstanceFactory;
 import dagger.internal.MapFactory;
 import dagger.internal.MapProviderFactory;
diff --git a/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java b/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java
index d8a0b9b5e..28987e1d0 100644
--- a/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java
@@ -21,9 +21,9 @@
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Lists;
-import dagger.Factory;
 import dagger.MembersInjector;
 import dagger.Provides.Type;
+import dagger.internal.Factory;
 import dagger.internal.codegen.writer.ClassName;
 import dagger.internal.codegen.writer.ClassWriter;
 import dagger.internal.codegen.writer.ConstructorWriter;
diff --git a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
index e0c34b99f..085e408e9 100644
--- a/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/ComponentProcessorTest.java
@@ -1192,7 +1192,7 @@
         "test.Dagger_BComponent",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "",
diff --git a/compiler/src/test/java/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java b/compiler/src/test/java/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java
index 0f3586746..916f20057 100644
--- a/compiler/src/test/java/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java
@@ -129,7 +129,7 @@
     JavaFileObject expected = JavaFileObjects.forSourceLines("test.GenericClass$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "",
@@ -173,8 +173,8 @@
     JavaFileObject expected = JavaFileObjects.forSourceLines("test.GenericClass$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
         "import dagger.MembersInjector;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
@@ -216,7 +216,7 @@
     JavaFileObject expected = JavaFileObjects.forSourceLines("test.GenericClass$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@SuppressWarnings(\"rawtypes\")",
@@ -253,7 +253,7 @@
     JavaFileObject expected = JavaFileObjects.forSourceLines("test.GenericClass$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "",
@@ -300,7 +300,7 @@
     JavaFileObject expected = JavaFileObjects.forSourceLines("test.GenericClass$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import java.util.List;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
@@ -360,8 +360,8 @@
     JavaFileObject expected = JavaFileObjects.forSourceLines("test.GenericClass$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
         "import dagger.internal.DoubleCheckLazy;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "",
@@ -621,7 +621,7 @@
         "test.InjectConstructor$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "",
@@ -664,8 +664,8 @@
         "test.AllInjections$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
         "import dagger.MembersInjector;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "",
@@ -719,8 +719,8 @@
         "test.B$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
         "import dagger.MembersInjector;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
@@ -764,7 +764,7 @@ public void wildcardDependency() {
         "test.InjectConstructor$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import java.util.List;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
@@ -813,7 +813,7 @@ public void basicNameCollision() {
         "test.InjectConstructor$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "",
@@ -864,7 +864,7 @@ public void nestedNameCollision() {
         "test.InjectConstructor$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "import other.pkg.Outer;",
@@ -918,7 +918,7 @@ public void samePackageNameCollision() {
         "test.InjectConstructor$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
         "import other.pkg.CommonName;",
@@ -968,7 +968,7 @@ public void noDeps() {
     JavaFileObject factory = JavaFileObjects.forSourceLines("test.SimpleType$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
@@ -1013,7 +1013,7 @@ public void noDeps() {
         "test.OuterType$A$$Factory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "import test.OuterType.A;",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
diff --git a/compiler/src/test/java/dagger/internal/codegen/ModuleFactoryGeneratorTest.java b/compiler/src/test/java/dagger/internal/codegen/ModuleFactoryGeneratorTest.java
index 18b16575a..bfbf5b5a5 100644
--- a/compiler/src/test/java/dagger/internal/codegen/ModuleFactoryGeneratorTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/ModuleFactoryGeneratorTest.java
@@ -387,7 +387,7 @@ private String formatModuleErrorMessage(String msg) {
     JavaFileObject factoryFile = JavaFileObjects.forSourceLines("TestModule$$ProvideStringFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
@@ -433,7 +433,7 @@ private String formatModuleErrorMessage(String msg) {
     JavaFileObject factoryFile = JavaFileObjects.forSourceLines("TestModule$$ProvideStringFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
@@ -474,7 +474,7 @@ private String formatModuleErrorMessage(String msg) {
     JavaFileObject factoryFile = JavaFileObjects.forSourceLines("TestModule$$ProvideStringFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
@@ -555,8 +555,8 @@ private String formatModuleErrorMessage(String msg) {
         "TestModule$$ProvideObjectsFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
         "import dagger.MembersInjector;",
+        "import dagger.internal.Factory;",
         "import java.util.List;",
         "import javax.annotation.Generated;",
         "import javax.inject.Provider;",
@@ -627,7 +627,7 @@ private String formatModuleErrorMessage(String msg) {
     JavaFileObject factoryFile = JavaFileObjects.forSourceLines("TestModule$$ProvideStringFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import java.util.Collections;",
         "import java.util.Set;",
         "import javax.annotation.Generated;",
@@ -674,7 +674,7 @@ private String formatModuleErrorMessage(String msg) {
     JavaFileObject factoryFile = JavaFileObjects.forSourceLines("TestModule$$ProvideStringsFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import java.util.Set;",
         "import javax.annotation.Generated;",
         "",
@@ -914,7 +914,7 @@ public void genericSubclassedModule() {
         "test.ParentModule$$ProvidesListBFactory",
         "package test;", 
         "", 
-        "import dagger.Factory;", 
+        "import dagger.internal.Factory;",
         "import java.util.List;", 
         "import javax.annotation.Generated;", 
         "import javax.inject.Provider;", 
@@ -951,7 +951,7 @@ public void genericSubclassedModule() {
         "test.ChildNumberModule$$ProvideNumberFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
@@ -980,7 +980,7 @@ public void genericSubclassedModule() {
         "test.ChildIntegerModule$$ProvideIntegerFactory",
         "package test;",
         "",
-        "import dagger.Factory;",
+        "import dagger.internal.Factory;",
         "import javax.annotation.Generated;",
         "",
         "@Generated(\"dagger.internal.codegen.ComponentProcessor\")",
diff --git a/core/src/main/java/dagger/Factory.java b/core/src/main/java/dagger/internal/Factory.java
similarity index 98%
rename from core/src/main/java/dagger/Factory.java
rename to core/src/main/java/dagger/internal/Factory.java
index 74e2d0d12..3e2774cec 100644
--- a/core/src/main/java/dagger/Factory.java
+++ b/core/src/main/java/dagger/internal/Factory.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package dagger;
+package dagger.internal;
 
 import javax.inject.Inject;
 import javax.inject.Provider;
diff --git a/core/src/main/java/dagger/internal/InstanceFactory.java b/core/src/main/java/dagger/internal/InstanceFactory.java
index 7c4990b16..59b1fcb8b 100644
--- a/core/src/main/java/dagger/internal/InstanceFactory.java
+++ b/core/src/main/java/dagger/internal/InstanceFactory.java
@@ -15,8 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
-
 /**
  * A {@link Factory} implementation that returns a single instance for all invocations of
  * {@link #get}.
diff --git a/core/src/main/java/dagger/internal/MapFactory.java b/core/src/main/java/dagger/internal/MapFactory.java
index d3ff1f5c7..4dac1262b 100644
--- a/core/src/main/java/dagger/internal/MapFactory.java
+++ b/core/src/main/java/dagger/internal/MapFactory.java
@@ -15,7 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
 import java.util.Map;
 import java.util.Map.Entry;
 import javax.inject.Provider;
diff --git a/core/src/main/java/dagger/internal/MapProviderFactory.java b/core/src/main/java/dagger/internal/MapProviderFactory.java
index d85a4bd8f..00c0fd33a 100644
--- a/core/src/main/java/dagger/internal/MapProviderFactory.java
+++ b/core/src/main/java/dagger/internal/MapProviderFactory.java
@@ -15,7 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import javax.inject.Provider;
diff --git a/core/src/main/java/dagger/internal/ScopedProvider.java b/core/src/main/java/dagger/internal/ScopedProvider.java
index 90a679a90..15917dd27 100644
--- a/core/src/main/java/dagger/internal/ScopedProvider.java
+++ b/core/src/main/java/dagger/internal/ScopedProvider.java
@@ -15,7 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
 import javax.inject.Provider;
 
 /**
diff --git a/core/src/main/java/dagger/internal/SetFactory.java b/core/src/main/java/dagger/internal/SetFactory.java
index 9ad6c9227..ecc43cb58 100644
--- a/core/src/main/java/dagger/internal/SetFactory.java
+++ b/core/src/main/java/dagger/internal/SetFactory.java
@@ -15,7 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Set;
diff --git a/core/src/test/java/dagger/internal/InstanceFactoryTest.java b/core/src/test/java/dagger/internal/InstanceFactoryTest.java
index dd8b1e2df..acaf20d79 100644
--- a/core/src/test/java/dagger/internal/InstanceFactoryTest.java
+++ b/core/src/test/java/dagger/internal/InstanceFactoryTest.java
@@ -15,7 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.rules.ExpectedException;
diff --git a/core/src/test/java/dagger/internal/MapProviderFactoryTest.java b/core/src/test/java/dagger/internal/MapProviderFactoryTest.java
index 337ebc112..b4496e926 100644
--- a/core/src/test/java/dagger/internal/MapProviderFactoryTest.java
+++ b/core/src/test/java/dagger/internal/MapProviderFactoryTest.java
@@ -15,7 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.concurrent.atomic.AtomicInteger;
diff --git a/core/src/test/java/dagger/internal/ScopedProviderTest.java b/core/src/test/java/dagger/internal/ScopedProviderTest.java
index 46ec6a1bf..84b02c510 100644
--- a/core/src/test/java/dagger/internal/ScopedProviderTest.java
+++ b/core/src/test/java/dagger/internal/ScopedProviderTest.java
@@ -15,7 +15,6 @@
  */
 package dagger.internal;
 
-import dagger.Factory;
 import javax.inject.Provider;
 import org.junit.Ignore;
 import org.junit.Test;
diff --git a/core/src/test/java/dagger/internal/SetFactoryTest.java b/core/src/test/java/dagger/internal/SetFactoryTest.java
index 5f3edc7e3..fcd6f6efb 100644
--- a/core/src/test/java/dagger/internal/SetFactoryTest.java
+++ b/core/src/test/java/dagger/internal/SetFactoryTest.java
@@ -18,7 +18,6 @@
 import com.google.common.collect.ContiguousSet;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Range;
-import dagger.Factory;
 import java.util.LinkedHashSet;
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicInteger;
