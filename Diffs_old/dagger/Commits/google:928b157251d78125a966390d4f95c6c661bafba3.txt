diff --git a/java/dagger/android/AndroidMemorySensitiveReferenceManager.java b/java/dagger/android/AndroidMemorySensitiveReferenceManager.java
index 015c71991..4a53639bb 100644
--- a/java/dagger/android/AndroidMemorySensitiveReferenceManager.java
+++ b/java/dagger/android/AndroidMemorySensitiveReferenceManager.java
@@ -42,9 +42,13 @@
  *   }</pre>
  *
  * @since 2.8
+ * @deprecated The releasable references feature is deprecated and scheduled for removal in July
+ *     2018. If you use it or are planning to add usages, please
+ *     <a href="https://github.com/google/dagger/issues/1117">this bug</a>.
  */
 @Beta
 @GwtIncompatible
+@Deprecated
 public final class AndroidMemorySensitiveReferenceManager {
 
   private final Set<TypedReleasableReferenceManager<ReleaseReferencesAt>> managers;
diff --git a/java/dagger/android/ReleaseReferencesAt.java b/java/dagger/android/ReleaseReferencesAt.java
index e978d8f10..53efe7665 100644
--- a/java/dagger/android/ReleaseReferencesAt.java
+++ b/java/dagger/android/ReleaseReferencesAt.java
@@ -46,12 +46,16 @@
  * {@link android.app.Application#onTrimMemory(int)} to it.
  *
  * @since 2.8
+ * @deprecated The releasable references feature is deprecated and scheduled for removal in July
+ *     2018. If you use it or are planning to add usages, please
+ *     <a href="https://github.com/google/dagger/issues/1117">this bug</a>.
  */
 @Beta
 @Documented
 @GwtIncompatible
 @Target(ANNOTATION_TYPE)
 @CanReleaseReferences
+@Deprecated
 public @interface ReleaseReferencesAt {
   /**
    * If {@link AndroidMemorySensitiveReferenceManager#onTrimMemory(int)} is called with a value
diff --git a/java/dagger/releasablereferences/CanReleaseReferences.java b/java/dagger/releasablereferences/CanReleaseReferences.java
index a0890af3d..cc7c2151a 100644
--- a/java/dagger/releasablereferences/CanReleaseReferences.java
+++ b/java/dagger/releasablereferences/CanReleaseReferences.java
@@ -57,9 +57,13 @@
  * not compatible with <a href="http://www.gwtproject.org/">GWT</a>.
  *
  * @since 2.8
+ * @deprecated The releasable references feature is deprecated and scheduled for removal in July
+ *     2018. If you use it or are planning to add usages, please
+ *     <a href="https://github.com/google/dagger/issues/1117">this bug</a>.
  */
 @Beta
 @Documented
 @GwtIncompatible
 @Target(ANNOTATION_TYPE)
+@Deprecated
 public @interface CanReleaseReferences {}
diff --git a/java/dagger/releasablereferences/ForReleasableReferences.java b/java/dagger/releasablereferences/ForReleasableReferences.java
index e11adb227..e8cd4a48a 100644
--- a/java/dagger/releasablereferences/ForReleasableReferences.java
+++ b/java/dagger/releasablereferences/ForReleasableReferences.java
@@ -70,6 +70,9 @@
  *
  * @see <a href="https://google.github.io/dagger/users-guide.html#releasable-references">Releasable references</a>
  * @since 2.8
+ * @deprecated The releasable references feature is deprecated and scheduled for removal in July
+ *     2018. If you use it or are planning to add usages, please
+ *     <a href="https://github.com/google/dagger/issues/1117">this bug</a>.
  */
 @Beta
 @Documented
@@ -77,6 +80,7 @@
 @Target({FIELD, PARAMETER, METHOD})
 @Retention(RUNTIME)
 @Qualifier
+@Deprecated
 public @interface ForReleasableReferences {
   /** The {@linkplain CanReleaseReferences reference-releasing} scope annotation type. */
   Class<? extends Annotation> value();
diff --git a/java/dagger/releasablereferences/ReleasableReferenceManager.java b/java/dagger/releasablereferences/ReleasableReferenceManager.java
index 0c5acf050..290c658df 100644
--- a/java/dagger/releasablereferences/ReleasableReferenceManager.java
+++ b/java/dagger/releasablereferences/ReleasableReferenceManager.java
@@ -68,9 +68,13 @@
  * <p>This interface is implemented by Dagger.
  *
  * @since 2.8
+ * @deprecated The releasable references feature is deprecated and scheduled for removal in July
+ *     2018. If you use it or are planning to add usages, please
+ *     <a href="https://github.com/google/dagger/issues/1117">this bug</a>.
  */
 @Beta
 @GwtIncompatible
+@Deprecated
 public interface ReleasableReferenceManager {
 
   /** The scope whose references are managed by this object. */
diff --git a/java/dagger/releasablereferences/TypedReleasableReferenceManager.java b/java/dagger/releasablereferences/TypedReleasableReferenceManager.java
index aa067c5bb..1ba4f4703 100644
--- a/java/dagger/releasablereferences/TypedReleasableReferenceManager.java
+++ b/java/dagger/releasablereferences/TypedReleasableReferenceManager.java
@@ -50,9 +50,13 @@
  * <p>This interface is implemented by Dagger.
  *
  * @param <M> the type of the metadata annotation
+ * @deprecated The releasable references feature is deprecated and scheduled for removal in July
+ *     2018. If you use it or are planning to add usages, please
+ *     <a href="https://github.com/google/dagger/issues/1117">this bug</a>.
  */
 @Beta
 @GwtIncompatible
+@Deprecated
 public interface TypedReleasableReferenceManager<M extends Annotation>
     extends ReleasableReferenceManager {
 
