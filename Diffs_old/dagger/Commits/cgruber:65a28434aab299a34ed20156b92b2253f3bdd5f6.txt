diff --git a/javatests/dagger/internal/codegen/DependencyCycleValidationTest.java b/javatests/dagger/internal/codegen/DependencyCycleValidationTest.java
index 4a4e0a51d..1081f7d4f 100644
--- a/javatests/dagger/internal/codegen/DependencyCycleValidationTest.java
+++ b/javatests/dagger/internal/codegen/DependencyCycleValidationTest.java
@@ -106,7 +106,8 @@ public void cyclicDependencyWithModuleBindingValidation() {
 
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(SIMPLE_CYCLIC_DEPENDENCY);
     assertThat(compilation).failed();
 
diff --git a/javatests/dagger/internal/codegen/DuplicateBindingsValidationTest.java b/javatests/dagger/internal/codegen/DuplicateBindingsValidationTest.java
index 14a6fb967..2e2334ae9 100644
--- a/javatests/dagger/internal/codegen/DuplicateBindingsValidationTest.java
+++ b/javatests/dagger/internal/codegen/DuplicateBindingsValidationTest.java
@@ -82,7 +82,10 @@ public DuplicateBindingsValidationTest(boolean fullBindingGraphValidation) {
         "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -134,7 +137,10 @@ public DuplicateBindingsValidationTest(boolean fullBindingGraphValidation) {
             "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -200,7 +206,10 @@ public void duplicateExplicitBindings_ProvidesVsBinds() {
             "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -268,7 +277,10 @@ public void duplicateExplicitBindings_multibindingsAndExplicitSets() {
             "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -337,7 +349,10 @@ public void duplicateExplicitBindings_multibindingsAndExplicitMaps() {
             "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -394,7 +409,10 @@ public void duplicateExplicitBindings_UniqueBindingAndMultibindingDeclaration_Se
             "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -447,7 +465,10 @@ public void duplicateExplicitBindings_UniqueBindingAndMultibindingDeclaration_Ma
             "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -574,7 +595,10 @@ public void duplicateExplicitBindings_UniqueBindingAndMultibindingDeclaration_Ma
             "}");
 
     Compilation compilation =
-        daggerCompiler().withOptions(fullBindingGraphValidationOption()).compile(component);
+        daggerCompiler()
+            .withOptions(
+                fullBindingGraphValidationOption())
+            .compile(component);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -647,7 +671,8 @@ public void childBindingConflictsWithParent() {
 
     Compilation compilation =
         daggerCompiler()
-            .withOptions(fullBindingGraphValidationOption())
+            .withOptions(
+                fullBindingGraphValidationOption())
             .compile(aComponent, bComponent);
     assertThat(compilation).failed();
     assertThat(compilation)
@@ -728,7 +753,8 @@ public void grandchildBindingConflictsWithGrandparent() {
 
     Compilation compilation =
         daggerCompiler()
-            .withOptions(fullBindingGraphValidationOption())
+            .withOptions(
+                fullBindingGraphValidationOption())
             .compile(aComponent, bComponent, cComponent);
     assertThat(compilation).failed();
     assertThat(compilation)
@@ -804,7 +830,8 @@ public void grandchildBindingConflictsWithChild() {
 
     Compilation compilation =
         daggerCompiler()
-            .withOptions(fullBindingGraphValidationOption())
+            .withOptions(
+                fullBindingGraphValidationOption())
             .compile(aComponent, bComponent, cComponent);
     assertThat(compilation).failed();
     assertThat(compilation)
@@ -992,7 +1019,9 @@ public void grandchildBindingConflictsWithParentWithNullableViolationAsWarning()
 
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.nullableValidation=WARNING", fullBindingGraphValidationOption())
+            .withOptions(
+                "-Adagger.nullableValidation=WARNING",
+                fullBindingGraphValidationOption())
             .compile(parentConflictsWithChild, child);
     assertThat(compilation).failed();
     assertThat(compilation)
diff --git a/javatests/dagger/internal/codegen/FullBindingGraphValidationTest.java b/javatests/dagger/internal/codegen/FullBindingGraphValidationTest.java
index 944e30794..9bb6803e5 100644
--- a/javatests/dagger/internal/codegen/FullBindingGraphValidationTest.java
+++ b/javatests/dagger/internal/codegen/FullBindingGraphValidationTest.java
@@ -62,7 +62,8 @@ public void moduleWithErrors_validationTypeNone() {
   public void moduleWithErrors_validationTypeError() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(MODULE_WITH_ERRORS);
 
     assertThat(compilation).failed();
@@ -79,7 +80,8 @@ public void moduleWithErrors_validationTypeError() {
   public void moduleWithErrors_validationTypeWarning() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=WARNING")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=WARNING")
             .compile(MODULE_WITH_ERRORS);
 
     assertThat(compilation).succeeded();
@@ -114,7 +116,8 @@ public void includesModuleWithErrors_validationTypeNone() {
   public void includesModuleWithErrors_validationTypeError() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(MODULE_WITH_ERRORS, INCLUDES_MODULE_WITH_ERRORS);
 
     assertThat(compilation).failed();
@@ -136,7 +139,8 @@ public void includesModuleWithErrors_validationTypeError() {
   public void includesModuleWithErrors_validationTypeWarning() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=WARNING")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=WARNING")
             .compile(MODULE_WITH_ERRORS, INCLUDES_MODULE_WITH_ERRORS);
 
     assertThat(compilation).succeeded();
@@ -199,7 +203,8 @@ public void moduleIncludingModuleWithCombinedErrors_validationTypeNone() {
   public void moduleIncludingModuleWithCombinedErrors_validationTypeError() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(A_MODULE, COMBINED_WITH_A_MODULE_HAS_ERRORS);
 
     assertThat(compilation).failed();
@@ -216,7 +221,8 @@ public void moduleIncludingModuleWithCombinedErrors_validationTypeError() {
   public void moduleIncludingModuleWithCombinedErrors_validationTypeWarning() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=WARNING")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=WARNING")
             .compile(A_MODULE, COMBINED_WITH_A_MODULE_HAS_ERRORS);
 
     assertThat(compilation).succeeded();
@@ -265,7 +271,8 @@ public void subcomponentWithErrors_validationTypeNone() {
   public void subcomponentWithErrors_validationTypeError() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(SUBCOMPONENT_WITH_ERRORS, A_MODULE);
 
     assertThat(compilation).failed();
@@ -282,7 +289,8 @@ public void subcomponentWithErrors_validationTypeError() {
   public void subcomponentWithErrors_validationTypeWarning() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=WARNING")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=WARNING")
             .compile(SUBCOMPONENT_WITH_ERRORS, A_MODULE);
 
     assertThat(compilation).succeeded();
@@ -319,7 +327,8 @@ public void moduleWithSubcomponentWithErrors_validationTypeNone() {
   public void moduleWithSubcomponentWithErrors_validationTypeError() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(MODULE_WITH_SUBCOMPONENT_WITH_ERRORS, SUBCOMPONENT_WITH_ERRORS, A_MODULE);
 
     assertThat(compilation).failed();
@@ -342,7 +351,8 @@ public void moduleWithSubcomponentWithErrors_validationTypeError() {
   public void moduleWithSubcomponentWithErrors_validationTypeWarning() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=WARNING")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=WARNING")
             .compile(MODULE_WITH_SUBCOMPONENT_WITH_ERRORS, SUBCOMPONENT_WITH_ERRORS, A_MODULE);
 
     assertThat(compilation).succeeded();
@@ -409,7 +419,8 @@ public void moduleWithSubcomponentWithCombinedErrors_validationTypeNone() {
   public void moduleWithSubcomponentWithCombinedErrors_validationTypeError() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(COMBINED_WITH_A_SUBCOMPONENT_HAS_ERRORS, A_SUBCOMPONENT, A_MODULE);
 
     assertThat(compilation).failed();
@@ -426,7 +437,8 @@ public void moduleWithSubcomponentWithCombinedErrors_validationTypeError() {
   public void moduleWithSubcomponentWithCombinedErrors_validationTypeWarning() {
     Compilation compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=WARNING")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=WARNING")
             .compile(COMBINED_WITH_A_SUBCOMPONENT_HAS_ERRORS, A_SUBCOMPONENT, A_MODULE);
 
     assertThat(compilation).succeeded();
diff --git a/javatests/dagger/internal/codegen/MapMultibindingValidationTest.java b/javatests/dagger/internal/codegen/MapMultibindingValidationTest.java
index 106778d13..87882a31b 100644
--- a/javatests/dagger/internal/codegen/MapMultibindingValidationTest.java
+++ b/javatests/dagger/internal/codegen/MapMultibindingValidationTest.java
@@ -72,7 +72,10 @@ public void duplicateMapKeys_UnwrappedMapKey() {
     assertThat(compilation).hadErrorCount(1);
 
     compilation =
-        daggerCompiler().withOptions("-Adagger.fullBindingGraphValidation=ERROR").compile(module);
+        daggerCompiler()
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
+            .compile(module);
     assertThat(compilation).failed();
     assertThat(compilation)
         .hadErrorContaining(
@@ -264,7 +267,8 @@ public void inconsistentMapKeyAnnotations() {
 
     compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(module, stringKeyTwoFile);
     assertThat(compilation).failed();
     assertThat(compilation)
diff --git a/javatests/dagger/internal/codegen/ScopingValidationTest.java b/javatests/dagger/internal/codegen/ScopingValidationTest.java
index 9efcc2a59..15beebaaa 100644
--- a/javatests/dagger/internal/codegen/ScopingValidationTest.java
+++ b/javatests/dagger/internal/codegen/ScopingValidationTest.java
@@ -243,7 +243,8 @@ public void componentWithScopeIncludesIncompatiblyScopedBindings_Fail() {
 
     compilation =
         daggerCompiler()
-            .withOptions("-Adagger.fullBindingGraphValidation=ERROR")
+            .withOptions(
+                "-Adagger.fullBindingGraphValidation=ERROR")
             .compile(componentFile, scopeFile, scopeWithAttribute, typeFile, moduleFile);
     // The @Inject binding for ScopedType should not appear here, but the @Singleton binding should.
     assertThat(compilation)
