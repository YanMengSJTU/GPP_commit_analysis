diff --git a/examples/android/AndroidManifest.xml b/examples/android/AndroidManifest.xml
new file mode 100644
index 000000000..8bff3c3ac
--- /dev/null
+++ b/examples/android/AndroidManifest.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+          package="dagger.bot"
+          android:versionCode="1"
+          android:versionName="1.0">
+
+  <supports-screens
+          android:resizeable="true"
+          android:smallScreens="true"
+          android:normalScreens="true"
+          android:largeScreens="true"
+          android:anyDensity="true"/>
+
+  <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
+  <application
+          android:name="dagger.application.DaggerApplication"
+          android:theme="@android:style/Theme.Holo"
+          android:label="@string/app_name">
+    <activity
+            android:name="dagger.activity.StabbedActivity"
+            android:label="@string/app_name">
+      <intent-filter>
+        <action android:name="android.intent.action.MAIN"/>
+        <category android:name="android.intent.category.LAUNCHER"/>
+      </intent-filter>
+    </activity>
+  </application>
+</manifest>
diff --git a/example/pom.xml b/examples/android/pom.xml
similarity index 58%
rename from example/pom.xml
rename to examples/android/pom.xml
index c6cd863f7..a056b92af 100644
--- a/example/pom.xml
+++ b/examples/android/pom.xml
@@ -21,14 +21,25 @@
     <groupId>com.squareup</groupId>
     <artifactId>dagger-parent</artifactId>
     <version>1.0-SNAPSHOT</version>
-    <relativePath>../pom.xml</relativePath>
+    <relativePath>../../pom.xml</relativePath>
   </parent>
 
-  <artifactId>dagger-example</artifactId>
-  <packaging>jar</packaging>
-  <name>Dagger Example</name>
+  <artifactId>dagger-android</artifactId>
+  <packaging>apk</packaging>
+  <name>Dagger Android Example</name>
+
+  <properties>
+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    <android.version>4.1.1.4</android.version>
+  </properties>
 
   <dependencies>
+    <dependency>
+      <groupId>com.google.android</groupId>
+      <artifactId>android</artifactId>
+      <scope>provided</scope>
+      <version>${android.version}</version>
+    </dependency>
     <dependency>
       <groupId>${project.groupId}</groupId>
       <artifactId>dagger</artifactId>
@@ -41,16 +52,24 @@
       <optional>true</optional>
     </dependency>
   </dependencies>
+
+
   <build>
-    <plugins>
-      <plugin>
-        <artifactId>maven-compiler-plugin</artifactId>
-        <configuration>
-          <compilerArgument>-Xlint:all</compilerArgument>
-          <showWarnings>true</showWarnings>
-          <showDeprecation>true</showDeprecation>
-        </configuration>
-      </plugin>
-    </plugins>
+    <sourceDirectory>src</sourceDirectory>
+      <plugins>
+        <plugin>
+          <groupId>com.jayway.maven.plugins.android.generation2</groupId>
+          <artifactId>android-maven-plugin</artifactId>
+          <version>3.4.0</version>
+          <extensions>true</extensions>
+          <configuration>
+            <sdk>
+              <platform>16</platform>
+            </sdk>
+            <undeployBeforeDeploy>true</undeployBeforeDeploy>
+          </configuration>
+        </plugin>
+      </plugins>
   </build>
+
 </project>
diff --git a/examples/android/res/drawable-hdpi/debut_dark.png b/examples/android/res/drawable-hdpi/debut_dark.png
new file mode 100644
index 000000000..17a4d6b42
Binary files /dev/null and b/examples/android/res/drawable-hdpi/debut_dark.png differ
diff --git a/examples/android/res/drawable/bg_activity.xml b/examples/android/res/drawable/bg_activity.xml
new file mode 100644
index 000000000..3d70a1dcd
--- /dev/null
+++ b/examples/android/res/drawable/bg_activity.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<bitmap xmlns:android="http://schemas.android.com/apk/res/android"
+        android:src="@drawable/debut_dark"
+        android:tileMode="repeat" />
\ No newline at end of file
diff --git a/examples/android/res/layout/adapter_view.xml b/examples/android/res/layout/adapter_view.xml
new file mode 100644
index 000000000..95f52c141
--- /dev/null
+++ b/examples/android/res/layout/adapter_view.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="vertical"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent">
+
+  <TextView
+          android:id="@+id/rowText"
+          android:layout_width="wrap_content"
+          android:layout_height="wrap_content"
+          android:padding="10dp"
+          />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/examples/android/res/layout/stabbed_activity.xml b/examples/android/res/layout/stabbed_activity.xml
new file mode 100644
index 000000000..2d896b129
--- /dev/null
+++ b/examples/android/res/layout/stabbed_activity.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+             android:layout_width="match_parent"
+             android:layout_height="match_parent"
+             android:background="@drawable/bg_activity"
+        >
+
+  <LinearLayout
+          android:id="@+id/buttonWrapper"
+          android:orientation="vertical"
+          android:layout_width="match_parent"
+          android:layout_height="match_parent"
+          android:gravity="center">
+
+    <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/activityStabbed"
+            android:layout_marginBottom="6dp"
+            android:textColor="#c6c6c6"
+            android:shadowColor="#000000"
+            android:shadowDx="0.5"
+            android:shadowRadius="0.01"
+            />
+
+    <TextView
+            android:id="@+id/locationView"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="6dp"
+            android:gravity="center"
+            android:textColor="#c6c6c6"
+            android:shadowColor="#000000"
+            android:shadowDx="0.5"
+            android:shadowRadius="0.01"
+            />
+
+    <Button
+            android:id="@+id/button"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/stabFragment"
+            android:textColor="#c6c6c6"
+            android:shadowColor="#000000"
+            android:shadowDx="0.5"
+            android:shadowRadius="0.01"
+            />
+  </LinearLayout>
+
+  <FrameLayout
+    android:id="@+id/container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    />
+
+
+</FrameLayout>
\ No newline at end of file
diff --git a/examples/android/res/layout/stabbed_fragment.xml b/examples/android/res/layout/stabbed_fragment.xml
new file mode 100644
index 000000000..7c3f6909c
--- /dev/null
+++ b/examples/android/res/layout/stabbed_fragment.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="vertical"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+              android:background="#FFFFFF"
+              android:gravity="center">
+
+  <ListView
+          android:id="@android:id/list"
+          android:layout_width="match_parent"
+          android:layout_height="match_parent"
+          />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/examples/android/res/values/colors.xml b/examples/android/res/values/colors.xml
new file mode 100644
index 000000000..af0386e29
--- /dev/null
+++ b/examples/android/res/values/colors.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <color name="bloodRed">#660000</color>
+</resources>
\ No newline at end of file
diff --git a/examples/android/res/values/strings.xml b/examples/android/res/values/strings.xml
new file mode 100644
index 000000000..8543e6544
--- /dev/null
+++ b/examples/android/res/values/strings.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="app_name">Stab Bot</string>
+  <string name="ouch">ouch</string>
+  <string name="activityStabbed">Activity Stabbed!</string>
+  <string name="stabFragment">Stab a fragment</string>
+  <string name="fragmentStab">Ouch! You stabbed a Fragment!</string>
+  <string name="rowText">Inject => LayoutInflater => Adapter => Fragment</string>
+</resources>
diff --git a/examples/android/src/dagger/activity/StabbedActivity.java b/examples/android/src/dagger/activity/StabbedActivity.java
new file mode 100644
index 000000000..861f880ba
--- /dev/null
+++ b/examples/android/src/dagger/activity/StabbedActivity.java
@@ -0,0 +1,48 @@
+package dagger.activity;
+
+import android.app.Activity;
+import android.location.Location;
+import android.location.LocationManager;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+import dagger.application.DaggerApplication;
+import dagger.bot.R;
+import dagger.fragment.StabbedFragment;
+
+import javax.inject.Inject;
+
+public class StabbedActivity extends Activity {
+  @Inject LocationManager locationManager;
+  private TextView locationView;
+  private Button button;
+
+  @Override protected void onCreate(Bundle savedInstanceState) {
+    super.onCreate(savedInstanceState);
+    setContentView(R.layout.stabbed_activity);
+    DaggerApplication.inject(this);
+
+    locationView = (TextView) findViewById(R.id.locationView);
+    button = (Button) findViewById(R.id.button);
+
+    Location location = locationManager.getLastKnownLocation(LocationManager.PASSIVE_PROVIDER);
+    String text = String.format("Last known location: (%f, %f)",
+      location.getLatitude(), location.getLongitude());
+    locationView.setText(text);
+
+    button.setOnClickListener(new FragmentStabber());
+  }
+
+  private class FragmentStabber implements View.OnClickListener {
+    @Override public void onClick(View view) {
+      StabbedFragment stabbedFragment = new StabbedFragment();
+      DaggerApplication.inject(stabbedFragment);
+
+      getFragmentManager().beginTransaction()
+        .setCustomAnimations(android.R.animator.fade_in, android.R.animator.fade_out)
+        .replace(R.id.container, stabbedFragment).addToBackStack(null).commit();
+
+    }
+  }
+}
diff --git a/examples/android/src/dagger/adapter/StabbedAdapter.java b/examples/android/src/dagger/adapter/StabbedAdapter.java
new file mode 100644
index 000000000..dbd624222
--- /dev/null
+++ b/examples/android/src/dagger/adapter/StabbedAdapter.java
@@ -0,0 +1,39 @@
+package dagger.adapter;
+
+import android.content.res.Resources;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.TextView;
+import dagger.bot.R;
+
+import javax.inject.Inject;
+
+public class StabbedAdapter extends BaseAdapter {
+  private LayoutInflater layoutInflater;
+  private final String rowText;
+
+  @Inject StabbedAdapter(LayoutInflater layoutInflater, Resources resources) {
+    this.layoutInflater = layoutInflater;
+    this.rowText = resources.getString(R.string.rowText);
+  }
+
+  @Override public View getView(int position, View view, ViewGroup viewGroup) {
+    View row = layoutInflater.inflate(R.layout.adapter_view, null);
+    ((TextView) row.findViewById(R.id.rowText)).setText(rowText);
+    return row;
+  }
+
+  @Override public int getCount() {
+    return 666;
+  }
+
+  @Override public Object getItem(int i) {
+    return null;
+  }
+
+  @Override public long getItemId(int i) {
+    return 0;
+  }
+}
diff --git a/examples/android/src/dagger/application/DaggerApplication.java b/examples/android/src/dagger/application/DaggerApplication.java
new file mode 100644
index 000000000..3e0a0cc75
--- /dev/null
+++ b/examples/android/src/dagger/application/DaggerApplication.java
@@ -0,0 +1,19 @@
+package dagger.application;
+
+import android.app.Application;
+import dagger.ObjectGraph;
+import dagger.module.ApplicationModule;
+
+public class DaggerApplication extends Application {
+  private static ObjectGraph objectGraph;
+
+  @Override public void onCreate() {
+    super.onCreate();
+
+    objectGraph = ObjectGraph.create(new ApplicationModule(this));
+  }
+
+  public static <T> void inject(T instance) {
+    objectGraph.inject(instance);
+  }
+}
diff --git a/examples/android/src/dagger/fragment/StabbedFragment.java b/examples/android/src/dagger/fragment/StabbedFragment.java
new file mode 100644
index 000000000..24fd25cfd
--- /dev/null
+++ b/examples/android/src/dagger/fragment/StabbedFragment.java
@@ -0,0 +1,35 @@
+package dagger.fragment;
+
+import android.app.ListFragment;
+import android.content.res.Resources;
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Toast;
+import dagger.adapter.StabbedAdapter;
+import dagger.bot.R;
+
+import javax.inject.Inject;
+
+/**
+ * @author christopherperry
+ */
+public class StabbedFragment extends ListFragment {
+  @Inject Resources resources;
+  @Inject StabbedAdapter adapter;
+
+  @Override public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                                     Bundle savedInstanceState) {
+    return inflater.inflate(R.layout.stabbed_fragment, null);
+  }
+
+  @Override public void onActivityCreated(Bundle savedInstanceState) {
+    super.onActivityCreated(savedInstanceState);
+
+    String text = resources.getString(R.string.fragmentStab);
+    Toast.makeText(getActivity(), text, Toast.LENGTH_SHORT).show();
+
+    getListView().setAdapter(adapter);
+  }
+}
diff --git a/examples/android/src/dagger/module/AndroidServicesModule.java b/examples/android/src/dagger/module/AndroidServicesModule.java
new file mode 100644
index 000000000..5223ee3b2
--- /dev/null
+++ b/examples/android/src/dagger/module/AndroidServicesModule.java
@@ -0,0 +1,27 @@
+package dagger.module;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.location.LocationManager;
+import android.view.LayoutInflater;
+import dagger.Module;
+import dagger.Provides;
+
+import javax.inject.Singleton;
+
+@Module(complete = false)
+public class AndroidServicesModule {
+
+  @Provides @Singleton LocationManager provideLocationManager(Context context) {
+    return (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
+  }
+
+  @Provides @Singleton LayoutInflater provideLayoutInflater(Context context) {
+    return (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+  }
+
+  @Provides @Singleton Resources provideResources(Context context) {
+    return context.getResources();
+  }
+
+}
diff --git a/examples/android/src/dagger/module/ApplicationModule.java b/examples/android/src/dagger/module/ApplicationModule.java
new file mode 100644
index 000000000..a52ac8348
--- /dev/null
+++ b/examples/android/src/dagger/module/ApplicationModule.java
@@ -0,0 +1,30 @@
+package dagger.module;
+
+import android.content.Context;
+import dagger.Module;
+import dagger.Provides;
+import dagger.activity.StabbedActivity;
+import dagger.application.DaggerApplication;
+import dagger.fragment.StabbedFragment;
+
+import javax.inject.Singleton;
+
+@Module (
+  entryPoints = {
+    DaggerApplication.class,
+    StabbedActivity.class,
+    StabbedFragment.class
+  },
+  includes = AndroidServicesModule.class
+)
+public class ApplicationModule {
+  private Context context;
+
+  public ApplicationModule(Context context) {
+    this.context = context.getApplicationContext();
+  }
+
+  @Provides @Singleton Context provideContext() {
+    return context;
+  }
+}
diff --git a/examples/java/pom.xml b/examples/java/pom.xml
new file mode 100644
index 000000000..90773245c
--- /dev/null
+++ b/examples/java/pom.xml
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright (C) 2012 Square, Inc.
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <parent>
+        <groupId>com.squareup</groupId>
+        <artifactId>dagger-parent</artifactId>
+        <version>1.0-SNAPSHOT</version>
+        <relativePath>../../pom.xml</relativePath>
+    </parent>
+
+    <artifactId>dagger-java</artifactId>
+    <packaging>jar</packaging>
+    <name>Dagger Java Example</name>
+
+    <dependencies>
+        <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>dagger</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>dagger-compiler</artifactId>
+            <version>${project.version}</version>
+            <optional>true</optional>
+        </dependency>
+    </dependencies>
+    <build>
+        <plugins>
+            <plugin>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <compilerArgument>-Xlint:all</compilerArgument>
+                    <showWarnings>true</showWarnings>
+                    <showDeprecation>true</showDeprecation>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+</project>
diff --git a/example/src/main/java/coffee/CoffeeApp.java b/examples/java/src/main/java/coffee/CoffeeApp.java
similarity index 100%
rename from example/src/main/java/coffee/CoffeeApp.java
rename to examples/java/src/main/java/coffee/CoffeeApp.java
diff --git a/example/src/main/java/coffee/CoffeeMaker.java b/examples/java/src/main/java/coffee/CoffeeMaker.java
similarity index 100%
rename from example/src/main/java/coffee/CoffeeMaker.java
rename to examples/java/src/main/java/coffee/CoffeeMaker.java
diff --git a/example/src/main/java/coffee/DripCoffeeModule.java b/examples/java/src/main/java/coffee/DripCoffeeModule.java
similarity index 100%
rename from example/src/main/java/coffee/DripCoffeeModule.java
rename to examples/java/src/main/java/coffee/DripCoffeeModule.java
diff --git a/example/src/main/java/coffee/ElectricHeater.java b/examples/java/src/main/java/coffee/ElectricHeater.java
similarity index 100%
rename from example/src/main/java/coffee/ElectricHeater.java
rename to examples/java/src/main/java/coffee/ElectricHeater.java
diff --git a/example/src/main/java/coffee/Heater.java b/examples/java/src/main/java/coffee/Heater.java
similarity index 100%
rename from example/src/main/java/coffee/Heater.java
rename to examples/java/src/main/java/coffee/Heater.java
diff --git a/example/src/main/java/coffee/Pump.java b/examples/java/src/main/java/coffee/Pump.java
similarity index 100%
rename from example/src/main/java/coffee/Pump.java
rename to examples/java/src/main/java/coffee/Pump.java
diff --git a/example/src/main/java/coffee/PumpModule.java b/examples/java/src/main/java/coffee/PumpModule.java
similarity index 100%
rename from example/src/main/java/coffee/PumpModule.java
rename to examples/java/src/main/java/coffee/PumpModule.java
diff --git a/example/src/main/java/coffee/Thermosiphon.java b/examples/java/src/main/java/coffee/Thermosiphon.java
similarity index 100%
rename from example/src/main/java/coffee/Thermosiphon.java
rename to examples/java/src/main/java/coffee/Thermosiphon.java
diff --git a/pom.xml b/pom.xml
index d9b59a8bd..1a9dfc8ef 100644
--- a/pom.xml
+++ b/pom.xml
@@ -14,7 +14,8 @@
   See the License for the specific language governing permissions and
   limitations under the License.
 -->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
@@ -35,7 +36,8 @@
     <module>androidmanifest</module>
     <module>compiler</module>
     <module>core</module>
-    <module>example</module>
+    <module>examples/java</module>
+    <module>examples/android</module>
   </modules>
 
   <properties>
