diff --git a/README.md b/README.md
index 5f4ee00af..3c0e8bc13 100644
--- a/README.md
+++ b/README.md
@@ -35,7 +35,7 @@ instructions and other useful information.  Substantial usage information can be
 found in the [API documentation][20api].
 
 You can also learn more from [the original proposal][proposal], 
-[this talk by Greg Kick][gaktalk], and on discussions on the dagger-discuss@googlegroups.com
+[this talk by Greg Kick][gaktalk], and on the dagger-discuss@googlegroups.com
 mailing list. 
 
 Installation
@@ -46,9 +46,9 @@ In order to activate code generation and generate implementations to manage
 your graph you will need to include `dagger-compiler-2.0.1.jar` in your build
 at compile time.
 
-In a Maven project, one would include the `dagger` artifact in the dependencies section
-of your `pom.xml` and the `dagger-compiler` artifact as either  an `optional` or `provided`
-dependency:
+In a Maven project, include the `dagger` artifact in the dependencies section
+of your `pom.xml` and the `dagger-compiler` artifact as either an `optional` or
+`provided` dependency:
 
 ```xml
 <dependencies>
@@ -67,7 +67,7 @@ dependency:
 ```
 
 If you use the beta `dagger-producers` extension (which supplies parallelizable execution graphs),
-then you should add this to your maven configuration:
+then add this to your maven configuration:
 
 ```xml
 <dependencies>
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AbstractActivityComponent.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AbstractActivityComponent.java
index c08ccc390..430838e83 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AbstractActivityComponent.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/AbstractActivityComponent.java
@@ -23,7 +23,7 @@
  * A base component upon which fragment's components may depend.  Activity-level components
  * should extend this component.
  */
-@PerActivity // Subtypes of ActivityComponent should be decorated with @PerActivity.
+@PerActivity // Subtypes of AbstractActivityComponent should be decorated with @PerActivity.
 @Component(dependencies = ApplicationComponent.class, modules = ActivityModule.class)
 public interface AbstractActivityComponent {
   Activity activity(); // Expose the activity to sub-graphs.
diff --git a/util/mvn-deploy.sh b/util/mvn-deploy.sh
index c812b1378..ec4b7a0d2 100755
--- a/util/mvn-deploy.sh
+++ b/util/mvn-deploy.sh
@@ -3,9 +3,8 @@ if [ $# -lt 1 ]; then
   echo "usage $0 <ssl-key> [<param> ...]"
   exit 1;
 fi
-key=${1}
+key=$1
 shift
-params=${@}
 
 #validate key
 keystatus=$(gpg --list-keys | grep ${key} | awk '{print $1}')
@@ -14,7 +13,9 @@ if [ "${keystatus}" != "pub" ]; then
   echo -n "Available keys from: "
   gpg --list-keys | grep --invert-match '^sub'
 
-  exit 1
+  exit 64
 fi
 
-mvn ${params} -P '!examples' -P sonatype-oss-release clean site:jar -Dgpg.skip=false -Dgpg.keyname=${key} deploy
+mvn "$@" -P '!examples' -P sonatype-oss-release \
+    -Dgpg.skip=false -Dgpg.keyname=${key} \
+    clean site:jar deploy
