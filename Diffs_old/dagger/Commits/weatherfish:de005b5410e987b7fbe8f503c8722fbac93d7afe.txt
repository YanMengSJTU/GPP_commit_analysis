diff --git a/.travis.yml b/.travis.yml
index 34622aca9..e7626a7f5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -62,4 +62,3 @@ branches:
 cache:
   directories:
     - $HOME/.m2
-    - $HOME/.cache/bazel
diff --git a/BUILD b/BUILD
index 6f926f057..a04bf43ca 100644
--- a/BUILD
+++ b/BUILD
@@ -64,6 +64,7 @@ javadoc_library(
     srcs = [
         "//core/src/main/java/dagger:javadoc-srcs",
         "//java/dagger/android:android-srcs",
+        "//java/dagger/android/support:support-srcs",
         "//producers:producers-srcs",
     ],
     android_api_level = 25,
diff --git a/WORKSPACE b/WORKSPACE
index 89481ad45..00f3bf368 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -127,8 +127,8 @@ maven_jar(
 
 maven_jar(
     name = "org_hamcrest_hamcrest_core",
-    artifact = "org.hamcrest:hamcrest-core:1.1",
-    sha1 = "860340562250678d1a344907ac75754e259cdb14",
+    artifact = "org.hamcrest:hamcrest-core:1.3",
+    sha1 = "42a25dc3219429f0e5d060061f71acb49bf010a0",
 )
 
 maven_jar(
diff --git a/build_defs.bzl b/build_defs.bzl
index 9b0447c0c..cf3d288d0 100644
--- a/build_defs.bzl
+++ b/build_defs.bzl
@@ -18,7 +18,7 @@ DOCLINT_HTML_AND_SYNTAX = ["-Xdoclint:html,syntax"]
 
 DOCLINT_REFERENCES = ["-Xdoclint:reference"]
 
-JAVA_6_SOURCE_LEVEL = ["-source 1.6"]
+SOURCE_7_TARGET_7 = ["-source 1.7 -target 1.7"]
 
 JAVA_7_SOURCE_LEVEL = ["-source 1.7"]
 
diff --git a/compiler/src/main/java/dagger/internal/codegen/CodeBlocks.java b/compiler/src/main/java/dagger/internal/codegen/CodeBlocks.java
index 41a023488..c8f06405c 100644
--- a/compiler/src/main/java/dagger/internal/codegen/CodeBlocks.java
+++ b/compiler/src/main/java/dagger/internal/codegen/CodeBlocks.java
@@ -56,16 +56,8 @@
    * use as type parameters or javadoc method arguments.
    */
   static Collector<TypeName, ?, CodeBlock> toTypeNamesCodeBlock() {
-    return typeNamesIntoCodeBlock(CodeBlock.builder());
-  }
-
-  /**
-   * Adds {@link TypeName} instances to the given {@link CodeBlock.Builder} in a comma-separated
-   * list for use as type parameters or javadoc method arguments.
-   */
-  static Collector<TypeName, ?, CodeBlock> typeNamesIntoCodeBlock(CodeBlock.Builder builder) {
     return Collector.of(
-        () -> new CodeBlockJoiner(", ", builder),
+        () -> new CodeBlockJoiner(", ", CodeBlock.builder()),
         CodeBlockJoiner::addTypeName,
         CodeBlockJoiner::merge,
         CodeBlockJoiner::join);
@@ -164,13 +156,14 @@ static CodeBlock javadocLinkTo(ExecutableElement executableElement) {
         throw new AssertionError(executableElement.toString());
     }
     builder.add("(");
-    executableElement
-        .getParameters()
-        .stream()
-        .map(VariableElement::asType)
-        .map(TypeName::get)
-        .map(TypeNames::rawTypeName)
-        .collect(typeNamesIntoCodeBlock(builder));
+    builder.add(
+        executableElement
+            .getParameters()
+            .stream()
+            .map(VariableElement::asType)
+            .map(TypeName::get)
+            .map(TypeNames::rawTypeName)
+            .collect(toTypeNamesCodeBlock()));
     return builder.add(")}").build();
   }
 
diff --git a/core/src/main/java/dagger/BUILD b/core/src/main/java/dagger/BUILD
index f4e27d2ef..d5dc94fac 100644
--- a/core/src/main/java/dagger/BUILD
+++ b/core/src/main/java/dagger/BUILD
@@ -20,14 +20,14 @@ package(default_visibility = ["//:src"])
 load(
     "//:build_defs.bzl",
     "DOCLINT_HTML_AND_SYNTAX",
-    "JAVA_6_SOURCE_LEVEL",
     "PRE_JAVA_8_INFERENCE_OPTS",
+    "SOURCE_7_TARGET_7",
 )
 
 java_library(
     name = "core",
     srcs = glob(["**/*.java"]),
-    javacopts = PRE_JAVA_8_INFERENCE_OPTS + JAVA_6_SOURCE_LEVEL + DOCLINT_HTML_AND_SYNTAX,
+    javacopts = PRE_JAVA_8_INFERENCE_OPTS + SOURCE_7_TARGET_7 + DOCLINT_HTML_AND_SYNTAX,
     exports = ["//third_party:jsr330_inject"],
     deps = ["//third_party:jsr330_inject"],
 )
diff --git a/java/dagger/android/AndroidManifest.xml b/java/dagger/android/AndroidManifest.xml
index fcd14263c..f071b6018 100644
--- a/java/dagger/android/AndroidManifest.xml
+++ b/java/dagger/android/AndroidManifest.xml
@@ -15,5 +15,5 @@
 -->
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="dagger.android">
-  <uses-sdk android:minSdkVersion="14" android:targetSdkVersion="24" />
+  <uses-sdk android:minSdkVersion="14" />
 </manifest>
diff --git a/java/dagger/android/BUILD b/java/dagger/android/BUILD
index ffa55adf0..8752b5ba9 100644
--- a/java/dagger/android/BUILD
+++ b/java/dagger/android/BUILD
@@ -21,7 +21,7 @@ load(
     "//:build_defs.bzl",
     "DOCLINT_HTML_AND_SYNTAX",
     "DOCLINT_REFERENCES",
-    "JAVA_6_SOURCE_LEVEL",
+    "SOURCE_7_TARGET_7",
     "PRE_JAVA_8_INFERENCE_OPTS",
 )
 
@@ -33,13 +33,12 @@ filegroup(
 android_library(
     name = "android",
     srcs = [":android-srcs"],
-    javacopts = PRE_JAVA_8_INFERENCE_OPTS + JAVA_6_SOURCE_LEVEL + DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES,
+    javacopts = PRE_JAVA_8_INFERENCE_OPTS + SOURCE_7_TARGET_7 + DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES,
     manifest = "AndroidManifest.xml",
     deps = [
         "//:dagger_with_compiler",
         "//third_party:auto_value",
         "@androidsdk//com.android.support:support-annotations-25.0.0",
-        "@androidsdk//com.android.support:support-v4-25.0.0",
     ],
 )
 
diff --git a/java/dagger/android/DaggerActivity.java b/java/dagger/android/DaggerActivity.java
index d9f68911d..f08c02a7b 100644
--- a/java/dagger/android/DaggerActivity.java
+++ b/java/dagger/android/DaggerActivity.java
@@ -33,8 +33,8 @@
 
   @Override
   protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
     AndroidInjection.inject(this);
+    super.onCreate(savedInstanceState);
   }
 
   @Override
diff --git a/java/dagger/android/DaggerFragment.java b/java/dagger/android/DaggerFragment.java
index d48438231..d7b552f76 100644
--- a/java/dagger/android/DaggerFragment.java
+++ b/java/dagger/android/DaggerFragment.java
@@ -33,8 +33,8 @@
 
   @Override
   public void onAttach(Context context) {
-    super.onAttach(context);
     AndroidInjection.inject(this);
+    super.onAttach(context);
   }
 
   @Override
diff --git a/java/dagger/android/processor/BUILD b/java/dagger/android/processor/BUILD
index 12ba1e1f9..9167fad25 100644
--- a/java/dagger/android/processor/BUILD
+++ b/java/dagger/android/processor/BUILD
@@ -23,26 +23,24 @@ load(
     "DOCLINT_REFERENCES",
 )
 
-# https://github.com/bazelbuild/bazel/issues/2517
-java_import(
-    name = "dagger_android_import_hack",
-    jars = [
-        "//java/dagger/android:libandroid.jar",
-        "//java/dagger/android/support:libsupport.jar",
-    ],
+filegroup(
+    name = "srcs",
+    srcs = glob(["*.java"]),
 )
 
 java_library(
     name = "processor",
-    srcs = glob(["*.java"]),
+    srcs = [":srcs"],
     javacopts = DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES,
     deps = [
-        ":dagger_android_import_hack",
-        "//core",
-        "//third_party:auto_common",
+        "//third_party:guava",
         "//third_party:auto_service",
         "//third_party:auto_value",
-        "//third_party:guava",
+        "//third_party:auto_common",
+        "//core",
+        # https://github.com/bazelbuild/bazel/issues/2517
+        "//java/dagger/android:libandroid.jar",
+        "//java/dagger/android/support:libsupport.jar",
     ],
 )
 
@@ -51,3 +49,12 @@ java_plugin(
     processor_class = "dagger.android.processor.AndroidProcessor",
     deps = [":processor"],
 )
+
+load("//tools:javadoc.bzl", "javadoc_library")
+
+javadoc_library(
+    name = "processor-javadoc",
+    srcs = [":srcs"],
+    root_packages = ["dagger.android.processor"],
+    deps = [":processor"],
+)
diff --git a/java/dagger/android/support/AndroidManifest.xml b/java/dagger/android/support/AndroidManifest.xml
index fc31038b6..d080e115c 100644
--- a/java/dagger/android/support/AndroidManifest.xml
+++ b/java/dagger/android/support/AndroidManifest.xml
@@ -15,8 +15,5 @@
   -->
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
   package="dagger.android.support">
-
-  <uses-sdk
-    android:minSdkVersion="14"
-    android:targetSdkVersion="24"/>
+  <uses-sdk android:minSdkVersion="14" />
 </manifest>
diff --git a/java/dagger/android/support/BUILD b/java/dagger/android/support/BUILD
index 07f5656f8..143b1fde6 100644
--- a/java/dagger/android/support/BUILD
+++ b/java/dagger/android/support/BUILD
@@ -17,12 +17,17 @@
 
 package(default_visibility = ["//:src"])
 
-load("//:build_defs.bzl", "JAVA_6_SOURCE_LEVEL", "PRE_JAVA_8_INFERENCE_OPTS")
+load("//:build_defs.bzl", "SOURCE_7_TARGET_7", "PRE_JAVA_8_INFERENCE_OPTS")
+
+filegroup(
+    name = "support-srcs",
+    srcs = glob(["*.java"]),
+)
 
 android_library(
     name = "support",
     srcs = glob(["*.java"]),
-    javacopts = PRE_JAVA_8_INFERENCE_OPTS + JAVA_6_SOURCE_LEVEL,
+    javacopts = PRE_JAVA_8_INFERENCE_OPTS + SOURCE_7_TARGET_7,
     manifest = "AndroidManifest.xml",
     deps = [
         "//:dagger_with_compiler",
@@ -32,3 +37,13 @@ android_library(
         "@androidsdk//com.android.support:support-v4-25.0.0",
     ],
 )
+
+load("//tools:javadoc.bzl", "javadoc_library")
+
+javadoc_library(
+    name = "support-javadoc",
+    srcs = [":support-srcs"],
+    android_api_level = 25,
+    root_packages = ["dagger.android.support"],
+    deps = [":support"],
+)
diff --git a/java/dagger/android/support/DaggerAppCompatActivity.java b/java/dagger/android/support/DaggerAppCompatActivity.java
index 12d6e421b..f1b403362 100644
--- a/java/dagger/android/support/DaggerAppCompatActivity.java
+++ b/java/dagger/android/support/DaggerAppCompatActivity.java
@@ -38,8 +38,8 @@
 
   @Override
   protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
     AndroidInjection.inject(this);
+    super.onCreate(savedInstanceState);
   }
 
   @Override
diff --git a/java/dagger/android/support/DaggerFragment.java b/java/dagger/android/support/DaggerFragment.java
index 40ce16fde..b21f85968 100644
--- a/java/dagger/android/support/DaggerFragment.java
+++ b/java/dagger/android/support/DaggerFragment.java
@@ -35,8 +35,8 @@
 
   @Override
   public void onAttach(Context context) {
-    super.onAttach(context);
     AndroidSupportInjection.inject(this);
+    super.onAttach(context);
   }
 
   @Override
diff --git a/javatests/dagger/android/support/functional/InjectorsTest.java b/javatests/dagger/android/support/functional/InjectorsTest.java
index 0aa42c9c1..cc1b0b4a7 100644
--- a/javatests/dagger/android/support/functional/InjectorsTest.java
+++ b/javatests/dagger/android/support/functional/InjectorsTest.java
@@ -18,11 +18,13 @@
 
 import static com.google.common.truth.Truth.assertThat;
 
+import android.content.res.Configuration;
 import org.robolectric.RobolectricTestRunner;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
 @RunWith(RobolectricTestRunner.class)
@@ -30,13 +32,16 @@
   private static final String MANIFEST =
       "//javatests/dagger/android/support/functional"
           + ":functional/AndroidManifest.xml";
+
+  private ActivityController<TestActivity> activityController;
   private TestActivity activity;
   private TestParentFragment parentFragment;
   private TestChildFragment childFragment;
 
   @Before
   public void setUp() {
-    activity = Robolectric.setupActivity(TestActivity.class);
+    activityController = Robolectric.buildActivity(TestActivity.class);
+    activity = activityController.setup().get();
     parentFragment =
         (TestParentFragment)
             activity.getSupportFragmentManager().findFragmentByTag("parent-fragment");
@@ -72,6 +77,8 @@ public void componentStructureFollowsControllerStructure() {
                 .ActivitySubcomponent.ParentFragmentSubcomponent.class,
             ComponentStructureFollowsControllerStructureApplication.ApplicationComponent
                 .ActivitySubcomponent.ParentFragmentSubcomponent.ChildFragmentSubcomponent.class);
+
+    changeConfiguration();
   }
 
   @Test
@@ -92,5 +99,18 @@ public void AllControllersAreDirectChildrenOfApplication() {
             AllControllersAreDirectChildrenOfApplication.ApplicationComponent.class,
             AllControllersAreDirectChildrenOfApplication.ApplicationComponent
                 .ChildFragmentSubcomponent.class);
+
+    changeConfiguration();
+  }
+
+  // https://github.com/google/dagger/issues/598
+  private void changeConfiguration() {
+    Configuration oldConfiguration = activity.getResources().getConfiguration();
+    Configuration newConfiguration = new Configuration(oldConfiguration);
+    newConfiguration.orientation =
+        oldConfiguration.orientation == Configuration.ORIENTATION_LANDSCAPE
+            ? Configuration.ORIENTATION_PORTRAIT
+            : Configuration.ORIENTATION_LANDSCAPE;
+    activityController.configurationChange(newConfiguration);
   }
 }
diff --git a/producers/BUILD b/producers/BUILD
index dbc72cc7b..1fd2de12e 100644
--- a/producers/BUILD
+++ b/producers/BUILD
@@ -21,7 +21,7 @@ load(
     "//:build_defs.bzl",
     "DOCLINT_HTML_AND_SYNTAX",
     "DOCLINT_REFERENCES",
-    "JAVA_6_SOURCE_LEVEL",
+    "SOURCE_7_TARGET_7",
     "JAVA_7_SOURCE_LEVEL",
     "PRE_JAVA_8_INFERENCE_OPTS",
 )
@@ -34,7 +34,7 @@ filegroup(
 java_library(
     name = "producers",
     srcs = [":producers-srcs"],
-    javacopts = PRE_JAVA_8_INFERENCE_OPTS + JAVA_6_SOURCE_LEVEL + DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES,
+    javacopts = PRE_JAVA_8_INFERENCE_OPTS + SOURCE_7_TARGET_7 + DOCLINT_HTML_AND_SYNTAX + DOCLINT_REFERENCES,
     plugins = [
         # TODO(cgruber): Enable Beta checker.
     ],
diff --git a/third_party/BUILD b/third_party/BUILD
index 28353652d..e07597903 100644
--- a/third_party/BUILD
+++ b/third_party/BUILD
@@ -42,11 +42,16 @@ java_library(
 
 java_library(
     name = "junit",
-    exports = ["@junit_junit//jar"],
+    testonly = 1,
+    exports = [
+        "@junit_junit//jar",
+        "@org_hamcrest_hamcrest_core//jar",
+    ],
 )
 
 java_library(
     name = "truth",
+    testonly = 1,
     exports = ["@com_google_truth_truth//jar"],
 )
 
@@ -57,6 +62,7 @@ java_library(
 
 java_library(
     name = "guava_testlib",
+    testonly = 1,
     exports = ["@com_google_guava_guava_testlib//jar"],
 )
 
diff --git a/tools/javadoc_library_impl.sh b/tools/javadoc_library_impl.sh
index 2990e614b..b2d711598 100755
--- a/tools/javadoc_library_impl.sh
+++ b/tools/javadoc_library_impl.sh
@@ -23,7 +23,7 @@ DEPLOY_JAR=$6
 BOOTCLASSPATH=$7
 LINKOFFLINE=$8
 DOCTITLE=$9
-TEMPDIR=$10/tmp
+TEMPDIR=${10}/tmp
 
 mkdir -p $TEMPDIR
 
diff --git a/util/mvn-deploy.sh b/util/deploy-to-maven-central.sh
similarity index 60%
rename from util/mvn-deploy.sh
rename to util/deploy-to-maven-central.sh
index c95988094..1cd368938 100755
--- a/util/mvn-deploy.sh
+++ b/util/deploy-to-maven-central.sh
@@ -15,13 +15,6 @@ if [[ ! $version_name =~ ^2\. ]]; then
   exit 2
 fi
 
-# Rename snapshot version and sanity check that it doesn't exist in any poms
-sed -i s/HEAD-SNAPSHOT/$version_name/g `find . -name pom.xml`
-if [[ $(git grep HEAD-SNAPSHOT -- '*pom.xml') ]]; then
-  echo "Snapshots found in poms!"
-  exit 3
-fi
-
 #validate key
 keystatus=$(gpg --list-keys | grep ${key} | awk '{print $1}')
 if [ "${keystatus}" != "pub" ]; then
@@ -32,16 +25,18 @@ if [ "${keystatus}" != "pub" ]; then
   exit 64
 fi
 
-mvn "$@" -P '!examples' -P sonatype-oss-release \
-    -Dgpg.skip=false -Dgpg.keyname=${key} \
-    clean clean site:jar deploy
+sh $(dirname $0)/execute-deploy.sh \
+  "$version_name" \
+  "sonatype-nexus-staging" \
+  "https://oss.sonatype.org/service/local/staging/deploy/maven2/" \
+  "-Dgpg.keyname=${key}"
 
 # Publish javadocs to gh-pages
-mvn javadoc:aggregate -P!examples -DexcludePackageNames=*.internal
+bazel build //:user-docs.jar
 git clone --quiet --branch gh-pages \
     https://github.com/google/dagger gh-pages > /dev/null
 cd gh-pages
-cp -r ../target/site/apidocs api/$version_name
+unzip ../bazel-genfiles/user-docs.jar -d api/$version_name
 git add api/$version_name
 git commit -m "$version_name docs"
 git push origin gh-pages
diff --git a/util/execute-deploy.sh b/util/execute-deploy.sh
new file mode 100755
index 000000000..fa5fc978c
--- /dev/null
+++ b/util/execute-deploy.sh
@@ -0,0 +1,79 @@
+#!/bin/sh
+
+VERSION_NAME=$1
+REPOSITORY_ID=$2
+REPOSITORY_URL=$3
+EXTRA_MAVEN_ARGS=$4
+
+python $(dirname $0)/maven/generate_poms.py $VERSION_NAME \
+  //core/src/main/java/dagger:core \
+  //compiler:compiler \
+  //producers:producers \
+  //java/dagger/android:android \
+  //java/dagger/android/support:support \
+  //java/dagger/android/processor:processor
+
+library_output_file() {
+  library=$1
+  library_output=bazel-bin/$library
+  if [[ ! -e $library_output ]]; then
+     library_output=bazel-genfiles/$library
+  fi
+  if [[ ! -e $library_output ]]; then
+    echo "Could not find bazel output file for $library"
+    exit 1
+  fi
+  echo -n $library_output
+}
+
+deploy_library() {
+  library=$1
+  srcjar=$2
+  javadoc=$3
+  pomfile=$4
+  bazel build $library $srcjar $javadoc
+  mvn gpg:sign-and-deploy-file \
+    -Dfile=$(library_output_file $library) \
+    -DrepositoryId=$REPOSITORY_ID \
+    -Durl=$REPOSITORY_URL \
+    -Djavadoc=bazel-genfiles/$javadoc \
+    -DpomFile=$pomfile \
+    -Dsources=bazel-bin/$srcjar \
+    $EXTRA_MAVEN_ARGS
+}
+
+deploy_library \
+  core/src/main/java/dagger/libcore.jar \
+  core/src/main/java/dagger/libcore-src.jar \
+  core/src/main/java/dagger/core-javadoc.jar \
+  dagger.pom.xml
+
+deploy_library \
+  shaded_compiler.jar \
+  compiler/libcompiler-src.jar \
+  compiler/compiler-javadoc.jar \
+  dagger-compiler.pom.xml
+
+deploy_library \
+  producers/libproducers.jar \
+  producers/libproducers-src.jar \
+  producers/producers-javadoc.jar \
+  dagger-producers.pom.xml
+
+deploy_library \
+  java/dagger/android/android.aar \
+  java/dagger/android/libandroid-src.jar \
+  java/dagger/android/android-javadoc.jar \
+  dagger-android.pom.xml
+
+deploy_library \
+  java/dagger/android/support/support.aar \
+  java/dagger/android/support/libsupport-src.jar \
+  java/dagger/android/support/support-javadoc.jar \
+  dagger-android-support.pom.xml
+
+deploy_library \
+  java/dagger/android/processor/libprocessor.jar \
+  java/dagger/android/processor/libprocessor-src.jar \
+  java/dagger/android/processor/processor-javadoc.jar \
+  dagger-android-processor.pom.xml
diff --git a/util/generate-latest-docs.sh b/util/generate-latest-docs.sh
index 8846d9b54..e534adc46 100755
--- a/util/generate-latest-docs.sh
+++ b/util/generate-latest-docs.sh
@@ -1,12 +1,13 @@
 # see http://benlimmer.com/2013/12/26/automatically-publish-javadoc-to-gh-pages-with-travis-ci/ for details
 
+set -eu
+
 if [ "$TRAVIS_REPO_SLUG" == "google/dagger" ] && \
    [ "$TRAVIS_JDK_VERSION" == "$JDK_FOR_PUBLISHING" ] && \
    [ "$TRAVIS_PULL_REQUEST" == "false" ] && \
    [ "$TRAVIS_BRANCH" == "master" ]; then
   echo -e "Publishing javadoc...\n"
-  mvn javadoc:aggregate -P!examples -DexcludePackageNames=*.internal
-  TARGET="$(pwd)/target"
+  bazel build //:user-docs.jar
 
   cd $HOME
   git clone --quiet --branch=gh-pages https://${GH_TOKEN}@github.com/google/dagger gh-pages > /dev/null
@@ -16,7 +17,7 @@ if [ "$TRAVIS_REPO_SLUG" == "google/dagger" ] && \
   git config --global user.name "travis-ci"
   git rm -rf api/latest
   mkdir -p api
-  mv ${TARGET}/site/apidocs api/latest
+  unzip ../bazel-genfiles/user-docs.jar -d api/latest
   git add -f api/latest
   git commit -m "Lastest javadoc on successful travis build $TRAVIS_BUILD_NUMBER auto-pushed to gh-pages"
   git push -fq origin gh-pages > /dev/null
diff --git a/util/maven/generate_poms.py b/util/maven/generate_poms.py
index c9dcc42ee..7254ec46b 100644
--- a/util/maven/generate_poms.py
+++ b/util/maven/generate_poms.py
@@ -13,11 +13,13 @@
 # limitations under the License.
 
 import os
+import re
 from subprocess import check_output
 import sys
 from workspace_parser import maven_artifacts
 from xml_formatting import generate_pom
 
+
 def _shell(command):
   output = check_output(command,
                         shell=True,
@@ -41,6 +43,8 @@ def pom_deps(label):
         accumulated_deps.add(export)
         accumulated_deps.update(pom_deps(export))
     else:
+      if ':lib' in dep and dep.endswith('.jar'):
+        dep = dep[:-4].replace(':lib', ':')
       accumulated_deps.add(dep)
 
   return accumulated_deps
@@ -62,26 +66,34 @@ def pom_deps(label):
         'name': 'Dagger Producers',
         'artifact': 'dagger-producers',
     },
-    '//android/src/main/java/dagger/android:android': {
+    '//java/dagger/android:android': {
         'name': 'Dagger Android',
         'artifact': 'dagger-android',
-        'alias': '//android:android',
         'packaging': 'aar',
     },
+    '//java/dagger/android/support:support': {
+        'name': 'Dagger Android Support',
+        'artifact': 'dagger-android-support',
+        'packaging': 'aar',
+    },
+    '//java/dagger/android/processor:processor': {
+        'name': 'Dagger Android Processor',
+        'artifact': 'dagger-android-processor',
+    },
 }
 
 class UnknownDependencyException(Exception): pass
 
 def main():
-  if len(sys.argv) <= 3:
+  if len(sys.argv) < 3:
     print 'Usage: %s <version> <target_for_pom>...' % sys.argv[0]
     sys.exit(1)
 
   version = sys.argv[1]
   artifacts = maven_artifacts()
-  artifacts['@androidsdk//com.android.support:support-annotations-24.2.0'] = (
-      'com.android.support:support-annotations:24.2.0'
-  )
+
+  android_sdk_pattern = re.compile(
+      r'@androidsdk//([a-z.-]*):([a-z0-9-]*)-([0-9.]*)')
 
   for label, metadata in METADATA.iteritems():
     artifacts[label] = (
@@ -93,6 +105,9 @@ def main():
   def artifact_for_dep(label):
     if label in artifacts:
       return artifacts[label]
+    match = android_sdk_pattern.match(label)
+    if match:
+      return ':'.join(match.groups())
     raise UnknownDependencyException('No artifact found for %s' % label)
 
   for arg in sys.argv[2:]:
diff --git a/util/publish-snapshot-on-commit.sh b/util/publish-snapshot-on-commit.sh
index 8173fbb52..ab0d84cab 100755
--- a/util/publish-snapshot-on-commit.sh
+++ b/util/publish-snapshot-on-commit.sh
@@ -1,12 +1,18 @@
 # see https://coderwall.com/p/9b_lfq
 
+set -eu
+
 if [ "$TRAVIS_REPO_SLUG" == "google/dagger" ] && \
    [ "$TRAVIS_JDK_VERSION" == "$JDK_FOR_PUBLISHING" ] && \
    [ "$TRAVIS_PULL_REQUEST" == "false" ] && \
    [ "$TRAVIS_BRANCH" == "master" ]; then
   echo -e "Publishing maven snapshot...\n"
 
-  mvn clean source:jar deploy --settings="util/settings.xml" -DskipTests=true -Dinvoker.skip=true -Dmaven.javadoc.skip=true
+  sh $(dirname $0)/execute-deploy.sh \
+    "HEAD-SNAPSHOT" \
+    "sonatype-nexus-snapshots" \
+    "https://oss.sonatype.org/content/repositories/snapshots" \
+    "--settings=util/settings.xml"
 
   echo -e "Published maven snapshot"
 else
