diff --git a/compiler/src/main/java/dagger/internal/codegen/ModuleDescriptor.java b/compiler/src/main/java/dagger/internal/codegen/ModuleDescriptor.java
index e423f55ee..954b91eeb 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ModuleDescriptor.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ModuleDescriptor.java
@@ -40,6 +40,7 @@
 import static com.google.auto.common.MoreElements.getAnnotationMirror;
 import static com.google.auto.common.MoreElements.isAnnotationPresent;
 import static com.google.common.base.Preconditions.checkArgument;
+import static com.google.common.base.Preconditions.checkState;
 import static com.google.common.base.Verify.verify;
 import static dagger.internal.codegen.ConfigurationAnnotations.getModuleIncludes;
 import static dagger.internal.codegen.Util.componentCanMakeNewInstances;
@@ -149,7 +150,11 @@
     }
 
     ModuleDescriptor create(TypeElement moduleElement) {
-      AnnotationMirror moduleAnnotation = getModuleAnnotation(moduleElement).get();
+      Optional<AnnotationMirror> probableModuleAnnotation = getModuleAnnotation(moduleElement);
+      checkState(probableModuleAnnotation.isPresent(),
+          "%s did not have an AnnotationMirror for @Module",
+          moduleElement.getQualifiedName());
+      AnnotationMirror moduleAnnotation = probableModuleAnnotation.get();
 
       ImmutableSet.Builder<ContributionBinding> bindings = ImmutableSet.builder();
       for (ExecutableElement moduleMethod : methodsIn(elements.getAllMembers(moduleElement))) {
