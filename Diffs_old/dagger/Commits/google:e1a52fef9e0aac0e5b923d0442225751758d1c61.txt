diff --git a/core/src/main/java/dagger/internal/DoubleCheck.java b/core/src/main/java/dagger/internal/DoubleCheck.java
index 10f5f076d..6498eae31 100644
--- a/core/src/main/java/dagger/internal/DoubleCheck.java
+++ b/core/src/main/java/dagger/internal/DoubleCheck.java
@@ -27,7 +27,7 @@
 public final class DoubleCheck<T> implements Provider<T>, Lazy<T> {
   private static final Object UNINITIALIZED = new Object();
 
-  private final Provider<T> provider;
+  private volatile Provider<T> provider;
   private volatile Object instance = UNINITIALIZED;
 
   private DoubleCheck(Provider<T> provider) {
@@ -35,7 +35,7 @@ private DoubleCheck(Provider<T> provider) {
     this.provider = provider;
   }
 
-  @SuppressWarnings("unchecked") // cast only happens when result comes from the factory
+  @SuppressWarnings("unchecked") // cast only happens when result comes from the provider
   @Override
   public T get() {
     Object result = instance;
@@ -44,6 +44,9 @@ public T get() {
         result = instance;
         if (result == UNINITIALIZED) {
           instance = result = provider.get();
+          /* Null out the reference to the provider. We are never going to need it again, so we
+           * can make it eligible for GC. */
+          provider = null;
         }
       }
     }
