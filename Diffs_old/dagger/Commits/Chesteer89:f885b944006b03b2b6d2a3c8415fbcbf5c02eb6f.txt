diff --git a/java/dagger/android/AndroidInjection.java b/java/dagger/android/AndroidInjection.java
index caf733d8a..d6ef2c642 100644
--- a/java/dagger/android/AndroidInjection.java
+++ b/java/dagger/android/AndroidInjection.java
@@ -26,8 +26,11 @@
 import android.content.BroadcastReceiver;
 import android.content.ContentProvider;
 import android.content.Context;
+import android.content.ContextWrapper;
+import android.view.View;
 import android.util.Log;
 import dagger.internal.Beta;
+import dagger.android.HasViewInjector;
 
 /** Injects core Android types. */
 @Beta
@@ -208,7 +211,7 @@ public static void inject(ContentProvider contentProvider) {
   public static void inject(View view) {
     checkNotNull(view, "view");
     Activity activity = getViewActivity(view);
-    if (!(application instanceof HasViewInjector)) {
+    if (!(activity instanceof HasViewInjector)) {
       throw new RuntimeException(
               String.format(
                       "%s does not implement %s",
@@ -225,14 +228,14 @@ public static void inject(View view) {
 
   public static Activity getViewActivity(View view) {
       // https://android.googlesource.com/platform/frameworks/support/+/03e0f3daf3c97ee95cd78b2f07bc9c1be05d43db/v7/mediarouter/src/android/support/v7/app/MediaRouteButton.java#276
-      Context context = getContext();
+      Context context = view.getContext();
       while (context instanceof ContextWrapper) {
         if (context instanceof Activity) {
           return (Activity)context;
         }
         context = ((ContextWrapper) context).getBaseContext();
       }
-      throw new IllegalStateException("Context does not stem from an activity: " + getContext());
+      throw new IllegalStateException("Context does not stem from an activity: " + view.getContext());
   }
 
   private AndroidInjection() {}
diff --git a/java/dagger/android/AndroidInjectionModule.java b/java/dagger/android/AndroidInjectionModule.java
index 7c6ddb10b..4becad16a 100644
--- a/java/dagger/android/AndroidInjectionModule.java
+++ b/java/dagger/android/AndroidInjectionModule.java
@@ -16,6 +16,7 @@
 
 package dagger.android;
 
+import android.view.View;
 import dagger.Module;
 import dagger.internal.Beta;
 import dagger.multibindings.Multibinds;
diff --git a/java/dagger/android/DaggerApplication.java b/java/dagger/android/DaggerApplication.java
index 16e0804d7..01d936658 100644
--- a/java/dagger/android/DaggerApplication.java
+++ b/java/dagger/android/DaggerApplication.java
@@ -22,6 +22,7 @@
 import android.app.Service;
 import android.content.BroadcastReceiver;
 import android.content.ContentProvider;
+import android.view.View;
 import com.google.errorprone.annotations.ForOverride;
 import dagger.internal.Beta;
 import javax.inject.Inject;
diff --git a/java/dagger/android/HasViewInjector.java b/java/dagger/android/HasViewInjector.java
index cfbab34b0..e9f723613 100644
--- a/java/dagger/android/HasViewInjector.java
+++ b/java/dagger/android/HasViewInjector.java
@@ -17,11 +17,12 @@
 package dagger.android;
 
 import android.app.Activity;
+import android.view.View;
 import dagger.internal.Beta;
 
 /** Provides an {@link AndroidInjector} of {@link View}s. */
 @Beta
-public interface HasActivityInjector {
+public interface HasViewInjector {
 
   /** Returns an {@link AndroidInjector} of {@link View}s. */
   AndroidInjector<View> viewInjector();
