diff --git a/compiler/src/it/producers-functional-tests/src/main/java/producerstest/multibindings/MultibindingProducerModule.java b/compiler/src/it/producers-functional-tests/src/main/java/producerstest/multibindings/MultibindingProducerModule.java
index 6f182c0e6..8532686f8 100644
--- a/compiler/src/it/producers-functional-tests/src/main/java/producerstest/multibindings/MultibindingProducerModule.java
+++ b/compiler/src/it/producers-functional-tests/src/main/java/producerstest/multibindings/MultibindingProducerModule.java
@@ -18,22 +18,25 @@
 import com.google.common.collect.ImmutableSet;
 import com.google.common.util.concurrent.Futures;
 import com.google.common.util.concurrent.ListenableFuture;
-import dagger.Multibindings;
+
 import dagger.multibindings.ElementsIntoSet;
 import dagger.multibindings.IntKey;
 import dagger.multibindings.IntoMap;
 import dagger.multibindings.IntoSet;
+import dagger.multibindings.Multibinds;
 import dagger.producers.Produced;
 import dagger.producers.ProducerModule;
 import dagger.producers.Produces;
-import java.util.Map;
-import java.util.Set;
+
 import producerstest.multibindings.Qualifiers.ObjCount;
 import producerstest.multibindings.Qualifiers.PossiblyThrowingMap;
 import producerstest.multibindings.Qualifiers.PossiblyThrowingSet;
 
+import java.util.Map;
+import java.util.Set;
+
 @ProducerModule
-final class MultibindingProducerModule {
+abstract class MultibindingProducerModule {
   @Produces
   @IntoSet
   static ListenableFuture<String> futureStr() {
@@ -114,12 +117,11 @@ static String throwingValueFor15() {
     throw new RuntimeException("monkey");
   }
 
-  @Multibindings
-  interface MultiBindings {
-    Set<Object> objs();
+  @Multibinds
+  abstract Set<Object> objs();
 
-    Map<Object, Object> objMap();
-  }
+  @Multibinds
+  abstract Map<Object, Object> objMap();
 
   @Produces
   @ObjCount
