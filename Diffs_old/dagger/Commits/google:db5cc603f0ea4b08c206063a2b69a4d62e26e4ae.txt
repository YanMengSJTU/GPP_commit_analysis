diff --git a/compiler/src/main/java/dagger/internal/codegen/Binding.java b/compiler/src/main/java/dagger/internal/codegen/Binding.java
index e3e6e49be..47e343604 100644
--- a/compiler/src/main/java/dagger/internal/codegen/Binding.java
+++ b/compiler/src/main/java/dagger/internal/codegen/Binding.java
@@ -74,10 +74,8 @@
    * Returns the name of the package in which this binding must be managed. E.g.: a binding
    * may reference non-public types.
    */
-  abstract Optional<String> bindingPackage();
-
-  protected static Optional<String> findBindingPackage(Key bindingKey) {
-    Set<String> packages = nonPublicPackageUse(bindingKey.type());
+  final Optional<String> bindingPackage() {
+    Set<String> packages = nonPublicPackageUse(key().type());
     switch (packages.size()) {
       case 0:
         return Optional.absent();
diff --git a/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java b/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java
index 3ca4f0cde..2429870e6 100644
--- a/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java
+++ b/compiler/src/main/java/dagger/internal/codegen/MembersInjectionBinding.java
@@ -224,7 +224,6 @@ public Key apply(DeclaredType superclass) {
           Optional.<TypeElement>absent(),
           key,
           dependencies,
-          findBindingPackage(key),
           hasNonDefaultTypeParameters(typeElement, key.type(), types)
               ? Optional.of(
                   forInjectedType(
diff --git a/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java b/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java
index da904aa31..2ad2ea892 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java
@@ -115,7 +115,6 @@ ProductionBinding forProducesMethod(
           Optional.of(contributedBy),
           key,
           dependencies,
-          findBindingPackage(key),
           Optional.<DeclaredType>absent(), // TODO(beder): Add nullability checking with Java 8.
           Optional.<DependencyRequest>absent(),
           wrapOptionalInEquivalence(getMapKey(producesMethod)),
@@ -147,7 +146,6 @@ ProductionBinding syntheticMapOfValuesOrProducedBinding(
           Optional.<TypeElement>absent(),
           requestForMapOfValuesOrProduced.key(),
           ImmutableSet.of(requestForMapOfProducers),
-          findBindingPackage(requestForMapOfValuesOrProduced.key()),
           Optional.<DeclaredType>absent(),
           Optional.<DependencyRequest>absent(),
           wrapOptionalInEquivalence(getMapKey(requestForMapOfProducers.requestElement())),
@@ -171,7 +169,6 @@ ProductionBinding syntheticMultibinding(
           Optional.<TypeElement>absent(),
           request.key(),
           dependencyRequestFactory.forMultibindingContributions(request, multibindingContributions),
-          findBindingPackage(request.key()),
           Optional.<DeclaredType>absent(),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
@@ -192,7 +189,6 @@ ProductionBinding forComponentMethod(ExecutableElement componentMethod) {
           Optional.<TypeElement>absent(),
           keyFactory.forProductionComponentMethod(componentMethod),
           ImmutableSet.<DependencyRequest>of(),
-          Optional.<String>absent(),
           Optional.<DeclaredType>absent(),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
@@ -210,7 +206,6 @@ ProductionBinding delegate(
           delegateDeclaration.contributingModule(),
           delegateDeclaration.key(),
           ImmutableSet.of(delegateDeclaration.delegateRequest()),
-          findBindingPackage(delegateDeclaration.key()),
           delegateBinding.nullableType(),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
diff --git a/compiler/src/main/java/dagger/internal/codegen/ProvisionBinding.java b/compiler/src/main/java/dagger/internal/codegen/ProvisionBinding.java
index c72ed21ab..748b3733f 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ProvisionBinding.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ProvisionBinding.java
@@ -125,7 +125,6 @@ ProvisionBinding forInjectConstructor(ExecutableElement constructorElement,
           Optional.<TypeElement>absent(),
           key,
           dependencies,
-          findBindingPackage(key),
           Optional.<DeclaredType>absent(),
           membersInjectionRequest,
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
@@ -172,7 +171,6 @@ ProvisionBinding forProvidesMethod(
           Optional.of(contributedBy),
           key,
           dependencies,
-          findBindingPackage(key),
           ConfigurationAnnotations.getNullableType(providesMethod),
           Optional.<DependencyRequest>absent(),
           wrapOptionalInEquivalence(getMapKey(providesMethod)),
@@ -201,7 +199,6 @@ ProvisionBinding syntheticMapOfValuesBinding(DependencyRequest requestForMapOfVa
           Optional.<TypeElement>absent(),
           requestForMapOfValues.key(),
           ImmutableSet.of(requestForMapOfProviders),
-          findBindingPackage(requestForMapOfValues.key()),
           Optional.<DeclaredType>absent(),
           Optional.<DependencyRequest>absent(),
           wrapOptionalInEquivalence(getMapKey(requestForMapOfProviders.requestElement())),
@@ -224,7 +221,6 @@ ProvisionBinding syntheticMultibinding(
           Optional.<TypeElement>absent(),
           request.key(),
           dependencyRequestFactory.forMultibindingContributions(request, multibindingContributions),
-          findBindingPackage(request.key()),
           Optional.<DeclaredType>absent(),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
@@ -241,7 +237,6 @@ ProvisionBinding forComponent(TypeElement componentDefinitionType) {
           Optional.<TypeElement>absent(),
           keyFactory.forComponent(componentDefinitionType.asType()),
           ImmutableSet.<DependencyRequest>of(),
-          Optional.<String>absent(),
           Optional.<DeclaredType>absent(),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
@@ -261,7 +256,6 @@ ProvisionBinding forComponentMethod(ExecutableElement componentMethod) {
           Optional.<TypeElement>absent(),
           keyFactory.forComponentMethod(componentMethod),
           ImmutableSet.<DependencyRequest>of(),
-          Optional.<String>absent(),
           ConfigurationAnnotations.getNullableType(componentMethod),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
@@ -282,7 +276,6 @@ ProvisionBinding forSubcomponentBuilderMethod(
           Optional.<TypeElement>absent(),
           keyFactory.forSubcomponentBuilderMethod(subcomponentBuilderMethod, declaredContainer),
           ImmutableSet.<DependencyRequest>of(),
-          Optional.<String>absent(),
           Optional.<DeclaredType>absent(),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
@@ -299,7 +292,6 @@ ProvisionBinding delegate(
           delegateDeclaration.contributingModule(),
           delegateDeclaration.key(),
           ImmutableSet.of(delegateDeclaration.delegateRequest()),
-          findBindingPackage(delegateDeclaration.key()),
           delegate.nullableType(),
           Optional.<DependencyRequest>absent(),
           Optional.<Equivalence.Wrapper<AnnotationMirror>>absent(),
