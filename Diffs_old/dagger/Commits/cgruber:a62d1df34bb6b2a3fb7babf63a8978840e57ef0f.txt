diff --git a/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java b/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java
index a974d3c8a..e4095a92e 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java
@@ -360,14 +360,18 @@ private void traverseDependencyRequest(DependencyRequest request, DependencyPath
           validateResolvedBindings(path);
 
           // Validate all dependencies within the component that owns the binding.
-          for (Map.Entry<ComponentDescriptor, ? extends Binding> entry :
-              path.currentResolvedBindings().bindingsByComponent()) {
-            Validation validation = validationForComponent(entry.getKey());
-            Binding binding = entry.getValue();
-            for (DependencyRequest nextRequest : binding.implicitDependencies()) {
-              validation.traverseDependencyRequest(nextRequest, path);
-            }
-          }
+          path.currentResolvedBindings()
+              .allBindings()
+              .asMap()
+              .forEach(
+                  (component, bindings) -> {
+                    Validation validation = validationForComponent(component);
+                    for (Binding binding : bindings) {
+                      for (DependencyRequest nextRequest : binding.implicitDependencies()) {
+                        validation.traverseDependencyRequest(nextRequest, path);
+                      }
+                    }
+                  });
         }
       } finally {
         path.pop();
diff --git a/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java b/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java
index c5856ce8b..c09d5d955 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java
@@ -23,7 +23,6 @@
 import com.google.auto.value.AutoValue;
 import com.google.common.base.Optional;
 import com.google.common.collect.FluentIterable;
-import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.ImmutableSetMultimap;
@@ -32,7 +31,6 @@
 import dagger.internal.codegen.BindingType.HasBindingType;
 import dagger.internal.codegen.ContributionType.HasContributionType;
 import dagger.internal.codegen.Key.HasKey;
-import java.util.Map;
 
 /**
  * The collection of bindings that have been resolved for a binding key. For valid graphs, contains
@@ -127,17 +125,6 @@ Binding binding() {
     return getOnlyElement(bindings());
   }
 
-  /**
-   * All bindings for {@link #bindingKey()}, together with the component in which they were
-   * resolved.
-   */
-  ImmutableList<Map.Entry<ComponentDescriptor, ? extends Binding>> bindingsByComponent() {
-    return new ImmutableList.Builder<Map.Entry<ComponentDescriptor, ? extends Binding>>()
-        .addAll(allContributionBindings().entries())
-        .addAll(allMembersInjectionBindings().entrySet())
-        .build();
-  }
-
   /**
    * {@code true} if there are no {@link #bindings()}, {@link #multibindingDeclarations()}, or
    * {@link #subcomponentDeclarations()}.
