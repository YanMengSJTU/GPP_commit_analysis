diff --git a/core/src/main/java/dagger/internal/Keys.java b/core/src/main/java/dagger/internal/Keys.java
index 53a4d7af0..dc360202c 100644
--- a/core/src/main/java/dagger/internal/Keys.java
+++ b/core/src/main/java/dagger/internal/Keys.java
@@ -61,14 +61,14 @@ public static String get(Type type) {
     return get(type, null);
   }
 
-
   /** Returns a key for the members of {@code type}. */
   public static String getMembersKey(Class<?> key) {
-    return "members/" + get(key);
+    // for classes key.getName() is equivalent to get(key)
+    return "members/".concat(key.getName());
   }
 
   /** Returns a key for {@code type} annotated by {@code annotation}. */
-  public static String get(Type type, Annotation annotation) {
+  private static String get(Type type, Annotation annotation) {
     type = boxIfPrimitive(type);
     if (annotation == null && type instanceof Class && !((Class<?>) type).isArray()) {
       return ((Class<?>) type).getName();
@@ -233,11 +233,6 @@ private static boolean substringStartsWith(String string, int offset, String sub
     return string.regionMatches(offset, substring, 0, substring.length());
   }
 
-  /** Returns true if {@code key} is a binding that supports members injection. */
-  public static boolean isMembersInjection(String key) {
-    return key.startsWith("members/");
-  }
-
   /** Returns true if {@code key} has a qualifier annotation. */
   public static boolean isAnnotated(String key) {
     return key.startsWith("@");
