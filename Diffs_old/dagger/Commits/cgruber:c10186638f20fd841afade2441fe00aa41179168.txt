diff --git a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
index 25eeaebe4..ee00ed823 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
@@ -67,7 +67,6 @@
 import static com.google.common.base.Predicates.not;
 import static com.google.common.base.Verify.verify;
 import static com.google.common.collect.Iterables.isEmpty;
-import static dagger.internal.codegen.BindingKey.Kind.CONTRIBUTION;
 import static dagger.internal.codegen.BindingType.isOfType;
 import static dagger.internal.codegen.ComponentDescriptor.isComponentContributionMethod;
 import static dagger.internal.codegen.ComponentDescriptor.isComponentProductionMethod;
@@ -635,8 +634,7 @@ private boolean isResolvedInParent(DependencyRequest request, ContributionBindin
         if (binding.scope().isPresent() && binding.scope().get().equals(reusableScope(elements))) {
           for (Resolver requestResolver : getResolverLineage().reverse()) {
             // If a @Reusable binding was resolved in an ancestor, use that component.
-            if (requestResolver.resolvedBindings.containsKey(
-                BindingKey.create(CONTRIBUTION, binding.key()))) {
+            if (requestResolver.resolvedBindings.containsKey(binding.bindingKey())) {
               return Optional.of(requestResolver);
             }
           }
diff --git a/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java b/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java
index 431872b9a..0f4e64ed4 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindingGraphValidator.java
@@ -1046,8 +1046,7 @@ private void reportDuplicateBindings(DependencyPath path) {
         Iterable<ContributionBinding> duplicateBindings) {
       ImmutableSet.Builder<ComponentDescriptor> owningComponentsBuilder = ImmutableSet.builder();
       for (ContributionBinding binding : duplicateBindings) {
-        BindingKey bindingKey = BindingKey.create(BindingKey.Kind.CONTRIBUTION, binding.key());
-        ResolvedBindings resolvedBindings = subject.resolvedBindings().get(bindingKey);
+        ResolvedBindings resolvedBindings = subject.resolvedBindings().get(binding.bindingKey());
         owningComponentsBuilder.addAll(
             resolvedBindings.allContributionBindings().inverse().get(binding));
       }
diff --git a/compiler/src/main/java/dagger/internal/codegen/BindingKey.java b/compiler/src/main/java/dagger/internal/codegen/BindingKey.java
index 8fe7adbef..bbdadbbc9 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindingKey.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindingKey.java
@@ -31,8 +31,12 @@
     CONTRIBUTION, MEMBERS_INJECTION;
   }
 
-  static BindingKey create(Kind kind, Key key) {
-    return new AutoValue_BindingKey(kind, key);
+  static BindingKey contribution(Key key) {
+    return new AutoValue_BindingKey(Kind.CONTRIBUTION, key);
+  }
+
+  static BindingKey membersInjection(Key key) {
+    return new AutoValue_BindingKey(Kind.MEMBERS_INJECTION, key);
   }
 
   abstract Kind kind();
diff --git a/compiler/src/main/java/dagger/internal/codegen/ContributionBinding.java b/compiler/src/main/java/dagger/internal/codegen/ContributionBinding.java
index ced8a81c5..472c7115a 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ContributionBinding.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ContributionBinding.java
@@ -207,6 +207,10 @@ static Kind forMultibindingRequest(DependencyRequest request) {
    */
   protected abstract Kind bindingKind();
 
+  BindingKey bindingKey() {
+    return BindingKey.contribution(key());
+  }
+
   /**
    * The strategy for getting an instance of a factory for a {@link ContributionBinding}.
    */
diff --git a/compiler/src/main/java/dagger/internal/codegen/DependencyRequest.java b/compiler/src/main/java/dagger/internal/codegen/DependencyRequest.java
index 178d5e2cf..7cbf73acf 100644
--- a/compiler/src/main/java/dagger/internal/codegen/DependencyRequest.java
+++ b/compiler/src/main/java/dagger/internal/codegen/DependencyRequest.java
@@ -141,11 +141,11 @@ BindingKey bindingKey() {
       case PRODUCER:
       case PRODUCED:
       case FUTURE:
-        return BindingKey.create(BindingKey.Kind.CONTRIBUTION, key());
+        return BindingKey.contribution(key());
       case MEMBERS_INJECTOR:
-        return BindingKey.create(BindingKey.Kind.MEMBERS_INJECTION, key());
+        return BindingKey.membersInjection(key());
       default:
-        throw new AssertionError();
+        throw new AssertionError(this);
     }
   }
 
