diff --git a/compiler/src/main/java/dagger/internal/codegen/Util.java b/compiler/src/main/java/dagger/internal/codegen/Util.java
index 86d587e18..d4c62b0c1 100644
--- a/compiler/src/main/java/dagger/internal/codegen/Util.java
+++ b/compiler/src/main/java/dagger/internal/codegen/Util.java
@@ -37,6 +37,8 @@
 import javax.lang.model.type.PrimitiveType;
 import javax.lang.model.type.TypeMirror;
 import javax.lang.model.type.TypeVariable;
+import javax.lang.model.type.UnionType;
+import javax.lang.model.type.WildcardType;
 import javax.lang.model.util.SimpleAnnotationValueVisitor6;
 import javax.lang.model.util.SimpleTypeVisitor6;
 
@@ -150,6 +152,27 @@ public static void typeToString(final TypeMirror type, final StringBuilder resul
         result.append(errorType.toString());
         return null;
       }
+      public Void visitUnion(UnionType unionType, Void v) {
+        List<? extends TypeMirror> alternatives = unionType.getAlternatives();
+        for (int i = 0; i < alternatives.size(); i++) {
+          if (i != 0) {
+            result.append(" & ");
+          }
+          typeToString(alternatives.get(i), result, innerClassSeparator);
+        }
+        return null;
+      }
+      public Void visitWildcard(WildcardType wildcardType, Void v) {
+        result.append("?");
+        if (wildcardType.getExtendsBound() != null) {
+          result.append(" extends ");
+          typeToString(wildcardType.getExtendsBound(), result, innerClassSeparator);
+        } else if (wildcardType.getSuperBound() != null) {
+          result.append(" super ");
+          typeToString(wildcardType.getSuperBound(), result, innerClassSeparator);
+        }
+        return null;
+      }
       @Override protected Void defaultAction(TypeMirror typeMirror, Void v) {
         throw new UnsupportedOperationException(
             "Unexpected TypeKind " + typeMirror.getKind() + " for "  + typeMirror);
