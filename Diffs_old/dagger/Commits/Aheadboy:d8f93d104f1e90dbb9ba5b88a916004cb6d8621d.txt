diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
index 6fd695ce4..34d04c62d 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/ActivityModule.java
@@ -29,10 +29,7 @@
  * ever exist inside of that activity.
  */
 @Module(
-    injects = {
-        HomeActivity.class,
-        HomeFragment.class
-    },
+    injects = {HomeActivity.class, HomeFragment.class},
     addsTo = AndroidModule.class,
     library = true
 )
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
index 56e1ab440..006a892d1 100644
--- a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/DemoApplication.java
@@ -25,7 +25,6 @@
 
   @Override public void onCreate() {
     super.onCreate();
-
     applicationGraph = ObjectGraph.create(getModules().toArray());
   }
 
diff --git a/examples/simple/src/main/java/coffee/CoffeeApp.java b/examples/simple/src/main/java/coffee/CoffeeApp.java
index b6be33a31..51a9dfe14 100644
--- a/examples/simple/src/main/java/coffee/CoffeeApp.java
+++ b/examples/simple/src/main/java/coffee/CoffeeApp.java
@@ -2,16 +2,22 @@
 
 import javax.inject.Inject;
 
+import android.nfc.Tag;
+import android.widget.Toast;
 import dagger.ObjectGraph;
 
 public class CoffeeApp implements Runnable {
   @Inject CoffeeMaker coffeeMaker;
 
   @Override public void run() {
+
     coffeeMaker.brew();
   }
 
   public static void main(String[] args) {
+
+
+
     ObjectGraph objectGraph = ObjectGraph.create(new DripCoffeeModule());
     CoffeeApp coffeeApp = objectGraph.get(CoffeeApp.class);
     coffeeApp.run();
diff --git a/examples/simple/src/main/java/coffee/CoffeeMaker.java b/examples/simple/src/main/java/coffee/CoffeeMaker.java
index a4e818012..cb0ce5b84 100644
--- a/examples/simple/src/main/java/coffee/CoffeeMaker.java
+++ b/examples/simple/src/main/java/coffee/CoffeeMaker.java
@@ -13,4 +13,15 @@ public void brew() {
     System.out.println(" [_]P coffee! [_]P ");
     heater.get().off();
   }
+
+
+  //这个类有fields注入（heater，pump）
+  //所以这个无参数的公有构造函数的@Inject可以省略
+  //原话 A class may have a single
+  // *       {@code @Inject}-annotated constructor. Classes that have fields
+  // *       injected may omit the {@code @Inject} annotation if they have a public
+  // *       no-arguments constructor.
+  @Inject
+  public CoffeeMaker(){
+  }
 }
