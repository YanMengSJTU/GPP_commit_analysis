diff --git a/compiler/src/it/functional-tests/src/main/java/test/cycle/Cycles.java b/compiler/src/it/functional-tests/src/main/java/test/cycle/Cycles.java
index 8d67d92eb..25b28542d 100644
--- a/compiler/src/it/functional-tests/src/main/java/test/cycle/Cycles.java
+++ b/compiler/src/it/functional-tests/src/main/java/test/cycle/Cycles.java
@@ -139,7 +139,7 @@ static Y y(Y y) {
   }
 
   @SuppressWarnings("dependency-cycle")
-  @Component
+  @Component(modules = CycleModule.class)
   interface CycleComponent {
     A a();
 
@@ -148,6 +148,14 @@ static Y y(Y y) {
     ChildCycleComponent child();
   }
 
+  @Module
+  static class CycleModule {
+    @Provides
+    static Object provideObjectWithCycle(@SuppressWarnings("unused") Provider<Object> object) {
+      return "object";
+    }
+  }
+
   @SuppressWarnings("dependency-cycle")
   @Component
   interface SelfCycleComponent {
@@ -158,5 +166,8 @@ static Y y(Y y) {
   interface ChildCycleComponent {
     @SuppressWarnings("dependency-cycle")
     A a();
+
+    @SuppressWarnings("dependency-cycle")
+    Object object();
   }
 }
diff --git a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
index f7ed3ac77..26a410c62 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
@@ -603,7 +603,7 @@ void resolve(DependencyRequest request) {
       }
 
       private final class MultibindingDependencies {
-        private final Set<BindingKey> cycleChecker = new HashSet<>();
+        private final Set<Object> cycleChecker = new HashSet<>();
 
         /**
          * Returns {@code true} if {@code bindingKey} previously resolved to multibindings with
@@ -660,6 +660,9 @@ public Boolean call() {
          * multibindings with contributions from subcomponents.
          */
         boolean dependsOnLocalMultibindings(final Binding binding) {
+          if (!cycleChecker.add(binding)) {
+            return false;
+          }
           try {
             return bindingDependsOnLocalMultibindingsCache.get(
                 binding,
