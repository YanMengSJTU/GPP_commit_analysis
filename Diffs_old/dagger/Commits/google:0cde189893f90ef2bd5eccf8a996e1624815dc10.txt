diff --git a/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java b/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
index 92d185450..9f3df36dd 100644
--- a/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
+++ b/javatests/dagger/internal/codegen/AheadOfTimeSubcomponentsTest.java
@@ -415,27 +415,15 @@ public void generatedInstanceBinding() {
             "",
             "import dagger.Subcomponent;",
             "",
-            "@Subcomponent(modules = LeafModule.class)",
+            "@Subcomponent",
             "interface Leaf {",
-            "  Integer integer();",
+            // "  Leaf leaf();", // TODO(b/72748365): enable this (and fix the bug that's causing
+            // this to stack overflow
             "",
             "  @Subcomponent.Builder",
             "  interface Builder {",
-            "    Builder module(LeafModule module);",
-            "",
             "    Leaf build();",
             "  }",
-            "}"),
-        JavaFileObjects.forSourceLines(
-            "test.LeafModule",
-            "package test;",
-            "",
-            "import dagger.Module;",
-            "import dagger.Provides;",
-            "",
-            "@Module",
-            "class LeafModule {",
-            "  @Provides static Integer provideInteger() { return 0; }",
             "}"));
     JavaFileObject generatedLeaf =
         JavaFileObjects.forSourceLines(
@@ -448,18 +436,7 @@ public void generatedInstanceBinding() {
             "public abstract class DaggerLeaf implements Leaf {",
             "  protected DaggerLeaf(Builder builder) {}",
             "",
-            "  @Override",
-            "  public Integer integer() {",
-            "    return LeafModule_ProvideIntegerFactory.proxyProvideInteger();",
-            "  }",
-            "",
-            "  protected abstract static class Builder implements Leaf.Builder {",
-            "",
-            "    @Override",
-            "    public Builder module(LeafModule module) {",
-            "      return this;",
-            "    }",
-            "  }",
+            "  protected abstract static class Builder implements Leaf.Builder {}",
             "}");
     Compilation compilation = compile(filesToCompile.build());
     assertThat(compilation).succeededWithoutWarnings();
@@ -488,12 +465,7 @@ public void generatedInstanceBinding() {
             "public abstract class DaggerAncestor implements Ancestor {",
             "  protected DaggerAncestor() {}",
             "",
-            "  protected abstract class LeafBuilder extends DaggerLeaf.Builder {",
-            "    @Override",
-            "    public LeafBuilder module(LeafModule module) {",
-            "      return this;",
-            "    }",
-            "  }",
+            "  protected abstract class LeafBuilder extends DaggerLeaf.Builder {}",
             "",
             "  public abstract class LeafImpl extends DaggerLeaf {",
             "    protected LeafImpl(LeafBuilder builder) {",
