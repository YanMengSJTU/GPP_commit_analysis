diff --git a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/GrandchildModule.java b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/GrandchildModule.java
index b74ad8beb..e5595dce4 100644
--- a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/GrandchildModule.java
+++ b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/GrandchildModule.java
@@ -15,12 +15,13 @@
  */
 package test.subcomponent;
 
+import dagger.Binds;
 import dagger.Module;
 import dagger.Provides;
 import dagger.multibindings.IntoSet;
 
 @Module
-final class GrandchildModule {
+abstract class GrandchildModule {
   @Provides
   @IntoSet
   static Object provideUnscopedObject() {
@@ -31,10 +32,8 @@ static Object provideUnscopedObject() {
     };
   }
 
-  @Provides
-  static AnInterface provideAnInterface(ImplementsAnInterface implementsAnInterface) {
-    return implementsAnInterface;
-  }
+  @Binds
+  abstract AnInterface provideAnInterface(ImplementsAnInterface implementsAnInterface);
 
   @Provides
   static NeedsAnInterface provideNeedsAnInterface(AnInterface anInterface) {
diff --git a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentModule.java b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentModule.java
index 748db15b0..9f3fea077 100644
--- a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentModule.java
+++ b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentModule.java
@@ -15,13 +15,15 @@
  */
 package test.subcomponent;
 
+import dagger.Binds;
 import dagger.Module;
 import dagger.Provides;
 import dagger.multibindings.IntoSet;
+
 import javax.inject.Singleton;
 
 @Module
-final class ParentModule {
+abstract class ParentModule {
   @Provides
   @IntoSet
   static Object provideUnscopedObject() {
@@ -43,10 +45,8 @@ static Object provideSingletonObject() {
     };
   }
 
-  @Provides
+  @Binds
   @Singleton
   @BoundAsSingleton
-  static UnscopedType provideUnscopedTypeBoundAsSingleton(UnscopedType unscopedType) {
-    return unscopedType;
-  }
+  abstract UnscopedType provideUnscopedTypeBoundAsSingleton(UnscopedType unscopedType);
 }
diff --git a/compiler/src/it/tck/src/main/java/test/tck/CarModule.java b/compiler/src/it/tck/src/main/java/test/tck/CarModule.java
index 31a8006e1..4c5b9ae9c 100644
--- a/compiler/src/it/tck/src/main/java/test/tck/CarModule.java
+++ b/compiler/src/it/tck/src/main/java/test/tck/CarModule.java
@@ -15,15 +15,14 @@
  */
 package test.tck;
 
+import dagger.Binds;
 import dagger.Module;
-import dagger.Provides;
+
 import org.atinject.tck.auto.Car;
 import org.atinject.tck.auto.Convertible;
 
 @Module
-class CarModule {
-  @Provides
-  static Car provideConvertible(Convertible convertible) {
-    return convertible;
-  }
+abstract class CarModule {
+  @Binds
+  abstract Car provideConvertible(Convertible convertible);
 }
diff --git a/compiler/src/it/tck/src/main/java/test/tck/SeatModule.java b/compiler/src/it/tck/src/main/java/test/tck/SeatModule.java
index b02f218bb..b04b6c2a5 100644
--- a/compiler/src/it/tck/src/main/java/test/tck/SeatModule.java
+++ b/compiler/src/it/tck/src/main/java/test/tck/SeatModule.java
@@ -15,17 +15,16 @@
  */
 package test.tck;
 
+import dagger.Binds;
 import dagger.Module;
-import dagger.Provides;
+
 import org.atinject.tck.auto.Drivers;
 import org.atinject.tck.auto.DriversSeat;
 import org.atinject.tck.auto.Seat;
 
 @Module
-class SeatModule {
-  @Provides
+abstract class SeatModule {
+  @Binds
   @Drivers
-  static Seat provideSeat(DriversSeat seat) {
-    return seat;
-  }
+  abstract Seat provideSeat(DriversSeat seat);
 }
diff --git a/compiler/src/it/tck/src/main/java/test/tck/TireModule.java b/compiler/src/it/tck/src/main/java/test/tck/TireModule.java
index f41852025..35a997258 100644
--- a/compiler/src/it/tck/src/main/java/test/tck/TireModule.java
+++ b/compiler/src/it/tck/src/main/java/test/tck/TireModule.java
@@ -15,17 +15,17 @@
  */
 package test.tck;
 
+import dagger.Binds;
 import dagger.Module;
-import dagger.Provides;
+
 import org.atinject.tck.auto.Tire;
 import org.atinject.tck.auto.accessories.SpareTire;
+
 import javax.inject.Named;
 
 @Module
-class TireModule {
-  @Provides
+abstract class TireModule {
+  @Binds
   @Named("spare")
-  static Tire provideTire(SpareTire sparetire) {
-    return sparetire;
-  }
+  abstract Tire provideTire(SpareTire sparetire);
 }
diff --git a/examples/simple/src/main/java/coffee/PumpModule.java b/examples/simple/src/main/java/coffee/PumpModule.java
index 338ad33c2..df00b8624 100644
--- a/examples/simple/src/main/java/coffee/PumpModule.java
+++ b/examples/simple/src/main/java/coffee/PumpModule.java
@@ -1,11 +1,10 @@
 package coffee;
 
+import dagger.Binds;
 import dagger.Module;
-import dagger.Provides;
 
 @Module
-class PumpModule {
-  @Provides Pump providePump(Thermosiphon pump) {
-    return pump;
-  }
+abstract class PumpModule {
+  @Binds
+  abstract Pump providePump(Thermosiphon pump);
 }
