diff --git a/javatests/dagger/android/AndroidInjectionTest.java b/javatests/dagger/android/AndroidInjectionTest.java
index ec5be117b..a24ff5b6c 100644
--- a/javatests/dagger/android/AndroidInjectionTest.java
+++ b/javatests/dagger/android/AndroidInjectionTest.java
@@ -22,10 +22,10 @@
 import android.app.Activity;
 import android.app.Application;
 import android.app.Fragment;
-import org.robolectric.RobolectricTestRunner;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 import org.robolectric.util.FragmentTestUtil;
 
diff --git a/javatests/dagger/android/BUILD b/javatests/dagger/android/BUILD
index 7ff690ce2..8fa3dc303 100644
--- a/javatests/dagger/android/BUILD
+++ b/javatests/dagger/android/BUILD
@@ -24,6 +24,7 @@ GenRobolectricTests(
     name = "android_tests",
     srcs = glob(["*.java"]),
     javacopts = DOCLINT_HTML_AND_SYNTAX,
+    manifest_values = {"minSdkVersion": "17"},
     deps = [
         "//:dagger_with_compiler",
         "//java/dagger/android",
diff --git a/javatests/dagger/android/DispatchingAndroidInjectorTest.java b/javatests/dagger/android/DispatchingAndroidInjectorTest.java
index 338e7039c..544565a37 100644
--- a/javatests/dagger/android/DispatchingAndroidInjectorTest.java
+++ b/javatests/dagger/android/DispatchingAndroidInjectorTest.java
@@ -21,11 +21,11 @@
 
 import android.app.Activity;
 import com.google.common.collect.ImmutableMap;
-import org.robolectric.RobolectricTestRunner;
 import dagger.android.DispatchingAndroidInjector.InvalidInjectorBindingException;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
 @Config(manifest = Config.NONE)
diff --git a/javatests/dagger/android/functional/AndroidMemorySensitiveReferenceManagerTest.java b/javatests/dagger/android/functional/AndroidMemorySensitiveReferenceManagerTest.java
index 076de40fc..df0c890bf 100644
--- a/javatests/dagger/android/functional/AndroidMemorySensitiveReferenceManagerTest.java
+++ b/javatests/dagger/android/functional/AndroidMemorySensitiveReferenceManagerTest.java
@@ -25,11 +25,11 @@
 import com.google.common.collect.ImmutableList;
 import com.google.common.testing.GcFinalization;
 import com.google.common.testing.GcFinalization.FinalizationPredicate;
-import org.robolectric.RobolectricTestRunner;
 import java.lang.ref.WeakReference;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
 
 /** Functional tests of {@link dagger.android.AndroidMemorySensitiveReferenceManager}. */
 @RunWith(RobolectricTestRunner.class)
diff --git a/javatests/dagger/android/support/AndroidSupportInjectionTest.java b/javatests/dagger/android/support/AndroidSupportInjectionTest.java
index 243bc38de..51e9992b7 100644
--- a/javatests/dagger/android/support/AndroidSupportInjectionTest.java
+++ b/javatests/dagger/android/support/AndroidSupportInjectionTest.java
@@ -21,10 +21,10 @@
 
 import android.app.Application;
 import android.support.v4.app.Fragment;
-import org.robolectric.RobolectricTestRunner;
 import dagger.android.AndroidInjector;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.support.v4.SupportFragmentTestUtil;
 
diff --git a/javatests/dagger/android/support/functional/BUILD b/javatests/dagger/android/support/functional/BUILD
index 85c658ca0..8f899178f 100644
--- a/javatests/dagger/android/support/functional/BUILD
+++ b/javatests/dagger/android/support/functional/BUILD
@@ -23,6 +23,7 @@ android_library(
         ["*.java"],
         exclude = ["*Test.java"],
     ),
+    exports_manifest = 1,
     manifest = "AndroidManifest.xml",
     resource_files = glob(["res/**"]),
     deps = [
diff --git a/javatests/dagger/android/support/functional/InjectorsTest.java b/javatests/dagger/android/support/functional/InjectorsTest.java
index 277b156c1..e66d70261 100644
--- a/javatests/dagger/android/support/functional/InjectorsTest.java
+++ b/javatests/dagger/android/support/functional/InjectorsTest.java
@@ -20,21 +20,17 @@
 
 import android.content.Intent;
 import android.content.res.Configuration;
-import org.robolectric.RobolectricTestRunner;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
 @RunWith(RobolectricTestRunner.class)
 public class InjectorsTest {
-  private static final String MANIFEST =
-      "//javatests/dagger/android/support/functional"
-          + ":functional/AndroidManifest.xml";
-
   private ActivityController<TestActivity> activityController;
   private TestActivity activity;
   private TestParentFragment parentFragment;
@@ -69,10 +65,7 @@ public void setUp() {
   }
 
   @Test
-  @Config(
-    manifest = MANIFEST,
-    application = ComponentStructureFollowsControllerStructureApplication.class
-  )
+  @Config(application = ComponentStructureFollowsControllerStructureApplication.class)
   public void componentStructureFollowsControllerStructure() {
     assertThat(activity.componentHierarchy)
         .containsExactly(
@@ -138,7 +131,7 @@ public void componentStructureFollowsControllerStructure() {
   }
 
   @Test
-  @Config(manifest = MANIFEST, application = AllControllersAreDirectChildrenOfApplication.class)
+  @Config(application = AllControllersAreDirectChildrenOfApplication.class)
   public void allControllersAreDirectChildrenOfApplication() {
     assertThat(activity.componentHierarchy)
         .containsExactly(
@@ -196,7 +189,7 @@ public void allControllersAreDirectChildrenOfApplication() {
   }
 
   @Test
-  @Config(manifest = MANIFEST, application = UsesGeneratedModulesApplication.class)
+  @Config(application = UsesGeneratedModulesApplication.class)
   public void usesGeneratedModules() {
     assertThat(activity.componentHierarchy)
         .containsExactly(
diff --git a/test_defs.bzl b/test_defs.bzl
index 1b8f1d137..db13354e4 100644
--- a/test_defs.bzl
+++ b/test_defs.bzl
@@ -59,9 +59,13 @@ def GenRobolectricTests(
         plugins = None,
         javacopts = None,
         lib_javacopts = None,
-        test_javacopts = None):
-    # TODO(ronshapiro): enable these when Bazel supports robolectric tests
-  pass
+        test_javacopts = None,
+        manifest_values = None):
+    # TODO(ronshapiro): enable these with these instructions:
+    # https://docs.bazel.build/versions/master/be/android.html#android_local_test_examples
+    # We probably want to import all of Robolectric's dependencies into bazel-common because there
+    # are some differences (i.e. we both provide Guava).
+    pass
 
 def _GenTests(
         library_rule_type,
@@ -74,7 +78,8 @@ def _GenTests(
         javacopts = None,
         lib_javacopts = None,
         test_javacopts = None,
-        functional = True):
+        functional = True,
+        test_kwargs = {}):
     _gen_tests(
         library_rule_type,
         test_rule_type,
@@ -86,6 +91,7 @@ def _GenTests(
         javacopts,
         lib_javacopts,
         test_javacopts,
+        test_kwargs = test_kwargs,
     )
 
     if functional:
@@ -103,6 +109,7 @@ def _GenTests(
                 lib_javacopts,
                 test_javacopts,
                 variant_name,
+                test_kwargs = test_kwargs,
             )
 
 def _gen_tests(
@@ -116,7 +123,8 @@ def _gen_tests(
         javacopts,
         lib_javacopts,
         test_javacopts,
-        variant_name = None):
+        variant_name = None,
+        test_kwargs = {}):
     if variant_name:
         suffix = "_" + variant_name
         tags = [variant_name]
@@ -170,4 +178,5 @@ def _gen_tests(
             tags = tags,
             test_class = test_class,
             deps = test_deps,
+            **test_kwargs
         )
