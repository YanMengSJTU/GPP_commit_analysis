diff --git a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/MultibindingSubcomponents.java b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/MultibindingSubcomponents.java
index 1df73db75..a9f0a1e0f 100644
--- a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/MultibindingSubcomponents.java
+++ b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/MultibindingSubcomponents.java
@@ -160,7 +160,9 @@ static BoundInChild onlyInChildEntry() {
     Set<RequiresMultibindings<BoundInParentAndChild>> setOfRequiresMultibindingsInParentAndChild();
   }
 
-  interface ParentWithProvision extends ProvidesBoundInParent, ProvidesBoundInParentAndChild {}
+  interface ParentWithProvision
+      extends ProvidesBoundInParent, ProvidesBoundInParentAndChild,
+          ProvidesSetOfRequiresMultibindings {}
 
   interface HasChildWithProvision {
     ChildWithProvision childWithProvision();
diff --git a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
index 2d9d28e07..5b06e828a 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
@@ -617,6 +617,14 @@ void resolve(DependencyRequest request) {
         if (getPreviouslyResolvedBindings(bindingKey).isPresent()
             && !new MultibindingDependencies().dependsOnLocalMultibindings(bindingKey)
             && getExplicitBindings(bindingKey.key()).isEmpty()) {
+          /* Resolve in the parent in case there are multibinding contributions or conflicts in some
+           * component between this one and the previously-resolved one. */
+          parentResolver.get().resolve(request);
+          /* Cache the inherited parent component's bindings in case resolving at the parent found
+           * bindings in some component between this one and the previously-resolved one. */
+          ResolvedBindings inheritedBindings =
+              getPreviouslyResolvedBindings(bindingKey).get().asInheritedIn(componentDescriptor);
+          resolvedBindings.put(bindingKey, inheritedBindings);
           return;
         }
 
