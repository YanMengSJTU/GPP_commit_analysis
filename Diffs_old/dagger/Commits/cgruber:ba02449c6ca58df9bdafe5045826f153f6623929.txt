diff --git a/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java b/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java
index b1b530b09..146ddbce5 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ComponentGenerator.java
@@ -31,7 +31,7 @@
  * @author Gregory Kick
  * @since 2.0
  */
-final class ComponentGenerator extends JavaPoetSourceFileGenerator<BindingGraph> {
+final class ComponentGenerator extends SourceFileGenerator<BindingGraph> {
   private final Types types;
   private final Elements elements;
   private final Key.Factory keyFactory;
diff --git a/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java b/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java
index ce97a2ce3..2bbcb2414 100644
--- a/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/FactoryGenerator.java
@@ -73,7 +73,7 @@
  * @author Gregory Kick
  * @since 2.0
  */
-final class FactoryGenerator extends JavaPoetSourceFileGenerator<ProvisionBinding> {
+final class FactoryGenerator extends SourceFileGenerator<ProvisionBinding> {
 
   private final CompilerOptions compilerOptions;
 
diff --git a/compiler/src/main/java/dagger/internal/codegen/InjectBindingRegistry.java b/compiler/src/main/java/dagger/internal/codegen/InjectBindingRegistry.java
index 3342df9b5..212b08dba 100644
--- a/compiler/src/main/java/dagger/internal/codegen/InjectBindingRegistry.java
+++ b/compiler/src/main/java/dagger/internal/codegen/InjectBindingRegistry.java
@@ -78,8 +78,7 @@
       this.bindingType = bindingType;
     }
 
-    void generateBindings(JavaPoetSourceFileGenerator<B> generator)
-        throws SourceFileGenerationException {
+    void generateBindings(SourceFileGenerator<B> generator) throws SourceFileGenerationException {
       for (B binding = bindingsRequiringGeneration.poll();
           binding != null;
           binding = bindingsRequiringGeneration.poll()) {
diff --git a/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java b/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java
index d76099bfb..ac15287b8 100644
--- a/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java
@@ -55,7 +55,7 @@
  *
  * @since 2.0
  */
-final class MapKeyGenerator extends JavaPoetSourceFileGenerator<MapKeyCreatorSpecification> {
+final class MapKeyGenerator extends SourceFileGenerator<MapKeyCreatorSpecification> {
 
   /**
    * Specification of the {@link MapKey} annotation and the annotation type to generate.
diff --git a/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java b/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java
index 293dc7466..1a0379c1f 100644
--- a/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/MembersInjectorGenerator.java
@@ -73,7 +73,7 @@
  * @author Gregory Kick
  * @since 2.0
  */
-final class MembersInjectorGenerator extends JavaPoetSourceFileGenerator<MembersInjectionBinding> {
+final class MembersInjectorGenerator extends SourceFileGenerator<MembersInjectionBinding> {
 
   MembersInjectorGenerator(Filer filer, Elements elements) {
     super(filer, elements);
diff --git a/compiler/src/main/java/dagger/internal/codegen/MonitoringModuleGenerator.java b/compiler/src/main/java/dagger/internal/codegen/MonitoringModuleGenerator.java
index c72c616cd..76a3f6b9d 100644
--- a/compiler/src/main/java/dagger/internal/codegen/MonitoringModuleGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/MonitoringModuleGenerator.java
@@ -41,7 +41,7 @@
 import static javax.lang.model.element.Modifier.STATIC;
 
 /** Generates a monitoring module for use with production components. */
-final class MonitoringModuleGenerator extends JavaPoetSourceFileGenerator<TypeElement> {
+final class MonitoringModuleGenerator extends SourceFileGenerator<TypeElement> {
 
   MonitoringModuleGenerator(Filer filer, Elements elements) {
     super(filer, elements);
diff --git a/compiler/src/main/java/dagger/internal/codegen/ProducerFactoryGenerator.java b/compiler/src/main/java/dagger/internal/codegen/ProducerFactoryGenerator.java
index d1e5d3a8d..6c15b50fb 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ProducerFactoryGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ProducerFactoryGenerator.java
@@ -69,7 +69,7 @@
  * @author Jesse Beder
  * @since 2.0
  */
-final class ProducerFactoryGenerator extends JavaPoetSourceFileGenerator<ProductionBinding> {
+final class ProducerFactoryGenerator extends SourceFileGenerator<ProductionBinding> {
   private final CompilerOptions compilerOptions;
 
   ProducerFactoryGenerator(Filer filer, Elements elements, CompilerOptions compilerOptions) {
diff --git a/compiler/src/main/java/dagger/internal/codegen/ProductionExecutorModuleGenerator.java b/compiler/src/main/java/dagger/internal/codegen/ProductionExecutorModuleGenerator.java
index 1b8e5ab6d..d6a90a70d 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ProductionExecutorModuleGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ProductionExecutorModuleGenerator.java
@@ -40,7 +40,7 @@
 
 /** Generates a producer executor module for use with production components. */
 // TODO(beder): Replace this with a single class when the producers client library exists.
-final class ProductionExecutorModuleGenerator extends JavaPoetSourceFileGenerator<TypeElement> {
+final class ProductionExecutorModuleGenerator extends SourceFileGenerator<TypeElement> {
 
   ProductionExecutorModuleGenerator(Filer filer, Elements elements) {
     super(filer, elements);
diff --git a/compiler/src/main/java/dagger/internal/codegen/JavaPoetSourceFileGenerator.java b/compiler/src/main/java/dagger/internal/codegen/SourceFileGenerator.java
similarity index 97%
rename from compiler/src/main/java/dagger/internal/codegen/JavaPoetSourceFileGenerator.java
rename to compiler/src/main/java/dagger/internal/codegen/SourceFileGenerator.java
index 48bbb2816..928a794ba 100644
--- a/compiler/src/main/java/dagger/internal/codegen/JavaPoetSourceFileGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/SourceFileGenerator.java
@@ -43,7 +43,7 @@
  *
  * @param <T> The input type from which source is to be generated.
  */
-abstract class JavaPoetSourceFileGenerator<T> {
+abstract class SourceFileGenerator<T> {
   private static final String GENERATED_COMMENTS = "https://google.github.io/dagger";
 
   private static final AnnotationSpec GENERATED =
@@ -55,7 +55,7 @@
   private final Filer filer;
   private final boolean generatedAnnotationAvailable;
 
-  JavaPoetSourceFileGenerator(Filer filer, Elements elements) {
+  SourceFileGenerator(Filer filer, Elements elements) {
     this.filer = checkNotNull(filer);
     generatedAnnotationAvailable = elements.getTypeElement("javax.annotation.Generated") != null;
   }
