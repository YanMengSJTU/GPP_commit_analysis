diff --git a/producers/src/main/java/dagger/producers/Produced.java b/producers/src/main/java/dagger/producers/Produced.java
index db5c133ff..ffc42316d 100644
--- a/producers/src/main/java/dagger/producers/Produced.java
+++ b/producers/src/main/java/dagger/producers/Produced.java
@@ -18,6 +18,7 @@
 import com.google.common.base.Objects;
 import dagger.internal.Beta;
 import java.util.concurrent.ExecutionException;
+import javax.annotation.CheckReturnValue;
 import javax.annotation.Nullable;
 
 import static com.google.common.base.Preconditions.checkNotNull;
@@ -43,6 +44,7 @@
  * @author Jesse Beder
  */
 @Beta
+@CheckReturnValue
 public abstract class Produced<T> {
   /**
    * Returns the result of a production.
diff --git a/producers/src/test/java/dagger/producers/internal/ProducersTest.java b/producers/src/test/java/dagger/producers/internal/ProducersTest.java
index e2707b342..c654b64c6 100644
--- a/producers/src/test/java/dagger/producers/internal/ProducersTest.java
+++ b/producers/src/test/java/dagger/producers/internal/ProducersTest.java
@@ -70,7 +70,7 @@
 
   private <T> ExecutionException getProducedException(Produced<T> produced) {
     try {
-      produced.get();
+      T unused = produced.get();
       throw new IllegalArgumentException("produced did not throw");
     } catch (ExecutionException e) {
       return e;
