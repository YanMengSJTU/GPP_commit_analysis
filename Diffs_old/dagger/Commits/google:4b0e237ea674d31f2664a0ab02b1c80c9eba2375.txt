diff --git a/compiler/src/main/java/dagger/internal/codegen/ComponentTreeTraverser.java b/compiler/src/main/java/dagger/internal/codegen/ComponentTreeTraverser.java
index d19f454df..93dd1e538 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ComponentTreeTraverser.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ComponentTreeTraverser.java
@@ -282,9 +282,11 @@ protected void visitMembersInjectionBindings(ResolvedBindings resolvedBindings)
         throw new AssertionError(
             "members injection binding keys should never have contribution bindings");
       }
-      visitMembersInjectionBinding(
-          resolvedBindings.membersInjectionBinding().get(),
-          getOnlyElement(resolvedBindings.allMembersInjectionBindings().keySet()));
+      if (resolvedBindings.membersInjectionBinding().isPresent()) {
+        visitMembersInjectionBinding(
+            resolvedBindings.membersInjectionBinding().get(),
+            getOnlyElement(resolvedBindings.allMembersInjectionBindings().keySet()));
+      }
     }
 
     /**
diff --git a/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java b/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java
index c09d5d955..c0c51c70c 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ResolvedBindings.java
@@ -178,8 +178,8 @@ ComponentDescriptor owningComponent(ContributionBinding binding) {
   }
 
   /**
-   * The members-injection binding, regardless of owning component. Empty if these are contribution
-   * bindings.
+   * The members-injection binding, regardless of owning component. Absent if these are contribution
+   * bindings, or if there is no members-injection binding because the type fails validation.
    */
   Optional<MembersInjectionBinding> membersInjectionBinding() {
     ImmutableSet<MembersInjectionBinding> membersInjectionBindings =
diff --git a/compiler/src/test/java/dagger/internal/codegen/GraphValidationTest.java b/compiler/src/test/java/dagger/internal/codegen/GraphValidationTest.java
index aded1831d..34f77ea46 100644
--- a/compiler/src/test/java/dagger/internal/codegen/GraphValidationTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/GraphValidationTest.java
@@ -207,6 +207,38 @@ public void membersInjectDependsOnUnboundedType() {
         .onLine(7);
   }
 
+  @Test
+  public void invalidMembersInjection() {
+    JavaFileObject injected =
+        JavaFileObjects.forSourceLines(
+            "test.Injected",
+            "package test;",
+            "",
+            "import javax.inject.Inject;",
+            "",
+            "final class Injected {",
+            "  @Inject static Object object;",
+            "}");
+    JavaFileObject component =
+        JavaFileObjects.forSourceLines(
+            "test.TestComponent",
+            "package test;",
+            "",
+            "import dagger.Component;",
+            "",
+            "@Component",
+            "interface TestComponent {",
+            "  void inject(Injected injected);",
+            "}");
+    assertAbout(javaSources())
+        .that(ImmutableList.of(injected, component))
+        .processedWith(new ComponentProcessor())
+        .failsToCompile()
+        .withErrorContaining("static fields")
+        .in(injected)
+        .onLine(6);
+  }
+
   @Test public void cyclicDependency() {
     JavaFileObject component = JavaFileObjects.forSourceLines("test.Outer",
         "package test;",
