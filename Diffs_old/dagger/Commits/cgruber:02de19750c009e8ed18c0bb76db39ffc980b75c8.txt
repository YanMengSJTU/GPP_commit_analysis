diff --git a/WORKSPACE b/WORKSPACE
index bf7669619..14b797099 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -73,8 +73,8 @@ maven_jar(
 
 maven_jar(
     name = "com_google_auto_auto_common",
-    artifact = "com.google.auto:auto-common:0.8",
-    sha1 = "c6f7af0e57b9d69d81b05434ef9f3c5610d498c4",
+    artifact = "com.google.auto:auto-common:0.9",
+    sha1 = "766dd79e7e81cfefec890ffd6d63aa2807538def",
 )
 
 maven_jar(
diff --git a/java/dagger/android/BUILD b/java/dagger/android/BUILD
index 3ba59a99b..2aeeab800 100644
--- a/java/dagger/android/BUILD
+++ b/java/dagger/android/BUILD
@@ -38,7 +38,6 @@ android_library(
         "//:dagger_with_compiler",
         "//third_party:auto_value",
         "//third_party:error_prone_annotations",
-        "//third_party:jsr305_annotations",
         "@androidsdk//com.android.support:support-annotations-25.0.0",
     ],
 )
diff --git a/java/dagger/android/support/BUILD b/java/dagger/android/support/BUILD
index 2e26cc59f..3dcbd8a9b 100644
--- a/java/dagger/android/support/BUILD
+++ b/java/dagger/android/support/BUILD
@@ -33,7 +33,6 @@ android_library(
         "//:dagger_with_compiler",
         "//java/dagger/android",
         "//third_party:error_prone_annotations",
-        "//third_party:jsr305_annotations",
         "@androidsdk//com.android.support:appcompat-v7-25.0.0",
         "@androidsdk//com.android.support:support-annotations-25.0.0",
         "@androidsdk//com.android.support:support-fragment-25.0.0",
diff --git a/java/dagger/grpc/server/BUILD b/java/dagger/grpc/server/BUILD
index f3e2d023e..e0357103d 100644
--- a/java/dagger/grpc/server/BUILD
+++ b/java/dagger/grpc/server/BUILD
@@ -37,7 +37,6 @@ java_library(
         "//third_party:grpc_netty",
         "//third_party:grpc_protobuf",
         "//third_party:guava",
-        "//third_party:jsr305_annotations",
         "//third_party:jsr330_inject",
         "//third_party:protobuf",
     ],
diff --git a/java/dagger/internal/codegen/BUILD b/java/dagger/internal/codegen/BUILD
index 7b0c0011d..245226156 100644
--- a/java/dagger/internal/codegen/BUILD
+++ b/java/dagger/internal/codegen/BUILD
@@ -46,7 +46,6 @@ CODEGEN_SHARED_DEPS = [
     "//third_party:javapoet",
     "@local_jdk//:lib/tools.jar",
     "//third_party:jsr250_annotations",
-    "//third_party:jsr305_annotations",
     "//third_party:jsr330_inject",
     "//java/dagger:core",
     "//java/dagger/producers",
diff --git a/java/dagger/internal/codegen/ForwardingNetwork.java b/java/dagger/internal/codegen/ForwardingNetwork.java
index 741789443..bfafc1072 100644
--- a/java/dagger/internal/codegen/ForwardingNetwork.java
+++ b/java/dagger/internal/codegen/ForwardingNetwork.java
@@ -25,7 +25,6 @@
 import com.google.common.graph.Network;
 import java.util.Optional;
 import java.util.Set;
-import javax.annotation.Nullable;
 
 /** A {@link Network} that delegates all methods to another instance. */
 // TODO(dpb): Move to com.google.common.graph.
@@ -148,7 +147,7 @@ public int outDegree(N node) {
   }
 
   @SuppressWarnings("MissingOverride") // Until Guava 23.0
-  @Nullable
+  // @Nullable // TODO(ronshapiro): replace with the checker framework?
   public E edgeConnectingOrNull(N nodeU, N nodeV) {
     return delegate().edgeConnectingOrNull(nodeU, nodeV);
   }
diff --git a/java/dagger/internal/codegen/SourceFileGenerator.java b/java/dagger/internal/codegen/SourceFileGenerator.java
index 0c1b01ccc..ecc39df36 100644
--- a/java/dagger/internal/codegen/SourceFileGenerator.java
+++ b/java/dagger/internal/codegen/SourceFileGenerator.java
@@ -16,6 +16,7 @@
 
 package dagger.internal.codegen;
 
+import static com.google.auto.common.GeneratedAnnotations.generatedAnnotation;
 import static com.google.common.base.Preconditions.checkNotNull;
 
 import com.google.common.base.Throwables;
@@ -24,7 +25,6 @@
 import com.squareup.javapoet.JavaFile;
 import com.squareup.javapoet.TypeSpec;
 import java.util.Optional;
-import javax.annotation.Generated;
 import javax.annotation.processing.Filer;
 import javax.annotation.processing.Messager;
 import javax.lang.model.element.Element;
@@ -40,18 +40,12 @@
 abstract class SourceFileGenerator<T> {
   private static final String GENERATED_COMMENTS = "https://google.github.io/dagger";
 
-  private static final AnnotationSpec GENERATED =
-      AnnotationSpec.builder(Generated.class)
-          .addMember("value", "$S", "dagger.internal.codegen.ComponentProcessor")
-          .addMember("comments", "$S", GENERATED_COMMENTS)
-          .build();
-
   private final Filer filer;
-  private final boolean generatedAnnotationAvailable;
+  private final Elements elements;
 
   SourceFileGenerator(Filer filer, Elements elements) {
     this.filer = checkNotNull(filer);
-    generatedAnnotationAvailable = elements.getTypeElement("javax.annotation.Generated") != null;
+    this.elements = checkNotNull(elements);
   }
 
   /**
@@ -86,13 +80,19 @@ void generate(T input) throws SourceFileGenerationException {
 
   private JavaFile buildJavaFile(
       ClassName generatedTypeName, TypeSpec.Builder typeSpecBuilder) {
-    if (generatedAnnotationAvailable) {
-      typeSpecBuilder.addAnnotation(GENERATED);
-    }
+    Optional<AnnotationSpec> generatedAnnotation =
+        generatedAnnotation(elements)
+            .map(
+                annotation ->
+                    AnnotationSpec.builder(ClassName.get(annotation))
+                        .addMember("value", "$S", "dagger.internal.codegen.ComponentProcessor")
+                        .addMember("comments", "$S", GENERATED_COMMENTS)
+                        .build());
+    generatedAnnotation.ifPresent(typeSpecBuilder::addAnnotation);
     JavaFile.Builder javaFileBuilder =
         JavaFile.builder(generatedTypeName.packageName(), typeSpecBuilder.build())
             .skipJavaLangImports(true);
-    if (!generatedAnnotationAvailable) {
+    if (!generatedAnnotation.isPresent()) {
       javaFileBuilder.addFileComment("Generated by Dagger ($L).", GENERATED_COMMENTS);
     }
     return javaFileBuilder.build();
diff --git a/javatests/dagger/internal/codegen/ComponentBuilderTest.java b/javatests/dagger/internal/codegen/ComponentBuilderTest.java
index d3d347dcc..e5bc11202 100644
--- a/javatests/dagger/internal/codegen/ComponentBuilderTest.java
+++ b/javatests/dagger/internal/codegen/ComponentBuilderTest.java
@@ -19,6 +19,7 @@
 import static com.google.testing.compile.CompilationSubject.assertThat;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
@@ -217,7 +218,7 @@ public void testIgnoresModulesNotInApi() {
             "package test;",
             "",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerTestComponent implements TestComponent {",
@@ -406,7 +407,7 @@ public void testBuilderBindsInstanceNoCreateGenerated() {
             "package test;",
             "",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerSimpleComponent implements SimpleComponent {",
diff --git a/javatests/dagger/internal/codegen/ComponentProcessorTest.java b/javatests/dagger/internal/codegen/ComponentProcessorTest.java
index 6a6920043..06d6d5941 100644
--- a/javatests/dagger/internal/codegen/ComponentProcessorTest.java
+++ b/javatests/dagger/internal/codegen/ComponentProcessorTest.java
@@ -22,6 +22,7 @@
 import static dagger.internal.codegen.CompilerMode.DEFAULT_MODE;
 import static dagger.internal.codegen.CompilerMode.EXPERIMENTAL_ANDROID_MODE;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.auto.common.MoreElements;
 import com.google.common.base.Joiner;
@@ -284,7 +285,7 @@ public void componentWithInvalidModule() {
                 "",
                 "import dagger.Lazy;",
                 "import dagger.internal.DoubleCheck;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "",
                 GENERATED_ANNOTATION,
@@ -548,7 +549,7 @@ public void componentWithInvalidModule() {
                 "package test;",
                 "",
                 "import dagger.internal.Preconditions;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "",
                 GENERATED_ANNOTATION,
                 "public final class DaggerTestComponent implements TestComponent {",
@@ -751,7 +752,7 @@ public void componentWithAbstractModule() {
         "package test;",
         "",
         "import dagger.internal.Preconditions;",
-        "import javax.annotation.Generated;",
+        IMPORT_GENERATED_ANNOTATION,
         "",
         GENERATED_ANNOTATION,
         "public final class DaggerTestComponent implements TestComponent {",
@@ -935,7 +936,7 @@ public void subcomponentNotGeneratedIfNotUsedInGraph() {
             "package test;",
             "",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerParent implements Parent {",
@@ -1466,7 +1467,7 @@ public void testDefaultPackage() {
             "package test;",
             "",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerBComponent implements BComponent {",
@@ -1554,7 +1555,7 @@ public void testDefaultPackage() {
             .addLines(
                 "package test;",
                 "",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "",
                 GENERATED_ANNOTATION,
                 "public final class DaggerTestComponent implements TestComponent {",
@@ -1635,7 +1636,7 @@ public void testDefaultPackage() {
             "test.DaggerSimpleComponent",
             "package test;",
             "",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerSimpleComponent implements SimpleComponent {",
@@ -2103,7 +2104,7 @@ public void unusedSubcomponents_dontResolveExtraBindingsInParentComponents() {
             "package test;",
             "",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerParent implements Parent {",
diff --git a/javatests/dagger/internal/codegen/DelegateBindingExpressionTest.java b/javatests/dagger/internal/codegen/DelegateBindingExpressionTest.java
index 43bdb0321..1372ccaed 100644
--- a/javatests/dagger/internal/codegen/DelegateBindingExpressionTest.java
+++ b/javatests/dagger/internal/codegen/DelegateBindingExpressionTest.java
@@ -21,6 +21,7 @@
 import static dagger.internal.codegen.CompilerMode.EXPERIMENTAL_ANDROID_MODE;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.CompilationSubject;
@@ -553,7 +554,7 @@ public void castNeeded_rawTypes_Provider_get() {
                 "package test;",
                 "",
                 "import dagger.internal.DoubleCheck;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "import other.Subtype_Factory;",
                 "import other.Supertype;",
diff --git a/javatests/dagger/internal/codegen/ElidedFactoriesTest.java b/javatests/dagger/internal/codegen/ElidedFactoriesTest.java
index 69a502c03..8f3b3d791 100644
--- a/javatests/dagger/internal/codegen/ElidedFactoriesTest.java
+++ b/javatests/dagger/internal/codegen/ElidedFactoriesTest.java
@@ -19,6 +19,7 @@
 import static com.google.testing.compile.CompilationSubject.assertThat;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
@@ -81,7 +82,7 @@ public void simpleComponent() {
             "test.DaggerSimpleComponent",
             "package test;",
             "",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerSimpleComponent implements SimpleComponent {",
@@ -180,7 +181,7 @@ public void simpleComponent_injectsProviderOf_dependsOnScoped() {
                 "package test;",
                 "",
                 "import dagger.internal.MemoizedSentinel;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "",
                 GENERATED_ANNOTATION,
@@ -244,7 +245,7 @@ public void simpleComponent_injectsProviderOf_dependsOnScoped() {
                 "package test;",
                 "",
                 "import dagger.internal.DoubleCheck;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "",
                 GENERATED_ANNOTATION,
@@ -355,7 +356,7 @@ public void scopedBinding_onlyUsedInSubcomponent() {
                 "package test;",
                 "",
                 "import dagger.internal.MemoizedSentinel;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "",
                 GENERATED_ANNOTATION,
                 "public final class DaggerSimpleComponent implements SimpleComponent {",
@@ -414,7 +415,7 @@ public void scopedBinding_onlyUsedInSubcomponent() {
                 "package test;",
                 "",
                 "import dagger.internal.DoubleCheck;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "",
                 GENERATED_ANNOTATION,
diff --git a/javatests/dagger/internal/codegen/GeneratedLines.java b/javatests/dagger/internal/codegen/GeneratedLines.java
index e4eb159a8..1b56c3a87 100644
--- a/javatests/dagger/internal/codegen/GeneratedLines.java
+++ b/javatests/dagger/internal/codegen/GeneratedLines.java
@@ -25,9 +25,23 @@
  */
 public final class GeneratedLines {
   public static final String GENERATED_ANNOTATION =
-      "@Generated("
-          + "value = \"dagger.internal.codegen.ComponentProcessor\", "
-          + "comments = \"https://google.github.io/dagger\")";
+     "@Generated("
+        + "value = \"dagger.internal.codegen.ComponentProcessor\", "
+        + "comments = \"https://google.github.io/dagger\")";
+
+  public static final String IMPORT_GENERATED_ANNOTATION =
+      isBeforeJava9()
+          ? "import javax.annotation.Generated;"
+          : "import javax.annotation.processing.Generated;";
+
+  private static boolean isBeforeJava9() {
+    try {
+      Class.forName("java.lang.Module");
+      return false;
+    } catch (ClassNotFoundException e) {
+      return true;
+    }
+  }
 
   public static final CodeBlock NPE_FROM_PROVIDES_METHOD =
       stringLiteral(ErrorMessages.CANNOT_RETURN_NULL_FROM_NON_NULLABLE_PROVIDES_METHOD);
diff --git a/javatests/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java b/javatests/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java
index 25b2f9863..9960854dc 100644
--- a/javatests/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java
+++ b/javatests/dagger/internal/codegen/InjectConstructorFactoryGeneratorTest.java
@@ -36,6 +36,7 @@
 import static dagger.internal.codegen.ErrorMessages.STATIC_INJECT_FIELD;
 import static dagger.internal.codegen.ErrorMessages.STATIC_INJECT_METHOD;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.common.collect.ImmutableList;
 import com.google.testing.compile.JavaFileObjects;
@@ -138,7 +139,7 @@
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -187,7 +188,7 @@
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -239,7 +240,7 @@
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class GenericClass_Factory<T> implements Factory<GenericClass<T>> {",
@@ -281,7 +282,7 @@
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -333,7 +334,7 @@
             "",
             "import dagger.internal.Factory;",
             "import java.util.List;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -402,7 +403,7 @@
             "import dagger.Lazy;",
             "import dagger.internal.DoubleCheck;",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -972,7 +973,7 @@
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1019,7 +1020,7 @@
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1071,7 +1072,7 @@ public void neitherTypeNorSupertypeRequiresMemberInjection() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class B_Factory implements Factory<B> {",
@@ -1113,7 +1114,7 @@ public void wildcardDependency() {
             "",
             "import dagger.internal.Factory;",
             "import java.util.List;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1165,7 +1166,7 @@ public void basicNameCollision() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1221,7 +1222,7 @@ public void nestedNameCollision() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "import other.pkg.Outer;",
             "",
@@ -1280,7 +1281,7 @@ public void samePackageNameCollision() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1336,7 +1337,7 @@ public void noDeps() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class SimpleType_Factory implements Factory<SimpleType> {",
@@ -1386,7 +1387,7 @@ public void noDeps() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class OuterType_A_Factory implements Factory<OuterType.A> {",
diff --git a/javatests/dagger/internal/codegen/MapBindingComponentProcessorTest.java b/javatests/dagger/internal/codegen/MapBindingComponentProcessorTest.java
index e973c0c44..1f722327b 100644
--- a/javatests/dagger/internal/codegen/MapBindingComponentProcessorTest.java
+++ b/javatests/dagger/internal/codegen/MapBindingComponentProcessorTest.java
@@ -330,6 +330,13 @@ public void mapBindingsWithInaccessibleKeys() {
                 "test.DaggerTestComponent",
                 "package test;",
                 "",
+                "import mapkeys.MapKeys;",
+                "import mapkeys.MapModule_ClassKeyFactory;",
+                "import mapkeys.MapModule_ComplexKeyWithInaccessibleAnnotationValueFactory;",
+                "import mapkeys.MapModule_ComplexKeyWithInaccessibleArrayValueFactory;",
+                "import mapkeys.MapModule_ComplexKeyWithInaccessibleValueFactory;",
+                "import mapkeys.MapModule_EnumKeyFactory;",
+                "",
                 GENERATED_ANNOTATION,
                 "public final class DaggerTestComponent implements TestComponent {",
                 "  private Provider<Map<Class<?>, Integer>> mapOfClassOfAndIntegerProvider;",
diff --git a/javatests/dagger/internal/codegen/MapBindingExpressionTest.java b/javatests/dagger/internal/codegen/MapBindingExpressionTest.java
index a8e609b74..8bf02a9c2 100644
--- a/javatests/dagger/internal/codegen/MapBindingExpressionTest.java
+++ b/javatests/dagger/internal/codegen/MapBindingExpressionTest.java
@@ -194,6 +194,9 @@ public void inaccessible() {
             "test.DaggerTestComponent",
             "package test;",
             "",
+            "import other.UsesInaccessible;",
+            "import other.UsesInaccessible_Factory;",
+            "",
             GENERATED_ANNOTATION,
             "public final class DaggerTestComponent implements TestComponent {",
             "  @Override",
diff --git a/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java b/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java
index e3a2ca38d..3537bcda7 100644
--- a/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java
+++ b/javatests/dagger/internal/codegen/MapBindingExpressionWithGuavaTest.java
@@ -256,6 +256,9 @@ public void inaccessible() {
             "test.DaggerTestComponent",
             "package test;",
             "",
+            "import other.UsesInaccessible;",
+            "import other.UsesInaccessible_Factory;",
+            "",
             GENERATED_ANNOTATION,
             "public final class DaggerTestComponent implements TestComponent {",
             "  @Override",
diff --git a/javatests/dagger/internal/codegen/MapKeyProcessorTest.java b/javatests/dagger/internal/codegen/MapKeyProcessorTest.java
index a529d4ac0..9d0c50b36 100644
--- a/javatests/dagger/internal/codegen/MapKeyProcessorTest.java
+++ b/javatests/dagger/internal/codegen/MapKeyProcessorTest.java
@@ -24,6 +24,7 @@
 import static dagger.internal.codegen.CompilerMode.EXPERIMENTAL_ANDROID_MODE;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.auto.value.processor.AutoAnnotationProcessor;
 import com.google.common.collect.ImmutableList;
@@ -76,7 +77,7 @@ public void mapKeyCreatorFile() {
             "package test;",
             "",
             "import com.google.auto.value.AutoAnnotation;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class PathKeyCreator {",
@@ -125,7 +126,7 @@ public void nestedMapKeyCreatorFile() {
             "package test;",
             "",
             "import com.google.auto.value.AutoAnnotation;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class Container_PathKeyCreator {",
diff --git a/javatests/dagger/internal/codegen/MembersInjectionTest.java b/javatests/dagger/internal/codegen/MembersInjectionTest.java
index 5f5c8b2dc..f6286ac82 100644
--- a/javatests/dagger/internal/codegen/MembersInjectionTest.java
+++ b/javatests/dagger/internal/codegen/MembersInjectionTest.java
@@ -26,6 +26,7 @@
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.ErrorMessages.INJECT_INTO_PRIVATE_CLASS;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 import static javax.tools.StandardLocation.CLASS_OUTPUT;
 
 import com.google.common.base.Joiner;
@@ -190,7 +191,7 @@ public void parentClass_injectedMembersInSupertype() {
         "package test;",
         "",
         "import dagger.MembersInjector;",
-        "import javax.annotation.Generated;",
+        IMPORT_GENERATED_ANNOTATION,
         "import javax.inject.Provider;",
         "",
         GENERATED_ANNOTATION,
@@ -277,7 +278,7 @@ public void parentClass_injectedMembersInSupertype() {
         "package test;",
         "",
         "import dagger.MembersInjector;",
-        "import javax.annotation.Generated;",
+        IMPORT_GENERATED_ANNOTATION,
         "import javax.inject.Provider;",
         "",
         GENERATED_ANNOTATION,
@@ -346,7 +347,7 @@ public void parentClass_injectedMembersInSupertype() {
             "import dagger.Lazy;",
             "import dagger.MembersInjector;",
             "import dagger.internal.DoubleCheck;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -414,7 +415,7 @@ public void parentClass_injectedMembersInSupertype() {
             "import dagger.Lazy;",
             "import dagger.MembersInjector;",
             "import dagger.internal.DoubleCheck;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -489,7 +490,7 @@ public void mixedMemberInjection() {
         "package test;",
         "",
         "import dagger.MembersInjector;",
-        "import javax.annotation.Generated;",
+        IMPORT_GENERATED_ANNOTATION,
         "import javax.inject.Provider;",
         "",
         GENERATED_ANNOTATION,
@@ -562,7 +563,7 @@ public void mixedMemberInjection() {
         "package test;",
         "",
         "import dagger.MembersInjector;",
-        "import javax.annotation.Generated;",
+        IMPORT_GENERATED_ANNOTATION,
         "import javax.inject.Provider;",
         "",
         GENERATED_ANNOTATION,
@@ -623,7 +624,7 @@ public void mixedMemberInjection() {
         "package test;",
         "",
         "import dagger.MembersInjector;",
-        "import javax.annotation.Generated;",
+        IMPORT_GENERATED_ANNOTATION,
         "import javax.inject.Provider;",
         "",
         GENERATED_ANNOTATION,
@@ -682,7 +683,7 @@ public void simpleComponentWithNesting() {
           "package test;",
           "",
           "import dagger.MembersInjector;",
-          "import javax.annotation.Generated;",
+          IMPORT_GENERATED_ANNOTATION,
           "import javax.inject.Provider;",
           "",
           GENERATED_ANNOTATION,
@@ -745,7 +746,7 @@ public void componentWithNestingAndGeneratedType() {
             "package test;",
             "",
             "import dagger.MembersInjector;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -921,7 +922,7 @@ public void fieldInjectionForShadowedMember() {
             "package test;",
             "",
             "import dagger.MembersInjector;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1080,7 +1081,7 @@ public void injectsPrimitive() {
             "package test;",
             "",
             "import dagger.MembersInjector;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1118,7 +1119,7 @@ public void injectsPrimitive() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1219,7 +1220,7 @@ public void accessibility() {
                 "package other;",
                 "",
                 "import dagger.MembersInjector;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "",
                 GENERATED_ANNOTATION,
@@ -1255,7 +1256,7 @@ public void accessibility() {
             "package test;",
             "",
             "import com.google.errorprone.annotations.CanIgnoreReturnValue;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import other.Foo_Factory;",
             "import other.Inaccessible_Factory;",
             "import other.Inaccessible_MembersInjector;",
diff --git a/javatests/dagger/internal/codegen/ModuleFactoryGeneratorTest.java b/javatests/dagger/internal/codegen/ModuleFactoryGeneratorTest.java
index 6c05b2d6e..a4eabf95a 100644
--- a/javatests/dagger/internal/codegen/ModuleFactoryGeneratorTest.java
+++ b/javatests/dagger/internal/codegen/ModuleFactoryGeneratorTest.java
@@ -36,6 +36,7 @@
 import static dagger.internal.codegen.ErrorMessages.BINDING_METHOD_WITH_SAME_NAME;
 import static dagger.internal.codegen.ErrorMessages.MODULES_WITH_TYPE_PARAMS_MUST_BE_ABSTRACT;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.common.collect.ImmutableList;
 import com.google.testing.compile.CompileTester;
@@ -254,7 +255,7 @@ public void providesMethodReturnsProduced() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class TestModule_ProvideStringFactory implements Factory<String> {",
@@ -301,7 +302,7 @@ public void providesMethodReturnsProduced() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class TestModule_ProvideStringFactory implements Factory<String> {",
@@ -347,7 +348,7 @@ public void providesMethodReturnsProduced() {
             "package test;",
             "",
             "import dagger.internal.Factory;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class TestModule_ProvideStringFactory implements Factory<String> {",
@@ -435,7 +436,7 @@ public void providesMethodReturnsProduced() {
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
             "import java.util.List;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -507,7 +508,7 @@ public void providesMethodReturnsProduced() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class TestModule_ProvideStringFactory implements Factory<String> {",
@@ -560,7 +561,7 @@ public void providesMethodReturnsProduced() {
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
             "import java.util.List;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class TestModule_ProvideWildcardListFactory implements "
@@ -614,7 +615,7 @@ public void providesMethodReturnsProduced() {
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
             "import java.util.Set;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class TestModule_ProvideStringsFactory implements Factory<Set<String>> {",
@@ -902,7 +903,7 @@ public void genericSubclassedModule() {
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
             "import java.util.List;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -941,7 +942,7 @@ public void genericSubclassedModule() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -981,7 +982,7 @@ public void genericSubclassedModule() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -1021,7 +1022,7 @@ public void genericSubclassedModule() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class ChildNumberModule_ProvideNumberFactory",
@@ -1052,7 +1053,7 @@ public void genericSubclassedModule() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class ChildIntegerModule_ProvideIntegerFactory",
@@ -1125,7 +1126,7 @@ public void genericSubclassedModule() {
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
             "import java.util.Map;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class ParameterizedModule_ProvideMapStringNumberFactory",
@@ -1156,7 +1157,7 @@ public void genericSubclassedModule() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class ParameterizedModule_ProvideNonGenericTypeFactory",
@@ -1187,7 +1188,7 @@ public void genericSubclassedModule() {
             "",
             "import dagger.internal.Factory;",
             "import dagger.internal.Preconditions;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
diff --git a/javatests/dagger/internal/codegen/ProducerModuleFactoryGeneratorTest.java b/javatests/dagger/internal/codegen/ProducerModuleFactoryGeneratorTest.java
index f527c3634..4b3effbcf 100644
--- a/javatests/dagger/internal/codegen/ProducerModuleFactoryGeneratorTest.java
+++ b/javatests/dagger/internal/codegen/ProducerModuleFactoryGeneratorTest.java
@@ -36,6 +36,7 @@
 import static dagger.internal.codegen.ErrorMessages.PRODUCES_METHOD_SCOPE;
 import static dagger.internal.codegen.ErrorMessages.PRODUCES_METHOD_SET_VALUES_RETURN_SET;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.common.collect.ImmutableList;
 import com.google.common.util.concurrent.ListenableFuture;
@@ -362,7 +363,7 @@ public void publicModuleNonPublicIncludes() {
             "import dagger.producers.monitoring.ProducerToken;",
             "import dagger.producers.monitoring.ProductionComponentMonitor;",
             "import java.util.concurrent.Executor;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
@@ -444,7 +445,7 @@ public void singleProducesMethodNoArgsFutureWithProducerName() {
             "import dagger.producers.monitoring.ProducerToken;",
             "import dagger.producers.monitoring.ProductionComponentMonitor;",
             "import java.util.concurrent.Executor;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "import javax.inject.Provider;",
             "",
             GENERATED_ANNOTATION,
diff --git a/javatests/dagger/internal/codegen/ProductionComponentProcessorTest.java b/javatests/dagger/internal/codegen/ProductionComponentProcessorTest.java
index be773d28d..c1231b937 100644
--- a/javatests/dagger/internal/codegen/ProductionComponentProcessorTest.java
+++ b/javatests/dagger/internal/codegen/ProductionComponentProcessorTest.java
@@ -20,6 +20,7 @@
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
 import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.common.collect.ImmutableList;
 import com.google.testing.compile.JavaFileObjects;
@@ -234,7 +235,7 @@ public void simpleComponent() {
                 "import dagger.producers.internal.Producers;",
                 "import dagger.producers.monitoring.ProductionComponentMonitor;",
                 "import java.util.concurrent.Executor;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "",
                 GENERATED_ANNOTATION,
@@ -401,7 +402,7 @@ public void simpleComponent() {
                 "import dagger.producers.internal.Producers;",
                 "import dagger.producers.monitoring.ProductionComponentMonitor;",
                 "import java.util.concurrent.Executor;",
-                "import javax.annotation.Generated;",
+                IMPORT_GENERATED_ANNOTATION,
                 "import javax.inject.Provider;",
                 "",
                 GENERATED_ANNOTATION,
diff --git a/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentTest.java b/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentTest.java
index 3e3f5f70c..0a5de8dd6 100644
--- a/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentTest.java
+++ b/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentTest.java
@@ -20,6 +20,7 @@
 import static dagger.internal.codegen.Compilers.CLASS_PATH_WITHOUT_GUAVA_OPTION;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.Compiler;
@@ -267,7 +268,7 @@ public void subcomponentOmitsInheritedBindings() {
             "import dagger.internal.Preconditions;",
             "import java.util.Collections;",
             "import java.util.Set;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerParent implements Parent {",
diff --git a/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java b/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java
index 052ff5f46..f94859984 100644
--- a/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java
+++ b/javatests/dagger/internal/codegen/SetBindingRequestFulfillmentWithGuavaTest.java
@@ -19,6 +19,7 @@
 import static com.google.testing.compile.CompilationSubject.assertThat;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
@@ -334,7 +335,7 @@ public void productionComponents() {
             "import com.google.common.util.concurrent.ListenableFuture;",
             "import dagger.internal.Preconditions;",
             "import java.util.Set;",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerTestComponent implements TestComponent {",
diff --git a/javatests/dagger/internal/codegen/SubcomponentBuilderRequestFulfillmentTest.java b/javatests/dagger/internal/codegen/SubcomponentBuilderRequestFulfillmentTest.java
index 6705212b8..d391622b8 100644
--- a/javatests/dagger/internal/codegen/SubcomponentBuilderRequestFulfillmentTest.java
+++ b/javatests/dagger/internal/codegen/SubcomponentBuilderRequestFulfillmentTest.java
@@ -19,6 +19,7 @@
 import static com.google.testing.compile.CompilationSubject.assertThat;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.testing.compile.Compilation;
 import com.google.testing.compile.JavaFileObjects;
@@ -86,7 +87,7 @@ public void testInlinedSubcomponentBuilders_componentMethod() {
             "test.DaggerC",
             "package test;",
             "",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerC implements C {",
diff --git a/javatests/dagger/internal/codegen/SubcomponentValidationTest.java b/javatests/dagger/internal/codegen/SubcomponentValidationTest.java
index da2c04cd8..8524944b8 100644
--- a/javatests/dagger/internal/codegen/SubcomponentValidationTest.java
+++ b/javatests/dagger/internal/codegen/SubcomponentValidationTest.java
@@ -24,6 +24,7 @@
 import static dagger.internal.codegen.CompilerMode.EXPERIMENTAL_ANDROID_MODE;
 import static dagger.internal.codegen.Compilers.daggerCompiler;
 import static dagger.internal.codegen.GeneratedLines.GENERATED_ANNOTATION;
+import static dagger.internal.codegen.GeneratedLines.IMPORT_GENERATED_ANNOTATION;
 
 import com.google.common.collect.ImmutableList;
 import com.google.testing.compile.Compilation;
@@ -933,7 +934,7 @@ public void subcomponentBuilderNamesShouldNotConflict() {
             "test.DaggerC",
             "package test;",
             "",
-            "import javax.annotation.Generated;",
+            IMPORT_GENERATED_ANNOTATION,
             "",
             GENERATED_ANNOTATION,
             "public final class DaggerC implements C {",
