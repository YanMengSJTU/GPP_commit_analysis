diff --git a/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java b/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java
index e831ef296..476469a59 100644
--- a/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/MapKeyGenerator.java
@@ -39,11 +39,13 @@
 import javax.lang.model.util.SimpleTypeVisitor6;
 
 import static com.squareup.javapoet.MethodSpec.methodBuilder;
+import static com.squareup.javapoet.MethodSpec.constructorBuilder;
 import static com.squareup.javapoet.TypeSpec.classBuilder;
 import static dagger.internal.codegen.CodeBlocks.makeParametersCodeBlock;
 import static dagger.internal.codegen.MapKeys.getMapKeyCreatorClassName;
 import static javax.lang.model.element.Modifier.FINAL;
 import static javax.lang.model.element.Modifier.PUBLIC;
+import static javax.lang.model.element.Modifier.PRIVATE;
 import static javax.lang.model.element.Modifier.STATIC;
 import static javax.lang.model.util.ElementFilter.methodsIn;
 
@@ -110,6 +112,8 @@ ClassName nameGeneratedType(MapKeyCreatorSpecification mapKeyCreatorType) {
     TypeSpec.Builder mapKeyCreatorBuilder =
         classBuilder(generatedTypeName.simpleName()).addModifiers(PUBLIC, FINAL);
 
+    mapKeyCreatorBuilder.addMethod(constructorBuilder().addModifiers(PRIVATE).build());
+
     for (TypeElement annotationElement :
         nestedAnnotationElements(mapKeyCreatorType.annotationElement())) {
       mapKeyCreatorBuilder.addMethod(buildCreateMethod(generatedTypeName, annotationElement));
diff --git a/compiler/src/test/java/dagger/internal/codegen/MapKeyProcessorTest.java b/compiler/src/test/java/dagger/internal/codegen/MapKeyProcessorTest.java
index b70f0479c..83de1564b 100644
--- a/compiler/src/test/java/dagger/internal/codegen/MapKeyProcessorTest.java
+++ b/compiler/src/test/java/dagger/internal/codegen/MapKeyProcessorTest.java
@@ -60,6 +60,8 @@ public void mapKeyCreatorFile() {
             "",
             GENERATED_ANNOTATION,
             "public final class PathKeyCreator {",
+            "  private PathKeyCreator() {}",
+            "",
             "  @AutoAnnotation",
             "  public static PathKey createPathKey(PathEnum value, String relativePath) {",
             "    return new AutoAnnotation_PathKeyCreator_createPathKey(value, relativePath);",
@@ -106,6 +108,8 @@ public void nestedMapKeyCreatorFile() {
             "",
             GENERATED_ANNOTATION,
             "public final class Container$PathKeyCreator {",
+            "  private Container$PathKeyCreator() {}",
+            "",
             "  @AutoAnnotation",
             "  public static Container.PathKey createPathKey("
                 + "PathEnum value, String relativePath) {",
