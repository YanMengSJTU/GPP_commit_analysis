diff --git a/compiler/pom.xml b/compiler/pom.xml
index 68ac8360d..c232a7d60 100644
--- a/compiler/pom.xml
+++ b/compiler/pom.xml
@@ -40,6 +40,10 @@
       <groupId>com.google.auto</groupId>
       <artifactId>auto-common</artifactId>
     </dependency>
+    <dependency>
+      <groupId>com.google.auto.service</groupId>
+      <artifactId>auto-service</artifactId>
+    </dependency>
     <dependency>
       <groupId>com.squareup</groupId>
       <artifactId>javawriter</artifactId>
diff --git a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisProcessor.java b/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisProcessor.java
index 1c9af42fe..c42fa09f9 100644
--- a/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisProcessor.java
+++ b/compiler/src/main/java/dagger/internal/codegen/GraphAnalysisProcessor.java
@@ -15,6 +15,7 @@
  */
 package dagger.internal.codegen;
 
+import com.google.auto.service.AutoService;
 import dagger.Module;
 import dagger.Provides;
 import dagger.internal.Binding;
@@ -40,6 +41,7 @@
 import java.util.Map;
 import java.util.Set;
 import javax.annotation.processing.AbstractProcessor;
+import javax.annotation.processing.Processor;
 import javax.annotation.processing.RoundEnvironment;
 import javax.annotation.processing.SupportedAnnotationTypes;
 import javax.inject.Singleton;
@@ -67,6 +69,7 @@
 /**
  * Performs full graph analysis on a module.
  */
+@AutoService(Processor.class)
 @SupportedAnnotationTypes("dagger.Module")
 public final class GraphAnalysisProcessor extends AbstractProcessor {
   private static final Set<String> ERROR_NAMES_TO_PROPAGATE = new LinkedHashSet<String>(asList(
diff --git a/compiler/src/main/java/dagger/internal/codegen/InjectAdapterProcessor.java b/compiler/src/main/java/dagger/internal/codegen/InjectAdapterProcessor.java
index 8fbfefc79..cf01552cc 100644
--- a/compiler/src/main/java/dagger/internal/codegen/InjectAdapterProcessor.java
+++ b/compiler/src/main/java/dagger/internal/codegen/InjectAdapterProcessor.java
@@ -16,6 +16,7 @@
  */
 package dagger.internal.codegen;
 
+import com.google.auto.service.AutoService;
 import com.squareup.javawriter.JavaWriter;
 import dagger.MembersInjector;
 import dagger.internal.Binding;
@@ -31,6 +32,7 @@
 import java.util.List;
 import java.util.Set;
 import javax.annotation.processing.AbstractProcessor;
+import javax.annotation.processing.Processor;
 import javax.annotation.processing.RoundEnvironment;
 import javax.annotation.processing.SupportedAnnotationTypes;
 import javax.inject.Inject;
@@ -68,6 +70,7 @@
  * Generates an implementation of {@link Binding} that injects the
  * {@literal @}{@code Inject}-annotated members of a class.
  */
+@AutoService(Processor.class)
 @SupportedAnnotationTypes("javax.inject.Inject")
 public final class InjectAdapterProcessor extends AbstractProcessor {
   private final Set<String> remainingTypeNames = new LinkedHashSet<String>();
diff --git a/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java b/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
index 870fb87d6..593f8db81 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ModuleAdapterProcessor.java
@@ -15,6 +15,7 @@
  */
 package dagger.internal.codegen;
 
+import com.google.auto.service.AutoService;
 import com.squareup.javawriter.JavaWriter;
 import dagger.Lazy;
 import dagger.Module;
@@ -41,6 +42,7 @@
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicInteger;
 import javax.annotation.processing.AbstractProcessor;
+import javax.annotation.processing.Processor;
 import javax.annotation.processing.RoundEnvironment;
 import javax.annotation.processing.SupportedAnnotationTypes;
 import javax.inject.Provider;
@@ -81,6 +83,7 @@
  * Generates an implementation of {@link ModuleAdapter} that includes a binding
  * for each {@code @Provides} method of a target class.
  */
+@AutoService(Processor.class)
 @SupportedAnnotationTypes({ "*" })
 public final class ModuleAdapterProcessor extends AbstractProcessor {
   private static final String BINDINGS_MAP = JavaWriter.type(BindingsGroup.class);
diff --git a/compiler/src/main/java/dagger/internal/codegen/ValidationProcessor.java b/compiler/src/main/java/dagger/internal/codegen/ValidationProcessor.java
index 578bdb3b9..904761cd1 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ValidationProcessor.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ValidationProcessor.java
@@ -16,6 +16,7 @@
  */
 package dagger.internal.codegen;
 
+import com.google.auto.service.AutoService;
 import dagger.Module;
 import dagger.Provides;
 import dagger.internal.codegen.Util.CodeGenerationIncompleteException;
@@ -26,6 +27,7 @@
 import java.util.Map;
 import java.util.Set;
 import javax.annotation.processing.AbstractProcessor;
+import javax.annotation.processing.Processor;
 import javax.annotation.processing.RoundEnvironment;
 import javax.annotation.processing.SupportedAnnotationTypes;
 import javax.inject.Inject;
@@ -53,6 +55,7 @@
  *  <p> Warnings for invalid use of scoping annotations can be suppressed
  *  with @SuppressWarnings("scoping")
  */
+@AutoService(Processor.class)
 @SupportedAnnotationTypes({ "*" })
 public final class ValidationProcessor extends AbstractProcessor {
 
diff --git a/compiler/src/main/resources/META-INF/services/javax.annotation.processing.Processor b/compiler/src/main/resources/META-INF/services/javax.annotation.processing.Processor
deleted file mode 100644
index 97f5f1471..000000000
--- a/compiler/src/main/resources/META-INF/services/javax.annotation.processing.Processor
+++ /dev/null
@@ -1,4 +0,0 @@
-dagger.internal.codegen.ValidationProcessor
-dagger.internal.codegen.InjectAdapterProcessor
-dagger.internal.codegen.ModuleAdapterProcessor
-dagger.internal.codegen.GraphAnalysisProcessor
diff --git a/pom.xml b/pom.xml
index fd75656f3..db824124e 100644
--- a/pom.xml
+++ b/pom.xml
@@ -45,6 +45,7 @@
     <javax.inject.version>1</javax.inject.version>
     <javawriter.version>2.5.0</javawriter.version>
     <auto.common.version>0.1</auto.common.version>
+    <auto.service.version>1.0-rc1</auto.service.version>
     <guava.version>17.0</guava.version>
 
     <!-- Test Dependencies -->
@@ -106,6 +107,11 @@
         <artifactId>auto-common</artifactId>
         <version>${auto.common.version}</version>
       </dependency>
+      <dependency>
+        <groupId>com.google.auto.service</groupId>
+        <artifactId>auto-service</artifactId>
+        <version>${auto.service.version}</version>
+      </dependency>
       <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
