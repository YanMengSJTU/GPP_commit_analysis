diff --git a/compiler/src/main/java/dagger/internal/codegen/DelegateRegistry.java b/compiler/src/main/java/dagger/internal/codegen/DelegateRegistry.java
new file mode 100644
index 000000000..8c1ef3e9a
--- /dev/null
+++ b/compiler/src/main/java/dagger/internal/codegen/DelegateRegistry.java
@@ -0,0 +1,39 @@
+package dagger.internal.codegen;
+
+import com.google.auto.common.MoreTypes;
+import com.squareup.javapoet.ClassName;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Created by Andy on 07.05.2017.
+ */
+public class DelegateRegistry {
+
+    UniqueNameSet uniqueNameSet = new UniqueNameSet();
+    private Map<Key, String> fieldMap = new HashMap<>();
+    private Map<Key, ClassName> typeMap = new HashMap<>();
+
+    String getDelegateFieldName(Key key) {
+        if (fieldMap.containsKey(key)) {
+            return fieldMap.get(key);
+        }
+        final String s = MoreTypes.asTypeElement(key.type()).getSimpleName().toString();
+        final String uniqueName = uniqueNameSet.getUniqueName(s + "Delegate");
+        fieldMap.put(key, uniqueName);
+        return uniqueName;
+    }
+
+    ClassName getDelegateTypeName(Key key) {
+        if (typeMap.containsKey(key)) {
+            return typeMap.get(key);
+        }
+        final String s = key.type().toString();
+        final String uniqueName = uniqueNameSet.getUniqueName(s + "Delegate");
+        final ClassName className = ClassName.bestGuess(uniqueName);
+        typeMap.put(key, className);
+        return className;
+    }
+
+}
diff --git a/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/SomeClass.java b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/SomeClass.java
new file mode 100644
index 000000000..d812b0a64
--- /dev/null
+++ b/examples/android-activity-graphs/src/main/java/com/example/dagger/activitygraphs/SomeClass.java
@@ -0,0 +1,17 @@
+package com.example.dagger.activitygraphs;
+
+import javax.inject.Inject;
+import javax.inject.Named;
+import java.util.Set;
+
+/**
+ * Created by Andy on 07.05.2017.
+ */
+public class SomeClass {
+
+    @Inject
+    public SomeClass() {
+
+    }
+
+}
