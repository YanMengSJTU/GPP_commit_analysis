diff --git a/java/dagger/example/android/simple/MainActivity.java b/java/dagger/example/android/simple/MainActivity.java
index 8a51ae07f..f2aab2dfa 100644
--- a/java/dagger/example/android/simple/MainActivity.java
+++ b/java/dagger/example/android/simple/MainActivity.java
@@ -16,14 +16,13 @@
 
 package dagger.example.android.simple;
 
-import android.app.Activity;
 import android.os.Bundle;
 import android.util.Log;
 import android.widget.TextView;
 import dagger.Binds;
-import dagger.android.ActivityKey;
 import dagger.android.AndroidInjector;
 import dagger.android.support.DaggerAppCompatActivity;
+import dagger.multibindings.ClassKey;
 import dagger.multibindings.IntoMap;
 import javax.inject.Inject;
 
@@ -44,8 +43,8 @@
 
     @Binds
     @IntoMap
-    @ActivityKey(MainActivity.class)
-    abstract AndroidInjector.Factory<? extends Activity> bind(Component.Builder builder);
+    @ClassKey(MainActivity.class)
+    abstract AndroidInjector.Factory<?> bind(Component.Builder builder);
   }
 
   private static final String TAG = MainActivity.class.getSimpleName();
diff --git a/javatests/dagger/android/support/functional/AllControllersAreDirectChildrenOfApplication.java b/javatests/dagger/android/support/functional/AllControllersAreDirectChildrenOfApplication.java
index 1382af1ed..f21e5d24f 100644
--- a/javatests/dagger/android/support/functional/AllControllersAreDirectChildrenOfApplication.java
+++ b/javatests/dagger/android/support/functional/AllControllersAreDirectChildrenOfApplication.java
@@ -16,29 +16,20 @@
 
 package dagger.android.support.functional;
 
-import android.app.Activity;
-import android.app.Service;
-import android.content.BroadcastReceiver;
-import android.content.ContentProvider;
-import android.support.v4.app.Fragment;
 import dagger.Binds;
 import dagger.Component;
 import dagger.Module;
 import dagger.Provides;
 import dagger.Subcomponent;
-import dagger.android.ActivityKey;
 import dagger.android.AndroidInjector;
-import dagger.android.BroadcastReceiverKey;
-import dagger.android.ContentProviderKey;
-import dagger.android.ServiceKey;
 import dagger.android.support.AndroidSupportInjectionModule;
 import dagger.android.support.DaggerApplication;
-import dagger.android.support.FragmentKey;
 import dagger.android.support.functional.AllControllersAreDirectChildrenOfApplication.ApplicationComponent.BroadcastReceiverSubcomponent.BroadcastReceiverModule;
 import dagger.android.support.functional.AllControllersAreDirectChildrenOfApplication.ApplicationComponent.ContentProviderSubcomponent.ContentProviderModule;
 import dagger.android.support.functional.AllControllersAreDirectChildrenOfApplication.ApplicationComponent.InnerActivitySubcomponent.InnerActivityModule;
 import dagger.android.support.functional.AllControllersAreDirectChildrenOfApplication.ApplicationComponent.IntentServiceSubcomponent.IntentServiceModule;
 import dagger.android.support.functional.AllControllersAreDirectChildrenOfApplication.ApplicationComponent.ServiceSubcomponent.ServiceModule;
+import dagger.multibindings.ClassKey;
 import dagger.multibindings.IntoMap;
 import dagger.multibindings.IntoSet;
 
@@ -76,56 +67,56 @@
 
       @Binds
       @IntoMap
-      @ActivityKey(TestActivity.class)
-      abstract AndroidInjector.Factory<? extends Activity> bindFactoryForTestActivity(
+      @ClassKey(TestActivity.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForTestActivity(
           ActivitySubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ActivityKey(OuterClass.TestInnerClassActivity.class)
-      abstract AndroidInjector.Factory<? extends Activity> bindFactoryForInnerActivity(
+      @ClassKey(OuterClass.TestInnerClassActivity.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForInnerActivity(
           InnerActivitySubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @FragmentKey(TestParentFragment.class)
-      abstract AndroidInjector.Factory<? extends Fragment> bindFactoryForParentFragment(
+      @ClassKey(TestParentFragment.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForParentFragment(
           ParentFragmentSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @FragmentKey(TestChildFragment.class)
-      abstract AndroidInjector.Factory<? extends Fragment> bindFactoryForChildFragment(
+      @ClassKey(TestChildFragment.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForChildFragment(
           ChildFragmentSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @FragmentKey(TestDialogFragment.class)
-      abstract AndroidInjector.Factory<? extends Fragment> bindFactoryForDialogFragment(
+      @ClassKey(TestDialogFragment.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForDialogFragment(
           DialogFragmentSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ServiceKey(TestService.class)
-      abstract AndroidInjector.Factory<? extends Service> bindFactoryForService(
+      @ClassKey(TestService.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForService(
           ServiceSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ServiceKey(TestIntentService.class)
-      abstract AndroidInjector.Factory<? extends Service> bindFactoryForIntentService(
+      @ClassKey(TestIntentService.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForIntentService(
           IntentServiceSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @BroadcastReceiverKey(TestBroadcastReceiver.class)
-      abstract AndroidInjector.Factory<? extends BroadcastReceiver> bindFactoryForBroadcastReceiver(
+      @ClassKey(TestBroadcastReceiver.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForBroadcastReceiver(
           BroadcastReceiverSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ContentProviderKey(TestContentProvider.class)
-      abstract AndroidInjector.Factory<? extends ContentProvider> bindFactoryForContentProvider(
+      @ClassKey(TestContentProvider.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForContentProvider(
           ContentProviderSubcomponent.Builder builder);
     }
 
diff --git a/javatests/dagger/android/support/functional/ComponentStructureFollowsControllerStructureApplication.java b/javatests/dagger/android/support/functional/ComponentStructureFollowsControllerStructureApplication.java
index 379c795f0..3e2bfd36d 100644
--- a/javatests/dagger/android/support/functional/ComponentStructureFollowsControllerStructureApplication.java
+++ b/javatests/dagger/android/support/functional/ComponentStructureFollowsControllerStructureApplication.java
@@ -16,29 +16,20 @@
 
 package dagger.android.support.functional;
 
-import android.app.Activity;
-import android.app.Service;
-import android.content.BroadcastReceiver;
-import android.content.ContentProvider;
-import android.support.v4.app.Fragment;
 import dagger.Binds;
 import dagger.Component;
 import dagger.Module;
 import dagger.Provides;
 import dagger.Subcomponent;
-import dagger.android.ActivityKey;
 import dagger.android.AndroidInjector;
-import dagger.android.BroadcastReceiverKey;
-import dagger.android.ContentProviderKey;
-import dagger.android.ServiceKey;
 import dagger.android.support.AndroidSupportInjectionModule;
 import dagger.android.support.DaggerApplication;
-import dagger.android.support.FragmentKey;
 import dagger.android.support.functional.ComponentStructureFollowsControllerStructureApplication.ApplicationComponent.BroadcastReceiverSubcomponent.BroadcastReceiverModule;
 import dagger.android.support.functional.ComponentStructureFollowsControllerStructureApplication.ApplicationComponent.ContentProviderSubcomponent.ContentProviderModule;
 import dagger.android.support.functional.ComponentStructureFollowsControllerStructureApplication.ApplicationComponent.InnerActivitySubcomponent.InnerActivityModule;
 import dagger.android.support.functional.ComponentStructureFollowsControllerStructureApplication.ApplicationComponent.IntentServiceSubcomponent.IntentServiceModule;
 import dagger.android.support.functional.ComponentStructureFollowsControllerStructureApplication.ApplicationComponent.ServiceSubcomponent.ServiceModule;
+import dagger.multibindings.ClassKey;
 import dagger.multibindings.IntoMap;
 import dagger.multibindings.IntoSet;
 
@@ -75,38 +66,38 @@
 
       @Binds
       @IntoMap
-      @ActivityKey(TestActivity.class)
-      abstract AndroidInjector.Factory<? extends Activity> bindFactoryForTestActivity(
+      @ClassKey(TestActivity.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForTestActivity(
           ActivitySubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ActivityKey(OuterClass.TestInnerClassActivity.class)
-      abstract AndroidInjector.Factory<? extends Activity> bindFactoryForInnerActivity(
+      @ClassKey(OuterClass.TestInnerClassActivity.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForInnerActivity(
           InnerActivitySubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ServiceKey(TestService.class)
-      abstract AndroidInjector.Factory<? extends Service> bindFactoryForService(
+      @ClassKey(TestService.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForService(
           ServiceSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ServiceKey(TestIntentService.class)
-      abstract AndroidInjector.Factory<? extends Service> bindFactoryForIntentService(
+      @ClassKey(TestIntentService.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForIntentService(
           IntentServiceSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @BroadcastReceiverKey(TestBroadcastReceiver.class)
-      abstract AndroidInjector.Factory<? extends BroadcastReceiver> bindFactoryForBroadcastReceiver(
+      @ClassKey(TestBroadcastReceiver.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForBroadcastReceiver(
           BroadcastReceiverSubcomponent.Builder builder);
 
       @Binds
       @IntoMap
-      @ContentProviderKey(TestContentProvider.class)
-      abstract AndroidInjector.Factory<? extends ContentProvider> bindFactoryForContentProvider(
+      @ClassKey(TestContentProvider.class)
+      abstract AndroidInjector.Factory<?> bindFactoryForContentProvider(
           ContentProviderSubcomponent.Builder builder);
     }
 
@@ -122,14 +113,14 @@
 
         @Binds
         @IntoMap
-        @FragmentKey(TestParentFragment.class)
-        abstract AndroidInjector.Factory<? extends Fragment> bindFactoryForParentFragment(
+        @ClassKey(TestParentFragment.class)
+        abstract AndroidInjector.Factory<?> bindFactoryForParentFragment(
             ParentFragmentSubcomponent.Builder builder);
 
         @Binds
         @IntoMap
-        @FragmentKey(TestDialogFragment.class)
-        abstract AndroidInjector.Factory<? extends Fragment> bindFactoryForDialogFragment(
+        @ClassKey(TestDialogFragment.class)
+        abstract AndroidInjector.Factory<?> bindFactoryForDialogFragment(
             DialogFragmentSubcomponent.Builder builder);
       }
 
@@ -148,8 +139,8 @@
 
           @Binds
           @IntoMap
-          @FragmentKey(TestChildFragment.class)
-          abstract AndroidInjector.Factory<? extends Fragment> bindFactoryForChildFragment(
+          @ClassKey(TestChildFragment.class)
+          abstract AndroidInjector.Factory<?> bindFactoryForChildFragment(
               ChildFragmentSubcomponent.Builder builder);
         }
 
