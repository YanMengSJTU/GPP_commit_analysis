diff --git a/CHANGELOG.md b/CHANGELOG.md
index 42bd6272f..09c428253 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,137 +1,6 @@
 Change Log
 ==========
 
-Dagger 2 (Components)
----------------------
-
-### Version 2.5 *(2016-06-14)*
-  * Enables `@Binds` usage with multibinding annotations (`@IntoSet`, `@ElementsIntoSet`, and `@IntoMap`)
-  * Adds [`@Multibinds`](http://google.github.io/dagger/api/latest/dagger/multibindings/Multibinds.html) API to replace `@Multibindings` interfaces
-  * `@Component.Builder` methods for abstract modules are no longer allowed
-  * Performance improvements for `@IntoSet` usage. Provided objects are no longer wrapped in a wasteful `Collections.singleton()`
-  * Compilation speed improvements for large graphs
-  * `@Scope`s are no longer allowed on `@Produces` methods
-  * Adds state checking to scoped providers to make sure a circular dependency does not create multiple instances
-  * Producers optimizations: Each `@Produces` method now generates 1 class instead of 2
-  * Fix: Requests for Map<K, V> now include both `@Provides @IntoMap` and `@Produces @IntoMap` values
-
-### Version 2.4 *(2016-04-21)*
-  * Adds [`@Binds`](http://google.github.io/dagger/api/latest/dagger/Binds.html) API for delegating
-    one binding to another
-  * Adds `@IntoSet`, `@ElementsIntoSet` and `@IntoMap` to replace `@Provides(type = ...)` and `@Produces(type = ...)`
-  * Allow injection of `Provider<Lazy<Foo>>`
-  * Report an error if a `@Scope` annotation is applied to an `@Inject` constructor
-  * Remove the ability to set the production executor on a component builder.
-  * Ensure that no binding methods are binding framework types.
-  * New format of dependency traces in error messages
-  * Fixed bug: Exception when a binding in a parent that is used only in a subcomponent depends on a binding in the subcomponent
-  * Update to JavaPoet 1.6.1 and Google Java Format 1.0
-    * Fixes `NoSuchMethodError` from [Issue #356](https://github.com/google/dagger/issues/356)
-
-### Version 2.3 *(2016-04-08)*
-  * Adds [`@Reusable`]
-  (http://google.github.io/dagger/users-guide.html#reusable-scope) scope
-  [(javadoc)](http://google.github.io/dagger/api/latest/dagger/Reusable.html)
-
-### Version 2.2 *(2016-03-22)*
-  * `dagger.mapkeys` moved to `dagger.multibindings` and all `@MapKey`
-    implementations now correctly have `@Beta` applied
-  * Better error messages for multibindings
-  * Compiler bug fixes!
-
-### Version 2.1 *(2016-03-10)*
-
-  * Correctly handle `@Component`s that inject generated types
-  * Adds `@ProductionSubcomponent` and `@ProductionScope`
-  * Allow the production `Executor` to be bound with `@Production`
-  * Allow multiple scope annotations on components
-  * A component's subcomponents’ (and their subcomponents’) simple names no longer need to be unique
-  * Adds the ability to depend on subcomponent builders
-  * GWT Integration
-  * Producers monitoring
-  * Multibindings for producers
-  * Add common `@MapKey` annotations to `dagger.mapkeys`.  These annotations are
-    not, but should be marked `@Beta` (since the `@MapKey` itself is beta).
-  * Lots of bug fixes!
-
-### Version 2.0.2 *(2015-11-03)*
-
-A patch release, most crucially including:
-
-  * A fix to the way processor validation of types is done that permits dagger to play
-    more nicely with other processors, avoiding over-validating aspects that it doesn't
-    need, which may yet not have been generated by other processors in a different round
-    of processing.
-  * Some improved error reporting for edge-cases
-  * Fix to prevent incompatible versions of Guava on the classpath from blowing up processing
-  * Support a more robust set of types for map keys in map bindings (primitive types, etc.)
-
-### Version 2.0.1 *(2015-05-28)*
-
-A maintenance release fixing immediate issues following the Dagger 2.0 release, including:
-
-  * Speed up Graph Validation (reduce build times by 10s of seconds on sampled large projects)
-  * Generate correct code for `@MapKey` annotation types (beta)
-  * Fix to properly emit code for class literal values in `@MapKey` annotations.
-  * Fix for injecting component dependencies
-  * Fixes to generated code to account for differences in generics handling in ecg vs. javac.
-  * Subcomponents can now be abstract classes.
-  * Subcomponents now properly build the object graph in some cases involving explicit bindings
-    and (sub)components without scope.
-  * Improve runtime performance of SetFactory (set multibindings)
-  * Other smaller fixes, refactorings, etc.
-
-### Version 2.0.0 *(2015-04-21)*
-
-The initial release of the 2.0 code-line, supporting:
-
-  * `@Component` interfaces representing a custom API to access a graph of objects
-  * JSR-330 injection automation using `@Inject` signals, `@Qualifiers`
-  * Simple bindings of implementations to interfaces, custom provision of objects, and set-bindings
-  * Compile-time validation of graph structure (cycles, missing bindings, duplicate bindings)
-  * Generation of 
-    - backing implementations for components
-    - factories for `@Inject` constructors and modules
-    - members-injectors for `@Inject` methods and fields
-  * Beta support for
-    - Map bindings
-    - [Producers](http://google.github.io/dagger/api/latest/dagger/producers/Producer.html)
-
-==============================================================
-
-Dagger 1 (ObjectGraph)
-----------------------
-
-### Version 1.2.0 *(2013-12-13)*
-
- * Numerous performance improvements in both the compiler and runtime.
-   * Use more efficient `String` concatenation.
-   * Module adapters are now stateless.
-   * Use read/write locks over global locks.
-   * Reflective constructor invocation is now cached with `Class.newInstance`.
-   * Avoid re-linking all bindings when calling `.plus()`.
- * Set bindings are now unioned when calling `.plus()`.
- * Fix: Tolerate missing type information during compilation by deferring writing
-   module adapters.
-
-
-### Version 1.1.0 *(2013-08-05)*
-
- * Module loading now requires code generation via the 'dagger-compiler' artifact.
- * Allow multiple contributions to Set binding via `Provides.Type.SET_VALUES`.
- * Request classloading from the classloader of the requesting object, not the current thread's
-   context classloader.
- * Cache class loading at the root injector to reduce costs of loading adapters.
- * Fix: Primitive array types are no longer incorrectly changed to their boxed type.
- * Update JavaWriter to 2.1.1.
-
-
-### Version 1.0.1 *(2013-06-03)*
-
- * Explicitly forbid declaring `@Inject` on a class type (e.g., `@Inject class Foo {}`).
- * Update JavaWriter to 1.0.5.
-
-
-### Version 1.0.0 *(2013-05-07)*
-
-Initial release.
+-   For Dagger 2 releases, please see https://github.com/google/dagger/releases
+-   For Dagger 1 (`ObjectGraph`) releases, see
+    https://github.com/square/dagger/blob/master/CHANGELOG.md
diff --git a/README.md b/README.md
index 4a6d9bedc..587128c7c 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,7 @@
 # Dagger 2
 
+[![Maven Central][mavenbadge-svg]][mavenbadge]
+
 A fast dependency injector for Android and Java.
 
 ## About Google's Fork
@@ -15,17 +17,12 @@ This github project represents the Dagger 2 development stream.  The earlier
 development stream. Both versions have benefitted from strong involvement from
 Square, Google, and other contributors.
 
-> [Dagger 2's main documentation website can be found here.][website]
-
-## Status
-
-  - ***Release Version:* 2.2**
-  - ***Snapshot Version:* 2.3-SNAPSHOT**
-
 Dagger is currently in active development, primarily internally at Google,
 with regular pushes to the open-source community. Snapshot releases are
-auto-deployed to sonatype's central maven repository on a clean build with
-the version `2.3-SNAPSHOT`.
+auto-deployed to sonatype's central maven repository on every clean build with
+the version `HEAD-SNAPSHOT`.
+
+> [Dagger 2's main documentation website can be found here.][website]
 
 ## Documentation
 
@@ -39,9 +36,9 @@ mailing list.
 
 ## Installation
 
-You will need to include the `dagger-2.1.jar` in your application's runtime.
+You will need to include the `dagger-2.x.jar` in your application's runtime.
 In order to activate code generation and generate implementations to manage
-your graph you will need to include `dagger-compiler-2.1.jar` in your build
+your graph you will need to include `dagger-compiler-2.x.jar` in your build
 at compile time.
 
 ### Maven
@@ -55,12 +52,12 @@ of your `pom.xml` and the `dagger-compiler` artifact as either an `optional` or
   <dependency>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger</artifactId>
-    <version>2.2</version>
+    <version>2.x</version>
   </dependency>
   <dependency>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-compiler</artifactId>
-    <version>2.2</version>
+    <version>2.x</version>
     <optional>true</optional>
   </dependency>
 </dependencies>
@@ -74,7 +71,7 @@ parallelizable execution graphs), then add this to your maven configuration:
   <dependency>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-producers</artifactId>
-    <version>2.2</version>
+    <version>2.x</version>
   </dependency>
 </dependencies>
 ```
@@ -88,8 +85,8 @@ plugins {
 
 // Add Dagger dependencies
 dependencies {
-  compile 'com.google.dagger:dagger:2.0.2'
-  apt 'com.google.dagger:dagger-compiler:2.0.2'
+  compile 'com.google.dagger:dagger:2.x'
+  apt 'com.google.dagger:dagger-compiler:2.x'
 }
 ```
 
@@ -110,8 +107,8 @@ apply plugin: 'com.neenbedankt.android-apt'
 
 // Add Dagger dependencies
 dependencies {
-  compile 'com.google.dagger:dagger:2.0.2'
-  apt 'com.google.dagger:dagger-compiler:2.0.2'
+  compile 'com.google.dagger:dagger:2.x'
+  apt 'com.google.dagger:dagger-compiler:2.x'
 }
 ```
 
@@ -159,6 +156,8 @@ the GitHub project's master branch.
 
 
  [mavensearch]: http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.google.dagger%22
+ [mavenbadge]: https://maven-badges.herokuapp.com/maven-central/com.google.dagger/dagger
+ [mavenbadge-svg]: https://maven-badges.herokuapp.com/maven-central/com.google.dagger/dagger/badge.svg
  [dagger-snap]: https://oss.sonatype.org/content/repositories/snapshots/com/google/dagger/
  [website]: http://google.github.io/dagger
  [latestapi]: http://google.github.io/dagger/api/latest/
@@ -169,4 +168,3 @@ the GitHub project's master branch.
  [community]: https://plus.google.com/communities/111933036769103367883
  [square]: http://github.com/square/dagger/
  [squarecommunity]: https://plus.google.com/communities/109244258569782858265
-
diff --git a/compiler/pom.xml b/compiler/pom.xml
index b91a49a6a..b232f4928 100644
--- a/compiler/pom.xml
+++ b/compiler/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <artifactId>dagger-compiler</artifactId>
diff --git a/compiler/src/it/functional-tests/pom.xml b/compiler/src/it/functional-tests/pom.xml
index c5e34321d..2f0463499 100644
--- a/compiler/src/it/functional-tests/pom.xml
+++ b/compiler/src/it/functional-tests/pom.xml
@@ -22,7 +22,7 @@ limitations under the License.
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
   <groupId>dagger.tests</groupId>
   <artifactId>functional-tests</artifactId>
diff --git a/compiler/src/it/producers-functional-tests/pom.xml b/compiler/src/it/producers-functional-tests/pom.xml
index ae10b3cc2..bcf80437f 100644
--- a/compiler/src/it/producers-functional-tests/pom.xml
+++ b/compiler/src/it/producers-functional-tests/pom.xml
@@ -22,7 +22,7 @@ limitations under the License.
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
   <groupId>dagger.tests</groupId>
   <artifactId>producers-functional-tests</artifactId>
diff --git a/compiler/src/it/tck/pom.xml b/compiler/src/it/tck/pom.xml
index 22e069de7..fb8979013 100644
--- a/compiler/src/it/tck/pom.xml
+++ b/compiler/src/it/tck/pom.xml
@@ -22,7 +22,7 @@ limitations under the License.
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
   <groupId>dagger.tests</groupId>
   <artifactId>tck</artifactId>
diff --git a/compiler/src/main/java/dagger/internal/codegen/BindsMethodValidator.java b/compiler/src/main/java/dagger/internal/codegen/BindsMethodValidator.java
index e25556643..73e5d8f8e 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindsMethodValidator.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindsMethodValidator.java
@@ -16,14 +16,11 @@
 
 package dagger.internal.codegen;
 
-import static com.google.auto.common.MoreElements.isAnnotationPresent;
 import static com.google.common.collect.Iterables.getOnlyElement;
 import static dagger.internal.codegen.BindingMethodValidator.Abstractness.MUST_BE_ABSTRACT;
 import static dagger.internal.codegen.BindingMethodValidator.ExceptionSuperclass.RUNTIME_EXCEPTION;
-import static dagger.internal.codegen.ErrorMessages.BINDING_METHOD_NOT_MAP_HAS_MAP_KEY;
 import static dagger.internal.codegen.ErrorMessages.BINDS_ELEMENTS_INTO_SET_METHOD_RETURN_SET;
 import static dagger.internal.codegen.ErrorMessages.BINDS_METHOD_ONE_ASSIGNABLE_PARAMETER;
-import static dagger.internal.codegen.MapKeys.getMapKeys;
 
 import com.google.auto.common.MoreElements;
 import com.google.auto.common.MoreTypes;
@@ -31,12 +28,10 @@
 import com.google.common.collect.ImmutableSet;
 import dagger.Binds;
 import dagger.Module;
-import dagger.multibindings.IntoMap;
 import dagger.producers.ProducerModule;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
-import javax.lang.model.element.AnnotationMirror;
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.element.VariableElement;
diff --git a/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java b/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java
index 94ae5cfe9..1a50fb091 100644
--- a/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java
+++ b/compiler/src/main/java/dagger/internal/codegen/ProductionBinding.java
@@ -74,10 +74,17 @@ public BindingType bindingType() {
   /** Returns the list of types in the throws clause of the method. */
   abstract ImmutableList<? extends TypeMirror> thrownTypes();
 
-  /** If this production requires an executor, this will be the corresponding request. */
+  /**
+   * If this production requires an executor, this will be the corresponding request.  All
+   * production bindings from {@code @Produces} methods will have an executor request, but
+   * synthetic production bindings may not.
+   */
   abstract Optional<DependencyRequest> executorRequest();
 
-  /** If this production requires a monitor, this will be the corresponding request. */
+  /** If this production requires a monitor, this will be the corresponding request.  All
+   * production bindings from {@code @Produces} methods will have a monitor request, but synthetic
+   * production bindings may not.
+   */
   abstract Optional<DependencyRequest> monitorRequest();
 
   private static Builder builder() {
diff --git a/core/pom.xml b/core/pom.xml
index 12e84c123..ec7e622fd 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -20,7 +20,7 @@
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <artifactId>dagger</artifactId>
diff --git a/examples/android-activity-graphs/pom.xml b/examples/android-activity-graphs/pom.xml
index 24098fcf1..d25d7e280 100644
--- a/examples/android-activity-graphs/pom.xml
+++ b/examples/android-activity-graphs/pom.xml
@@ -20,7 +20,7 @@
   <parent>
     <groupId>com.google.dagger.example</groupId>
     <artifactId>dagger-example-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <artifactId>android-activity-graphs</artifactId>
diff --git a/examples/android-simple/pom.xml b/examples/android-simple/pom.xml
index d14207d08..1c329fd6c 100644
--- a/examples/android-simple/pom.xml
+++ b/examples/android-simple/pom.xml
@@ -20,7 +20,7 @@
   <parent>
     <groupId>com.google.dagger.example</groupId>
     <artifactId>dagger-example-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <artifactId>android-simple</artifactId>
diff --git a/examples/pom.xml b/examples/pom.xml
index a8970e592..acbab0a22 100644
--- a/examples/pom.xml
+++ b/examples/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <groupId>com.google.dagger.example</groupId>
diff --git a/examples/simple/pom.xml b/examples/simple/pom.xml
index 749c67f6a..a28bf5f0e 100644
--- a/examples/simple/pom.xml
+++ b/examples/simple/pom.xml
@@ -20,7 +20,7 @@
   <parent>
     <groupId>com.google.dagger.example</groupId>
     <artifactId>dagger-example-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <artifactId>simple</artifactId>
diff --git a/gwt/pom.xml b/gwt/pom.xml
index 072daf779..48c7828b1 100644
--- a/gwt/pom.xml
+++ b/gwt/pom.xml
@@ -22,7 +22,7 @@
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <artifactId>dagger-gwt</artifactId>
diff --git a/pom.xml b/pom.xml
index cbb586035..5a95c4776 100644
--- a/pom.xml
+++ b/pom.xml
@@ -27,7 +27,7 @@
   <groupId>com.google.dagger</groupId>
   <artifactId>dagger-parent</artifactId>
   <packaging>pom</packaging>
-  <version>2.6-snapshot</version>
+  <version>HEAD-SNAPSHOT</version>
   <name>Dagger (Parent)</name>
   <description>A fast dependency injector for Android and Java.</description>
   <url>https://github.com/square/dagger</url>
diff --git a/producers/pom.xml b/producers/pom.xml
index 59965fc42..820c45aa5 100644
--- a/producers/pom.xml
+++ b/producers/pom.xml
@@ -20,7 +20,7 @@
   <parent>
     <groupId>com.google.dagger</groupId>
     <artifactId>dagger-parent</artifactId>
-    <version>2.6-snapshot</version>
+    <version>HEAD-SNAPSHOT</version>
   </parent>
 
   <artifactId>dagger-producers</artifactId>
diff --git a/util/mvn-deploy.sh b/util/mvn-deploy.sh
index ec4b7a0d2..93e975c24 100755
--- a/util/mvn-deploy.sh
+++ b/util/mvn-deploy.sh
@@ -1,10 +1,23 @@
 #!/bin/bash
-if [ $# -lt 1 ]; then
-  echo "usage $0 <ssl-key> [<param> ...]"
+if [ $# -lt 2 ]; then
+  echo "usage $0 <ssl-key> <version-name> [<param> ...]"
   exit 1;
 fi
 key=$1
-shift
+version_name=$2
+shift 2
+
+if [[ ! $version_name =~ ^2\. ]]; then
+  echo 'Version name must begin with "2."'
+  exit 2
+fi
+
+# Rename snapshot version and sanity check that it doesn't exist in any poms
+sed -i s/HEAD-SNAPSHOT/$version_name/g `find . -name pom.xml`
+if [[ $(git grep HEAD-SNAPSHOT -- '*pom.xml') ]]; then
+  echo "Snapshots found in poms!"
+  exit 3
+fi
 
 #validate key
 keystatus=$(gpg --list-keys | grep ${key} | awk '{print $1}')
