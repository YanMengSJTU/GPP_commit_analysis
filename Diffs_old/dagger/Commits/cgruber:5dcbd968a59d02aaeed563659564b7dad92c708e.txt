diff --git a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
index 715b0e3c5..5ee026fb4 100644
--- a/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
+++ b/compiler/src/main/java/dagger/internal/codegen/BindingGraph.java
@@ -330,12 +330,7 @@ ResolvedBindings lookUpBindings(DependencyRequest request) {
                   ImmutableSetMultimap.builder();
               for (ContributionBinding binding :
                   union(explicitBindingsForKey, union(explicitSetBindings, explicitMapBindings))) {
-                if (isResolvedInParent(request, binding)
-                    && !shouldOwnParentBinding(request, binding)) {
-                  bindings.put(getOwningResolver(binding).get().componentDescriptor, binding);
-                } else {
-                  bindings.put(componentDescriptor, binding);
-                }
+                bindings.put(getOwningComponent(request, binding), binding);
               }
               return ResolvedBindings.forContributionBindings(
                   bindingKey, componentDescriptor, bindings.build());
@@ -383,6 +378,18 @@ ResolvedBindings lookUpBindings(DependencyRequest request) {
         }
       }
 
+      /**
+       * If {@code binding} should be owned by a parent component, resolves the binding in that
+       * component's resolver and returns that component. Otherwise returns the component for this
+       * resolver.
+       */
+      private ComponentDescriptor getOwningComponent(
+          DependencyRequest request, ContributionBinding binding) {
+        return isResolvedInParent(request, binding) && !shouldOwnParentBinding(request, binding)
+            ? getOwningResolver(binding).get().componentDescriptor
+            : componentDescriptor;
+      }
+
       /**
        * Returns {@code true} if {@code binding} is owned by a parent resolver. If so, calls
        * {@link #resolve(DependencyRequest) resolve(request)} on that resolver.
