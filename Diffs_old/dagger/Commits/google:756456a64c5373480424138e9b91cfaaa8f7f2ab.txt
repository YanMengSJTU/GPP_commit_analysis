diff --git a/java/dagger/android/DaggerActivity.java b/java/dagger/android/DaggerActivity.java
index d9f68911d..f08c02a7b 100644
--- a/java/dagger/android/DaggerActivity.java
+++ b/java/dagger/android/DaggerActivity.java
@@ -33,8 +33,8 @@
 
   @Override
   protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
     AndroidInjection.inject(this);
+    super.onCreate(savedInstanceState);
   }
 
   @Override
diff --git a/java/dagger/android/DaggerFragment.java b/java/dagger/android/DaggerFragment.java
index d48438231..d7b552f76 100644
--- a/java/dagger/android/DaggerFragment.java
+++ b/java/dagger/android/DaggerFragment.java
@@ -33,8 +33,8 @@
 
   @Override
   public void onAttach(Context context) {
-    super.onAttach(context);
     AndroidInjection.inject(this);
+    super.onAttach(context);
   }
 
   @Override
diff --git a/java/dagger/android/support/DaggerAppCompatActivity.java b/java/dagger/android/support/DaggerAppCompatActivity.java
index 12d6e421b..f1b403362 100644
--- a/java/dagger/android/support/DaggerAppCompatActivity.java
+++ b/java/dagger/android/support/DaggerAppCompatActivity.java
@@ -38,8 +38,8 @@
 
   @Override
   protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
     AndroidInjection.inject(this);
+    super.onCreate(savedInstanceState);
   }
 
   @Override
diff --git a/java/dagger/android/support/DaggerFragment.java b/java/dagger/android/support/DaggerFragment.java
index 40ce16fde..b21f85968 100644
--- a/java/dagger/android/support/DaggerFragment.java
+++ b/java/dagger/android/support/DaggerFragment.java
@@ -35,8 +35,8 @@
 
   @Override
   public void onAttach(Context context) {
-    super.onAttach(context);
     AndroidSupportInjection.inject(this);
+    super.onAttach(context);
   }
 
   @Override
diff --git a/javatests/dagger/android/support/functional/InjectorsTest.java b/javatests/dagger/android/support/functional/InjectorsTest.java
index 0aa42c9c1..cc1b0b4a7 100644
--- a/javatests/dagger/android/support/functional/InjectorsTest.java
+++ b/javatests/dagger/android/support/functional/InjectorsTest.java
@@ -18,11 +18,13 @@
 
 import static com.google.common.truth.Truth.assertThat;
 
+import android.content.res.Configuration;
 import org.robolectric.RobolectricTestRunner;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
 @RunWith(RobolectricTestRunner.class)
@@ -30,13 +32,16 @@
   private static final String MANIFEST =
       "//javatests/dagger/android/support/functional"
           + ":functional/AndroidManifest.xml";
+
+  private ActivityController<TestActivity> activityController;
   private TestActivity activity;
   private TestParentFragment parentFragment;
   private TestChildFragment childFragment;
 
   @Before
   public void setUp() {
-    activity = Robolectric.setupActivity(TestActivity.class);
+    activityController = Robolectric.buildActivity(TestActivity.class);
+    activity = activityController.setup().get();
     parentFragment =
         (TestParentFragment)
             activity.getSupportFragmentManager().findFragmentByTag("parent-fragment");
@@ -72,6 +77,8 @@ public void componentStructureFollowsControllerStructure() {
                 .ActivitySubcomponent.ParentFragmentSubcomponent.class,
             ComponentStructureFollowsControllerStructureApplication.ApplicationComponent
                 .ActivitySubcomponent.ParentFragmentSubcomponent.ChildFragmentSubcomponent.class);
+
+    changeConfiguration();
   }
 
   @Test
@@ -92,5 +99,18 @@ public void AllControllersAreDirectChildrenOfApplication() {
             AllControllersAreDirectChildrenOfApplication.ApplicationComponent.class,
             AllControllersAreDirectChildrenOfApplication.ApplicationComponent
                 .ChildFragmentSubcomponent.class);
+
+    changeConfiguration();
+  }
+
+  // https://github.com/google/dagger/issues/598
+  private void changeConfiguration() {
+    Configuration oldConfiguration = activity.getResources().getConfiguration();
+    Configuration newConfiguration = new Configuration(oldConfiguration);
+    newConfiguration.orientation =
+        oldConfiguration.orientation == Configuration.ORIENTATION_LANDSCAPE
+            ? Configuration.ORIENTATION_PORTRAIT
+            : Configuration.ORIENTATION_LANDSCAPE;
+    activityController.configurationChange(newConfiguration);
   }
 }
