diff --git a/tools/simple_jar.bzl b/tools/simple_jar.bzl
index 9df4fceb0..b6dbeb3f2 100644
--- a/tools/simple_jar.bzl
+++ b/tools/simple_jar.bzl
@@ -18,21 +18,32 @@ def simple_jar(name, srcs):
     """Creates a jar out of a set of flat files"""
 
     # TODO(dpb): consider creating a Fileset() under the hood to support srcs from different
-    # directories
+    # directories, or continually update the same zip file for each source file
+    # TODO(ronshapiro): extract a .sh file to make this easier to understand
     native.genrule(
         name = name,
         srcs = srcs,
         outs = ["%s.jar" % name],
-        cmd = """
-        OUT="$$(pwd)/$@"
-        if [[ -e "{package_name}" ]]; then
-          cd "{package_name}"
-        elif [[ -e "external/{package_name}" ]]; then
-          cd "external/{package_name}"
-        else
-          echo "Cannot find {package_name} directory"
+        cmd = 'package_name="{package_name}"'.format(package_name = native.package_name()) +
+              """
+        dirname=""
+        for src in $(SRCS); do
+          src_dirname="$$(echo "$${src}" | grep -o -P "(.*/)?$${package_name}" | head -n1)"
+          if [[ -z "$${dirname}" ]]; then
+            dirname="$${src_dirname}"
+          elif [[ "$${dirname}" != "$${src_dirname}" ]]; then
+            echo "Sources must all be in the same directory: $(SRCS)"
+            exit 1
+          fi
+        done
+
+        if [[ -z "$${dirname}" ]]; then
+          echo "No sources provided"
           exit 1
         fi
+
+        OUT="$$(pwd)/$@"
+        cd "$${dirname}"
         zip "$$OUT" -r * &> /dev/null
-        """.format(package_name = native.package_name()),
+        """,
     )
