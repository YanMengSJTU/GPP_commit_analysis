diff --git a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentMultibindingModule.java b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentMultibindingModule.java
index 24dc6497e..578de707e 100644
--- a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentMultibindingModule.java
+++ b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/ParentMultibindingModule.java
@@ -32,4 +32,9 @@ Object provideObject() {
   String provideString() {
     return "string provided by parent";
   }
+
+  @Provides(type = SET)
+  RequiresSetOfObjects requiresSetOfObjects(RequiresSetOfObjects requiresSetOfObjects) {
+    return requiresSetOfObjects;
+  }
 }
diff --git a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInChild.java b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInChild.java
index 1f9150c88..e324fdf10 100644
--- a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInChild.java
+++ b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInChild.java
@@ -15,24 +15,16 @@
  */
 package test.subcomponent;
 
+import java.util.Set;
 import javax.inject.Inject;
 
-class RequiresMultibindingsInChild {
-  private final RequiresSetOfObjects requiresSetOfObjects;
-  private final RequiresSetOfStrings requiresSetOfStrings;
+class RequiresMultibindingsInChild extends RequiresMultibindingsInParent {
 
   @Inject
   RequiresMultibindingsInChild(
-      RequiresSetOfObjects requiresSetOfObjects, RequiresSetOfStrings requiresSetOfStrings) {
-    this.requiresSetOfObjects = requiresSetOfObjects;
-    this.requiresSetOfStrings = requiresSetOfStrings;
-  }
-
-  RequiresSetOfObjects requiresSetOfObjects() {
-    return requiresSetOfObjects;
-  }
-
-  RequiresSetOfStrings requiresSetOfStrings() {
-    return requiresSetOfStrings;
+      RequiresSetOfObjects requiresSetOfObjects,
+      RequiresSetOfStrings requiresSetOfStrings,
+      Set<RequiresSetOfObjects> setOfRequiresSetOfObjects) {
+    super(requiresSetOfObjects, requiresSetOfStrings, setOfRequiresSetOfObjects);
   }
 }
diff --git a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInParent.java b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInParent.java
index d87b1c7ee..73a56d955 100644
--- a/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInParent.java
+++ b/compiler/src/it/functional-tests/src/main/java/test/subcomponent/RequiresMultibindingsInParent.java
@@ -15,17 +15,22 @@
  */
 package test.subcomponent;
 
+import java.util.Set;
 import javax.inject.Inject;
 
 class RequiresMultibindingsInParent {
   private final RequiresSetOfObjects requiresSetOfObjects;
   private final RequiresSetOfStrings requiresSetOfStrings;
+  private final Set<RequiresSetOfObjects> setOfRequiresSetOfObjects;
 
   @Inject
   RequiresMultibindingsInParent(
-      RequiresSetOfObjects requiresSetOfObjects, RequiresSetOfStrings requiresSetOfStrings) {
+      RequiresSetOfObjects requiresSetOfObjects,
+      RequiresSetOfStrings requiresSetOfStrings,
+      Set<RequiresSetOfObjects> setOfRequiresSetOfObjects) {
     this.requiresSetOfObjects = requiresSetOfObjects;
     this.requiresSetOfStrings = requiresSetOfStrings;
+    this.setOfRequiresSetOfObjects = setOfRequiresSetOfObjects;
   }
 
   RequiresSetOfObjects requiresSetOfObjects() {
@@ -35,4 +40,8 @@ RequiresSetOfObjects requiresSetOfObjects() {
   RequiresSetOfStrings requiresSetOfStrings() {
     return requiresSetOfStrings;
   }
+
+  Set<RequiresSetOfObjects> setOfRequiresSetOfObjects() {
+    return setOfRequiresSetOfObjects;
+  }
 }
diff --git a/compiler/src/it/functional-tests/src/test/java/test/subcomponent/SubcomponentMultibindingsTest.java b/compiler/src/it/functional-tests/src/test/java/test/subcomponent/SubcomponentMultibindingsTest.java
index 566dc3919..40592577a 100644
--- a/compiler/src/it/functional-tests/src/test/java/test/subcomponent/SubcomponentMultibindingsTest.java
+++ b/compiler/src/it/functional-tests/src/test/java/test/subcomponent/SubcomponentMultibindingsTest.java
@@ -41,15 +41,17 @@ public SubcomponentMultibindingsTest(ParentComponentWithoutMultibindings parentC
   }
 
   @Test
-  public void test() {
-    ChildComponentWithMultibindings child = parent.childComponent();
+  public void testMultibindingsInSubcomponents() {
     RequiresMultibindingsInChild requiresMultibindingsInChild =
-        child.requiresMultibindingsInChild();
-    assertWithMessage("child.requiresMultibindingsInChild.requiresSetOfObjects")
+        parent.childComponent().requiresMultibindingsInChild();
+
+    assertWithMessage("requiresSetOfObjects")
         .that(requiresMultibindingsInChild.requiresSetOfObjects().setOfObjects())
         .containsExactly("object provided by parent", "object provided by child");
-    assertWithMessage("child.requiresMultibindingsInChild.requiresSetOfStrings")
+
+    assertWithMessage("requiresSetOfStrings")
         .that(requiresMultibindingsInChild.requiresSetOfStrings().setOfStrings())
         .containsExactly("string provided by parent");
   }
+
 }
