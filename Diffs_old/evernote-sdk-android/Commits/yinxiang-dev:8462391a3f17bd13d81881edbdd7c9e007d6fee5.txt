diff --git a/README.md b/README.md
index af45aff..304a41a 100644
--- a/README.md
+++ b/README.md
@@ -12,7 +12,7 @@ Prerequisites
 -------------
 In order to use the code in this SDK, you need to obtain an API key from https://dev.evernote.com/doc/. You'll also find full API documentation on that page.
 
-In order to run the demo code, you need a user account on the sandbox service where you will do your development. Sign up for an account at https://sandbox.evernote.com/Registration.action
+In order to run the demo code, you need a user account on the sandbox service where you will do your development. Sign up for an account at https://sandbox.yinxiang.com/Registration.action
 
 The instructions below assume you have the latest [Android SDK](http://developer.android.com/sdk/index.html).
 
diff --git a/library/src/main/java/com/evernote/client/android/BootstrapManager.java b/library/src/main/java/com/evernote/client/android/BootstrapManager.java
index 0c35e54..421a775 100644
--- a/library/src/main/java/com/evernote/client/android/BootstrapManager.java
+++ b/library/src/main/java/com/evernote/client/android/BootstrapManager.java
@@ -94,10 +94,7 @@
     mBootstrapServerUrls.clear();
     switch (service) {
       case PRODUCTION:
-        if (CHINA_LOCALES.contains(mLocale)) {
-          mBootstrapServerUrls.add(EvernoteSession.HOST_CHINA);
-        }
-        mBootstrapServerUrls.add(EvernoteSession.HOST_PRODUCTION);
+        mBootstrapServerUrls.add(EvernoteSession.HOST_CHINA);
         break;
 
       case SANDBOX:
diff --git a/library/src/main/java/com/evernote/client/android/EvernoteOAuthActivity.java b/library/src/main/java/com/evernote/client/android/EvernoteOAuthActivity.java
index 17f9775..687aecf 100644
--- a/library/src/main/java/com/evernote/client/android/EvernoteOAuthActivity.java
+++ b/library/src/main/java/com/evernote/client/android/EvernoteOAuthActivity.java
@@ -29,7 +29,7 @@
     private static final Cat CAT = new Cat("EvernoteOAuthActivity");
 
     private static final String HOST_EVERNOTE = "www.evernote.com";
-    private static final String HOST_SANDBOX = "sandbox.evernote.com";
+    private static final String HOST_SANDBOX = "sandbox.yinxiang.com";
     private static final String HOST_CHINA = "app.yinxiang.com";
 
     public static Intent createIntent(Context context, String url) {
diff --git a/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java b/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java
index f7adf06..667f920 100644
--- a/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java
+++ b/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java
@@ -188,7 +188,7 @@ protected static OAuthService createOAuthService(BootstrapProfile bootstrapProfi
         Class<? extends Api> apiClass;
         switch (uri.toString()) {
             case EvernoteSession.HOST_SANDBOX:
-                apiClass = EvernoteApi.Sandbox.class;
+                apiClass = YinxiangSandboxApi.class;
                 break;
 
             case EvernoteSession.HOST_PRODUCTION:
diff --git a/library/src/main/java/com/evernote/client/android/EvernoteSession.java b/library/src/main/java/com/evernote/client/android/EvernoteSession.java
index 885cadd..78d8b3b 100644
--- a/library/src/main/java/com/evernote/client/android/EvernoteSession.java
+++ b/library/src/main/java/com/evernote/client/android/EvernoteSession.java
@@ -74,7 +74,7 @@
 public final class EvernoteSession {
 
     // Standard hostnames for bootstrap detection
-    public static final String HOST_SANDBOX = "https://sandbox.evernote.com";
+    public static final String HOST_SANDBOX = "https://sandbox.yinxiang.com";
     public static final String HOST_PRODUCTION = "https://www.evernote.com";
     public static final String HOST_CHINA = "https://app.yinxiang.com";
 
@@ -278,12 +278,12 @@ public synchronized boolean logOut() {
 
     /**
      * Evernote Service to use with the bootstrap profile detection.
-     * Sandbox will return profiles referencing sandbox.evernote.com
+     * Sandbox will return profiles referencing sandbox.yinxiang.com
      * Production will return evernote.com and app.yinxiang.com
      */
     public enum EvernoteService implements Parcelable {
         /**
-         * References sandbox.evernote.com.
+         * References sandbox.yinxiang.com.
          */
         SANDBOX,
 
diff --git a/library/src/main/java/com/evernote/client/android/YinxiangSandboxApi.java b/library/src/main/java/com/evernote/client/android/YinxiangSandboxApi.java
new file mode 100644
index 0000000..1752234
--- /dev/null
+++ b/library/src/main/java/com/evernote/client/android/YinxiangSandboxApi.java
@@ -0,0 +1,27 @@
+package com.evernote.client.android;
+
+import org.scribe.builder.api.EvernoteApi;
+import org.scribe.model.Token;
+
+public class YinxiangSandboxApi extends EvernoteApi {
+
+    private static final String YINXIANG_URL = "https://sandbox.yinxiang.com"; //$NON-NLS-1$
+
+      @Override
+      public String getRequestTokenEndpoint()
+    {
+	return YINXIANG_URL + "/oauth"; //$NON-NLS-1$
+    }
+
+      @Override
+      public String getAccessTokenEndpoint()
+    {
+	return YINXIANG_URL + "/oauth"; //$NON-NLS-1$
+    }
+
+      @Override
+      public String getAuthorizationUrl(Token requestToken)
+    {
+	return String.format(YINXIANG_URL + "/OAuth.action?oauth_token=%s", requestToken.getToken()); //$NON-NLS-1$
+    }
+}
