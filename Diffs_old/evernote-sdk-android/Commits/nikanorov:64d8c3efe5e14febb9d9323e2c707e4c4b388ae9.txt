diff --git a/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java b/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java
index a1eec13..839f404 100644
--- a/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java
+++ b/library/src/main/java/com/evernote/client/android/EvernoteOAuthHelper.java
@@ -24,6 +24,7 @@
 import java.util.Locale;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+import java.net.URLEncoder;
 
 /**
  * A helper class to handle OAuth requests.
@@ -49,6 +50,7 @@
     protected final String mConsumerKey;
     protected final String mConsumerSecret;
     protected final boolean mSupportAppLinkedNotebooks;
+	protected final String mSuggestedNotebookName;
     protected final Locale mLocale;
 
     protected BootstrapProfile mBootstrapProfile;
@@ -56,15 +58,16 @@
 
     protected Token mRequestToken;
 
-    public EvernoteOAuthHelper(EvernoteSession session, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks) {
-        this(session, consumerKey, consumerSecret, supportAppLinkedNotebooks, Locale.getDefault());
+    public EvernoteOAuthHelper(EvernoteSession session, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, String suggestedNotebookName) {
+        this(session, consumerKey, consumerSecret, supportAppLinkedNotebooks, suggestedNotebookName, Locale.getDefault());
     }
 
-    public EvernoteOAuthHelper(EvernoteSession session, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, Locale locale) {
+    public EvernoteOAuthHelper(EvernoteSession session, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, String suggestedNotebookName, Locale locale) {
         mSession = EvernotePreconditions.checkNotNull(session);
         mConsumerKey = EvernotePreconditions.checkNotEmpty(consumerKey);
         mConsumerSecret = EvernotePreconditions.checkNotEmpty(consumerSecret);
         mSupportAppLinkedNotebooks = supportAppLinkedNotebooks;
+        mSuggestedNotebookName = suggestedNotebookName;
         mLocale = EvernotePreconditions.checkNotNull(locale);
     }
 
@@ -113,6 +116,14 @@ public String createAuthorizationUrl(Token requestToken) {
         if (mSupportAppLinkedNotebooks) {
             url += "&supportLinkedSandbox=true";
         }
+		
+		if (mSupportAppLinkedNotebooks&&mSuggestedNotebookName!=null&&mSuggestedNotebookName.length()>0){
+			try{
+				url += "&suggestedNotebookName="+ URLEncoder.encode(mSuggestedNotebookName, "UTF-8");							
+			} catch (Exception e){
+				CAT.e(e);
+			}
+		}
 
         return url;
     }
diff --git a/library/src/main/java/com/evernote/client/android/EvernoteSession.java b/library/src/main/java/com/evernote/client/android/EvernoteSession.java
index 259a23a..f6d9aa1 100644
--- a/library/src/main/java/com/evernote/client/android/EvernoteSession.java
+++ b/library/src/main/java/com/evernote/client/android/EvernoteSession.java
@@ -148,6 +148,7 @@ public static EvernoteSession getInstance(Context ctx,
     @SuppressWarnings("deprecation")private ClientFactory mClientFactory;
     private AuthenticationResult mAuthenticationResult;
     private boolean mSupportAppLinkedNotebooks;
+	private String mSuggestedNotebookName;
     private boolean mForceAuthenticationInThirdPartyApp;
     private Locale mLocale;
 
@@ -261,7 +262,7 @@ public AuthenticationResult getAuthenticationResult() {
      * @param activity The {@link FragmentActivity} holding the progress dialog.
      */
     public void authenticate(FragmentActivity activity) {
-        authenticate(activity, EvernoteLoginFragment.create(mConsumerKey, mConsumerSecret, mSupportAppLinkedNotebooks, mLocale));
+        authenticate(activity, EvernoteLoginFragment.create(mConsumerKey, mConsumerSecret, mSupportAppLinkedNotebooks, mSuggestedNotebookName, mLocale));
     }
 
     /**
@@ -284,7 +285,7 @@ public void authenticate(FragmentActivity activity, EvernoteLoginFragment fragme
      * @param activity The {@link Activity} launching the {@link EvernoteLoginActivity}.
      */
     public void authenticate(Activity activity) {
-        activity.startActivityForResult(EvernoteLoginActivity.createIntent(activity, mConsumerKey, mConsumerSecret, mSupportAppLinkedNotebooks, mLocale), REQUEST_CODE_LOGIN);
+        activity.startActivityForResult(EvernoteLoginActivity.createIntent(activity, mConsumerKey, mConsumerSecret, mSupportAppLinkedNotebooks, mSuggestedNotebookName, mLocale), REQUEST_CODE_LOGIN);
     }
 
     /**
@@ -382,6 +383,7 @@ public EvernoteService createFromParcel(final Parcel source) {
 
         private EvernoteService mEvernoteService;
         private boolean mSupportAppLinkedNotebooks;
+        private String mSuggestedNotebookName;
         private Locale mLocale;
 
         @Deprecated
@@ -431,6 +433,16 @@ public Builder setSupportAppLinkedNotebooks(boolean supportAppLinkedNotebooks) {
             return this;
         }
 
+        /**
+         *
+         * @param suggestedNotebookName suggested name for  linked notebook.
+         * @return This Builder object to allow for chaining of calls to set methods.
+         */
+        public Builder setSuggestedNotebookName(String suggestedNotebookName) {
+            mSuggestedNotebookName = suggestedNotebookName;
+            return this;
+        }
+
         /**
          * Default is {@code false}.
          *
@@ -518,6 +530,7 @@ private EvernoteSession build(EvernoteSession session) {
             session.mApplicationContext = mContext;
             session.mLocale = mLocale;
             session.mSupportAppLinkedNotebooks = mSupportAppLinkedNotebooks;
+            session.mSuggestedNotebookName = mSuggestedNotebookName;
             //noinspection deprecation
             session.mClientFactory = new ClientFactory(mUserAgent, mMessageCacheDir);
             session.mEvernoteService = mEvernoteService;
diff --git a/library/src/main/java/com/evernote/client/android/login/EvernoteLoginActivity.java b/library/src/main/java/com/evernote/client/android/login/EvernoteLoginActivity.java
index 22b1a48..038e71d 100644
--- a/library/src/main/java/com/evernote/client/android/login/EvernoteLoginActivity.java
+++ b/library/src/main/java/com/evernote/client/android/login/EvernoteLoginActivity.java
@@ -31,16 +31,18 @@
     private static final String EXTRA_CONSUMER_KEY = "EXTRA_CONSUMER_KEY";
     private static final String EXTRA_CONSUMER_SECRET = "EXTRA_CONSUMER_SECRET";
     private static final String EXTRA_SUPPORT_APP_LINKED_NOTEBOOKS = "EXTRA_SUPPORT_APP_LINKED_NOTEBOOKS";
+    private static final String EXTRA_SUGGESTED_NOTEBOOK_NAME = "EXTRA_SUGGESTED_NOTEBOOK_NAME";
     private static final String EXTRA_LOCALE = "EXTRA_LOCALE";
 
     private static final String KEY_TASK = "KEY_TASK";
     private static final String KEY_RESULT_POSTED = "KEY_RESULT_POSTED";
 
-    public static Intent createIntent(Context context, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, Locale locale) {
+    public static Intent createIntent(Context context, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, String suggestedNotebookName, Locale locale) {
         Intent intent = new Intent(context, EvernoteLoginActivity.class);
         intent.putExtra(EXTRA_CONSUMER_KEY, consumerKey);
         intent.putExtra(EXTRA_CONSUMER_SECRET, consumerSecret);
         intent.putExtra(EXTRA_SUPPORT_APP_LINKED_NOTEBOOKS, supportAppLinkedNotebooks);
+        intent.putExtra(EXTRA_SUGGESTED_NOTEBOOK_NAME, suggestedNotebookName);
         intent.putExtra(EXTRA_LOCALE, locale);
         return intent;
     }
@@ -56,7 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
         if (savedInstanceState == null) {
             Bundle args = getIntent().getExtras();
             EvernoteOAuthHelper helper = new EvernoteOAuthHelper(EvernoteSession.getInstance(), args.getString(EXTRA_CONSUMER_KEY),
-                    args.getString(EXTRA_CONSUMER_SECRET), args.getBoolean(EXTRA_SUPPORT_APP_LINKED_NOTEBOOKS, true),
+                    args.getString(EXTRA_CONSUMER_SECRET), args.getBoolean(EXTRA_SUPPORT_APP_LINKED_NOTEBOOKS, true), args.getString(EXTRA_SUGGESTED_NOTEBOOK_NAME),
                     (Locale) args.getSerializable(EXTRA_LOCALE));
 
             mTaskKey = TaskExecutor.getInstance().execute(new EvernoteLoginTask(helper, false), this);
diff --git a/library/src/main/java/com/evernote/client/android/login/EvernoteLoginFragment.java b/library/src/main/java/com/evernote/client/android/login/EvernoteLoginFragment.java
index e8c723d..a9ba27e 100644
--- a/library/src/main/java/com/evernote/client/android/login/EvernoteLoginFragment.java
+++ b/library/src/main/java/com/evernote/client/android/login/EvernoteLoginFragment.java
@@ -40,16 +40,18 @@
     private static final String ARG_CONSUMER_KEY = "consumerKey";
     private static final String ARG_CONSUMER_SECRET = "consumerSecret";
     private static final String ARG_SUPPORT_APP_LINKED_NOTEBOOKS = "supportAppLinkedNotebooks";
+    private static final String ARG_SUGGESTED_NOTEBOOK_NAME = " g ";
+	
     private static final String ARG_LOCALE = "ARG_LOCALE";
 
     private static final String KEY_TASK = "KEY_TASK";
     private static final String KEY_RESULT_POSTED = "KEY_RESULT_POSTED";
 
-    public static EvernoteLoginFragment create(String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, Locale locale) {
-        return create(EvernoteLoginFragment.class, consumerKey, consumerSecret, supportAppLinkedNotebooks, locale);
+    public static EvernoteLoginFragment create(String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, String suggestedNotebookName, Locale locale) {
+        return create(EvernoteLoginFragment.class, consumerKey, consumerSecret, supportAppLinkedNotebooks, suggestedNotebookName, locale);
     }
 
-    public static <T extends EvernoteLoginFragment> T create(Class<T> subClass, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, Locale locale) {
+    public static <T extends EvernoteLoginFragment> T create(Class<T> subClass, String consumerKey, String consumerSecret, boolean supportAppLinkedNotebooks, String suggestedNotebookName, Locale locale) {
         T fragment;
         try {
             fragment = subClass.newInstance();
@@ -61,6 +63,7 @@ public static EvernoteLoginFragment create(String consumerKey, String consumerSe
         args.putString(ARG_CONSUMER_KEY, consumerKey);
         args.putString(ARG_CONSUMER_SECRET, consumerSecret);
         args.putBoolean(ARG_SUPPORT_APP_LINKED_NOTEBOOKS, supportAppLinkedNotebooks);
+        args.putString(ARG_SUGGESTED_NOTEBOOK_NAME, suggestedNotebookName);
         args.putSerializable(ARG_LOCALE, locale);
         fragment.setArguments(args);
 
@@ -78,7 +81,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
             Bundle args = getArguments();
 
             EvernoteOAuthHelper helper = new EvernoteOAuthHelper(EvernoteSession.getInstance(), args.getString(ARG_CONSUMER_KEY),
-                    args.getString(ARG_CONSUMER_SECRET), args.getBoolean(ARG_SUPPORT_APP_LINKED_NOTEBOOKS, true),
+                    args.getString(ARG_CONSUMER_SECRET), args.getBoolean(ARG_SUPPORT_APP_LINKED_NOTEBOOKS, true), args.getString(ARG_SUGGESTED_NOTEBOOK_NAME),
                     (Locale) args.getSerializable(ARG_LOCALE));
 
             mTaskKey = TaskExecutor.getInstance().execute(new EvernoteLoginTask(helper, true), this);
