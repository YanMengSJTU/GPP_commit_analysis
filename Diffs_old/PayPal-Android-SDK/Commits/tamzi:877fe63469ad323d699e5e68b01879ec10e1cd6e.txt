diff --git a/.github/ISSUE_TEMPLATE.md b/.github/ISSUE_TEMPLATE.md
new file mode 100644
index 0000000..67b7c16
--- /dev/null
+++ b/.github/ISSUE_TEMPLATE.md
@@ -0,0 +1,11 @@
+<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->
+### General information
+
+* SDK/Library version: <!-- Example: 4.7.2 -->
+* Environment: <!-- Is this issue in Sandbox or Production? -->
+* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->
+* Android Version and Device: <!-- Example: Motorola Droid Razr Maxx with Android 4.4.2, Samsung S7 with Android 6.0 -->
+
+### Issue description
+
+<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..8b13789
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+
diff --git a/release_notes.md b/CHANGELOG.md
similarity index 57%
rename from release_notes.md
rename to CHANGELOG.md
index 2255919..795c552 100644
--- a/release_notes.md
+++ b/CHANGELOG.md
@@ -1,6 +1,168 @@
 PayPal Android SDK release notes
 ================================
 
+2.16.0
+------
+* Return transactionId on success [#402](https://github.com/paypal/PayPal-Android-SDK/issues/402).
+* Update translations.
+* Update SSL pinning cerificates.
+
+2.15.3
+------
+* Update risk-component to 3.5.7.
+
+2.15.2
+------
+* Add mandatory res folder in aar during release [#383](https://github.com/paypal/PayPal-Android-SDK/issues/383).
+* Updated card.io to 5.5.0.
+* Updated okhttp to 3.6.0.
+
+2.15.1
+------
+* Removed trustall trustmanager to resolve google play security issue [#364](https://github.com/paypal/PayPal-Android-SDK/issues/364).
+* Shows amount properly in all devices [#357](https://github.com/paypal/PayPal-Android-SDK/issues/357).
+
+2.15.0
+------
+* Add support for third-party receivers [iOS #140](https://github.com/paypal/PayPal-iOS-SDK/issues/140). Available as an optional property, `PayPalPayment.payeeEmail()`. This property is only available for PayPal payments, not Direct Credit Card (DCC) payments.
+* Direct Credit Card (DCC) payments are now deprecated in this SDK.  Please use [Braintree Payments](https://www.braintreepayments.com/), a PayPal Company, which is the easiest way to accept PayPal, credit cards, and many other payment methods. All new integrations should [disable direct credit card payments](README.md#disabling-direct-credit-card-payments).
+* Update card.io to 5.4.2.
+
+2.14.6
+------
+* Fix issue where okhttp cannot find the `TrustManager` [#341](https://github.com/paypal/PayPal-Android-SDK/issues/341).
+* Update card.io to 5.4.1.
+
+2.14.5
+------
+* Update okhttp dependency to 3.4.1.
+* Fix crash when app does not have READ_PHONE_STATE permission [#321](https://github.com/paypal/PayPal-Android-SDK/issues/321).
+
+2.14.4
+------
+* Minor bug fixes.
+* Updated gradle version to 2.14.
+* Include `org.json.*` exceptions in default proguard file [#299](https://github.com/paypal/PayPal-Android-SDK/issues/299).
+
+2.14.3
+------
+* Update card.io to 5.4.0.
+* Update okhttp dependency to 3.3.1.
+
+2.14.2
+------
+* Added a new Kotlin SampleApp!
+* Update card.io to 5.3.4.
+* Update build tools.
+
+2.14.1
+------
+* Update card.io to 5.3.2.
+* Add proguard config to aar file.
+* Minor bug fixes.
+
+2.14.0
+------
+* Update `minSdkVersion` to 16.  This is the minimum Android version to communicate over TLSv1.2, which is required to support [a Payment Card Industry (PCI) Council mandate](http://blog.pcisecuritystandards.org/migrating-from-ssl-and-early-tls). All organizations that handle credit card information are required to comply with this standard. As part of this obligation, [PayPal is updating its services](https://github.com/paypal/tls-update) to require TLSv1.2 for all HTTPS connections. To override the minSdkVersion, please see [the readme](README.md#override-minsdkversion).
+* Update okhttp dependency to 3.2.0.
+* Fix issue related to non-ascii characters in user agent [#271](https://github.com/paypal/PayPal-Android-SDK/issues/271).
+
+2.13.3
+------
+* Update okhttp dependency to 3.1.2.
+* Really fixes issue related to okhttp 3.1.2 [#258](https://github.com/paypal/PayPal-Android-SDK/issues/258).
+
+2.13.2
+------
+* Fixes issue related to okhttp 3.1.2 [#258](https://github.com/paypal/PayPal-Android-SDK/issues/258).
+
+2.13.1
+------
+* Fix issue preventing the SDK from app-switching to newer versions of the PayPal App.
+
+2.13.0
+------
+* Fix sandbox pinning issue [#228](https://github.com/paypal/PayPal-Android-SDK/issues/228).
+* Allow complete removal of card.io dependency, effectively disabling direct credit card payments [#226](https://github.com/paypal/PayPal-Android-SDK/issues/226) & [#234](https://github.com/paypal/PayPal-Android-SDK/issues/234).
+* Update okhttp dependency to 3.0.1.
+* Update card.io to 5.3.0.
+
+2.12.5
+------
+* Update okhttp dependency to 2.7.2.
+* Clean up manifest permissions [#233](https://github.com/paypal/PayPal-Android-SDK/issues/233).
+* Minor bug fixes.
+
+2.12.4
+------
+* Documentation Updates for Maven based integrations.
+* Disabled `allowBackup` in Manifest.
+
+2.12.3
+------
+* SDK is now available at Maven Central [#14](https://github.com/paypal/PayPal-Android-SDK/issues/14) & [#208](https://github.com/paypal/PayPal-Android-SDK/issues/208).
+	* `com.paypal.sdk:paypal-android-sdk:2.12.3`.
+
+2.12.2
+------
+* Enable aar packaging.
+* Ability to push to maven.
+
+2.12.1
+------
+* Fix bug introduced in 2.12.0 that caused older devices to fail prematurely.
+
+2.12.0
+------
+* Allow TLSv1.2 for API 16-19 devices, and add a special error message if PayPal requires TLSv1.2 but the device cannot comply.
+* Add a LogCat warning during PayPalService initialization when an Android version < API 16 (JELLY_BEAN) is detected.
+
+2.11.2
+------
+* Minor bug fixes.
+* Update card.io to 5.1.2.
+
+2.11.1
+------
+* Fix crash in `PayPalService.onDestroy()` [#212](https://github.com/paypal/PayPal-Android-SDK/issues/212).
+* Fix case where shipping address selections were inadvertently displayed to the user [#213](https://github.com/paypal/PayPal-Android-SDK/issues/213).
+* Decrease minSdkVersion back down to 10 (GINGERBREAD_MR1).
+* Convert SampleApp to only use Gradle builds.
+
+2.11.0
+------
+* Target Android 23 (M).
+* Update card.io to 5.1.1 (supports new Android 23 Permissions). Note: this version of card.io contains support for more processor architectures.  Please be sure to grab the entire contents of this SDK, including all up-to-date card.io `*.so` files within the `/libs` folder to ensure that card.io will continue to work on these architectures.
+* Increase minSdkVersion to 11 (HONEYCOMB).
+* Update all networking to use HttpURLConnection instead of Apache's HTTP Client.
+* Set all obfuscated classes to use lower case as a workaround for [an Android Tools issue](https://code.google.com/p/android/issues/detail?id=187210).
+
+2.10.1
+------
+* Minor bug fixes.
+
+2.10.0
+------
+* Fixed behavior where `retrieve_shipping_address ` is disabled and no `shipping address` is provided from the app, so it will not default to the PayPal account `shipping address`.
+
+2.9.11
+------
+* Minor bug fixes.
+
+2.9.10
+------
+* Minor bug fixes.
+
+2.9.9
+-----
+* Fix rare crash when making a single payment [#179](https://github.com/paypal/PayPal-Android-SDK/issues/179).
+* Minor bug fixes.
+
+2.9.8
+-----
+* Fix rare crash in `PayPalService` [#166](https://github.com/paypal/PayPal-Android-SDK/issues/166).
+* Minor bug fixes.
+
 2.9.7
 -----
 * Fix rare instance of PAYMENT_CREATION_ERROR.
@@ -50,7 +212,7 @@ PayPal Android SDK release notes
 
 2.8.8
 -----
-* Change "Send Payment" button to "Pay". (see https://github.com/paypal/PayPal-iOS-SDK/issues/174)
+* Change "Send Payment" button to "Pay". (see https://github.com/paypal/PayPal-iOS-SDK/issues/174).
 * Minor bug fixes.
 * Update card.io to 5.0.0.
 
@@ -90,7 +252,7 @@ PayPal Android SDK release notes
 * Fix consent privacy policy and user agreement links, and update the mock link urls.
 * Fix issue where the service would not properly restart after being backgrounded [#117](https://github.com/paypal/PayPal-Android-SDK/issues/117).
   It is now recommended that developers pass the `PayPalConfiguration` object into the PayPal activities, in addition to `PayPalService`.
-  Updated the documentation and sample app with the suggested modifications.
+  Update the documentation and sample app with the suggested modifications.
 * Add documentation on correct `httpcomponents` dependencies, which addresses [#113](https://github.com/paypal/PayPal-Android-SDK/issues/113).
 * Update Visa branding.
 * Minor bug fixes.
@@ -129,7 +291,7 @@ PayPal Android SDK release notes
 
 2.7.0
 -----
-* Add support for Russian Rubles. 
+* Add support for Russian Rubles.
 * Add gradle files to Sample App.
 * Minor fixes to the Consent Activity.
 
@@ -167,12 +329,12 @@ PayPal Android SDK release notes
 
 2.5.2
 -----
-* Update Sample App icons
+* Update Sample App icons.
 * Minor bug fixes.
 
 2.5.1
 -----
-* Fix layout xml issue in SampleApp [#89](https://github.com/paypal/PayPal-Android-SDK/issues/89)
+* Fix layout xml issue in SampleApp [#89](https://github.com/paypal/PayPal-Android-SDK/issues/89).
 
 2.5.0
 -----
@@ -182,11 +344,11 @@ PayPal Android SDK release notes
 
 2.4.0
 -----
-* Add [Profile Sharing](https://github.com/paypal/PayPal-Android-SDK/blob/master/docs/profile_sharing_mobile.md) feature 
-	* Developer selects requested account profile attributes
-	* User may consent to sharing the requested profile data
+* Add [Profile Sharing](https://github.com/paypal/PayPal-Android-SDK/blob/master/docs/profile_sharing_mobile.md) feature.
+	* Developer selects requested account profile attributes.
+	* User may consent to sharing the requested profile data.
 * Fix sluggish performance in Payment Method selection on devices with slower cameras (Nexus 10).
-* Fix issue [#77: Invalid path on some devices](https://github.com/paypal/PayPal-Android-SDK/issues/77)
+* Fix issue [#77: Invalid path on some devices](https://github.com/paypal/PayPal-Android-SDK/issues/77).
 
 2.3.5
 ----
@@ -194,17 +356,17 @@ PayPal Android SDK release notes
 
 2.3.4
 ----
-* Fixed issue [#83: App freezes when calling startService](https://github.com/paypal/PayPal-Android-SDK/issues/83) for realsies this time.
+* Fix issue [#83: App freezes when calling startService](https://github.com/paypal/PayPal-Android-SDK/issues/83) for realsies this time.
 * Restrict phone/pin login where appropriate.
 
 2.3.3
 ----
-* Fixed issue [#83: App freezes when calling startService](https://github.com/paypal/PayPal-Android-SDK/issues/83)
+* Fix issue [#83: App freezes when calling startService](https://github.com/paypal/PayPal-Android-SDK/issues/83).
 * Minor bug fixes.
 
 2.3.2
 ----
-* Re-add Version class for Cordova backward compatibility
+* Re-add Version class for Cordova backward compatibility.
 
 2.3.1
 ----
@@ -215,7 +377,7 @@ PayPal Android SDK release notes
 ----
 * Add user funding option selection.
 * Add app-controlled user shipping address selection (including support for the app to add a new shipping address).
-* Rename zh-Hant_HK -> zh-Hant so that HK is chosen by default for other regions
+* Rename zh-Hant_HK -> zh-Hant so that HK is chosen by default for other regions.
 
 2.2.2
 -----
@@ -232,11 +394,11 @@ PayPal Android SDK release notes
 -----
 * Add support for multiple items per payment.
 * Update PayPal logo.
-* Update card.io library to 3.1.5.  
+* Update card.io library to 3.1.5.
 
 2.1.0
 -----
-* Add integration with PayPal Wallet App (available only on the Samsung app store)
+* Add integration with PayPal Wallet App (available only on the Samsung app store).
 	* In live environment, if the newly released PayPal Wallet app with authenticator is present on a user's device, the PayPal Wallet app will log the user in to the SDK.
 * Fix issue where some email addresses would not be accepted.
 * Fix some Spanish translations.
@@ -275,18 +437,18 @@ PayPal Android SDK release notes
 
 1.2.6
 -----
-* Fix issue where PaymentActivity.EXTRA_DEFAULT_USER_EMAIL was not being handled properly in all cases [47](https://github.com/paypal/PayPal-Android-SDK/issues/47)
+* Fix issue where PaymentActivity.EXTRA_DEFAULT_USER_EMAIL was not being handled properly in all cases [47](https://github.com/paypal/PayPal-Android-SDK/issues/47).
 
 1.2.5
 -----
-* Refactor code to eliminate spurious error message in LogCat [40](https://github.com/paypal/PayPal-Android-SDK/issues/40)
-* Fix validation of PayPalPayment.shortDescription where some credit card payments caused incorrect JSONException [41](https://github.com/paypal/PayPal-Android-SDK/issues/41)
-* Eliminate source of potential NPE [37](https://github.com/paypal/PayPal-Android-SDK/issues/37)
-* Update card.io lib to 3.1.4 (includes fixes for potential NPEs)
+* Refactor code to eliminate spurious error message in LogCat [40](https://github.com/paypal/PayPal-Android-SDK/issues/40).
+* Fix validation of PayPalPayment.shortDescription where some credit card payments caused incorrect JSONException [41](https://github.com/paypal/PayPal-Android-SDK/issues/41).
+* Eliminate source of potential NPE [37](https://github.com/paypal/PayPal-Android-SDK/issues/37).
+* Update card.io lib to 3.1.4 (includes fixes for potential NPEs).
 
 1.2.4
 -----
-* Fix NumberFormatException on some payments in locales that use comma for decimal separator [34](https://github.com/paypal/PayPal-Android-SDK/issues/34)
+* Fix NumberFormatException on some payments in locales that use comma for decimal separator [34](https://github.com/paypal/PayPal-Android-SDK/issues/34).
 
 1.2.3
 -----
@@ -294,54 +456,55 @@ PayPal Android SDK release notes
 
 1.2.2
 -----
-* Fix login page layout issue [20](https://github.com/paypal/PayPal-Android-SDK/issues/20)
-* Add some login error logging
+* Fix login page layout issue [20](https://github.com/paypal/PayPal-Android-SDK/issues/20).
+* Add some login error logging.
 
 1.2.1
 -----
-* Update card.io library to 3.1.3
-* Fix issue [#11: release/debug UI differences](https://github.com/paypal/PayPal-Android-SDK/issues/11)
+* Update card.io library to 3.1.3.
+* Fix issue [#11: release/debug UI differences](https://github.com/paypal/PayPal-Android-SDK/issues/11).
 
 1.2.0
 -----
-* Eliminate the final "Complete" screen
-* Fix Hebrew phone settings detection bug
-* Update card.io library to 3.1.2
+* Eliminate the final "Complete" screen.
+* Fix Hebrew phone settings detection bug.
+* Update card.io library to 3.1.2.
 
 1.1.2
 -----
-* Re-add `Version` class
-* Update card.io library to 3.1.1
-* Support all currencies that are curently accepted by the REST APIs.  See [README](README.md) for details.
-* Fix various localizations
-* Additional localization: ko (Korean)
-* Minor UI cleanup (including [issue 4](https://github.com/paypal/PayPal-Android-SDK/issues/4))
+* Re-add `Version` class.
+* Update card.io library to 3.1.1.
+* Support all currencies that are currently accepted by the REST APIs.  See [README](README.md) for details.
+* Fix various localizations.
+* Additional localization: ko (Korean).
+* Minor UI cleanup (including [issue 4](https://github.com/paypal/PayPal-Android-SDK/issues/4)).
+
+1.1.1
+-----
+* Skipped.
 
 1.1.0
 -----
-* Bug fixes
-* Update card.io to 3.1.0
+* Bug fixes.
+* Update card.io to 3.1.0.
 * Add translations of all strings into ~20 languages, in addition to American English.
-    - Translation choice is controlled by EXTRA_LANGUAGE_OR_LOCALE in PaymentActivity 
+    - Translation choice is controlled by `EXTRA_LANGUAGE_OR_LOCALE` in PaymentActivity.
     - The translations that a few developers had previously created for their own apps will no longer be used by the SDK.
     - NOTE: Default language, if not set by your app, will now be based upon the device's current language setting.
 
-
 1.0.3
 -----
-* Bug fixes
+* Bug fixes.
 
 1.0.2
 -----
-* Several small fixes & improvements
-
+* Several small fixes & improvements.
 
 1.0.1
 -----
-* Update card.io to 3.0.5
-* Minor UI improvements
-* Other small fixes
-
+* Update card.io to 3.0.5.
+* Minor UI improvements.
+* Other small fixes.
 
 1.0.0
 -----
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
new file mode 100644
index 0000000..a0a33ef
--- /dev/null
+++ b/CONTRIBUTING.md
@@ -0,0 +1,3 @@
+# Contribute to the PayPal Android SDK
+
+We love your contributions.  If you're looking to submit changes to the sample app or documentation available within this repo, feel free to submit a PR.
diff --git a/LICENSE.md b/LICENSE
similarity index 93%
rename from LICENSE.md
rename to LICENSE
index 08d12fb..f1d6ea0 100644
--- a/LICENSE.md
+++ b/LICENSE
@@ -1,6 +1,6 @@
 The PayPal Android SDK Sample App is released under the BSD License:
 
-    Copyright (c) 2013, PayPal
+    Copyright (c) 2014-2016 PayPal Holdings, Inc.
     All rights reserved.
 
     Redistribution and use in source and binary forms, with or without
@@ -25,4 +25,4 @@ The PayPal Android SDK Sample App is released under the BSD License:
 
     The views and conclusions contained in the software and documentation are those
     of the authors and should not be interpreted as representing official policies,
-    either expressed or implied, of the FreeBSD Project.
\ No newline at end of file
+    either expressed or implied, of the FreeBSD Project.
diff --git a/README.md b/README.md
index 00b3dad..710dca8 100644
--- a/README.md
+++ b/README.md
@@ -1,7 +1,9 @@
+**Important**: PayPal Mobile SDKs are now Deprecated and only existing integrations are supported. For all new integrations, use [Braintree Direct](https://www.braintreepayments.com/products/braintree-direct) in [supported countries](https://www.braintreepayments.com/country-selection). In other countries, use [Express Checkout](https://developer.paypal.com/docs/accept-payments/express-checkout/ec-braintree-sdk/get-started/) and choose the Braintree SDK integration option.
+
 PayPal Android SDK
 ==================
 
-The PayPal Android SDK makes it easy to add PayPal and credit card payments to mobile apps.
+The PayPal Android SDK makes it easy to add PayPal payments to mobile apps.
 
 *This documentation is available in Japanese: [日本語のドキュメント](docs/ja/README.md).*
 
@@ -13,13 +15,22 @@ The PayPal Android SDK makes it easy to add PayPal and credit card payments to m
 - [Add the SDK to Your Project](#add-the-sdk-to-your-project)
 - [Credentials](#credentials)
 - [International Support](#international-support)
-- [Disabling card.io card scanning](#disabling-cardio-card-scanning)
+- [Disabling Direct Credit Card Payments](#disabling-direct-credit-card-payments)
+- [Override `minSdkVersion`](#override-minsdkversion)
 - [Testing](#testing)
 - [Documentation](#documentation)
 - [Usability](#usability)
-- [Dependency Conflicts](#dependency-conflicts)
-- [Moving to PayPal Android SDK 2.0](#moving-to-paypal-android-sdk-20)
 - [Next Steps](#next-steps)
+- [Contributing](#contributing)
+- [License](#license)
+
+## Add the SDK to Your Project
+
+The PayPal Android SDK is now available at [Maven Repository](https://repo1.maven.org/maven2/com/paypal/sdk/paypal-android-sdk/). The latest version is available via `mavenCentral()`:
+
+```groovy
+compile 'com.paypal.sdk:paypal-android-sdk:2.16.0'
+```
 
 
 ## Use Cases
@@ -29,10 +40,12 @@ The SDK supports two use cases for making payments - **Single Payment** and **Fu
 
 ### Single Payment
 
-Receive immediate payment from a customer's PayPal account or payment card (scanned with [card.io](https://www.card.io/)):
+Receive a one-time payment from a customer's PayPal account or payment card (scanned with [card.io](https://www.card.io/)). This can be either (1) an **immediate** payment which your servers should subsequently **verify**, or (2) an **authorization** for a payment which your servers must subsequently **capture**, or (3) a payment for an **order** which your servers must subsequently **authorize** and **capture**:
 
 1. [Accept a Single Payment](docs/single_payment.md) and receive back a proof of payment.
-2. On your server, [Verify the Payment](https://developer.paypal.com/webapps/developer/docs/integration/mobile/verify-mobile-payment/) (PayPal Developer site) using PayPal's API.
+2. On your server, [Verify the Payment](https://developer.paypal.com/webapps/developer/docs/integration/mobile/verify-mobile-payment/), [Capture the Payment](https://developer.paypal.com/webapps/developer/docs/integration/direct/capture-payment/#capture-the-payment), or [Process the Order](https://developer.paypal.com/webapps/developer/docs/integration/direct/create-process-order/) (PayPal Developer site) using PayPal's API.
+
+*Note:* Direct Credit Card (DCC) payments are now deprecated in this SDK.  Please use [Braintree Payments](https://www.braintreepayments.com/), a PayPal Company, which is the easiest way to accept PayPal, credit cards, and many other payment methods.  All new integrations should [disable direct credit card payments](#disabling-direct-credit-card-payments).
 
 
 ### Future Payments
@@ -62,22 +75,13 @@ The SDK will now use the newest version of the PayPal Wallet App if present on t
 
 ### Limitations
 
-* The integration will _not_ be enabled in any of the [testing](#testing) modes, as the Wallet app does not support this developer testing environonment.
+* The integration will _not_ be enabled in any of the [testing](#testing) modes, as the Wallet app does not support this developer testing environment.
 
 ## Requirements
 
-* Android 2.2 or later
-* card.io card scanning available only on armv7 devices
+* Android 4.1.x (API 16) or later
 * Phone or tablet
 
-
-## Add the SDK to Your Project
-
-1. Download or clone this repo. The SDK includes a .jar, static libraries, release notes, and license acknowledgements. It also includes a sample app.
-2. Copy the contents of the SDK `libs` directory into your project's `libs` directory. The path to these files is important; if it is not exactly correct, the SDK will not work.  (_NOTE:_ If you are using Gradle, copy SDK jar file into your project's `libs` directory, `add as library` to project, and finally copy the SDK folders containing the *.so files into `src/main/jniLibs`.)
-3. Add the open source license acknowledgments from `acknowledgments.md` to your app's acknowledgments.
-
-
 ## Credentials
 
 Your mobile integration requires different `client_id` values for each environment: Live and Test (Sandbox).
@@ -94,6 +98,14 @@ While testing your app, when logging in to PayPal in the SDK's UI you should use
 
 You can create both business and personal Sandbox accounts on the [Sandbox accounts](https://developer.paypal.com/webapps/developer/applications/accounts) page.
 
+#### Sandbox and TLSv1.2
+
+PayPal will be upgrading the endpoint that the PayPal Android SDK uses to communicate with PayPal servers on Jan 18th, 2016.  If you're testing on sandbox with a version of the PayPal Android SDK older than 2.13.0, then you'll start seeing communication failures when using Android devices >= API 16, and < API 20.  Please upgrade to a version [2.13.0](https://github.com/paypal/PayPal-Android-SDK/releases) or higher to fix these errors.
+
+If you're testing on a device older than API 16, Android will not be able to communicate with PayPal, no matter what version of the SDK you use.
+
+These TLS changes coincides with the TLSv1.2 security mandate outlined [here](https://www.paypal-knowledge.com/infocenter/index?page=content&widgetview=true&id=FAQ1914&viewlocale=en_US), and will be followed by a similar change to the Production endpoints at some later date.  For any questions or concerns, please [create an issue](https://github.com/paypal/PayPal-Android-SDK/issues/).
+
 ### Live
 
 To obtain your **live** credentials, you will need to have a business account. If you don't yet have a business account, there is a link at the bottom of that same Applications page that will get you started.
@@ -109,20 +121,27 @@ The SDK has built-in translations for many languages and locales. See [javadoc](
 
 The SDK supports multiple currencies. See [the REST API country and currency documentation](https://developer.paypal.com/webapps/developer/docs/integration/direct/rest_api_payment_country_currency_support/) for a complete, up-to-date list.
 
-Note that currency support differs for credit card versus PayPal payments. Unless you disable credit card acceptance (via the `PaymentActivity.EXTRA_SKIP_CREDIT_CARD` intent extra), **we recommend limiting transactions to currencies supported by both payment types.** Currently these are: USD, GBP, CAD, EUR, JPY.
-
-If your app initiates a transaction with a currency that turns out to be unsupported for the user's selected payment type, then the SDK will display an error to the user and write a message to the console log.
-
+## Disabling Direct Credit Card Payments
 
-## Disabling card.io card scanning
+Disabling Direct Credit Card Payments is now preferred. To completely disable Direct Credit Card (DCC) payments, exclude the card.io library in your application `build.gradle`:
+```groovy
+dependencies {
+    compile('com.paypal.sdk:paypal-android-sdk:2.16.0') {
+        exclude group: 'io.card'
+    }
+}
+```
 
-Future payments does not require card.io card scanning, so it is safe to remove the camera scanner libraries by removing the following folders within the `lib` directory: `armeabi`, `armeabi-v7a`, `mips`, and `x86`.
+## Override `minSdkVersion`
 
-Single Payments can be configured to accept credit cards through manual entry, but without card scanning.  To do so, remove the same libs above, and remove `android.permission.CAMERA` and `android.permission.VIBRATE` permissions from `AndroidManifest.xml`.  If you wish to disable credit card support altogether, follow the above steps to reduce the permissions and sdk footprint, and add the following to the `PayPalConfiguration` initialization:
-```
-config.acceptCreditCards(false);
+As of release `2.14.0`, the `minSdkVersion` has been increased to 16. If you prefer to have your app on a lower `minSdkVersion` and want to leverage the latest SDK, please disable PayPal for versions below API 16, add `xmlns:tools="http://schemas.android.com/tools` inside the manifest's xml declaration, and add the following snippet to your `AndroidManifest.xml`: 
+   
+```xml
+<uses-sdk android:minSdkVersion="INSERT_YOUR_DESIRED_minSdkVersion_HERE" tools:overrideLibrary="com.paypal.android.sdk.payments"/>
 ```
 
+See the [Android manifest merger docs](http://tools.android.com/tech-docs/new-build-system/user-guide/manifest-merger) for more information.
+
 ## Testing
 
 During development, use `environment()` in the `PayPalConfiguration` object to change the environment.  Set it to either `ENVIRONMENT_NO_NETWORK` or `ENVIRONMENT_SANDBOX` to avoid moving real money.
@@ -141,48 +160,18 @@ During development, use `environment()` in the `PayPalConfiguration` object to c
 User interface appearance and behavior is set within the library itself. For the sake of usability and user experience consistency, apps should not attempt to modify the SDK's behavior beyond the documented methods.
 
 
-## Dependency Conflicts
-
-The Android SDK is built on top of the [Apache HttpComponents](http://hc.apache.org/) library included within Android.  This can lead to a conflict if you provide your own copy of either Apache's [httpclient](http://hc.apache.org/httpcomponents-client-4.3.x/index.html), [httpcore](http://hc.apache.org/httpcomponents-core-4.3.x/index.html), or a package that depends on either of these, such as [httpmime](http://hc.apache.org/httpcomponents-client-4.3.x/httpmime/project-reports.html).  To resolve this, you must use [httpclient-android](http://hc.apache.org/httpcomponents-client-4.3.x/android-port.html) instead of httpcore and httpclient.  The following example is the Android equivalent of the httpmime, httpcore, and httpclient dependencies:
-
-```
-compile ('org.apache.httpcomponents:httpclient-android:4.3.5')
-compile ('org.apache.httpcomponents:httpmime:4.3.6') {
-    exclude(group: 'org.apache.httpcomponents', module: 'httpclient')
-}
-```
-
-
-## Moving to PayPal Android SDK 2.0
-
-
-### Upgrade from 1.x
-
-As a major version change, the API introduced in 2.0 is not backward compatible with 1.x integrations. However, the SDK still supports all previous single payment functionality. Upgrading is straightforward.
-
-* Most of the non-payment-specific extras of `PayPalPaymentActivity` have been moved to the `PayPalConfiguration` class, and the service startup has changed to take such a configuration object.
-
-
-
-### Older Libraries
-
-PayPal is in the process of replacing the older "Mobile Payments Libraries" (MPL) with the new PayPal Android and iOS SDKs.
-The new Mobile SDKs are based on the PayPal REST API, while the older MPL uses the Adaptive Payments API.
-
-Until features such as third-party, parallel, and chained payments are available, if needed, you can use MPL:
+## Next Steps
 
- - [MPL on GitHub](https://github.com/paypal/sdk-packages/tree/gh-pages/MPL)
- - [MPL Documentation](https://developer.paypal.com/webapps/developer/docs/classic/mobile/gs_MPL/)
+Depending on your use case, you can now:
 
-Issues related to MPL should be filed in the [sdk-packages repo](https://github.com/paypal/sdk-packages/).
+* [Accept a single payment](docs/single_payment.md)
+* [Obtain user consent](docs/future_payments_mobile.md) to [create future payments](docs/future_payments_server.md).
 
-Developers with existing Express Checkout integrations or who want additional features may wish to use [Mobile Express Checkout](https://developer.paypal.com/webapps/developer/docs/classic/mobile/gs_MEC/)
-in a webview.
 
+## Contributing
 
-## Next Steps
+Please read our [contributing guidelines](CONTRIBUTING.md) prior to submitting a Pull Request.
 
-Depending on your use case, you can now:
+## License
 
-* [Accept a single payment](docs/single_payment.md)
-* [Obtain user consent](docs/future_payments_mobile.md) to [create future payments](docs/future_payments_server.md).
+Please refer to this repo's [license file](LICENSE).
diff --git a/SampleApp-Kotlin/.gitignore b/SampleApp-Kotlin/.gitignore
new file mode 100644
index 0000000..6b91546
--- /dev/null
+++ b/SampleApp-Kotlin/.gitignore
@@ -0,0 +1,32 @@
+# Built application files
+*.apk
+*.ap_
+
+# Files for the dex VM
+*.dex
+
+# Java class files
+*.class
+
+# Generated files
+bin/
+gen/
+
+# Gradle files
+.gradle/
+build/
+
+# Local configuration file (sdk path, etc)
+local.properties
+
+# Eclipse settings files
+.settings/
+
+# IntelliJ project files
+*.iml
+*.ipr
+*.iws
+.idea/
+
+# Misc
+.DS_Store
diff --git a/SampleApp-Kotlin/README.md b/SampleApp-Kotlin/README.md
new file mode 100644
index 0000000..8c0cc6c
--- /dev/null
+++ b/SampleApp-Kotlin/README.md
@@ -0,0 +1,4 @@
+PayPal Android SDK Sample App - Kotlin
+=============================
+
+This is the PayPal Android SDK Sample App using the Kotlin Language.
diff --git a/SampleApp-Kotlin/build.gradle b/SampleApp-Kotlin/build.gradle
new file mode 100644
index 0000000..c30588b
--- /dev/null
+++ b/SampleApp-Kotlin/build.gradle
@@ -0,0 +1,90 @@
+buildscript {
+    ext.kotlin_version = '1.1.50'
+    repositories {
+        jcenter()
+        mavenCentral()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:2.2.0'
+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
+    }
+}
+
+repositories {
+    jcenter()
+    mavenCentral()
+}
+
+apply plugin: 'com.android.application'
+apply plugin: 'kotlin-android'
+
+android {
+    compileSdkVersion 26
+    buildToolsVersion '24.0.1'
+
+    defaultConfig {
+        minSdkVersion 18
+        targetSdkVersion 26
+    }
+
+    signingConfigs {
+        debug {
+            storeFile file('debug.keystore')
+            storePassword 'android'
+            keyAlias 'androiddebugkey'
+            keyPassword 'android'
+        }
+        release {
+            storeFile file('debug.keystore')
+            storePassword 'android'
+            keyAlias 'androiddebugkey'
+            keyPassword 'android'
+        }
+    }
+
+    // Only for SampleApp.
+    // It is failing because the okio version and okhttp is not found, which is expected.
+    lintOptions {
+        abortOnError false
+    }
+
+
+    buildTypes {
+        debug {
+            applicationIdSuffix ".debug"
+            signingConfig signingConfigs.debug
+        }
+
+        release{
+            minifyEnabled true
+            proguardFile getDefaultProguardFile('proguard-android.txt')
+            signingConfig signingConfigs.release
+        }
+    }
+
+    android.applicationVariants.all { variant ->
+        variant.outputs.each { output ->
+            def outputFile = output.outputFile
+            if (outputFile != null && outputFile.name.endsWith('.apk')) {
+                output.outputFile = new File(outputFile.parent, "paypal-sample-app-${variant.name}.apk")
+            }
+        }
+    }
+
+    sourceSets {
+        main.java.srcDirs += 'src/main/kotlin'
+    }
+}
+
+dependencies {
+    if (parent != null) {
+        compile project(path: ':androidSDK', configuration: 'generalDebug')
+    } else {
+        compile('com.paypal.sdk:paypal-android-sdk:2.16.0')
+    }
+    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
+}
+
+task wrapper(type: Wrapper) {
+    gradleVersion = '2.14'
+}
diff --git a/SampleApp-Kotlin/debug.keystore b/SampleApp-Kotlin/debug.keystore
new file mode 100644
index 0000000..bf6ab53
Binary files /dev/null and b/SampleApp-Kotlin/debug.keystore differ
diff --git a/SampleApp-Kotlin/gradle/wrapper/gradle-wrapper.jar b/SampleApp-Kotlin/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000..2c6137b
Binary files /dev/null and b/SampleApp-Kotlin/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/SampleApp-Kotlin/gradle/wrapper/gradle-wrapper.properties b/SampleApp-Kotlin/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
index 0000000..7950115
--- /dev/null
+++ b/SampleApp-Kotlin/gradle/wrapper/gradle-wrapper.properties
@@ -0,0 +1,6 @@
+#Wed Jun 29 16:07:52 CDT 2016
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.14-bin.zip
diff --git a/SampleApp-Kotlin/gradlew b/SampleApp-Kotlin/gradlew
new file mode 100755
index 0000000..9d82f78
--- /dev/null
+++ b/SampleApp-Kotlin/gradlew
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/SampleApp-Kotlin/gradlew.bat b/SampleApp-Kotlin/gradlew.bat
new file mode 100644
index 0000000..72d362d
--- /dev/null
+++ b/SampleApp-Kotlin/gradlew.bat
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windows variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/SampleApp-Kotlin/src/main/AndroidManifest.xml b/SampleApp-Kotlin/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..0aff16a
--- /dev/null
+++ b/SampleApp-Kotlin/src/main/AndroidManifest.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.paypal.example.paypalandroidsdkexample">
+    <!-- WRITE_EXTERNAL_STORAGE permission is only used for testing purposes to store screenshots -->
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <application
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name" >
+        <activity
+            android:name="com.paypal.example.paypalandroidsdkexample.SampleActivity"
+            android:label="@string/app_name" >
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+
+    </application>
+
+</manifest>
diff --git a/SampleApp-Kotlin/src/main/java/com/paypal/example/paypalandroidsdkexample/SampleActivity.kt b/SampleApp-Kotlin/src/main/java/com/paypal/example/paypalandroidsdkexample/SampleActivity.kt
new file mode 100644
index 0000000..e446d3e
--- /dev/null
+++ b/SampleApp-Kotlin/src/main/java/com/paypal/example/paypalandroidsdkexample/SampleActivity.kt
@@ -0,0 +1,312 @@
+package com.paypal.example.paypalandroidsdkexample
+
+import com.paypal.android.sdk.payments.PayPalAuthorization
+import com.paypal.android.sdk.payments.PayPalConfiguration
+import com.paypal.android.sdk.payments.PayPalFuturePaymentActivity
+import com.paypal.android.sdk.payments.PayPalItem
+import com.paypal.android.sdk.payments.PayPalOAuthScopes
+import com.paypal.android.sdk.payments.PayPalPayment
+import com.paypal.android.sdk.payments.PayPalPaymentDetails
+import com.paypal.android.sdk.payments.PayPalProfileSharingActivity
+import com.paypal.android.sdk.payments.PayPalService
+import com.paypal.android.sdk.payments.PaymentActivity
+import com.paypal.android.sdk.payments.PaymentConfirmation
+import com.paypal.android.sdk.payments.ShippingAddress
+
+
+import android.app.Activity
+import android.content.Intent
+import android.net.Uri
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.widget.TextView
+import android.widget.Toast
+
+import org.json.JSONException
+
+import java.math.BigDecimal
+import java.util.Arrays
+import java.util.HashSet
+
+/**
+ * Basic sample using the SDK to make a payment or consent to future payments.
+ *
+ * For sample mobile backend interactions, see
+ * https://github.com/paypal/rest-api-sdk-python/tree/master/samples/mobile_backend
+ */
+class SampleActivity : Activity() {
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_main)
+
+        val intent = Intent(this, PayPalService::class.java)
+        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config)
+        startService(intent)
+    }
+
+    fun onBuyPressed(pressed: View) {
+        /* 
+         * PAYMENT_INTENT_SALE will cause the payment to complete immediately.
+         * Change PAYMENT_INTENT_SALE to 
+         *   - PAYMENT_INTENT_AUTHORIZE to only authorize payment and capture funds later.
+         *   - PAYMENT_INTENT_ORDER to create a payment for authorization and capture
+         *     later via calls from your server.
+         * 
+         * Also, to include additional payment details and an item list, see getStuffToBuy() below.
+         */
+        val thingToBuy = getThingToBuy(PayPalPayment.PAYMENT_INTENT_SALE)
+
+        /*
+         * See getStuffToBuy(..) for examples of some available payment options.
+         */
+
+        val intent = Intent(this@SampleActivity, PaymentActivity::class.java)
+
+        // send the same configuration for restart resiliency
+        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config)
+
+        intent.putExtra(PaymentActivity.EXTRA_PAYMENT, thingToBuy)
+
+        startActivityForResult(intent, REQUEST_CODE_PAYMENT)
+    }
+
+    private fun getThingToBuy(paymentIntent: String): PayPalPayment {
+        return PayPalPayment(BigDecimal("1.75"), "USD", "sample item",
+                paymentIntent)
+    }
+
+    /* 
+     * This method shows use of optional payment details and item list.
+     */
+    private fun getStuffToBuy(paymentIntent: String): PayPalPayment {
+        //--- include an item list, payment amount details
+        val items = arrayOf(
+                PayPalItem("sample item #1", 2, BigDecimal("87.50"), "USD", "sku-12345678"),
+                PayPalItem("free sample item #2", 1, BigDecimal("0.00"), "USD", "sku-zero-price"),
+                PayPalItem("sample item #3 with a longer name", 6, BigDecimal("37.99"), "USD", "sku-33333")
+        )
+        val subtotal = PayPalItem.getItemTotal(items)
+        val shipping = BigDecimal("7.21")
+        val tax = BigDecimal("4.67")
+        val paymentDetails = PayPalPaymentDetails(shipping, subtotal, tax)
+        val amount = subtotal.add(shipping).add(tax)
+        val payment = PayPalPayment(amount, "USD", "sample item", paymentIntent)
+        payment.items(items).paymentDetails(paymentDetails)
+
+        //--- set other optional fields like invoice_number, custom field, and soft_descriptor
+        payment.custom("This is text that will be associated with the payment that the app can use.")
+
+        return payment
+    }
+
+    /*
+     * Add app-provided shipping address to payment
+     */
+    private fun addAppProvidedShippingAddress(paypalPayment: PayPalPayment) {
+        val shippingAddress = ShippingAddress()
+                .recipientName("Mom Parker")
+                .line1("52 North Main St.")
+                .city("Austin")
+                .state("TX")
+                .postalCode("78729")
+                .countryCode("US")
+        paypalPayment.providedShippingAddress(shippingAddress)
+    }
+
+    /*
+     * Enable retrieval of shipping addresses from buyer's PayPal account
+     */
+    private fun enableShippingAddressRetrieval(paypalPayment: PayPalPayment, enable: Boolean) {
+        paypalPayment.enablePayPalShippingAddressesRetrieval(enable)
+    }
+
+    fun onFuturePaymentPressed(pressed: View) {
+        val intent = Intent(this@SampleActivity, PayPalFuturePaymentActivity::class.java)
+
+        // send the same configuration for restart resiliency
+        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config)
+
+        startActivityForResult(intent, REQUEST_CODE_FUTURE_PAYMENT)
+    }
+
+    fun onProfileSharingPressed(pressed: View) {
+        val intent = Intent(this@SampleActivity, PayPalProfileSharingActivity::class.java)
+
+        // send the same configuration for restart resiliency
+        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config)
+
+        intent.putExtra(PayPalProfileSharingActivity.EXTRA_REQUESTED_SCOPES, oauthScopes)
+
+        startActivityForResult(intent, REQUEST_CODE_PROFILE_SHARING)
+    }
+
+    private /* create the set of required scopes
+         * Note: see https://developer.paypal.com/docs/integration/direct/identity/attributes/ for mapping between the
+         * attributes you select for this app in the PayPal developer portal and the scopes required here.
+         */ val oauthScopes: PayPalOAuthScopes
+        get() {
+            val scopes = HashSet(
+                    Arrays.asList(
+                            PayPalOAuthScopes.PAYPAL_SCOPE_EMAIL,
+                            PayPalOAuthScopes.PAYPAL_SCOPE_ADDRESS
+                    )
+            )
+            return PayPalOAuthScopes(scopes)
+        }
+
+    protected fun displayResultText(result: String) {
+        var resultView:TextView = findViewById(R.id.txtResult)
+        resultView.text = "Result : " + result
+        Toast.makeText(
+                applicationContext,
+                result, Toast.LENGTH_LONG).show()
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+        if (requestCode == REQUEST_CODE_PAYMENT) {
+            if (resultCode == Activity.RESULT_OK) {
+                val confirm = data?.getParcelableExtra<PaymentConfirmation>(PaymentActivity.EXTRA_RESULT_CONFIRMATION)
+                if (confirm != null) {
+                    try {
+                        Log.i(TAG, confirm.toJSONObject().toString(4))
+                        Log.i(TAG, confirm.payment.toJSONObject().toString(4))
+                        /**
+                         * TODO: send 'confirm' (and possibly confirm.getPayment() to your server for verification
+                         * or consent completion.
+                         * See https://developer.paypal.com/webapps/developer/docs/integration/mobile/verify-mobile-payment/
+                         * for more details.
+
+                         * For sample mobile backend interactions, see
+                         * https://github.com/paypal/rest-api-sdk-python/tree/master/samples/mobile_backend
+                         */
+                        displayResultText("PaymentConfirmation info received from PayPal")
+
+
+                    } catch (e: JSONException) {
+                        Log.e(TAG, "an extremely unlikely failure occurred: ", e)
+                    }
+
+                }
+            } else if (resultCode == Activity.RESULT_CANCELED) {
+                Log.i(TAG, "The user canceled.")
+            } else if (resultCode == PaymentActivity.RESULT_EXTRAS_INVALID) {
+                Log.i(
+                        TAG,
+                        "An invalid Payment or PayPalConfiguration was submitted. Please see the docs.")
+            }
+        } else if (requestCode == REQUEST_CODE_FUTURE_PAYMENT) {
+            if (resultCode == Activity.RESULT_OK) {
+                val auth = data?.getParcelableExtra<PayPalAuthorization>(PayPalFuturePaymentActivity.EXTRA_RESULT_AUTHORIZATION)
+                if (auth != null) {
+                    try {
+                        Log.i("FuturePaymentExample", auth.toJSONObject().toString(4))
+
+                        val authorization_code = auth.authorizationCode
+                        Log.i("FuturePaymentExample", authorization_code)
+
+                        sendAuthorizationToServer(auth)
+                        displayResultText("Future Payment code received from PayPal")
+
+                    } catch (e: JSONException) {
+                        Log.e("FuturePaymentExample", "an extremely unlikely failure occurred: ", e)
+                    }
+
+                }
+            } else if (resultCode == Activity.RESULT_CANCELED) {
+                Log.i("FuturePaymentExample", "The user canceled.")
+            } else if (resultCode == PayPalFuturePaymentActivity.RESULT_EXTRAS_INVALID) {
+                Log.i(
+                        "FuturePaymentExample",
+                        "Probably the attempt to previously start the PayPalService had an invalid PayPalConfiguration. Please see the docs.")
+            }
+        } else if (requestCode == REQUEST_CODE_PROFILE_SHARING) {
+            if (resultCode == Activity.RESULT_OK) {
+                val auth = data?.getParcelableExtra<PayPalAuthorization>(PayPalProfileSharingActivity.EXTRA_RESULT_AUTHORIZATION)
+                if (auth != null) {
+                    try {
+                        Log.i("ProfileSharingExample", auth.toJSONObject().toString(4))
+
+                        val authorization_code = auth.authorizationCode
+                        Log.i("ProfileSharingExample", authorization_code)
+
+                        sendAuthorizationToServer(auth)
+                        displayResultText("Profile Sharing code received from PayPal")
+
+                    } catch (e: JSONException) {
+                        Log.e("ProfileSharingExample", "an extremely unlikely failure occurred: ", e)
+                    }
+
+                }
+            } else if (resultCode == Activity.RESULT_CANCELED) {
+                Log.i("ProfileSharingExample", "The user canceled.")
+            } else if (resultCode == PayPalFuturePaymentActivity.RESULT_EXTRAS_INVALID) {
+                Log.i(
+                        "ProfileSharingExample",
+                        "Probably the attempt to previously start the PayPalService had an invalid PayPalConfiguration. Please see the docs.")
+            }
+        }
+    }
+
+    private fun sendAuthorizationToServer(authorization: PayPalAuthorization) {
+
+        /**
+         * TODO: Send the authorization response to your server, where it can
+         * exchange the authorization code for OAuth access and refresh tokens.
+
+         * Your server must then store these tokens, so that your server code
+         * can execute payments for this user in the future.
+
+         * A more complete example that includes the required app-server to
+         * PayPal-server integration is available from
+         * https://github.com/paypal/rest-api-sdk-python/tree/master/samples/mobile_backend
+         */
+
+    }
+
+    fun onFuturePaymentPurchasePressed(pressed: View) {
+        // Get the Client Metadata ID from the SDK
+        val metadataId = PayPalConfiguration.getClientMetadataId(this)
+
+        Log.i("FuturePaymentExample", "Client Metadata ID: " + metadataId)
+
+        // TODO: Send metadataId and transaction details to your server for processing with
+        // PayPal...
+        displayResultText("Client Metadata Id received from SDK")
+    }
+
+    public override fun onDestroy() {
+        // Stop service when done
+        stopService(Intent(this, PayPalService::class.java))
+        super.onDestroy()
+    }
+
+    companion object {
+        private val TAG = "paymentExample"
+        /**
+         * - Set to PayPalConfiguration.ENVIRONMENT_PRODUCTION to move real money.
+
+         * - Set to PayPalConfiguration.ENVIRONMENT_SANDBOX to use your test credentials
+         * from https://developer.paypal.com
+
+         * - Set to PayPalConfiguration.ENVIRONMENT_NO_NETWORK to kick the tires
+         * without communicating to PayPal's servers.
+         */
+        private val CONFIG_ENVIRONMENT = PayPalConfiguration.ENVIRONMENT_NO_NETWORK
+
+        // note that these credentials will differ between live & sandbox environments.
+        private val CONFIG_CLIENT_ID = "credentials from developer.paypal.com"
+
+        private val REQUEST_CODE_PAYMENT = 1
+        private val REQUEST_CODE_FUTURE_PAYMENT = 2
+        private val REQUEST_CODE_PROFILE_SHARING = 3
+
+        private val config = PayPalConfiguration()
+                .environment(CONFIG_ENVIRONMENT)
+                .clientId(CONFIG_CLIENT_ID)
+                .merchantName("Example Merchant")
+                .merchantPrivacyPolicyUri(Uri.parse("https://www.example.com/privacy"))
+                .merchantUserAgreementUri(Uri.parse("https://www.example.com/legal"))
+    }
+}
diff --git a/SampleApp/res/drawable-hdpi/ic_launcher.png b/SampleApp-Kotlin/src/main/res/drawable-hdpi/ic_launcher.png
similarity index 100%
rename from SampleApp/res/drawable-hdpi/ic_launcher.png
rename to SampleApp-Kotlin/src/main/res/drawable-hdpi/ic_launcher.png
diff --git a/SampleApp/res/drawable-mdpi/ic_launcher.png b/SampleApp-Kotlin/src/main/res/drawable-mdpi/ic_launcher.png
similarity index 100%
rename from SampleApp/res/drawable-mdpi/ic_launcher.png
rename to SampleApp-Kotlin/src/main/res/drawable-mdpi/ic_launcher.png
diff --git a/SampleApp/res/drawable-xhdpi/ic_launcher.png b/SampleApp-Kotlin/src/main/res/drawable-xhdpi/ic_launcher.png
similarity index 100%
rename from SampleApp/res/drawable-xhdpi/ic_launcher.png
rename to SampleApp-Kotlin/src/main/res/drawable-xhdpi/ic_launcher.png
diff --git a/SampleApp/res/drawable-xxxhdpi/ic_launcher.png b/SampleApp-Kotlin/src/main/res/drawable-xxxhdpi/ic_launcher.png
similarity index 100%
rename from SampleApp/res/drawable-xxxhdpi/ic_launcher.png
rename to SampleApp-Kotlin/src/main/res/drawable-xxxhdpi/ic_launcher.png
diff --git a/SampleApp-Kotlin/src/main/res/layout/activity_main.xml b/SampleApp-Kotlin/src/main/res/layout/activity_main.xml
new file mode 100644
index 0000000..9355292
--- /dev/null
+++ b/SampleApp-Kotlin/src/main/res/layout/activity_main.xml
@@ -0,0 +1,59 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context=".SampleActivity" >
+
+   <LinearLayout
+       android:id="@+id/wrapper"
+       android:layout_width="match_parent"
+       android:layout_height="match_parent"
+       android:layout_alignParentRight="true"
+       android:layout_centerVertical="true"
+       android:orientation="vertical" >
+
+       <Button
+           android:id="@+id/buyItBtn"
+           android:layout_width="match_parent"
+           android:layout_height="wrap_content"
+           android:layout_marginTop="20dp"
+           android:onClick="onBuyPressed"
+           android:text="Buy a Thing" />
+
+       <Button
+           android:id="@+id/futurePaymentBtn"
+           android:layout_width="match_parent"
+           android:layout_height="wrap_content"
+           android:layout_marginTop="20dp"
+           android:onClick="onFuturePaymentPressed"
+           android:text="Future Payment Consent" />
+
+       <Button
+           android:id="@+id/futurePaymentPurchaseBtn"
+           android:layout_width="match_parent"
+           android:layout_height="wrap_content"
+           android:layout_marginTop="20dp"
+           android:onClick="onFuturePaymentPurchasePressed"
+           android:text="Future Payment Purchase" />
+
+        <Button
+           android:id="@+id/profileSharingBtn"
+           android:layout_width="match_parent"
+           android:layout_height="wrap_content"
+           android:layout_marginTop="20dp"
+           android:onClick="onProfileSharingPressed"
+           android:text="Profile Sharing Consent" />
+
+       <TextView
+           android:layout_width="wrap_content"
+           android:layout_height="wrap_content"
+           android:textAppearance="?android:attr/textAppearanceSmall"
+           android:text=""
+           android:id="@+id/txtResult" />
+   </LinearLayout>
+
+</RelativeLayout>
diff --git a/SampleApp/res/values-sw600dp/dimens.xml b/SampleApp-Kotlin/src/main/res/values-sw600dp/dimens.xml
similarity index 93%
rename from SampleApp/res/values-sw600dp/dimens.xml
rename to SampleApp-Kotlin/src/main/res/values-sw600dp/dimens.xml
index 1ba777d..44f01db 100644
--- a/SampleApp/res/values-sw600dp/dimens.xml
+++ b/SampleApp-Kotlin/src/main/res/values-sw600dp/dimens.xml
@@ -5,4 +5,4 @@
          screen margins) for sw600dp devices (e.g. 7" tablets) here.
     -->
 
-</resources>
\ No newline at end of file
+</resources>
diff --git a/SampleApp/res/values-sw720dp-land/dimens.xml b/SampleApp-Kotlin/src/main/res/values-sw720dp-land/dimens.xml
similarity index 95%
rename from SampleApp/res/values-sw720dp-land/dimens.xml
rename to SampleApp-Kotlin/src/main/res/values-sw720dp-land/dimens.xml
index eee741a..61e3fa8 100644
--- a/SampleApp/res/values-sw720dp-land/dimens.xml
+++ b/SampleApp-Kotlin/src/main/res/values-sw720dp-land/dimens.xml
@@ -6,4 +6,4 @@
     -->
     <dimen name="activity_horizontal_margin">128dp</dimen>
 
-</resources>
\ No newline at end of file
+</resources>
diff --git a/SampleApp/res/values/dimens.xml b/SampleApp-Kotlin/src/main/res/values/dimens.xml
similarity index 92%
rename from SampleApp/res/values/dimens.xml
rename to SampleApp-Kotlin/src/main/res/values/dimens.xml
index 9a3959b..048747a 100644
--- a/SampleApp/res/values/dimens.xml
+++ b/SampleApp-Kotlin/src/main/res/values/dimens.xml
@@ -2,4 +2,4 @@
 <resources>
     <dimen name="activity_horizontal_margin">10dip</dimen>
     <dimen name="activity_vertical_margin">10dip</dimen>
-</resources>
\ No newline at end of file
+</resources>
diff --git a/SampleApp/res/values/strings.xml b/SampleApp-Kotlin/src/main/res/values/strings.xml
similarity index 89%
rename from SampleApp/res/values/strings.xml
rename to SampleApp-Kotlin/src/main/res/values/strings.xml
index 9afbea7..b3a2454 100644
--- a/SampleApp/res/values/strings.xml
+++ b/SampleApp-Kotlin/src/main/res/values/strings.xml
@@ -3,4 +3,4 @@
 
     <string name="app_name">PayPal SDK Example</string>
 
-</resources>
\ No newline at end of file
+</resources>
diff --git a/SampleApp/.classpath b/SampleApp/.classpath
deleted file mode 100644
index 7bd9a3f..0000000
--- a/SampleApp/.classpath
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK/alpha"/>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.DEPENDENCIES"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
diff --git a/SampleApp/.project b/SampleApp/.project
deleted file mode 100644
index bf6eaec..0000000
--- a/SampleApp/.project
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>PayPalSDKExample</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/SampleApp/.settings/org.eclipse.jdt.ui.prefs b/SampleApp/.settings/org.eclipse.jdt.ui.prefs
deleted file mode 100644
index fe89f28..0000000
--- a/SampleApp/.settings/org.eclipse.jdt.ui.prefs
+++ /dev/null
@@ -1,2 +0,0 @@
-eclipse.preferences.version=1
-formatter_settings_version=12
diff --git a/SampleApp/AndroidManifest.xml b/SampleApp/AndroidManifest.xml
deleted file mode 100644
index 7c91903..0000000
--- a/SampleApp/AndroidManifest.xml
+++ /dev/null
@@ -1,56 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.paypal.example.paypalandroidsdkexample"
-    android:versionCode="1"
-    android:versionName="1.0" >
-
-    <uses-sdk
-        android:minSdkVersion="8"
-        android:targetSdkVersion="21" />
-    
-    <!-- for card.io card scanning -->
-    <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.VIBRATE" />
-    
-    <uses-feature android:name="android.hardware.camera" android:required="false" />
-    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />
-
-    <!-- for most things, including card.io & paypal -->
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-    <uses-permission android:name="android.permission.INTERNET"/>
-
-    <application
-        android:allowBackup="true"
-        android:icon="@drawable/ic_launcher"
-        android:label="@string/app_name" >
-        <activity
-            android:name="com.paypal.example.paypalandroidsdkexample.SampleActivity"
-            android:label="@string/app_name" >
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        
-        <service android:name="com.paypal.android.sdk.payments.PayPalService"
-            android:exported="false" />
-        
-        <activity android:name="com.paypal.android.sdk.payments.PaymentActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.LoginActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.PaymentMethodActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.PaymentConfirmActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.PayPalFuturePaymentActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.FuturePaymentConsentActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.FuturePaymentInfoActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.PayPalProfileSharingActivity" />
-        <activity android:name="com.paypal.android.sdk.payments.ProfileSharingConsentActivity" />
-
-        <activity
-            android:name="io.card.payment.CardIOActivity"
-            android:configChanges="keyboardHidden|orientation" />
-        <activity android:name="io.card.payment.DataEntryActivity" />
-        
-    </application>
-
-</manifest>
\ No newline at end of file
diff --git a/SampleApp/README.md b/SampleApp/README.md
index 46c7137..fde707e 100644
--- a/SampleApp/README.md
+++ b/SampleApp/README.md
@@ -1,4 +1,4 @@
 PayPal Android SDK Sample App
 =============================
 
-All users can build this sample app as-is.
\ No newline at end of file
+All users can build this sample app as-is.
diff --git a/SampleApp/ant.properties b/SampleApp/ant.properties
deleted file mode 100644
index d587f79..0000000
--- a/SampleApp/ant.properties
+++ /dev/null
@@ -1,19 +0,0 @@
-# This file is used to override default values used by the Ant build system.
-#
-# This file must be checked in Version Control Systems, as it is
-# integral to the build system of your project.
-
-# This file is only used by the Ant script.
-
-# You can use this to override default values such as
-#  'source.dir' for the location of your java source folder and
-#  'out.dir' for the location of your output folder.
-
-# You can also use it define how the release builds are signed by declaring
-# the following properties:
-#  'key.store' for the location of your keystore and
-#  'key.alias' for the name of the key to use.
-# The password will be asked during the build when you use the 'release' target.
-
-key.store=example.keystore
-key.alias=example-alias
\ No newline at end of file
diff --git a/SampleApp/build.gradle b/SampleApp/build.gradle
index 7139030..08dd744 100644
--- a/SampleApp/build.gradle
+++ b/SampleApp/build.gradle
@@ -1,40 +1,66 @@
 buildscript {
     repositories {
+        jcenter()
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.android.tools.build:gradle:2.2.0'
     }
 }
 
-ext {
-    libsSrcDir = new File("${projectDir}/libs")
+repositories {
+    maven {
+        // Used for downloading dependency com.github.lkorth:device-automator
+        url "https://jitpack.io"
+    }
+    jcenter()
+    mavenCentral()
 }
 
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion 22
-    buildToolsVersion '22.0.1'
+    compileSdkVersion 26
+    buildToolsVersion '24.0.1'
+
+    defaultConfig {
+        minSdkVersion 18
+        targetSdkVersion 26
+        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
+    }
 
     signingConfigs {
-        myConfig {
-            storeFile file("example.keystore")
-            storePassword "abc123"
-            keyAlias "example-alias"
-            keyPassword "abc123"
+        debug {
+            storeFile file('debug.keystore')
+            storePassword 'android'
+            keyAlias 'androiddebugkey'
+            keyPassword 'android'
         }
+        release {
+            storeFile file('debug.keystore')
+            storePassword 'android'
+            keyAlias 'androiddebugkey'
+            keyPassword 'android'
+        }
+    }
+
+    // Only for SampleApp.
+    // It is failing because the okio version and okhttp is not found, which is expected.
+    lintOptions {
+        abortOnError false
     }
 
+
     buildTypes {
         debug {
             applicationIdSuffix ".debug"
+            signingConfig signingConfigs.debug
         }
 
         release{
             minifyEnabled true
-            proguardFile file('paypal-proguard.cnf')
-            signingConfig signingConfigs.myConfig
+            proguardFile getDefaultProguardFile('proguard-android.txt')
+            signingConfig signingConfigs.release
         }
     }
 
@@ -47,28 +73,35 @@ android {
         }
     }
 
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            resources.srcDirs = ['src']
-            res.srcDirs = ['res']
-            assets.srcDirs = ['assets']
-            jniLibs.srcDirs = ['libs']
-        }
+    productFlavors {
+        general
+        partner
     }
 }
 
+configurations.all {
+    resolutionStrategy.force 'com.android.support:support-annotations:24.0.0'
+}
+
+
 dependencies {
-    compile fileTree(dir: libsSrcDir, include: '*.jar')
-    compile files("${buildDir}/native-libs/native-libs.jar")
+    if (parent != null) {
+        generalCompile project(path: ':androidSDK', configuration: 'generalDebug')
+        partnerCompile project(path: ':androidSDK', configuration: 'partnerDebug')
+    } else {
+        compile('com.paypal.sdk:paypal-android-sdk:2.16.0')
+    }
+    compile 'com.google.android.gms:play-services-wallet:8.4.0'
+
+    testCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
+    androidTestCompile 'com.github.lkorth:device-automator:30238040d8'
+    testCompile 'com.google.dexmaker:dexmaker-mockito:1.1'
+    testCompile 'com.android.support.test.espresso:espresso-intents:2.2.1'
+    testCompile 'com.android.support.test.espresso:espresso-web:2.2.1'
+    testCompile 'com.android.support.test:runner:0.4.1'
+    testCompile 'com.android.support.test:rules:0.4.1'
 }
 
-task nativeLibsToJar(
-        type: Jar,
-        description: 'create a jar archive of the native libs') {
-    destinationDir file("${buildDir}/native-libs")
-    baseName 'native-libs'
-    from fileTree(dir: libsSrcDir, include: '**/*.so')
-    into 'lib/'
+task wrapper(type: Wrapper) {
+    gradleVersion = '2.14.1'
 }
diff --git a/SampleApp/build.xml b/SampleApp/build.xml
deleted file mode 100644
index d523439..0000000
--- a/SampleApp/build.xml
+++ /dev/null
@@ -1,92 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project name="SampleActivity" default="help">
-
-    <!-- The local.properties file is created and updated by the 'android' tool.
-         It contains the path to the SDK. It should *NOT* be checked into
-         Version Control Systems. -->
-    <property file="local.properties" />
-
-    <!-- The ant.properties file can be created by you. It is only edited by the
-         'android' tool to add properties to it.
-         This is the place to change some Ant specific build properties.
-         Here are some properties you may want to change/update:
-
-         source.dir
-             The name of the source directory. Default is 'src'.
-         out.dir
-             The name of the output directory. Default is 'bin'.
-
-         For other overridable properties, look at the beginning of the rules
-         files in the SDK, at tools/ant/build.xml
-
-         Properties related to the SDK location or the project target should
-         be updated using the 'android' tool with the 'update' action.
-
-         This file is an integral part of the build system for your
-         application and should be checked into Version Control Systems.
-
-         -->
-    <property file="ant.properties" />
-
-    <!-- if sdk.dir was not set from one of the property file, then
-         get it from the ANDROID_HOME env var.
-         This must be done before we load project.properties since
-         the proguard config can use sdk.dir -->
-    <property environment="env" />
-    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
-        <isset property="env.ANDROID_HOME" />
-    </condition>
-
-    <!-- The project.properties file is created and updated by the 'android'
-         tool, as well as ADT.
-
-         This contains project specific properties such as project target, and library
-         dependencies. Lower level build properties are stored in ant.properties
-         (or in .classpath for Eclipse projects).
-
-         This file is an integral part of the build system for your
-         application and should be checked into Version Control Systems. -->
-    <loadproperties srcFile="project.properties" />
-
-    <!-- quick check on sdk.dir -->
-    <fail
-            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
-            unless="sdk.dir"
-    />
-
-    <!--
-        Import per project custom build rules if present at the root of the project.
-        This is the place to put custom intermediary targets such as:
-            -pre-build
-            -pre-compile
-            -post-compile (This is typically used for code obfuscation.
-                           Compiled code location: ${out.classes.absolute.dir}
-                           If this is not done in place, override ${out.dex.input.absolute.dir})
-            -post-package
-            -post-build
-            -pre-clean
-    -->
-    <import file="custom_rules.xml" optional="true" />
-
-    <!-- Import the actual build file.
-
-         To customize existing targets, there are two options:
-         - Customize only one target:
-             - copy/paste the target into this file, *before* the
-               <import> task.
-             - customize it to your needs.
-         - Customize the whole content of build.xml
-             - copy/paste the content of the rules files (minus the top node)
-               into this file, replacing the <import> task.
-             - customize to your needs.
-
-         ***********************
-         ****** IMPORTANT ******
-         ***********************
-         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
-         in order to avoid having your file be overridden by tools such as "android update project"
-    -->
-    <!-- version-tag: 1 -->
-    <import file="${sdk.dir}/tools/ant/build.xml" />
-
-</project>
diff --git a/SampleApp/debug.keystore b/SampleApp/debug.keystore
new file mode 100644
index 0000000..bf6ab53
Binary files /dev/null and b/SampleApp/debug.keystore differ
diff --git a/SampleApp/gradle/wrapper/gradle-wrapper.jar b/SampleApp/gradle/wrapper/gradle-wrapper.jar
index c97a8bd..3baa851 100644
Binary files a/SampleApp/gradle/wrapper/gradle-wrapper.jar and b/SampleApp/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/SampleApp/gradle/wrapper/gradle-wrapper.properties b/SampleApp/gradle/wrapper/gradle-wrapper.properties
index 908e60d..9d849ae 100644
--- a/SampleApp/gradle/wrapper/gradle-wrapper.properties
+++ b/SampleApp/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Nov 26 10:39:47 CST 2014
+#Thu Sep 22 16:47:15 CDT 2016
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.2.1-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-bin.zip
diff --git a/SampleApp/gradlew b/SampleApp/gradlew
index 91a7e26..27309d9 100755
--- a/SampleApp/gradlew
+++ b/SampleApp/gradlew
@@ -6,12 +6,30 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
@@ -30,6 +48,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,31 +59,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
-APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -90,7 +89,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -114,6 +113,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
diff --git a/SampleApp/gradlew.bat b/SampleApp/gradlew.bat
index 8a0b282..f6d5974 100644
--- a/SampleApp/gradlew.bat
+++ b/SampleApp/gradlew.bat
@@ -1,90 +1,90 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windows variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/SampleApp/libs/PayPalAndroidSDK-2.9.7.jar b/SampleApp/libs/PayPalAndroidSDK-2.9.7.jar
deleted file mode 100644
index 45e5167..0000000
Binary files a/SampleApp/libs/PayPalAndroidSDK-2.9.7.jar and /dev/null differ
diff --git a/SampleApp/libs/armeabi-v7a/libcardioDecider.so b/SampleApp/libs/armeabi-v7a/libcardioDecider.so
deleted file mode 100644
index 8d77e39..0000000
Binary files a/SampleApp/libs/armeabi-v7a/libcardioDecider.so and /dev/null differ
diff --git a/SampleApp/libs/armeabi-v7a/libcardioRecognizer.so b/SampleApp/libs/armeabi-v7a/libcardioRecognizer.so
deleted file mode 100644
index 52f170f..0000000
Binary files a/SampleApp/libs/armeabi-v7a/libcardioRecognizer.so and /dev/null differ
diff --git a/SampleApp/libs/armeabi-v7a/libcardioRecognizer_tegra2.so b/SampleApp/libs/armeabi-v7a/libcardioRecognizer_tegra2.so
deleted file mode 100644
index f4107a5..0000000
Binary files a/SampleApp/libs/armeabi-v7a/libcardioRecognizer_tegra2.so and /dev/null differ
diff --git a/SampleApp/libs/armeabi-v7a/libopencv_core.so b/SampleApp/libs/armeabi-v7a/libopencv_core.so
deleted file mode 100644
index e949652..0000000
Binary files a/SampleApp/libs/armeabi-v7a/libopencv_core.so and /dev/null differ
diff --git a/SampleApp/libs/armeabi-v7a/libopencv_imgproc.so b/SampleApp/libs/armeabi-v7a/libopencv_imgproc.so
deleted file mode 100644
index a6f5e9d..0000000
Binary files a/SampleApp/libs/armeabi-v7a/libopencv_imgproc.so and /dev/null differ
diff --git a/SampleApp/libs/armeabi/libcardioDecider.so b/SampleApp/libs/armeabi/libcardioDecider.so
deleted file mode 100644
index aa7c1ae..0000000
Binary files a/SampleApp/libs/armeabi/libcardioDecider.so and /dev/null differ
diff --git a/SampleApp/libs/mips/libcardioDecider.so b/SampleApp/libs/mips/libcardioDecider.so
deleted file mode 100644
index 5c816ba..0000000
Binary files a/SampleApp/libs/mips/libcardioDecider.so and /dev/null differ
diff --git a/SampleApp/libs/x86/libcardioDecider.so b/SampleApp/libs/x86/libcardioDecider.so
deleted file mode 100644
index 4704634..0000000
Binary files a/SampleApp/libs/x86/libcardioDecider.so and /dev/null differ
diff --git a/SampleApp/paypal-proguard.cnf b/SampleApp/paypal-proguard.cnf
deleted file mode 100644
index ad771e1..0000000
--- a/SampleApp/paypal-proguard.cnf
+++ /dev/null
@@ -1,95 +0,0 @@
-# If your application, applet, servlet, library, etc., contains enumeration
-# classes, you'll have to preserve some special methods. Enumerations were
-# introduced in Java 5. The java compiler translates enumerations into classes
-# with a special structure. Notably, the classes contain implementations of some
-# static methods that the run-time environment accesses by introspection (Isn't
-# that just grand? Introspection is the self-modifying code of a new
-# generation). You have to specify these explicitly, to make sure they aren't
-# removed or obfuscated:
-
--keepclassmembers enum * {
-    public static **[] values();
-    public static ** valueOf(java.lang.String);
-}
-
-# More complex applications, applets, servlets, libraries, etc., may contain
-# classes that are serialized. Depending on the way in which they are used, they
-# may require special attention
-
--keepclassmembers class * implements java.io.Serializable {
-    static final long serialVersionUID;
-    private static final java.io.ObjectStreamField[] serialPersistentFields;
-    private void writeObject(java.io.ObjectOutputStream);
-    private void readObject(java.io.ObjectInputStream);
-    java.lang.Object writeReplace();
-    java.lang.Object readResolve();
-}
-
-# --- RECOMMENDED ANDROID CONFIG ------------------------------------------
-
--keep public class * extends android.app.Activity
--keep public class * extends android.app.Application
--keep public class * extends android.app.Service
--keep public class * extends android.content.BroadcastReceiver
--keep public class * extends android.content.ContentProvider
-
--keep public class * extends android.view.View {
-    public <init>(android.content.Context);
-    public <init>(android.content.Context, android.util.AttributeSet);
-    public <init>(android.content.Context, android.util.AttributeSet, int);
-    public void set*(...);
-}
-
--keepclasseswithmembers class * {
-    public <init>(android.content.Context, android.util.AttributeSet);
-}
-
--keepclasseswithmembers class * {
-    public <init>(android.content.Context, android.util.AttributeSet, int);
-}
-
--keepclassmembers class * implements android.os.Parcelable {
-    static android.os.Parcelable$Creator CREATOR;
-}
-
-
-# ---- REQUIRED card.io CONFIG ----------------------------------------
-# card.io is a native lib, so anything crossing JNI must not be changed
-
-# Don't obfuscate DetectionInfo or public fields, since
-# it is used by native methods
--keep class io.card.payment.DetectionInfo
--keepclassmembers class io.card.payment.DetectionInfo {
-    public *;
-}
-
--keep class io.card.payment.CreditCard
--keep class io.card.payment.CreditCard$1
--keepclassmembers class io.card.payment.CreditCard {
-	*;
-}
-
--keepclassmembers class io.card.payment.CardScanner {
-	*** onEdgeUpdate(...);
-}
-
-# Don't mess with classes with native methods
-
--keepclasseswithmembers class * {
-    native <methods>;
-}
-
--keepclasseswithmembernames class * {
-    native <methods>;
-}
-
--keep public class io.card.payment.* {
-    public protected *;
-}
-
-
-# -------- PayPal SDK ----------
-# (does not include card.io)
-
--dontwarn com.google.android.gms.**
--dontwarn android.support.v4.**
diff --git a/SampleApp/proguard-project.txt b/SampleApp/proguard-project.txt
deleted file mode 100644
index 6c6403a..0000000
--- a/SampleApp/proguard-project.txt
+++ /dev/null
@@ -1,22 +0,0 @@
-# To enable ProGuard in your project, edit project.properties
-# to define the proguard.config property as described in that file.
-#
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in ${sdk.dir}/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the ProGuard
-# include property in project.properties.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
-
-@proguard-paypal.cnf
diff --git a/SampleApp/project.properties b/SampleApp/project.properties
deleted file mode 100644
index 6e18427..0000000
--- a/SampleApp/project.properties
+++ /dev/null
@@ -1,14 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-#
-# This file must be checked in Version Control Systems.
-#
-# To customize properties used by the Ant build system edit
-# "ant.properties", and override values to adapt the script to your
-# project structure.
-#
-# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
-#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
-
-# Project target.
-target=android-21
diff --git a/SampleApp/res/values-v11/styles.xml b/SampleApp/res/values-v11/styles.xml
deleted file mode 100644
index 541752f..0000000
--- a/SampleApp/res/values-v11/styles.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<resources>
-
-    <!--
-        Base application theme for API 11+. This theme completely replaces
-        AppBaseTheme from res/values/styles.xml on API 11+ devices.
-    -->
-    <style name="AppBaseTheme" parent="android:Theme.Holo.Light">
-        <!-- API 11 theme customizations can go here. -->
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/SampleApp/res/values-v14/styles.xml b/SampleApp/res/values-v14/styles.xml
deleted file mode 100644
index f20e015..0000000
--- a/SampleApp/res/values-v14/styles.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<resources>
-
-    <!--
-        Base application theme for API 14+. This theme completely replaces
-        AppBaseTheme from BOTH res/values/styles.xml and
-        res/values-v11/styles.xml on API 14+ devices.
-    -->
-    <style name="AppBaseTheme" parent="android:Theme.Holo.Light.DarkActionBar">
-        <!-- API 14 theme customizations can go here. -->
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/SampleApp/src/androidTest/java/com/paypal/example/paypalandroidsdkexample/test/PaymentTest.java b/SampleApp/src/androidTest/java/com/paypal/example/paypalandroidsdkexample/test/PaymentTest.java
new file mode 100644
index 0000000..07a6311
--- /dev/null
+++ b/SampleApp/src/androidTest/java/com/paypal/example/paypalandroidsdkexample/test/PaymentTest.java
@@ -0,0 +1,83 @@
+package com.paypal.example.paypalandroidsdkexample.test;
+
+import android.test.suitebuilder.annotation.LargeTest;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import android.support.test.runner.AndroidJUnit4;
+
+import static com.lukekorth.deviceautomator.AutomatorAction.click;
+import static com.lukekorth.deviceautomator.AutomatorAssertion.text;
+import static com.lukekorth.deviceautomator.UiObjectMatcher.withText;
+import static com.lukekorth.deviceautomator.UiObjectMatcher.withTextStartingWith;
+import static com.paypal.example.paypalandroidsdkexample.test.TestHelper.onDeviceWithScreenShot;
+import static com.paypal.example.paypalandroidsdkexample.test.TestHelper.onLogin;
+import static com.paypal.example.paypalandroidsdkexample.test.TestHelper.onAgree;
+import static com.paypal.example.paypalandroidsdkexample.test.TestHelper.takeScreenshot;
+import static org.hamcrest.CoreMatchers.containsString;
+
+
+@RunWith(AndroidJUnit4.class)
+@LargeTest
+public class PaymentTest {
+
+    @Before
+    public void setup() {
+        TestHelper.setup();
+    }
+
+    /**
+     * Makes a Single Payment
+     */
+    @Test(timeout = 60000)
+    public void buyAThing() {
+        onDeviceWithScreenShot(withText("Buy a Thing")).perform(click());
+        onDeviceWithScreenShot(withText("Pay with")).perform(click());
+        onLogin();
+        // Payment Confirmation
+        onDeviceWithScreenShot(withText("Pay")).perform(click());
+        // Confirm Result Success
+        onDeviceWithScreenShot(withTextStartingWith("Result :")).check(text(containsString("PaymentConfirmation")));
+    }
+
+    /**
+     * Gets a Future Payment Consent
+     */
+    @Test(timeout = 60000)
+    public void futurePaymentConsent() {
+        takeScreenshot("futurePaymentConsent");
+        onDeviceWithScreenShot(withText("Future Payment Consent")).perform(click());
+        onLogin();
+        onAgree();
+        // Confirm Result Success
+        onDeviceWithScreenShot(withTextStartingWith("Result :")).check(text(containsString("Future Payment")));
+
+    }
+
+    /**
+     * Makes a Future Payment Purchase
+     */
+    @Test(timeout = 60000)
+    public void futurePaymentPurchase() {
+        takeScreenshot("futurePaymentPurchase");
+        onDeviceWithScreenShot(withText("Future Payment Purchase")).perform(click());
+        // Confirm Result Success
+        onDeviceWithScreenShot(withTextStartingWith("Result :")).check(text(containsString("Client Metadata Id")));
+    }
+
+    /**
+     * Gets Profile Sharing Consent
+     */
+    @Test(timeout = 60000)
+    public void profileSharingConsent() {
+        takeScreenshot("profileSharingConsent");
+        onDeviceWithScreenShot(withText("Profile Sharing Consent")).perform(click());
+        onLogin();
+        onAgree();
+        // Confirm Result Success
+        onDeviceWithScreenShot(withTextStartingWith("Result :")).check(text(containsString("Profile Sharing code")));
+    }
+
+}
diff --git a/SampleApp/src/androidTest/java/com/paypal/example/paypalandroidsdkexample/test/TestHelper.java b/SampleApp/src/androidTest/java/com/paypal/example/paypalandroidsdkexample/test/TestHelper.java
new file mode 100644
index 0000000..29f8584
--- /dev/null
+++ b/SampleApp/src/androidTest/java/com/paypal/example/paypalandroidsdkexample/test/TestHelper.java
@@ -0,0 +1,125 @@
+package com.paypal.example.paypalandroidsdkexample.test;
+
+import android.app.Activity;
+import android.graphics.Bitmap;
+import android.os.Environment;
+import android.preference.PreferenceManager;
+import android.support.test.runner.lifecycle.ActivityLifecycleMonitorRegistry;
+import android.support.test.runner.lifecycle.Stage;
+import android.text.format.DateFormat;
+import android.view.View;
+
+import com.lukekorth.deviceautomator.DeviceAutomator;
+import com.lukekorth.deviceautomator.UiObjectMatcher;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.OutputStream;
+import java.util.Collection;
+import java.util.Date;
+import java.util.Iterator;
+
+import static android.support.test.InstrumentationRegistry.getInstrumentation;
+import static android.support.test.InstrumentationRegistry.getTargetContext;
+import static com.lukekorth.deviceautomator.AutomatorAction.click;
+import static com.lukekorth.deviceautomator.AutomatorAction.setText;
+import static com.lukekorth.deviceautomator.DeviceAutomator.onDevice;
+import static com.lukekorth.deviceautomator.UiObjectMatcher.withContentDescription;
+import static com.lukekorth.deviceautomator.UiObjectMatcher.withText;
+
+/**
+ * This helper class provides with methods to help write better tests.
+ */
+public abstract class TestHelper {
+
+    public static final String PAYPAL_SAMPLE_APP_PACKAGE_NAME = "com.paypal.example.paypalandroidsdkexample.debug";
+    public static final String PAYPAL_SANDBOX_USERNAME = "sample@buy.com";
+    public static final String PAYPAL_SANDBOX_PASSWORD = "123123123";
+
+    public static void setup() {
+        PreferenceManager.getDefaultSharedPreferences(getTargetContext())
+                .edit()
+                .clear()
+                .commit();
+        onDevice().onHomeScreen().launchApp(PAYPAL_SAMPLE_APP_PACKAGE_NAME);
+    }
+
+    public static DeviceAutomator onDeviceWithScreenShot() {
+        DeviceAutomator result = onDevice();
+        takeScreenshot(null);
+        return result;
+    }
+
+    public static DeviceAutomator onDeviceWithScreenShot(UiObjectMatcher matcher) {
+        DeviceAutomator result = onDevice(matcher);
+        takeScreenshot(null);
+        return result;
+    }
+
+    public static void takeScreenshot(String name) {
+        if (name == null) {
+            Date now = new Date();
+            DateFormat.format("yyyy-MM-dd_hh:mm:ss", now);
+            name = String.valueOf(now.getTime());
+        }
+        // In Testdroid Cloud, taken screenshots are always stored
+        // under /test-screenshots/ folder and this ensures those screenshots
+        // be shown under Test Results
+        String path =
+                Environment.getExternalStorageDirectory().getAbsolutePath() + "/test-screenshots/" + name + ".png";
+        OutputStream out = null;
+
+        try {
+            View scrView = getActivityInstance().getWindow().getDecorView().getRootView();
+            scrView.setDrawingCacheEnabled(true);
+            Bitmap bm = scrView.getDrawingCache();
+            Bitmap bitmap = Bitmap.createBitmap(bm);
+            scrView.setDrawingCacheEnabled(false);
+
+            File imageFile = new File(path);
+            out = new FileOutputStream(imageFile);
+            bitmap.compress(Bitmap.CompressFormat.PNG, 90, out);
+            out.flush();
+        } catch (Exception ex) {
+            // Ignore any exceptions as this is just for debugging purposes
+        } finally {
+            try {
+                if (out != null) {
+                    out.close();
+                }
+            } catch (Exception ex) {
+                // Nothing to do here
+            }
+        }
+    }
+
+    public static Activity getActivityInstance() {
+        final Activity[] currentActivity = new Activity[1];
+        getInstrumentation().waitForIdleSync();
+        getInstrumentation().runOnMainSync(new Runnable() {
+            public void run() {
+                Collection resumedActivities = ActivityLifecycleMonitorRegistry.getInstance().getActivitiesInStage(Stage.RESUMED);
+                Iterator<Activity> iterator = resumedActivities.iterator();
+                while (iterator.hasNext()) {
+                    currentActivity[0] = (Activity) iterator.next();
+                }
+            }
+        });
+        return currentActivity[0];
+    }
+
+    public static void onLogin() {
+        onDeviceWithScreenShot(withContentDescription("Email")).perform(click(), setText(PAYPAL_SANDBOX_USERNAME));
+        onDeviceWithScreenShot().pressDPadDown().typeText(PAYPAL_SANDBOX_PASSWORD);
+        onDeviceWithScreenShot(withText("Log In")).perform(click());
+    }
+
+    public static void onAgree() {
+        try {
+            onDeviceWithScreenShot(withText("Agree")).perform(click());
+        } catch (RuntimeException ex) {
+            // This may mean, he has already agreed to it before.
+        }
+    }
+}
diff --git a/SampleApp/src/main/AndroidManifest.xml b/SampleApp/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..0aff16a
--- /dev/null
+++ b/SampleApp/src/main/AndroidManifest.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.paypal.example.paypalandroidsdkexample">
+    <!-- WRITE_EXTERNAL_STORAGE permission is only used for testing purposes to store screenshots -->
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <application
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name" >
+        <activity
+            android:name="com.paypal.example.paypalandroidsdkexample.SampleActivity"
+            android:label="@string/app_name" >
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+
+    </application>
+
+</manifest>
diff --git a/SampleApp/src/com/paypal/example/paypalandroidsdkexample/SampleActivity.java b/SampleApp/src/main/java/com/paypal/example/paypalandroidsdkexample/SampleActivity.java
similarity index 93%
rename from SampleApp/src/com/paypal/example/paypalandroidsdkexample/SampleActivity.java
rename to SampleApp/src/main/java/com/paypal/example/paypalandroidsdkexample/SampleActivity.java
index 36e29c8..cb7225d 100644
--- a/SampleApp/src/com/paypal/example/paypalandroidsdkexample/SampleActivity.java
+++ b/SampleApp/src/main/java/com/paypal/example/paypalandroidsdkexample/SampleActivity.java
@@ -13,12 +13,14 @@
 import com.paypal.android.sdk.payments.PaymentConfirmation;
 import com.paypal.android.sdk.payments.ShippingAddress;
 
+
 import android.app.Activity;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
 import android.util.Log;
 import android.view.View;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import org.json.JSONException;
@@ -29,6 +31,10 @@
 import java.util.Set;
 
 /**
+ *
+ * THIS FILE IS OVERWRITTEN BY `androidSDK/src/<general|partner>sampleAppJava.
+ * ANY UPDATES TO THIS FILE WILL BE REMOVED IN RELEASES.
+ *
  * Basic sample using the SDK to make a payment or consent to future payments.
  * 
  * For sample mobile backend interactions, see
@@ -48,7 +54,7 @@
     private static final String CONFIG_ENVIRONMENT = PayPalConfiguration.ENVIRONMENT_NO_NETWORK;
 
     // note that these credentials will differ between live & sandbox environments.
-    private static final String CONFIG_CLIENT_ID = "credential from developer.paypal.com";
+    private static final String CONFIG_CLIENT_ID = "credentials from developer.paypal.com";
 
     private static final int REQUEST_CODE_PAYMENT = 1;
     private static final int REQUEST_CODE_FUTURE_PAYMENT = 2;
@@ -99,7 +105,7 @@ public void onBuyPressed(View pressed) {
     }
     
     private PayPalPayment getThingToBuy(String paymentIntent) {
-        return new PayPalPayment(new BigDecimal("1.75"), "USD", "sample item",
+        return new PayPalPayment(new BigDecimal("0.01"), "USD", "sample item",
                 paymentIntent);
     }
     
@@ -178,6 +184,14 @@ private PayPalOAuthScopes getOauthScopes() {
         return new PayPalOAuthScopes(scopes);
     }
 
+    protected void displayResultText(String result) {
+        ((TextView)findViewById(R.id.txtResult)).setText("Result : " + result);
+        Toast.makeText(
+                getApplicationContext(),
+                result, Toast.LENGTH_LONG)
+                .show();
+    }
+
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == REQUEST_CODE_PAYMENT) {
@@ -197,10 +211,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                          * For sample mobile backend interactions, see
                          * https://github.com/paypal/rest-api-sdk-python/tree/master/samples/mobile_backend
                          */
-                        Toast.makeText(
-                                getApplicationContext(),
-                                "PaymentConfirmation info received from PayPal", Toast.LENGTH_LONG)
-                                .show();
+                        displayResultText("PaymentConfirmation info received from PayPal");
+
 
                     } catch (JSONException e) {
                         Log.e(TAG, "an extremely unlikely failure occurred: ", e);
@@ -225,10 +237,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                         Log.i("FuturePaymentExample", authorization_code);
 
                         sendAuthorizationToServer(auth);
-                        Toast.makeText(
-                                getApplicationContext(),
-                                "Future Payment code received from PayPal", Toast.LENGTH_LONG)
-                                .show();
+                        displayResultText("Future Payment code received from PayPal");
 
                     } catch (JSONException e) {
                         Log.e("FuturePaymentExample", "an extremely unlikely failure occurred: ", e);
@@ -253,10 +262,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                         Log.i("ProfileSharingExample", authorization_code);
 
                         sendAuthorizationToServer(auth);
-                        Toast.makeText(
-                                getApplicationContext(),
-                                "Profile Sharing code received from PayPal", Toast.LENGTH_LONG)
-                                .show();
+                        displayResultText("Profile Sharing code received from PayPal");
 
                     } catch (JSONException e) {
                         Log.e("ProfileSharingExample", "an extremely unlikely failure occurred: ", e);
@@ -296,9 +302,7 @@ public void onFuturePaymentPurchasePressed(View pressed) {
 
         // TODO: Send metadataId and transaction details to your server for processing with
         // PayPal...
-        Toast.makeText(
-                getApplicationContext(), "Client Metadata Id received from SDK", Toast.LENGTH_LONG)
-                .show();
+        displayResultText("Client Metadata Id received from SDK");
     }
 
     @Override
diff --git a/SampleApp/src/main/res/drawable-hdpi/ic_launcher.png b/SampleApp/src/main/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 0000000..3cf17f6
Binary files /dev/null and b/SampleApp/src/main/res/drawable-hdpi/ic_launcher.png differ
diff --git a/SampleApp/src/main/res/drawable-mdpi/ic_launcher.png b/SampleApp/src/main/res/drawable-mdpi/ic_launcher.png
new file mode 100644
index 0000000..5387292
Binary files /dev/null and b/SampleApp/src/main/res/drawable-mdpi/ic_launcher.png differ
diff --git a/SampleApp/src/main/res/drawable-xhdpi/ic_launcher.png b/SampleApp/src/main/res/drawable-xhdpi/ic_launcher.png
new file mode 100644
index 0000000..65bc14a
Binary files /dev/null and b/SampleApp/src/main/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/SampleApp/src/main/res/drawable-xxxhdpi/ic_launcher.png b/SampleApp/src/main/res/drawable-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000..a7d6424
Binary files /dev/null and b/SampleApp/src/main/res/drawable-xxxhdpi/ic_launcher.png differ
diff --git a/SampleApp/res/layout/activity_main.xml b/SampleApp/src/main/res/layout/activity_main.xml
similarity index 88%
rename from SampleApp/res/layout/activity_main.xml
rename to SampleApp/src/main/res/layout/activity_main.xml
index 31a11a4..d45046c 100644
--- a/SampleApp/res/layout/activity_main.xml
+++ b/SampleApp/src/main/res/layout/activity_main.xml
@@ -47,6 +47,13 @@
            android:layout_marginTop="20dp"
            android:onClick="onProfileSharingPressed"
            android:text="Profile Sharing Consent" />
+
+       <TextView
+           android:layout_width="wrap_content"
+           android:layout_height="wrap_content"
+           android:textAppearance="?android:attr/textAppearanceSmall"
+           android:text=""
+           android:id="@+id/txtResult" />
    </LinearLayout>
 
 </RelativeLayout>
diff --git a/SampleApp/src/main/res/values-sw600dp/dimens.xml b/SampleApp/src/main/res/values-sw600dp/dimens.xml
new file mode 100644
index 0000000..44f01db
--- /dev/null
+++ b/SampleApp/src/main/res/values-sw600dp/dimens.xml
@@ -0,0 +1,8 @@
+<resources>
+
+    <!--
+         Customize dimensions originally defined in res/values/dimens.xml (such as
+         screen margins) for sw600dp devices (e.g. 7" tablets) here.
+    -->
+
+</resources>
diff --git a/SampleApp/src/main/res/values-sw720dp-land/dimens.xml b/SampleApp/src/main/res/values-sw720dp-land/dimens.xml
new file mode 100644
index 0000000..61e3fa8
--- /dev/null
+++ b/SampleApp/src/main/res/values-sw720dp-land/dimens.xml
@@ -0,0 +1,9 @@
+<resources>
+
+    <!--
+         Customize dimensions originally defined in res/values/dimens.xml (such as
+         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
+    -->
+    <dimen name="activity_horizontal_margin">128dp</dimen>
+
+</resources>
diff --git a/SampleApp/src/main/res/values/dimens.xml b/SampleApp/src/main/res/values/dimens.xml
new file mode 100644
index 0000000..048747a
--- /dev/null
+++ b/SampleApp/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="activity_horizontal_margin">10dip</dimen>
+    <dimen name="activity_vertical_margin">10dip</dimen>
+</resources>
diff --git a/SampleApp/src/main/res/values/strings.xml b/SampleApp/src/main/res/values/strings.xml
new file mode 100644
index 0000000..b3a2454
--- /dev/null
+++ b/SampleApp/src/main/res/values/strings.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <string name="app_name">PayPal SDK Example</string>
+
+</resources>
diff --git a/aars/PayPalAndroidSDK-2.16.0.aar b/aars/PayPalAndroidSDK-2.16.0.aar
new file mode 100644
index 0000000..824f228
Binary files /dev/null and b/aars/PayPalAndroidSDK-2.16.0.aar differ
diff --git a/acknowledgments.md b/acknowledgments.md
index 2f2b80f..f13a03c 100644
--- a/acknowledgments.md
+++ b/acknowledgments.md
@@ -7,7 +7,7 @@ The PayPal Android SDK uses code from the following libraries:
   * Willow Garage's [OpenCV](http://opencv.willowgarage.com/wiki/)
   * [Eigen](http://eigen.tuxfamily.org)
   * [Mersenne Twister](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html)
-  * Loopj's [Android Asnyc HTTP](http://loopj.com/android-async-http/)
+  * Square's [OkHttp](http://square.github.io/okhttp/)
   * Apache Commons' [Commons Lang](http://commons.apache.org/proper/commons-lang/)
 
 
@@ -16,7 +16,7 @@ Full licenses
 
 PayPal's card.io, MIT license:
 
-    Copyright (c) 2013-2014 PayPal
+    Copyright (c) 2013-2015 PayPal
 
     Permission is hereby granted, free of charge, to any person obtaining a copy
     of this software and associated documentation files (the "Software"), to deal
@@ -82,12 +82,21 @@ Makoto Matsumoto and Takuji Nishimura's [Mersenne Twister](http://www.math.sci.h
     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     
     
-Loopj's Android Async HTTP, Apache License 2.0:
+Square OkHttp, Apache 2.0 license:
 
-    Actual license text not provided -- [The loopj website](http://loopj.com/android-async-http/) states:
-    
-        "The Android Asynchronous Http Client is released under the Android-friendly Apache License, 
-         Version 2.0. Read the full license here: http://www.apache.org/licenses/LICENSE-2.0"
+    Copyright 2014 Square, Inc.
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
 
 
 Apache Commons Lang, Apache 2.0 license:
@@ -105,4 +114,4 @@ Apache Commons Lang, Apache 2.0 license:
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
-    limitations under the License.
\ No newline at end of file
+    limitations under the License.
diff --git a/docs/future_payments_mobile.md b/docs/future_payments_mobile.md
index 41cdd92..daba058 100644
--- a/docs/future_payments_mobile.md
+++ b/docs/future_payments_mobile.md
@@ -36,23 +36,7 @@ Obtain Customer Consent
 
 The sample app provides a more complete example. However, at minimum, you must:
 
-1. Add permissions to your `AndroidManifest.xml` file:
-    ```xml   
-    <!-- for most things, including card.io & paypal -->
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-    <uses-permission android:name="android.permission.INTERNET"/>
-    ```
-    
-1. Declare SDK service and activities in your `AndroidManifest.xml` file within the `<application>` tag:
-    ```xml
-    <service android:name="com.paypal.android.sdk.payments.PayPalService"
-            android:exported="false" />
-        
-    <activity android:name="com.paypal.android.sdk.payments.LoginActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.PayPalFuturePaymentActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.FuturePaymentConsentActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.FuturePaymentInfoActivity" />
-    ```
+1. Add PayPal Android SDK dependency to your `build.gradle` file as shown in README.md
 
 1. Create a `PayPalConfiguration` object.  This object allows you to configure various aspects of the SDK.
 
diff --git a/docs/future_payments_server.md b/docs/future_payments_server.md
index cbe4ced..92017bb 100644
--- a/docs/future_payments_server.md
+++ b/docs/future_payments_server.md
@@ -327,4 +327,4 @@ Related information:
 - [Void an authorization](https://developer.paypal.com/docs/api/#void-an-authorization)
 - [Reauthorize a payment](https://developer.paypal.com/docs/api/#reauthorize-a-payment)
 - [Look up a captured payment](https://developer.paypal.com/docs/api/#look-up-a-captured-payment)
-- [Refund a captured payment](https://developer.paypal.com/docs/api/#refund-a-captured-payment)
\ No newline at end of file
+- [Refund a captured payment](https://developer.paypal.com/docs/api/#refund-a-captured-payment)
diff --git a/docs/ja/future_payments_server.md b/docs/ja/future_payments_server.md
index 422567e..57b58f6 100644
--- a/docs/ja/future_payments_server.md
+++ b/docs/ja/future_payments_server.md
@@ -327,4 +327,4 @@ curl 'https://api.paypal.com/v1/payments/authorization/4TD55050SV609544L/capture
 - [承認の取り消し](https://developer.paypal.com/docs/api/#void-an-authorization)
 - [支払いの再承認](https://developer.paypal.com/docs/api/#reauthorize-a-payment)
 - [回収した支払いの検索](https://developer.paypal.com/docs/api/#look-up-a-captured-payment)
-- [回収した支払いの返金](https://developer.paypal.com/docs/api/#refund-a-captured-payment)
\ No newline at end of file
+- [回収した支払いの返金](https://developer.paypal.com/docs/api/#refund-a-captured-payment)
diff --git a/docs/ja/profile_sharing_server.md b/docs/ja/profile_sharing_server.md
index e5e6b3b..281425f 100644
--- a/docs/ja/profile_sharing_server.md
+++ b/docs/ja/profile_sharing_server.md
@@ -169,4 +169,4 @@ curl -v https://api.paypal.com/v1/identity/openidconnect/userinfo/?schema=openid
 
 - [アクセストークンの取得](https://developer.paypal.com/webapps/developer/docs/integration/direct/make-your-first-call/#get-an-access-token)
 - [PayPalインテグレーションガイドによるログイン](https://developer.paypal.com/docs/integration/direct/identity/log-in-with-paypal/)
-- [ユーザー情報の入手](https://developer.paypal.com/docs/api/#get-user-information)
\ No newline at end of file
+- [ユーザー情報の入手](https://developer.paypal.com/docs/api/#get-user-information)
diff --git a/docs/profile_sharing_mobile.md b/docs/profile_sharing_mobile.md
index b3ad069..dd98338 100644
--- a/docs/profile_sharing_mobile.md
+++ b/docs/profile_sharing_mobile.md
@@ -43,23 +43,7 @@ Obtain Customer Consent
 
 The sample app provides a more complete example. However, at minimum, you must:
 
-1. Add permissions to your `AndroidManifest.xml` file:
-    ```xml   
-    <!-- for most things, including card.io & paypal -->
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-    <uses-permission android:name="android.permission.INTERNET"/>
-    ```
-    
-1. Declare SDK service and activities in your `AndroidManifest.xml` file within the `<application>` tag:
-    ```xml
-    <service android:name="com.paypal.android.sdk.payments.PayPalService"
-            android:exported="false" />
-        
-    <activity android:name="com.paypal.android.sdk.payments.FuturePaymentInfoActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.LoginActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.PayPalProfileSharingActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.ProfileSharingConsentActivity" />
-    ```
+1. Add PayPal Android SDK dependency to your `build.gradle` file as shown in README.md
 
 1. Create a `PayPalConfiguration` object.  This object allows you to configure various aspects of the SDK.
 
diff --git a/docs/profile_sharing_server.md b/docs/profile_sharing_server.md
index 480f343..ab8fb3d 100644
--- a/docs/profile_sharing_server.md
+++ b/docs/profile_sharing_server.md
@@ -170,4 +170,4 @@ Related information:
 
 - [Get an access token](https://developer.paypal.com/webapps/developer/docs/integration/direct/make-your-first-call/#get-an-access-token).
 - [Login With PayPal Integration Guide](https://developer.paypal.com/docs/integration/direct/identity/log-in-with-paypal/).
-- [Get user information](https://developer.paypal.com/docs/api/#get-user-information).
\ No newline at end of file
+- [Get user information](https://developer.paypal.com/docs/api/#get-user-information).
diff --git a/docs/single_payment.md b/docs/single_payment.md
index a5f2d54..22583ad 100644
--- a/docs/single_payment.md
+++ b/docs/single_payment.md
@@ -1,7 +1,7 @@
 Single Payment
 ==============
 
-Receive a single, immediate payment from your customer, via either PayPal or payment card with [card.io](https://www.card.io/).
+Receive a single, immediate payment from your customer through PayPal.
 
 _If you haven't already, see the [README](../README.md) for an initial overview and instructions for adding the SDK to your project._
 
@@ -33,33 +33,7 @@ Sample Code
 
 The sample app provides a more complete example. However, at minimum, you must:
 
-1. Add permissions to your `AndroidManifest.xml` file:
-    ```xml
-    <!-- for card.io card scanning -->
-    <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.VIBRATE" />
-    
-    <uses-feature android:name="android.hardware.camera" android:required="false" />
-    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />
-
-    <!-- for most things, including card.io & paypal -->
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-    <uses-permission android:name="android.permission.INTERNET"/>
-    ```
-    
-1. Declare SDK service and activities in your `AndroidManifest.xml` file within the `<application>` tag:
-    ```xml
-    <service android:name="com.paypal.android.sdk.payments.PayPalService"
-            android:exported="false" />
-        
-    <activity android:name="com.paypal.android.sdk.payments.PaymentActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.LoginActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.PaymentMethodActivity" />
-    <activity android:name="com.paypal.android.sdk.payments.PaymentConfirmActivity" />
-    <activity android:name="io.card.payment.CardIOActivity"
-              android:configChanges="keyboardHidden|orientation" />
-    <activity android:name="io.card.payment.DataEntryActivity" />
-    ```
+1. Add PayPal Android SDK dependency to your `build.gradle` file as shown in README.md
 
 1. Create a `PayPalConfiguration` object
     ```java
diff --git a/docs/supplemental_errors.md b/docs/supplemental_errors.md
index 0b6990d..b2229f5 100644
--- a/docs/supplemental_errors.md
+++ b/docs/supplemental_errors.md
@@ -18,4 +18,4 @@ The PayPal REST API errors are documented [here](https://developer.paypal.com/do
 - **PAYMENT_CREATION_ERROR_NEGATIVE_BALANCE**
 	- There was a problem setting up the payment. The user's account balance is negative and no other viable options are present.
 - **PAYMENT_CREATION_ERROR_SENDING_LIMIT_REACHED**
-	- There was a problem setting up the payment. The user's sending limit has been reached at this time.
\ No newline at end of file
+	- There was a problem setting up the payment. The user's sending limit has been reached at this time.
diff --git a/libs/PayPalAndroidSDK-2.9.7.jar b/libs/PayPalAndroidSDK-2.9.7.jar
deleted file mode 100644
index 45e5167..0000000
Binary files a/libs/PayPalAndroidSDK-2.9.7.jar and /dev/null differ
diff --git a/libs/armeabi-v7a/libcardioDecider.so b/libs/armeabi-v7a/libcardioDecider.so
deleted file mode 100644
index 8d77e39..0000000
Binary files a/libs/armeabi-v7a/libcardioDecider.so and /dev/null differ
diff --git a/libs/armeabi-v7a/libcardioRecognizer.so b/libs/armeabi-v7a/libcardioRecognizer.so
deleted file mode 100644
index 52f170f..0000000
Binary files a/libs/armeabi-v7a/libcardioRecognizer.so and /dev/null differ
diff --git a/libs/armeabi-v7a/libcardioRecognizer_tegra2.so b/libs/armeabi-v7a/libcardioRecognizer_tegra2.so
deleted file mode 100644
index f4107a5..0000000
Binary files a/libs/armeabi-v7a/libcardioRecognizer_tegra2.so and /dev/null differ
diff --git a/libs/armeabi-v7a/libopencv_core.so b/libs/armeabi-v7a/libopencv_core.so
deleted file mode 100644
index e949652..0000000
Binary files a/libs/armeabi-v7a/libopencv_core.so and /dev/null differ
diff --git a/libs/armeabi-v7a/libopencv_imgproc.so b/libs/armeabi-v7a/libopencv_imgproc.so
deleted file mode 100644
index a6f5e9d..0000000
Binary files a/libs/armeabi-v7a/libopencv_imgproc.so and /dev/null differ
diff --git a/libs/armeabi/libcardioDecider.so b/libs/armeabi/libcardioDecider.so
deleted file mode 100644
index aa7c1ae..0000000
Binary files a/libs/armeabi/libcardioDecider.so and /dev/null differ
diff --git a/libs/mips/libcardioDecider.so b/libs/mips/libcardioDecider.so
deleted file mode 100644
index 5c816ba..0000000
Binary files a/libs/mips/libcardioDecider.so and /dev/null differ
diff --git a/libs/x86/libcardioDecider.so b/libs/x86/libcardioDecider.so
deleted file mode 100644
index 4704634..0000000
Binary files a/libs/x86/libcardioDecider.so and /dev/null differ
diff --git a/paypal-proguard.cnf b/paypal-proguard.cnf
deleted file mode 100644
index ad771e1..0000000
--- a/paypal-proguard.cnf
+++ /dev/null
@@ -1,95 +0,0 @@
-# If your application, applet, servlet, library, etc., contains enumeration
-# classes, you'll have to preserve some special methods. Enumerations were
-# introduced in Java 5. The java compiler translates enumerations into classes
-# with a special structure. Notably, the classes contain implementations of some
-# static methods that the run-time environment accesses by introspection (Isn't
-# that just grand? Introspection is the self-modifying code of a new
-# generation). You have to specify these explicitly, to make sure they aren't
-# removed or obfuscated:
-
--keepclassmembers enum * {
-    public static **[] values();
-    public static ** valueOf(java.lang.String);
-}
-
-# More complex applications, applets, servlets, libraries, etc., may contain
-# classes that are serialized. Depending on the way in which they are used, they
-# may require special attention
-
--keepclassmembers class * implements java.io.Serializable {
-    static final long serialVersionUID;
-    private static final java.io.ObjectStreamField[] serialPersistentFields;
-    private void writeObject(java.io.ObjectOutputStream);
-    private void readObject(java.io.ObjectInputStream);
-    java.lang.Object writeReplace();
-    java.lang.Object readResolve();
-}
-
-# --- RECOMMENDED ANDROID CONFIG ------------------------------------------
-
--keep public class * extends android.app.Activity
--keep public class * extends android.app.Application
--keep public class * extends android.app.Service
--keep public class * extends android.content.BroadcastReceiver
--keep public class * extends android.content.ContentProvider
-
--keep public class * extends android.view.View {
-    public <init>(android.content.Context);
-    public <init>(android.content.Context, android.util.AttributeSet);
-    public <init>(android.content.Context, android.util.AttributeSet, int);
-    public void set*(...);
-}
-
--keepclasseswithmembers class * {
-    public <init>(android.content.Context, android.util.AttributeSet);
-}
-
--keepclasseswithmembers class * {
-    public <init>(android.content.Context, android.util.AttributeSet, int);
-}
-
--keepclassmembers class * implements android.os.Parcelable {
-    static android.os.Parcelable$Creator CREATOR;
-}
-
-
-# ---- REQUIRED card.io CONFIG ----------------------------------------
-# card.io is a native lib, so anything crossing JNI must not be changed
-
-# Don't obfuscate DetectionInfo or public fields, since
-# it is used by native methods
--keep class io.card.payment.DetectionInfo
--keepclassmembers class io.card.payment.DetectionInfo {
-    public *;
-}
-
--keep class io.card.payment.CreditCard
--keep class io.card.payment.CreditCard$1
--keepclassmembers class io.card.payment.CreditCard {
-	*;
-}
-
--keepclassmembers class io.card.payment.CardScanner {
-	*** onEdgeUpdate(...);
-}
-
-# Don't mess with classes with native methods
-
--keepclasseswithmembers class * {
-    native <methods>;
-}
-
--keepclasseswithmembernames class * {
-    native <methods>;
-}
-
--keep public class io.card.payment.* {
-    public protected *;
-}
-
-
-# -------- PayPal SDK ----------
-# (does not include card.io)
-
--dontwarn com.google.android.gms.**
--dontwarn android.support.v4.**
