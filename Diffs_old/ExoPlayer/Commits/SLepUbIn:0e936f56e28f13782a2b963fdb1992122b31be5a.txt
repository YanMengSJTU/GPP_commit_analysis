diff --git a/extensions/flac/src/main/java/com/google/android/exoplayer/ext/flac/LibflacAudioTrackRenderer.java b/extensions/flac/src/main/java/com/google/android/exoplayer/ext/flac/LibflacAudioTrackRenderer.java
index 4e4692fd56..06e6406796 100644
--- a/extensions/flac/src/main/java/com/google/android/exoplayer/ext/flac/LibflacAudioTrackRenderer.java
+++ b/extensions/flac/src/main/java/com/google/android/exoplayer/ext/flac/LibflacAudioTrackRenderer.java
@@ -263,6 +263,9 @@ private boolean feedInputBuffer(long positionUs) throws FlacDecoderException {
       return false;
     }
 
+    if (inputBuffer.sampleHolder.isDecodeOnly()) {
+      inputBuffer.setFlag(Buffer.FLAG_DECODE_ONLY);
+    }
     decoder.queueInputBuffer(inputBuffer);
     inputBuffer = null;
     return true;
diff --git a/extensions/opus/src/main/java/com/google/android/exoplayer/ext/opus/LibopusAudioTrackRenderer.java b/extensions/opus/src/main/java/com/google/android/exoplayer/ext/opus/LibopusAudioTrackRenderer.java
index c67eed99ae..8903232d2b 100644
--- a/extensions/opus/src/main/java/com/google/android/exoplayer/ext/opus/LibopusAudioTrackRenderer.java
+++ b/extensions/opus/src/main/java/com/google/android/exoplayer/ext/opus/LibopusAudioTrackRenderer.java
@@ -275,6 +275,9 @@ private boolean feedInputBuffer(long positionUs) throws OpusDecoderException {
       return false;
     }
 
+    if (inputBuffer.sampleHolder.isDecodeOnly()) {
+      inputBuffer.setFlag(Buffer.FLAG_DECODE_ONLY);
+    }
     decoder.queueInputBuffer(inputBuffer);
     inputBuffer = null;
     return true;
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java
index 2dc9c6e6f0..aeb7d23751 100644
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java
+++ b/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java
@@ -350,6 +350,9 @@ private boolean feedInputBuffer(long positionUs) throws VpxDecoderException {
 
     inputBuffer.width = format.width;
     inputBuffer.height = format.height;
+    if (inputBuffer.sampleHolder.isDecodeOnly()) {
+      inputBuffer.setFlag(Buffer.FLAG_DECODE_ONLY);
+    }
     decoder.queueInputBuffer(inputBuffer);
     inputBuffer = null;
     return true;
diff --git a/library/src/main/java/com/google/android/exoplayer/util/extensions/SimpleDecoder.java b/library/src/main/java/com/google/android/exoplayer/util/extensions/SimpleDecoder.java
index 03b3e0690b..883398c707 100644
--- a/library/src/main/java/com/google/android/exoplayer/util/extensions/SimpleDecoder.java
+++ b/library/src/main/java/com/google/android/exoplayer/util/extensions/SimpleDecoder.java
@@ -15,7 +15,6 @@
  */
 package com.google.android.exoplayer.util.extensions;
 
-import com.google.android.exoplayer.C;
 import com.google.android.exoplayer.util.Assertions;
 
 import java.util.LinkedList;
@@ -226,8 +225,8 @@ private boolean decode() throws InterruptedException {
     if (inputBuffer.getFlag(Buffer.FLAG_END_OF_STREAM)) {
       outputBuffer.setFlag(Buffer.FLAG_END_OF_STREAM);
     } else {
-      if (inputBuffer.getFlag(C.SAMPLE_FLAG_DECODE_ONLY)) {
-        outputBuffer.setFlag(C.SAMPLE_FLAG_DECODE_ONLY);
+      if (inputBuffer.getFlag(Buffer.FLAG_DECODE_ONLY)) {
+        outputBuffer.setFlag(Buffer.FLAG_DECODE_ONLY);
       }
       exception = decode(inputBuffer, outputBuffer, resetDecoder);
       if (exception != null) {
