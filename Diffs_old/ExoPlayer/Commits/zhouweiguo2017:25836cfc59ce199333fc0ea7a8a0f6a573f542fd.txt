diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/AdtsReader.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/AdtsReader.java
index 7fd8b4a854..6ded24c563 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/AdtsReader.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/AdtsReader.java
@@ -258,7 +258,7 @@ private void setReadingId3HeaderState() {
    * @param sampleSize Size of the sample
    */
   private void setReadingSampleState(TrackOutput outputToUse, long currentSampleDuration,
-       int priorReadBytes, int sampleSize) {
+      int priorReadBytes, int sampleSize) {
     state = STATE_READING_SAMPLE;
     bytesRead = priorReadBytes;
     this.currentOutput = outputToUse;
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/DefaultTsPayloadReaderFactory.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/DefaultTsPayloadReaderFactory.java
index cfd278eb2d..f496965870 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/DefaultTsPayloadReaderFactory.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/DefaultTsPayloadReaderFactory.java
@@ -42,7 +42,6 @@
       FLAG_IGNORE_H264_STREAM, FLAG_DETECT_ACCESS_UNITS, FLAG_IGNORE_SPLICE_INFO_STREAM,
       FLAG_OVERRIDE_CAPTION_DESCRIPTORS})
   public @interface Flags {}
-
   public static final int FLAG_ALLOW_NON_IDR_KEYFRAMES = 1;
   public static final int FLAG_IGNORE_AAC_STREAM = 1 << 1;
   public static final int FLAG_IGNORE_H264_STREAM = 1 << 2;
@@ -61,7 +60,7 @@ public DefaultTsPayloadReaderFactory() {
 
   /**
    * @param flags A combination of {@code FLAG_*} values that control the behavior of the created
-   *      readers.
+   *     readers.
    */
   public DefaultTsPayloadReaderFactory(@Flags int flags) {
     this(flags, Collections.<Format>emptyList());
@@ -69,9 +68,9 @@ public DefaultTsPayloadReaderFactory(@Flags int flags) {
 
   /**
    * @param flags A combination of {@code FLAG_*} values that control the behavior of the created
-   *      readers.
+   *     readers.
    * @param closedCaptionFormats {@link Format}s to be exposed by payload readers for streams with
-   *      embedded closed captions when no caption service descriptors are provided. If
+   *     embedded closed captions when no caption service descriptors are provided. If
    *     {@link #FLAG_OVERRIDE_CAPTION_DESCRIPTORS} is set, {@code closedCaptionFormats} overrides
    *     any descriptor information. If not set, and {@code closedCaptionFormats} is empty, a
    *     closed caption track with {@link Format#accessibilityChannel} {@link Format#NO_VALUE} will
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/H264Reader.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/H264Reader.java
index 305587d9ab..032ac139a9 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/H264Reader.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/H264Reader.java
@@ -288,7 +288,7 @@ private void endNalUnit(int curNALType, long position, int offset, int discardPa
     private boolean sampleIsKeyframe;
 
     public SampleReader(TrackOutput output, boolean allowNonIdrKeyframes,
-         boolean detectAccessUnits) {
+        boolean detectAccessUnits) {
       this.output = output;
       this.allowNonIdrKeyframes = allowNonIdrKeyframes;
       this.detectAccessUnits = detectAccessUnits;
@@ -538,9 +538,9 @@ public void setSliceType(int sliceType) {
       }
 
       public void setAll(SpsData spsData, int nalRefIdc, int sliceType, int frameNum,
-           int picParameterSetId, boolean fieldPicFlag, boolean bottomFieldFlagPresent,
-           boolean bottomFieldFlag, boolean idrPicFlag, int idrPicId, int picOrderCntLsb,
-           int deltaPicOrderCntBottom, int deltaPicOrderCnt0, int deltaPicOrderCnt1) {
+          int picParameterSetId, boolean fieldPicFlag, boolean bottomFieldFlagPresent,
+          boolean bottomFieldFlag, boolean idrPicFlag, int idrPicId, int picOrderCntLsb,
+          int deltaPicOrderCntBottom, int deltaPicOrderCnt0, int deltaPicOrderCnt1) {
         this.spsData = spsData;
         this.nalRefIdc = nalRefIdc;
         this.sliceType = sliceType;
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java
index be52f24f3e..4dc6629c5b 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java
@@ -158,7 +158,7 @@ public TsExtractor(@Mode int mode, @Flags int defaultTsPayloadReaderFlags) {
    * @param payloadReaderFactory Factory for injecting a custom set of payload readers.
    */
   public TsExtractor(@Mode int mode, TimestampAdjuster timestampAdjuster,
-       TsPayloadReader.Factory payloadReaderFactory) {
+      TsPayloadReader.Factory payloadReaderFactory) {
     this.payloadReaderFactory = Assertions.checkNotNull(payloadReaderFactory);
     this.mode = mode;
     if (mode == MODE_SINGLE_PMT || mode == MODE_HLS) {
@@ -344,7 +344,7 @@ public PatReader() {
 
     @Override
     public void init(TimestampAdjuster timestampAdjuster, ExtractorOutput extractorOutput,
-         TrackIdGenerator idGenerator) {
+        TrackIdGenerator idGenerator) {
       // Do nothing.
     }
 
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsPayloadReader.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsPayloadReader.java
index ad0a669d36..39e1a6a1d5 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsPayloadReader.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/ts/TsPayloadReader.java
@@ -74,7 +74,7 @@
      * @param descriptorBytes The descriptor bytes associated to the stream.
      */
     public EsInfo(int streamType, String language, List<DvbSubtitleInfo> dvbSubtitleInfos,
-         byte[] descriptorBytes) {
+        byte[] descriptorBytes) {
       this.streamType = streamType;
       this.language = language;
       this.dvbSubtitleInfos = dvbSubtitleInfos == null ? Collections.<DvbSubtitleInfo>emptyList()
@@ -181,7 +181,7 @@ private void maybeThrowUninitializedError() {
    *     {@link TrackOutput}s.
    */
   void init(TimestampAdjuster timestampAdjuster, ExtractorOutput extractorOutput,
-       TrackIdGenerator idGenerator);
+      TrackIdGenerator idGenerator);
 
   /**
    * Notifies the reader that a seek has occurred.
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsChunkSource.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsChunkSource.java
index 7d63613a21..127bfd7b91 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsChunkSource.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsChunkSource.java
@@ -108,7 +108,7 @@ public void clear() {
    * @param playlistTracker The {@link HlsPlaylistTracker} from which to obtain media playlists.
    * @param variants The available variants.
    * @param dataSourceFactory An {@link HlsDataSourceFactory} to create {@link DataSource}s for the
-   *      chunks.
+   *     chunks.
    * @param timestampAdjusterProvider A provider of {@link TimestampAdjuster} instances. If
    *     multiple {@link HlsChunkSource}s are used for a single playback, they should all share the
    *     same provider.
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
index 682335b7de..c087348903 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
@@ -79,8 +79,7 @@ public int compareTo(@NonNull Long relativeStartTimeUs) {
    */
   @Retention(RetentionPolicy.SOURCE)
   @IntDef({PLAYLIST_TYPE_UNKNOWN, PLAYLIST_TYPE_VOD, PLAYLIST_TYPE_EVENT})
-  public @interface PlaylistType { }
-
+  public @interface PlaylistType {}
   public static final int PLAYLIST_TYPE_UNKNOWN = 0;
   public static final int PLAYLIST_TYPE_VOD = 1;
   public static final int PLAYLIST_TYPE_EVENT = 2;
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
index 6917aebdcd..5ae7293438 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
@@ -378,7 +378,8 @@ private static HlsMediaPlaylist parseMediaPlaylist(LineIterator iterator, String
         }
         hlsEncryptInfo = new HLSEncryptInfo(isEncrypted, encryptionMethod, encryptionKeyUri, segmentEncryptionIV, null, null);
         segments.add(new Segment(line, segmentDurationUs, relativeDiscontinuitySequence,
-            segmentStartTimeUs, hlsEncryptInfo, segmentByteRangeOffset, segmentByteRangeLength));
+            segmentStartTimeUs, hlsEncryptInfo,
+            segmentByteRangeOffset, segmentByteRangeLength));
         segmentStartTimeUs += segmentDurationUs;
         segmentDurationUs = 0;
         if (segmentByteRangeLength != C.LENGTH_UNSET) {
