diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
index 0d799d8902..8abd62e9f8 100644
--- a/demo/src/main/AndroidManifest.xml
+++ b/demo/src/main/AndroidManifest.xml
@@ -32,7 +32,7 @@
       android:allowBackup="false">
 
     <!--android:label="@string/application_name"-->
-    <activity android:name="br.rnp.futebol.vocoliseu.visual.activity.DashboardActivity"
+    <activity android:name="br.rnp.futebol.vocoliseu.visual.activity.MainActivity"
         android:theme="@style/VOCoLisEU">
       <intent-filter>
         <action android:name="android.intent.action.MAIN"/>
@@ -44,6 +44,18 @@
         android:theme="@style/VOCoLisEU">
     </activity>
 
+    <activity android:name="br.rnp.futebol.vocoliseu.visual.activity.ExperimentGeneralInfoActivity"
+        android:theme="@style/VOCoLisEU">
+    </activity>
+
+    <activity android:name="br.rnp.futebol.vocoliseu.visual.activity.ScriptControllerActivity"
+        android:theme="@style/VOCoLisEU">
+    </activity>
+
+    <activity android:name="br.rnp.futebol.vocoliseu.visual.activity.ExperimentControllerActivity"
+        android:theme="@style/VOCoLisEU">
+    </activity>
+
     <activity android:name="com.google.android.exoplayer2.demo.PlayerActivity"
         android:configChanges="keyboard|keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize|uiMode"
         android:launchMode="singleTop"
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExpForListDAO.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExpForListDAO.java
new file mode 100644
index 0000000000..4cd4852515
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExpForListDAO.java
@@ -0,0 +1,144 @@
+package br.rnp.futebol.vocoliseu.dao;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+import android.os.Environment;
+import android.util.Log;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.FileReader;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import br.rnp.futebol.vocoliseu.pojo.Experiment;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+
+/**
+ * [UFRGS] VO-CoLisEU
+ * Created by camargo on 25/10/2016
+ * Data Access Object (DAO) class to manage the experiments saved in
+ * the device internal memory
+ */
+
+public class TExpForListDAO extends SQLiteOpenHelper {
+
+    private static final String TABLE_NAME = "TExpForList";
+    private static final int VERSION = 1;
+    private static final String[] COLUMNS = {"filename"};
+
+
+    public TExpForListDAO(Context ctx) {
+        super(ctx, TABLE_NAME, null, VERSION);
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        int cont = 0;
+        StringBuilder sb = new StringBuilder();
+        sb.append("CREATE TABLE ".concat(TABLE_NAME).concat(" ("));
+        sb.append(COLUMNS[cont].concat(" TEXT PRIMARY KEY NOT NULL);"));
+        db.execSQL(sb.toString());
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        String sb = "DROP TABLE IF EXISTS ".concat(TABLE_NAME.concat(";"));
+        db.execSQL(sb);
+        onCreate(db);
+    }
+
+    /**
+     * Check if an experiment with a passed filename is already saved in the device internal DB
+     * @return true if exists
+     */
+//    private boolean checkFile(String filename) {
+//        Cursor rawQuery = null;
+//        try {
+//            rawQuery = getReadableDatabase().rawQuery(
+//                    "SELECT 1 from ".concat(TABLE_NAME.concat(" WHERE ".concat(COLUMNS[1]).concat(" = ?"))),
+//                    new String[]{filename});
+//            int rc = rawQuery.getCount();
+//            return rc > 0;
+//        } catch (IllegalArgumentException ie) {
+//            return false;
+//        } finally {
+//            if (rawQuery != null)
+//                rawQuery.close();
+//        }
+//    }
+
+    /**
+     * Insert a new experiment in the DB
+     *
+     * @param exp exp to be inserted
+     */
+    public void insert(TExperiment exp) {
+        int cont = 0;
+        ContentValues values = new ContentValues();
+        values.put(COLUMNS[cont], exp.getFilename());
+        getWritableDatabase().insert(TABLE_NAME, null, values);
+    }
+
+    /**
+     * Delete an experiment in the DB
+     */
+    public void delete(String filename) {
+//        if (checkFile(exp.getFileName())) {
+        getWritableDatabase().delete(TABLE_NAME, COLUMNS[1].concat(" = ?"), new String[]{filename});
+//        }
+    }
+
+    /**
+     * Get all the saved experiments
+     *
+     * @return the saved experiments
+     */
+    public ArrayList<String> getExpsNames() {
+        try {
+            ArrayList<String> exps = new ArrayList<>();
+            Cursor c = getWritableDatabase().query(TABLE_NAME, COLUMNS, null, null, null, null, null);
+            while (c.moveToNext()) {
+                int cont = 0;
+                exps.add(c.getString(cont));
+            }
+            c.close();
+            return exps;
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
+    public ArrayList<TExperiment> getExpsByNames(ArrayList<String> names) {
+        ArrayList<TExperiment> exps = new ArrayList<>();
+        try {
+            for (String s : names) {
+                exps.add(new TExperiment().fromJson(new JSONObject(read(s))));
+            }
+        } catch (Exception e) {
+            return null;
+        }
+        return exps;
+    }
+
+    private String read(String file) {
+        try {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(file.concat(".txt"));
+            BufferedReader reader = new BufferedReader(new FileReader(csv));
+            String text = "", line;
+            while ((line = reader.readLine()) != null) {
+                text += line.concat(" ");
+            }
+            return text;
+        } catch (IOException e) {
+            return "";
+        }
+    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExperimentDAO.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExperimentDAO.java
new file mode 100644
index 0000000000..8f18800c76
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExperimentDAO.java
@@ -0,0 +1,39 @@
+package br.rnp.futebol.vocoliseu.dao;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+/**
+ * Created by camargo on 10/11/16.
+ */
+public class TExperimentDAO extends SQLiteOpenHelper {
+
+    private static final String TABLE_NAME = "TExperimentDAO";
+    private static final int VERSION = 1;
+    private static final String[] COLUMNS = {"filename", "json"};
+
+
+    public TExperimentDAO(Context ctx) {
+        super(ctx, TABLE_NAME, null, VERSION);
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        int cont = 0;
+        StringBuilder sb = new StringBuilder();
+        sb.append("CREATE TABLE ".concat(TABLE_NAME).concat(" ("));
+        sb.append(COLUMNS[cont++].concat(" TEXT PRIMARY KEY, "));
+        sb.append(COLUMNS[cont].concat(" TEXT);"));
+        db.execSQL(sb.toString());
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        String sb = "DROP TABLE IF EXISTS ".concat(TABLE_NAME.concat(";"));
+        db.execSQL(sb);
+        onCreate(db);
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TScriptDAO.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TScriptDAO.java
new file mode 100644
index 0000000000..3795f32012
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TScriptDAO.java
@@ -0,0 +1,132 @@
+package br.rnp.futebol.vocoliseu.dao;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import br.rnp.futebol.vocoliseu.pojo.Script;
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+
+/**
+ * [UFRGS] VO-CoLisEU
+ * Created by camargo on 25/10/2016
+ * Data Access Object (DAO) class to manage the experiments saved in
+ * the device internal memory
+ */
+
+public class TScriptDAO extends SQLiteOpenHelper {
+
+    private static final String TABLE_NAME = "NTScriptDAO";
+    private static final int VERSION = 1;
+    private static final String COLUMNS[] = {"video", "extension", "address", "json"};
+
+
+    public TScriptDAO(Context ctx) {
+        super(ctx, TABLE_NAME, null, VERSION);
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        int cont = 0;
+        StringBuilder sb = new StringBuilder();
+        sb.append("CREATE TABLE ".concat(TABLE_NAME).concat(" ("));
+        sb.append(COLUMNS[cont++].concat(" TEXT NOT NULL, "));
+        sb.append(COLUMNS[cont++].concat(" TEXT NOT NULL, "));
+        sb.append(COLUMNS[cont++].concat(" TEXT NOT NULL, "));
+        sb.append(COLUMNS[cont].concat(" TEXT NOT NULL, "));
+        sb.append("PRIMARY KEY (".concat(COLUMNS[0].concat(",").concat(COLUMNS[1]
+                .concat(",").concat(COLUMNS[2].concat("));")))));
+        db.execSQL(sb.toString());
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        String sb = "DROP TABLE IF EXISTS ".concat(TABLE_NAME.concat(";"));
+        db.execSQL(sb);
+        onCreate(db);
+    }
+
+    /**
+     * Check if an experiment with a passed filename is already saved in the device internal DB
+     * @return true if exists
+     */
+//    private boolean checkFile(String filename) {
+//        Cursor rawQuery = null;
+//        try {
+//            rawQuery = getReadableDatabase().rawQuery(
+//                    "SELECT 1 from ".concat(TABLE_NAME.concat(" WHERE ".concat(COLUMNS[1]).concat(" = ?"))),
+//                    new String[]{filename});
+//            int rc = rawQuery.getCount();
+//            return rc > 0;
+//        } catch (IllegalArgumentException ie) {
+//            return false;
+//        } finally {
+//            if (rawQuery != null)
+//                rawQuery.close();
+//        }
+//    }
+
+    /**
+     * Insert a new experiment in the DB
+     *
+     * @param script script to be inserted
+     */
+    public boolean insert(TScript script) {
+        try {
+            int cont = 0;
+            ContentValues values = new ContentValues();
+            values.put(COLUMNS[cont++], script.getVideo());
+            values.put(COLUMNS[cont++], script.getExtension());
+            values.put(COLUMNS[cont++], script.getAddress());
+            values.put(COLUMNS[cont], script.toSimpleJson().toString());
+            getWritableDatabase().insert(TABLE_NAME, null, values);
+            return true;
+        } catch (Exception e) {
+            return false;
+        }
+    }
+
+    /**
+     * Delete an experiment in the DB
+     */
+    public void delete(Integer id) {
+//        if (checkFile(exp.getFileName())) {
+        getWritableDatabase().delete(TABLE_NAME, COLUMNS[0].concat(" = ?"), new String[]{id.toString()});
+//        }
+    }
+
+    /**
+     * Get all the saved experiments
+     *
+     * @return the saved experiments
+     */
+    public List<TScript> getScripts() {
+        try {
+            List<TScript> exps = new ArrayList<>();
+            Cursor c = getWritableDatabase().query(TABLE_NAME, COLUMNS, null, null, null, null, null);
+            while (c.moveToNext()) {
+                int cont = 0;
+                TScript exp = new TScript();
+                exp.setVideo(c.getString(cont++));
+                exp.setExtension(c.getString(cont++));
+                exp.setAddress(c.getString(cont++));
+                exp.fromSimplesJson(new JSONObject(c.getString(cont)));
+                exps.add(exp);
+            }
+            c.close();
+            return exps;
+        } catch (JSONException e) {
+            return null;
+        }
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/Metric.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/Metric.java
index 7d9b4a0e6b..811254b96a 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/Metric.java
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/Metric.java
@@ -87,9 +87,9 @@ public String getTypeName() {
             case 1:
                 return "QoS";
             case 2:
-                return "QoE";
+                return "Subjective QoE";
             case 3:
-                return "QoE";
+                return "Objective QoE";
             default:
                 break;
         }
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java
index 43367db2af..1adfe82ef5 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java
@@ -6,12 +6,13 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 
 /**
  * Created by camargo on 10/11/16.
  */
-public class TExperiment {
+public class TExperiment implements Serializable {
 
     private String name;
     private String filename;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java
index 431eaca1dc..850e28e6be 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java
@@ -4,17 +4,18 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 
 /**
  * Created by camargo on 11/11/16.
  */
-public class TScript {
+public class TScript implements Serializable {
 
     private String video;
     private String extension;
     private String address;
-    private boolean useDash;
+    private boolean useDash, isUsedAux;
     private ArrayList<Integer> subjectiveQoeMetrics;
     private final String[] ATTRIBUTES = {"video", "extension", "address", "useDash", "subjectiveQoeMetrics"};
 
@@ -50,6 +51,14 @@ public void setUseDash(boolean useDash) {
         this.useDash = useDash;
     }
 
+    public boolean isUsedAux() {
+        return isUsedAux;
+    }
+
+    public void setUsedAux(boolean usedAux) {
+        isUsedAux = usedAux;
+    }
+
     public ArrayList<Integer> getSubjectiveQoeMetrics() {
         return subjectiveQoeMetrics;
     }
@@ -96,5 +105,42 @@ public JSONObject toJson() {
         return json;
     }
 
+    public JSONObject toSimpleJson() {
+        JSONObject json = new JSONObject();
+        JSONArray array = new JSONArray();
+        int cont = 3;
+        try {
+            json.put(ATTRIBUTES[cont++], this.isUseDash());
+            for (Integer i : this.getSubjectiveQoeMetrics())
+                array.put(i);
+            json.put(ATTRIBUTES[cont], array);
+        } catch (JSONException e) {
+            return null;
+        }
+        return json;
+
+    }
+
+    public TScript fromSimplesJson(JSONObject json) {
+        int cont = 3;
+        try {
+            this.useDash = json.getBoolean(ATTRIBUTES[cont++]);
+
+            this.subjectiveQoeMetrics = new ArrayList<>();
+            JSONArray qoe = json.getJSONArray(ATTRIBUTES[cont]);
+
+            for (int i = 0; i < qoe.length(); i++)
+                subjectiveQoeMetrics.add((Integer) qoe.get(i));
+
+        } catch (JSONException e) {
+            return null;
+        }
+        return this;
+    }
+
+    public String getProvider() {
+        return this.getAddress().concat("/").concat(this.getVideo()).concat(".").concat(this.getExtension());
+    }
+
 
 }
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExpFragmentAdapter.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExpFragmentAdapter.java
new file mode 100644
index 0000000000..d819c54077
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExpFragmentAdapter.java
@@ -0,0 +1,44 @@
+package br.rnp.futebol.vocoliseu.util.adapter;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentStatePagerAdapter;
+
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentConfigurationGeneralFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentConfigurationMetricsFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentGeneralFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentMetricsFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentScriptsFragment;
+
+public class ExpFragmentAdapter extends FragmentStatePagerAdapter {
+
+
+    public ExpFragmentAdapter(FragmentManager fm) {
+        super(fm);
+    }
+
+
+    /*
+    * Observation:
+    *   When adding (or deleting) tabs, increase or decrease getCount() value
+    * */
+    @Override
+    public Fragment getItem(int pos) {
+        switch (pos) {
+            case 0:
+                return new ExperimentGeneralFragment();
+            case 1:
+                return new ExperimentMetricsFragment();
+            case 2:
+                return new ExperimentScriptsFragment();
+            default:
+                break;
+        }
+        return null;
+    }
+
+    @Override
+    public int getCount() {
+        return 3;
+    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExperimentAdapter.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExperimentAdapter.java
index b4e1c20445..046730f653 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExperimentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExperimentAdapter.java
@@ -8,6 +8,7 @@
 import android.widget.TextView;
 
 import br.rnp.futebol.vocoliseu.pojo.Script;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
 
 import com.google.android.exoplayer2.demo.R;
 
@@ -20,14 +21,14 @@
 
     private Context ctx;
     private TextView tvName, tvFilename, tvAdress;
-    private Script exp;
-    private List<Script> exps;
+    private TExperiment exp;
+    private List<TExperiment> exps;
 
 
     public ExperimentAdapter() {
     }
 
-    public ExperimentAdapter(Context context, List<Script> exps) {
+    public ExperimentAdapter(Context context, List<TExperiment> exps) {
         super();
         this.ctx = context;
         this.exps = exps;
@@ -43,8 +44,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
         tvAdress = (TextView) view.findViewById(R.id.tv_exp_item_address);
 
         tvName.setText(exp.getName());
-        tvFilename.setText(exp.getFileName().concat(".txt"));
-        tvAdress.setText(exp.getAddress());
+        tvFilename.setText(exp.getFilename().concat(".txt"));
+        tvAdress.setText(exp.getScripts().size() + " video(s)");
 
         return view;
     }
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptAdapter.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptAdapter.java
new file mode 100644
index 0000000000..bae1bbf4c3
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptAdapter.java
@@ -0,0 +1,65 @@
+package br.rnp.futebol.vocoliseu.util.adapter;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.CheckBox;
+import android.widget.TextView;
+
+import com.google.android.exoplayer2.demo.R;
+
+import java.util.List;
+
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+
+public class ScriptAdapter extends BaseAdapter {
+
+    private Context ctx;
+    private TextView tvVideo, tvAddress;
+    private CheckBox cbUsed, cbDash;
+    private TScript script;
+    private List<TScript> scripts;
+
+
+    public ScriptAdapter() {
+    }
+
+    public ScriptAdapter(Context context, List<TScript> scripts) {
+        super();
+        this.ctx = context;
+        this.scripts = scripts;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        View view = LayoutInflater.from(ctx).inflate(R.layout.script_item, parent, false);
+        script = scripts.get(position);
+        tvVideo = (TextView) view.findViewById(R.id.tv_script_video);
+        tvAddress = (TextView) view.findViewById(R.id.tv_script_address);
+        cbUsed = (CheckBox) view.findViewById(R.id.cb_script_use_dash);
+//        cbDash = (CheckBox) view.findViewById(R.id.cb_use_dash_confirmation);
+        tvVideo.setText(script.getVideo().concat(".").concat(script.getExtension()));
+        tvAddress.setText(script.getAddress());
+        cbUsed.setChecked(script.isUsedAux());
+//        cbDash.setChecked(script.isUseDash());
+        return view;
+    }
+
+    @Override
+    public long getItemId(int position) {
+//        return metrics.get(position).getId();
+        return position;
+    }
+
+    @Override
+    public Object getItem(int position) {
+        return scripts.get(position);
+    }
+
+    @Override
+    public int getCount() {
+        return scripts.size();
+    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptFragmentAdapter.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptFragmentAdapter.java
new file mode 100644
index 0000000000..9160e37976
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptFragmentAdapter.java
@@ -0,0 +1,42 @@
+package br.rnp.futebol.vocoliseu.util.adapter;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentStatePagerAdapter;
+
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentGeneralFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentMetricsFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentScriptsFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ScriptGeneralFragment;
+import br.rnp.futebol.vocoliseu.visual.fragment.ScriptMetricsFragment;
+
+public class ScriptFragmentAdapter extends FragmentStatePagerAdapter {
+
+
+    public ScriptFragmentAdapter(FragmentManager fm) {
+        super(fm);
+    }
+
+
+    /*
+    * Observation:
+    *   When adding (or deleting) tabs, increase or decrease getCount() value
+    * */
+    @Override
+    public Fragment getItem(int pos) {
+        switch (pos) {
+            case 0:
+                return new ScriptGeneralFragment();
+            case 1:
+                return new ScriptMetricsFragment();
+            default:
+                break;
+        }
+        return null;
+    }
+
+    @Override
+    public int getCount() {
+        return 2;
+    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java
index f3998cdb0c..4b7a009686 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java
@@ -9,9 +9,15 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.design.widget.NavigationView;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.Menu;
+import android.view.MenuItem;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.ImageButton;
@@ -20,57 +26,54 @@
 
 import br.rnp.futebol.vocoliseu.dao.ScriptDAO;
 import br.rnp.futebol.vocoliseu.pojo.Script;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
 import br.rnp.futebol.vocoliseu.util.adapter.ExperimentAdapter;
+
 import com.google.android.exoplayer2.demo.PlayerActivity;
 import com.google.android.exoplayer2.demo.R;
 
-import org.json.JSONException;
-import org.json.JSONObject;
 
 import java.util.List;
 
-/**
- * Created by camargo on 20/10/16.
- */
 public class DashboardActivity extends AppCompatActivity {
 
-    //    private EditText etAddress, etFile;
-//    private Button btStart, btExamples;
-//    private final String PREF = "VO_PREFS";
     private ImageButton ibNewExp;
     private List<Script> myExps;
     //    private TextView tvTitle;
     private ListView lvExps;
     private ExperimentAdapter adapter;
     private ScriptDAO dao;
+//    private DrawerLayout drawer;
+
+//    @Override
+//    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+//        drawer.closeDrawer(GravityCompat.START);
+//        return true;
+//    }
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-
         setContentView(R.layout.dashboard_activity);
-        String str = "{\"name\": \"exp teste\", \"filename\": \"exptst\",\"askinfo\": false,\"instruction\": \"none\",\"qosMetrics\": [1, 3, 4],\"objQoeMetrics\": [1, 3, 4],\"scripts\": []}";
-        try {
-            JSONObject teste = new JSONObject(str);
-            TExperiment t = new TExperiment().fromJson(teste);
-        } catch (JSONException e){
 
-        }
-//        tvTitle = (TextView) findViewById(R.id.tv_title);
-        ibNewExp = (ImageButton) findViewById(R.id.ib_new_experiment);
-        lvExps = (ListView) findViewById(R.id.lv_my_experiments);
+        init();
         Toolbar toolbar = (Toolbar) findViewById(R.id.dashboard_toolbar);
-        dao = new ScriptDAO(getBaseContext());
+//        NavigationView navView = (NavigationView) findViewById(R.id.main_drawer);
+//        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.open, R.string.close);
 
-//        toolbar.setLogo(R.drawable.ic_temp_icon_white_2);
         setSupportActionBar(toolbar);
+
+//        drawer.setDrawerListener(toggle);
+//        toggle.syncState();
+
+//        navView.setNavigationItemSelectedListener(this);
+
+        dao = new ScriptDAO(getBaseContext());
         checkPerm();
         refreshList();
         ibNewExp.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = new Intent(getBaseContext(), ExperimentConfigurationControllerActivity.class);
+                Intent intent = new Intent(getBaseContext(), ExperimentControllerActivity.class);
                 startActivity(intent);
             }
         });
@@ -91,7 +94,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         lvExps.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
             @Override
             public boolean onItemLongClick(AdapterView<?> parent, View view, final int position, long id) {
-               makeDialog(myExps.get(position).getName(),
+                makeDialog(myExps.get(position).getName(),
                         "Do you want to remove the selected experiments?\n(The file won't be removed from your device)",
                         DashboardActivity.this, new DialogInterface.OnClickListener() {
                             @Override
@@ -105,37 +108,12 @@ public void onClick(DialogInterface dialog, int which) {
                 return true;
             }
         });
-//        etAddress.setText(settings.getString("ip", null));
-//        etFile.setText(settings.getString("file", null));
-//        btExamples.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View view) {
-//                Intent intent = new Intent(getBaseContext(), ExperimentConfigurationControllerActivity.class);
-//                startActivity(intent);
-//            }
-//        });
-//        btStart.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View view) {
-//                if (etAddress != null)
-//                    if (etAddress.getText() != null)
-//                        if (!etAddress.getText().toString().trim().equals("")) {
-//                            SharedPreferences settings = getSharedPreferences(PREF, 0);
-//                            SharedPreferences.Editor editor = settings.edit();
-//                            editor.putString("ip", etAddress.getText().toString());
-//                            editor.putString("file", etFile.getText().toString());
-//                            editor.apply();
-//                            String json = "http://".concat(etAddress.getText().toString()).concat(".mpd");
-//                            Intent intent = new Intent(getBaseContext(), PlayerActivity.class);
-//                            Log.i("jsonjson", json);
-//                            intent.setData(Uri.parse(json));
-//                            intent.setAction(PlayerActivity.ACTION_VIEW);
-//                            startActivity(intent);
-//                        }
-//
-//            }
-//        });
+    }
 
+    public void init() {
+        ibNewExp = (ImageButton) findViewById(R.id.ib_new_experiment);
+        lvExps = (ListView) findViewById(R.id.lv_my_experiments);
+//        drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
     }
 
     public AlertDialog makeDialog(String title, String message, Context myContext, DialogInterface.OnClickListener listener) {
@@ -177,17 +155,9 @@ private void checkPerm() {
     private void refreshList() {
         myExps = dao.getExperiments();
         if (myExps != null) {
-            adapter = new ExperimentAdapter(getBaseContext(), myExps);
-            lvExps.setAdapter(adapter);
+//            adapter = new ExperimentAdapter(getBaseContext(), myExps);
+//            lvExps.setAdapter(adapter);
         }
     }
 
-//    private void init() {
-//        etAddress = (EditText) findViewById(R.id.et_address);
-//        etFile = (EditText) findViewById(R.id.et_file_name);
-//        btStart = (Button) findViewById(R.id.bt_start);
-//        btExamples = (Button) findViewById(R.id.bt_examples);
-//    }
-
-
 }
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ExperimentControllerActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ExperimentControllerActivity.java
new file mode 100644
index 0000000000..9faa34cf9f
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ExperimentControllerActivity.java
@@ -0,0 +1,160 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.vocoliseu.visual.activity;
+
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.design.widget.TabLayout;
+import android.support.v4.view.ViewPager;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.demo.R;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.ArrayList;
+
+import br.rnp.futebol.vocoliseu.dao.ScriptDAO;
+import br.rnp.futebol.vocoliseu.dao.TExpForListDAO;
+import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.vocoliseu.pojo.Script;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
+import br.rnp.futebol.vocoliseu.util.adapter.ExpFragmentAdapter;
+import br.rnp.futebol.vocoliseu.util.adapter.FragmentAdapter;
+
+public class ExperimentControllerActivity extends AppCompatActivity {
+
+    private static final String TAG = "ExperimentController";
+    private TExperiment experiment;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.experiment_fragment_controller);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.tb_experiment);
+        TabLayout tabLayout = (TabLayout) findViewById(R.id.tl_experiment);
+        final ViewPager viewPager = (ViewPager) findViewById(R.id.vp_experiment);
+
+        experiment = new TExperiment();
+//        ArrayList<Metric> metrics = new ArrayList<>();
+
+//        ReadyMetrics.init();
+//        metrics.addAll(ReadyMetrics.QOS_METRICS);
+//        metrics.addAll(ReadyMetrics.S_QOE_METRICS);
+//        metrics.addAll(ReadyMetrics.O_QOE_METRICS);
+
+        setSupportActionBar(toolbar);
+//        toolbar.setLogo(R.drawable.ic_temp_icon_white_2);
+
+        tabLayout.addTab(tabLayout.newTab().setText("EXPERIMENT"));
+        tabLayout.addTab(tabLayout.newTab().setText("METRICS"));
+        tabLayout.addTab(tabLayout.newTab().setText("VIDEOS"));
+//        tabLayout.addTab(tabLayout.newTab().setText("Metrics"));
+        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
+
+        ExpFragmentAdapter adapter = new ExpFragmentAdapter(getSupportFragmentManager());
+        viewPager.setAdapter(adapter);
+        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
+        tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
+            @Override
+            public void onTabSelected(TabLayout.Tab tab) {
+                viewPager.setCurrentItem(tab.getPosition());
+            }
+
+            @Override
+            public void onTabUnselected(TabLayout.Tab tab) {
+            }
+
+            @Override
+            public void onTabReselected(TabLayout.Tab tab) {
+            }
+
+        });
+    }
+
+    private void write(String file, String msg) {
+        try {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(file.concat(".txt"));
+            BufferedWriter output;
+            output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i(TAG, e.getMessage());
+        }
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.experiment_menu, menu);
+        return true;
+    }
+
+    private boolean isFieldOk(String field) {
+        return (field != null && !field.trim().equals(""));
+    }
+
+    private boolean areFieldsOk() {
+        return ((isFieldOk(experiment.getName())) && (isFieldOk(experiment.getFilename())));
+    }
+
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+        if (id == R.id.action_save) {
+            if (areFieldsOk()) {
+                write(experiment.getFilename(), experiment.toJson().toString());
+                TExpForListDAO dao = new TExpForListDAO(getBaseContext());
+                dao.insert(experiment);
+                dao.close();
+                Toast.makeText(getBaseContext(), "Script saved as " + experiment.getFilename() + ".txt", Toast.LENGTH_SHORT).show();
+//                Log.i(TAG, read(script.getFileName()));
+//                new ScriptDAO(getBaseContext()).insert(script);
+                finish();
+//                try {
+//                    Script exp = new Script().fromJson(new JSONObject(read(script.getFileName())));
+//                } catch (JSONException e) {
+//                }
+            } else {
+                Toast.makeText(getBaseContext(), "Name and filename cannot be empty", Toast.LENGTH_SHORT).show();
+            }
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    public TExperiment getExperiment() {
+        return experiment;
+    }
+
+    public void setExperiment(TExperiment experiment) {
+        this.experiment = experiment;
+    }
+}
+
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ExperimentGeneralInfoActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ExperimentGeneralInfoActivity.java
new file mode 100644
index 0000000000..0e1c9c2a95
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ExperimentGeneralInfoActivity.java
@@ -0,0 +1,29 @@
+package br.rnp.futebol.vocoliseu.visual.activity;
+
+import android.os.Bundle;
+import android.os.PersistableBundle;
+import android.support.annotation.NonNull;
+import android.support.design.widget.NavigationView;
+import android.support.v7.app.AppCompatActivity;
+import android.view.MenuItem;
+
+import com.google.android.exoplayer2.demo.R;
+
+/**
+ * Created by camargo on 18/11/16.
+ */
+public class ExperimentGeneralInfoActivity extends AppCompatActivity
+        implements NavigationView.OnNavigationItemSelectedListener {
+
+
+    @Override
+    public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {
+        super.onCreate(savedInstanceState, persistentState);
+        setContentView(R.layout.experiment_fragment_controller);
+    }
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+        return false;
+    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/MainActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/MainActivity.java
new file mode 100644
index 0000000000..cb8d8f42d0
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/MainActivity.java
@@ -0,0 +1,178 @@
+package br.rnp.futebol.vocoliseu.visual.activity;
+
+import android.Manifest;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.NavigationView;
+import android.support.design.widget.Snackbar;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ListView;
+
+import com.google.android.exoplayer2.demo.PlayerActivity;
+import com.google.android.exoplayer2.demo.R;
+
+import java.util.ArrayList;
+
+import br.rnp.futebol.vocoliseu.dao.TExpForListDAO;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.vocoliseu.util.adapter.ExperimentAdapter;
+import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
+
+public class MainActivity extends AppCompatActivity
+        implements NavigationView.OnNavigationItemSelectedListener {
+
+    private ListView lvExperiments;
+    private ExperimentAdapter adapter;
+    private ArrayList<TExperiment> exps;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        checkPerm();
+
+        lvExperiments = (ListView) findViewById(R.id.lv_main_experiments);
+
+//        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab_video);
+//        fab.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View view) {
+//                startActivity(new Intent(getBaseContext(), ExperimentGeneralInfoActivity.class));
+//            }
+//        });
+
+
+        TExpForListDAO dao = new TExpForListDAO(getBaseContext());
+        exps = dao.getExpsByNames(dao.getExpsNames());
+
+        lvExperiments.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                TExperiment exp = exps.get(position);
+                int index = 0;
+                TScript first = exp.getScripts().get(index);
+
+                String provider = first.getProvider();
+
+                Bundle extras = new Bundle();
+                extras.putInt("index", index);
+                extras.putSerializable("experiment", exp);
+
+                Intent intent = new Intent((getBaseContext()), PlayerActivity.class);
+                intent.putExtras(extras);
+
+                intent.setData(Uri.parse(provider));
+                intent.setAction(PlayerActivity.ACTION_VIEW);
+
+                startActivity(intent);
+            }
+        });
+
+        lvExperiments.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
+            @Override
+            public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
+                Intent mailClient = new Intent(Intent.ACTION_VIEW);
+                mailClient.setClassName("com.google.android.gm", "com.google.android.gm.ConversationListActivity");
+                startActivity(mailClient);
+                return false;
+            }
+        });
+
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                this, drawer, toolbar, R.string.open, R.string.close);
+        drawer.setDrawerListener(toggle);
+        toggle.syncState();
+
+        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
+        navigationView.setNavigationItemSelectedListener(this);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        refreshList();
+    }
+
+    @Override
+    public void onBackPressed() {
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        if (drawer.isDrawerOpen(GravityCompat.START)) {
+            drawer.closeDrawer(GravityCompat.START);
+        } else {
+            super.onBackPressed();
+        }
+    }
+
+    private void refreshList() {
+        if (exps != null) {
+            adapter = new ExperimentAdapter(getBaseContext(), exps);
+            lvExperiments.setAdapter(adapter);
+        }
+    }
+
+    private void checkPerm() {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
+            }
+        }
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+//        getMenuInflater().inflate(R.menu.dashboard_menu, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        int id = item.getItemId();
+
+        //noinspection SimplifiableIfStatement
+
+        return super.onOptionsItemSelected(item);
+    }
+
+    @SuppressWarnings("StatementWithEmptyBody")
+    @Override
+    public boolean onNavigationItemSelected(MenuItem item) {
+        // Handle navigation view item clicks here.
+        int id = item.getItemId();
+        switch (id) {
+            case (R.id.navigation_item_experiment):
+                startActivity(new Intent(this, ExperimentControllerActivity.class));
+                break;
+            case (R.id.navigation_item_video):
+                startActivity(new Intent(this, ScriptControllerActivity.class));
+                break;
+            default:
+                break;
+
+        }
+
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.START);
+        return true;
+    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ScriptControllerActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ScriptControllerActivity.java
new file mode 100644
index 0000000000..6a650b510e
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/ScriptControllerActivity.java
@@ -0,0 +1,127 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.vocoliseu.visual.activity;
+
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.design.widget.TabLayout;
+import android.support.v4.view.ViewPager;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+
+import com.google.android.exoplayer2.demo.R;
+
+import java.io.BufferedWriter;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.ArrayList;
+
+import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
+import br.rnp.futebol.vocoliseu.pojo.Experiment;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
+import br.rnp.futebol.vocoliseu.util.adapter.ExpFragmentAdapter;
+import br.rnp.futebol.vocoliseu.util.adapter.ScriptFragmentAdapter;
+import br.rnp.futebol.vocoliseu.visual.fragment.ExperimentScriptsFragment;
+public class ScriptControllerActivity extends AppCompatActivity {
+
+    private TScript script;
+//    private TExperiment experiment;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.script_fragment_controller);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.tb_script);
+        TabLayout tabLayout = (TabLayout) findViewById(R.id.tl_script);
+        final ViewPager viewPager = (ViewPager) findViewById(R.id.vp_script);
+
+//        if (getIntent() != null)
+//            if (getIntent().getExtras() != null)
+//                experiment = (TExperiment) getIntent().getExtras().getSerializable("experiment");
+        script = new TScript();
+//        experiment = ExperimentScriptsFragment.getExperiment();
+        setSupportActionBar(toolbar);
+
+        tabLayout.addTab(tabLayout.newTab().setText("VIDEO"));
+        tabLayout.addTab(tabLayout.newTab().setText("METRICS"));
+        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
+
+        ScriptFragmentAdapter adapter = new ScriptFragmentAdapter(getSupportFragmentManager());
+        viewPager.setAdapter(adapter);
+        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
+        tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
+            @Override
+            public void onTabSelected(TabLayout.Tab tab) {
+                viewPager.setCurrentItem(tab.getPosition());
+            }
+
+            @Override
+            public void onTabUnselected(TabLayout.Tab tab) {
+            }
+
+            @Override
+            public void onTabReselected(TabLayout.Tab tab) {
+            }
+
+        });
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.experiment_menu, menu);
+        return true;
+    }
+
+    private boolean isFieldOk(String field) {
+        return (field != null && !field.trim().equals(""));
+    }
+
+    private boolean areFieldsOk() {
+        return ((isFieldOk(script.getAddress())) && (isFieldOk(script.getVideo())) &&
+                (isFieldOk(script.getExtension())));
+    }
+
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+        if (id == R.id.action_save) {
+            if (areFieldsOk()) {
+//                if (experiment.getScripts() == null)
+//                    experiment.setScripts(new ArrayList<TScript>());
+//                experiment.getScripts().add(script);
+                TScriptDAO dao = new TScriptDAO(getBaseContext());
+                dao.insert(script);
+                finish();
+            }
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    public TScript getScript() {
+        return script;
+    }
+
+    public void setScript(TScript script) {
+        this.script = script;
+    }
+}
+
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentGeneralFragment.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentGeneralFragment.java
new file mode 100644
index 0000000000..f3f6171c7e
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentGeneralFragment.java
@@ -0,0 +1,110 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.vocoliseu.visual.fragment;
+
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.EditText;
+import android.widget.ListView;
+
+import com.google.android.exoplayer2.demo.R;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.List;
+
+import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.vocoliseu.pojo.Script;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
+import br.rnp.futebol.vocoliseu.visual.activity.ExperimentConfigurationControllerActivity;
+import br.rnp.futebol.vocoliseu.visual.activity.ExperimentControllerActivity;
+
+public class ExperimentGeneralFragment extends Fragment {
+
+    private static final String TAG = "ExperimentMetrics";
+    private TExperiment experiment;
+    private EditText etName, etFilename, etInstructions;
+    private CheckBox cbAskInfo;
+    private View view;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        view = inflater.inflate(R.layout.experiment_general_fragment, container, false);
+        experiment = ((ExperimentControllerActivity) getActivity()).getExperiment();
+        init();
+        cbAskInfo.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                experiment.setAskInfo(isChecked);
+            }
+        });
+        etName.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
+                updateInfo();
+            }
+        });
+        etFilename.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
+                updateInfo();
+            }
+        });
+        etInstructions.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
+                updateInfo();
+            }
+        });
+        return view;
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+    }
+
+    private void init() {
+        etName = (EditText) view.findViewById(R.id.et_exp_name);
+        etFilename = (EditText) view.findViewById(R.id.et_file_name);
+        etInstructions = (EditText) view.findViewById(R.id.et_instructions);
+        cbAskInfo = (CheckBox) view.findViewById(R.id.cb_ask_info);
+    }
+
+    private void updateInfo() {
+        experiment.setName(etName.getText().toString());
+        experiment.setFilename(etFilename.getText().toString());
+        experiment.setInstruction(etInstructions.getText().toString());
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentMetricsFragment.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentMetricsFragment.java
new file mode 100644
index 0000000000..3d92d93e92
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentMetricsFragment.java
@@ -0,0 +1,129 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.vocoliseu.visual.fragment;
+
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ListView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.demo.R;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.vocoliseu.pojo.Script;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
+import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
+import br.rnp.futebol.vocoliseu.visual.activity.ExperimentConfigurationControllerActivity;
+import br.rnp.futebol.vocoliseu.visual.activity.ExperimentControllerActivity;
+
+/**
+ * An activity for selecting from a list of samples.
+ */
+public class ExperimentMetricsFragment extends Fragment {
+
+    private static final String TAG = "ExperimentMetrics";
+    private View view;
+    private ListView lvMetrics;
+    private List<Metric> metrics;
+    private MetricAdapter adapter;
+    private TExperiment experiment;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        view = inflater.inflate(R.layout.experiment_metrics_fragment, container, false);
+        init();
+        lvMetrics.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (metrics.get(position).getType() == Metric.O_QOE) {
+                    if (experiment.getObjectiveQoeMetrics() == null)
+                        experiment.setObjectiveQoeMetrics(new ArrayList<Integer>());
+                    operateMetricsList(experiment.getObjectiveQoeMetrics(), position);
+                } else {
+                    if (experiment.getQosMetrics() == null)
+                        experiment.setQosMetrics(new ArrayList<Integer>());
+                    operateMetricsList(experiment.getQosMetrics(), position);
+                }
+                refreshList();
+            }
+        });
+        return view;
+    }
+
+    private void operateMetricsList(ArrayList<Integer> metricsIds, int position) {
+        if (metricsIds.contains(metrics.get(position).getId())) {
+            for (int i = 0; i < metricsIds.size(); i++)
+                if (metricsIds.get(i) == metrics.get(position).getId())
+                    metricsIds.remove(i);
+        } else
+            metricsIds.add(metrics.get(position).getId());
+    }
+
+    private void init() {
+        experiment = ((ExperimentControllerActivity) getActivity()).getExperiment();
+        lvMetrics = (ListView) view.findViewById(R.id.lv_exp_metrics);
+        metrics = new ArrayList<>();
+    }
+
+    private void refreshList() {
+        ReadyMetrics.init();
+        ArrayList<Integer> ids = new ArrayList<>();
+        metrics.clear();
+        if (experiment.getObjectiveQoeMetrics() != null)
+            ids.addAll(experiment.getObjectiveQoeMetrics());
+        if (experiment.getQosMetrics() != null)
+            ids.addAll(experiment.getQosMetrics());
+        if (ReadyMetrics.O_QOE_METRICS != null)
+            metrics.addAll(ReadyMetrics.O_QOE_METRICS);
+        if (ReadyMetrics.QOS_METRICS != null)
+            metrics.addAll(ReadyMetrics.QOS_METRICS);
+        if (!ids.isEmpty())
+            for (Metric m : metrics)
+                for (Integer id : ids)
+                    if (id == m.getId())
+                        m.setUsed(true);
+        if (metrics != null) {
+            adapter = new MetricAdapter(getContext(), metrics);
+            lvMetrics.setAdapter(adapter);
+        }
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        refreshList();
+    }
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentScriptsFragment.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentScriptsFragment.java
new file mode 100644
index 0000000000..daad77974c
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExperimentScriptsFragment.java
@@ -0,0 +1,161 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.vocoliseu.visual.fragment;
+
+import android.content.Intent;
+import android.media.Image;
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ImageButton;
+import android.widget.ListView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.demo.R;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.List;
+
+import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
+import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.vocoliseu.pojo.Script;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
+import br.rnp.futebol.vocoliseu.util.adapter.ScriptAdapter;
+import br.rnp.futebol.vocoliseu.visual.activity.ExperimentConfigurationControllerActivity;
+import br.rnp.futebol.vocoliseu.visual.activity.ExperimentControllerActivity;
+import br.rnp.futebol.vocoliseu.visual.activity.ScriptControllerActivity;
+
+/**
+ * An activity for selecting from a list of samples.
+ */
+public class ExperimentScriptsFragment extends Fragment {
+
+    private static final String TAG = "ExperimentMetrics";
+    private View view;
+    private ListView lvScripts;
+    private ScriptAdapter adapter;
+    private TExperiment experiment;
+//    private ImageButton ibNewScript;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        view = inflater.inflate(R.layout.experiment_scripts_fragment, container, false);
+        init();
+        lvScripts.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (experiment.getScripts() == null)
+                    experiment.setScripts(new ArrayList<TScript>());
+                List<TScript> scripts = new TScriptDAO(getContext()).getScripts();
+                if (experiment.getScripts().isEmpty())
+                    experiment.getScripts().add(scripts.get(position));
+                else {
+                    boolean aux = false;
+                    int cont = 0;
+                    for (TScript s : experiment.getScripts()) {
+                        if (compareScripts(s, scripts.get(position))) {
+                            experiment.getScripts().remove(cont);
+                            aux = true;
+                        }
+                        cont++;
+                    }
+                    if (!aux)
+                        experiment.getScripts().add(scripts.get(position));
+                }
+                refreshList();
+            }
+        });
+//        ibNewScript.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                Intent intent = new Intent(getActivity().getBaseContext(), ScriptControllerActivity.class);
+//                Bundle extras = new Bundle();
+//                extras.putSerializable("experiment", experiment);
+//                intent.putExtras(extras);
+//                startActivity(intent);
+//            }
+//        });
+        return view;
+    }
+
+    private void init() {
+        experiment = ((ExperimentControllerActivity) getActivity()).getExperiment();
+        lvScripts = (ListView) view.findViewById(R.id.lv_exp_scripts);
+//        ibNewScript = (ImageButton) view.findViewById(R.id.ib_new_script);
+    }
+
+    private void refreshList() {
+        List<TScript> aux = null;
+        List<TScript> scripts = new TScriptDAO(getContext()).getScripts();
+        if (scripts != null) {
+            aux = scripts;
+            if (experiment.getScripts() != null)
+                if (!experiment.getScripts().isEmpty()) {
+                    for (TScript s : experiment.getScripts()) {
+                        for (TScript sc : aux) {
+                            if (compareScripts(s, sc))
+                                sc.setUsedAux(true);
+                        }
+                    }
+                }
+        }
+        if (aux != null && !aux.isEmpty()) {
+            adapter = new ScriptAdapter(getContext(), aux);
+            lvScripts.setAdapter(adapter);
+        }
+    }
+
+    private boolean compareScripts(TScript sc1, TScript sc2) {
+        return (sc1.getAddress().compareTo(sc2.getAddress()) == 0
+                && sc1.getVideo().compareTo(sc2.getVideo()) == 0
+                && sc1.getExtension().compareTo(sc2.getExtension()) == 0);
+
+
+    }
+
+//    public static TExperiment getExperiment() {
+//        return experiment;
+//    }
+
+//    public static void setExperiment(TExperiment experiment) {
+//        this.experiment = experiment;
+//    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        refreshList();
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ScriptGeneralFragment.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ScriptGeneralFragment.java
new file mode 100644
index 0000000000..a67b2ca4d9
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ScriptGeneralFragment.java
@@ -0,0 +1,92 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.vocoliseu.visual.fragment;
+
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.EditText;
+
+import com.google.android.exoplayer2.demo.R;
+
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.vocoliseu.visual.activity.ScriptControllerActivity;
+
+public class ScriptGeneralFragment extends Fragment {
+
+    private static final String TAG = "ExperimentMetrics";
+    private TScript script;
+    private EditText etAddress, etVideo, etExtension;
+    private CheckBox cbUseDash;
+    private View view;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        view = inflater.inflate(R.layout.script_general_fragment, container, false);
+        script = ((ScriptControllerActivity) getActivity()).getScript();
+        init();
+        cbUseDash.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                script.setUseDash(isChecked);
+            }
+        });
+        etAddress.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
+                updateInfo();
+            }
+        });
+        etVideo.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
+                updateInfo();
+            }
+        });
+        etExtension.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
+                updateInfo();
+            }
+        });
+        return view;
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+    }
+
+    private void init() {
+        etAddress = (EditText) view.findViewById(R.id.et_provider_address);
+        etVideo = (EditText) view.findViewById(R.id.et_video_name);
+        etExtension = (EditText) view.findViewById(R.id.et_video_extension);
+        cbUseDash = (CheckBox) view.findViewById(R.id.cb_use_dash_flag);
+    }
+
+    private void updateInfo() {
+        script.setAddress(etAddress.getText().toString());
+        script.setVideo(etVideo.getText().toString());
+        script.setExtension(etExtension.getText().toString());
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ScriptMetricsFragment.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ScriptMetricsFragment.java
new file mode 100644
index 0000000000..406eaf3bbb
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ScriptMetricsFragment.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.vocoliseu.visual.fragment;
+
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ListView;
+
+import com.google.android.exoplayer2.demo.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
+import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
+import br.rnp.futebol.vocoliseu.visual.activity.ExperimentControllerActivity;
+import br.rnp.futebol.vocoliseu.visual.activity.ScriptControllerActivity;
+
+/**
+ * An activity for selecting from a list of samples.
+ */
+public class ScriptMetricsFragment extends Fragment {
+
+    private static final String TAG = "ExperimentMetrics";
+    private View view;
+    private ListView lvMetrics;
+    private List<Metric> metrics;
+    private MetricAdapter adapter;
+    private TScript script;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        view = inflater.inflate(R.layout.script_metrics_fragment, container, false);
+        init();
+        lvMetrics.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (script.getSubjectiveQoeMetrics() == null)
+                    script.setSubjectiveQoeMetrics(new ArrayList<Integer>());
+                operateMetricsList(script.getSubjectiveQoeMetrics(), position);
+                refreshList();
+            }
+        });
+        return view;
+    }
+
+    private void operateMetricsList(ArrayList<Integer> metricsIds, int position) {
+        if (metricsIds.contains(metrics.get(position).getId())) {
+            for (int i = 0; i < metricsIds.size(); i++)
+                if (metricsIds.get(i) == metrics.get(position).getId())
+                    metricsIds.remove(i);
+        } else
+            metricsIds.add(metrics.get(position).getId());
+    }
+
+    private void init() {
+        script = ((ScriptControllerActivity) getActivity()).getScript();
+        lvMetrics = (ListView) view.findViewById(R.id.lv_script_metrics);
+        metrics = new ArrayList<>();
+    }
+
+    private void refreshList() {
+        ReadyMetrics.init();
+        metrics.clear();
+        ArrayList<Integer> ids = new ArrayList<>();
+        if (script.getSubjectiveQoeMetrics() != null)
+            ids.addAll(script.getSubjectiveQoeMetrics());
+        if (ReadyMetrics.S_QOE_METRICS != null)
+            metrics.addAll(ReadyMetrics.S_QOE_METRICS);
+        if (!ids.isEmpty())
+            for (Metric m : metrics)
+                for (Integer id : ids)
+                    if (id == m.getId())
+                        m.setUsed(true);
+        if (metrics != null) {
+            adapter = new MetricAdapter(getContext(), metrics);
+            lvMetrics.setAdapter(adapter);
+        }
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        refreshList();
+    }
+
+}
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index 16fd463620..8ee9cd40df 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -75,6 +75,8 @@
 import java.util.Map;
 import java.util.UUID;
 
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+
 /**
  * An activity that plays media using {@link SimpleExoPlayer}.
  */
@@ -105,7 +107,7 @@
     private Handler mainHandler;
     private EventLogger eventLogger;
     private SimpleExoPlayerView simpleExoPlayerView;
-//    private LinearLayout debugRootView;
+    //    private LinearLayout debugRootView;
     private TextView debugTextView;
 //    private Button retryButton;
 
@@ -114,7 +116,7 @@
     private SimpleExoPlayer player;
     private MappingTrackSelector trackSelector;
     private TrackSelectionHelper trackSelectionHelper;
-    private DebugTextViewHelper debugViewHelper;
+    private VODebugTextViewHelper debugViewHelper;
     private boolean playerNeedsSource;
 
     private boolean shouldAutoPlay;
@@ -221,100 +223,107 @@ public void onVisibilityChange(int visibility) {
 
     private void initializePlayer() {
         Intent intent = getIntent();
-        String filename = "default";
-        if (intent.getExtras() != null)
-            filename = intent.getExtras().getString("file");
-        if (player == null) {
-            boolean preferExtensionDecoders = intent.getBooleanExtra(PREFER_EXTENSION_DECODERS, false);
-            UUID drmSchemeUuid = intent.hasExtra(DRM_SCHEME_UUID_EXTRA)
-                    ? UUID.fromString(intent.getStringExtra(DRM_SCHEME_UUID_EXTRA)) : null;
-            DrmSessionManager drmSessionManager = null;
-            if (drmSchemeUuid != null) {
-                String drmLicenseUrl = intent.getStringExtra(DRM_LICENSE_URL);
-                String[] keyRequestPropertiesArray = intent.getStringArrayExtra(DRM_KEY_REQUEST_PROPERTIES);
-                Map<String, String> keyRequestProperties;
-                if (keyRequestPropertiesArray == null || keyRequestPropertiesArray.length < 2) {
-                    keyRequestProperties = null;
-                } else {
-                    keyRequestProperties = new HashMap<>();
-                    for (int i = 0; i < keyRequestPropertiesArray.length - 1; i += 2) {
-                        keyRequestProperties.put(keyRequestPropertiesArray[i],
-                                keyRequestPropertiesArray[i + 1]);
+        TExperiment experiment = null;
+        int index = -1;
+        if (intent.getExtras() != null) {
+            experiment = (TExperiment) intent.getExtras().getSerializable("experiment");
+            index = intent.getExtras().getInt("index");
+        }
+        if (experiment != null && index != -1) {
+            if (player == null) {
+                boolean preferExtensionDecoders = intent.getBooleanExtra(PREFER_EXTENSION_DECODERS, false);
+                UUID drmSchemeUuid = intent.hasExtra(DRM_SCHEME_UUID_EXTRA)
+                        ? UUID.fromString(intent.getStringExtra(DRM_SCHEME_UUID_EXTRA)) : null;
+                DrmSessionManager drmSessionManager = null;
+                if (drmSchemeUuid != null) {
+                    String drmLicenseUrl = intent.getStringExtra(DRM_LICENSE_URL);
+                    String[] keyRequestPropertiesArray = intent.getStringArrayExtra(DRM_KEY_REQUEST_PROPERTIES);
+                    Map<String, String> keyRequestProperties;
+                    if (keyRequestPropertiesArray == null || keyRequestPropertiesArray.length < 2) {
+                        keyRequestProperties = null;
+                    } else {
+                        keyRequestProperties = new HashMap<>();
+                        for (int i = 0; i < keyRequestPropertiesArray.length - 1; i += 2) {
+                            keyRequestProperties.put(keyRequestPropertiesArray[i],
+                                    keyRequestPropertiesArray[i + 1]);
+                        }
+                    }
+                    try {
+                        drmSessionManager = buildDrmSessionManager(drmSchemeUuid, drmLicenseUrl,
+                                keyRequestProperties);
+                    } catch (UnsupportedDrmException e) {
+                        int errorStringId = Util.SDK_INT < 18 ? R.string.error_drm_not_supported
+                                : (e.reason == UnsupportedDrmException.REASON_UNSUPPORTED_SCHEME
+                                ? R.string.error_drm_unsupported_scheme : R.string.error_drm_unknown);
+                        showToast(errorStringId);
+                        return;
                     }
                 }
-                try {
-                    drmSessionManager = buildDrmSessionManager(drmSchemeUuid, drmLicenseUrl,
-                            keyRequestProperties);
-                } catch (UnsupportedDrmException e) {
-                    int errorStringId = Util.SDK_INT < 18 ? R.string.error_drm_not_supported
-                            : (e.reason == UnsupportedDrmException.REASON_UNSUPPORTED_SCHEME
-                            ? R.string.error_drm_unsupported_scheme : R.string.error_drm_unknown);
-                    showToast(errorStringId);
-                    return;
+
+                eventLogger = new EventLogger();
+                TrackSelection.Factory videoTrackSelectionFactory =
+                        new AdaptiveVideoTrackSelection.Factory(BANDWIDTH_METER);
+                trackSelector = new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);
+                trackSelector.addListener(this);
+                trackSelector.addListener(eventLogger);
+                trackSelectionHelper = new TrackSelectionHelper(trackSelector, videoTrackSelectionFactory);
+                player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, new DefaultLoadControl(),
+                        drmSessionManager, preferExtensionDecoders);
+                player.addListener(this);
+                player.addListener(eventLogger);
+                player.setAudioDebugListener(eventLogger);
+                player.setVideoDebugListener(eventLogger);
+                player.setId3Output(eventLogger);
+                simpleExoPlayerView.setPlayer(player);
+                if (shouldRestorePosition) {
+                    if (playerPosition == C.TIME_UNSET) {
+                        player.seekToDefaultPosition(playerWindow);
+                    } else {
+                        player.seekTo(playerWindow, playerPosition);
+                    }
                 }
+                player.setPlayWhenReady(shouldAutoPlay);
+                debugViewHelper = new VODebugTextViewHelper(player, debugTextView, experiment, this, index);
+                debugViewHelper.start();
+                playerNeedsSource = true;
             }
-
-            eventLogger = new EventLogger();
-            TrackSelection.Factory videoTrackSelectionFactory =
-                    new AdaptiveVideoTrackSelection.Factory(BANDWIDTH_METER);
-            trackSelector = new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);
-            trackSelector.addListener(this);
-            trackSelector.addListener(eventLogger);
-            trackSelectionHelper = new TrackSelectionHelper(trackSelector, videoTrackSelectionFactory);
-            player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, new DefaultLoadControl(),
-                    drmSessionManager, preferExtensionDecoders);
-            player.addListener(this);
-            player.addListener(eventLogger);
-            player.setAudioDebugListener(eventLogger);
-            player.setVideoDebugListener(eventLogger);
-            player.setId3Output(eventLogger);
-            simpleExoPlayerView.setPlayer(player);
-            if (shouldRestorePosition) {
-                if (playerPosition == C.TIME_UNSET) {
-                    player.seekToDefaultPosition(playerWindow);
+            if (playerNeedsSource) {
+                String action = intent.getAction();
+                Uri[] uris;
+                String[] extensions;
+                if (ACTION_VIEW.equals(action)) {
+                    uris = new Uri[]{intent.getData()};
+                    extensions = new String[]{intent.getStringExtra(EXTENSION_EXTRA)};
+                } else if (ACTION_VIEW_LIST.equals(action)) {
+                    String[] uriStrings = intent.getStringArrayExtra(URI_LIST_EXTRA);
+                    uris = new Uri[uriStrings.length];
+                    for (int i = 0; i < uriStrings.length; i++) {
+                        uris[i] = Uri.parse(uriStrings[i]);
+                    }
+                    extensions = intent.getStringArrayExtra(EXTENSION_LIST_EXTRA);
+                    if (extensions == null) {
+                        extensions = new String[uriStrings.length];
+                    }
                 } else {
-                    player.seekTo(playerWindow, playerPosition);
+                    showToast(getString(R.string.unexpected_intent_action, action));
+                    return;
                 }
-            }
-            player.setPlayWhenReady(shouldAutoPlay);
-            debugViewHelper = new DebugTextViewHelper(player, debugTextView, filename);
-            debugViewHelper.start();
-            playerNeedsSource = true;
-        }
-        if (playerNeedsSource) {
-            String action = intent.getAction();
-            Uri[] uris;
-            String[] extensions;
-            if (ACTION_VIEW.equals(action)) {
-                uris = new Uri[]{intent.getData()};
-                extensions = new String[]{intent.getStringExtra(EXTENSION_EXTRA)};
-            } else if (ACTION_VIEW_LIST.equals(action)) {
-                String[] uriStrings = intent.getStringArrayExtra(URI_LIST_EXTRA);
-                uris = new Uri[uriStrings.length];
-                for (int i = 0; i < uriStrings.length; i++) {
-                    uris[i] = Uri.parse(uriStrings[i]);
+                if (Util.maybeRequestReadExternalStoragePermission(this, uris)) {
+                    // The player will be reinitialized if the permission is granted.
+                    return;
                 }
-                extensions = intent.getStringArrayExtra(EXTENSION_LIST_EXTRA);
-                if (extensions == null) {
-                    extensions = new String[uriStrings.length];
+                MediaSource[] mediaSources = new MediaSource[uris.length];
+                for (int i = 0; i < uris.length; i++) {
+                    mediaSources[i] = buildMediaSource(uris[i], extensions[i]);
                 }
-            } else {
-                showToast(getString(R.string.unexpected_intent_action, action));
-                return;
-            }
-            if (Util.maybeRequestReadExternalStoragePermission(this, uris)) {
-                // The player will be reinitialized if the permission is granted.
-                return;
+                MediaSource mediaSource = mediaSources.length == 1 ? mediaSources[0]
+                        : new ConcatenatingMediaSource(mediaSources);
+                player.prepare(mediaSource, !shouldRestorePosition);
+                playerNeedsSource = false;
+                updateButtonVisibilities();
             }
-            MediaSource[] mediaSources = new MediaSource[uris.length];
-            for (int i = 0; i < uris.length; i++) {
-                mediaSources[i] = buildMediaSource(uris[i], extensions[i]);
-            }
-            MediaSource mediaSource = mediaSources.length == 1 ? mediaSources[0]
-                    : new ConcatenatingMediaSource(mediaSources);
-            player.prepare(mediaSource, !shouldRestorePosition);
-            playerNeedsSource = false;
-            updateButtonVisibilities();
+        } else {
+            Toast.makeText(getBaseContext(), "Couldn't display video", Toast.LENGTH_SHORT).show();
         }
     }
 
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/VODebugTextViewHelper.java b/demo/src/main/java/com/google/android/exoplayer2/demo/VODebugTextViewHelper.java
new file mode 100644
index 0000000000..2a32bb55e9
--- /dev/null
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/VODebugTextViewHelper.java
@@ -0,0 +1,552 @@
+///*
+// * Copyright (C) 2016 The Android Open Source Project
+// *
+// * Licensed under the Apache License, Version 2.0 (the "License");
+// * you may not use this file except in compliance with the License.
+// * You may obtain a copy of the License at
+// *
+// *      http://www.apache.org/licenses/LICENSE-2.0
+// *
+// * Unless required by applicable law or agreed to in writing, software
+// * distributed under the License is distributed on an "AS IS" BASIS,
+// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// * See the License for the specific language governing permissions and
+// * limitations under the License.
+// */
+//package com.google.android.exoplayer2.ui;
+//
+//import android.widget.TextView;
+//import com.google.android.exoplayer2.ExoPlaybackException;
+//import com.google.android.exoplayer2.ExoPlayer;
+//import com.google.android.exoplayer2.Format;
+//import com.google.android.exoplayer2.SimpleExoPlayer;
+//import com.google.android.exoplayer2.Timeline;
+//import com.google.android.exoplayer2.decoder.DecoderCounters;
+//
+///**
+// * A helper class for periodically updating a {@link TextView} with debug information obtained from
+// * a {@link SimpleExoPlayer}.
+// */
+//public final class DebugTextViewHelper implements Runnable, ExoPlayer.EventListener {
+//
+//  private static final int REFRESH_INTERVAL_MS = 1000;
+//
+//  private final SimpleExoPlayer player;
+//  private final TextView textView;
+//
+//  private boolean started;
+//
+//  /**
+//   * @param player The {@link SimpleExoPlayer} from which debug information should be obtained.
+//   * @param textView The {@link TextView} that should be updated to display the information.
+//   */
+//  public DebugTextViewHelper(SimpleExoPlayer player, TextView textView) {
+//    this.player = player;
+//    this.textView = textView;
+//  }
+//
+//  /**
+//   * Starts periodic updates of the {@link TextView}. Must be called from the application's main
+//   * thread.
+//   */
+//  public void start() {
+//    if (started) {
+//      return;
+//    }
+//    started = true;
+//    player.addListener(this);
+//    updateAndPost();
+//  }
+//
+//  /**
+//   * Stops periodic updates of the {@link TextView}. Must be called from the application's main
+//   * thread.
+//   */
+//  public void stop() {
+//    if (!started) {
+//      return;
+//    }
+//    started = false;
+//    player.removeListener(this);
+//    textView.removeCallbacks(this);
+//  }
+//
+//  // ExoPlayer.EventListener implementation.
+//
+//  @Override
+//  public void onLoadingChanged(boolean isLoading) {
+//    // Do nothing.
+//  }
+//
+//  @Override
+//  public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
+//    updateAndPost();
+//  }
+//
+//  @Override
+//  public void onPositionDiscontinuity() {
+//    updateAndPost();
+//  }
+//
+//  @Override
+//  public void onTimelineChanged(Timeline timeline, Object manifest) {
+//    // Do nothing.
+//  }
+//
+//  @Override
+//  public void onPlayerError(ExoPlaybackException error) {
+//    // Do nothing.
+//  }
+//
+//  // Runnable implementation.
+//
+//  @Override
+//  public void run() {
+//    updateAndPost();
+//  }
+//
+//  // Private methods.
+//
+//  private void updateAndPost() {
+//    textView.setText(getPlayerStateString() + getPlayerWindowIndexString() + getVideoString()
+//        + getAudioString());
+//    textView.removeCallbacks(this);
+//    textView.postDelayed(this, REFRESH_INTERVAL_MS);
+//  }
+//
+//  private String getPlayerStateString() {
+//    String text = "playWhenReady:" + player.getPlayWhenReady() + " playbackState:";
+//    switch (player.getPlaybackState()) {
+//      case ExoPlayer.STATE_BUFFERING:
+//        text += "buffering";
+//        break;
+//      case ExoPlayer.STATE_ENDED:
+//        text += "ended";
+//        break;
+//      case ExoPlayer.STATE_IDLE:
+//        text += "idle";
+//        break;
+//      case ExoPlayer.STATE_READY:
+//        text += "ready";
+//        break;
+//      default:
+//        text += "unknown";
+//        break;
+//    }
+//    return text;
+//  }
+//
+//  private String getPlayerWindowIndexString() {
+//    return " window:" + player.getCurrentWindowIndex();
+//  }
+//
+//  private String getVideoString() {
+//    Format format = player.getVideoFormat();
+//    if (format == null) {
+//      return "";
+//    }
+//    return "\n" + format.sampleMimeType + "(id:" + format.id + " r:" + format.width + "x"
+//        + format.height + getDecoderCountersBufferCountString(player.getVideoDecoderCounters())
+//        + ")";
+//  }
+//
+//  private String getAudioString() {
+//    Format format = player.getAudioFormat();
+//    if (format == null) {
+//      return "";
+//    }
+//    return "\n" + format.sampleMimeType + "(id:" + format.id + " hz:" + format.sampleRate + " ch:"
+//        + format.channelCount
+//        + getDecoderCountersBufferCountString(player.getAudioDecoderCounters()) + ")";
+//  }
+//
+//  private static String getDecoderCountersBufferCountString(DecoderCounters counters) {
+//    if (counters == null) {
+//      return "";
+//    }
+//    counters.ensureUpdated();
+//    return " rb:" + counters.renderedOutputBufferCount
+//        + " sb:" + counters.skippedOutputBufferCount
+//        + " db:" + counters.droppedOutputBufferCount
+//        + " mcdb:" + counters.maxConsecutiveDroppedOutputBufferCount;
+//  }
+//
+//}
+
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.google.android.exoplayer2.demo;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Environment;
+import android.util.Log;
+import android.widget.TextView;
+
+import com.google.android.exoplayer2.ExoPlaybackException;
+import com.google.android.exoplayer2.ExoPlayer;
+import com.google.android.exoplayer2.Format;
+import com.google.android.exoplayer2.SimpleExoPlayer;
+import com.google.android.exoplayer2.Timeline;
+import com.google.android.exoplayer2.decoder.DecoderCounters;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.vocoliseu.visual.activity.MainActivity;
+
+
+/**
+ * A helper class for periodically updating a {@link TextView} with debug information obtained from
+ * a {@link SimpleExoPlayer}.
+ */
+public final class VODebugTextViewHelper implements Runnable, ExoPlayer.EventListener {
+
+    private static final int REFRESH_INTERVAL_MS = 1000;
+
+    private final SimpleExoPlayer player;
+    private final TextView textView;
+    private boolean started, isPstFilled;
+    private long playbackStartTime, bufferingStartAux, bufferingEndAux;
+    private int bitrateAux = 0, bseCont = 0, index;
+    private boolean first = true, written = false, showedQuestion = false;
+    private String initialRes, initialBR;
+    private Context ctx;
+    private TExperiment experiment;
+
+    /**
+     * @param player   The {@link SimpleExoPlayer} from which debug information should be obtained.
+     * @param textView The {@link TextView} that should be updated to display the information.
+     */
+    public VODebugTextViewHelper(SimpleExoPlayer player, TextView textView, TExperiment experiment, Context ctx, int index) {
+        this.player = player;
+        this.textView = textView;
+        this.experiment = experiment;
+        this.ctx = ctx;
+        this.index = index;
+    }
+
+    /**
+     * Starts periodic updates of the {@link TextView}. Must be called from the application's main
+     * thread.
+     */
+    public void start() {
+        if (started) {
+            return;
+        }
+        written = false;
+        started = true;
+        player.addListener(this);
+        updateAndPost();
+    }
+
+    /**
+     * Stops periodic updates of the {@link TextView}. Must be called from the application's main
+     * thread.
+     */
+    public void stop() {
+        if (!started) {
+            return;
+        }
+        started = false;
+        player.removeListener(this);
+        textView.removeCallbacks(this);
+    }
+
+    // ExoPlayer.EventListener implementation.
+
+    @Override
+    public void onLoadingChanged(boolean isLoading) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
+        if (playbackState == ExoPlayer.STATE_BUFFERING && playWhenReady) {
+            bufferingStartAux = Calendar.getInstance().getTimeInMillis();
+            if (isPstFilled)
+                player.increaseStalls();
+        } else if (playbackState == ExoPlayer.STATE_READY) {
+            bufferingEndAux = Calendar.getInstance().getTimeInMillis();
+            if (isPstFilled)
+                player.setStallsDuration(bufferingEndAux - bufferingStartAux);
+            else {
+                playbackStartTime = bufferingEndAux - bufferingStartAux;
+                isPstFilled = true;
+            }
+        }
+        updateAndPost();
+    }
+
+    @Override
+    public void onPositionDiscontinuity() {
+        updateAndPost();
+    }
+
+    @Override
+    public void onTimelineChanged(Timeline timeline, Object manifest) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerError(ExoPlaybackException error) {
+        // Do nothing.
+    }
+
+    // Runnable implementation.
+
+    @Override
+    public void run() {
+        updateAndPost();
+    }
+
+
+    // Private methods.
+
+    private void updateAndPost() {
+//    textView.setText(getPlayerStateString() + getPlayerWindowIndexString() + getVideoString() + getAudioString());
+//    textView.setText(getPlayerStateString() + "Buffer Percentage: " + player.getBufferedPercentage() + "%\n" +
+//                     "Buffer Position: " + player.getBufferedPosition() + "\n");
+        if (!(player.getPlaybackState() == ExoPlayer.STATE_ENDED)) {
+            textView.setText(getLogString());
+            textView.removeCallbacks(this);
+            textView.postDelayed(this, REFRESH_INTERVAL_MS);
+        } else {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat(".csv"));
+            File header = new File(csv);
+            if (!header.exists())
+                write(getHeader(), false);
+            if (!written)
+                write(buildCsvText(), true);
+            if (!showedQuestion)
+                if (experiment.getScripts().size() > ++index) {
+                    makeDialog("The video is finished", "Do you want to start a new video?",
+                            ctx, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    TScript first = experiment.getScripts().get(index);
+
+                                    String provider = first.getProvider();
+
+                                    Bundle extras = new Bundle();
+                                    extras.putInt("index", index);
+                                    extras.putSerializable("experiment", experiment);
+
+                                    Intent intent = new Intent(ctx, PlayerActivity.class);
+                                    intent.putExtras(extras);
+
+                                    intent.setData(Uri.parse(provider));
+                                    intent.setAction(PlayerActivity.ACTION_VIEW);
+
+                                    ctx.startActivity(intent);
+                                }
+                            });
+                } else {
+                    makeDialog("The video is finished", "That was the last one. Thanks for your participation",
+                            ctx, new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    ctx.startActivity(new Intent(ctx, MainActivity.class));
+                                    ((PlayerActivity) ctx).finish();
+                                }
+                            });
+                }
+
+            showedQuestion = true;
+
+        }
+    }
+
+    private String buildCsvText() {
+        Format format = player.getVideoFormat();
+        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy-HH:mm:ss");
+        String txt = sdf.format(new Date()) + ",";
+        txt += initialBR + "," + format.bitrate + "" + ",";
+        txt += initialRes + "," + format.width + "x" + format.height + ",";
+        txt += player.getStalls() + "," + player.getStallsDuration() + ",";
+        txt += playbackStartTime;
+        return txt;
+    }
+
+    private String getLogString() {
+        StringBuilder builder = new StringBuilder();
+        builder.append(getStatusString());
+//    builder.append(getPlayerWindowIndexString());
+        builder.append(getPlayerStateString());
+        builder.append(getBufferProgress());
+        builder.append(getVideoString());
+        builder.append(getAudioString());
+//    builder.append(getDecoderCountersBufferCountString("Video", player.getVideoDecoderCounters()));
+//    builder.append(getDecoderCountersBufferCountString("Audio", player.getAudioDecoderCounters()));
+        builder.append(getStallsString());
+        return builder.toString();
+    }
+
+    private String getPlayerStateString() {
+        String text = "\nPlayback State: ";
+        switch (player.getPlaybackState()) {
+            case ExoPlayer.STATE_BUFFERING:
+                text += "buffering";
+                break;
+            case ExoPlayer.STATE_ENDED:
+                text += "ended";
+                break;
+            case ExoPlayer.STATE_IDLE:
+                text += "idle";
+                break;
+            case ExoPlayer.STATE_READY:
+                text += "ready";
+                break;
+            default:
+                text += "unknown";
+                break;
+        }
+        return text;
+    }
+
+    private String getHeader() {
+        return "Timestamp, Initial Bitrate, Final Bitrate, Initial Res, Final Res, Freezes, Freezes Duration, Playback Start Time";
+    }
+
+    public AlertDialog makeDialog(String title, String message, Context myContext, DialogInterface.OnClickListener listener) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(myContext);
+        builder.setMessage(message);
+        builder.setTitle(title);
+        builder.setPositiveButton("OK", listener);
+        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+            }
+        });
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    private String getStallsString() {
+        String text = "\nFreezes: " + player.getStalls();
+        text += "\nFreezes Duration: " + player.getStallsDuration() + "ms";
+        text += "\nPlayback Start Time: " + playbackStartTime + "ms";
+        return text;
+    }
+
+    private String getStatusString() {
+        String status = ("Ready to Play: ");
+        status += (player.getPlayWhenReady());
+        status += ("\nIs Loading Content: ");
+        status += (player.isLoading());
+        return status;
+    }
+
+    private void write(String msg, boolean written) {
+        try {
+            this.written = written;
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat(".csv"));
+            BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i("teste", e.getMessage());
+        }
+    }
+
+    private String getBufferProgress() {
+        String text = ("\nBuffer Progress: ");
+        text += ((player.getBufferedPosition()) / 1000) + ("s/");
+        text += (player.getDuration() / 1000) + ("s (");
+        text += (player.getBufferedPercentage()) + ("%)");
+        return text;
+    }
+
+    private String getPlayerWindowIndexString() {
+        String index = ("\nPeriod Index: ");
+        index += (player.getCurrentPeriodIndex());
+        return (index.concat("\nWindow Index: ").concat(player.getCurrentWindowIndex() + ""));
+    }
+
+    private String getVideoString() {
+        Format video = player.getVideoFormat();
+        if (video == null) {
+            return "";
+        }
+        if (first) {
+            initialBR = video.bitrate + "";
+            initialRes = video.width + "x" + video.height;
+            first = false;
+        }
+        if (bitrateAux == 0)
+            bitrateAux = video.bitrate;
+        if (bitrateAux != video.bitrate) {
+            bseCont++;
+            bitrateAux = video.bitrate;
+        }
+        String builder = "\nVideo Resolution: ";
+        builder += (video.width);
+        builder += ("x");
+        builder += (video.height);
+        builder += ("\nVideo bitrate: ");
+        builder += (video.bitrate);
+        builder += (" bits/s");
+        builder += ("\nVideo codecs: ");
+        builder += (video.codecs);
+        builder += ("\nBitrate switchs: ");
+        builder += (bseCont);
+//        builder += ("\nVideo framerate: ");
+//        builder += (video.frameRate);
+        return builder;
+
+//        return "\n" + format.sampleMimeType + "(id:" + format.id + " r:" + format.width + "x"
+//                + format.height + getDecoderCountersBufferCountString(player.getVideoDecoderCounters())
+//                + ")";
+    }
+
+    private String getAudioString() {
+        Format format = player.getAudioFormat();
+        if (format == null) {
+            return "";
+        }
+        return "\nAudio samplerate: ".concat(format.sampleRate + "");
+//        return "\n" + format.sampleMimeType + "(id:" + format.id + " hz:" + format.sampleRate + " ch:"
+//                + format.channelCount
+//                + getDecoderCountersBufferCountString(player.getAudioDecoderCounters()) + ")";
+    }
+
+    private String getDecoderCountersBufferCountString(String type, DecoderCounters counters) {
+        if (counters == null) {
+            return "";
+        }
+        counters.ensureUpdated();
+        return "\n" + type + " counters:\n"
+                + "rob:" + counters.renderedOutputBufferCount
+                + " sob:" + counters.skippedOutputBufferCount
+                + " dob:" + counters.droppedOutputBufferCount
+                + " mcdb:" + counters.maxConsecutiveDroppedOutputBufferCount;
+    }
+
+}
diff --git a/demo/src/main/res/drawable-hdpi/side_nav_bar.xml b/demo/src/main/res/drawable-hdpi/side_nav_bar.xml
new file mode 100644
index 0000000000..98f8f7abdb
--- /dev/null
+++ b/demo/src/main/res/drawable-hdpi/side_nav_bar.xml
@@ -0,0 +1,9 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" >
+    <gradient
+        android:startColor="@color/def"
+        android:centerColor="@color/dark"
+        android:endColor="@color/dark"
+        android:type="linear"
+        android:angle="135"/>
+</shape>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/activity_main.xml b/demo/src/main/res/layout/activity_main.xml
new file mode 100644
index 0000000000..38ab1274ed
--- /dev/null
+++ b/demo/src/main/res/layout/activity_main.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:openDrawer="start">
+
+    <include
+        layout="@layout/app_bar_main"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.design.widget.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/nav_header_main"
+        app:menu="@menu/nav_drawer_menu" />
+
+</android.support.v4.widget.DrawerLayout>
diff --git a/demo/src/main/res/layout/app_bar_main.xml b/demo/src/main/res/layout/app_bar_main.xml
new file mode 100644
index 0000000000..076614e0e6
--- /dev/null
+++ b/demo/src/main/res/layout/app_bar_main.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="br.rnp.futebol.vocoliseu.visual.activity.MainActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/content_main"/>
+
+    <!--<android.support.design.widget.FloatingActionButton-->
+        <!--android:id="@+id/fab_video"-->
+        <!--android:layout_width="wrap_content"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:layout_gravity="bottom|end"-->
+        <!--android:layout_margin="@dimen/fab_margin"-->
+        <!--android:src="@drawable/ic_media_play" />-->
+
+    <!--<android.support.design.widget.FloatingActionButton-->
+        <!--android:id="@+id/fab_experiment"-->
+        <!--android:layout_width="wrap_content"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:layout_gravity="bottom|end"-->
+        <!--android:layout_margin="@dimen/fab_margin"-->
+        <!--android:src="@drawable/ic_media_play" />-->
+
+</android.support.design.widget.CoordinatorLayout>
diff --git a/demo/src/main/res/layout/app_bar_script_gen.xml b/demo/src/main/res/layout/app_bar_script_gen.xml
new file mode 100644
index 0000000000..d06de78314
--- /dev/null
+++ b/demo/src/main/res/layout/app_bar_script_gen.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="br.rnp.futebol.vocoliseu.visual.activity.MainActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/script_gen_content"/>
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/fab_video"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom|end"
+        android:layout_margin="@dimen/fab_margin"
+        android:src="@drawable/ic_media_play" />
+
+    <!--<android.support.design.widget.FloatingActionButton-->
+        <!--android:id="@+id/fab_experiment"-->
+        <!--android:layout_width="wrap_content"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:layout_gravity="bottom|end"-->
+        <!--android:layout_margin="@dimen/fab_margin"-->
+        <!--android:src="@drawable/ic_media_play" />-->
+
+</android.support.design.widget.CoordinatorLayout>
diff --git a/demo/src/main/res/layout/content_main.xml b/demo/src/main/res/layout/content_main.xml
new file mode 100644
index 0000000000..38ab413db6
--- /dev/null
+++ b/demo/src/main/res/layout/content_main.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:showIn="@layout/app_bar_main"
+    tools:context="br.rnp.futebol.vocoliseu.visual.activity.MainActivity">
+
+    <ListView
+        android:id="@+id/lv_main_experiments"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:focusable="false" />
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/exp_item.xml b/demo/src/main/res/layout/exp_item.xml
index d6cb512997..6059311838 100644
--- a/demo/src/main/res/layout/exp_item.xml
+++ b/demo/src/main/res/layout/exp_item.xml
@@ -22,7 +22,7 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/name"
-        android:textColor="@color/black"
+        android:textColor="@color/def"
         android:id="@+id/tv_exp_item_name"
         android:layout_marginStart="10dp"
         android:layout_marginTop="7dp"
@@ -31,53 +31,33 @@
         android:layout_alignParentTop="true"
         android:layout_toEndOf="@+id/img_static_icon" />
 
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/savedas"
-        android:id="@+id/tv_exp_item_filename_static"
-        android:layout_below="@+id/tv_exp_item_name"
-        android:layout_marginBottom="5dp"
-        android:layout_alignStart="@+id/tv_exp_item_name" />
-
     <TextView
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/filename"
-        android:layout_marginStart="5dp"
         android:id="@+id/tv_exp_item_filename"
-        android:layout_alignTop="@+id/tv_exp_item_filename_static"
-        android:layout_toEndOf="@+id/tv_exp_item_filename_static" />
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/provider"
-        android:layout_marginBottom="5dp"
-        android:id="@+id/tv_exp_item_address_static"
-        android:layout_below="@+id/tv_exp_item_filename"
-        android:layout_alignStart="@+id/tv_exp_item_filename_static" />
+        android:layout_below="@+id/tv_exp_item_name"
+        android:layout_alignStart="@+id/tv_exp_item_name" />
 
     <TextView
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/ipport"
-        android:layout_marginStart="5dp"
         android:id="@+id/tv_exp_item_address"
-        android:layout_alignTop="@+id/tv_exp_item_address_static"
-        android:layout_toEndOf="@+id/tv_exp_item_address_static"/>
+        android:layout_below="@+id/tv_exp_item_filename"
+        android:layout_alignStart="@+id/tv_exp_item_filename" />
 
     <ImageView
-        android:layout_width="45dp"
-        android:layout_height="45dp"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
         android:contentDescription="@string/script"
-        android:layout_marginTop="12dp"
-        android:layout_marginStart="5dp"
+        android:layout_marginStart="6dp"
         android:src="@drawable/ic_experiment_icon"
         android:background="@drawable/circle_no_shadow"
         android:id="@+id/img_static_icon"
-        android:layout_alignParentTop="true"
-        android:layout_alignParentStart="true" />
+        android:layout_alignTop="@+id/tv_exp_item_name"
+        android:layout_alignParentStart="true"
+        android:layout_marginTop="5dp" />
 
     <!--<CheckBox-->
         <!--android:layout_width="wrap_content"-->
diff --git a/demo/src/main/res/layout/experiment_fragment_controller.xml b/demo/src/main/res/layout/experiment_fragment_controller.xml
new file mode 100644
index 0000000000..235d77dc52
--- /dev/null
+++ b/demo/src/main/res/layout/experiment_fragment_controller.xml
@@ -0,0 +1,35 @@
+<RelativeLayout
+    android:id="@+id/main_layout"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/tb_experiment"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:background="?attr/colorPrimary"
+        android:elevation="6dp"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
+
+    <android.support.design.widget.TabLayout
+        android:id="@+id/tl_experiment"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/tb_experiment"
+        android:background="?attr/colorPrimary"
+        android:elevation="6dp"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+
+    <android.support.v4.view.ViewPager
+        android:id="@+id/vp_experiment"
+        android:layout_width="match_parent"
+        android:layout_height="fill_parent"
+        android:layout_below="@id/tl_experiment"/>
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/experiment_general_activity.xml b/demo/src/main/res/layout/experiment_general_activity.xml
new file mode 100644
index 0000000000..0b9d5041dd
--- /dev/null
+++ b/demo/src/main/res/layout/experiment_general_activity.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="br.rnp.futebol.vocoliseu.visual.activity.MainActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/content_main"/>
+
+    <!--<android.support.design.widget.FloatingActionButton-->
+        <!--android:id="@+id/fab_video"-->
+        <!--android:layout_width="wrap_content"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:layout_gravity="bottom|end"-->
+        <!--android:layout_margin="@dimen/fab_margin"-->
+        <!--android:src="@drawable/ic_media_play" />-->
+
+    <!--<android.support.design.widget.FloatingActionButton-->
+    <!--android:id="@+id/fab_experiment"-->
+    <!--android:layout_width="wrap_content"-->
+    <!--android:layout_height="wrap_content"-->
+    <!--android:layout_gravity="bottom|end"-->
+    <!--android:layout_margin="@dimen/fab_margin"-->
+    <!--android:src="@drawable/ic_media_play" />-->
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/experiment_general_fragment.xml b/demo/src/main/res/layout/experiment_general_fragment.xml
new file mode 100644
index 0000000000..a4661c583a
--- /dev/null
+++ b/demo/src/main/res/layout/experiment_general_fragment.xml
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <EditText
+        android:id="@+id/et_exp_name"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/exp_name_title" />
+
+    <EditText
+        android:id="@+id/et_file_name"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignStart="@+id/et_exp_name"
+        android:layout_below="@+id/et_exp_name"
+        android:layout_marginTop="10dp"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/file_name_title" />
+
+    <!--<RelativeLayout-->
+    <!--android:layout_width="match_parent"-->
+    <!--android:layout_marginTop="20dp"-->
+    <!--android:layout_height="match_parent"-->
+    <!--android:layout_below="@+id/et_file_name">-->
+
+    <CheckBox
+        android:id="@+id/cb_ask_info"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignEnd="@+id/et_file_name"
+        android:layout_alignStart="@+id/et_file_name"
+        android:layout_below="@+id/et_file_name"
+        android:checked="false"
+        android:gravity="center"
+        android:hint="@string/ask_info_description"
+        android:text="@string/ask_info" />
+
+    <!--<RelativeLayout-->
+    <!--android:layout_width="match_parent"-->
+    <!--android:layout_height="match_parent"-->
+    <!--android:layout_below="@+id/tv_info"-->
+    <!--android:layout_centerHorizontal="true">-->
+
+
+    <TextView
+        android:id="@+id/tv_how_to"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignEnd="@+id/cb_ask_info"
+        android:layout_alignStart="@+id/cb_ask_info"
+        android:layout_below="@+id/cb_ask_info"
+        android:gravity="center"
+        android:text="@string/instructions_desc" />
+
+    <EditText
+        android:id="@+id/et_instructions"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/cb_ask_info"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="26dp"
+        android:gravity="center"
+        android:layout_alignEnd="@+id/tv_how_to"
+        android:layout_alignStart="@+id/tv_how_to"
+        android:hint="@string/instructions_example" />
+    <!--</RelativeLayout>-->
+
+    <!--</RelativeLayout>-->
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/experiment_metrics_fragment.xml b/demo/src/main/res/layout/experiment_metrics_fragment.xml
new file mode 100644
index 0000000000..9ef21a9e82
--- /dev/null
+++ b/demo/src/main/res/layout/experiment_metrics_fragment.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ListView
+        android:id="@+id/lv_exp_metrics"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:focusable="false"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp" />
+
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/experiment_scripts_fragment.xml b/demo/src/main/res/layout/experiment_scripts_fragment.xml
new file mode 100644
index 0000000000..9958e42462
--- /dev/null
+++ b/demo/src/main/res/layout/experiment_scripts_fragment.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ListView
+        android:id="@+id/lv_exp_scripts"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:focusable="false"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp" />
+
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/no_video_found"
+        android:gravity="center"
+        android:visibility="invisible"
+        android:layout_marginTop="20dp"
+        android:id="@+id/tv_no_video"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true" />
+
+    <!--<ImageButton-->
+        <!--android:layout_width="70dp"-->
+        <!--android:layout_height="70dp"-->
+        <!--android:src="@drawable/ic_temp_icon_white_2"-->
+        <!--android:layout_marginBottom="17dp"-->
+        <!--android:id="@+id/ib_new_script"-->
+        <!--android:foregroundGravity="bottom"-->
+        <!--android:contentDescription="@string/create_new_exp"-->
+        <!--android:layout_alignParentBottom="true"-->
+        <!--android:background="@drawable/circle"-->
+        <!--android:layout_alignEnd="@+id/lv_exp_scripts" />-->
+
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/f_experiment_configuration_general.xml b/demo/src/main/res/layout/f_experiment_configuration_general.xml
index 97e9c65379..0d3cf640cc 100644
--- a/demo/src/main/res/layout/f_experiment_configuration_general.xml
+++ b/demo/src/main/res/layout/f_experiment_configuration_general.xml
@@ -75,7 +75,6 @@
         <TextView
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:text="@string/info_description"
             android:ems="17"
             android:gravity="center"
             android:id="@+id/tv_info"
diff --git a/demo/src/main/res/layout/metric_item.xml b/demo/src/main/res/layout/metric_item.xml
index af62ab4a09..c776887a4f 100644
--- a/demo/src/main/res/layout/metric_item.xml
+++ b/demo/src/main/res/layout/metric_item.xml
@@ -21,32 +21,32 @@
     <TextView
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/type"
         android:textColor="@color/def"
-        android:id="@+id/tv_metric_item_type"
+        android:text="@string/metric"
+        android:id="@+id/tv_metric_item_name"
         android:layout_alignParentTop="true"
         android:layout_alignParentStart="true"
-        android:layout_marginTop="5dp"
+        android:layout_marginTop="10dp"
         android:textStyle="bold"
-        android:layout_marginStart="38dp" />
+        android:layout_marginStart="20dp" />
 
     <TextView
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/metric"
-        android:id="@+id/tv_metric_item_name"
-        android:layout_below="@+id/tv_metric_item_type"
-        android:layout_marginBottom="5dp"
-        android:layout_alignStart="@+id/tv_metric_item_type" />
+        android:text="@string/type"
+        android:id="@+id/tv_metric_item_type"
+        android:layout_below="@+id/tv_metric_item_name"
+        android:layout_marginBottom="10dp"
+        android:layout_alignStart="@+id/tv_metric_item_name" />
 
     <CheckBox
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/used"
         android:clickable="false"
         android:focusable="false"
         android:id="@+id/cb_metric_item_used"
-        android:layout_alignBottom="@+id/tv_metric_item_name"
+        android:layout_alignBottom="@+id/tv_metric_item_type"
         android:layout_alignParentEnd="true"
-        android:layout_marginEnd="40dp" />
+        android:layout_marginEnd="20dp" />
+
 </RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/nav_header_main.xml b/demo/src/main/res/layout/nav_header_main.xml
new file mode 100644
index 0000000000..c06fb0cb1b
--- /dev/null
+++ b/demo/src/main/res/layout/nav_header_main.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/nav_header_height"
+    android:background="@drawable/side_nav_bar"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark"
+    android:orientation="vertical"
+    android:gravity="bottom">
+
+    <!--<ImageView-->
+        <!--android:layout_width="wrap_content"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:paddingTop="@dimen/nav_header_vertical_spacing"-->
+        <!--android:src="@drawable/ic_temp_icon_white"-->
+        <!--android:id="@+id/imageView" />-->
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:textSize="16sp"
+        android:textStyle="bold"
+        android:text="@string/application_name"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textSize="14sp"
+        android:text="Developed by UFRGS"
+        android:id="@+id/textView" />
+
+</LinearLayout>
diff --git a/demo/src/main/res/layout/script_fragment_controller.xml b/demo/src/main/res/layout/script_fragment_controller.xml
new file mode 100644
index 0000000000..3ecb5bfd57
--- /dev/null
+++ b/demo/src/main/res/layout/script_fragment_controller.xml
@@ -0,0 +1,35 @@
+<RelativeLayout
+    android:id="@+id/main_layout"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/tb_script"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:background="?attr/colorPrimary"
+        android:elevation="6dp"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
+
+    <android.support.design.widget.TabLayout
+        android:id="@+id/tl_script"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/tb_script"
+        android:background="?attr/colorPrimary"
+        android:elevation="6dp"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+
+    <android.support.v4.view.ViewPager
+        android:id="@+id/vp_script"
+        android:layout_width="match_parent"
+        android:layout_height="fill_parent"
+        android:layout_below="@id/tl_script"/>
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/script_gen_content.xml b/demo/src/main/res/layout/script_gen_content.xml
new file mode 100644
index 0000000000..856718036e
--- /dev/null
+++ b/demo/src/main/res/layout/script_gen_content.xml
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:showIn="@layout/app_bar_main">
+
+    <EditText
+        android:id="@+id/et_provider_address"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/address_description" />
+
+    <EditText
+        android:id="@+id/et_video_name"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignStart="@+id/et_provider_address"
+        android:layout_below="@+id/et_provider_address"
+        android:layout_marginTop="10dp"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/video_name" />
+
+    <EditText
+        android:id="@+id/et_video_extension"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignEnd="@+id/et_video_name"
+        android:layout_alignStart="@+id/cb_use_dash_flag"
+        android:layout_below="@+id/et_video_name"
+        android:layout_marginTop="10dp"
+        android:gravity="center"
+        android:hint="@string/video_ext" />
+
+    <CheckBox
+        android:id="@+id/cb_use_dash_flag"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignEnd="@+id/et_video_name"
+        android:layout_alignStart="@+id/et_video_name"
+        android:layout_below="@+id/et_video_name"
+        android:layout_marginTop="61dp"
+        android:checked="false"
+        android:gravity="center"
+        android:text="@string/use_dash" />
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/script_general_fragment.xml b/demo/src/main/res/layout/script_general_fragment.xml
new file mode 100644
index 0000000000..a9a7376033
--- /dev/null
+++ b/demo/src/main/res/layout/script_general_fragment.xml
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <EditText
+        android:id="@+id/et_provider_address"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/address_description" />
+
+    <EditText
+        android:id="@+id/et_video_name"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignStart="@+id/et_provider_address"
+        android:layout_below="@+id/et_provider_address"
+        android:layout_marginTop="10dp"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/video_name" />
+
+    <EditText
+        android:id="@+id/et_video_extension"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:hint="@string/video_ext"
+        android:layout_below="@+id/et_video_name"
+        android:layout_alignStart="@+id/cb_use_dash_flag"
+        android:layout_marginTop="10dp"
+        android:layout_alignEnd="@+id/et_video_name" />
+
+    <CheckBox
+        android:id="@+id/cb_use_dash_flag"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:checked="false"
+        android:gravity="center"
+        android:text="@string/use_dash"
+        android:layout_below="@+id/et_video_name"
+        android:layout_alignStart="@+id/et_video_name"
+        android:layout_marginTop="61dp"
+        android:layout_alignEnd="@+id/et_video_name" />
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/script_item.xml b/demo/src/main/res/layout/script_item.xml
new file mode 100644
index 0000000000..5d6134158c
--- /dev/null
+++ b/demo/src/main/res/layout/script_item.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textColor="@color/def"
+        android:text="@string/videoext"
+        android:id="@+id/tv_script_video"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentStart="true"
+        android:layout_marginTop="5dp"
+        android:textStyle="bold"
+        android:layout_marginStart="25dp" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/address"
+        android:id="@+id/tv_script_address"
+        android:layout_below="@+id/tv_script_video"
+        android:layout_marginBottom="5dp"
+        android:layout_alignStart="@+id/tv_script_video" />
+
+    <CheckBox
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:clickable="false"
+        android:focusable="false"
+        android:id="@+id/cb_script_use_dash"
+        android:layout_alignBottom="@+id/tv_script_address"
+        android:layout_alignParentEnd="true"
+        android:layout_marginEnd="30dp" />
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/script_metrics_fragment.xml b/demo/src/main/res/layout/script_metrics_fragment.xml
new file mode 100644
index 0000000000..5e94daaba5
--- /dev/null
+++ b/demo/src/main/res/layout/script_metrics_fragment.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ListView
+        android:id="@+id/lv_script_metrics"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:focusable="false"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp" />
+
+
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/menu/nav_drawer_menu.xml b/demo/src/main/res/menu/nav_drawer_menu.xml
new file mode 100644
index 0000000000..0850f6d45c
--- /dev/null
+++ b/demo/src/main/res/menu/nav_drawer_menu.xml
@@ -0,0 +1,28 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context="nkdroid.tutorial.navigationview.MainActivity">
+    <group android:checkableBehavior="single">
+        <item
+            android:id="@+id/navigation_item_experiment"
+            android:icon="@drawable/ic_experiment_icon"
+            android:title="New Experiment" />
+        <item
+            android:id="@+id/navigation_item_video"
+            android:icon="@drawable/ic_temp_icon_white"
+            android:title="New video" />
+        <!--<item-->
+        <!--android:id="@+id/navigation_subheader"-->
+        <!--android:title="Tutorials">-->
+        <!--<menu>-->
+        <!--<item-->
+        <!--android:id="@+id/navigation_sub_item_1"-->
+        <!--android:icon="@drawable/ic_image_looks_one"-->
+        <!--android:title="Android Tutorials"/>-->
+        <!--<item-->
+        <!--android:id="@+id/navigation_sub_item_2"-->
+        <!--android:icon="@drawable/ic_image_looks_two"-->
+        <!--android:title="IOS Tutorials"/>-->
+        <!--</menu>-->
+        <!--</item>-->
+    </group>
+</menu>
\ No newline at end of file
diff --git a/demo/src/main/res/values/dimens.xml b/demo/src/main/res/values/dimens.xml
new file mode 100644
index 0000000000..f56a02c8a2
--- /dev/null
+++ b/demo/src/main/res/values/dimens.xml
@@ -0,0 +1,9 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="nav_header_vertical_spacing">16dp</dimen>
+    <dimen name="nav_header_height">100dp</dimen>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+</resources>
diff --git a/demo/src/main/res/values/strings.xml b/demo/src/main/res/values/strings.xml
index 2071b3ae20..d9c428a066 100644
--- a/demo/src/main/res/values/strings.xml
+++ b/demo/src/main/res/values/strings.xml
@@ -65,10 +65,17 @@
   -->
 
   <!--colors-->
-  <color name="def">#004C99</color>
+  <color name="def">#3F51B5</color>
+  <color name="dark">#303F9F</color>
+  <color name="darker">#000099</color>
+  <color name="accent">#3333FF</color>
   <color name="wht">#FFFFFF</color>
   <color name="black">#000000</color>
 
+
+  <!--<item name="colorPrimaryDark">#303F9F</item>-->
+  <!--<item name="colorAccent">#66B2FF</item>-->
+
   <!--strings-->
 
   <!--General-->
@@ -88,9 +95,8 @@
   <string name="exp_name_title">Experiment name</string>
   <string name="file_name_title">File name</string>
   <string name="provider_title">Provider address</string>
-  <string name="use_dash">Use DASH</string>
-  <string name="ask_info">Ask for information</string>
-  <string name="info_description">If checked, the script will ask some volunteer information, such as age, gender and levels of video streaming consumption and mobile streaming knowledge</string>
+  <string name="ask_info">Ask for user personal information</string>
+  <string name="ask_info_description">If checked, the script will ask some volunteer information, such as age, gender and levels of video streaming consumption and mobile streaming knowledge</string>
   <string name="instructions_desc">Write here some instructions about the script</string>
   <string name="instructions_example">Describe your script</string>
   <string name="address_example">143.54.12.21:8081/manifest</string>
@@ -105,4 +111,17 @@
   <string name="type">Type</string>
   <string name="metric">Metric</string>
   <string name="used">Used</string>
+
+  <!--Script-->
+  <string name="use_dash">Use DASH</string>
+  <string name="videoext">video.ext</string>
+  <string name="address">address</string>
+  <string name="address_description">Video Provider address</string>
+  <string name="video_name">Video name</string>
+  <string name="video_ext">Video extension</string>
+
+  <string name="open">Open</string>
+  <string name="close">Close</string>
+  <string name="no_video_found">No video was found to add to this experiment.\nCreate a new video through the navigation tab!\nYou will be able to add it to any experiment.</string>
+
 </resources>
diff --git a/demo/src/main/res/values/styles.xml b/demo/src/main/res/values/styles.xml
index 09a3f1256d..09f907f454 100644
--- a/demo/src/main/res/values/styles.xml
+++ b/demo/src/main/res/values/styles.xml
@@ -16,12 +16,16 @@
 <resources>
 
     <style name="VOCoLisEU" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="colorPrimary">#004C99</item>
-        <item name="colorPrimaryDark">#003366</item>
-        <item name="colorAccent">#66B2FF</item>
+        <item name="colorPrimary">#3F51B5</item>
+        <item name="colorPrimaryDark">#303F9F</item>
+        <item name="colorAccent">#3333FF</item>
         <item name="android:label">@string/application_name</item>
         <item name="android:windowNoTitle">true</item>
         <!--<item name="android:icon">@drawable/ic_launcher</item>-->
     </style>
 
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
 </resources>
diff --git a/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java b/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java
index 03c26e0511..42f1f56f5e 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java
@@ -190,10 +190,14 @@
  */
 package com.google.android.exoplayer2.ui;
 
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
 import android.content.SharedPreferences;
 import android.os.Environment;
 import android.util.Log;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.google.android.exoplayer2.ExoPlaybackException;
 import com.google.android.exoplayer2.ExoPlayer;
@@ -211,6 +215,7 @@
 import java.util.Calendar;
 import java.util.Date;
 
+
 /**
  * A helper class for periodically updating a {@link TextView} with debug information obtained from
  * a {@link SimpleExoPlayer}.
@@ -225,17 +230,19 @@
     private boolean started, isPstFilled;
     private long playbackStartTime, bufferingStartAux, bufferingEndAux;
     private int bitrateAux = 0, bseCont = 0;
-    private boolean first = true, written = false;
+    private boolean first = true, written = false, showedQuestion = false;
     private String initialRes, initialBR;
+    private Context ctx;
+//    private TExperiment experiment;
 
     /**
      * @param player   The {@link SimpleExoPlayer} from which debug information should be obtained.
      * @param textView The {@link TextView} that should be updated to display the information.
      */
-    public DebugTextViewHelper(SimpleExoPlayer player, TextView textView, String file) {
+    public DebugTextViewHelper(SimpleExoPlayer player, TextView textView, Context ctx) {
         this.player = player;
         this.textView = textView;
-        this.file = file;
+        this.ctx = ctx;
     }
 
     /**
@@ -312,6 +319,7 @@ public void run() {
         updateAndPost();
     }
 
+
     // Private methods.
 
     private void updateAndPost() {
@@ -329,6 +337,15 @@ private void updateAndPost() {
                 write(getHeader(), false);
             if (!written)
                 write(buildCsvText(), true);
+            if (!showedQuestion)
+                makeDialog("The video is finished", "Do you want to start a new video?",
+                        ctx, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                            }
+                        });
+            showedQuestion = true;
+
         }
     }
 
@@ -383,6 +400,22 @@ private String getHeader() {
         return "Timestamp, Initial Bitrate, Final Bitrate, Initial Res, Final Res, Freezes, Freezes Duration, Playback Start Time";
     }
 
+    public AlertDialog makeDialog(String title, String message, Context myContext, DialogInterface.OnClickListener listener) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(myContext);
+        builder.setMessage(message);
+        builder.setTitle(title);
+        builder.setPositiveButton("OK", listener);
+        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+            }
+        });
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
     private String getStallsString() {
         String text = "\nFreezes: " + player.getStalls();
         text += "\nFreezes Duration: " + player.getStallsDuration() + "ms";
