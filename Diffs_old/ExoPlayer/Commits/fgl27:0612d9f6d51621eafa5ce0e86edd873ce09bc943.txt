diff --git a/RELEASENOTES.md b/RELEASENOTES.md
index 6af3381a34..5ff8644ce4 100644
--- a/RELEASENOTES.md
+++ b/RELEASENOTES.md
@@ -4,6 +4,8 @@
 
 * Fix NPE when using HLS chunkless preparation
   ([#5868](https://github.com/google/ExoPlayer/issues/5868)).
+* Fix handling of line terminators in SHOUTcast ICY metadata
+  ([#5876](https://github.com/google/ExoPlayer/issues/5876)).
 * Offline: Add option to remove all downloads.
 * Decoders:
   * Prefer codecs that advertise format support over ones that do not, even if
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/metadata/icy/IcyDecoder.java b/library/core/src/main/java/com/google/android/exoplayer2/metadata/icy/IcyDecoder.java
index d04cd3a999..489719eda4 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/metadata/icy/IcyDecoder.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/metadata/icy/IcyDecoder.java
@@ -31,7 +31,7 @@
 
   private static final String TAG = "IcyDecoder";
 
-  private static final Pattern METADATA_ELEMENT = Pattern.compile("(.+?)='(.+?)';");
+  private static final Pattern METADATA_ELEMENT = Pattern.compile("(.+?)='(.+?)';", Pattern.DOTALL);
   private static final String STREAM_KEY_NAME = "streamtitle";
   private static final String STREAM_KEY_URL = "streamurl";
 
diff --git a/library/core/src/test/java/com/google/android/exoplayer2/metadata/icy/IcyDecoderTest.java b/library/core/src/test/java/com/google/android/exoplayer2/metadata/icy/IcyDecoderTest.java
index 9cbcea5814..97aac9995d 100644
--- a/library/core/src/test/java/com/google/android/exoplayer2/metadata/icy/IcyDecoderTest.java
+++ b/library/core/src/test/java/com/google/android/exoplayer2/metadata/icy/IcyDecoderTest.java
@@ -70,6 +70,17 @@ public void decode_quoteInTitle() {
     assertThat(streamInfo.url).isEqualTo("test_url");
   }
 
+  @Test
+  public void decode_lineTerminatorInTitle() {
+    IcyDecoder decoder = new IcyDecoder();
+    Metadata metadata = decoder.decode("StreamTitle='test\r\ntitle';StreamURL='test_url';");
+
+    assertThat(metadata.length()).isEqualTo(1);
+    IcyInfo streamInfo = (IcyInfo) metadata.get(0);
+    assertThat(streamInfo.title).isEqualTo("test\r\ntitle");
+    assertThat(streamInfo.url).isEqualTo("test_url");
+  }
+
   @Test
   public void decode_notIcy() {
     IcyDecoder decoder = new IcyDecoder();
