diff --git a/.idea/codeStyleSettings.xml b/.idea/codeStyleSettings.xml
deleted file mode 100644
index 056b47a1e8..0000000000
--- a/.idea/codeStyleSettings.xml
+++ /dev/null
@@ -1,495 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectCodeStyleSettingsManager">
-    <option name="PER_PROJECT_SETTINGS">
-      <value>
-        <option name="OTHER_INDENT_OPTIONS">
-          <value>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-            <option name="USE_TAB_CHARACTER" value="false" />
-            <option name="SMART_TABS" value="false" />
-            <option name="LABEL_INDENT_SIZE" value="0" />
-            <option name="LABEL_INDENT_ABSOLUTE" value="false" />
-            <option name="USE_RELATIVE_INDENTS" value="false" />
-          </value>
-        </option>
-        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
-        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="999" />
-        <option name="PACKAGES_TO_USE_IMPORT_ON_DEMAND">
-          <value />
-        </option>
-        <option name="IMPORT_LAYOUT_TABLE">
-          <value>
-            <package name="" withSubpackages="true" static="true" />
-            <emptyLine />
-            <package name="" withSubpackages="true" static="false" />
-          </value>
-        </option>
-        <option name="RIGHT_MARGIN" value="100" />
-        <option name="JD_ALIGN_PARAM_COMMENTS" value="false" />
-        <option name="JD_ALIGN_EXCEPTION_COMMENTS" value="false" />
-        <option name="JD_P_AT_EMPTY_LINES" value="false" />
-        <option name="JD_KEEP_EMPTY_PARAMETER" value="false" />
-        <option name="JD_KEEP_EMPTY_EXCEPTION" value="false" />
-        <option name="JD_KEEP_EMPTY_RETURN" value="false" />
-        <option name="KEEP_CONTROL_STATEMENT_IN_ONE_LINE" value="false" />
-        <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-        <option name="KEEP_BLANK_LINES_BEFORE_RBRACE" value="0" />
-        <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-        <option name="ALIGN_MULTILINE_FOR" value="false" />
-        <option name="SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE" value="true" />
-        <option name="CALL_PARAMETERS_WRAP" value="1" />
-        <option name="METHOD_PARAMETERS_WRAP" value="1" />
-        <option name="EXTENDS_LIST_WRAP" value="1" />
-        <option name="THROWS_KEYWORD_WRAP" value="1" />
-        <option name="METHOD_CALL_CHAIN_WRAP" value="1" />
-        <option name="BINARY_OPERATION_WRAP" value="1" />
-        <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-        <option name="TERNARY_OPERATION_WRAP" value="1" />
-        <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-        <option name="FOR_STATEMENT_WRAP" value="1" />
-        <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-        <option name="WRAP_COMMENTS" value="true" />
-        <option name="IF_BRACE_FORCE" value="3" />
-        <option name="DOWHILE_BRACE_FORCE" value="3" />
-        <option name="WHILE_BRACE_FORCE" value="3" />
-        <option name="FOR_BRACE_FORCE" value="3" />
-        <AndroidXmlCodeStyleSettings>
-          <option name="USE_CUSTOM_SETTINGS" value="true" />
-          <option name="LAYOUT_SETTINGS">
-            <value>
-              <option name="INSERT_BLANK_LINE_BEFORE_TAG" value="false" />
-            </value>
-          </option>
-        </AndroidXmlCodeStyleSettings>
-        <Objective-C>
-          <option name="INDENT_NAMESPACE_MEMBERS" value="0" />
-          <option name="INDENT_C_STRUCT_MEMBERS" value="2" />
-          <option name="INDENT_CLASS_MEMBERS" value="2" />
-          <option name="INDENT_VISIBILITY_KEYWORDS" value="1" />
-          <option name="INDENT_INSIDE_CODE_BLOCK" value="2" />
-          <option name="KEEP_STRUCTURES_IN_ONE_LINE" value="true" />
-          <option name="FUNCTION_PARAMETERS_WRAP" value="5" />
-          <option name="FUNCTION_CALL_ARGUMENTS_WRAP" value="5" />
-          <option name="TEMPLATE_CALL_ARGUMENTS_WRAP" value="5" />
-          <option name="TEMPLATE_CALL_ARGUMENTS_ALIGN_MULTILINE" value="true" />
-          <option name="ALIGN_INIT_LIST_IN_COLUMNS" value="false" />
-          <option name="SPACE_BEFORE_SUPERCLASS_COLON" value="false" />
-        </Objective-C>
-        <Objective-C-extensions>
-          <file>
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Import" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Macro" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Typedef" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Enum" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Constant" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Global" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Struct" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="FunctionPredecl" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Function" />
-          </file>
-          <class>
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Property" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Synthesize" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InitMethod" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="StaticMethod" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InstanceMethod" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="DeallocMethod" />
-          </class>
-          <extensions>
-            <pair source="cc" header="h" />
-            <pair source="c" header="h" />
-          </extensions>
-        </Objective-C-extensions>
-        <XML>
-          <option name="XML_ALIGN_ATTRIBUTES" value="false" />
-          <option name="XML_LEGACY_SETTINGS_IMPORTED" value="true" />
-        </XML>
-        <codeStyleSettings language="HTML">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JAVA">
-          <option name="KEEP_CONTROL_STATEMENT_IN_ONE_LINE" value="false" />
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="BLANK_LINES_AFTER_CLASS_HEADER" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="ALIGN_MULTILINE_RESOURCES" value="false" />
-          <option name="ALIGN_MULTILINE_FOR" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="1" />
-          <option name="METHOD_PARAMETERS_WRAP" value="1" />
-          <option name="EXTENDS_LIST_WRAP" value="1" />
-          <option name="THROWS_KEYWORD_WRAP" value="1" />
-          <option name="METHOD_CALL_CHAIN_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_SIGNS_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="IF_BRACE_FORCE" value="3" />
-          <option name="DOWHILE_BRACE_FORCE" value="3" />
-          <option name="WHILE_BRACE_FORCE" value="3" />
-          <option name="FOR_BRACE_FORCE" value="3" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JSON">
-          <indentOptions>
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="ObjectiveC">
-          <option name="KEEP_BLANK_LINES_BEFORE_RBRACE" value="1" />
-          <option name="BLANK_LINES_BEFORE_IMPORTS" value="0" />
-          <option name="BLANK_LINES_AFTER_IMPORTS" value="0" />
-          <option name="BLANK_LINES_AROUND_CLASS" value="0" />
-          <option name="BLANK_LINES_AROUND_METHOD" value="0" />
-          <option name="BLANK_LINES_AROUND_METHOD_IN_INTERFACE" value="0" />
-          <option name="ALIGN_MULTILINE_BINARY_OPERATION" value="false" />
-          <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
-          <option name="FOR_STATEMENT_WRAP" value="1" />
-          <option name="ASSIGNMENT_WRAP" value="1" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="XML">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="2" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-          <arrangement>
-            <rules>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:android</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:id</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>style</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:.*Style</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_width</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_height</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_weight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_margin</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginTop</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginBottom</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginStart</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginEnd</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginLeft</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_marginRight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_.*</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:padding</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingTop</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingBottom</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingStart</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingEnd</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingLeft</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:paddingRight</NAME>
-                      <XML_ATTRIBUTE />
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res-auto</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/tools</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>.*</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-            </rules>
-          </arrangement>
-        </codeStyleSettings>
-      </value>
-    </option>
-    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
-  </component>
-</project>
diff --git a/build.gradle b/build.gradle
index a013f4fb84..96eade1aa3 100644
--- a/build.gradle
+++ b/build.gradle
@@ -13,8 +13,8 @@
 // limitations under the License.
 buildscript {
     repositories {
-        jcenter()
         google()
+        jcenter()
     }
     dependencies {
         classpath 'com.android.tools.build:gradle:3.1.4'
@@ -32,8 +32,8 @@ buildscript {
 }
 allprojects {
     repositories {
-        jcenter()
         google()
+        jcenter()
     }
     project.ext {
         exoplayerPublishEnabled = true
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
index 3b26741897..f5afa72ff1 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
@@ -21,6 +21,7 @@
 import static com.google.android.exoplayer2.offline.DownloadManager.TaskState.STATE_QUEUED;
 import static com.google.android.exoplayer2.offline.DownloadManager.TaskState.STATE_STARTED;
 
+import android.net.Uri;
 import android.os.ConditionVariable;
 import android.os.Handler;
 import android.os.HandlerThread;
@@ -82,7 +83,7 @@
   public static final int DEFAULT_MIN_RETRY_COUNT = 5;
 
   private static final String TAG = "DownloadManager";
-  private static final boolean DEBUG = false;
+  public static boolean DEBUG = false;
 
   private final DownloaderConstructorHelper downloaderConstructorHelper;
   private final int maxActiveDownloadTasks;
@@ -100,6 +101,7 @@
   private boolean initialized;
   private boolean released;
   private boolean downloadsStopped;
+  private Uri hangUrl;
 
   /**
    * Creates a {@link DownloadManager}.
@@ -112,14 +114,14 @@
    *     DownloadAction#getDefaultDeserializers()} is used instead.
    */
   public DownloadManager(
-      Cache cache,
-      DataSource.Factory upstreamDataSourceFactory,
-      File actionSaveFile,
-      Deserializer... deserializers) {
+          Cache cache,
+          DataSource.Factory upstreamDataSourceFactory,
+          File actionSaveFile,
+          Deserializer... deserializers) {
     this(
-        new DownloaderConstructorHelper(cache, upstreamDataSourceFactory),
-        actionSaveFile,
-        deserializers);
+            new DownloaderConstructorHelper(cache, upstreamDataSourceFactory),
+            actionSaveFile,
+            deserializers);
   }
 
   /**
@@ -132,15 +134,15 @@ public DownloadManager(
    *     DownloadAction#getDefaultDeserializers()} is used instead.
    */
   public DownloadManager(
-      DownloaderConstructorHelper constructorHelper,
-      File actionFile,
-      Deserializer... deserializers) {
+          DownloaderConstructorHelper constructorHelper,
+          File actionFile,
+          Deserializer... deserializers) {
     this(
-        constructorHelper,
-        DEFAULT_MAX_SIMULTANEOUS_DOWNLOADS,
-        DEFAULT_MIN_RETRY_COUNT,
-        actionFile,
-        deserializers);
+            constructorHelper,
+            DEFAULT_MAX_SIMULTANEOUS_DOWNLOADS,
+            DEFAULT_MIN_RETRY_COUNT,
+            actionFile,
+            deserializers);
   }
 
   /**
@@ -155,17 +157,17 @@ public DownloadManager(
    *     DownloadAction#getDefaultDeserializers()} is used instead.
    */
   public DownloadManager(
-      DownloaderConstructorHelper constructorHelper,
-      int maxSimultaneousDownloads,
-      int minRetryCount,
-      File actionFile,
-      Deserializer... deserializers) {
+          DownloaderConstructorHelper constructorHelper,
+          int maxSimultaneousDownloads,
+          int minRetryCount,
+          File actionFile,
+          Deserializer... deserializers) {
     this.downloaderConstructorHelper = constructorHelper;
     this.maxActiveDownloadTasks = maxSimultaneousDownloads;
     this.minRetryCount = minRetryCount;
     this.actionFile = new ActionFile(actionFile);
     this.deserializers =
-        deserializers.length > 0 ? deserializers : DownloadAction.getDefaultDeserializers();
+            deserializers.length > 0 ? deserializers : DownloadAction.getDefaultDeserializers();
     this.downloadsStopped = true;
 
     tasks = new ArrayList<>();
@@ -229,17 +231,18 @@ public void stopDownloads() {
 
   /**
    * Deserializes an action from {@code actionData}, and calls {@link
-   * #handleAction(DownloadAction)}.
+   * #handleAction(DownloadAction,boolean)}.
    *
    * @param actionData Serialized version of the action to be executed.
+   * @param interposed represent a interposed action.
    * @return The id of the newly created task.
    * @throws IOException If an error occurs deserializing the action.
    */
-  public int handleAction(byte[] actionData) throws IOException {
+  public int handleAction(byte[] actionData, boolean interposed) throws IOException {
     Assertions.checkState(!released);
     ByteArrayInputStream input = new ByteArrayInputStream(actionData);
     DownloadAction action = DownloadAction.deserializeFromStream(deserializers, input);
-    return handleAction(action);
+    return handleAction(action, interposed);
   }
 
   /**
@@ -249,11 +252,12 @@ public int handleAction(byte[] actionData) throws IOException {
    * @param action The action to be executed.
    * @return The id of the newly created task.
    */
-  public int handleAction(DownloadAction action) {
+  public int handleAction(DownloadAction action, boolean interposed) {
     Assertions.checkState(!released);
     Task task = addTaskForAction(action);
     if (initialized) {
       saveActions();
+      if (interposed) hangUrl = action.uri;
       maybeStartTasks();
       if (task.currentState == STATE_QUEUED) {
         // Task did not change out of its initial state, and so its initial state won't have been
@@ -367,7 +371,10 @@ private void maybeStartTasks() {
     }
 
     boolean skipDownloadActions = downloadsStopped
-        || activeDownloadTasks.size() == maxActiveDownloadTasks;
+            || activeDownloadTasks.size() == maxActiveDownloadTasks;
+
+    int activeDownloadTaskSize = activeDownloadTasks.size();
+
     for (int i = 0; i < tasks.size(); i++) {
       Task task = tasks.get(i);
       if (!task.canStart()) {
@@ -375,18 +382,24 @@ private void maybeStartTasks() {
       }
 
       DownloadAction action = task.action;
+
+      boolean isIntercept = hangUrl != null && action.uri == hangUrl;
       boolean isRemoveAction = action.isRemoveAction;
-      if (!isRemoveAction && skipDownloadActions) {
+
+      if (isIntercept && !isRemoveAction && downloadsStopped) {
+        continue;
+      } else if (!isIntercept && !isRemoveAction && skipDownloadActions) {
         continue;
       }
 
       boolean canStartTask = true;
+      boolean isMakeRoom = false;
+
       for (int j = 0; j < i; j++) {
         Task otherTask = tasks.get(j);
         if (otherTask.action.isSameMedia(action)) {
           if (isRemoveAction) {
             canStartTask = false;
-            logd(task + " clashes with " + otherTask);
             otherTask.cancel();
             // Continue loop to cancel any other preceding clashing tasks.
           } else if (otherTask.action.isRemoveAction) {
@@ -394,10 +407,17 @@ private void maybeStartTasks() {
             skipDownloadActions = true;
             break;
           }
+        } else if (isIntercept) {
+          if (activeDownloadTaskSize == maxActiveDownloadTasks && !isMakeRoom) {
+            otherTask.cancel();
+            isMakeRoom = true;
+          }
         }
       }
 
       if (canStartTask) {
+        if (hangUrl != null) hangUrl = null;
+
         task.start();
         if (!isRemoveAction) {
           activeDownloadTasks.add(task);
@@ -446,46 +466,46 @@ private void notifyListenersTaskStateChange(Task task) {
 
   private void loadActions() {
     fileIOHandler.post(
-        () -> {
-          DownloadAction[] loadedActions;
-          try {
-            loadedActions = actionFile.load(DownloadManager.this.deserializers);
-            logd("Action file is loaded.");
-          } catch (Throwable e) {
-            Log.e(TAG, "Action file loading failed.", e);
-            loadedActions = new DownloadAction[0];
-          }
-          final DownloadAction[] actions = loadedActions;
-          handler.post(
-              () -> {
-                if (released) {
-                  return;
-                }
-                List<Task> pendingTasks = new ArrayList<>(tasks);
-                tasks.clear();
-                for (DownloadAction action : actions) {
-                  addTaskForAction(action);
-                }
-                logd("Tasks are created.");
-                initialized = true;
-                for (Listener listener : listeners) {
-                  listener.onInitialized(DownloadManager.this);
-                }
-                if (!pendingTasks.isEmpty()) {
-                  tasks.addAll(pendingTasks);
-                  saveActions();
-                }
-                maybeStartTasks();
-                for (int i = 0; i < tasks.size(); i++) {
-                  Task task = tasks.get(i);
-                  if (task.currentState == STATE_QUEUED) {
-                    // Task did not change out of its initial state, and so its initial state
-                    // won't have been reported to listeners. Do so now.
-                    notifyListenersTaskStateChange(task);
-                  }
-                }
-              });
-        });
+            () -> {
+              DownloadAction[] loadedActions;
+              try {
+                loadedActions = actionFile.load(DownloadManager.this.deserializers);
+                logd("Action file is loaded.");
+              } catch (Throwable e) {
+                Log.e(TAG, "Action file loading failed.", e);
+                loadedActions = new DownloadAction[0];
+              }
+              final DownloadAction[] actions = loadedActions;
+              handler.post(
+                      () -> {
+                        if (released) {
+                          return;
+                        }
+                        List<Task> pendingTasks = new ArrayList<>(tasks);
+                        tasks.clear();
+                        for (DownloadAction action : actions) {
+                          addTaskForAction(action);
+                        }
+                        logd("Tasks are created.");
+                        initialized = true;
+                        for (Listener listener : listeners) {
+                          listener.onInitialized(DownloadManager.this);
+                        }
+                        if (!pendingTasks.isEmpty()) {
+                          tasks.addAll(pendingTasks);
+                          saveActions();
+                        }
+                        maybeStartTasks();
+                        for (int i = 0; i < tasks.size(); i++) {
+                          Task task = tasks.get(i);
+                          if (task.currentState == STATE_QUEUED) {
+                            // Task did not change out of its initial state, and so its initial state
+                            // won't have been reported to listeners. Do so now.
+                            notifyListenersTaskStateChange(task);
+                          }
+                        }
+                      });
+            });
   }
 
   private void saveActions() {
@@ -497,14 +517,14 @@ private void saveActions() {
       actions[i] = tasks.get(i).action;
     }
     fileIOHandler.post(
-        () -> {
-          try {
-            actionFile.store(actions);
-            logd("Actions persisted.");
-          } catch (IOException e) {
-            Log.e(TAG, "Persisting actions failed.", e);
-          }
-        });
+            () -> {
+              try {
+                actionFile.store(actions);
+                logd("Actions persisted.");
+              } catch (IOException e) {
+                Log.e(TAG, "Persisting actions failed.", e);
+              }
+            });
   }
 
   private static void logd(String message) {
@@ -583,12 +603,12 @@ public static String getStateString(@State int state) {
     public final Throwable error;
 
     private TaskState(
-        int taskId,
-        DownloadAction action,
-        @State int state,
-        float downloadPercentage,
-        long downloadedBytes,
-        Throwable error) {
+            int taskId,
+            DownloadAction action,
+            @State int state,
+            float downloadPercentage,
+            long downloadedBytes,
+            Throwable error) {
       this.taskId = taskId;
       this.action = action;
       this.state = state;
@@ -623,14 +643,14 @@ private TaskState(
      */
     @Retention(RetentionPolicy.SOURCE)
     @IntDef({
-      STATE_QUEUED,
-      STATE_STARTED,
-      STATE_COMPLETED,
-      STATE_CANCELED,
-      STATE_FAILED,
-      STATE_QUEUED_CANCELING,
-      STATE_STARTED_CANCELING,
-      STATE_STARTED_STOPPING
+            STATE_QUEUED,
+            STATE_STARTED,
+            STATE_COMPLETED,
+            STATE_CANCELED,
+            STATE_FAILED,
+            STATE_QUEUED_CANCELING,
+            STATE_STARTED_CANCELING,
+            STATE_STARTED_STOPPING
     })
     public @interface InternalState {}
     /** The task is about to be canceled. */
@@ -650,7 +670,7 @@ private TaskState(
     private Throwable error;
 
     private Task(
-        int id, DownloadManager downloadManager, DownloadAction action, int minRetryCount) {
+            int id, DownloadManager downloadManager, DownloadAction action, int minRetryCount) {
       this.id = id;
       this.downloadManager = downloadManager;
       this.action = action;
@@ -661,22 +681,22 @@ private Task(
     public TaskState getDownloadState() {
       int externalState = getExternalState();
       return new TaskState(
-          id, action, externalState, getDownloadPercentage(), getDownloadedBytes(), error);
+              id, action, externalState, getDownloadPercentage(), getDownloadedBytes(), error);
     }
 
     /** Returns whether the task is finished. */
     public boolean isFinished() {
       return currentState == STATE_FAILED
-          || currentState == STATE_COMPLETED
-          || currentState == STATE_CANCELED;
+              || currentState == STATE_COMPLETED
+              || currentState == STATE_CANCELED;
     }
 
     /** Returns whether the task is started. */
     public boolean isActive() {
       return currentState == STATE_QUEUED_CANCELING
-          || currentState == STATE_STARTED
-          || currentState == STATE_STARTED_STOPPING
-          || currentState == STATE_STARTED_CANCELING;
+              || currentState == STATE_STARTED
+              || currentState == STATE_STARTED_STOPPING
+              || currentState == STATE_STARTED_CANCELING;
     }
 
     /**
@@ -698,12 +718,12 @@ public String toString() {
         return super.toString();
       }
       return action.type
-          + ' '
-          + (action.isRemoveAction ? "remove" : "download")
-          + ' '
-          + toString(action.data)
-          + ' '
-          + getStateString();
+              + ' '
+              + (action.isRemoveAction ? "remove" : "download")
+              + ' '
+              + toString(action.data)
+              + ' '
+              + getStateString();
     }
 
     private static String toString(byte[] data) {
@@ -762,7 +782,7 @@ private boolean canStart() {
     private void cancel() {
       if (changeStateAndNotify(STATE_QUEUED, STATE_QUEUED_CANCELING)) {
         downloadManager.handler.post(
-            () -> changeStateAndNotify(STATE_QUEUED_CANCELING, STATE_CANCELED));
+                () -> changeStateAndNotify(STATE_QUEUED_CANCELING, STATE_CANCELED));
       } else if (changeStateAndNotify(STATE_STARTED, STATE_STARTED_CANCELING)) {
         cancelDownload();
       }
@@ -780,7 +800,7 @@ private boolean changeStateAndNotify(@InternalState int oldState, @InternalState
     }
 
     private boolean changeStateAndNotify(
-        @InternalState int oldState, @InternalState int newState, Throwable error) {
+            @InternalState int oldState, @InternalState int newState, Throwable error) {
       if (currentState != oldState) {
         return false;
       }
@@ -837,15 +857,15 @@ public void run() {
       }
       final Throwable finalError = error;
       downloadManager.handler.post(
-          () -> {
-            if (changeStateAndNotify(
-                    STATE_STARTED, finalError != null ? STATE_FAILED : STATE_COMPLETED, finalError)
-                || changeStateAndNotify(STATE_STARTED_CANCELING, STATE_CANCELED)
-                || changeStateAndNotify(STATE_STARTED_STOPPING, STATE_QUEUED)) {
-              return;
-            }
-            throw new IllegalStateException();
-          });
+              () -> {
+                if (changeStateAndNotify(
+                        STATE_STARTED, finalError != null ? STATE_FAILED : STATE_COMPLETED, finalError)
+                        || changeStateAndNotify(STATE_STARTED_CANCELING, STATE_CANCELED)
+                        || changeStateAndNotify(STATE_STARTED_STOPPING, STATE_QUEUED)) {
+                  return;
+                }
+                throw new IllegalStateException();
+              });
     }
 
     private int getRetryDelayMillis(int errorCount) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadService.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadService.java
index 5c6cf88b48..78e6bb1452 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadService.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadService.java
@@ -39,18 +39,18 @@
 
   /** Starts a download service without adding a new {@link DownloadAction}. */
   public static final String ACTION_INIT =
-      "com.google.android.exoplayer.downloadService.action.INIT";
+          "com.google.android.exoplayer.downloadService.action.INIT";
 
   /** Starts a download service, adding a new {@link DownloadAction} to be executed. */
   public static final String ACTION_ADD = "com.google.android.exoplayer.downloadService.action.ADD";
 
   /** Reloads the download requirements. */
   public static final String ACTION_RELOAD_REQUIREMENTS =
-      "com.google.android.exoplayer.downloadService.action.RELOAD_REQUIREMENTS";
+          "com.google.android.exoplayer.downloadService.action.RELOAD_REQUIREMENTS";
 
   /** Like {@link #ACTION_INIT}, but with {@link #KEY_FOREGROUND} implicitly set to true. */
   private static final String ACTION_RESTART =
-      "com.google.android.exoplayer.downloadService.action.RESTART";
+          "com.google.android.exoplayer.downloadService.action.RESTART";
 
   /** Key for the {@link DownloadAction} in an {@link #ACTION_ADD} intent. */
   public static final String KEY_DOWNLOAD_ACTION = "download_action";
@@ -65,6 +65,11 @@
    */
   public static final String KEY_FOREGROUND = "foreground";
 
+  /**
+   * Custom Key for a boolean flag represent the interposed download Action
+   */
+  public static final String KEY_INTERPOSITION = "interposition";
+
   /** Default foreground notification update interval in milliseconds. */
   public static final long DEFAULT_FOREGROUND_NOTIFICATION_UPDATE_INTERVAL = 1000;
 
@@ -75,9 +80,9 @@
   // process is running). This allows tasks to resume when there's no scheduler. It may also allow
   // tasks the resume more quickly than when relying on the scheduler alone.
   private static final HashMap<Class<? extends DownloadService>, RequirementsHelper>
-      requirementsHelpers = new HashMap<>();
+          requirementsHelpers = new HashMap<>();
   private static final Requirements DEFAULT_REQUIREMENTS =
-      new Requirements(Requirements.NETWORK_TYPE_ANY, false, false);
+          new Requirements(Requirements.NETWORK_TYPE_ANY, false, false);
 
   private final @Nullable ForegroundNotificationUpdater foregroundNotificationUpdater;
   private final @Nullable String channelId;
@@ -118,12 +123,12 @@ protected DownloadService(int foregroundNotificationId) {
    *     notification, in milliseconds.
    */
   protected DownloadService(
-      int foregroundNotificationId, long foregroundNotificationUpdateInterval) {
+          int foregroundNotificationId, long foregroundNotificationUpdateInterval) {
     this(
-        foregroundNotificationId,
-        foregroundNotificationUpdateInterval,
-        /* channelId= */ null,
-        /* channelName= */ 0);
+            foregroundNotificationId,
+            foregroundNotificationUpdateInterval,
+            /* channelId= */ null,
+            /* channelName= */ 0);
   }
 
   /**
@@ -142,15 +147,15 @@ protected DownloadService(
    *     may be truncated if it is too long.
    */
   protected DownloadService(
-      int foregroundNotificationId,
-      long foregroundNotificationUpdateInterval,
-      @Nullable String channelId,
-      @StringRes int channelName) {
+          int foregroundNotificationId,
+          long foregroundNotificationUpdateInterval,
+          @Nullable String channelId,
+          @StringRes int channelName) {
     foregroundNotificationUpdater =
-        foregroundNotificationId == 0
-            ? null
-            : new ForegroundNotificationUpdater(
-                foregroundNotificationId, foregroundNotificationUpdateInterval);
+            foregroundNotificationId == 0
+                    ? null
+                    : new ForegroundNotificationUpdater(
+                    foregroundNotificationId, foregroundNotificationUpdateInterval);
     this.channelId = channelId;
     this.channelName = channelName;
   }
@@ -165,13 +170,13 @@ protected DownloadService(
    * @return Created Intent.
    */
   public static Intent buildAddActionIntent(
-      Context context,
-      Class<? extends DownloadService> clazz,
-      DownloadAction downloadAction,
-      boolean foreground) {
+          Context context,
+          Class<? extends DownloadService> clazz,
+          DownloadAction downloadAction,
+          boolean foreground) {
     return getIntent(context, clazz, ACTION_ADD)
-        .putExtra(KEY_DOWNLOAD_ACTION, downloadAction.toByteArray())
-        .putExtra(KEY_FOREGROUND, foreground);
+            .putExtra(KEY_DOWNLOAD_ACTION, downloadAction.toByteArray())
+            .putExtra(KEY_FOREGROUND, foreground);
   }
 
   /**
@@ -183,10 +188,10 @@ public static Intent buildAddActionIntent(
    * @param foreground Whether the service is started in the foreground.
    */
   public static void startWithAction(
-      Context context,
-      Class<? extends DownloadService> clazz,
-      DownloadAction downloadAction,
-      boolean foreground) {
+          Context context,
+          Class<? extends DownloadService> clazz,
+          DownloadAction downloadAction,
+          boolean foreground) {
     Intent intent = buildAddActionIntent(context, clazz, downloadAction, foreground);
     if (foreground) {
       Util.startForegroundService(context, intent);
@@ -226,7 +231,7 @@ public void onCreate() {
     logd("onCreate");
     if (channelId != null) {
       NotificationUtil.createNotificationChannel(
-          this, channelId, channelName, NotificationUtil.IMPORTANCE_LOW);
+              this, channelId, channelName, NotificationUtil.IMPORTANCE_LOW);
     }
     downloadManager = getDownloadManager();
     downloadManagerListener = new DownloadManagerListener();
@@ -241,7 +246,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     if (intent != null) {
       intentAction = intent.getAction();
       startedInForeground |=
-          intent.getBooleanExtra(KEY_FOREGROUND, false) || ACTION_RESTART.equals(intentAction);
+              intent.getBooleanExtra(KEY_FOREGROUND, false) || ACTION_RESTART.equals(intentAction);
     }
     // intentAction is null if the service is restarted or no action is specified.
     if (intentAction == null) {
@@ -259,7 +264,8 @@ public int onStartCommand(Intent intent, int flags, int startId) {
           Log.e(TAG, "Ignoring ADD action with no action data");
         } else {
           try {
-            downloadManager.handleAction(actionData);
+            boolean interposed = intent.getBooleanExtra(KEY_INTERPOSITION, false);
+            downloadManager.handleAction(actionData, interposed);
           } catch (IOException e) {
             Log.e(TAG, "Failed to handle ADD action", e);
           }
@@ -350,8 +356,8 @@ protected Requirements getRequirements() {
    */
   protected Notification getForegroundNotification(TaskState[] taskStates) {
     throw new IllegalStateException(
-        getClass().getName()
-            + " is started in the foreground but getForegroundNotification() is not implemented.");
+            getClass().getName()
+                    + " is started in the foreground but getForegroundNotification() is not implemented.");
   }
 
   /**
@@ -416,7 +422,7 @@ private void logd(String message) {
   }
 
   private static Intent getIntent(
-      Context context, Class<? extends DownloadService> clazz, String action) {
+          Context context, Class<? extends DownloadService> clazz, String action) {
     return new Intent(context, clazz).setAction(action);
   }
 
@@ -500,10 +506,10 @@ public void run() {
     private final RequirementsWatcher requirementsWatcher;
 
     private RequirementsHelper(
-        Context context,
-        Requirements requirements,
-        @Nullable Scheduler scheduler,
-        Class<? extends DownloadService> serviceClass) {
+            Context context,
+            Requirements requirements,
+            @Nullable Scheduler scheduler,
+            Class<? extends DownloadService> serviceClass) {
       this.context = context;
       this.requirements = requirements;
       this.scheduler = scheduler;
