diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RTMPListener.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RTMPListener.java
new file mode 100644
index 0000000000..008d73eb63
--- /dev/null
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RTMPListener.java
@@ -0,0 +1,6 @@
+package com.google.android.exoplayer2.ext.rtmp;
+
+public interface RTMPListener<S> {
+    void onData (S source, RTMPMarker marker);
+    void onFunction (S source);
+}
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RTMPMarker.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RTMPMarker.java
new file mode 100644
index 0000000000..8cd4fed4f5
--- /dev/null
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RTMPMarker.java
@@ -0,0 +1,33 @@
+package com.google.android.exoplayer2.ext.rtmp;
+
+import java.util.Arrays;
+
+public class RTMPMarker {
+    private final String type;
+    private final String uid;
+    private final int retryIndex;
+    private final byte[] data;
+
+    RTMPMarker (String type, String uid, int retryIndex, byte[] data) {
+        this.type = type;
+        this.uid = uid;
+        this.retryIndex = retryIndex;
+        this.data = Arrays.copyOf (data, data.length);
+    }
+
+    public String getType() {
+        return this.type;
+    }
+
+    public String getUid() {
+        return this.uid;
+    }
+
+    public int getRetryIndex () {
+        return this.retryIndex;
+    }
+
+    public byte[] getData () {
+        return this.data;
+    }
+}
\ No newline at end of file
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpCallbackListener.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpCallbackListener.java
index 052412320a..0bbe15a7fe 100644
--- a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpCallbackListener.java
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpCallbackListener.java
@@ -2,17 +2,17 @@
 
 import android.util.Log;
 
-import com.google.android.exoplayer2.upstream.CallbackListener;
-
 import net.butterflytv.rtmp_client.RTMPCallback;
 
+import java.util.Arrays;
+
 public class RtmpCallbackListener implements RTMPCallback {
 
-    private final CallbackListener<? super RtmpDataSource> cbListener;
+    private final RTMPListener<? super RtmpDataSource> cbListener;
     private final RtmpDataSource ds;
 
 
-    public RtmpCallbackListener (CallbackListener<? super RtmpDataSource> cbListener, RtmpDataSource ds) {
+    public RtmpCallbackListener (RTMPListener<? super RtmpDataSource> cbListener, RtmpDataSource ds) {
         this.cbListener = cbListener;
         this.ds = ds;
     }
@@ -20,13 +20,18 @@ public RtmpCallbackListener (CallbackListener<? super RtmpDataSource> cbListener
     @Override
     public void dataCallback(byte[] buffer) {
         Log.i ("EXOPlayerRtmpCBListener", "invoked dataCallback");
-        cbListener.dataCallback(ds, buffer);
+        if (cbListener == null)
+            return;
+        RTMPMarker marker = new RTMPMarker ("DefaultType", "DefaultUid", -1, buffer);
+        cbListener.onData(ds, marker);
     }
 
     @Override
     public void functionCallback() {
         Log.i ("EXOPlayerRtmpCBListener", "invoked functionCallback");
-        cbListener.functionCallback(ds);
+        if (cbListener == null)
+            return;
+        cbListener.onFunction(ds);
 
     }
 }
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
index a4f35acfe2..7b31aa780a 100644
--- a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
@@ -19,14 +19,13 @@
 import android.support.annotation.Nullable;
 import com.google.android.exoplayer2.C;
 import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.upstream.CallbackListener;
 import com.google.android.exoplayer2.upstream.DataSource;
 import com.google.android.exoplayer2.upstream.DataSpec;
 import com.google.android.exoplayer2.upstream.TransferListener;
 import java.io.IOException;
 import net.butterflytv.rtmp_client.RtmpClient;
 import net.butterflytv.rtmp_client.RtmpClient.RtmpIOException;
-import net.butterflytv.rtmp_client.RTMPCallback;
+
 /**
  * A Real-Time Messaging Protocol (RTMP) {@link DataSource}.
  */
@@ -37,7 +36,7 @@
   }
 
   @Nullable private final TransferListener<? super RtmpDataSource> listener;
-  @Nullable private final CallbackListener<? super RtmpDataSource> cbListener;
+  @Nullable private final RTMPListener<? super RtmpDataSource> cbListener;
   @Nullable private RtmpCallbackListener rtmpcbListener;
 
   private RtmpClient rtmpClient;
@@ -47,7 +46,7 @@ public RtmpDataSource() {
     this(null, null);
   }
 
-  public RtmpDataSource (@Nullable CallbackListener<? super RtmpDataSource> cbListener) {
+  public RtmpDataSource (@Nullable RTMPListener<? super RtmpDataSource> cbListener) {
     this (null, cbListener);
   }
 
@@ -59,7 +58,7 @@ public RtmpDataSource(@Nullable TransferListener<? super RtmpDataSource> listene
    * @param listener An optional listener.
    */
   public RtmpDataSource(@Nullable TransferListener<? super RtmpDataSource> listener,
-                        @Nullable CallbackListener<? super RtmpDataSource> cbListener) {
+                        @Nullable RTMPListener<? super RtmpDataSource> cbListener) {
     this.listener = listener;
     this.cbListener = cbListener;
   }
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
index f2d96853be..1ffc9453a5 100644
--- a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
@@ -16,10 +16,9 @@
 package com.google.android.exoplayer2.ext.rtmp;
 
 import android.support.annotation.Nullable;
-import com.google.android.exoplayer2.upstream.CallbackListener;
+
 import com.google.android.exoplayer2.upstream.DataSource;
 import com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
-import net.butterflytv.rtmp_client.RTMPCallback;
 import com.google.android.exoplayer2.upstream.TransferListener;
 
 /**
@@ -29,7 +28,7 @@
 
   @Nullable
   private final TransferListener<? super RtmpDataSource> listener;
-  private final CallbackListener<? super RtmpDataSource> cbListener;
+  private final RTMPListener<? super RtmpDataSource> cbListener;
 
   public RtmpDataSourceFactory() {
     this(null, null);
@@ -42,12 +41,12 @@ public RtmpDataSourceFactory(@Nullable TransferListener<? super RtmpDataSource>
     this (listener, null);
   }
 
-  public RtmpDataSourceFactory(@Nullable CallbackListener<? super RtmpDataSource> cbListener) {
+  public RtmpDataSourceFactory(@Nullable RTMPListener<? super RtmpDataSource> cbListener) {
     this (null, cbListener);
   }
 
   public RtmpDataSourceFactory(@Nullable TransferListener<? super RtmpDataSource> listener,
-                               @Nullable CallbackListener<? super RtmpDataSource> cbListener) {
+                               @Nullable RTMPListener<? super RtmpDataSource> cbListener) {
     this.listener = listener;
     this.cbListener = cbListener;
   }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/CallbackListener.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/CallbackListener.java
deleted file mode 100644
index 07bec9dbcb..0000000000
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/CallbackListener.java
+++ /dev/null
@@ -1,6 +0,0 @@
-package com.google.android.exoplayer2.upstream;
-
-public interface CallbackListener<S> {
-    void dataCallback (S source, byte[] buffer);
-    void functionCallback (S source);
-}
