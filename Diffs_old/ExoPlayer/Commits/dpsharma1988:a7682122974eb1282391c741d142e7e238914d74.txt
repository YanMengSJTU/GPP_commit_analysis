diff --git a/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java b/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java
index b4d7d83df9..697a5b68d8 100644
--- a/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java
+++ b/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java
@@ -47,6 +47,8 @@
   private static final String DOWNLOAD_TRACKER_ACTION_FILE = "tracked_actions";
   private static final String DOWNLOAD_CONTENT_DIRECTORY = "downloads";
   private static final int MAX_SIMULTANEOUS_DOWNLOADS = 2;
+  private KeyHelperModel keyHelperModel;
+
   private static final Deserializer[] DOWNLOAD_DESERIALIZERS =
       new Deserializer[] {
         DashDownloadAction.DESERIALIZER,
@@ -78,7 +80,8 @@ public void onCreate() {
   /** Returns a {@link HttpDataSource.Factory}. */
   public HttpDataSource.Factory buildHttpDataSourceFactory(TransferListener<? super DataSource> listener,
       KeyHelperModel keyHelper) {
-    return new CustomDataSourceFactory(userAgent, listener, keyHelper);
+    return  new CustomDataSourceFactory("Exo", listener, keyHelper);
+
   }
 
   /** Returns whether extension renderers should be used. */
@@ -98,6 +101,7 @@ public DownloadTracker getDownloadTracker() {
 
   public DownloadTracker getDownloadTracker(KeyHelperModel keyHelperModel){
     initDownloadManager(keyHelperModel);
+    this.keyHelperModel = keyHelperModel;
     return downloadTracker;
   }
 
@@ -121,6 +125,13 @@ private synchronized void initDownloadManager(
               new File(getDownloadDirectory(), DOWNLOAD_TRACKER_ACTION_FILE),
               DOWNLOAD_DESERIALIZERS);
       downloadManager.addListener(downloadTracker);
+
+    }
+    else
+    {
+      DownloaderConstructorHelper downloaderConstructorHelper =    new DownloaderConstructorHelper(
+              getDownloadCache(), buildHttpDataSourceFactory(/* listener= */ null,  this.keyHelperModel ));
+      downloadManager.setDownloaderConstructorHelper(downloaderConstructorHelper);
     }
   }
 
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
index b3f1d3da6a..75a23dca56 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
@@ -84,7 +84,7 @@
   private static final String TAG = "DownloadManager";
   private static final boolean DEBUG = false;
 
-  private final DownloaderConstructorHelper downloaderConstructorHelper;
+  private DownloaderConstructorHelper downloaderConstructorHelper;
   private final int maxActiveDownloadTasks;
   private final int minRetryCount;
   private final ActionFile actionFile;
@@ -110,6 +110,8 @@
    * @param actionSaveFile File to save active actions.
    * @param deserializers Used to deserialize {@link DownloadAction}s.
    */
+
+
   public DownloadManager(
       Cache cache,
       DataSource.Factory upstreamDataSourceFactory,
@@ -121,6 +123,16 @@ public DownloadManager(
         deserializers);
   }
 
+
+  public DownloaderConstructorHelper getDownloaderConstrucorHelper()
+  {
+    return this.downloaderConstructorHelper;
+  }
+
+  public void setDownloaderConstructorHelper(DownloaderConstructorHelper downloaderConstructorHelper) {
+    this.downloaderConstructorHelper = downloaderConstructorHelper;
+  }
+
   /**
    * Constructs a {@link DownloadManager}.
    *
