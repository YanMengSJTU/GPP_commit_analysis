diff --git a/build.gradle b/build.gradle
index b02d3db19b..89ebb2ec42 100644
--- a/build.gradle
+++ b/build.gradle
@@ -20,7 +20,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.2'
+        classpath 'com.android.tools.build:gradle:2.3.0'
         classpath 'com.novoda:bintray-release:0.3.4'
     }
 }
@@ -30,8 +30,8 @@ allprojects {
         mavenCentral()
     }
     project.ext {
-        compileSdkVersion=24
-        targetSdkVersion=24
-        buildToolsVersion='23.0.3'
+        compileSdkVersion=25
+        targetSdkVersion=25
+        buildToolsVersion='25.0.0'
     }
 }
diff --git a/demo/build.gradle b/demo/build.gradle
index a327c36e32..94c48d088f 100644
--- a/demo/build.gradle
+++ b/demo/build.gradle
@@ -14,8 +14,8 @@
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
+    compileSdkVersion 25
+    buildToolsVersion '25.0.0'
 
     defaultConfig {
         minSdkVersion 16
diff --git a/demo/demo-demo-release.apk b/demo/demo-demo-release.apk
deleted file mode 100644
index 22aa87b379..0000000000
Binary files a/demo/demo-demo-release.apk and /dev/null differ
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/LogService.java b/demo/src/main/java/com/google/android/exoplayer2/demo/LogService.java
index 111b09e5d6..fdd1fcd150 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/LogService.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/LogService.java
@@ -352,6 +352,10 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         // Hemos metido en el Intent parametros adicionales, los sacamos con esto
         Bundle extras = intent.getExtras();
         String dbname = "exoplayer_" + formatter.format(System.currentTimeMillis()); // default
+        String server_address = ""; // ejemplo: 94.177.232.57:5432
+
+        // Nombre de la base de datos:
+
         if(extras.get("DBNAME") == null) {
             Log.d("[LogService]", "null"); // no hay extras, nombre por defecto para la base de datos
         }
@@ -360,10 +364,22 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             Log.d("[LogService]","not null");
             dbname = (String) extras.get("DBNAME");
         }
+
+        // Direccion servidor OML2:
+
+        if(extras.get("OML2ADDR") == null) {
+            Log.e("[LogService]", "oml2 server not specified: results won't be recorded to database");
+        }
+        else
+        {
+            server_address = (String) extras.get("OML2ADDR");
+            Log.d("[LogService]","not null, using: " + server_address);
+        }
+
         Log.d("[LogService]", "Iniciando servicio");
         Log.d("[LogService]", "Escribiendo en " + dbname);
         super.onStartCommand(intent, flags, startId);
-        new OmlSetup().execute(dbname);
+        new OmlSetup().execute(dbname, server_address);
         logServiceIsRunning = true;
         return START_STICKY;
     }
@@ -395,12 +411,13 @@ protected void onPostExecute(ArrayList<OmlMP> result) {
         }
 
         @Override
-        protected ArrayList<OmlMP> doInBackground(String... experimentName) {
+        protected ArrayList<OmlMP> doInBackground(String... OmlExtra) {
             // El metodo doInBackground devuelve un 'result' que es capturado por el
             // metodo 'onPostExecute'. Lo usamos para pasar los measure_points.
             // Le pasamos la String dbname en la llamada: new OmlSetup().execute(dbname);
             // Podiamos haber pasado un array de Strings, por eso el [0].
-            String experiment_name = experimentName[0];
+            String experiment_name = OmlExtra[0];
+            String oml_server_address = OmlExtra[1];
             Log.d("[LogService]", "!!! experiment_name="+experiment_name);
 
             /*
@@ -483,9 +500,12 @@ protected void onPostExecute(ArrayList<OmlMP> result) {
             *
             * audio_events = {timestamp, event (enabled/disabled/loadDRMkeys...)}
             * audio_format = {timestamp, mimetype, bitrate, channels, sample_rate, language}
+            * audio_track_underrun = {timestamp, buffer_size, buffer_size_ms}
+            *
+            * "tcp:94.177.232.57:3003"
             *
             * */
-            OMLBase oml = new OMLBase("ExoPlayer", experiment_name, "exoplayer", "tcp:94.177.232.57:3003");
+            OMLBase oml = new OMLBase("ExoPlayer", experiment_name, "exoplayer", oml_server_address);
             ArrayList<OmlMP> measurePoints = new ArrayList<>();
 
             // video_format
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index c77a860c07..570f3a23eb 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -54,6 +54,7 @@
 import com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
 import com.google.android.exoplayer2.trackselection.AdaptiveVideoTrackSelection;
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
+import com.google.android.exoplayer2.trackselection.FixedTrackSelection;
 import com.google.android.exoplayer2.trackselection.MappingTrackSelector;
 import com.google.android.exoplayer2.trackselection.MappingTrackSelector.TrackInfo;
 import com.google.android.exoplayer2.trackselection.TrackSelection;
@@ -73,6 +74,11 @@
 import java.util.Map;
 import java.util.UUID;
 
+
+/* Para seleccionar la resolucion */
+import android.util.Log;
+
+
 /**
  * An activity that plays media using {@link SimpleExoPlayer}.
  */
@@ -85,6 +91,8 @@
   public static final String PREFER_EXTENSION_DECODERS = "prefer_extension_decoders";
 
   public static final String DBNAME = "dbname";
+  public static final String OML2ADDR = "oml2addr";
+  public static final String RESOLUTION = "resolution";
 
   public static final String ACTION_VIEW = "com.google.android.exoplayer.demo.action.VIEW";
   public static final String EXTENSION_EXTRA = "extension";
@@ -231,6 +239,8 @@ private void initializePlayer() {
     if (player == null) { // si no existe ningun player... lo configuramos:
 
       String dbname = intent.getStringExtra(DBNAME);
+      String oml2addr = intent.getStringExtra(OML2ADDR);
+      String resolution = intent.getStringExtra(RESOLUTION);
 
       // Esto no se para que sirve. Es false por defecto
       boolean preferExtensionDecoders = intent.getBooleanExtra(PREFER_EXTENSION_DECODERS, false);
@@ -277,6 +287,7 @@ private void initializePlayer() {
       Intent LogServiceIntent = new Intent(this,LogService.class);
 
       LogServiceIntent.putExtra("DBNAME", dbname); // dbname nunca sera null, viene de LogService
+      LogServiceIntent.putExtra("OML2ADDR", oml2addr); //
 
       if (LogService.logServiceIsRunning) {
         stopService(LogServiceIntent);
@@ -290,7 +301,18 @@ private void initializePlayer() {
       trackSelector = new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);
       trackSelector.addListener(this);
       trackSelector.addListener(eventLogger);
+      Log.d("[TrackSelection]", "trackSelector " + trackSelector.getTrackInfo());
       trackSelectionHelper = new TrackSelectionHelper(trackSelector, videoTrackSelectionFactory);
+
+      // Si tenemos la resolucion, la forzamos
+      String res = intent.hasExtra(RESOLUTION) ? intent.getStringExtra(RESOLUTION) : null;
+      if (res == null) {
+        TrackSelection.Factory FIXED_FACTORY = new FixedTrackSelection.Factory();
+        MappingTrackSelector.SelectionOverride override = null;
+        override = new MappingTrackSelector.SelectionOverride(FIXED_FACTORY, 0, 0);
+        // MappingTrackSelector.setSelectionOverride();
+      }
+
       player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, new DefaultLoadControl(),
           drmSessionManager, preferExtensionDecoders);
       player.addListener(this);
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/TrackSelectionHelper.java b/demo/src/main/java/com/google/android/exoplayer2/demo/TrackSelectionHelper.java
index 1bbd620660..1a02484888 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/TrackSelectionHelper.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/TrackSelectionHelper.java
@@ -20,6 +20,7 @@
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.text.TextUtils;
+import android.util.Log;
 import android.util.Pair;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -235,7 +236,8 @@ public void onClick(View view) {
       int trackIndex = tag.second;
       if (!trackGroupsAdaptive[groupIndex] || override == null
           || override.groupIndex != groupIndex) {
-        override = new SelectionOverride(FIXED_FACTORY, groupIndex, trackIndex);
+        override = new SelectionOverride(FIXED_FACTORY, groupIndex, trackIndex); // aqui seleccionamos las pistas
+        Log.d("[TrackSelection]", "SelectionOverride: " + override.tracks);
       } else {
         // The group being modified is adaptive and we already have a non-null override.
         boolean isEnabled = ((CheckedTextView) view).isChecked();
@@ -252,7 +254,7 @@ public void onClick(View view) {
           }
         } else {
           // Add the track to the override.
-          setOverride(groupIndex, getTracksAdding(override, trackIndex),
+          setOverride(groupIndex, getTracksAdding(override, trackIndex), // aqui a√±adimos las pistas seleccionadas en la variable override
               enableRandomAdaptationView.isChecked());
         }
       }
@@ -267,6 +269,24 @@ private void setOverride(int group, int[] tracks, boolean enableRandomAdaptation
     override = new SelectionOverride(factory, group, tracks);
   }
 
+   /*
+  *  Idea para forzar la resoluci√≥n:
+  *
+  *  1¬∫ Creamos un override = new SelectionOverride(FIXED_FACTORY, groupIndex, trackIndex);
+  *     trackIndex indicara la pista elegida. Cada pista tiene un formato determinado (resolucion entre otras cosas)
+  *
+  *  2¬∫ setOverride(groupIndex, getTracksAdding(override, trackIndex),
+  *           enableRandomAdaptationView.isChecked());
+  *
+  *  3¬∫ updateViews()
+  *
+  * */
+  public void setResolution() {
+    Log.d("[TrackSelection]", "Forzando resolucion...!");
+    override = new SelectionOverride(FIXED_FACTORY, 0, 0);
+    setOverride(0, getTracksAdding(override, 0), false);
+  }
+
   // Track array manipulation.
 
   private static int[] getTracksAdding(SelectionOverride override, int addedTrack) {
diff --git a/extensions/opus/src/main/jni/convert_android_asm.sh b/extensions/opus/src/main/jni/convert_android_asm.sh
old mode 100755
new mode 100644
diff --git a/extensions/vp9/src/main/jni/generate_libvpx_android_configs.sh b/extensions/vp9/src/main/jni/generate_libvpx_android_configs.sh
old mode 100755
new mode 100644
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 04363c87a9..f7dda0f3a0 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Thu Sep 01 11:39:15 BST 2016
+#Sat Mar 11 12:50:59 CET 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
diff --git a/gradlew.bat b/gradlew.bat
old mode 100644
new mode 100755
diff --git a/testutils/build.gradle b/testutils/build.gradle
index 61bb50f74d..1b88075420 100644
--- a/testutils/build.gradle
+++ b/testutils/build.gradle
@@ -15,6 +15,7 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+    buildToolsVersion '25.0.0'
 }
 
 dependencies {
