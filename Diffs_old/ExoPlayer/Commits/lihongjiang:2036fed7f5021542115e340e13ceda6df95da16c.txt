diff --git a/library/src/main/java/com/google/android/exoplayer/chunk/ChunkSampleSource.java b/library/src/main/java/com/google/android/exoplayer/chunk/ChunkSampleSource.java
index c1db4257a9..67265e7695 100644
--- a/library/src/main/java/com/google/android/exoplayer/chunk/ChunkSampleSource.java
+++ b/library/src/main/java/com/google/android/exoplayer/chunk/ChunkSampleSource.java
@@ -249,11 +249,11 @@ public int readData(int track, long positionUs, MediaFormatHolder formatHolder,
       currentChunk = mediaChunks.getFirst();
     }
 
-    if (downstreamFormat == null || !downstreamFormat.equals(currentChunk.format)) {
-      notifyDownstreamFormatChanged(currentChunk.format, currentChunk.trigger,
-          currentChunk.startTimeUs);
-      downstreamFormat = currentChunk.format;
+    Format format = currentChunk.format;
+    if (!format.equals(downstreamFormat)) {
+      notifyDownstreamFormatChanged(format, currentChunk.trigger, currentChunk.startTimeUs);
     }
+    downstreamFormat = format;
 
     if (haveSamples || currentChunk.isMediaFormatFinal) {
       MediaFormat mediaFormat = currentChunk.getMediaFormat();
@@ -263,6 +263,11 @@ public int readData(int track, long positionUs, MediaFormatHolder formatHolder,
         downstreamMediaFormat = mediaFormat;
         return FORMAT_READ;
       }
+      // If mediaFormat and downstreamMediaFormat are equal but different objects then the equality
+      // check above will have been expensive, comparing the fields in each format. We update
+      // downstreamMediaFormat here so that referential equality can be cheaply established during
+      // subsequent calls.
+      downstreamMediaFormat = mediaFormat;
     }
 
     if (!haveSamples) {
diff --git a/library/src/main/java/com/google/android/exoplayer/hls/HlsSampleSource.java b/library/src/main/java/com/google/android/exoplayer/hls/HlsSampleSource.java
index 1ed68da072..d7731bb48d 100644
--- a/library/src/main/java/com/google/android/exoplayer/hls/HlsSampleSource.java
+++ b/library/src/main/java/com/google/android/exoplayer/hls/HlsSampleSource.java
@@ -305,11 +305,11 @@ public int readData(int track, long playbackPositionUs, MediaFormatHolder format
       return NOTHING_READ;
     }
 
-    if (downstreamFormat == null || !downstreamFormat.equals(extractor.format)) {
-      // Notify a change in the downstream format.
-      notifyDownstreamFormatChanged(extractor.format, extractor.trigger, extractor.startTimeUs);
-      downstreamFormat = extractor.format;
+    Format format = extractor.format;
+    if (!format.equals(downstreamFormat)) {
+      notifyDownstreamFormatChanged(format, extractor.trigger, extractor.startTimeUs);
     }
+    downstreamFormat = format;
 
     if (extractors.size() > 1) {
       // If there's more than one extractor, attempt to configure a seamless splice from the
@@ -329,10 +329,17 @@ public int readData(int track, long playbackPositionUs, MediaFormatHolder format
     }
 
     MediaFormat mediaFormat = extractor.getMediaFormat(extractorTrack);
-    if (mediaFormat != null && !mediaFormat.equals(downstreamMediaFormats[track])) {
-      formatHolder.format = mediaFormat;
+    if (mediaFormat != null) {
+      if (!mediaFormat.equals(downstreamMediaFormats[track])) {
+        formatHolder.format = mediaFormat;
+        downstreamMediaFormats[track] = mediaFormat;
+        return FORMAT_READ;
+      }
+      // If mediaFormat and downstreamMediaFormat[track] are equal but different objects then the
+      // equality check above will have been expensive, comparing the fields in each format. We
+      // update downstreamMediaFormat here so that referential equality can be cheaply established
+      // during subsequent calls.
       downstreamMediaFormats[track] = mediaFormat;
-      return FORMAT_READ;
     }
 
     if (extractor.getSample(extractorTrack, sampleHolder)) {
