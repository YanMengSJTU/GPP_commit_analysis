diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
index a947378de5..b3c06b2a0f 100644
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
+++ b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
@@ -21,6 +21,7 @@
 import android.os.Looper;
 import android.os.SystemClock;
 import android.support.annotation.IntDef;
+import android.util.Log;
 import android.view.Surface;
 import com.google.android.exoplayer2.BaseRenderer;
 import com.google.android.exoplayer2.C;
@@ -47,6 +48,7 @@
  * Decodes and renders video using the native VP9 decoder.
  */
 public final class LibvpxVideoRenderer extends BaseRenderer {
+  public static final String TAG = "LibvpxVideoRenderer";
 
   @Retention(RetentionPolicy.SOURCE)
   @IntDef({REINITIALIZATION_STATE_NONE, REINITIALIZATION_STATE_SIGNAL_END_OF_STREAM,
@@ -129,6 +131,7 @@
   private long droppedFrameAccumulationStartTimeMs;
   private int droppedFrames;
   private int consecutiveDroppedFrameCount;
+  private String vpxDecoderInfo;
 
   /**
    * @param scaleToFit Whether video frames should be scaled to fit when rendering.
@@ -194,6 +197,17 @@ public LibvpxVideoRenderer(boolean scaleToFit, long allowedJoiningTimeMs,
 
   @Override
   public int supportsFormat(Format format) {
+    Log.d(TAG, "supportsFormat " + format.sampleMimeType);
+    if (!VpxLibrary.isAvailable()) {
+      Log.w(TAG, "VpxLibrary not available");
+    } else {
+      if (vpxDecoderInfo == null) {
+        vpxDecoderInfo = "VpxLibrary Version:" + VpxLibrary.getVersion()
+                + ", build params:" + VpxLibrary.getBuildConfig()
+                + ", HighBitDepthSupported:" + VpxLibrary.isHighBitDepthSupported();
+        Log.i(TAG, vpxDecoderInfo);
+      }
+    }
     return VpxLibrary.isAvailable() && MimeTypes.VIDEO_VP9.equalsIgnoreCase(format.sampleMimeType)
         ? (FORMAT_HANDLED | ADAPTIVE_SEAMLESS) : FORMAT_UNSUPPORTED_TYPE;
   }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/util/LibraryLoader.java b/library/core/src/main/java/com/google/android/exoplayer2/util/LibraryLoader.java
index c12bae0a07..cb6b39bd4a 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/util/LibraryLoader.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/util/LibraryLoader.java
@@ -15,6 +15,8 @@
  */
 package com.google.android.exoplayer2.util;
 
+import android.util.Log;
+
 /**
  * Configurable loader for native libraries.
  */
@@ -54,7 +56,7 @@ public synchronized boolean isAvailable() {
       }
       isAvailable = true;
     } catch (UnsatisfiedLinkError exception) {
-      // Do nothing.
+        Log.w(LibraryLoader.class.getSimpleName(), "loadLibrary failed with exception " + exception.toString());
     }
     return isAvailable;
   }
