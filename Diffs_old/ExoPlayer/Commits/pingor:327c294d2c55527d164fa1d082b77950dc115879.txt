diff --git a/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/StreamBuilder.java b/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/StreamBuilder.java
index f50bb6a2f9..d69a44d5d7 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/StreamBuilder.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/StreamBuilder.java
@@ -136,9 +136,9 @@ public StreamBuilder addUnsupportedTrack(byte trackNumber) {
   public StreamBuilder addSimpleBlockEncryptedMedia(int trackNumber, int clusterTimecode,
       int blockTimecode, boolean keyframe, boolean invisible, boolean validSignalByte,
       byte[] data) {
-    byte flags = (byte) ((keyframe ? 0x80 : 0x00) | (invisible ? 0x08 : 0x00));
-    EbmlElement simpleBlockElement = createSimpleBlock(trackNumber, blockTimecode, flags,
-        true, validSignalByte, 1, data);
+    int flags = (keyframe ? 0x80 : 0x00) | (invisible ? 0x08 : 0x00);
+    EbmlElement simpleBlockElement = createSimpleBlock(trackNumber, blockTimecode, flags, true,
+        validSignalByte, 1, data);
     mediaSegments.add(createCluster(clusterTimecode, simpleBlockElement));
     return this;
   }
@@ -146,9 +146,9 @@ public StreamBuilder addSimpleBlockEncryptedMedia(int trackNumber, int clusterTi
 
   public StreamBuilder addSimpleBlockMedia(int trackNumber, int clusterTimecode,
       int blockTimecode, boolean keyframe, boolean invisible, byte[] data) {
-    byte flags = (byte) ((keyframe ? 0x80 : 0x00) | (invisible ? 0x08 : 0x00));
-    EbmlElement simpleBlockElement = createSimpleBlock(trackNumber, blockTimecode, flags,
-        false, true, 1, data);
+    int flags = (keyframe ? 0x80 : 0x00) | (invisible ? 0x08 : 0x00);
+    EbmlElement simpleBlockElement = createSimpleBlock(trackNumber, blockTimecode, flags, false,
+        true, 1, data);
     mediaSegments.add(createCluster(clusterTimecode, simpleBlockElement));
     return this;
   }
@@ -344,13 +344,13 @@ private static EbmlElement createSimpleBlock(int trackNumber, int timecode, int
     byte[] simpleBlockBytes;
     if (lacingFrameCount > 1) {
       flags |= 0x04; // Fixed-size lacing
-      simpleBlockBytes = TestUtil.createByteArray(
-          0x40, trackNumberBytes[3], // Track number size=2
-          timeBytes[2], timeBytes[3], flags, lacingFrameCount - 1); // Timecode, flags and lacing.
+      simpleBlockBytes = TestUtil.joinByteArrays(
+          new byte[] {0x40, trackNumberBytes[3], timeBytes[2], timeBytes[3]},
+          TestUtil.createByteArray(flags, lacingFrameCount - 1));
     } else {
-      simpleBlockBytes = TestUtil.createByteArray(
-          0x40, trackNumberBytes[3], // Track number size=2
-          timeBytes[2], timeBytes[3], flags); // Timecode and flags
+      simpleBlockBytes = TestUtil.joinByteArrays(
+          new byte[] {0x40, trackNumberBytes[3], timeBytes[2], timeBytes[3]},
+          TestUtil.createByteArray(flags));
     }
     if (encrypted) {
       simpleBlockBytes = TestUtil.joinByteArrays(
@@ -412,10 +412,10 @@ private static EbmlElement createBlock(int trackNumber, int timecode, boolean ke
 
   private static byte[] getIntegerBytes(int value) {
     return TestUtil.createByteArray(
-        (value & 0xFF000000) >> 24,
-        (value & 0x00FF0000) >> 16,
-        (value & 0x0000FF00) >> 8,
-        (value & 0x000000FF));
+        (value >> 24) & 0xFF,
+        (value >> 16) & 0xFF,
+        (value >> 8) & 0xFF,
+        (value) & 0xFF);
   }
 
   private static byte[] getLongBytes(long value) {
diff --git a/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/WebmExtractorTest.java b/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/WebmExtractorTest.java
index 4011a53e9d..206feabed4 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/WebmExtractorTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/extractor/webm/WebmExtractorTest.java
@@ -667,7 +667,7 @@ public void testReadSampleWithFixedSizeLacing() throws IOException, InterruptedE
         .addOpusTrack(AUDIO_TRACK_NUMBER, TEST_CHANNEL_COUNT, TEST_SAMPLE_RATE, TEST_CODEC_DELAY,
             TEST_SEEK_PRE_ROLL, TEST_OPUS_CODEC_PRIVATE, TEST_DEFAULT_DURATION_NS)
         .addSimpleBlockMediaWithFixedSizeLacing(2 /* trackNumber */, 0 /* clusterTimecode */,
-            0 /* blockTimecode */, 20, media)
+            0 /* blockTimecode */, 20 /* lacingFrameCount */, media)
         .build(1);
 
     TestUtil.consumeTestData(extractor, data);
diff --git a/library/src/androidTest/java/com/google/android/exoplayer/testutil/TestUtil.java b/library/src/androidTest/java/com/google/android/exoplayer/testutil/TestUtil.java
index 90a0b5942c..ab544b2530 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/testutil/TestUtil.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/testutil/TestUtil.java
@@ -62,9 +62,16 @@ public static void consumeTestData(Extractor extractor, byte[] data)
     return source;
   }
 
+  /**
+   * Converts an array of integers in the range [0, 255] into an equivalent byte array.
+   *
+   * @param intArray An array of integers, all of which must be in the range [0, 255].
+   * @return The equivalent byte array.
+   */
   public static byte[] createByteArray(int... intArray) {
     byte[] byteArray = new byte[intArray.length];
     for (int i = 0; i < byteArray.length; i++) {
+      Assertions.checkState(0x00 <= intArray[i] && intArray[i] <= 0xFF);
       byteArray[i] = (byte) intArray[i];
     }
     return byteArray;
