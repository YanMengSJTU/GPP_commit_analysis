diff --git a/build.gradle b/build.gradle
index 01d8b6616c..53fad4f1d8 100644
--- a/build.gradle
+++ b/build.gradle
@@ -16,7 +16,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.1'
+        classpath 'com.android.tools.build:gradle:2.3.3'
         classpath 'com.novoda:bintray-release:0.4.0'
     }
     // Workaround for the following test coverage issue. Remove when fixed:
@@ -40,7 +40,7 @@ allprojects {
         minSdkVersion = 9
         compileSdkVersion = 25
         targetSdkVersion = 25
-        buildToolsVersion = '25'
+        buildToolsVersion = '26'
         testSupportLibraryVersion = '0.5'
         supportLibraryVersion = '25.3.1'
         dexmakerVersion = '1.2'
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index d0703f3496..a77b4e06b5 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -234,8 +234,7 @@ private void initializePlayer() {
     Intent intent = getIntent();
     boolean needNewPlayer = player == null;
     if (needNewPlayer) {
-      TrackSelection.Factory adaptiveTrackSelectionFactory =
-          new AdaptiveTrackSelection.Factory(BANDWIDTH_METER);
+      TrackSelection.Factory adaptiveTrackSelectionFactory = new AdaptiveTrackSelection.Factory(BANDWIDTH_METER);
       trackSelector = new DefaultTrackSelector(adaptiveTrackSelectionFactory);
       trackSelectionHelper = new TrackSelectionHelper(trackSelector, adaptiveTrackSelectionFactory);
       lastSeenTrackGroupArray = null;
@@ -266,7 +265,7 @@ private void initializePlayer() {
               : DefaultRenderersFactory.EXTENSION_RENDERER_MODE_ON)
               : DefaultRenderersFactory.EXTENSION_RENDERER_MODE_OFF;
       DefaultRenderersFactory renderersFactory = new DefaultRenderersFactory(this,
-          drmSessionManager, extensionRendererMode);
+          drmSessionManager, DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER);
 
       player = ExoPlayerFactory.newSimpleInstance(renderersFactory, trackSelector);
       player.addListener(this);
diff --git a/extensions/okhttp/build.gradle b/extensions/okhttp/build.gradle
index f47f1a8556..d2a3b9a757 100644
--- a/extensions/okhttp/build.gradle
+++ b/extensions/okhttp/build.gradle
@@ -35,13 +35,3 @@ dependencies {
     }
 }
 
-ext {
-    javadocTitle = 'OkHttp extension'
-}
-apply from: '../../javadoc_library.gradle'
-
-ext {
-    releaseArtifact = 'extension-okhttp'
-    releaseDescription = 'OkHttp extension for ExoPlayer.'
-}
-apply from: '../../publish.gradle'
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/AdaptiveTrackSelection.java b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/AdaptiveTrackSelection.java
index 12f5952dd0..3bc344b5ba 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/AdaptiveTrackSelection.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/AdaptiveTrackSelection.java
@@ -16,6 +16,8 @@
 package com.google.android.exoplayer2.trackselection;
 
 import android.os.SystemClock;
+import android.util.Log;
+
 import com.google.android.exoplayer2.C;
 import com.google.android.exoplayer2.Format;
 import com.google.android.exoplayer2.source.TrackGroup;
@@ -29,11 +31,11 @@
  */
 public class AdaptiveTrackSelection extends BaseTrackSelection {
 
+  private static final String TAG = "AdaptiveTrackSelection";
   /**
    * Factory for {@link AdaptiveTrackSelection} instances.
    */
   public static final class Factory implements TrackSelection.Factory {
-
     private final BandwidthMeter bandwidthMeter;
     private final int maxInitialBitrate;
     private final int minDurationForQualityIncreaseMs;
@@ -241,6 +243,7 @@ private int determineIdealSelectedIndex(long nowMs) {
     for (int i = 0; i < length; i++) {
       if (nowMs == Long.MIN_VALUE || !isBlacklisted(i, nowMs)) {
         Format format = getFormat(i);
+        Log.d(TAG, "current bitrate" + effectiveBitrate + "|" + "current index" + i);
         if (format.bitrate <= effectiveBitrate) {
           return i;
         } else {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java
index 2a426c9c52..aca4556c54 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java
@@ -889,8 +889,7 @@ protected TrackSelection selectOtherTrack(int trackType, TrackGroupArray groups,
 
   protected static boolean isSupported(int formatSupport, boolean allowExceedsCapabilities) {
     int maskedSupport = formatSupport & RendererCapabilities.FORMAT_SUPPORT_MASK;
-    return maskedSupport == RendererCapabilities.FORMAT_HANDLED || (allowExceedsCapabilities
-        && maskedSupport == RendererCapabilities.FORMAT_EXCEEDS_CAPABILITIES);
+    return maskedSupport == RendererCapabilities.FORMAT_HANDLED || (true && maskedSupport == RendererCapabilities.FORMAT_EXCEEDS_CAPABILITIES);
   }
 
   protected static boolean formatHasLanguage(Format format, String language) {
