diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/wav/WavHeader.java b/library/src/main/java/com/google/android/exoplayer/extractor/wav/WavHeader.java
index 4ebdfcbc45..94230d24b5 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/wav/WavHeader.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/wav/WavHeader.java
@@ -30,7 +30,7 @@
   private final int blockAlignment;
   /** Bits per sample for the audio data. */
   private final int bitsPerSample;
-  /** The pcm encoding */
+  /** The PCM encoding */
   private final int encoding;
 
   /** Offset to the start of sample data. */
@@ -55,22 +55,8 @@ public WavHeader(
 
   /** Returns the duration in microseconds of this WAV. */
   public long getDurationUs() {
-    return (getNumFrames() * C.MICROS_PER_SECOND) / sampleRateHz;
-  }
-
-  /** Returns the number of samples in this WAV. */
-  public long getNumSamples() {
-    return dataSize / getBytesPerSample();
-  }
-
-  /** Returns the number of frames in this WAV. */
-  public long getNumFrames() {
-    return getNumSamples() / getNumChannels();
-  }
-
-  /** Returns the bytes per sample of this WAV. */
-  public int getBytesPerSample() {
-    return blockAlignment / numChannels;
+    long numFrames = dataSize / blockAlignment;
+    return (numFrames * C.MICROS_PER_SECOND) / sampleRateHz;
   }
 
   /** Returns the bytes per frame of this WAV. */
@@ -97,7 +83,7 @@ public int getNumChannels() {
   public long getPosition(long timeUs) {
     long unroundedPosition = (timeUs * averageBytesPerSecond) / C.MICROS_PER_SECOND;
     // Round down to nearest frame.
-    return (unroundedPosition / numChannels) * numChannels + dataStartPosition;
+    return (unroundedPosition / blockAlignment) * blockAlignment + dataStartPosition;
   }
 
   /** Returns the time in microseconds for the given position in bytes in this WAV. */
