diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/ProgressiveDownloadAction.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/ProgressiveDownloadAction.java
index 7ced2fa41b..055ba8136a 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/ProgressiveDownloadAction.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/ProgressiveDownloadAction.java
@@ -36,11 +36,12 @@ public ProgressiveDownloadAction readFromStream(int version, DataInputStream inp
             throws IOException {
           Uri uri = Uri.parse(input.readUTF());
           boolean isRemoveAction = input.readBoolean();
+          boolean paused = input.readBoolean();
           int dataLength = input.readInt();
           byte[] data = new byte[dataLength];
           input.readFully(data);
           String customCacheKey = input.readBoolean() ? input.readUTF() : null;
-          return new ProgressiveDownloadAction(uri, isRemoveAction, data, customCacheKey);
+          return new ProgressiveDownloadAction(uri, isRemoveAction, paused, data, customCacheKey);
         }
       };
 
@@ -56,7 +57,7 @@ public ProgressiveDownloadAction readFromStream(int version, DataInputStream inp
    */
   public static ProgressiveDownloadAction createDownloadAction(
       Uri uri, @Nullable byte[] data, @Nullable String customCacheKey) {
-    return new ProgressiveDownloadAction(uri, /* isRemoveAction= */ false, data, customCacheKey);
+    return new ProgressiveDownloadAction(uri, /* isRemoveAction= */ false, false, data, customCacheKey);
   }
 
   /**
@@ -69,7 +70,7 @@ public static ProgressiveDownloadAction createDownloadAction(
    */
   public static ProgressiveDownloadAction createRemoveAction(
       Uri uri, @Nullable byte[] data, @Nullable String customCacheKey) {
-    return new ProgressiveDownloadAction(uri, /* isRemoveAction= */ true, data, customCacheKey);
+    return new ProgressiveDownloadAction(uri, /* isRemoveAction= */ true, false, data, customCacheKey);
   }
 
   /**
@@ -83,8 +84,8 @@ public static ProgressiveDownloadAction createRemoveAction(
    */
   @Deprecated
   public ProgressiveDownloadAction(
-      Uri uri, boolean isRemoveAction, @Nullable byte[] data, @Nullable String customCacheKey) {
-    super(TYPE, VERSION, uri, isRemoveAction, data);
+      Uri uri, boolean isRemoveAction, boolean paused, @Nullable byte[] data, @Nullable String customCacheKey) {
+    super(TYPE, VERSION, uri, isRemoveAction, paused, data);
     this.customCacheKey = customCacheKey;
   }
 
@@ -135,4 +136,13 @@ private String getCacheKey() {
     return customCacheKey != null ? customCacheKey : CacheUtil.generateKey(uri);
   }
 
+  @Override
+  public DownloadAction pause() {
+    return new ProgressiveDownloadAction(uri, isRemoveAction, true, data, customCacheKey);
+  }
+
+  @Override
+  public DownloadAction resume() {
+    return new ProgressiveDownloadAction(uri, isRemoveAction, false, data, customCacheKey);
+  }
 }
