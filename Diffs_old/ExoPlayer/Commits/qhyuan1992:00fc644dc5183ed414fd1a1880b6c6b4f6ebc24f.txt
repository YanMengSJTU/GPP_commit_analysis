diff --git a/library/src/androidTest/java/com/google/android/exoplayer/upstream/cache/CachedContentIndexTest.java b/library/src/androidTest/java/com/google/android/exoplayer/upstream/cache/CachedContentIndexTest.java
index 10b2c65456..9f25861415 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/upstream/cache/CachedContentIndexTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/upstream/cache/CachedContentIndexTest.java
@@ -176,7 +176,7 @@ public void testEncryption() throws Exception {
     // Assert file content is different
     FileInputStream fis1 = new FileInputStream(file1);
     FileInputStream fis2 = new FileInputStream(file2);
-    for (int b; (b = fis1.read()) == fis2.read();) {
+    for (int b; (b = fis1.read()) == fis2.read(); ) {
       assertTrue(b != -1);
     }
 
@@ -200,6 +200,12 @@ public void testEncryption() throws Exception {
     // Non encrypted index file can be read even when encryption key provided.
     assertStoredAndLoadedEqual(new CachedContentIndex(cacheDir),
         new CachedContentIndex(cacheDir, key));
+
+    // Test multiple store() calls
+    CachedContentIndex index = new CachedContentIndex(cacheDir, key);
+    index.addNew(new CachedContent(15, "key3", 110));
+    index.store();
+    assertStoredAndLoadedEqual(index, new CachedContentIndex(cacheDir, key));
   }
 
   private void assertStoredAndLoadedEqual(CachedContentIndex index, CachedContentIndex index2)
diff --git a/library/src/main/java/com/google/android/exoplayer/upstream/cache/CachedContentIndex.java b/library/src/main/java/com/google/android/exoplayer/upstream/cache/CachedContentIndex.java
index cc70292f83..da6c66e413 100644
--- a/library/src/main/java/com/google/android/exoplayer/upstream/cache/CachedContentIndex.java
+++ b/library/src/main/java/com/google/android/exoplayer/upstream/cache/CachedContentIndex.java
@@ -302,6 +302,9 @@ private void writeFile() throws CacheException {
       }
       output.writeInt(hashCode);
       atomicFile.endWrite(output);
+      // Avoid calling close twice. Duplicate CipherOutputStream.close calls did
+      // not used to be no-ops: https://android-review.googlesource.com/#/c/272799/
+      output = null;
     } catch (IOException e) {
       throw new CacheException(e);
     } finally {
diff --git a/library/src/main/java/com/google/android/exoplayer/util/ReusableBufferedOutputStream.java b/library/src/main/java/com/google/android/exoplayer/util/ReusableBufferedOutputStream.java
index 9ca7547486..713568a7de 100644
--- a/library/src/main/java/com/google/android/exoplayer/util/ReusableBufferedOutputStream.java
+++ b/library/src/main/java/com/google/android/exoplayer/util/ReusableBufferedOutputStream.java
@@ -67,6 +67,7 @@ public void close() throws IOException {
   public void reset(OutputStream out) {
     Assertions.checkState(closed);
     this.out = out;
+    count = 0;
     closed = false;
   }
 }
