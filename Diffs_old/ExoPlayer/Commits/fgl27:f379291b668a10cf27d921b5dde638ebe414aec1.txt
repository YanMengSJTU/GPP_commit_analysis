diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaSource.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaSource.java
index 29597be069..49e2c42ed4 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaSource.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaSource.java
@@ -70,6 +70,7 @@
     private DrmSessionManager<?> drmSessionManager;
     private LoadErrorHandlingPolicy loadErrorHandlingPolicy;
     private boolean allowChunklessPreparation;
+    private long LowLatency;
     private boolean useSessionKeys;
     private boolean isCreateCalled;
     @Nullable private Object tag;
@@ -242,6 +243,12 @@ public Factory setAllowChunklessPreparation(boolean allowChunklessPreparation) {
       return this;
     }
 
+    public Factory setLowLatency(long LowLatency) {
+      Assertions.checkState(!isCreateCalled);
+      this.LowLatency = LowLatency;
+      return this;
+    }
+
     /**
      * Sets whether to use #EXT-X-SESSION-KEY tags provided in the master playlist. If enabled, it's
      * assumed that any single session key declared in the master playlist can be used to obtain all
@@ -294,6 +301,7 @@ public HlsMediaSource createMediaSource(Uri playlistUri) {
           playlistTrackerFactory.createTracker(
               hlsDataSourceFactory, loadErrorHandlingPolicy, playlistParserFactory),
           allowChunklessPreparation,
+          LowLatency,
           useSessionKeys,
           tag);
     }
@@ -319,6 +327,7 @@ public Factory setStreamKeys(List<StreamKey> streamKeys) {
   private final DrmSessionManager<?> drmSessionManager;
   private final LoadErrorHandlingPolicy loadErrorHandlingPolicy;
   private final boolean allowChunklessPreparation;
+  private final long LowLatency;
   private final boolean useSessionKeys;
   private final HlsPlaylistTracker playlistTracker;
   @Nullable private final Object tag;
@@ -334,6 +343,7 @@ private HlsMediaSource(
       LoadErrorHandlingPolicy loadErrorHandlingPolicy,
       HlsPlaylistTracker playlistTracker,
       boolean allowChunklessPreparation,
+      long LowLatency,
       boolean useSessionKeys,
       @Nullable Object tag) {
     this.manifestUri = manifestUri;
@@ -344,6 +354,7 @@ private HlsMediaSource(
     this.loadErrorHandlingPolicy = loadErrorHandlingPolicy;
     this.playlistTracker = playlistTracker;
     this.allowChunklessPreparation = allowChunklessPreparation;
+    this.LowLatency = LowLatency;
     this.useSessionKeys = useSessionKeys;
     this.tag = tag;
   }
@@ -413,7 +424,10 @@ public void onPrimaryPlaylistRefreshed(HlsMediaPlaylist playlist) {
       long periodDurationUs =
           playlist.hasEndTag ? offsetFromInitialStartTimeUs + playlist.durationUs : C.TIME_UNSET;
       List<HlsMediaPlaylist.Segment> segments = playlist.segments;
-      if (windowDefaultStartPositionUs == C.TIME_UNSET) {
+      if (LowLatency > 0 && playlist.durationUs > (1000 * LowLatency)) {
+        windowDefaultStartPositionUs = playlist.durationUs - (1000 * LowLatency);
+        if (playlist.targetDurationUs > (1000 * LowLatency) / 2) playlist.targetDurationUs = (1000 * LowLatency) / 2;
+      } else if (windowDefaultStartPositionUs == C.TIME_UNSET) {
         windowDefaultStartPositionUs = 0;
         if (!segments.isEmpty()) {
           int defaultStartSegmentIndex = Math.max(0, segments.size() - 5);
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
index 91495094f7..ed9446782f 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
@@ -208,7 +208,7 @@ public int compareTo(Long relativeStartTimeUs) {
   /**
    * The target duration in microseconds, as defined by #EXT-X-TARGETDURATION.
    */
-  public final long targetDurationUs;
+  public long targetDurationUs;
   /**
    * Whether the playlist contains the #EXT-X-ENDLIST tag.
    */
