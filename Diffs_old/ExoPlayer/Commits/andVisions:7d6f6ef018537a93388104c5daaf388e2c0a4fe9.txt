diff --git a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/gts/DashTest.java b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/gts/DashTest.java
index d6020d42df..1f1e942f01 100644
--- a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/gts/DashTest.java
+++ b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/gts/DashTest.java
@@ -76,6 +76,7 @@
 
   private static final String TAG = "DashTest";
   private static final String REPORT_NAME = "GtsExoPlayerTestCases";
+  private static final String REPORT_OBJECT_NAME = "playbacktest";
 
   private static final long MAX_PLAYING_TIME_DISCREPANCY_MS = 2000;
   private static final float MAX_DROPPED_VIDEO_FRAME_FRACTION = 0.01f;
@@ -613,7 +614,7 @@ private void testDashPlayback(HostActivity activity, String streamName,
     MediaPresentationDescription mpd = TestUtil.loadManifest(activity, TAG,
         MANIFEST_URL_PREFIX + manifestFileName, new MediaPresentationDescriptionParser());
     MetricsLogger metricsLogger = MetricsLogger.Factory.createDefault(getInstrumentation(), TAG,
-        REPORT_NAME, streamName);
+        REPORT_NAME, REPORT_OBJECT_NAME);
     DashHostedTest test = new DashHostedTest(streamName, mpd, metricsLogger, fullPlaybackNoSeeking,
         audioFormat, canIncludeAdditionalVideoFormats, isWidevineEncrypted, false, actionSchedule,
         videoMimeType, videoFormats);
@@ -622,7 +623,7 @@ private void testDashPlayback(HostActivity activity, String streamName,
     // non-CDD required formats (b/28220076).
     if (test.needsCddLimitedRetry) {
       metricsLogger = MetricsLogger.Factory.createDefault(getInstrumentation(), TAG, REPORT_NAME,
-          streamName + "_cdd_limited_retry");
+          REPORT_OBJECT_NAME);
       test = new DashHostedTest(streamName, mpd, metricsLogger, fullPlaybackNoSeeking, audioFormat,
           false, isWidevineEncrypted, true, actionSchedule, videoMimeType, videoFormats);
       activity.runTest(test, mpd.duration + MAX_ADDITIONAL_TIME_MS);
@@ -660,6 +661,7 @@ private static boolean shouldSkipAdaptiveTest(String mimeType) throws IOExceptio
     private final boolean fullPlaybackNoSeeking;
     private final boolean canIncludeAdditionalVideoFormats;
     private final boolean isWidevineEncrypted;
+    private final boolean isCddLimitedRetry;
     private final String[] audioFormats;
     private final String[] videoFormats;
 
@@ -698,6 +700,7 @@ public DashHostedTest(String streamName, MediaPresentationDescription mpd,
       this.audioFormats = new String[] {audioFormat};
       this.canIncludeAdditionalVideoFormats = canIncludeAdditionalVideoFormats;
       this.isWidevineEncrypted = isWidevineEncrypted;
+      this.isCddLimitedRetry = isCddLimitedRetry;
       this.videoMimeType = videoMimeType;
       this.videoFormats = videoFormats;
       if (actionSchedule != null) {
@@ -827,6 +830,7 @@ protected void assertPassed() {
     protected void logMetrics() {
       // Log metrics from the test.
       metricsLogger.logMetric(MetricsLogger.KEY_TEST_NAME, streamName);
+      metricsLogger.logMetric(MetricsLogger.KEY_IS_CDD_LIMITED_RETRY, isCddLimitedRetry);
       metricsLogger.logMetric(MetricsLogger.KEY_FRAMES_DROPPED_COUNT,
           videoCounters.droppedOutputBufferCount);
       metricsLogger.logMetric(MetricsLogger.KEY_MAX_CONSECUTIVE_FRAMES_DROPPED_COUNT,
diff --git a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/LogcatMetricsLogger.java b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/LogcatMetricsLogger.java
index 8de3a197f2..336679a0d4 100644
--- a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/LogcatMetricsLogger.java
+++ b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/LogcatMetricsLogger.java
@@ -43,6 +43,11 @@ public void logMetric(String key, String value) {
     Log.d(tag, key + ": " + value);
   }
 
+  @Override
+  public void logMetric(String key, boolean value) {
+    Log.d(tag, key + ": " + value);
+  }
+
   @Override
   public void close() {
     // Do nothing.
diff --git a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/MetricsLogger.java b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/MetricsLogger.java
index 09f557442b..735e3633f7 100644
--- a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/MetricsLogger.java
+++ b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/MetricsLogger.java
@@ -27,6 +27,7 @@
   String KEY_FRAMES_SKIPPED_COUNT = "frames_skipped_count";
   String KEY_MAX_CONSECUTIVE_FRAMES_DROPPED_COUNT = "maximum_consecutive_frames_dropped_count";
   String KEY_TEST_NAME = "test_name";
+  String KEY_IS_CDD_LIMITED_RETRY = "is_cdd_limited_retry";
 
   /**
    * Logs an int metric provided from a test.
@@ -52,6 +53,14 @@
    */
   void logMetric(String key, String value);
 
+  /**
+   * Logs a boolean metric provided from a test.
+   *
+   * @param key The key of the metric to be logged.
+   * @param value The value of the metric to be logged.
+   */
+  void logMetric(String key, boolean value);
+
   /**
    * Closes the logger.
    */
