diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
index 4c20cd7a82..fb68a36949 100644
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
+++ b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
@@ -204,15 +204,20 @@ public LibvpxVideoRenderer(
   }
 
   @Override
-  public int supportsFormat(Format format) {
+  protected int supportsFormatInternal(
+      @Nullable DrmSessionManager<ExoMediaCrypto> drmSessionManager, Format format) {
     if (!VpxLibrary.isAvailable() || !MimeTypes.VIDEO_VP9.equalsIgnoreCase(format.sampleMimeType)) {
       return FORMAT_UNSUPPORTED_TYPE;
     }
-    if (format.drmInitData == null
-        || VpxLibrary.matchesExpectedExoMediaCryptoType(format.exoMediaCryptoType)) {
-      return FORMAT_HANDLED | ADAPTIVE_SEAMLESS;
+    boolean drmIsSupported =
+        format.drmInitData == null
+            || VpxLibrary.matchesExpectedExoMediaCryptoType(format.exoMediaCryptoType)
+            || (format.exoMediaCryptoType == null
+                && supportsFormatDrm(drmSessionManager, format.drmInitData));
+    if (!drmIsSupported) {
+      return FORMAT_UNSUPPORTED_DRM;
     }
-    return super.supportsFormat(format);
+    return FORMAT_HANDLED | ADAPTIVE_SEAMLESS;
   }
 
   @Override
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/video/SimpleDecoderVideoRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/video/SimpleDecoderVideoRenderer.java
index 2dd43fb6d6..3d18242466 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/video/SimpleDecoderVideoRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/video/SimpleDecoderVideoRenderer.java
@@ -27,6 +27,7 @@
 import com.google.android.exoplayer2.ExoPlaybackException;
 import com.google.android.exoplayer2.Format;
 import com.google.android.exoplayer2.FormatHolder;
+import com.google.android.exoplayer2.RendererCapabilities;
 import com.google.android.exoplayer2.decoder.DecoderCounters;
 import com.google.android.exoplayer2.decoder.DecoderInputBuffer;
 import com.google.android.exoplayer2.decoder.SimpleDecoder;
@@ -155,15 +156,8 @@ protected SimpleDecoderVideoRenderer(
   // BaseRenderer implementation.
 
   @Override
-  public int supportsFormat(Format format) {
-    boolean drmIsSupported =
-        format.drmInitData == null
-            || (format.exoMediaCryptoType == null
-                && supportsFormatDrm(drmSessionManager, format.drmInitData));
-    if (!drmIsSupported) {
-      return FORMAT_UNSUPPORTED_DRM;
-    }
-    return FORMAT_HANDLED | ADAPTIVE_SEAMLESS;
+  public final int supportsFormat(Format format) {
+    return supportsFormatInternal(drmSessionManager, format);
   }
 
   @Override
@@ -526,6 +520,17 @@ protected void updateDroppedBufferCounters(int droppedBufferCount) {
     }
   }
 
+  /**
+   * Returns the extent to which the subclass supports a given format.
+   *
+   * @param drmSessionManager The renderer's {@link DrmSessionManager}.
+   * @param format The format, which has a video {@link Format#sampleMimeType}.
+   * @return The extent to which the subclass supports the format itself.
+   * @see RendererCapabilities#supportsFormat(Format)
+   */
+  protected abstract int supportsFormatInternal(
+      @Nullable DrmSessionManager<ExoMediaCrypto> drmSessionManager, Format format);
+
   /**
    * Creates a decoder for the given format.
    *
