diff --git a/library/src/androidTest/java/com/google/android/exoplayer/MediaFormatTest.java b/library/src/androidTest/java/com/google/android/exoplayer/MediaFormatTest.java
index c3270298a7..04025d2ae4 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/MediaFormatTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/MediaFormatTest.java
@@ -15,16 +15,19 @@
  */
 package com.google.android.exoplayer;
 
+import com.google.android.exoplayer.util.MimeTypes;
 import com.google.android.exoplayer.util.Util;
 
 import android.annotation.SuppressLint;
 import android.annotation.TargetApi;
+import android.os.Parcel;
 
 import junit.framework.TestCase;
 
 import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 /**
@@ -32,31 +35,49 @@
  */
 public final class MediaFormatTest extends TestCase {
 
-  public void testConversionToFrameworkFormat() {
-    if (Util.SDK_INT < 16) {
-      // Test doesn't apply.
-      return;
-    }
-
+  private static final List<byte[]> INIT_DATA;
+  static {
     byte[] initData1 = new byte[] {1, 2, 3};
     byte[] initData2 = new byte[] {4, 5, 6};
     List<byte[]> initData = new ArrayList<>();
     initData.add(initData1);
     initData.add(initData2);
+    INIT_DATA = Collections.unmodifiableList(initData);
+  }
+
+  public void testParcelable() {
+    MediaFormat formatToParcel = new MediaFormat("id", MimeTypes.VIDEO_H264, 1024, 2048,
+        C.UNKNOWN_TIME_US, 1920, 1080, 90, 2, 6, 44100, "und", MediaFormat.OFFSET_SAMPLE_RELATIVE,
+        INIT_DATA, false, 5000, 5001, 5002, 5003, 5004);
+
+    Parcel parcel = Parcel.obtain();
+    formatToParcel.writeToParcel(parcel, 0);
+    parcel.setDataPosition(0);
+
+    MediaFormat formatFromParcel = MediaFormat.CREATOR.createFromParcel(parcel);
+    assertEquals(formatToParcel, formatFromParcel);
+
+    parcel.recycle();
+  }
+
+  public void testConversionToFrameworkFormat() {
+    if (Util.SDK_INT < 16) {
+      // Test doesn't apply.
+      return;
+    }
 
-    testConversionToFrameworkFormatV16(MediaFormat.createVideoFormat(
-        null, "video/xyz", 5000, 102400, 1000L, 1280, 720, initData));
-    testConversionToFrameworkFormatV16(MediaFormat.createVideoFormat(
-        null, "video/xyz", 5000, MediaFormat.NO_VALUE, C.UNKNOWN_TIME_US, 1280, 720, null));
-    testConversionToFrameworkFormatV16(MediaFormat.createAudioFormat(
-        null, "audio/xyz", 500, 128, 1000L, 5, 44100, initData, null));
-    testConversionToFrameworkFormatV16(MediaFormat.createAudioFormat(
-        null, "audio/xyz", 500, MediaFormat.NO_VALUE, C.UNKNOWN_TIME_US, 5, 44100, null, null));
-    testConversionToFrameworkFormatV16(
-        MediaFormat.createTextFormat(null, "text/xyz", MediaFormat.NO_VALUE, 1000L, "eng"));
-    testConversionToFrameworkFormatV16(
-        MediaFormat.createTextFormat(null, "text/xyz", MediaFormat.NO_VALUE, C.UNKNOWN_TIME_US,
-        null));
+    testConversionToFrameworkFormatV16(MediaFormat.createVideoFormat(null, "video/xyz", 5000,
+        102400, 1000L, 1280, 720, INIT_DATA));
+    testConversionToFrameworkFormatV16(MediaFormat.createVideoFormat(null, "video/xyz", 5000,
+        MediaFormat.NO_VALUE, C.UNKNOWN_TIME_US, 1280, 720, null));
+    testConversionToFrameworkFormatV16(MediaFormat.createAudioFormat(null, "audio/xyz", 500, 128,
+        1000L, 5, 44100, INIT_DATA, null));
+    testConversionToFrameworkFormatV16(MediaFormat.createAudioFormat(null, "audio/xyz", 500,
+        MediaFormat.NO_VALUE, C.UNKNOWN_TIME_US, 5, 44100, null, null));
+    testConversionToFrameworkFormatV16(MediaFormat.createTextFormat(null, "text/xyz",
+        MediaFormat.NO_VALUE, 1000L, "eng"));
+    testConversionToFrameworkFormatV16(MediaFormat.createTextFormat(null, "text/xyz",
+        MediaFormat.NO_VALUE, C.UNKNOWN_TIME_US, null));
   }
 
   @SuppressLint("InlinedApi")
diff --git a/library/src/main/java/com/google/android/exoplayer/MediaFormat.java b/library/src/main/java/com/google/android/exoplayer/MediaFormat.java
index 25a91b8b84..986a0a9cfa 100644
--- a/library/src/main/java/com/google/android/exoplayer/MediaFormat.java
+++ b/library/src/main/java/com/google/android/exoplayer/MediaFormat.java
@@ -231,8 +231,8 @@ public static MediaFormat createId3Format() {
     sampleRate = in.readInt();
     language = in.readString();
     subsampleOffsetUs = in.readLong();
-    initializationData = new ArrayList<byte[]>();
-    in.readList(initializationData, List.class.getClassLoader());
+    initializationData = new ArrayList<>();
+    in.readList(initializationData, null);
     adaptive = in.readInt() == 1;
     maxWidth = in.readInt();
     maxHeight = in.readInt();
@@ -454,6 +454,8 @@ private static final void maybeSetIntegerV16(android.media.MediaFormat format, S
     }
   }
 
+  // Parcelable implementation.
+
   @Override
   public int describeContents() {
     return 0;
@@ -484,12 +486,17 @@ public void writeToParcel(Parcel dest, int flags) {
   }
 
   public static final Creator<MediaFormat> CREATOR = new Creator<MediaFormat>() {
+
+    @Override
     public MediaFormat createFromParcel(Parcel in) {
       return new MediaFormat(in);
     }
 
+    @Override
     public MediaFormat[] newArray(int size) {
       return new MediaFormat[size];
     }
+
   };
+
 }
