diff --git a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/HostActivity.java b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/HostActivity.java
index 73d30d99b3..58d3222647 100644
--- a/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/HostActivity.java
+++ b/playbacktests/src/main/java/com/google/android/exoplayer/playbacktests/util/HostActivity.java
@@ -87,7 +87,6 @@
 
   private WakeLock wakeLock;
   private WifiLock wifiLock;
-
   private SurfaceView surfaceView;
   private Handler mainHandler;
   private CheckFinishedRunnable checkFinishedRunnable;
@@ -109,14 +108,20 @@
   public void runTest(final HostedTest hostedTest, long timeoutMs) {
     Assertions.checkArgument(timeoutMs > 0);
     Assertions.checkState(Thread.currentThread() != getMainLooper().getThread());
+
+    Assertions.checkState(this.hostedTest == null);
+    this.hostedTest = Assertions.checkNotNull(hostedTest);
+    hostedTestReleasedCondition = new ConditionVariable();
+    hostedTestInitialized = false;
+    hostedTestFinished = false;
+
     runOnUiThread(new Runnable() {
       @Override
       public void run() {
-        Assertions.checkState(HostActivity.this.hostedTest == null);
-        HostActivity.this.hostedTest = Assertions.checkNotNull(hostedTest);
         maybeInitializeHostedTest();
       }
     });
+
     if (hostedTestReleasedCondition.block(timeoutMs)) {
       if (hostedTestFinished) {
         Log.d(TAG, "Test finished. Checking pass conditions.");
@@ -143,7 +148,6 @@ public void onCreate(Bundle savedInstanceState) {
     surfaceView = (SurfaceView) findViewById(R.id.surface_view);
     surfaceView.getHolder().addCallback(this);
     mainHandler = new Handler();
-    hostedTestReleasedCondition = new ConditionVariable();
     checkFinishedRunnable = new CheckFinishedRunnable();
   }
 
@@ -238,7 +242,7 @@ private void startChecking() {
     public void run() {
       if (hostedTest.isFinished()) {
         hostedTestFinished = true;
-        finish();
+        maybeReleaseHostedTest();
       } else {
         mainHandler.postDelayed(this, CHECK_INTERVAL_MS);
       }
