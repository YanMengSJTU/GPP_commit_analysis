diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadAction.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadAction.java
index 2e087493ef..d6ab21212c 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadAction.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadAction.java
@@ -216,6 +216,10 @@ public int hashCode() {
     return result;
   }
 
+  public abstract DownloadAction pause();
+
+  public abstract DownloadAction resume();
+
   private static Deserializer getDeserializer(Class<?> clazz)
       throws NoSuchFieldException, IllegalAccessException {
     Object value = clazz.getDeclaredField("DESERIALIZER").get(null);
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
index a7e1d9d190..d50fe8d4da 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadManager.java
@@ -716,7 +716,7 @@ private Task getResumedTask() {
     }
 
     private Task withAction(DownloadAction action){
-      Task task = new Task(id, downloadManager, downloaderFactory, action, minRetryCount);
+      Task task = new Task(id, downloadManager, action, minRetryCount);
       task.downloader = downloader;
       task.thread = thread;
       task.error = error;
diff --git a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/offline/DashDownloadAction.java b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/offline/DashDownloadAction.java
index 8fb7a712f8..f932c0e48e 100644
--- a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/offline/DashDownloadAction.java
+++ b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/offline/DashDownloadAction.java
@@ -81,4 +81,13 @@ public DashDownloader createDownloader(DownloaderConstructorHelper constructorHe
     return new DashDownloader(uri, keys, constructorHelper);
   }
 
+  @Override
+  public DownloadAction pause() {
+    return new DashDownloadAction(uri, isRemoveAction, true, data, keys);
+  }
+
+  @Override
+  public DownloadAction resume() {
+    return new DashDownloadAction(uri, isRemoveAction, false, data, keys);
+  }
 }
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/offline/HlsDownloadAction.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/offline/HlsDownloadAction.java
index d1b433a832..3507721878 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/offline/HlsDownloadAction.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/offline/HlsDownloadAction.java
@@ -94,4 +94,13 @@ public HlsDownloader createDownloader(DownloaderConstructorHelper constructorHel
     return new HlsDownloader(uri, keys, constructorHelper);
   }
 
+  @Override
+  public DownloadAction pause() {
+    return new HlsDownloadAction(uri, isRemoveAction, true, data, keys);
+  }
+
+  @Override
+  public DownloadAction resume() {
+    return new HlsDownloadAction(uri, isRemoveAction, false, data, keys);
+  }
 }
diff --git a/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/offline/SsDownloadAction.java b/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/offline/SsDownloadAction.java
index 889662a388..486fb73a42 100644
--- a/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/offline/SsDownloadAction.java
+++ b/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/offline/SsDownloadAction.java
@@ -94,4 +94,13 @@ public SsDownloader createDownloader(DownloaderConstructorHelper constructorHelp
     return new SsDownloader(uri, keys, constructorHelper);
   }
 
+  @Override
+  public DownloadAction pause() {
+    return new SsDownloadAction(uri, isRemoveAction, true, data, keys);
+  }
+
+  @Override
+  public DownloadAction resume() {
+    return new SsDownloadAction(uri, isRemoveAction, false, data, keys);
+  }
 }
