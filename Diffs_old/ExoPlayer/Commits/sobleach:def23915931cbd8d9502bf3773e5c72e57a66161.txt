diff --git a/library/src/main/java/com/google/android/exoplayer/hls/HlsChunkSource.java b/library/src/main/java/com/google/android/exoplayer/hls/HlsChunkSource.java
index 853f6b3c67..82bf7973ca 100644
--- a/library/src/main/java/com/google/android/exoplayer/hls/HlsChunkSource.java
+++ b/library/src/main/java/com/google/android/exoplayer/hls/HlsChunkSource.java
@@ -626,17 +626,11 @@ public int compare(Variant first, Variant second) {
       }
     });
 
-    int defaultVariantIndex = 0;
+    int defaultVariantIndex = computeDefaultVariantIndex(playlist, variants, bandwidthMeter);
     int maxWidth = -1;
     int maxHeight = -1;
 
-    int minOriginalVariantIndex = Integer.MAX_VALUE;
     for (int i = 0; i < variants.length; i++) {
-      int originalVariantIndex = playlist.variants.indexOf(variants[i]);
-      if (originalVariantIndex < minOriginalVariantIndex) {
-        minOriginalVariantIndex = originalVariantIndex;
-        defaultVariantIndex = i;
-      }
       Format variantFormat = variants[i].format;
       maxWidth = Math.max(variantFormat.width, maxWidth);
       maxHeight = Math.max(variantFormat.height, maxHeight);
@@ -653,6 +647,21 @@ public void fixedTrack(HlsMasterPlaylist playlist, Variant variant) {
     tracks.add(new ExposedTrack(variant));
   }
 
+  protected int computeDefaultVariantIndex(HlsMasterPlaylist playlist, Variant[] variants, BandwidthMeter bandwidthMeter) {
+    int defaultVariantIndex = 0;
+    int minOriginalVariantIndex = Integer.MAX_VALUE;
+
+    for (int i = 0; i < variants.length; i++) {
+      int originalVariantIndex = playlist.variants.indexOf(variants[i]);
+      if (originalVariantIndex < minOriginalVariantIndex) {
+        minOriginalVariantIndex = originalVariantIndex;
+        defaultVariantIndex = i;
+      }
+    }
+
+    return  defaultVariantIndex;
+  }
+  
   // Private methods.
 
   private int getNextVariantIndex(TsChunk previousTsChunk, long playbackPositionUs) {
