diff --git a/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java b/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java
index 98ef35d62c..331db85ad6 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java
@@ -969,6 +969,16 @@ public void onAudioDisabled(DecoderCounters counters) {
       audioSessionId = C.AUDIO_SESSION_ID_UNSET;
     }
 
+    @Override
+    public boolean isNeedAudioData() {
+      return false;
+    }
+
+    @Override
+    public void onRenderAudioData(byte[] audioData) {
+
+    }
+
     // TextOutput implementation
 
     @Override
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioRendererEventListener.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioRendererEventListener.java
index 7a4958a61a..c2d121eb99 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioRendererEventListener.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioRendererEventListener.java
@@ -80,6 +80,17 @@ void onAudioDecoderInitialized(String decoderName, long initializedTimestampMs,
    */
   void onAudioDisabled(DecoderCounters counters);
 
+  /**
+   * If return true {@link #onRenderAudioData} will be called, false otherwise
+   */
+  boolean isNeedAudioData();
+
+  /**
+   * Called when the audio sink write data to AudioTrack
+   * @param audioData pcmData actually rendered
+   */
+  void onRenderAudioData(byte[] audioData);
+
   /**
    * Dispatches events to a {@link AudioRendererEventListener}.
    */
@@ -187,6 +198,29 @@ public void run() {
       }
     }
 
+    /**
+     * Invokes {@link AudioRendererEventListener#isNeedAudioData()}.
+     */
+    public boolean isNeedAudioData() {
+      if (listener != null) {
+        return listener.isNeedAudioData();
+      }
+      return false;
+    }
+
+    /**
+     * Invokes {@link AudioRendererEventListener#onRenderAudioData(byte[])}.
+     */
+    public void onRenderAudioData(final byte[] audioData) {
+      if (listener != null) {
+        handler.post(new Runnable() {
+          @Override
+          public void run() {
+            listener.onRenderAudioData(audioData);
+          }
+        });
+      }
+    }
   }
 
 }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioSink.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioSink.java
index 6bb5bf7d8e..744c3fd163 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioSink.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/AudioSink.java
@@ -81,6 +81,16 @@
      */
     void onUnderrun(int bufferSize, long bufferSizeMs, long elapsedSinceLastFeedMs);
 
+    /**
+     * If return true {@link #onRenderAudioData} will be called, false otherwise
+     */
+    boolean isNeedAudioData();
+
+    /**
+     * Called when the audio sink write data to AudioTrack
+     * @param audioData pcmData actually rendered
+     */
+    void onRenderAudioData(byte[] audioData);
   }
 
   /**
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java
index 6d12dc66e8..327c21b24a 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java
@@ -749,6 +749,13 @@ private void writeBuffer(ByteBuffer buffer, long avSyncPresentationTimeUs) throw
       if (bytesToWrite > 0) {
         bytesToWrite = Math.min(bytesRemaining, bytesToWrite);
         bytesWritten = audioTrack.write(preV21OutputBuffer, preV21OutputBufferOffset, bytesToWrite);
+        if (listener != null && listener.isNeedAudioData() && bytesWritten > 0) {
+          byte[] pcmData = new byte[bytesWritten];
+          int originalPosition = buffer.position();
+          buffer.get(pcmData, 0, bytesWritten);
+          buffer.position(originalPosition);
+          listener.onRenderAudioData(pcmData);
+        }
         if (bytesWritten > 0) {
           preV21OutputBufferOffset += bytesWritten;
           buffer.position(buffer.position() + bytesWritten);
@@ -758,8 +765,22 @@ private void writeBuffer(ByteBuffer buffer, long avSyncPresentationTimeUs) throw
       Assertions.checkState(avSyncPresentationTimeUs != C.TIME_UNSET);
       bytesWritten = writeNonBlockingWithAvSyncV21(audioTrack, buffer, bytesRemaining,
           avSyncPresentationTimeUs);
+      // TODO: handle onRenderAudioData
     } else {
-      bytesWritten = writeNonBlockingV21(audioTrack, buffer, bytesRemaining);
+      if (listener != null && listener.isNeedAudioData()) {
+        int originalPosition = buffer.position();
+        bytesWritten = writeNonBlockingV21(audioTrack, buffer, bytesRemaining);
+        if (bytesWritten > 0) {
+          int afterRenderPosition = buffer.position();
+          buffer.position(originalPosition);
+          byte[] pcmData = new byte[bytesWritten];
+          buffer.get(pcmData, 0, bytesWritten);
+          buffer.position(afterRenderPosition);
+          listener.onRenderAudioData(pcmData);
+        }
+      } else {
+        bytesWritten = writeNonBlockingV21(audioTrack, buffer, bytesRemaining);
+      }
     }
 
     lastFeedElapsedRealtimeMs = SystemClock.elapsedRealtime();
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java
index 33a67554a5..476ddacb98 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java
@@ -540,6 +540,15 @@ public void onUnderrun(int bufferSize, long bufferSizeMs, long elapsedSinceLastF
       onAudioTrackUnderrun(bufferSize, bufferSizeMs, elapsedSinceLastFeedMs);
     }
 
+    @Override
+    public boolean isNeedAudioData() {
+      return eventDispatcher.isNeedAudioData();
+    }
+
+    @Override
+    public void onRenderAudioData(byte[] audioData) {
+      eventDispatcher.onRenderAudioData(audioData);
+    }
   }
 
 }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java
index 83c33ee6d7..9a694222eb 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java
@@ -701,6 +701,15 @@ public void onUnderrun(int bufferSize, long bufferSizeMs, long elapsedSinceLastF
       onAudioTrackUnderrun(bufferSize, bufferSizeMs, elapsedSinceLastFeedMs);
     }
 
+    @Override
+    public boolean isNeedAudioData() {
+      return false;
+    }
+
+    @Override
+    public void onRenderAudioData(byte[] audioData) {
+
+    }
   }
 
 }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/util/EventLogger.java b/library/core/src/main/java/com/google/android/exoplayer2/util/EventLogger.java
index d95f387996..e89d78ed48 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/util/EventLogger.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/util/EventLogger.java
@@ -264,7 +264,16 @@ public void onAudioSinkUnderrun(int bufferSize, long bufferSizeMs, long elapsedS
         + elapsedSinceLastFeedMs + "]", null);
   }
 
-  // VideoRendererEventListener
+  @Override
+  public boolean isNeedAudioData() {
+    return false;
+  }
+
+  @Override
+  public void onRenderAudioData(byte[] audioData) {
+
+  }
+// VideoRendererEventListener
 
   @Override
   public void onVideoEnabled(DecoderCounters counters) {
