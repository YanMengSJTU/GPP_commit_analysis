diff --git a/library/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java b/library/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java
index f9dba14e0e..0071a74a77 100644
--- a/library/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java
+++ b/library/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java
@@ -348,10 +348,12 @@ private Extractor buildExtractorByExtension() {
         // Sometimes AAC and H264 streams are declared in TS chunks even though they don't really
         // exist. If we know from the codec attribute that they don't exist, then we can
         // explicitly ignore them even if they're declared.
-        if (!MimeTypes.AUDIO_AAC.equals(MimeTypes.getAudioMediaMimeType(codecs))) {
+        String audioMimeType = MimeTypes.getAudioMediaMimeType(codecs);
+        if (!TextUtils.isEmpty(audioMimeType)&&!MimeTypes.AUDIO_AAC.equals(audioMimeType)) {
           esReaderFactoryFlags |= DefaultTsPayloadReaderFactory.FLAG_IGNORE_AAC_STREAM;
         }
-        if (!MimeTypes.VIDEO_H264.equals(MimeTypes.getVideoMediaMimeType(codecs))) {
+        String videoMimeType = MimeTypes.getVideoMediaMimeType(codecs);
+        if (!TextUtils.isEmpty(videoMimeType)&&!MimeTypes.VIDEO_H264.equals(videoMimeType)) {
           esReaderFactoryFlags |= DefaultTsPayloadReaderFactory.FLAG_IGNORE_H264_STREAM;
         }
       }
