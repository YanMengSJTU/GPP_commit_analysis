diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java
new file mode 100644
index 0000000000..43367db2af
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java
@@ -0,0 +1,140 @@
+package br.rnp.futebol.vocoliseu.pojo;
+
+import android.content.Intent;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+
+/**
+ * Created by camargo on 10/11/16.
+ */
+public class TExperiment {
+
+    private String name;
+    private String filename;
+    private boolean askInfo;
+    private String instruction;
+    private ArrayList<Integer> qosMetrics;
+    private ArrayList<Integer> objectiveQoeMetrics;
+    private ArrayList<TScript> scripts;
+    private final String[] ATTRIBUTES = {"name", "filename", "askinfo", "instruction", "qosMetrics", "objQoeMetrics", "scripts"};
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getFilename() {
+        return filename;
+    }
+
+    public void setFilename(String filename) {
+        this.filename = filename;
+    }
+
+    public boolean isAskInfo() {
+        return askInfo;
+    }
+
+    public void setAskInfo(boolean askInfo) {
+        this.askInfo = askInfo;
+    }
+
+    public String getInstruction() {
+        return instruction;
+    }
+
+    public void setInstruction(String instruction) {
+        this.instruction = instruction;
+    }
+
+    public ArrayList<Integer> getQosMetrics() {
+        return qosMetrics;
+    }
+
+    public void setQosMetrics(ArrayList<Integer> qosMetrics) {
+        this.qosMetrics = qosMetrics;
+    }
+
+    public ArrayList<Integer> getObjectiveQoeMetrics() {
+        return objectiveQoeMetrics;
+    }
+
+    public void setObjectiveQoeMetrics(ArrayList<Integer> objectiveQoeMetrics) {
+        this.objectiveQoeMetrics = objectiveQoeMetrics;
+    }
+
+    public ArrayList<TScript> getScripts() {
+        return scripts;
+    }
+
+    public void setScripts(ArrayList<TScript> scripts) {
+        this.scripts = scripts;
+    }
+
+    public TExperiment fromJson(JSONObject json) {
+        int cont = 0;
+        try {
+            this.name = json.getString(ATTRIBUTES[cont++]);
+            this.filename = json.getString(ATTRIBUTES[cont++]);
+            this.askInfo = json.getBoolean(ATTRIBUTES[cont++]);
+            this.instruction = json.getString(ATTRIBUTES[cont++]);
+
+            JSONArray qos = json.getJSONArray(ATTRIBUTES[cont++]);
+            JSONArray qoe = json.getJSONArray(ATTRIBUTES[cont++]);
+            JSONArray jscripts = json.getJSONArray(ATTRIBUTES[cont]);
+
+            this.qosMetrics = new ArrayList<>();
+            this.objectiveQoeMetrics = new ArrayList<>();
+            this.scripts = new ArrayList<>();
+
+            for (int i = 0; i < qos.length(); i++)
+                this.qosMetrics.add((Integer) qos.get(i));
+
+            for (int i = 0; i < qoe.length(); i++)
+                this.objectiveQoeMetrics.add((Integer) qoe.get(i));
+
+            for (int i = 0; i < jscripts.length(); i++)
+                this.scripts.add(new TScript().fromJson((JSONObject) jscripts.get(i)));
+
+        } catch (JSONException e) {
+            return null;
+        }
+        return this;
+    }
+
+    public JSONObject toJson() {
+        int cont = 0;
+        JSONObject json = new JSONObject();
+        JSONArray qos = new JSONArray(), qoe = new JSONArray(), scripts = new JSONArray();
+        try {
+            json.put(ATTRIBUTES[cont++], this.getName());
+            json.put(ATTRIBUTES[cont++], this.getFilename());
+            json.put(ATTRIBUTES[cont++], this.isAskInfo());
+            json.put(ATTRIBUTES[cont++], this.getInstruction());
+            for (Integer i: this.getQosMetrics())
+                qos.put(i);
+            for (Integer i: this.getObjectiveQoeMetrics())
+                qoe.put(i);
+            for (TScript s: this.getScripts())
+                scripts.put(s.toJson());
+            json.put(ATTRIBUTES[cont++], qos);
+            json.put(ATTRIBUTES[cont++], qoe);
+            json.put(ATTRIBUTES[cont], scripts);
+        } catch (JSONException e) {
+            return null;
+        }
+        return json;
+    }
+
+//    "name", "filename", "askinfo", "instruction", "qosMetrics", "objQoeMetrics", "scripts"
+
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java
new file mode 100644
index 0000000000..431eaca1dc
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java
@@ -0,0 +1,100 @@
+package br.rnp.futebol.vocoliseu.pojo;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+
+/**
+ * Created by camargo on 11/11/16.
+ */
+public class TScript {
+
+    private String video;
+    private String extension;
+    private String address;
+    private boolean useDash;
+    private ArrayList<Integer> subjectiveQoeMetrics;
+    private final String[] ATTRIBUTES = {"video", "extension", "address", "useDash", "subjectiveQoeMetrics"};
+
+    public String getVideo() {
+        return video;
+    }
+
+    public void setVideo(String video) {
+        this.video = video;
+    }
+
+    public String getExtension() {
+        return extension;
+    }
+
+    public void setExtension(String extension) {
+        this.extension = extension;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    public boolean isUseDash() {
+        return useDash;
+    }
+
+    public void setUseDash(boolean useDash) {
+        this.useDash = useDash;
+    }
+
+    public ArrayList<Integer> getSubjectiveQoeMetrics() {
+        return subjectiveQoeMetrics;
+    }
+
+    public void setSubjectiveQoeMetrics(ArrayList<Integer> subjectiveQoeMetrics) {
+        this.subjectiveQoeMetrics = subjectiveQoeMetrics;
+    }
+
+    public TScript fromJson(JSONObject json) {
+        int cont = 0;
+        try {
+            this.video = json.getString(ATTRIBUTES[cont++]);
+            this.extension = json.getString(ATTRIBUTES[cont++]);
+            this.address = json.getString(ATTRIBUTES[cont++]);
+            this.useDash = json.getBoolean(ATTRIBUTES[cont++]);
+
+            this.subjectiveQoeMetrics = new ArrayList<>();
+            JSONArray qoe = json.getJSONArray(ATTRIBUTES[cont]);
+
+            for (int i = 0; i < qoe.length(); i++)
+                subjectiveQoeMetrics.add((Integer) qoe.get(i));
+
+        } catch (JSONException e) {
+            return null;
+        }
+        return this;
+    }
+
+    public JSONObject toJson() {
+        JSONObject json = new JSONObject();
+        JSONArray array = new JSONArray();
+        int cont = 0;
+        try {
+            json.put(ATTRIBUTES[cont++], this.getVideo());
+            json.put(ATTRIBUTES[cont++], this.getExtension());
+            json.put(ATTRIBUTES[cont++], this.getAddress());
+            json.put(ATTRIBUTES[cont++], this.isUseDash());
+            for (Integer i : this.getSubjectiveQoeMetrics())
+                array.put(i);
+            json.put(ATTRIBUTES[cont], array);
+        } catch (JSONException e) {
+            return null;
+        }
+        return json;
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java
index 923c26f660..f3998cdb0c 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/DashboardActivity.java
@@ -20,10 +20,14 @@
 
 import br.rnp.futebol.vocoliseu.dao.ScriptDAO;
 import br.rnp.futebol.vocoliseu.pojo.Script;
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
 import br.rnp.futebol.vocoliseu.util.adapter.ExperimentAdapter;
 import com.google.android.exoplayer2.demo.PlayerActivity;
 import com.google.android.exoplayer2.demo.R;
 
+import org.json.JSONException;
+import org.json.JSONObject;
+
 import java.util.List;
 
 /**
@@ -46,6 +50,13 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.dashboard_activity);
+        String str = "{\"name\": \"exp teste\", \"filename\": \"exptst\",\"askinfo\": false,\"instruction\": \"none\",\"qosMetrics\": [1, 3, 4],\"objQoeMetrics\": [1, 3, 4],\"scripts\": []}";
+        try {
+            JSONObject teste = new JSONObject(str);
+            TExperiment t = new TExperiment().fromJson(teste);
+        } catch (JSONException e){
+
+        }
 //        tvTitle = (TextView) findViewById(R.id.tv_title);
         ibNewExp = (ImageButton) findViewById(R.id.ib_new_experiment);
         lvExps = (ListView) findViewById(R.id.lv_my_experiments);
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/InitialActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/InitialActivity.java
index ba1adce8fe..0d07d6bcca 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/InitialActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/InitialActivity.java
@@ -17,6 +17,10 @@
 import com.google.android.exoplayer2.demo.PlayerActivity;
 import com.google.android.exoplayer2.demo.R;
 
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import br.rnp.futebol.vocoliseu.pojo.TExperiment;
 import br.rnp.futebol.vocoliseu.visual.activity.ExperimentConfigurationControllerActivity;
 
 /**
@@ -32,50 +36,63 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.initial_activity);
+
         init();
+
         checkPerm();
+
         SharedPreferences settings = getSharedPreferences(PREF, 0);
         Toolbar toolbar = (Toolbar) findViewById(R.id.initial_toolbar);
         toolbar.setLogo(R.drawable.ic_launcher);
+
         setSupportActionBar(toolbar);
+
         etAddress.setText(settings.getString("ip", null));
         etFile.setText(settings.getString("file", null));
-        btExamples.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Intent intent = new Intent(getBaseContext(), ExperimentConfigurationControllerActivity.class);
-                startActivity(intent);
-            }
-        });
-        btStart.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                if (etAddress != null)
-                    if (etAddress.getText() != null)
-                        if (!etAddress.getText().toString().trim().equals("")) {
-                            SharedPreferences settings = getSharedPreferences(PREF, 0);
-                            SharedPreferences.Editor editor = settings.edit();
-                            editor.putString("ip", etAddress.getText().toString());
-                            editor.putString("file", etFile.getText().toString());
-                            editor.apply();
+        btExamples.setOnClickListener(new View.OnClickListener()
+
+                                      {
+                                          @Override
+                                          public void onClick(View view) {
+                                              Intent intent = new Intent(getBaseContext(), ExperimentConfigurationControllerActivity.class);
+                                              startActivity(intent);
+                                          }
+                                      }
+
+        );
+        btStart.setOnClickListener(new View.OnClickListener()
+
+                                   {
+                                       @Override
+                                       public void onClick(View view) {
+                                           if (etAddress != null)
+                                               if (etAddress.getText() != null)
+                                                   if (!etAddress.getText().toString().trim().equals("")) {
+                                                       SharedPreferences settings = getSharedPreferences(PREF, 0);
+                                                       SharedPreferences.Editor editor = settings.edit();
+                                                       editor.putString("ip", etAddress.getText().toString());
+                                                       editor.putString("file", etFile.getText().toString());
+                                                       editor.apply();
 //                            String json = "[{\"name\": \"Teste UFRGS\", \"samples\":[{\"name\":\"Teste de video\",\"uri\":\"http://".concat(etAddress.getText().toString()).concat("/manifest.mpd\"}]}]");
-                            String json = "http://".concat(etAddress.getText().toString()).concat(".mpd");
-                            Intent intent = new Intent(getBaseContext(), PlayerActivity.class);
-                            Log.i("jsonjson", json);
+                                                       String json = "http://".concat(etAddress.getText().toString()).concat(".mpd");
+                                                       Intent intent = new Intent(getBaseContext(), PlayerActivity.class);
+                                                       Log.i("jsonjson", json);
 //                            Bundle bld = new Bundle();
 //                            bld.putString("test", json);
 //                            intent.putExtras(bld);
-                            intent.setData(Uri.parse(json));
-                            intent.setAction(PlayerActivity.ACTION_VIEW);
-                            startActivity(intent);
-                        }
+                                                       intent.setData(Uri.parse(json));
+                                                       intent.setAction(PlayerActivity.ACTION_VIEW);
+                                                       startActivity(intent);
+                                                   }
 
-            }
-        });
+                                       }
+                                   }
+
+        );
 
     }
 
-        private void checkPerm() {
+    private void checkPerm() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                 requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
