diff --git a/RELEASENOTES.md b/RELEASENOTES.md
index dc6823e4b2..0084bae589 100644
--- a/RELEASENOTES.md
+++ b/RELEASENOTES.md
@@ -1,5 +1,9 @@
 # Release notes #
 
+### r1.4.1 ###
+
+* HLS: Fix premature playback failures that could occur in some cases.
+
 ### r1.4.0 ###
 
 * Support for extracting Matroska streams (implemented by WebmExtractor).
diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
index d825df355b..18d69151b5 100644
--- a/demo/src/main/AndroidManifest.xml
+++ b/demo/src/main/AndroidManifest.xml
@@ -16,8 +16,8 @@
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.google.android.exoplayer.demo"
-    android:versionCode="1400"
-    android:versionName="1.4.0"
+    android:versionCode="1401"
+    android:versionName="1.4.1"
     android:theme="@style/RootTheme">
 
   <uses-permission android:name="android.permission.INTERNET"/>
diff --git a/demo_misc/webm_sw_decoder/src/main/AndroidManifest.xml b/demo_misc/webm_sw_decoder/src/main/AndroidManifest.xml
index 77da59ed7b..08430b8ee3 100644
--- a/demo_misc/webm_sw_decoder/src/main/AndroidManifest.xml
+++ b/demo_misc/webm_sw_decoder/src/main/AndroidManifest.xml
@@ -17,8 +17,8 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     package="com.google.android.exoplayer.demo.webm"
-    android:versionCode="1400"
-    android:versionName="1.4.0"
+    android:versionCode="1401"
+    android:versionName="1.4.1"
     android:theme="@style/RootTheme">
 
   <uses-permission android:name="android.permission.INTERNET"/>
diff --git a/library/build.gradle b/library/build.gradle
index c63edeef99..ea115c3337 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -84,7 +84,7 @@ publish {
     userOrg = 'google'
     groupId = 'com.google.android.exoplayer'
     artifactId = 'exoplayer'
-    version = 'r1.4.0'
+    version = 'r1.4.1'
     description = 'The ExoPlayer library.'
     website = 'https://github.com/google/ExoPlayer'
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/C.java b/library/src/main/java/com/google/android/exoplayer/C.java
index 933dd55bae..af6e619a6d 100644
--- a/library/src/main/java/com/google/android/exoplayer/C.java
+++ b/library/src/main/java/com/google/android/exoplayer/C.java
@@ -92,8 +92,6 @@
 
   /**
    * A prefix for custom ExoPlayer WebVTT headers.
-   *
-   * @hide
    */
   public static final String WEBVTT_EXO_HEADER = "EXO-HEADER";
 
@@ -101,8 +99,6 @@
    * An element of a custom ExoPlayer WebVTT header. An {@code WEBVTT_OFFSET + value} element can
    * be added to a custom ExoPlayer WebVTT header to specify an offset time (in microseconds) that
    * should be added to the embedded MPEGTS value.
-   *
-   * @hide
    */
   public static final String WEBVTT_EXO_HEADER_OFFSET = "OFFSET:";
 
diff --git a/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java b/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java
index 2b15f7f9f8..1fc0cdcae4 100644
--- a/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java
+++ b/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java
@@ -26,7 +26,7 @@ private ExoPlayerLibraryInfo() {}
   /**
    * The version of the library, expressed as a string.
    */
-  public static final String VERSION = "1.4.0";
+  public static final String VERSION = "1.4.1";
 
   /**
    * The version of the library, expressed as an integer.
@@ -34,7 +34,7 @@ private ExoPlayerLibraryInfo() {}
    * Three digits are used for each component of {@link #VERSION}. For example "1.2.3" has the
    * corresponding integer version 001002003.
    */
-  public static final int VERSION_INT = 001004000;
+  public static final int VERSION_INT = 001004001;
 
   /**
    * Whether the library was compiled with {@link com.google.android.exoplayer.util.Assertions}
diff --git a/library/src/main/java/com/google/android/exoplayer/audio/AudioTrack.java b/library/src/main/java/com/google/android/exoplayer/audio/AudioTrack.java
index 1931e34e01..7addf0bf84 100644
--- a/library/src/main/java/com/google/android/exoplayer/audio/AudioTrack.java
+++ b/library/src/main/java/com/google/android/exoplayer/audio/AudioTrack.java
@@ -88,7 +88,7 @@ public WriteException(int errorCode) {
    * Thrown when {@link android.media.AudioTrack#getTimestamp} returns a spurious timestamp, if
    * {@code AudioTrack#failOnSpuriousAudioTimestamp} is set.
    */
-  private static final class InvalidAudioTrackTimestampException extends RuntimeException {
+  public static final class InvalidAudioTrackTimestampException extends RuntimeException {
 
     public InvalidAudioTrackTimestampException(String message) {
       super(message);
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/MetadataTrackRenderer.java b/library/src/main/java/com/google/android/exoplayer/metadata/MetadataTrackRenderer.java
index 38db32746b..6376f88a61 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/MetadataTrackRenderer.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/MetadataTrackRenderer.java
@@ -131,7 +131,9 @@ protected void doSomeWork(long positionUs, long elapsedRealtimeUs)
     try {
       source.continueBuffering(trackIndex, positionUs);
     } catch (IOException e) {
-      throw new ExoPlaybackException(e);
+      // TODO: This should be propagated, but in the current design propagation may occur too
+      // early. See [Internal b/22291244].
+      // throw new ExoPlaybackException(e);
     }
 
     if (!inputStreamEnded && pendingMetadata == null) {
diff --git a/library/src/main/java/com/google/android/exoplayer/text/eia608/Eia608TrackRenderer.java b/library/src/main/java/com/google/android/exoplayer/text/eia608/Eia608TrackRenderer.java
index 3dd37ab51a..45bf83694c 100644
--- a/library/src/main/java/com/google/android/exoplayer/text/eia608/Eia608TrackRenderer.java
+++ b/library/src/main/java/com/google/android/exoplayer/text/eia608/Eia608TrackRenderer.java
@@ -136,7 +136,9 @@ protected void doSomeWork(long positionUs, long elapsedRealtimeUs) throws ExoPla
     try {
       source.continueBuffering(trackIndex, positionUs);
     } catch (IOException e) {
-      throw new ExoPlaybackException(e);
+      // TODO: This should be propagated, but in the current design propagation may occur too
+      // early. See [Internal b/22291244].
+      // throw new ExoPlaybackException(e);
     }
 
     if (isSamplePending()) {
