diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java
index cb7963f8fa..173c02cfca 100644
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java
+++ b/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/LibvpxVideoTrackRenderer.java
@@ -189,6 +189,13 @@ public static String getLibvpxVersion() {
     return isLibvpxAvailable() ? VpxDecoder.getLibvpxVersion() : null;
   }
 
+  /**
+   * Returns the configuration string with which the underlying libvpx library was built.
+   */
+  public static String getLibvpxConfig() {
+    return isLibvpxAvailable() ? VpxDecoder.getLibvpxConfig() : null;
+  }
+
   @Override
   protected boolean handlesTrack(MediaFormat mediaFormat) {
     return MimeTypes.VIDEO_VP9.equalsIgnoreCase(mediaFormat.mimeType);
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/VpxDecoder.java b/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/VpxDecoder.java
index d645fde877..f4c936b018 100644
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/VpxDecoder.java
+++ b/extensions/vp9/src/main/java/com/google/android/exoplayer/ext/vp9/VpxDecoder.java
@@ -52,6 +52,11 @@
    */
   public static native String getLibvpxVersion();
 
+  /**
+   * Returns the configuration string with which the underlying libvpx library was built.
+   */
+  public static native String getLibvpxConfig();
+
   private final long vpxDecContext;
 
   private volatile int outputMode;
diff --git a/extensions/vp9/src/main/jni/vpx_jni.cc b/extensions/vp9/src/main/jni/vpx_jni.cc
index a3abe24399..247a7d6743 100644
--- a/extensions/vp9/src/main/jni/vpx_jni.cc
+++ b/extensions/vp9/src/main/jni/vpx_jni.cc
@@ -170,6 +170,10 @@ FUNC(jstring, getLibvpxVersion) {
   return env->NewStringUTF(vpx_codec_version_str());
 }
 
+FUNC(jstring, getLibvpxConfig) {
+  return env->NewStringUTF(vpx_codec_build_config());
+}
+
 FUNC(jstring, vpxGetErrorMessage, jlong jContext) {
   vpx_codec_ctx_t* const context = reinterpret_cast<vpx_codec_ctx_t*>(jContext);
   return env->NewStringUTF(vpx_codec_error(context));
