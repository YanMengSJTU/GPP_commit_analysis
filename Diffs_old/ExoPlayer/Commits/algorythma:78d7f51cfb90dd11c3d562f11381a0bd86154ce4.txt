diff --git a/extensions/rtmp/build.gradle b/extensions/rtmp/build.gradle
index 97389b93f0..a8210084c7 100644
--- a/extensions/rtmp/build.gradle
+++ b/extensions/rtmp/build.gradle
@@ -25,8 +25,8 @@ android {
 }
 
 dependencies {
-//    implementation project(modulePrefix + 'library-core')
-    implementation project(':library-core')
+    implementation project(modulePrefix + 'library-core')
+//    implementation project(':library-core')
 //    implementation 'net.butterflytv.utils:rtmp-client:3.0.1'
 //    implementation project(':rtmp-client')
     implementation 'com.github.algorythma:LibRtmp-Client-for-Android:83e0b64918'
diff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java
index de623b59c9..b7e35efb88 100644
--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java
+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java
@@ -142,6 +142,14 @@ public final long open(DataSpec dataSpec) throws IOException {
     }
   }
 
+  @Override
+  public final int read(byte[] buffer, int offset, int readLength, boolean [] isMarker) throws IOException {
+    return 0;
+  }
+
+  @Override
+  public void markerToastDisplay () {}
+
   @Override
   public final int read(byte[] buffer, int offset, int readLength) throws IOException {
     Assertions.checkState(opened);
diff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorInput.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorInput.java
index 552827c8da..c9be195398 100644
--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorInput.java
+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeExtractorInput.java
@@ -90,6 +90,9 @@ public void setPosition(int position) {
     peekPosition = position;
   }
 
+  @Override
+  public void markerToastDisplay () {}
+
   @Override
   public int read(byte[] target, int offset, int length) throws IOException {
     checkIOException(readPosition, failedReadPositions);
@@ -97,6 +100,9 @@ public int read(byte[] target, int offset, int length) throws IOException {
     return readFullyInternal(target, offset, length, true) ? length : C.RESULT_END_OF_INPUT;
   }
 
+  @Override
+  public void readFully(byte[] target, int offset, int length, boolean[] isMarker) {}
+
   @Override
   public boolean readFully(byte[] target, int offset, int length, boolean allowEndOfInput)
       throws IOException {
@@ -104,6 +110,11 @@ public boolean readFully(byte[] target, int offset, int length, boolean allowEnd
     return readFullyInternal(target, offset, length, allowEndOfInput);
   }
 
+  @Override
+  public boolean readFully(byte[] target, int offset, int length, boolean allowEndOfInput, boolean[] isMakrer) {
+    return false;
+  }
+
   @Override
   public void readFully(byte[] target, int offset, int length) throws IOException {
     readFully(target, offset, length, false);
diff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeTrackOutput.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeTrackOutput.java
index 0affc379dc..bb3c3b49c1 100644
--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeTrackOutput.java
+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeTrackOutput.java
@@ -90,7 +90,7 @@ public void sampleData(ParsableByteArray data, int length) {
   }
 
   @Override
-  public void sampleData(ParsableByteArray data, int length, boolean isMarker) {
+  public void sampleData(ExtractorInput input, ParsableByteArray data, int length, boolean isMarker) {
     byte[] newData = new byte[length];
     data.readBytes(newData, 0, length);
     sampleData = TestUtil.joinByteArrays(sampleData, newData);
