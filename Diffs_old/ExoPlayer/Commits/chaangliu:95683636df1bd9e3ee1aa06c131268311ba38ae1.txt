diff --git a/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index 06ac089783..d1b491cd9d 100644
--- a/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -478,7 +478,8 @@ public void onRenderedFirstFrame() {
             player.addAnalyticsListener(new EventLogger(trackSelector));
             playerView.setPlayer(player);
             playerView.setPlaybackPreparer(this);
-            playerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_FIXED_HEIGHT);
+            playerView.setCropRatio(0.2);
+            playerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_ADDITIONAL_ZOOM);
             debugViewHelper = new DebugTextViewHelper(player, debugTextView);
             debugViewHelper.start();
 
diff --git a/demos/main/src/main/res/layout/exo_simple_player_view.xml b/demos/main/src/main/res/layout/exo_simple_player_view.xml
deleted file mode 100644
index 052e74a8fe..0000000000
--- a/demos/main/src/main/res/layout/exo_simple_player_view.xml
+++ /dev/null
@@ -1,90 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-
-    <com.google.android.exoplayer2.ui.AspectRatioFrameLayout
-        android:id="@id/exo_content_frame"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_gravity="center">
-
-        <!-- Video surface will be inserted as the first child of the content frame. -->
-
-        <View
-            android:id="@id/exo_shutter"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:background="@android:color/black" />
-
-        <ImageView
-            android:id="@id/exo_artwork"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:scaleType="fitXY" />
-
-        <com.google.android.exoplayer2.ui.SubtitleView
-            android:id="@id/exo_subtitles"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent" />
-
-        <ProgressBar
-            android:id="@id/exo_buffering"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:indeterminate="true" />
-
-        <TextView
-            android:id="@id/exo_error_message"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_gravity="center"
-            android:background="@color/exo_error_message_background_color"
-            android:gravity="center"
-            android:padding="16dp" />
-
-    </com.google.android.exoplayer2.ui.AspectRatioFrameLayout>
-
-    <FrameLayout
-        android:id="@id/exo_ad_overlay"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <FrameLayout
-        android:id="@id/exo_overlay"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <!--这边放exo_player_control_view.xml-->
-    <!--<View android:id="@id/exo_controller_placeholder"-->
-    <View
-        android:id="@id/exo_controller_placeholder"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <!--用controller_layout_id自定义controllerview-->
-    <!--app:controller_layout_id="@layout/small_video_exo_playback_control_view"-->
-
-    <!--<com.google.android.exoplayer2.ui.PlayerControlView-->
-        <!--android:id="@+id/exo_controller"-->
-        <!--android:layout_width="match_parent"-->
-        <!--android:layout_height="match_parent"-->
-        <!--android:visibility="gone"-->
-        <!--app:controller_layout_id="@layout/small_video_exo_playback_control_view"-->
-        <!--app:repeat_toggle_modes="all|one"-->
-        <!--app:show_timeout="-1" />-->
-
-</merge>
diff --git a/demos/main/src/main/res/layout/small_video_exo_player_view.xml b/demos/main/src/main/res/layout/small_video_exo_player_view.xml
index d58e5f3858..e2021158ff 100644
--- a/demos/main/src/main/res/layout/small_video_exo_player_view.xml
+++ b/demos/main/src/main/res/layout/small_video_exo_player_view.xml
@@ -19,7 +19,10 @@
         android:id="@id/exo_content_frame"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:layout_gravity="center">
+        android:layout_gravity="center_horizontal"
+        android:background="#ff0000"
+        android:paddingTop="0dp">
+        <!--android:layout_gravity="center"-->
 
         <!-- Video surface will be inserted as the first child of the content frame. -->
 
diff --git a/library/ui/src/main/java/com/google/android/exoplayer2/ui/AspectRatioFrameLayout.java b/library/ui/src/main/java/com/google/android/exoplayer2/ui/AspectRatioFrameLayout.java
index 0d4c6a4038..bfbb32b20f 100644
--- a/library/ui/src/main/java/com/google/android/exoplayer2/ui/AspectRatioFrameLayout.java
+++ b/library/ui/src/main/java/com/google/android/exoplayer2/ui/AspectRatioFrameLayout.java
@@ -58,7 +58,8 @@ void onAspectRatioUpdated(
     RESIZE_MODE_FIXED_WIDTH,
     RESIZE_MODE_FIXED_HEIGHT,
     RESIZE_MODE_FILL,
-    RESIZE_MODE_ZOOM
+    RESIZE_MODE_ZOOM,
+    RESIZE_MODE_ADDITIONAL_ZOOM
   })
   public @interface ResizeMode {}
 
@@ -82,6 +83,10 @@ void onAspectRatioUpdated(
    * Either the width or height is increased to obtain the desired aspect ratio.
    */
   public static final int RESIZE_MODE_ZOOM = 4;
+  /**
+   * Based on MODE_ZOOM, increase eht width or height for a bigger percentages. 放大视频到指定限度。
+   */
+  public static final int RESIZE_MODE_ADDITIONAL_ZOOM = 5;
   // LINT.ThenChange(../../../../../../res/values/attrs.xml)
 
   /**
@@ -102,6 +107,15 @@ void onAspectRatioUpdated(
   private float videoAspectRatio;
   private @ResizeMode int resizeMode;
 
+  /**
+    * 裁掉的部分（比如字幕）占视频高度的百分比
+    */
+  private double cropRatio = 0.2;
+  /**
+   * 是否拉伸到精确的cropRatio比例
+   */
+  private boolean keepExact = true;
+
   public AspectRatioFrameLayout(Context context) {
     this(context, null);
   }
@@ -133,6 +147,10 @@ public void setAspectRatio(float widthHeightRatio) {
     }
   }
 
+  public void setCropRatio(double ratio){
+    cropRatio = ratio >= 0 && ratio < 1 ? ratio : 0.2;
+  }
+
   /**
    * Sets the {@link AspectRatioListener}.
    *
@@ -170,35 +188,65 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     int width = getMeasuredWidth();
     int height = getMeasuredHeight();
     float viewAspectRatio = (float) width / height;
+    // aspectDeformation < 0 代表视频的宽高比 < FrameLayout宽高比
     float aspectDeformation = videoAspectRatio / viewAspectRatio - 1;
-    if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {
-      // We're within the allowed tolerance.
-      aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio, viewAspectRatio, false);
-      return;
-    }
+//    if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {
+//      // We're within the allowed tolerance.
+//      aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio, viewAspectRatio, false);
+//      return;
+//    }
 
+    // 这里改变的是frameLayout的width和height，而PlayerView是match_parent的，会随着frameLayout的尺寸而变化(*这里的理解可能有误，并不是PlayerView随着FrameLayout变化，而是可播放区域在变)
     switch (resizeMode) {
       case RESIZE_MODE_FIXED_WIDTH:
         height = (int) (width / videoAspectRatio);
         break;
       case RESIZE_MODE_FIXED_HEIGHT:
+        // 视频的height随着view的height走，宽度重新计算，可能increase或者decrease；
+        // viewWidth/viewHeight = videoWidth/videoHeight =>viewWidth/videoWidth = viewHeight/videoHeight；也就是viewWidth在
         width = (int) (height * videoAspectRatio);
+//        height =  height * 2;
         break;
-      case RESIZE_MODE_ZOOM:
+      case RESIZE_MODE_ZOOM://frameLayout的宽或高增加
+        // 视频的宽高比 > FrameLayout宽高比。比如2:1超宽屏。为了保持比例，width需要增加，大于屏幕宽度。
         if (aspectDeformation > 0) {
           width = (int) (height * videoAspectRatio);
         } else {
           height = (int) (width / videoAspectRatio);
         }
         break;
-      case RESIZE_MODE_FIT:
+      case RESIZE_MODE_FIT: //frameLayout的宽或高减小; 注意此时PlayerView会保持初始尺寸(但是内容的部分会fit FrameLayout)
         if (aspectDeformation > 0) {
           height = (int) (width / videoAspectRatio);
         } else {
           width = (int) (height * videoAspectRatio);
         }
+      case RESIZE_MODE_ADDITIONAL_ZOOM: //裁掉底边，默认裁掉高度的1/4。首先肯定是基于ZOOM，
+          // 视频的宽高比 >= FrameLayout宽高比。比如2:1超宽屏。为了保持比例，height先增加，然后width增加，大于屏幕宽度。
+          if (aspectDeformation >= 0) {
+              height = (int)(height * (1 + cropRatio));
+              width = (int) (height * videoAspectRatio);
+          } else {
+              // 比如4:3的视频，width会随着frameLayout增加，那么高度也需要增加以便保持比例（否则就扁了）；
+              // 对于4:3(16:12)的视频，扩大到16:9的时候，底部默认有(12-9)/12 = 0.25看不见，已经超出了0.2的默认条件（要问一下产品，此时是否要改为缩小宽度，取消满屏）
+              // 对于16:10的视频，扩大到16:10的时候，底部有1/12看不见，不足0.2，需要继续扩大高度
+              int newHeight = (int) (width / videoAspectRatio);
+              if ((newHeight - height)/height < cropRatio){
+                  if(keepExact){
+                    height = (int)(height *(1+ cropRatio));
+                    width = (int) (height * videoAspectRatio);
+                  }else {
+                    height = (int) (width / videoAspectRatio);
+                  }
+              }else {
+//                if (keepExact){
+//                  width =
+//                }
+                  height = newHeight;
+              }
+          }
         break;
-      case RESIZE_MODE_FILL:
+      case RESIZE_MODE_FILL://什么也不做，那么可播放区域跟随FrameLayout的Width和Height
       default:
         // Ignore target aspect ratio
         break;
diff --git a/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerView.java b/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerView.java
index 278a73ef66..cf2d908fe6 100644
--- a/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerView.java
+++ b/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerView.java
@@ -598,6 +598,11 @@ public void setResizeMode(@ResizeMode int resizeMode) {
     contentFrame.setResizeMode(resizeMode);
   }
 
+  public void setCropRatio(double cropRatio) {
+    Assertions.checkState(contentFrame != null);
+    contentFrame.setCropRatio(cropRatio);
+  }
+
   /** Returns the {@link ResizeMode}. */
   public @ResizeMode int getResizeMode() {
     Assertions.checkState(contentFrame != null);
