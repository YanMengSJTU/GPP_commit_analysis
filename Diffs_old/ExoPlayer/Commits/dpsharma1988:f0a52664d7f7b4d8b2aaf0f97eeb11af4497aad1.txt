diff --git a/protocol/src/main/java/com/vocabimate/protocol/ILicenceTo.java b/protocol/src/main/java/com/vocabimate/protocol/ILicenceTo.java
index 95343e2daf..0d4df813a8 100644
--- a/protocol/src/main/java/com/vocabimate/protocol/ILicenceTo.java
+++ b/protocol/src/main/java/com/vocabimate/protocol/ILicenceTo.java
@@ -17,7 +17,7 @@
     String getLocalEncryptionKey();
     String getLocalEncryptionIV();
     // this could be null
-    ILicenceContract getLicence();
+    ILicenceWrapperContract getLicenceWrapperContract();
     int getVideoId();
     Class<? extends ILicenceWrapperContract> getLicenceResponseModelClass();
 
diff --git a/protocol/src/main/java/com/vocabimate/protocol/KeyHelper.java b/protocol/src/main/java/com/vocabimate/protocol/KeyHelper.java
index 633e45ddb4..620dcf2ca3 100644
--- a/protocol/src/main/java/com/vocabimate/protocol/KeyHelper.java
+++ b/protocol/src/main/java/com/vocabimate/protocol/KeyHelper.java
@@ -12,7 +12,7 @@
     private String licenceUrl;
     private String localEncryptionKey;
     private String localEncryptionIV;
-    private ILicenceContract licenceContract;
+    private ILicenceWrapperContract licenceWrapperContract;
 
     protected KeyHelper(String m3u8Path, String token, String licenceUrl, String localEncryptionKey, String localEncryptionIV) {
         this.m3u8Path = m3u8Path;
@@ -22,13 +22,13 @@ protected KeyHelper(String m3u8Path, String token, String licenceUrl, String loc
         this.localEncryptionIV = localEncryptionIV;
     }
 
-    /*package*/ void setLicence(ILicenceContract licence) {
-        this.licenceContract = licence;
+    @Override
+    public ILicenceWrapperContract getLicenceWrapperContract() {
+        return licenceWrapperContract;
     }
 
-    @Override
-    public ILicenceContract getLicence() {
-        return this.licenceContract;
+    /*package*/ void setLicenceWrapperContract(ILicenceWrapperContract licenceWrapperContract) {
+        this.licenceWrapperContract = licenceWrapperContract;
     }
 
     @Override
diff --git a/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java b/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java
index b72d41a890..89ad00f893 100644
--- a/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java
+++ b/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java
@@ -68,21 +68,20 @@ public void connect() throws IOException {
             ILicenceWrapperContract licenceWrapper = new Gson().fromJson(result, licenceTo.getLicenceResponseModelClass());
             InputStream stream;
             if (licenceWrapper != null) {
-                ILicenceContract licenseFile = licenceWrapper.getLicenseFile();
-                if(licenseFile == null){
-                    connected = false;
-                    responseCode = 500;
-                    return;
-                }
                 if(licenceTo instanceof KeyHelper) {
-                    ((KeyHelper)licenceTo).setLicence(licenseFile);
+                    ((KeyHelper)licenceTo).setLicenceWrapperContract(licenceWrapper);
                 }
-                if(licenseFile.getDecryptionKey() != null) {
+                ILicenceContract licenseFile = licenceWrapper.getLicenseFile();
+                if(licenseFile != null && licenseFile.getDecryptionKey() != null) {
                     TokenDecryptionHelper tokenDecryptionHelper = new TokenDecryptionHelper(token, licenseFile.getDecryptionKey());
                     byte[] decrypt = tokenDecryptionHelper.decrypt();
                     stream = new ByteArrayInputStream(decrypt);
                     vocAbsInputStream.setInputStream(stream);
                 }
+            } else {
+                connected = false;
+                responseCode = 500;
+                return;
             }
         }
         connected = true;
