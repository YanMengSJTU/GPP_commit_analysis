diff --git a/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylistParserTest.java b/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylistParserTest.java
index e4edb07926..c8c8d5a0e0 100644
--- a/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylistParserTest.java
+++ b/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylistParserTest.java
@@ -42,17 +42,17 @@ public void testParseMediaPlaylist() {
         + "#EXT-X-DISCONTINUITY-SEQUENCE:4\n"
         + "#EXT-X-ALLOW-CACHE:YES\n"
         + "\n"
-        + "#EXTINF:7.975,\n"
+        + "#EXTINF:7.975,This is a human-readable title string.\n"
         + "#EXT-X-BYTERANGE:51370@0\n"
         + "https://priv.example.com/fileSequence2679.ts\n"
         + "\n"
         + "#EXT-X-KEY:METHOD=AES-128,URI=\"https://priv.example.com/key.php?r=2680\",IV=0x1566B\n"
-        + "#EXTINF:7.975,\n"
+        + "#EXTINF:7.975,Title with a url https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.1\n"
         + "#EXT-X-BYTERANGE:51501@2147483648\n"
         + "https://priv.example.com/fileSequence2680.ts\n"
         + "\n"
         + "#EXT-X-KEY:METHOD=NONE\n"
-        + "#EXTINF:7.941,\n"
+        + "#EXTINF:7.941,Title with a uuid 123e4567-e89b-12d3-a456-426655440000\n"
         + "#EXT-X-BYTERANGE:51501\n" // @2147535149
         + "https://priv.example.com/fileSequence2681.ts\n"
         + "\n"
@@ -85,6 +85,7 @@ public void testParseMediaPlaylist() {
       Segment segment = segments.get(0);
       assertEquals(4, mediaPlaylist.discontinuitySequence + segment.relativeDiscontinuitySequence);
       assertEquals(7975000, segment.durationUs);
+      assertEquals("This is a human-readable title string.", segment.title);
       assertNull(segment.fullSegmentEncryptionKeyUri);
       assertNull(segment.encryptionIV);
       assertEquals(51370, segment.byterangeLength);
@@ -94,6 +95,7 @@ public void testParseMediaPlaylist() {
       segment = segments.get(1);
       assertEquals(0, segment.relativeDiscontinuitySequence);
       assertEquals(7975000, segment.durationUs);
+      assertEquals("Title with a url https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.1", segment.title);
       assertEquals("https://priv.example.com/key.php?r=2680", segment.fullSegmentEncryptionKeyUri);
       assertEquals("0x1566B", segment.encryptionIV);
       assertEquals(51501, segment.byterangeLength);
@@ -103,6 +105,7 @@ public void testParseMediaPlaylist() {
       segment = segments.get(2);
       assertEquals(0, segment.relativeDiscontinuitySequence);
       assertEquals(7941000, segment.durationUs);
+      assertEquals("Title with a uuid 123e4567-e89b-12d3-a456-426655440000", segment.title);
       assertNull(segment.fullSegmentEncryptionKeyUri);
       assertEquals(null, segment.encryptionIV);
       assertEquals(51501, segment.byterangeLength);
@@ -112,6 +115,7 @@ public void testParseMediaPlaylist() {
       segment = segments.get(3);
       assertEquals(1, segment.relativeDiscontinuitySequence);
       assertEquals(7975000, segment.durationUs);
+      assertEquals(null, segment.title);
       assertEquals("https://priv.example.com/key.php?r=2682", segment.fullSegmentEncryptionKeyUri);
       // 0xA7A == 2682.
       assertNotNull(segment.encryptionIV);
@@ -123,6 +127,7 @@ public void testParseMediaPlaylist() {
       segment = segments.get(4);
       assertEquals(1, segment.relativeDiscontinuitySequence);
       assertEquals(7975000, segment.durationUs);
+      assertEquals(null, segment.title);
       assertEquals("https://priv.example.com/key.php?r=2682", segment.fullSegmentEncryptionKeyUri);
       // 0xA7B == 2683.
       assertNotNull(segment.encryptionIV);
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
index 1f44607f98..dedb224d86 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylist.java
@@ -41,6 +41,10 @@
      * The duration of the segment in microseconds, as defined by #EXTINF.
      */
     public final long durationUs;
+    /**
+     * The human-readable title of the segment as defined by #EXTINF.
+     */
+    public final String title;
     /**
      * The number of #EXT-X-DISCONTINUITY tags in the playlist before the segment.
      */
@@ -70,12 +74,13 @@
     public final long byterangeLength;
 
     public Segment(String uri, long byterangeOffset, long byterangeLength) {
-      this(uri, 0, -1, C.TIME_UNSET, null, null, byterangeOffset, byterangeLength);
+      this(uri, 0, null, -1, C.TIME_UNSET, null, null, byterangeOffset, byterangeLength);
     }
 
     /**
      * @param url See {@link #url}.
      * @param durationUs See {@link #durationUs}.
+     * @param title See {@link #title}.
      * @param relativeDiscontinuitySequence See {@link #relativeDiscontinuitySequence}.
      * @param relativeStartTimeUs See {@link #relativeStartTimeUs}.
      * @param fullSegmentEncryptionKeyUri See {@link #fullSegmentEncryptionKeyUri}.
@@ -83,11 +88,12 @@ public Segment(String uri, long byterangeOffset, long byterangeLength) {
      * @param byterangeOffset See {@link #byterangeOffset}.
      * @param byterangeLength See {@link #byterangeLength}.
      */
-    public Segment(String url, long durationUs, int relativeDiscontinuitySequence,
+    public Segment(String url, long durationUs, String title, int relativeDiscontinuitySequence,
         long relativeStartTimeUs, String fullSegmentEncryptionKeyUri,
         String encryptionIV, long byterangeOffset, long byterangeLength) {
       this.url = url;
       this.durationUs = durationUs;
+      this.title = title;
       this.relativeDiscontinuitySequence = relativeDiscontinuitySequence;
       this.relativeStartTimeUs = relativeStartTimeUs;
       this.fullSegmentEncryptionKeyUri = fullSegmentEncryptionKeyUri;
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
index 90644125b1..86ff02fa69 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
@@ -100,7 +100,9 @@
   private static final Pattern REGEX_MEDIA_SEQUENCE = Pattern.compile(TAG_MEDIA_SEQUENCE
       + ":(\\d+)\\b");
   private static final Pattern REGEX_MEDIA_DURATION = Pattern.compile(TAG_MEDIA_DURATION
-      + ":([\\d\\.]+)\\b");
+          + ":([\\d\\.]+)\\b");
+  private static final Pattern REGEX_MEDIA_TITLE = Pattern.compile(TAG_MEDIA_DURATION
+          + ":[\\d\\.]+\\b,(.+)?");
   private static final Pattern REGEX_TIME_OFFSET = Pattern.compile("TIME-OFFSET=(-?[\\d\\.]+)\\b");
   private static final Pattern REGEX_BYTERANGE = Pattern.compile(TAG_BYTERANGE
       + ":(\\d+(?:@\\d+)?)\\b");
@@ -315,6 +317,7 @@ private static HlsMediaPlaylist parseMediaPlaylist(LineIterator iterator, String
     List<String> tags = new ArrayList<>();
 
     long segmentDurationUs = 0;
+    String segmentTitle = null;
     boolean hasDiscontinuitySequence = false;
     int playlistDiscontinuitySequence = 0;
     int relativeDiscontinuitySequence = 0;
@@ -368,7 +371,8 @@ private static HlsMediaPlaylist parseMediaPlaylist(LineIterator iterator, String
         version = parseIntAttr(line, REGEX_VERSION);
       } else if (line.startsWith(TAG_MEDIA_DURATION)) {
         segmentDurationUs =
-            (long) (parseDoubleAttr(line, REGEX_MEDIA_DURATION) * C.MICROS_PER_SECOND);
+                (long) (parseDoubleAttr(line, REGEX_MEDIA_DURATION) * C.MICROS_PER_SECOND);
+        segmentTitle = parseOptionalStringAttr(line, REGEX_MEDIA_TITLE);
       } else if (line.startsWith(TAG_KEY)) {
         String method = parseOptionalStringAttr(line, REGEX_METHOD);
         String keyFormat = parseOptionalStringAttr(line, REGEX_KEYFORMAT);
@@ -423,11 +427,12 @@ private static HlsMediaPlaylist parseMediaPlaylist(LineIterator iterator, String
         if (segmentByteRangeLength == C.LENGTH_UNSET) {
           segmentByteRangeOffset = 0;
         }
-        segments.add(new Segment(line, segmentDurationUs, relativeDiscontinuitySequence,
+        segments.add(new Segment(line, segmentDurationUs, segmentTitle, relativeDiscontinuitySequence,
             segmentStartTimeUs, encryptionKeyUri, segmentEncryptionIV,
             segmentByteRangeOffset, segmentByteRangeLength));
         segmentStartTimeUs += segmentDurationUs;
         segmentDurationUs = 0;
+        segmentTitle = null;
         if (segmentByteRangeLength != C.LENGTH_UNSET) {
           segmentByteRangeOffset += segmentByteRangeLength;
         }
