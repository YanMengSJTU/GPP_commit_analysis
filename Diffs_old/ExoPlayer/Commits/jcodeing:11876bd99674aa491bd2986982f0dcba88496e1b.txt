diff --git a/extensions/README.md b/extensions/README.md
deleted file mode 100644
index bf0effb358..0000000000
--- a/extensions/README.md
+++ /dev/null
@@ -1,5 +0,0 @@
-# ExoPlayer extensions #
-
-ExoPlayer extensions are modules that depend on external libraries to provide
-additional functionality. Browse the individual extensions and their READMEs to
-learn more.
diff --git a/extensions/cronet/README.md b/extensions/cronet/README.md
deleted file mode 100644
index 66da774978..0000000000
--- a/extensions/cronet/README.md
+++ /dev/null
@@ -1,60 +0,0 @@
-# ExoPlayer Cronet extension #
-
-The Cronet extension is an [HttpDataSource][] implementation using [Cronet][].
-
-[HttpDataSource]: https://google.github.io/ExoPlayer/doc/reference/com/google/android/exoplayer2/upstream/HttpDataSource.html
-[Cronet]: https://chromium.googlesource.com/chromium/src/+/master/components/cronet?autodive=0%2F%2F
-
-## Build instructions ##
-
-To use this extension you need to clone the ExoPlayer repository and depend on
-its modules locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][]. In addition, it's necessary to get the Cronet libraries
-and enable the extension:
-
-1. Find the latest Cronet release [here][] and navigate to its `Release/cronet`
-   directory
-1. Download `cronet_api.jar`, `cronet_impl_common_java.jar`,
-   `cronet_impl_native_java.jar` and the `libs` directory
-1. Copy the three jar files into the `libs` directory of this extension
-1. Copy the content of the downloaded `libs` directory into the `jniLibs`
-   directory of this extension
-
-* In your `settings.gradle` file, add
-  `gradle.ext.exoplayerIncludeCronetExtension = true` before the line that
-  applies `core_settings.gradle`.
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-[here]: https://console.cloud.google.com/storage/browser/chromium-cronet/android
-
-## Using the extension ##
-
-ExoPlayer requests data through `DataSource` instances. These instances are
-either instantiated and injected from application code, or obtained from
-instances of `DataSource.Factory` that are instantiated and injected from
-application code.
-
-If your application only needs to play http(s) content, using the Cronet
-extension is as simple as updating any `DataSource`s and `DataSource.Factory`
-instantiations in your application code to use `CronetDataSource` and
-`CronetDataSourceFactory` respectively. If your application also needs to play
-non-http(s) content such as local files, use
-```
-new DefaultDataSource(
-    ...
-    new CronetDataSource(...) /* baseDataSource argument */);
-```
-and
-```
-new DefaultDataSourceFactory(
-    ...
-    new CronetDataSourceFactory(...) /* baseDataSourceFactory argument */);
-```
-respectively.
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.cronet.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/cronet/build.gradle b/extensions/cronet/build.gradle
deleted file mode 100644
index ab37276e3b..0000000000
--- a/extensions/cronet/build.gradle
+++ /dev/null
@@ -1,42 +0,0 @@
-// Copyright (C) 2014 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion project.ext.minSdkVersion
-        targetSdkVersion project.ext.targetSdkVersion
-        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
-    }
-
-    sourceSets.main {
-        jniLibs.srcDirs = ['jniLibs']
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-    compile files('libs/cronet_api.jar')
-    compile files('libs/cronet_impl_common_java.jar')
-    compile files('libs/cronet_impl_native_java.jar')
-    androidTestCompile project(modulePrefix + 'library')
-    androidTestCompile 'com.google.dexmaker:dexmaker:' + dexmakerVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:' + dexmakerVersion
-    androidTestCompile 'org.mockito:mockito-core:' + mockitoVersion
-    androidTestCompile 'com.android.support.test:runner:' + testSupportLibraryVersion
-}
\ No newline at end of file
diff --git a/extensions/cronet/jniLibs/README.md b/extensions/cronet/jniLibs/README.md
deleted file mode 100644
index e9f0717ae6..0000000000
--- a/extensions/cronet/jniLibs/README.md
+++ /dev/null
@@ -1 +0,0 @@
-Copy folders containing architecture specific .so files here.
diff --git a/extensions/cronet/libs/README.md b/extensions/cronet/libs/README.md
deleted file mode 100644
index 641a80db18..0000000000
--- a/extensions/cronet/libs/README.md
+++ /dev/null
@@ -1 +0,0 @@
-Copy cronet.jar and cronet_api.jar here.
diff --git a/extensions/cronet/src/androidTest/AndroidManifest.xml b/extensions/cronet/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index 1f371a1864..0000000000
--- a/extensions/cronet/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer.ext.cronet">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner" />
-  </application>
-
-  <instrumentation
-      android:name="android.test.InstrumentationTestRunner"
-      android:targetPackage="com.google.android.exoplayer.ext.cronet"/>
-
-</manifest>
diff --git a/extensions/cronet/src/androidTest/java/com/google/android/exoplayer2/ext/cronet/ByteArrayUploadDataProviderTest.java b/extensions/cronet/src/androidTest/java/com/google/android/exoplayer2/ext/cronet/ByteArrayUploadDataProviderTest.java
deleted file mode 100644
index 4282244a7a..0000000000
--- a/extensions/cronet/src/androidTest/java/com/google/android/exoplayer2/ext/cronet/ByteArrayUploadDataProviderTest.java
+++ /dev/null
@@ -1,102 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.android.exoplayer2.ext.cronet;
-
-import static org.junit.Assert.assertArrayEquals;
-import static org.junit.Assert.assertEquals;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.MockitoAnnotations.initMocks;
-
-import android.annotation.TargetApi;
-import android.os.Build.VERSION_CODES;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.runner.AndroidJUnit4;
-
-import java.io.IOException;
-import java.nio.ByteBuffer;
-import java.util.Arrays;
-import org.chromium.net.UploadDataSink;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-
-/**
- * Tests for {@link ByteArrayUploadDataProvider}.
- */
-@RunWith(AndroidJUnit4.class)
-public final class ByteArrayUploadDataProviderTest {
-
-  private static final byte[] TEST_DATA = new byte[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
-
-  @Mock private UploadDataSink mockUploadDataSink;
-  private ByteBuffer byteBuffer;
-  private ByteArrayUploadDataProvider byteArrayUploadDataProvider;
-
-  @Before
-  public void setUp() {
-    System.setProperty("dexmaker.dexcache",
-        InstrumentationRegistry.getTargetContext().getCacheDir().getPath());
-    initMocks(this);
-    byteBuffer = ByteBuffer.allocate(TEST_DATA.length);
-    byteArrayUploadDataProvider = new ByteArrayUploadDataProvider(TEST_DATA);
-  }
-
-  @Test
-  public void testGetLength() {
-    assertEquals(TEST_DATA.length, byteArrayUploadDataProvider.getLength());
-  }
-
-  @Test
-  public void testReadFullBuffer() throws IOException {
-    byteArrayUploadDataProvider.read(mockUploadDataSink, byteBuffer);
-    assertArrayEquals(TEST_DATA, byteBuffer.array());
-  }
-
-  @TargetApi(VERSION_CODES.GINGERBREAD)
-  @Test
-  public void testReadPartialBuffer() throws IOException {
-    byte[] firstHalf = Arrays.copyOfRange(TEST_DATA, 0, TEST_DATA.length / 2);
-    byte[] secondHalf = Arrays.copyOfRange(TEST_DATA, TEST_DATA.length / 2, TEST_DATA.length);
-    byteBuffer = ByteBuffer.allocate(TEST_DATA.length / 2);
-    // Read half of the data.
-    byteArrayUploadDataProvider.read(mockUploadDataSink, byteBuffer);
-    assertArrayEquals(firstHalf, byteBuffer.array());
-
-    // Read the second half of the data.
-    byteBuffer.rewind();
-    byteArrayUploadDataProvider.read(mockUploadDataSink, byteBuffer);
-    assertArrayEquals(secondHalf, byteBuffer.array());
-    verify(mockUploadDataSink, times(2)).onReadSucceeded(false);
-  }
-
-  @Test
-  public void testRewind() throws IOException {
-    // Read all the data.
-    byteArrayUploadDataProvider.read(mockUploadDataSink, byteBuffer);
-    assertArrayEquals(TEST_DATA, byteBuffer.array());
-
-    // Rewind and make sure it can be read again.
-    byteBuffer.clear();
-    byteArrayUploadDataProvider.rewind(mockUploadDataSink);
-    byteArrayUploadDataProvider.read(mockUploadDataSink, byteBuffer);
-    assertArrayEquals(TEST_DATA, byteBuffer.array());
-    verify(mockUploadDataSink).onRewindSucceeded();
-  }
-
-}
diff --git a/extensions/cronet/src/androidTest/java/com/google/android/exoplayer2/ext/cronet/CronetDataSourceTest.java b/extensions/cronet/src/androidTest/java/com/google/android/exoplayer2/ext/cronet/CronetDataSourceTest.java
deleted file mode 100644
index 06a356487e..0000000000
--- a/extensions/cronet/src/androidTest/java/com/google/android/exoplayer2/ext/cronet/CronetDataSourceTest.java
+++ /dev/null
@@ -1,819 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.android.exoplayer2.ext.cronet;
-
-import static org.junit.Assert.assertArrayEquals;
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyString;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.doAnswer;
-import static org.mockito.Mockito.doThrow;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-import static org.mockito.MockitoAnnotations.initMocks;
-
-import android.net.Uri;
-import android.os.ConditionVariable;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.runner.AndroidJUnit4;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import com.google.android.exoplayer2.upstream.HttpDataSource;
-import com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException;
-import com.google.android.exoplayer2.upstream.TransferListener;
-import com.google.android.exoplayer2.util.Clock;
-import com.google.android.exoplayer2.util.Predicate;
-import java.io.IOException;
-import java.net.SocketTimeoutException;
-import java.net.UnknownHostException;
-import java.nio.ByteBuffer;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.Map;
-import java.util.concurrent.Executor;
-import java.util.concurrent.atomic.AtomicInteger;
-import org.chromium.net.CronetEngine;
-import org.chromium.net.NetworkException;
-import org.chromium.net.UrlRequest;
-import org.chromium.net.UrlResponseInfo;
-import org.chromium.net.impl.UrlResponseInfoImpl;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.mockito.invocation.InvocationOnMock;
-import org.mockito.stubbing.Answer;
-
-/**
- * Tests for {@link CronetDataSource}.
- */
-@RunWith(AndroidJUnit4.class)
-public final class CronetDataSourceTest {
-
-  private static final int TEST_CONNECT_TIMEOUT_MS = 100;
-  private static final int TEST_READ_TIMEOUT_MS = 50;
-  private static final String TEST_URL = "http://google.com";
-  private static final String TEST_CONTENT_TYPE = "test/test";
-  private static final byte[] TEST_POST_BODY = "test post body".getBytes();
-  private static final long TEST_CONTENT_LENGTH = 16000L;
-  private static final int TEST_CONNECTION_STATUS = 5;
-
-  private DataSpec testDataSpec;
-  private DataSpec testPostDataSpec;
-  private Map<String, String> testResponseHeader;
-  private UrlResponseInfo testUrlResponseInfo;
-
-  @Mock private UrlRequest.Builder mockUrlRequestBuilder;
-  @Mock
-  private UrlRequest mockUrlRequest;
-  @Mock
-  private Predicate<String> mockContentTypePredicate;
-  @Mock
-  private TransferListener<CronetDataSource> mockTransferListener;
-  @Mock
-  private Clock mockClock;
-  @Mock
-  private Executor mockExecutor;
-  @Mock
-  private NetworkException mockNetworkException;
-  @Mock private CronetEngine mockCronetEngine;
-
-  private CronetDataSource dataSourceUnderTest;
-
-  @Before
-  public void setUp() throws Exception {
-    System.setProperty("dexmaker.dexcache",
-        InstrumentationRegistry.getTargetContext().getCacheDir().getPath());
-    initMocks(this);
-    dataSourceUnderTest = spy(
-        new CronetDataSource(
-            mockCronetEngine,
-            mockExecutor,
-            mockContentTypePredicate,
-            mockTransferListener,
-            TEST_CONNECT_TIMEOUT_MS,
-            TEST_READ_TIMEOUT_MS,
-            true, // resetTimeoutOnRedirects
-            mockClock,
-            null));
-    when(mockContentTypePredicate.evaluate(anyString())).thenReturn(true);
-    when(mockCronetEngine.newUrlRequestBuilder(
-            anyString(), any(UrlRequest.Callback.class), any(Executor.class)))
-        .thenReturn(mockUrlRequestBuilder);
-    when(mockUrlRequestBuilder.allowDirectExecutor()).thenReturn(mockUrlRequestBuilder);
-    when(mockUrlRequestBuilder.build()).thenReturn(mockUrlRequest);
-    mockStatusResponse();
-
-    testDataSpec = new DataSpec(Uri.parse(TEST_URL), 0, C.LENGTH_UNSET, null);
-    testPostDataSpec = new DataSpec(
-        Uri.parse(TEST_URL), TEST_POST_BODY, 0, 0, C.LENGTH_UNSET, null, 0);
-    testResponseHeader = new HashMap<>();
-    testResponseHeader.put("Content-Type", TEST_CONTENT_TYPE);
-    // This value can be anything since the DataSpec is unset.
-    testResponseHeader.put("Content-Length", Long.toString(TEST_CONTENT_LENGTH));
-    testUrlResponseInfo = createUrlResponseInfo(200); // statusCode
-  }
-
-  private UrlResponseInfo createUrlResponseInfo(int statusCode) {
-    ArrayList<Map.Entry<String, String>> responseHeaderList = new ArrayList<>();
-    responseHeaderList.addAll(testResponseHeader.entrySet());
-    return new UrlResponseInfoImpl(
-        Collections.singletonList(TEST_URL),
-        statusCode,
-        null, // httpStatusText
-        responseHeaderList,
-        false, // wasCached
-        null, // negotiatedProtocol
-        null); // proxyServer
-  }
-
-  @Test(expected = IllegalStateException.class)
-  public void testOpeningTwiceThrows() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    dataSourceUnderTest.open(testDataSpec);
-    dataSourceUnderTest.open(testDataSpec);
-  }
-
-  @Test
-  public void testCallbackFromPreviousRequest() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-
-    dataSourceUnderTest.open(testDataSpec);
-    dataSourceUnderTest.close();
-    // Prepare a mock UrlRequest to be used in the second open() call.
-    final UrlRequest mockUrlRequest2 = mock(UrlRequest.class);
-    when(mockUrlRequestBuilder.build()).thenReturn(mockUrlRequest2);
-    doAnswer(new Answer<Object>() {
-      @Override
-      public Object answer(InvocationOnMock invocation) throws Throwable {
-        // Invoke the callback for the previous request.
-        dataSourceUnderTest.onFailed(
-            mockUrlRequest,
-            testUrlResponseInfo,
-            mockNetworkException);
-        dataSourceUnderTest.onResponseStarted(
-            mockUrlRequest2,
-            testUrlResponseInfo);
-        return null;
-      }
-    }).when(mockUrlRequest2).start();
-    dataSourceUnderTest.open(testDataSpec);
-  }
-
-  @Test
-  public void testRequestStartCalled() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-
-    dataSourceUnderTest.open(testDataSpec);
-    verify(mockCronetEngine)
-        .newUrlRequestBuilder(eq(TEST_URL), any(UrlRequest.Callback.class), any(Executor.class));
-    verify(mockUrlRequest).start();
-  }
-
-  @Test
-  public void testRequestHeadersSet() throws HttpDataSourceException {
-    testDataSpec = new DataSpec(Uri.parse(TEST_URL), 1000, 5000, null);
-    mockResponseStartSuccess();
-
-    dataSourceUnderTest.setRequestProperty("firstHeader", "firstValue");
-    dataSourceUnderTest.setRequestProperty("secondHeader", "secondValue");
-
-    dataSourceUnderTest.open(testDataSpec);
-    // The header value to add is current position to current position + length - 1.
-    verify(mockUrlRequestBuilder).addHeader("Range", "bytes=1000-5999");
-    verify(mockUrlRequestBuilder).addHeader("firstHeader", "firstValue");
-    verify(mockUrlRequestBuilder).addHeader("secondHeader", "secondValue");
-    verify(mockUrlRequest).start();
-  }
-
-  @Test
-  public void testRequestOpen() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    assertEquals(TEST_CONTENT_LENGTH, dataSourceUnderTest.open(testDataSpec));
-    verify(mockTransferListener).onTransferStart(dataSourceUnderTest, testDataSpec);
-  }
-
-  @Test
-  public void testRequestOpenGzippedCompressedReturnsDataSpecLength()
-      throws HttpDataSourceException {
-    testDataSpec = new DataSpec(Uri.parse(TEST_URL), 0, 5000, null);
-    testResponseHeader.put("Content-Encoding", "gzip");
-    testResponseHeader.put("Content-Length", Long.toString(50L));
-    mockResponseStartSuccess();
-
-    assertEquals(5000 /* contentLength */, dataSourceUnderTest.open(testDataSpec));
-    verify(mockTransferListener).onTransferStart(dataSourceUnderTest, testDataSpec);
-  }
-
-  @Test
-  public void testRequestOpenFail() {
-    mockResponseStartFailure();
-
-    try {
-      dataSourceUnderTest.open(testDataSpec);
-      fail("HttpDataSource.HttpDataSourceException expected");
-    } catch (HttpDataSourceException e) {
-      // Check for connection not automatically closed.
-      assertFalse(e.getCause() instanceof UnknownHostException);
-      verify(mockUrlRequest, never()).cancel();
-      verify(mockTransferListener, never()).onTransferStart(dataSourceUnderTest, testDataSpec);
-    }
-  }
-
-  @Test
-  public void testRequestOpenFailDueToDnsFailure() {
-    mockResponseStartFailure();
-    when(mockNetworkException.getErrorCode()).thenReturn(
-        NetworkException.ERROR_HOSTNAME_NOT_RESOLVED);
-
-    try {
-      dataSourceUnderTest.open(testDataSpec);
-      fail("HttpDataSource.HttpDataSourceException expected");
-    } catch (HttpDataSourceException e) {
-      // Check for connection not automatically closed.
-      assertTrue(e.getCause() instanceof UnknownHostException);
-      verify(mockUrlRequest, never()).cancel();
-      verify(mockTransferListener, never()).onTransferStart(dataSourceUnderTest, testDataSpec);
-    }
-  }
-
-  @Test
-  public void testRequestOpenValidatesStatusCode() {
-    mockResponseStartSuccess();
-    testUrlResponseInfo = createUrlResponseInfo(500); // statusCode
-
-    try {
-      dataSourceUnderTest.open(testDataSpec);
-      fail("HttpDataSource.HttpDataSourceException expected");
-    } catch (HttpDataSourceException e) {
-      assertTrue(e instanceof HttpDataSource.InvalidResponseCodeException);
-      // Check for connection not automatically closed.
-      verify(mockUrlRequest, never()).cancel();
-      verify(mockTransferListener, never()).onTransferStart(dataSourceUnderTest, testDataSpec);
-    }
-  }
-
-  @Test
-  public void testRequestOpenValidatesContentTypePredicate() {
-    mockResponseStartSuccess();
-    when(mockContentTypePredicate.evaluate(anyString())).thenReturn(false);
-
-    try {
-      dataSourceUnderTest.open(testDataSpec);
-      fail("HttpDataSource.HttpDataSourceException expected");
-    } catch (HttpDataSourceException e) {
-      assertTrue(e instanceof HttpDataSource.InvalidContentTypeException);
-      // Check for connection not automatically closed.
-      verify(mockUrlRequest, never()).cancel();
-      verify(mockContentTypePredicate).evaluate(TEST_CONTENT_TYPE);
-    }
-  }
-
-  @Test
-  public void testPostRequestOpen() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-
-    dataSourceUnderTest.setRequestProperty("Content-Type", TEST_CONTENT_TYPE);
-    assertEquals(TEST_CONTENT_LENGTH, dataSourceUnderTest.open(testPostDataSpec));
-    verify(mockTransferListener).onTransferStart(dataSourceUnderTest, testPostDataSpec);
-  }
-
-  @Test
-  public void testPostRequestOpenValidatesContentType() {
-    mockResponseStartSuccess();
-
-    try {
-      dataSourceUnderTest.open(testPostDataSpec);
-      fail("HttpDataSource.HttpDataSourceException expected");
-    } catch (HttpDataSourceException e) {
-      verify(mockUrlRequest, never()).start();
-    }
-  }
-
-  @Test
-  public void testPostRequestOpenRejects307Redirects() {
-    mockResponseStartSuccess();
-    mockResponseStartRedirect();
-
-    try {
-      dataSourceUnderTest.setRequestProperty("Content-Type", TEST_CONTENT_TYPE);
-      dataSourceUnderTest.open(testPostDataSpec);
-      fail("HttpDataSource.HttpDataSourceException expected");
-    } catch (HttpDataSourceException e) {
-      verify(mockUrlRequest, never()).followRedirect();
-    }
-  }
-
-  @Test
-  public void testRequestReadTwice() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    mockReadSuccess(0, 16);
-
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[8];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 8);
-    assertArrayEquals(buildTestDataArray(0, 8), returnedBuffer);
-    assertEquals(8, bytesRead);
-
-    returnedBuffer = new byte[8];
-    bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 8);
-    assertArrayEquals(buildTestDataArray(8, 8), returnedBuffer);
-    assertEquals(8, bytesRead);
-
-    // Should have only called read on cronet once.
-    verify(mockUrlRequest, times(1)).read(any(ByteBuffer.class));
-    verify(mockTransferListener, times(2)).onBytesTransferred(dataSourceUnderTest, 8);
-  }
-
-  @Test
-  public void testSecondRequestNoContentLength() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    testResponseHeader.put("Content-Length", Long.toString(1L));
-    mockReadSuccess(0, 16);
-
-    // First request.
-    dataSourceUnderTest.open(testDataSpec);
-    byte[] returnedBuffer = new byte[8];
-    dataSourceUnderTest.read(returnedBuffer, 0, 1);
-    dataSourceUnderTest.close();
-
-    testResponseHeader.remove("Content-Length");
-    mockReadSuccess(0, 16);
-
-    // Second request.
-    dataSourceUnderTest.open(testDataSpec);
-    returnedBuffer = new byte[16];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 10);
-    assertEquals(10, bytesRead);
-    bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 10);
-    assertEquals(6, bytesRead);
-    bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 10);
-    assertEquals(C.RESULT_END_OF_INPUT, bytesRead);
-  }
-
-  @Test
-  public void testReadWithOffset() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    mockReadSuccess(0, 16);
-
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[16];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 8, 8);
-    assertEquals(8, bytesRead);
-    assertArrayEquals(prefixZeros(buildTestDataArray(0, 8), 16), returnedBuffer);
-    verify(mockTransferListener).onBytesTransferred(dataSourceUnderTest, 8);
-  }
-
-  @Test
-  public void testRangeRequestWith206Response() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    mockReadSuccess(1000, 5000);
-    testUrlResponseInfo = createUrlResponseInfo(206); // Server supports range requests.
-    testDataSpec = new DataSpec(Uri.parse(TEST_URL), 1000, 5000, null);
-
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[16];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 16);
-    assertEquals(16, bytesRead);
-    assertArrayEquals(buildTestDataArray(1000, 16), returnedBuffer);
-    verify(mockTransferListener).onBytesTransferred(dataSourceUnderTest, 16);
-  }
-
-  @Test
-  public void testRangeRequestWith200Response() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    mockReadSuccess(0, 7000);
-    testUrlResponseInfo = createUrlResponseInfo(200); // Server does not support range requests.
-    testDataSpec = new DataSpec(Uri.parse(TEST_URL), 1000, 5000, null);
-
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[16];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 16);
-    assertEquals(16, bytesRead);
-    assertArrayEquals(buildTestDataArray(1000, 16), returnedBuffer);
-    verify(mockTransferListener).onBytesTransferred(dataSourceUnderTest, 16);
-  }
-
-  @Test
-  public void testReadWithUnsetLength() throws HttpDataSourceException {
-    testResponseHeader.remove("Content-Length");
-    mockResponseStartSuccess();
-    mockReadSuccess(0, 16);
-
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[16];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 8, 8);
-    assertArrayEquals(prefixZeros(buildTestDataArray(0, 8), 16), returnedBuffer);
-    assertEquals(8, bytesRead);
-    verify(mockTransferListener).onBytesTransferred(dataSourceUnderTest, 8);
-  }
-
-  @Test
-  public void testReadReturnsWhatItCan() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    mockReadSuccess(0, 16);
-
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[24];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 24);
-    assertArrayEquals(suffixZeros(buildTestDataArray(0, 16), 24), returnedBuffer);
-    assertEquals(16, bytesRead);
-    verify(mockTransferListener).onBytesTransferred(dataSourceUnderTest, 16);
-  }
-
-  @Test
-  public void testClosedMeansClosed() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    mockReadSuccess(0, 16);
-
-    int bytesRead = 0;
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[8];
-    bytesRead += dataSourceUnderTest.read(returnedBuffer, 0, 8);
-    assertArrayEquals(buildTestDataArray(0, 8), returnedBuffer);
-    assertEquals(8, bytesRead);
-
-    dataSourceUnderTest.close();
-    verify(mockTransferListener).onTransferEnd(dataSourceUnderTest);
-
-    try {
-      bytesRead += dataSourceUnderTest.read(returnedBuffer, 0, 8);
-      fail();
-    } catch (IllegalStateException e) {
-      // Expected.
-    }
-
-    // 16 bytes were attempted but only 8 should have been successfully read.
-    assertEquals(8, bytesRead);
-  }
-
-  @Test
-  public void testOverread() throws HttpDataSourceException {
-    testDataSpec = new DataSpec(Uri.parse(TEST_URL), 0, 16, null);
-    testResponseHeader.put("Content-Length", Long.toString(16L));
-    mockResponseStartSuccess();
-    mockReadSuccess(0, 16);
-
-    dataSourceUnderTest.open(testDataSpec);
-
-    byte[] returnedBuffer = new byte[8];
-    int bytesRead = dataSourceUnderTest.read(returnedBuffer, 0, 8);
-    assertEquals(8, bytesRead);
-    assertArrayEquals(buildTestDataArray(0, 8), returnedBuffer);
-
-    // The current buffer is kept if not completely consumed by DataSource reader.
-    returnedBuffer = new byte[8];
-    bytesRead += dataSourceUnderTest.read(returnedBuffer, 0, 6);
-    assertEquals(14, bytesRead);
-    assertArrayEquals(suffixZeros(buildTestDataArray(8, 6), 8), returnedBuffer);
-
-    // 2 bytes left at this point.
-    returnedBuffer = new byte[8];
-    bytesRead += dataSourceUnderTest.read(returnedBuffer, 0, 8);
-    assertEquals(16, bytesRead);
-    assertArrayEquals(suffixZeros(buildTestDataArray(14, 2), 8), returnedBuffer);
-
-    // Should have only called read on cronet once.
-    verify(mockUrlRequest, times(1)).read(any(ByteBuffer.class));
-    verify(mockTransferListener, times(1)).onBytesTransferred(dataSourceUnderTest, 8);
-    verify(mockTransferListener, times(1)).onBytesTransferred(dataSourceUnderTest, 6);
-    verify(mockTransferListener, times(1)).onBytesTransferred(dataSourceUnderTest, 2);
-
-    // Now we already returned the 16 bytes initially asked.
-    // Try to read again even though all requested 16 bytes are already returned.
-    // Return C.RESULT_END_OF_INPUT
-    returnedBuffer = new byte[16];
-    int bytesOverRead = dataSourceUnderTest.read(returnedBuffer, 0, 16);
-    assertEquals(C.RESULT_END_OF_INPUT, bytesOverRead);
-    assertArrayEquals(new byte[16], returnedBuffer);
-    // C.RESULT_END_OF_INPUT should not be reported though the TransferListener.
-    verify(mockTransferListener, never()).onBytesTransferred(dataSourceUnderTest,
-        C.RESULT_END_OF_INPUT);
-    // There should still be only one call to read on cronet.
-    verify(mockUrlRequest, times(1)).read(any(ByteBuffer.class));
-    // Check for connection not automatically closed.
-    verify(mockUrlRequest, never()).cancel();
-    assertEquals(16, bytesRead);
-  }
-
-  @Test
-  public void testConnectTimeout() {
-    when(mockClock.elapsedRealtime()).thenReturn(0L);
-    final ConditionVariable startCondition = buildUrlRequestStartedCondition();
-    final ConditionVariable timedOutCondition = new ConditionVariable();
-
-    new Thread() {
-      @Override
-      public void run() {
-        try {
-          dataSourceUnderTest.open(testDataSpec);
-          fail();
-        } catch (HttpDataSourceException e) {
-          // Expected.
-          assertTrue(e instanceof CronetDataSource.OpenException);
-          assertTrue(e.getCause() instanceof SocketTimeoutException);
-          assertEquals(
-              TEST_CONNECTION_STATUS,
-              ((CronetDataSource.OpenException) e).cronetConnectionStatus);
-          timedOutCondition.open();
-        }
-      }
-    }.start();
-    startCondition.block();
-
-    // We should still be trying to open.
-    assertFalse(timedOutCondition.block(50));
-    // We should still be trying to open as we approach the timeout.
-    when(mockClock.elapsedRealtime()).thenReturn((long) TEST_CONNECT_TIMEOUT_MS - 1);
-    assertFalse(timedOutCondition.block(50));
-    // Now we timeout.
-    when(mockClock.elapsedRealtime()).thenReturn((long) TEST_CONNECT_TIMEOUT_MS);
-    timedOutCondition.block();
-
-    verify(mockTransferListener, never()).onTransferStart(dataSourceUnderTest, testDataSpec);
-  }
-
-  @Test
-  public void testConnectResponseBeforeTimeout() {
-    when(mockClock.elapsedRealtime()).thenReturn(0L);
-    final ConditionVariable startCondition = buildUrlRequestStartedCondition();
-    final ConditionVariable openCondition = new ConditionVariable();
-
-    new Thread() {
-      @Override
-      public void run() {
-        try {
-          dataSourceUnderTest.open(testDataSpec);
-          openCondition.open();
-        } catch (HttpDataSourceException e) {
-          fail();
-        }
-      }
-    }.start();
-    startCondition.block();
-
-    // We should still be trying to open.
-    assertFalse(openCondition.block(50));
-    // We should still be trying to open as we approach the timeout.
-    when(mockClock.elapsedRealtime()).thenReturn((long) TEST_CONNECT_TIMEOUT_MS - 1);
-    assertFalse(openCondition.block(50));
-    // The response arrives just in time.
-    dataSourceUnderTest.onResponseStarted(mockUrlRequest, testUrlResponseInfo);
-    openCondition.block();
-  }
-
-  @Test
-  public void testRedirectIncreasesConnectionTimeout() throws InterruptedException {
-    when(mockClock.elapsedRealtime()).thenReturn(0L);
-    final ConditionVariable startCondition = buildUrlRequestStartedCondition();
-    final ConditionVariable timedOutCondition = new ConditionVariable();
-    final AtomicInteger openExceptions = new AtomicInteger(0);
-
-    new Thread() {
-      @Override
-      public void run() {
-        try {
-          dataSourceUnderTest.open(testDataSpec);
-          fail();
-        } catch (HttpDataSourceException e) {
-          // Expected.
-          assertTrue(e instanceof CronetDataSource.OpenException);
-          assertTrue(e.getCause() instanceof SocketTimeoutException);
-          openExceptions.getAndIncrement();
-          timedOutCondition.open();
-        }
-      }
-    }.start();
-    startCondition.block();
-
-    // We should still be trying to open.
-    assertFalse(timedOutCondition.block(50));
-    // We should still be trying to open as we approach the timeout.
-    when(mockClock.elapsedRealtime()).thenReturn((long) TEST_CONNECT_TIMEOUT_MS - 1);
-    assertFalse(timedOutCondition.block(50));
-    // A redirect arrives just in time.
-    dataSourceUnderTest.onRedirectReceived(mockUrlRequest, testUrlResponseInfo,
-        "RandomRedirectedUrl1");
-
-    long newTimeoutMs = 2 * TEST_CONNECT_TIMEOUT_MS - 1;
-    when(mockClock.elapsedRealtime()).thenReturn(newTimeoutMs - 1);
-    // Give the thread some time to run.
-    assertFalse(timedOutCondition.block(newTimeoutMs));
-    // We should still be trying to open as we approach the new timeout.
-    assertFalse(timedOutCondition.block(50));
-    // A redirect arrives just in time.
-    dataSourceUnderTest.onRedirectReceived(mockUrlRequest, testUrlResponseInfo,
-        "RandomRedirectedUrl2");
-
-    newTimeoutMs = 3 * TEST_CONNECT_TIMEOUT_MS - 2;
-    when(mockClock.elapsedRealtime()).thenReturn(newTimeoutMs - 1);
-    // Give the thread some time to run.
-    assertFalse(timedOutCondition.block(newTimeoutMs));
-    // We should still be trying to open as we approach the new timeout.
-    assertFalse(timedOutCondition.block(50));
-    // Now we timeout.
-    when(mockClock.elapsedRealtime()).thenReturn(newTimeoutMs);
-    timedOutCondition.block();
-
-    verify(mockTransferListener, never()).onTransferStart(dataSourceUnderTest, testDataSpec);
-    assertEquals(1, openExceptions.get());
-  }
-
-  @Test
-  public void testExceptionFromTransferListener() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-
-    // Make mockTransferListener throw an exception in CronetDataSource.close(). Ensure that
-    // the subsequent open() call succeeds.
-    doThrow(new NullPointerException()).when(mockTransferListener).onTransferEnd(
-        dataSourceUnderTest);
-    dataSourceUnderTest.open(testDataSpec);
-    try {
-      dataSourceUnderTest.close();
-      fail("NullPointerException expected");
-    } catch (NullPointerException e) {
-      // Expected.
-    }
-    // Open should return successfully.
-    dataSourceUnderTest.open(testDataSpec);
-  }
-
-  @Test
-  public void testReadFailure() throws HttpDataSourceException {
-    mockResponseStartSuccess();
-    mockReadFailure();
-
-    dataSourceUnderTest.open(testDataSpec);
-    byte[] returnedBuffer = new byte[8];
-    try {
-      dataSourceUnderTest.read(returnedBuffer, 0, 8);
-      fail("dataSourceUnderTest.read() returned, but IOException expected");
-    } catch (IOException e) {
-      // Expected.
-    }
-  }
-
-  @Test
-  public void testAllowDirectExecutor() throws HttpDataSourceException {
-    testDataSpec = new DataSpec(Uri.parse(TEST_URL), 1000, 5000, null);
-    mockResponseStartSuccess();
-
-    dataSourceUnderTest.open(testDataSpec);
-    verify(mockUrlRequestBuilder).allowDirectExecutor();
-  }
-
-  // Helper methods.
-
-  private void mockStatusResponse() {
-    doAnswer(new Answer<Object>() {
-      @Override
-      public Object answer(InvocationOnMock invocation) throws Throwable {
-        UrlRequest.StatusListener statusListener =
-            (UrlRequest.StatusListener) invocation.getArguments()[0];
-        statusListener.onStatus(TEST_CONNECTION_STATUS);
-        return null;
-      }
-    }).when(mockUrlRequest).getStatus(any(UrlRequest.StatusListener.class));
-  }
-
-  private void mockResponseStartSuccess() {
-    doAnswer(new Answer<Object>() {
-      @Override
-      public Object answer(InvocationOnMock invocation) throws Throwable {
-        dataSourceUnderTest.onResponseStarted(
-            mockUrlRequest,
-            testUrlResponseInfo);
-        return null;
-      }
-    }).when(mockUrlRequest).start();
-  }
-
-  private void mockResponseStartRedirect() {
-    doAnswer(new Answer<Object>() {
-      @Override
-      public Object answer(InvocationOnMock invocation) throws Throwable {
-        dataSourceUnderTest.onRedirectReceived(
-            mockUrlRequest,
-            createUrlResponseInfo(307), // statusCode
-            "http://redirect.location.com");
-        return null;
-      }
-    }).when(mockUrlRequest).start();
-  }
-
-  private void mockResponseStartFailure() {
-    doAnswer(new Answer<Object>() {
-      @Override
-      public Object answer(InvocationOnMock invocation) throws Throwable {
-        dataSourceUnderTest.onFailed(
-            mockUrlRequest,
-            createUrlResponseInfo(500), // statusCode
-            mockNetworkException);
-        return null;
-      }
-    }).when(mockUrlRequest).start();
-  }
-
-  private void mockReadSuccess(int position, int length) {
-    final int[] positionAndRemaining = new int[] {position, length};
-    doAnswer(new Answer<Void>() {
-      @Override
-      public Void answer(InvocationOnMock invocation) throws Throwable {
-        if (positionAndRemaining[1] == 0) {
-          dataSourceUnderTest.onSucceeded(mockUrlRequest, testUrlResponseInfo);
-        } else {
-          ByteBuffer inputBuffer = (ByteBuffer) invocation.getArguments()[0];
-          int readLength = Math.min(positionAndRemaining[1], inputBuffer.remaining());
-          inputBuffer.put(buildTestDataBuffer(positionAndRemaining[0], readLength));
-          positionAndRemaining[0] += readLength;
-          positionAndRemaining[1] -= readLength;
-          dataSourceUnderTest.onReadCompleted(
-              mockUrlRequest,
-              testUrlResponseInfo,
-              inputBuffer);
-        }
-        return null;
-      }
-    }).when(mockUrlRequest).read(any(ByteBuffer.class));
-  }
-
-  private void mockReadFailure() {
-    doAnswer(new Answer<Object>() {
-      @Override
-      public Object answer(InvocationOnMock invocation) throws Throwable {
-        dataSourceUnderTest.onFailed(
-            mockUrlRequest,
-            createUrlResponseInfo(500), // statusCode
-            mockNetworkException);
-        return null;
-      }
-    }).when(mockUrlRequest).read(any(ByteBuffer.class));
-  }
-
-  private ConditionVariable buildUrlRequestStartedCondition() {
-    final ConditionVariable startedCondition = new ConditionVariable();
-    doAnswer(new Answer<Object>() {
-      @Override
-      public Object answer(InvocationOnMock invocation) throws Throwable {
-        startedCondition.open();
-        return null;
-      }
-    }).when(mockUrlRequest).start();
-    return startedCondition;
-  }
-
-  private static byte[] buildTestDataArray(int position, int length) {
-    return buildTestDataBuffer(position, length).array();
-  }
-
-  public static byte[] prefixZeros(byte[] data, int requiredLength) {
-    byte[] prefixedData = new byte[requiredLength];
-    System.arraycopy(data, 0, prefixedData, requiredLength - data.length, data.length);
-    return prefixedData;
-  }
-
-  public static byte[] suffixZeros(byte[] data, int requiredLength) {
-    return Arrays.copyOf(data, requiredLength);
-  }
-
-  private static ByteBuffer buildTestDataBuffer(int position, int length) {
-    ByteBuffer testBuffer = ByteBuffer.allocate(length);
-    for (int i = 0; i < length; i++) {
-      testBuffer.put((byte) (position + i));
-    }
-    testBuffer.flip();
-    return testBuffer;
-  }
-
-}
diff --git a/extensions/cronet/src/main/AndroidManifest.xml b/extensions/cronet/src/main/AndroidManifest.xml
deleted file mode 100644
index c81d95f104..0000000000
--- a/extensions/cronet/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.google.android.exoplayer.ext.cronet">
-
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-
-</manifest>
diff --git a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/ByteArrayUploadDataProvider.java b/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/ByteArrayUploadDataProvider.java
deleted file mode 100644
index 314e06900e..0000000000
--- a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/ByteArrayUploadDataProvider.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.cronet;
-
-import java.io.IOException;
-import java.nio.ByteBuffer;
-import org.chromium.net.UploadDataProvider;
-import org.chromium.net.UploadDataSink;
-
-/**
- * A {@link UploadDataProvider} implementation that provides data from a {@code byte[]}.
- */
-/* package */ final class ByteArrayUploadDataProvider extends UploadDataProvider {
-
-  private final byte[] data;
-
-  private int position;
-
-  public ByteArrayUploadDataProvider(byte[] data) {
-    this.data = data;
-  }
-
-  @Override
-  public long getLength() {
-    return data.length;
-  }
-
-  @Override
-  public void read(UploadDataSink uploadDataSink, ByteBuffer byteBuffer) throws IOException {
-    int readLength = Math.min(byteBuffer.remaining(), data.length - position);
-    byteBuffer.put(data, position, readLength);
-    position += readLength;
-    uploadDataSink.onReadSucceeded(false);
-  }
-
-  @Override
-  public void rewind(UploadDataSink uploadDataSink) throws IOException {
-    position = 0;
-    uploadDataSink.onRewindSucceeded();
-  }
-
-}
diff --git a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSource.java b/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSource.java
deleted file mode 100644
index 204a2756bb..0000000000
--- a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSource.java
+++ /dev/null
@@ -1,559 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.cronet;
-
-import android.net.Uri;
-import android.os.ConditionVariable;
-import android.text.TextUtils;
-import android.util.Log;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.upstream.DataSourceException;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import com.google.android.exoplayer2.upstream.HttpDataSource;
-import com.google.android.exoplayer2.upstream.TransferListener;
-import com.google.android.exoplayer2.util.Assertions;
-import com.google.android.exoplayer2.util.Clock;
-import com.google.android.exoplayer2.util.Predicate;
-import java.io.IOException;
-import java.net.SocketTimeoutException;
-import java.net.UnknownHostException;
-import java.nio.ByteBuffer;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.concurrent.Executor;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-import org.chromium.net.CronetEngine;
-import org.chromium.net.CronetException;
-import org.chromium.net.NetworkException;
-import org.chromium.net.UrlRequest;
-import org.chromium.net.UrlRequest.Status;
-import org.chromium.net.UrlResponseInfo;
-
-/**
- * DataSource without intermediate buffer based on Cronet API set using UrlRequest.
- * <p>This class's methods are organized in the sequence of expected calls.
- */
-public class CronetDataSource extends UrlRequest.Callback implements HttpDataSource {
-
-  /**
-   * Thrown when an error is encountered when trying to open a {@link CronetDataSource}.
-   */
-  public static final class OpenException extends HttpDataSourceException {
-
-    /**
-     * Returns the status of the connection establishment at the moment when the error occurred, as
-     * defined by {@link UrlRequest.Status}.
-     */
-    public final int cronetConnectionStatus;
-
-    public OpenException(IOException cause, DataSpec dataSpec, int cronetConnectionStatus) {
-      super(cause, dataSpec, TYPE_OPEN);
-      this.cronetConnectionStatus = cronetConnectionStatus;
-    }
-
-    public OpenException(String errorMessage, DataSpec dataSpec, int cronetConnectionStatus) {
-      super(errorMessage, dataSpec, TYPE_OPEN);
-      this.cronetConnectionStatus = cronetConnectionStatus;
-    }
-
-  }
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.cronet");
-  }
-
-  /**
-   * The default connection timeout, in milliseconds.
-   */
-  public static final int DEFAULT_CONNECT_TIMEOUT_MILLIS = 8 * 1000;
-  /**
-   * The default read timeout, in milliseconds.
-   */
-  public static final int DEFAULT_READ_TIMEOUT_MILLIS = 8 * 1000;
-
-  private static final String TAG = "CronetDataSource";
-  private static final String CONTENT_TYPE = "Content-Type";
-  private static final Pattern CONTENT_RANGE_HEADER_PATTERN =
-      Pattern.compile("^bytes (\\d+)-(\\d+)/(\\d+)$");
-  // The size of read buffer passed to cronet UrlRequest.read().
-  private static final int READ_BUFFER_SIZE_BYTES = 32 * 1024;
-
-  private final CronetEngine cronetEngine;
-  private final Executor executor;
-  private final Predicate<String> contentTypePredicate;
-  private final TransferListener<? super CronetDataSource> listener;
-  private final int connectTimeoutMs;
-  private final int readTimeoutMs;
-  private final boolean resetTimeoutOnRedirects;
-  private final RequestProperties defaultRequestProperties;
-  private final RequestProperties requestProperties;
-  private final ConditionVariable operation;
-  private final Clock clock;
-
-  // Accessed by the calling thread only.
-  private boolean opened;
-  private long bytesToSkip;
-  private long bytesRemaining;
-
-  // Written from the calling thread only. currentUrlRequest.start() calls ensure writes are visible
-  // to reads made by the Cronet thread.
-  private UrlRequest currentUrlRequest;
-  private DataSpec currentDataSpec;
-
-  // Reference written and read by calling thread only. Passed to Cronet thread as a local variable.
-  // operation.open() calls ensure writes into the buffer are visible to reads made by the calling
-  // thread.
-  private ByteBuffer readBuffer;
-
-  // Written from the Cronet thread only. operation.open() calls ensure writes are visible to reads
-  // made by the calling thread.
-  private UrlResponseInfo responseInfo;
-  private IOException exception;
-  private boolean finished;
-
-  private volatile long currentConnectTimeoutMs;
-
-  /**
-   * @param cronetEngine A CronetEngine.
-   * @param executor The {@link java.util.concurrent.Executor} that will handle responses.
-   *     This may be a direct executor (i.e. executes tasks on the calling thread) in order
-   *     to avoid a thread hop from Cronet's internal network thread to the response handling
-   *     thread. However, to avoid slowing down overall network performance, care must be taken
-   *     to make sure response handling is a fast operation when using a direct executor.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then an {@link InvalidContentTypeException} is thrown from
-   *     {@link #open(DataSpec)}.
-   * @param listener An optional listener.
-   */
-  public CronetDataSource(CronetEngine cronetEngine, Executor executor,
-      Predicate<String> contentTypePredicate, TransferListener<? super CronetDataSource> listener) {
-    this(cronetEngine, executor, contentTypePredicate, listener, DEFAULT_CONNECT_TIMEOUT_MILLIS,
-        DEFAULT_READ_TIMEOUT_MILLIS, false, null);
-  }
-
-  /**
-   * @param cronetEngine A CronetEngine.
-   * @param executor The {@link java.util.concurrent.Executor} that will handle responses.
-   *     This may be a direct executor (i.e. executes tasks on the calling thread) in order
-   *     to avoid a thread hop from Cronet's internal network thread to the response handling
-   *     thread. However, to avoid slowing down overall network performance, care must be taken
-   *     to make sure response handling is a fast operation when using a direct executor.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then an {@link InvalidContentTypeException} is thrown from
-   *     {@link #open(DataSpec)}.
-   * @param listener An optional listener.
-   * @param connectTimeoutMs The connection timeout, in milliseconds.
-   * @param readTimeoutMs The read timeout, in milliseconds.
-   * @param resetTimeoutOnRedirects Whether the connect timeout is reset when a redirect occurs.
-   * @param defaultRequestProperties The default request properties to be used.
-   */
-  public CronetDataSource(CronetEngine cronetEngine, Executor executor,
-      Predicate<String> contentTypePredicate, TransferListener<? super CronetDataSource> listener,
-      int connectTimeoutMs, int readTimeoutMs, boolean resetTimeoutOnRedirects,
-      RequestProperties defaultRequestProperties) {
-    this(cronetEngine, executor, contentTypePredicate, listener, connectTimeoutMs,
-        readTimeoutMs, resetTimeoutOnRedirects, Clock.DEFAULT, defaultRequestProperties);
-  }
-
-  /* package */ CronetDataSource(CronetEngine cronetEngine, Executor executor,
-      Predicate<String> contentTypePredicate, TransferListener<? super CronetDataSource> listener,
-      int connectTimeoutMs, int readTimeoutMs, boolean resetTimeoutOnRedirects, Clock clock,
-      RequestProperties defaultRequestProperties) {
-    this.cronetEngine = Assertions.checkNotNull(cronetEngine);
-    this.executor = Assertions.checkNotNull(executor);
-    this.contentTypePredicate = contentTypePredicate;
-    this.listener = listener;
-    this.connectTimeoutMs = connectTimeoutMs;
-    this.readTimeoutMs = readTimeoutMs;
-    this.resetTimeoutOnRedirects = resetTimeoutOnRedirects;
-    this.clock = Assertions.checkNotNull(clock);
-    this.defaultRequestProperties = defaultRequestProperties;
-    requestProperties = new RequestProperties();
-    operation = new ConditionVariable();
-  }
-
-  // HttpDataSource implementation.
-
-  @Override
-  public void setRequestProperty(String name, String value) {
-    requestProperties.set(name, value);
-  }
-
-  @Override
-  public void clearRequestProperty(String name) {
-    requestProperties.remove(name);
-  }
-
-  @Override
-  public void clearAllRequestProperties() {
-    requestProperties.clear();
-  }
-
-  @Override
-  public Map<String, List<String>> getResponseHeaders() {
-    return responseInfo == null ? null : responseInfo.getAllHeaders();
-  }
-
-  @Override
-  public Uri getUri() {
-    return responseInfo == null ? null : Uri.parse(responseInfo.getUrl());
-  }
-
-  @Override
-  public long open(DataSpec dataSpec) throws HttpDataSourceException {
-    Assertions.checkNotNull(dataSpec);
-    Assertions.checkState(!opened);
-
-    operation.close();
-    resetConnectTimeout();
-    currentDataSpec = dataSpec;
-    currentUrlRequest = buildRequest(dataSpec);
-    currentUrlRequest.start();
-    boolean requestStarted = blockUntilConnectTimeout();
-
-    if (exception != null) {
-      throw new OpenException(exception, currentDataSpec, getStatus(currentUrlRequest));
-    } else if (!requestStarted) {
-      // The timeout was reached before the connection was opened.
-      throw new OpenException(new SocketTimeoutException(), dataSpec, getStatus(currentUrlRequest));
-    }
-
-    // Check for a valid response code.
-    int responseCode = responseInfo.getHttpStatusCode();
-    if (responseCode < 200 || responseCode > 299) {
-      InvalidResponseCodeException exception = new InvalidResponseCodeException(responseCode,
-          responseInfo.getAllHeaders(), currentDataSpec);
-      if (responseCode == 416) {
-        exception.initCause(new DataSourceException(DataSourceException.POSITION_OUT_OF_RANGE));
-      }
-      throw exception;
-    }
-
-    // Check for a valid content type.
-    if (contentTypePredicate != null) {
-      List<String> contentTypeHeaders = responseInfo.getAllHeaders().get(CONTENT_TYPE);
-      String contentType = isEmpty(contentTypeHeaders) ? null : contentTypeHeaders.get(0);
-      if (!contentTypePredicate.evaluate(contentType)) {
-        throw new InvalidContentTypeException(contentType, currentDataSpec);
-      }
-    }
-
-    // If we requested a range starting from a non-zero position and received a 200 rather than a
-    // 206, then the server does not support partial requests. We'll need to manually skip to the
-    // requested position.
-    bytesToSkip = responseCode == 200 && dataSpec.position != 0 ? dataSpec.position : 0;
-
-    // Calculate the content length.
-    if (!getIsCompressed(responseInfo)) {
-      if (dataSpec.length != C.LENGTH_UNSET) {
-        bytesRemaining = dataSpec.length;
-      } else {
-        bytesRemaining = getContentLength(responseInfo);
-      }
-    } else {
-      // If the response is compressed then the content length will be that of the compressed data
-      // which isn't what we want. Always use the dataSpec length in this case.
-      bytesRemaining = currentDataSpec.length;
-    }
-
-    opened = true;
-    if (listener != null) {
-      listener.onTransferStart(this, dataSpec);
-    }
-
-    return bytesRemaining;
-  }
-
-  @Override
-  public int read(byte[] buffer, int offset, int readLength) throws HttpDataSourceException {
-    Assertions.checkState(opened);
-
-    if (readLength == 0) {
-      return 0;
-    } else if (bytesRemaining == 0) {
-      return C.RESULT_END_OF_INPUT;
-    }
-
-    if (readBuffer == null) {
-      readBuffer = ByteBuffer.allocateDirect(READ_BUFFER_SIZE_BYTES);
-      readBuffer.limit(0);
-    }
-    while (!readBuffer.hasRemaining()) {
-      // Fill readBuffer with more data from Cronet.
-      operation.close();
-      readBuffer.clear();
-      currentUrlRequest.read(readBuffer);
-      if (!operation.block(readTimeoutMs)) {
-        // We're timing out, but since the operation is still ongoing we'll need to replace
-        // readBuffer to avoid the possibility of it being written to by this operation during a
-        // subsequent request.
-        readBuffer = null;
-        throw new HttpDataSourceException(
-            new SocketTimeoutException(), currentDataSpec, HttpDataSourceException.TYPE_READ);
-      } else if (exception != null) {
-        throw new HttpDataSourceException(exception, currentDataSpec,
-            HttpDataSourceException.TYPE_READ);
-      } else if (finished) {
-        return C.RESULT_END_OF_INPUT;
-      } else {
-        // The operation didn't time out, fail or finish, and therefore data must have been read.
-        readBuffer.flip();
-        Assertions.checkState(readBuffer.hasRemaining());
-        if (bytesToSkip > 0) {
-          int bytesSkipped = (int) Math.min(readBuffer.remaining(), bytesToSkip);
-          readBuffer.position(readBuffer.position() + bytesSkipped);
-          bytesToSkip -= bytesSkipped;
-        }
-      }
-    }
-
-    int bytesRead = Math.min(readBuffer.remaining(), readLength);
-    readBuffer.get(buffer, offset, bytesRead);
-
-    if (bytesRemaining != C.LENGTH_UNSET) {
-      bytesRemaining -= bytesRead;
-    }
-    if (listener != null) {
-      listener.onBytesTransferred(this, bytesRead);
-    }
-    return bytesRead;
-  }
-
-  @Override
-  public synchronized void close() {
-    if (currentUrlRequest != null) {
-      currentUrlRequest.cancel();
-      currentUrlRequest = null;
-    }
-    if (readBuffer != null) {
-      readBuffer.limit(0);
-    }
-    currentDataSpec = null;
-    responseInfo = null;
-    exception = null;
-    finished = false;
-    if (opened) {
-      opened = false;
-      if (listener != null) {
-        listener.onTransferEnd(this);
-      }
-    }
-  }
-
-  // UrlRequest.Callback implementation
-
-  @Override
-  public synchronized void onRedirectReceived(UrlRequest request, UrlResponseInfo info,
-      String newLocationUrl) {
-    if (request != currentUrlRequest) {
-      return;
-    }
-    if (currentDataSpec.postBody != null) {
-      int responseCode = info.getHttpStatusCode();
-      // The industry standard is to disregard POST redirects when the status code is 307 or 308.
-      // For other redirect response codes the POST request is converted to a GET request and the
-      // redirect is followed.
-      if (responseCode == 307 || responseCode == 308) {
-        exception = new InvalidResponseCodeException(responseCode, info.getAllHeaders(),
-            currentDataSpec);
-        operation.open();
-        return;
-      }
-    }
-    if (resetTimeoutOnRedirects) {
-      resetConnectTimeout();
-    }
-    request.followRedirect();
-  }
-
-  @Override
-  public synchronized void onResponseStarted(UrlRequest request, UrlResponseInfo info) {
-    if (request != currentUrlRequest) {
-      return;
-    }
-    responseInfo = info;
-    operation.open();
-  }
-
-  @Override
-  public synchronized void onReadCompleted(UrlRequest request, UrlResponseInfo info,
-      ByteBuffer buffer) {
-    if (request != currentUrlRequest) {
-      return;
-    }
-    operation.open();
-  }
-
-  @Override
-  public synchronized void onSucceeded(UrlRequest request, UrlResponseInfo info) {
-    if (request != currentUrlRequest) {
-      return;
-    }
-    finished = true;
-    operation.open();
-  }
-
-  @Override
-  public synchronized void onFailed(UrlRequest request, UrlResponseInfo info,
-      CronetException error) {
-    if (request != currentUrlRequest) {
-      return;
-    }
-    if (error instanceof NetworkException
-        && ((NetworkException) error).getErrorCode()
-            == NetworkException.ERROR_HOSTNAME_NOT_RESOLVED) {
-      exception = new UnknownHostException();
-    } else {
-      exception = error;
-    }
-    operation.open();
-  }
-
-  // Internal methods.
-
-  private UrlRequest buildRequest(DataSpec dataSpec) throws OpenException {
-    UrlRequest.Builder requestBuilder = cronetEngine.newUrlRequestBuilder(
-        dataSpec.uri.toString(), this, executor).allowDirectExecutor();
-    // Set the headers.
-    boolean isContentTypeHeaderSet = false;
-    if (defaultRequestProperties != null) {
-      for (Entry<String, String> headerEntry : defaultRequestProperties.getSnapshot().entrySet()) {
-        String key = headerEntry.getKey();
-        isContentTypeHeaderSet = isContentTypeHeaderSet || CONTENT_TYPE.equals(key);
-        requestBuilder.addHeader(key, headerEntry.getValue());
-      }
-    }
-    Map<String, String> requestPropertiesSnapshot = requestProperties.getSnapshot();
-    for (Entry<String, String> headerEntry : requestPropertiesSnapshot.entrySet()) {
-      String key = headerEntry.getKey();
-      isContentTypeHeaderSet = isContentTypeHeaderSet || CONTENT_TYPE.equals(key);
-      requestBuilder.addHeader(key, headerEntry.getValue());
-    }
-    if (dataSpec.postBody != null && dataSpec.postBody.length != 0 && !isContentTypeHeaderSet) {
-      throw new OpenException("POST request with non-empty body must set Content-Type", dataSpec,
-          Status.IDLE);
-    }
-    // Set the Range header.
-    if (currentDataSpec.position != 0 || currentDataSpec.length != C.LENGTH_UNSET) {
-      StringBuilder rangeValue = new StringBuilder();
-      rangeValue.append("bytes=");
-      rangeValue.append(currentDataSpec.position);
-      rangeValue.append("-");
-      if (currentDataSpec.length != C.LENGTH_UNSET) {
-        rangeValue.append(currentDataSpec.position + currentDataSpec.length - 1);
-      }
-      requestBuilder.addHeader("Range", rangeValue.toString());
-    }
-    // Set the method and (if non-empty) the body.
-    if (dataSpec.postBody != null) {
-      requestBuilder.setHttpMethod("POST");
-      if (dataSpec.postBody.length != 0) {
-        requestBuilder.setUploadDataProvider(new ByteArrayUploadDataProvider(dataSpec.postBody),
-            executor);
-      }
-    }
-    return requestBuilder.build();
-  }
-
-  private boolean blockUntilConnectTimeout() {
-    long now = clock.elapsedRealtime();
-    boolean opened = false;
-    while (!opened && now < currentConnectTimeoutMs) {
-      opened = operation.block(currentConnectTimeoutMs - now + 5 /* fudge factor */);
-      now = clock.elapsedRealtime();
-    }
-    return opened;
-  }
-
-  private void resetConnectTimeout() {
-    currentConnectTimeoutMs = clock.elapsedRealtime() + connectTimeoutMs;
-  }
-
-  private static boolean getIsCompressed(UrlResponseInfo info) {
-    for (Map.Entry<String, String> entry : info.getAllHeadersAsList()) {
-      if (entry.getKey().equalsIgnoreCase("Content-Encoding")) {
-        return !entry.getValue().equalsIgnoreCase("identity");
-      }
-    }
-    return false;
-  }
-
-  private static long getContentLength(UrlResponseInfo info) {
-    long contentLength = C.LENGTH_UNSET;
-    Map<String, List<String>> headers = info.getAllHeaders();
-    List<String> contentLengthHeaders = headers.get("Content-Length");
-    String contentLengthHeader = null;
-    if (!isEmpty(contentLengthHeaders)) {
-      contentLengthHeader = contentLengthHeaders.get(0);
-      if (!TextUtils.isEmpty(contentLengthHeader)) {
-        try {
-          contentLength = Long.parseLong(contentLengthHeader);
-        } catch (NumberFormatException e) {
-          Log.e(TAG, "Unexpected Content-Length [" + contentLengthHeader + "]");
-        }
-      }
-    }
-    List<String> contentRangeHeaders = headers.get("Content-Range");
-    if (!isEmpty(contentRangeHeaders)) {
-      String contentRangeHeader = contentRangeHeaders.get(0);
-      Matcher matcher = CONTENT_RANGE_HEADER_PATTERN.matcher(contentRangeHeader);
-      if (matcher.find()) {
-        try {
-          long contentLengthFromRange =
-              Long.parseLong(matcher.group(2)) - Long.parseLong(matcher.group(1)) + 1;
-          if (contentLength < 0) {
-            // Some proxy servers strip the Content-Length header. Fall back to the length
-            // calculated here in this case.
-            contentLength = contentLengthFromRange;
-          } else if (contentLength != contentLengthFromRange) {
-            // If there is a discrepancy between the Content-Length and Content-Range headers,
-            // assume the one with the larger value is correct. We have seen cases where carrier
-            // change one of them to reduce the size of a request, but it is unlikely anybody
-            // would increase it.
-            Log.w(TAG, "Inconsistent headers [" + contentLengthHeader + "] [" + contentRangeHeader
-                + "]");
-            contentLength = Math.max(contentLength, contentLengthFromRange);
-          }
-        } catch (NumberFormatException e) {
-          Log.e(TAG, "Unexpected Content-Range [" + contentRangeHeader + "]");
-        }
-      }
-    }
-    return contentLength;
-  }
-
-  private static int getStatus(UrlRequest request) {
-    final ConditionVariable conditionVariable = new ConditionVariable();
-    final int[] statusHolder = new int[1];
-    request.getStatus(new UrlRequest.StatusListener() {
-      @Override
-      public void onStatus(int status) {
-        statusHolder[0] = status;
-        conditionVariable.open();
-      }
-    });
-    conditionVariable.block();
-    return statusHolder[0];
-  }
-
-  private static boolean isEmpty(List<?> list) {
-    return list == null || list.isEmpty();
-  }
-
-}
diff --git a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSourceFactory.java b/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSourceFactory.java
deleted file mode 100644
index d6237fc988..0000000000
--- a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSourceFactory.java
+++ /dev/null
@@ -1,180 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.cronet;
-
-import com.google.android.exoplayer2.upstream.DataSource;
-import com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory;
-import com.google.android.exoplayer2.upstream.HttpDataSource;
-import com.google.android.exoplayer2.upstream.HttpDataSource.BaseFactory;
-import com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
-import com.google.android.exoplayer2.upstream.HttpDataSource.InvalidContentTypeException;
-import com.google.android.exoplayer2.upstream.TransferListener;
-import com.google.android.exoplayer2.util.Predicate;
-import java.util.concurrent.Executor;
-import org.chromium.net.CronetEngine;
-
-/**
- * A {@link Factory} that produces {@link CronetDataSource}.
- */
-public final class CronetDataSourceFactory extends BaseFactory {
-
-  /**
-   * The default connection timeout, in milliseconds.
-   */
-  public static final int DEFAULT_CONNECT_TIMEOUT_MILLIS =
-      CronetDataSource.DEFAULT_CONNECT_TIMEOUT_MILLIS;
-
-  /**
-   * The default read timeout, in milliseconds.
-   */
-  public static final int DEFAULT_READ_TIMEOUT_MILLIS =
-      CronetDataSource.DEFAULT_READ_TIMEOUT_MILLIS;
-
-  private final CronetEngineWrapper cronetEngineWrapper;
-  private final Executor executor;
-  private final Predicate<String> contentTypePredicate;
-  private final TransferListener<? super DataSource> transferListener;
-  private final int connectTimeoutMs;
-  private final int readTimeoutMs;
-  private final boolean resetTimeoutOnRedirects;
-  private final HttpDataSource.Factory fallbackFactory;
-
-  /**
-   * Constructs a CronetDataSourceFactory.
-   * <p>
-   * If the {@link CronetEngineWrapper} fails to provide a {@link CronetEngine}, the provided
-   * fallback {@link HttpDataSource.Factory} will be used instead.
-   *
-   * Sets {@link CronetDataSource#DEFAULT_CONNECT_TIMEOUT_MILLIS} as the connection timeout, {@link
-   * CronetDataSource#DEFAULT_READ_TIMEOUT_MILLIS} as the read timeout and disables
-   * cross-protocol redirects.
-   *
-   * @param cronetEngineWrapper A {@link CronetEngineWrapper}.
-   * @param executor The {@link java.util.concurrent.Executor} that will perform the requests.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then an {@link InvalidContentTypeException} is thrown from
-   *     {@link CronetDataSource#open}.
-   * @param transferListener An optional listener.
-   * @param fallbackFactory A {@link HttpDataSource.Factory} which is used as a fallback in case
-   *     no suitable CronetEngine can be build.
-   */
-  public CronetDataSourceFactory(CronetEngineWrapper cronetEngineWrapper,
-      Executor executor, Predicate<String> contentTypePredicate,
-      TransferListener<? super DataSource> transferListener,
-      HttpDataSource.Factory fallbackFactory) {
-    this(cronetEngineWrapper, executor, contentTypePredicate, transferListener,
-        DEFAULT_CONNECT_TIMEOUT_MILLIS, DEFAULT_READ_TIMEOUT_MILLIS, false, fallbackFactory);
-  }
-
-  /**
-   * Constructs a CronetDataSourceFactory.
-   * <p>
-   * If the {@link CronetEngineWrapper} fails to provide a {@link CronetEngine}, a
-   * {@link DefaultHttpDataSourceFactory} will be used instead.
-   *
-   * Sets {@link CronetDataSource#DEFAULT_CONNECT_TIMEOUT_MILLIS} as the connection timeout, {@link
-   * CronetDataSource#DEFAULT_READ_TIMEOUT_MILLIS} as the read timeout and disables
-   * cross-protocol redirects.
-   *
-   * @param cronetEngineWrapper A {@link CronetEngineWrapper}.
-   * @param executor The {@link java.util.concurrent.Executor} that will perform the requests.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then an {@link InvalidContentTypeException} is thrown from
-   *     {@link CronetDataSource#open}.
-   * @param transferListener An optional listener.
-   * @param userAgent A user agent used to create a fallback HttpDataSource if needed.
-   */
-  public CronetDataSourceFactory(CronetEngineWrapper cronetEngineWrapper,
-      Executor executor, Predicate<String> contentTypePredicate,
-      TransferListener<? super DataSource> transferListener, String userAgent) {
-    this(cronetEngineWrapper, executor, contentTypePredicate, transferListener,
-        DEFAULT_CONNECT_TIMEOUT_MILLIS, DEFAULT_READ_TIMEOUT_MILLIS, false,
-        new DefaultHttpDataSourceFactory(userAgent, transferListener,
-            DEFAULT_CONNECT_TIMEOUT_MILLIS, DEFAULT_READ_TIMEOUT_MILLIS, false));
-  }
-
-  /**
-   * Constructs a CronetDataSourceFactory.
-   * <p>
-   * If the {@link CronetEngineWrapper} fails to provide a {@link CronetEngine}, a
-   * {@link DefaultHttpDataSourceFactory} will be used instead.
-   *
-   * @param cronetEngineWrapper A {@link CronetEngineWrapper}.
-   * @param executor The {@link java.util.concurrent.Executor} that will perform the requests.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then an {@link InvalidContentTypeException} is thrown from
-   *     {@link CronetDataSource#open}.
-   * @param transferListener An optional listener.
-   * @param connectTimeoutMs The connection timeout, in milliseconds.
-   * @param readTimeoutMs The read timeout, in milliseconds.
-   * @param resetTimeoutOnRedirects Whether the connect timeout is reset when a redirect occurs.
-   * @param userAgent A user agent used to create a fallback HttpDataSource if needed.
-   */
-  public CronetDataSourceFactory(CronetEngineWrapper cronetEngineWrapper,
-      Executor executor, Predicate<String> contentTypePredicate,
-      TransferListener<? super DataSource> transferListener, int connectTimeoutMs,
-      int readTimeoutMs, boolean resetTimeoutOnRedirects, String userAgent) {
-    this(cronetEngineWrapper, executor, contentTypePredicate, transferListener,
-        DEFAULT_CONNECT_TIMEOUT_MILLIS, DEFAULT_READ_TIMEOUT_MILLIS, resetTimeoutOnRedirects,
-        new DefaultHttpDataSourceFactory(userAgent, transferListener, connectTimeoutMs,
-            readTimeoutMs, resetTimeoutOnRedirects));
-  }
-
-  /**
-   * Constructs a CronetDataSourceFactory.
-   * <p>
-   * If the {@link CronetEngineWrapper} fails to provide a {@link CronetEngine}, the provided
-   * fallback {@link HttpDataSource.Factory} will be used instead.
-   *
-   * @param cronetEngineWrapper A {@link CronetEngineWrapper}.
-   * @param executor The {@link java.util.concurrent.Executor} that will perform the requests.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then an {@link InvalidContentTypeException} is thrown from
-   *     {@link CronetDataSource#open}.
-   * @param transferListener An optional listener.
-   * @param connectTimeoutMs The connection timeout, in milliseconds.
-   * @param readTimeoutMs The read timeout, in milliseconds.
-   * @param resetTimeoutOnRedirects Whether the connect timeout is reset when a redirect occurs.
-   * @param fallbackFactory A {@link HttpDataSource.Factory} which is used as a fallback in case
-   *     no suitable CronetEngine can be build.
-   */
-  public CronetDataSourceFactory(CronetEngineWrapper cronetEngineWrapper,
-      Executor executor, Predicate<String> contentTypePredicate,
-      TransferListener<? super DataSource> transferListener, int connectTimeoutMs,
-      int readTimeoutMs, boolean resetTimeoutOnRedirects,
-      HttpDataSource.Factory fallbackFactory) {
-    this.cronetEngineWrapper = cronetEngineWrapper;
-    this.executor = executor;
-    this.contentTypePredicate = contentTypePredicate;
-    this.transferListener = transferListener;
-    this.connectTimeoutMs = connectTimeoutMs;
-    this.readTimeoutMs = readTimeoutMs;
-    this.resetTimeoutOnRedirects = resetTimeoutOnRedirects;
-    this.fallbackFactory = fallbackFactory;
-  }
-
-  @Override
-  protected HttpDataSource createDataSourceInternal(HttpDataSource.RequestProperties
-      defaultRequestProperties) {
-    CronetEngine cronetEngine = cronetEngineWrapper.getCronetEngine();
-    if (cronetEngine == null) {
-      return fallbackFactory.createDataSource();
-    }
-    return new CronetDataSource(cronetEngine, executor, contentTypePredicate, transferListener,
-        connectTimeoutMs, readTimeoutMs, resetTimeoutOnRedirects, defaultRequestProperties);
-  }
-
-}
diff --git a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetEngineWrapper.java b/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetEngineWrapper.java
deleted file mode 100644
index efe30d6525..0000000000
--- a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetEngineWrapper.java
+++ /dev/null
@@ -1,238 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.cronet;
-
-import android.content.Context;
-import android.support.annotation.IntDef;
-import android.util.Log;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-import java.lang.reflect.Field;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.List;
-import org.chromium.net.CronetEngine;
-import org.chromium.net.CronetProvider;
-
-/**
- * A wrapper class for a {@link CronetEngine}.
- */
-public final class CronetEngineWrapper {
-
-  private static final String TAG = "CronetEngineWrapper";
-
-  private final CronetEngine cronetEngine;
-  private final @CronetEngineSource int cronetEngineSource;
-
-  /**
-   * Source of {@link CronetEngine}.
-   */
-  @Retention(RetentionPolicy.SOURCE)
-  @IntDef({SOURCE_NATIVE, SOURCE_GMS, SOURCE_UNKNOWN, SOURCE_USER_PROVIDED, SOURCE_UNAVAILABLE})
-  public @interface CronetEngineSource {}
-  /**
-   * Natively bundled Cronet implementation.
-   */
-  public static final int SOURCE_NATIVE = 0;
-  /**
-   * Cronet implementation from GMSCore.
-   */
-  public static final int SOURCE_GMS = 1;
-  /**
-   * Other (unknown) Cronet implementation.
-   */
-  public static final int SOURCE_UNKNOWN = 2;
-  /**
-   * User-provided Cronet engine.
-   */
-  public static final int SOURCE_USER_PROVIDED = 3;
-  /**
-   * No Cronet implementation available. Fallback Http provider is used if possible.
-   */
-  public static final int SOURCE_UNAVAILABLE = 4;
-
-  /**
-   * Creates a wrapper for a {@link CronetEngine} which automatically selects the most suitable
-   * {@link CronetProvider}. Sets wrapper to prefer natively bundled Cronet over GMSCore Cronet
-   * if both are available.
-   *
-   * @param context A context.
-   */
-  public CronetEngineWrapper(Context context) {
-    this(context, false);
-  }
-
-  /**
-   * Creates a wrapper for a {@link CronetEngine} which automatically selects the most suitable
-   * {@link CronetProvider} based on user preference.
-   *
-   * @param context A context.
-   * @param preferGMSCoreCronet Whether Cronet from GMSCore should be preferred over natively
-   *     bundled Cronet if both are available.
-   */
-  public CronetEngineWrapper(Context context, boolean preferGMSCoreCronet) {
-    CronetEngine cronetEngine = null;
-    @CronetEngineSource int cronetEngineSource = SOURCE_UNAVAILABLE;
-    List<CronetProvider> cronetProviders = CronetProvider.getAllProviders(context);
-    // Remove disabled and fallback Cronet providers from list
-    for (int i = cronetProviders.size() - 1; i >= 0; i--) {
-      if (!cronetProviders.get(i).isEnabled()
-          || CronetProvider.PROVIDER_NAME_FALLBACK.equals(cronetProviders.get(i).getName())) {
-        cronetProviders.remove(i);
-      }
-    }
-    // Sort remaining providers by type and version.
-    CronetProviderComparator providerComparator = new CronetProviderComparator(preferGMSCoreCronet);
-    Collections.sort(cronetProviders, providerComparator);
-    for (int i = 0; i < cronetProviders.size() && cronetEngine == null; i++) {
-      String providerName = cronetProviders.get(i).getName();
-      try {
-        cronetEngine = cronetProviders.get(i).createBuilder().build();
-        if (providerComparator.isNativeProvider(providerName)) {
-          cronetEngineSource = SOURCE_NATIVE;
-        } else if (providerComparator.isGMSCoreProvider(providerName)) {
-          cronetEngineSource = SOURCE_GMS;
-        } else {
-          cronetEngineSource = SOURCE_UNKNOWN;
-        }
-        Log.d(TAG, "CronetEngine built using " + providerName);
-      } catch (SecurityException e) {
-        Log.w(TAG, "Failed to build CronetEngine. Please check if current process has "
-            + "android.permission.ACCESS_NETWORK_STATE.");
-      } catch (UnsatisfiedLinkError e) {
-        Log.w(TAG, "Failed to link Cronet binaries. Please check if native Cronet binaries are "
-            + "bundled into your app.");
-      }
-    }
-    if (cronetEngine == null) {
-      Log.w(TAG, "Cronet not available. Using fallback provider.");
-    }
-    this.cronetEngine = cronetEngine;
-    this.cronetEngineSource = cronetEngineSource;
-  }
-
-  /**
-   * Creates a wrapper for an existing CronetEngine.
-   *
-   * @param cronetEngine An existing CronetEngine.
-   */
-  public CronetEngineWrapper(CronetEngine cronetEngine) {
-    this.cronetEngine = cronetEngine;
-    this.cronetEngineSource = SOURCE_USER_PROVIDED;
-  }
-
-  /**
-   * Returns the source of the wrapped {@link CronetEngine}.
-   *
-   * @return A {@link CronetEngineSource} value.
-   */
-  public @CronetEngineSource int getCronetEngineSource() {
-    return cronetEngineSource;
-  }
-
-  /**
-   * Returns the wrapped {@link CronetEngine}.
-   *
-   * @return The CronetEngine, or null if no CronetEngine is available.
-   */
-  /* package */ CronetEngine getCronetEngine() {
-    return cronetEngine;
-  }
-
-  private static class CronetProviderComparator implements Comparator<CronetProvider> {
-
-    private final String gmsCoreCronetName;
-    private final boolean preferGMSCoreCronet;
-
-    public CronetProviderComparator(boolean preferGMSCoreCronet) {
-      // GMSCore CronetProvider classes are only available in some configurations.
-      // Thus, we use reflection to copy static name.
-      String gmsCoreVersionString = null;
-      try {
-        Class<?> cronetProviderInstallerClass =
-            Class.forName("com.google.android.gms.net.CronetProviderInstaller");
-        Field providerNameField = cronetProviderInstallerClass.getDeclaredField("PROVIDER_NAME");
-        gmsCoreVersionString = (String) providerNameField.get(null);
-      } catch (ClassNotFoundException e) {
-        // GMSCore CronetProvider not available.
-      } catch (NoSuchFieldException e) {
-        // GMSCore CronetProvider not available.
-      } catch (IllegalAccessException e) {
-        // GMSCore CronetProvider not available.
-      }
-      gmsCoreCronetName = gmsCoreVersionString;
-      this.preferGMSCoreCronet = preferGMSCoreCronet;
-    }
-
-    @Override
-    public int compare(CronetProvider providerLeft, CronetProvider providerRight) {
-      int typePreferenceLeft = evaluateCronetProviderType(providerLeft.getName());
-      int typePreferenceRight = evaluateCronetProviderType(providerRight.getName());
-      if (typePreferenceLeft != typePreferenceRight) {
-        return typePreferenceLeft - typePreferenceRight;
-      }
-      return -compareVersionStrings(providerLeft.getVersion(), providerRight.getVersion());
-    }
-
-    public boolean isNativeProvider(String providerName) {
-      return CronetProvider.PROVIDER_NAME_APP_PACKAGED.equals(providerName);
-    }
-
-    public boolean isGMSCoreProvider(String providerName) {
-      return gmsCoreCronetName != null && gmsCoreCronetName.equals(providerName);
-    }
-
-    /**
-     * Convert Cronet provider name into a sortable preference value.
-     * Smaller values are preferred.
-     */
-    private int evaluateCronetProviderType(String providerName) {
-      if (isNativeProvider(providerName)) {
-        return 1;
-      }
-      if (isGMSCoreProvider(providerName)) {
-        return preferGMSCoreCronet ? 0 : 2;
-      }
-      // Unknown provider type.
-      return -1;
-    }
-
-    /**
-     * Compares version strings of format "12.123.35.23".
-     */
-    private static int compareVersionStrings(String versionLeft, String versionRight) {
-      if (versionLeft == null || versionRight == null) {
-        return 0;
-      }
-      String[] versionStringsLeft = versionLeft.split("\\.");
-      String[] versionStringsRight = versionRight.split("\\.");
-      int minLength = Math.min(versionStringsLeft.length, versionStringsRight.length);
-      for (int i = 0; i < minLength; i++) {
-        if (!versionStringsLeft[i].equals(versionStringsRight[i])) {
-          try {
-            int versionIntLeft = Integer.parseInt(versionStringsLeft[i]);
-            int versionIntRight = Integer.parseInt(versionStringsRight[i]);
-            return versionIntLeft - versionIntRight;
-          } catch (NumberFormatException e) {
-            return 0;
-          }
-        }
-      }
-      return 0;
-    }
-  }
-
-}
diff --git a/extensions/ffmpeg/README.md b/extensions/ffmpeg/README.md
deleted file mode 100644
index 57b637d1e2..0000000000
--- a/extensions/ffmpeg/README.md
+++ /dev/null
@@ -1,147 +0,0 @@
-# ExoPlayer FFmpeg extension #
-
-The FFmpeg extension provides `FfmpegAudioRenderer`, which uses FFmpeg for
-decoding and can render audio encoded in a variety of formats.
-
-## Build instructions ##
-
-To use this extension you need to clone the ExoPlayer repository and depend on
-its modules locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][]. The extension is not provided via JCenter (see [#2781][]
-for more information).
-
-In addition, it's necessary to build the extension's native components as
-follows:
-
-* Set the following environment variables:
-
-```
-cd "<path to exoplayer checkout>"
-EXOPLAYER_ROOT="$(pwd)"
-FFMPEG_EXT_PATH="${EXOPLAYER_ROOT}/extensions/ffmpeg/src/main"
-```
-
-* Download the [Android NDK][] and set its location in an environment variable:
-
-```
-NDK_PATH="<path to Android NDK>"
-```
-
-* Set up host platform ("darwin-x86_64" for Mac OS X):
-
-```
-HOST_PLATFORM="linux-x86_64"
-```
-
-* Fetch and build FFmpeg. The configuration flags determine which formats will
-  be supported. See the [Supported formats][] page for more details of the
-  available flags.
-
-For example, to fetch and build for armeabi-v7a,
-  arm64-v8a and x86 on Linux x86_64:
-
-```
-COMMON_OPTIONS="\
-    --target-os=android \
-    --disable-static \
-    --enable-shared \
-    --disable-doc \
-    --disable-programs \
-    --disable-everything \
-    --disable-avdevice \
-    --disable-avformat \
-    --disable-swscale \
-    --disable-postproc \
-    --disable-avfilter \
-    --disable-symver \
-    --disable-swresample \
-    --enable-avresample \
-    --enable-decoder=vorbis \
-    --enable-decoder=opus \
-    --enable-decoder=flac \
-    " && \
-cd "${FFMPEG_EXT_PATH}/jni" && \
-git clone git://source.ffmpeg.org/ffmpeg ffmpeg && cd ffmpeg && \
-./configure \
-    --libdir=android-libs/armeabi-v7a \
-    --arch=arm \
-    --cpu=armv7-a \
-    --cross-prefix="${NDK_PATH}/toolchains/arm-linux-androideabi-4.9/prebuilt/${HOST_PLATFORM}/bin/arm-linux-androideabi-" \
-    --sysroot="${NDK_PATH}/platforms/android-9/arch-arm/" \
-    --extra-cflags="-march=armv7-a -mfloat-abi=softfp" \
-    --extra-ldflags="-Wl,--fix-cortex-a8" \
-    --extra-ldexeflags=-pie \
-    ${COMMON_OPTIONS} \
-    && \
-make -j4 && make install-libs && \
-make clean && ./configure \
-    --libdir=android-libs/arm64-v8a \
-    --arch=aarch64 \
-    --cpu=armv8-a \
-    --cross-prefix="${NDK_PATH}/toolchains/aarch64-linux-android-4.9/prebuilt/${HOST_PLATFORM}/bin/aarch64-linux-android-" \
-    --sysroot="${NDK_PATH}/platforms/android-21/arch-arm64/" \
-    --extra-ldexeflags=-pie \
-    ${COMMON_OPTIONS} \
-    && \
-make -j4 && make install-libs && \
-make clean && ./configure \
-    --libdir=android-libs/x86 \
-    --arch=x86 \
-    --cpu=i686 \
-    --cross-prefix="${NDK_PATH}/toolchains/x86-4.9/prebuilt/${HOST_PLATFORM}/bin/i686-linux-android-" \
-    --sysroot="${NDK_PATH}/platforms/android-9/arch-x86/" \
-    --extra-ldexeflags=-pie \
-    --disable-asm \
-    ${COMMON_OPTIONS} \
-    && \
-make -j4 && make install-libs && \
-make clean
-```
-
-* Build the JNI native libraries, setting `APP_ABI` to include the architectures
-  built in the previous step. For example:
-
-```
-cd "${FFMPEG_EXT_PATH}"/jni && \
-${NDK_PATH}/ndk-build APP_ABI="armeabi-v7a arm64-v8a x86" -j4
-```
-
-## Using the extension ##
-
-Once you've followed the instructions above to check out, build and depend on
-the extension, the next step is to tell ExoPlayer to use `FfmpegAudioRenderer`.
-How you do this depends on which player API you're using:
-
-* If you're passing a `DefaultRenderersFactory` to
-  `ExoPlayerFactory.newSimpleInstance`, you can enable using the extension by
-  setting the `extensionRendererMode` parameter of the `DefaultRenderersFactory`
-  constructor to `EXTENSION_RENDERER_MODE_ON`. This will use
-  `FfmpegAudioRenderer` for playback if `MediaCodecAudioRenderer` doesn't
-  support the input format. Pass `EXTENSION_RENDERER_MODE_PREFER` to give
-  `FfmpegAudioRenderer` priority over `MediaCodecAudioRenderer`.
-* If you've subclassed `DefaultRenderersFactory`, add an `FfmpegAudioRenderer`
-  to the output list in `buildAudioRenderers`. ExoPlayer will use the first
-  `Renderer` in the list that supports the input media format.
-* If you've implemented your own `RenderersFactory`, return an
-  `FfmpegAudioRenderer` instance from `createRenderers`. ExoPlayer will use the
-  first `Renderer` in the returned array that supports the input media format.
-* If you're using `ExoPlayerFactory.newInstance`, pass an `FfmpegAudioRenderer`
-  in the array of `Renderer`s. ExoPlayer will use the first `Renderer` in the
-  list that supports the input media format.
-
-Note: These instructions assume you're using `DefaultTrackSelector`. If you have
-a custom track selector the choice of `Renderer` is up to your implementation,
-so you need to make sure you are passing an `FfmpegAudioRenderer` to the player,
-then implement your own logic to use the renderer for a given track.
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-[Android NDK]: https://developer.android.com/tools/sdk/ndk/index.html
-[#2781]: https://github.com/google/ExoPlayer/issues/2781
-[Supported formats]: https://google.github.io/ExoPlayer/supported-formats.html#ffmpeg-extension
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.ffmpeg.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/ffmpeg/build.gradle b/extensions/ffmpeg/build.gradle
deleted file mode 100644
index c606bb7236..0000000000
--- a/extensions/ffmpeg/build.gradle
+++ /dev/null
@@ -1,35 +0,0 @@
-// Copyright (C) 2016 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion project.ext.minSdkVersion
-        targetSdkVersion project.ext.targetSdkVersion
-        consumerProguardFiles 'proguard-rules.txt'
-    }
-
-    sourceSets.main {
-        jniLibs.srcDir 'src/main/libs'
-        jni.srcDirs = [] // Disable the automatic ndk-build call by Android Studio.
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-}
\ No newline at end of file
diff --git a/extensions/ffmpeg/proguard-rules.txt b/extensions/ffmpeg/proguard-rules.txt
deleted file mode 100644
index 7f62d2b7e7..0000000000
--- a/extensions/ffmpeg/proguard-rules.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-# Proguard rules specific to the FFmpeg extension.
-
-# This prevents the names of native methods from being obfuscated.
--keepclasseswithmembernames class * {
-    native <methods>;
-}
diff --git a/extensions/ffmpeg/src/main/AndroidManifest.xml b/extensions/ffmpeg/src/main/AndroidManifest.xml
deleted file mode 100644
index 9b5c5b4126..0000000000
--- a/extensions/ffmpeg/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest package="com.google.android.exoplayer2.ext.ffmpeg"/>
diff --git a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegAudioRenderer.java b/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegAudioRenderer.java
deleted file mode 100644
index 453a18476e..0000000000
--- a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegAudioRenderer.java
+++ /dev/null
@@ -1,91 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ffmpeg;
-
-import android.os.Handler;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.audio.AudioProcessor;
-import com.google.android.exoplayer2.audio.AudioRendererEventListener;
-import com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer;
-import com.google.android.exoplayer2.drm.ExoMediaCrypto;
-import com.google.android.exoplayer2.util.MimeTypes;
-
-/**
- * Decodes and renders audio using FFmpeg.
- */
-public final class FfmpegAudioRenderer extends SimpleDecoderAudioRenderer {
-
-  /**
-   * The number of input and output buffers.
-   */
-  private static final int NUM_BUFFERS = 16;
-  /**
-   * The initial input buffer size. Input buffers are reallocated dynamically if this value is
-   * insufficient.
-   */
-  private static final int INITIAL_INPUT_BUFFER_SIZE = 960 * 6;
-
-  private FfmpegDecoder decoder;
-
-  public FfmpegAudioRenderer() {
-    this(null, null);
-  }
-
-  /**
-   * @param eventHandler A handler to use when delivering events to {@code eventListener}. May be
-   *     null if delivery of events is not required.
-   * @param eventListener A listener of events. May be null if delivery of events is not required.
-   * @param audioProcessors Optional {@link AudioProcessor}s that will process audio before output.
-   */
-  public FfmpegAudioRenderer(Handler eventHandler, AudioRendererEventListener eventListener,
-      AudioProcessor... audioProcessors) {
-    super(eventHandler, eventListener, audioProcessors);
-  }
-
-  @Override
-  protected int supportsFormatInternal(Format format) {
-    if (!FfmpegLibrary.isAvailable()) {
-      return FORMAT_UNSUPPORTED_TYPE;
-    }
-    String mimeType = format.sampleMimeType;
-    return FfmpegLibrary.supportsFormat(mimeType) ? FORMAT_HANDLED
-        : MimeTypes.isAudio(mimeType) ? FORMAT_UNSUPPORTED_SUBTYPE : FORMAT_UNSUPPORTED_TYPE;
-  }
-
-  @Override
-  public final int supportsMixedMimeTypeAdaptation() throws ExoPlaybackException {
-    return ADAPTIVE_NOT_SEAMLESS;
-  }
-
-  @Override
-  protected FfmpegDecoder createDecoder(Format format, ExoMediaCrypto mediaCrypto)
-      throws FfmpegDecoderException {
-    decoder = new FfmpegDecoder(NUM_BUFFERS, NUM_BUFFERS, INITIAL_INPUT_BUFFER_SIZE,
-        format.sampleMimeType, format.initializationData);
-    return decoder;
-  }
-
-  @Override
-  public Format getOutputFormat() {
-    int channelCount = decoder.getChannelCount();
-    int sampleRate = decoder.getSampleRate();
-    return Format.createAudioSampleFormat(null, MimeTypes.AUDIO_RAW, null, Format.NO_VALUE,
-        Format.NO_VALUE, channelCount, sampleRate, C.ENCODING_PCM_16BIT, null, null, 0, null);
-  }
-
-}
diff --git a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder.java b/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder.java
deleted file mode 100644
index 2af2101ee7..0000000000
--- a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoder.java
+++ /dev/null
@@ -1,164 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ffmpeg;
-
-import com.google.android.exoplayer2.decoder.DecoderInputBuffer;
-import com.google.android.exoplayer2.decoder.SimpleDecoder;
-import com.google.android.exoplayer2.decoder.SimpleOutputBuffer;
-import com.google.android.exoplayer2.util.MimeTypes;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import java.nio.ByteBuffer;
-import java.util.List;
-
-/**
- * FFmpeg audio decoder.
- */
-/* package */ final class FfmpegDecoder extends
-    SimpleDecoder<DecoderInputBuffer, SimpleOutputBuffer, FfmpegDecoderException> {
-
-  // Space for 64 ms of 6 channel 48 kHz 16-bit PCM audio.
-  private static final int OUTPUT_BUFFER_SIZE = 1536 * 6 * 2 * 2;
-
-  private final String codecName;
-  private final byte[] extraData;
-
-  private long nativeContext; // May be reassigned on resetting the codec.
-  private boolean hasOutputFormat;
-  private volatile int channelCount;
-  private volatile int sampleRate;
-
-  public FfmpegDecoder(int numInputBuffers, int numOutputBuffers, int initialInputBufferSize,
-      String mimeType, List<byte[]> initializationData) throws FfmpegDecoderException {
-    super(new DecoderInputBuffer[numInputBuffers], new SimpleOutputBuffer[numOutputBuffers]);
-    if (!FfmpegLibrary.isAvailable()) {
-      throw new FfmpegDecoderException("Failed to load decoder native libraries.");
-    }
-    codecName = FfmpegLibrary.getCodecName(mimeType);
-    extraData = getExtraData(mimeType, initializationData);
-    nativeContext = ffmpegInitialize(codecName, extraData);
-    if (nativeContext == 0) {
-      throw new FfmpegDecoderException("Initialization failed.");
-    }
-    setInitialInputBufferSize(initialInputBufferSize);
-  }
-
-  @Override
-  public String getName() {
-    return "ffmpeg" + FfmpegLibrary.getVersion() + "-" + codecName;
-  }
-
-  @Override
-  public DecoderInputBuffer createInputBuffer() {
-    return new DecoderInputBuffer(DecoderInputBuffer.BUFFER_REPLACEMENT_MODE_DIRECT);
-  }
-
-  @Override
-  public SimpleOutputBuffer createOutputBuffer() {
-    return new SimpleOutputBuffer(this);
-  }
-
-  @Override
-  public FfmpegDecoderException decode(DecoderInputBuffer inputBuffer,
-      SimpleOutputBuffer outputBuffer, boolean reset) {
-    if (reset) {
-      nativeContext = ffmpegReset(nativeContext, extraData);
-      if (nativeContext == 0) {
-        return new FfmpegDecoderException("Error resetting (see logcat).");
-      }
-    }
-    ByteBuffer inputData = inputBuffer.data;
-    int inputSize = inputData.limit();
-    ByteBuffer outputData = outputBuffer.init(inputBuffer.timeUs, OUTPUT_BUFFER_SIZE);
-    int result = ffmpegDecode(nativeContext, inputData, inputSize, outputData, OUTPUT_BUFFER_SIZE);
-    if (result < 0) {
-      return new FfmpegDecoderException("Error decoding (see logcat). Code: " + result);
-    }
-    if (!hasOutputFormat) {
-      channelCount = ffmpegGetChannelCount(nativeContext);
-      sampleRate = ffmpegGetSampleRate(nativeContext);
-      if (sampleRate == 0 && "alac".equals(codecName)) {
-        // ALAC decoder did not set the sample rate in earlier versions of FFMPEG.
-        // See https://trac.ffmpeg.org/ticket/6096
-        ParsableByteArray parsableExtraData = new ParsableByteArray(extraData);
-        parsableExtraData.setPosition(extraData.length - 4);
-        sampleRate = parsableExtraData.readUnsignedIntToInt();
-      }
-      hasOutputFormat = true;
-    }
-    outputBuffer.data.position(0);
-    outputBuffer.data.limit(result);
-    return null;
-  }
-
-  @Override
-  public void release() {
-    super.release();
-    ffmpegRelease(nativeContext);
-    nativeContext = 0;
-  }
-
-  /**
-   * Returns the channel count of output audio. May only be called after {@link #decode}.
-   */
-  public int getChannelCount() {
-    return channelCount;
-  }
-
-  /**
-   * Returns the sample rate of output audio. May only be called after {@link #decode}.
-   */
-  public int getSampleRate() {
-    return sampleRate;
-  }
-
-  /**
-   * Returns FFmpeg-compatible codec-specific initialization data ("extra data"), or {@code null} if
-   * not required.
-   */
-  private static byte[] getExtraData(String mimeType, List<byte[]> initializationData) {
-    switch (mimeType) {
-      case MimeTypes.AUDIO_AAC:
-      case MimeTypes.AUDIO_ALAC:
-      case MimeTypes.AUDIO_OPUS:
-        return initializationData.get(0);
-      case MimeTypes.AUDIO_VORBIS:
-        byte[] header0 = initializationData.get(0);
-        byte[] header1 = initializationData.get(1);
-        byte[] extraData = new byte[header0.length + header1.length + 6];
-        extraData[0] = (byte) (header0.length >> 8);
-        extraData[1] = (byte) (header0.length & 0xFF);
-        System.arraycopy(header0, 0, extraData, 2, header0.length);
-        extraData[header0.length + 2] = 0;
-        extraData[header0.length + 3] = 0;
-        extraData[header0.length + 4] =  (byte) (header1.length >> 8);
-        extraData[header0.length + 5] = (byte) (header1.length & 0xFF);
-        System.arraycopy(header1, 0, extraData, header0.length + 6, header1.length);
-        return extraData;
-      default:
-        // Other codecs do not require extra data.
-        return null;
-    }
-  }
-
-  private native long ffmpegInitialize(String codecName, byte[] extraData);
-  private native int ffmpegDecode(long context, ByteBuffer inputData, int inputSize,
-      ByteBuffer outputData, int outputSize);
-  private native int ffmpegGetChannelCount(long context);
-  private native int ffmpegGetSampleRate(long context);
-  private native long ffmpegReset(long context, byte[] extraData);
-  private native void ffmpegRelease(long context);
-
-}
diff --git a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoderException.java b/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoderException.java
deleted file mode 100644
index b4cf327198..0000000000
--- a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegDecoderException.java
+++ /dev/null
@@ -1,29 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ffmpeg;
-
-import com.google.android.exoplayer2.audio.AudioDecoderException;
-
-/**
- * Thrown when an FFmpeg decoder error occurs.
- */
-public final class FfmpegDecoderException extends AudioDecoderException {
-
-  /* package */ FfmpegDecoderException(String message) {
-    super(message);
-  }
-
-}
diff --git a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegLibrary.java b/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegLibrary.java
deleted file mode 100644
index 9b3bbbb6ab..0000000000
--- a/extensions/ffmpeg/src/main/java/com/google/android/exoplayer2/ext/ffmpeg/FfmpegLibrary.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ffmpeg;
-
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.util.LibraryLoader;
-import com.google.android.exoplayer2.util.MimeTypes;
-
-/**
- * Configures and queries the underlying native library.
- */
-public final class FfmpegLibrary {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.ffmpeg");
-  }
-
-  private static final LibraryLoader LOADER =
-      new LibraryLoader("avutil", "avresample", "avcodec", "ffmpeg");
-
-  private FfmpegLibrary() {}
-
-  /**
-   * Override the names of the FFmpeg native libraries. If an application wishes to call this
-   * method, it must do so before calling any other method defined by this class, and before
-   * instantiating a {@link FfmpegAudioRenderer} instance.
-   *
-   * @param libraries The names of the FFmpeg native libraries.
-   */
-  public static void setLibraries(String... libraries) {
-    LOADER.setLibraries(libraries);
-  }
-
-  /**
-   * Returns whether the underlying library is available, loading it if necessary.
-   */
-  public static boolean isAvailable() {
-    return LOADER.isAvailable();
-  }
-
-  /**
-   * Returns the version of the underlying library if available, or null otherwise.
-   */
-  public static String getVersion() {
-    return isAvailable() ? ffmpegGetVersion() : null;
-  }
-
-  /**
-   * Returns whether the underlying library supports the specified MIME type.
-   *
-   * @param mimeType The MIME type to check.
-   */
-  public static boolean supportsFormat(String mimeType) {
-    if (!isAvailable()) {
-      return false;
-    }
-    String codecName = getCodecName(mimeType);
-    return codecName != null && ffmpegHasDecoder(codecName);
-  }
-
-  /**
-   * Returns the name of the FFmpeg decoder that could be used to decode {@code mimeType}.
-   */
-  /* package */ static String getCodecName(String mimeType) {
-    switch (mimeType) {
-      case MimeTypes.AUDIO_AAC:
-        return "aac";
-      case MimeTypes.AUDIO_MPEG:
-      case MimeTypes.AUDIO_MPEG_L1:
-      case MimeTypes.AUDIO_MPEG_L2:
-        return "mp3";
-      case MimeTypes.AUDIO_AC3:
-        return "ac3";
-      case MimeTypes.AUDIO_E_AC3:
-        return "eac3";
-      case MimeTypes.AUDIO_TRUEHD:
-        return "truehd";
-      case MimeTypes.AUDIO_DTS:
-      case MimeTypes.AUDIO_DTS_HD:
-        return "dca";
-      case MimeTypes.AUDIO_VORBIS:
-        return "vorbis";
-      case MimeTypes.AUDIO_OPUS:
-        return "opus";
-      case MimeTypes.AUDIO_AMR_NB:
-        return "amrnb";
-      case MimeTypes.AUDIO_AMR_WB:
-        return "amrwb";
-      case MimeTypes.AUDIO_FLAC:
-        return "flac";
-      case MimeTypes.AUDIO_ALAC:
-        return "alac";
-      default:
-        return null;
-    }
-  }
-
-  private static native String ffmpegGetVersion();
-  private static native boolean ffmpegHasDecoder(String codecName);
-
-}
diff --git a/extensions/ffmpeg/src/main/jni/Android.mk b/extensions/ffmpeg/src/main/jni/Android.mk
deleted file mode 100644
index 046f90a5b2..0000000000
--- a/extensions/ffmpeg/src/main/jni/Android.mk
+++ /dev/null
@@ -1,40 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-LOCAL_PATH := $(call my-dir)
-
-include $(CLEAR_VARS)
-LOCAL_MODULE    := libavcodec
-LOCAL_SRC_FILES := ffmpeg/android-libs/$(TARGET_ARCH_ABI)/$(LOCAL_MODULE).so
-include $(PREBUILT_SHARED_LIBRARY)
-
-include $(CLEAR_VARS)
-LOCAL_MODULE    := libavutil
-LOCAL_SRC_FILES := ffmpeg/android-libs/$(TARGET_ARCH_ABI)/$(LOCAL_MODULE).so
-include $(PREBUILT_SHARED_LIBRARY)
-
-include $(CLEAR_VARS)
-LOCAL_MODULE    := libavresample
-LOCAL_SRC_FILES := ffmpeg/android-libs/$(TARGET_ARCH_ABI)/$(LOCAL_MODULE).so
-include $(PREBUILT_SHARED_LIBRARY)
-
-include $(CLEAR_VARS)
-LOCAL_MODULE := ffmpeg
-LOCAL_SRC_FILES := ffmpeg_jni.cc
-LOCAL_C_INCLUDES := ffmpeg
-LOCAL_SHARED_LIBRARIES := libavcodec libavresample libavutil
-LOCAL_LDLIBS := -Lffmpeg/android-libs/$(TARGET_ARCH_ABI) -llog
-include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/ffmpeg/src/main/jni/Application.mk b/extensions/ffmpeg/src/main/jni/Application.mk
deleted file mode 100644
index 59bf5f8f87..0000000000
--- a/extensions/ffmpeg/src/main/jni/Application.mk
+++ /dev/null
@@ -1,20 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-APP_OPTIM := release
-APP_STL := gnustl_static
-APP_CPPFLAGS := -frtti
-APP_PLATFORM := android-9
diff --git a/extensions/ffmpeg/src/main/jni/ffmpeg_jni.cc b/extensions/ffmpeg/src/main/jni/ffmpeg_jni.cc
deleted file mode 100644
index fa615f2ec1..0000000000
--- a/extensions/ffmpeg/src/main/jni/ffmpeg_jni.cc
+++ /dev/null
@@ -1,335 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#include <jni.h>
-#include <stdlib.h>
-#include <android/log.h>
-
-extern "C" {
-#ifdef __cplusplus
-#define __STDC_CONSTANT_MACROS
-#ifdef _STDINT_H
-#undef _STDINT_H
-#endif
-#include <stdint.h>
-#endif
-#include <libavcodec/avcodec.h>
-#include <libavresample/avresample.h>
-#include <libavutil/error.h>
-#include <libavutil/opt.h>
-}
-
-#define LOG_TAG "ffmpeg_jni"
-#define LOGE(...) ((void)__android_log_print(ANDROID_LOG_ERROR, LOG_TAG, \
-                   __VA_ARGS__))
-
-#define DECODER_FUNC(RETURN_TYPE, NAME, ...) \
-  extern "C" { \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_ffmpeg_FfmpegDecoder_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__);\
-  } \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_ffmpeg_FfmpegDecoder_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__)\
-
-#define LIBRARY_FUNC(RETURN_TYPE, NAME, ...) \
-  extern "C" { \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_ffmpeg_FfmpegLibrary_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__);\
-  } \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_ffmpeg_FfmpegLibrary_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__)\
-
-#define ERROR_STRING_BUFFER_LENGTH 256
-
-// Request a format corresponding to AudioFormat.ENCODING_PCM_16BIT.
-static const AVSampleFormat OUTPUT_FORMAT = AV_SAMPLE_FMT_S16;
-
-/**
- * Returns the AVCodec with the specified name, or NULL if it is not available.
- */
-AVCodec *getCodecByName(JNIEnv* env, jstring codecName);
-
-/**
- * Allocates and opens a new AVCodecContext for the specified codec, passing the
- * provided extraData as initialization data for the decoder if it is non-NULL.
- * Returns the created context.
- */
-AVCodecContext *createContext(JNIEnv *env, AVCodec *codec,
-                              jbyteArray extraData);
-
-/**
- * Decodes the packet into the output buffer, returning the number of bytes
- * written, or a negative value in the case of an error.
- */
-int decodePacket(AVCodecContext *context, AVPacket *packet,
-                 uint8_t *outputBuffer, int outputSize);
-
-/**
- * Outputs a log message describing the avcodec error number.
- */
-void logError(const char *functionName, int errorNumber);
-
-/**
- * Releases the specified context.
- */
-void releaseContext(AVCodecContext *context);
-
-jint JNI_OnLoad(JavaVM *vm, void *reserved) {
-  JNIEnv *env;
-  if (vm->GetEnv(reinterpret_cast<void**>(&env), JNI_VERSION_1_6) != JNI_OK) {
-    return -1;
-  }
-  avcodec_register_all();
-  return JNI_VERSION_1_6;
-}
-
-LIBRARY_FUNC(jstring, ffmpegGetVersion) {
-  return env->NewStringUTF(LIBAVCODEC_IDENT);
-}
-
-LIBRARY_FUNC(jboolean, ffmpegHasDecoder, jstring codecName) {
-  return getCodecByName(env, codecName) != NULL;
-}
-
-DECODER_FUNC(jlong, ffmpegInitialize, jstring codecName, jbyteArray extraData) {
-  AVCodec *codec = getCodecByName(env, codecName);
-  if (!codec) {
-    LOGE("Codec not found.");
-    return 0L;
-  }
-  return (jlong) createContext(env, codec, extraData);
-}
-
-DECODER_FUNC(jint, ffmpegDecode, jlong context, jobject inputData,
-    jint inputSize, jobject outputData, jint outputSize) {
-  if (!context) {
-    LOGE("Context must be non-NULL.");
-    return -1;
-  }
-  if (!inputData || !outputData) {
-    LOGE("Input and output buffers must be non-NULL.");
-    return -1;
-  }
-  if (inputSize < 0) {
-    LOGE("Invalid input buffer size: %d.", inputSize);
-    return -1;
-  }
-  if (outputSize < 0) {
-    LOGE("Invalid output buffer length: %d", outputSize);
-    return -1;
-  }
-  uint8_t *inputBuffer = (uint8_t *) env->GetDirectBufferAddress(inputData);
-  uint8_t *outputBuffer = (uint8_t *) env->GetDirectBufferAddress(outputData);
-  AVPacket packet;
-  av_init_packet(&packet);
-  packet.data = inputBuffer;
-  packet.size = inputSize;
-  return decodePacket((AVCodecContext *) context, &packet, outputBuffer,
-                      outputSize);
-}
-
-DECODER_FUNC(jint, ffmpegGetChannelCount, jlong context) {
-  if (!context) {
-    LOGE("Context must be non-NULL.");
-    return -1;
-  }
-  return ((AVCodecContext *) context)->channels;
-}
-
-DECODER_FUNC(jint, ffmpegGetSampleRate, jlong context) {
-  if (!context) {
-    LOGE("Context must be non-NULL.");
-    return -1;
-  }
-  return ((AVCodecContext *) context)->sample_rate;
-}
-
-DECODER_FUNC(jlong, ffmpegReset, jlong jContext, jbyteArray extraData) {
-  AVCodecContext *context = (AVCodecContext *) jContext;
-  if (!context) {
-    LOGE("Tried to reset without a context.");
-    return 0L;
-  }
-
-  AVCodecID codecId = context->codec_id;
-  if (codecId == AV_CODEC_ID_TRUEHD) {
-    // Release and recreate the context if the codec is TrueHD.
-    // TODO: Figure out why flushing doesn't work for this codec.
-    releaseContext(context);
-    AVCodec *codec = avcodec_find_decoder(codecId);
-    if (!codec) {
-      LOGE("Unexpected error finding codec %d.", codecId);
-      return 0L;
-    }
-    return (jlong) createContext(env, codec, extraData);
-  }
-
-  avcodec_flush_buffers(context);
-  return (jlong) context;
-}
-
-DECODER_FUNC(void, ffmpegRelease, jlong context) {
-  if (context) {
-    releaseContext((AVCodecContext *) context);
-  }
-}
-
-AVCodec *getCodecByName(JNIEnv* env, jstring codecName) {
-  if (!codecName) {
-    return NULL;
-  }
-  const char *codecNameChars = env->GetStringUTFChars(codecName, NULL);
-  AVCodec *codec = avcodec_find_decoder_by_name(codecNameChars);
-  env->ReleaseStringUTFChars(codecName, codecNameChars);
-  return codec;
-}
-
-AVCodecContext *createContext(JNIEnv *env, AVCodec *codec,
-                              jbyteArray extraData) {
-  AVCodecContext *context = avcodec_alloc_context3(codec);
-  if (!context) {
-    LOGE("Failed to allocate context.");
-    return NULL;
-  }
-  context->request_sample_fmt = OUTPUT_FORMAT;
-  if (extraData) {
-    jsize size = env->GetArrayLength(extraData);
-    context->extradata_size = size;
-    context->extradata =
-        (uint8_t *) av_malloc(size + AV_INPUT_BUFFER_PADDING_SIZE);
-    if (!context->extradata) {
-      LOGE("Failed to allocate extradata.");
-      releaseContext(context);
-      return NULL;
-    }
-    env->GetByteArrayRegion(extraData, 0, size, (jbyte *) context->extradata);
-  }
-  int result = avcodec_open2(context, codec, NULL);
-  if (result < 0) {
-    logError("avcodec_open2", result);
-    releaseContext(context);
-    return NULL;
-  }
-  return context;
-}
-
-int decodePacket(AVCodecContext *context, AVPacket *packet,
-                 uint8_t *outputBuffer, int outputSize) {
-  int result = 0;
-  // Queue input data.
-  result = avcodec_send_packet(context, packet);
-  if (result) {
-    logError("avcodec_send_packet", result);
-    return result;
-  }
-
-  // Dequeue output data until it runs out.
-  int outSize = 0;
-  while (true) {
-    AVFrame *frame = av_frame_alloc();
-    if (!frame) {
-      LOGE("Failed to allocate output frame.");
-      return -1;
-    }
-    result = avcodec_receive_frame(context, frame);
-    if (result) {
-      av_frame_free(&frame);
-      if (result == AVERROR(EAGAIN)) {
-        break;
-      }
-      logError("avcodec_receive_frame", result);
-      return result;
-    }
-
-    // Resample output.
-    AVSampleFormat sampleFormat = context->sample_fmt;
-    int channelCount = context->channels;
-    int channelLayout = context->channel_layout;
-    int sampleRate = context->sample_rate;
-    int sampleCount = frame->nb_samples;
-    int dataSize = av_samples_get_buffer_size(NULL, channelCount, sampleCount,
-                                              sampleFormat, 1);
-    AVAudioResampleContext *resampleContext;
-    if (context->opaque) {
-      resampleContext = (AVAudioResampleContext *) context->opaque;
-    } else {
-      resampleContext = avresample_alloc_context();
-      av_opt_set_int(resampleContext, "in_channel_layout",  channelLayout, 0);
-      av_opt_set_int(resampleContext, "out_channel_layout", channelLayout, 0);
-      av_opt_set_int(resampleContext, "in_sample_rate", sampleRate, 0);
-      av_opt_set_int(resampleContext, "out_sample_rate", sampleRate, 0);
-      av_opt_set_int(resampleContext, "in_sample_fmt", sampleFormat, 0);
-      av_opt_set_int(resampleContext, "out_sample_fmt", OUTPUT_FORMAT, 0);
-      result = avresample_open(resampleContext);
-      if (result < 0) {
-        logError("avresample_open", result);
-        av_frame_free(&frame);
-        return -1;
-      }
-      context->opaque = resampleContext;
-    }
-    int inSampleSize = av_get_bytes_per_sample(sampleFormat);
-    int outSampleSize = av_get_bytes_per_sample(OUTPUT_FORMAT);
-    int outSamples = avresample_get_out_samples(resampleContext, sampleCount);
-    int bufferOutSize = outSampleSize * channelCount * outSamples;
-    if (outSize + bufferOutSize > outputSize) {
-      LOGE("Output buffer size (%d) too small for output data (%d).",
-           outputSize, outSize + bufferOutSize);
-      av_frame_free(&frame);
-      return -1;
-    }
-    result = avresample_convert(resampleContext, &outputBuffer, bufferOutSize,
-                                outSamples, frame->data, frame->linesize[0],
-                                sampleCount);
-    av_frame_free(&frame);
-    if (result < 0) {
-      logError("avresample_convert", result);
-      return result;
-    }
-    int available = avresample_available(resampleContext);
-    if (available != 0) {
-      LOGE("Expected no samples remaining after resampling, but found %d.",
-           available);
-      return -1;
-    }
-    outputBuffer += bufferOutSize;
-    outSize += bufferOutSize;
-  }
-  return outSize;
-}
-
-void logError(const char *functionName, int errorNumber) {
-  char *buffer = (char *) malloc(ERROR_STRING_BUFFER_LENGTH * sizeof(char));
-  av_strerror(errorNumber, buffer, ERROR_STRING_BUFFER_LENGTH);
-  LOGE("Error in %s: %s", functionName, buffer);
-  free(buffer);
-}
-
-void releaseContext(AVCodecContext *context) {
-  if (!context) {
-    return;
-  }
-  AVAudioResampleContext *resampleContext;
-  if ((resampleContext = (AVAudioResampleContext *) context->opaque)) {
-    avresample_free(&resampleContext);
-    context->opaque = NULL;
-  }
-  avcodec_free_context(&context);
-}
-
diff --git a/extensions/flac/README.md b/extensions/flac/README.md
deleted file mode 100644
index 113b41a93d..0000000000
--- a/extensions/flac/README.md
+++ /dev/null
@@ -1,89 +0,0 @@
-# ExoPlayer Flac extension #
-
-The Flac extension provides `FlacExtractor` and `LibflacAudioRenderer`, which
-use libFLAC (the Flac decoding library) to extract and decode FLAC audio.
-
-## Build instructions ##
-
-To use this extension you need to clone the ExoPlayer repository and depend on
-its modules locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-In addition, it's necessary to build the extension's native components as
-follows:
-
-* Set the following environment variables:
-
-```
-cd "<path to exoplayer checkout>"
-EXOPLAYER_ROOT="$(pwd)"
-FLAC_EXT_PATH="${EXOPLAYER_ROOT}/extensions/flac/src/main"
-```
-
-* Download the [Android NDK][] and set its location in an environment variable:
-
-```
-NDK_PATH="<path to Android NDK>"
-```
-
-* Download and extract flac-1.3.1 as "${FLAC_EXT_PATH}/jni/flac" folder:
-
-```
-cd "${FLAC_EXT_PATH}/jni" && \
-curl http://downloads.xiph.org/releases/flac/flac-1.3.1.tar.xz | tar xJ && \
-mv flac-1.3.1 flac
-```
-
-* Build the JNI native libraries from the command line:
-
-```
-cd "${FLAC_EXT_PATH}"/jni && \
-${NDK_PATH}/ndk-build APP_ABI=all -j4
-```
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-[Android NDK]: https://developer.android.com/tools/sdk/ndk/index.html
-
-## Using the extension ##
-
-Once you've followed the instructions above to check out, build and depend on
-the extension, the next step is to tell ExoPlayer to use the extractor and/or
-renderer.
-
-### Using `FlacExtractor` ###
-
-`FlacExtractor` is used via `ExtractorMediaSource`. If you're using
-`DefaultExtractorsFactory`, `FlacExtractor` will automatically be used to read
-`.flac` files. If you're not using `DefaultExtractorsFactory`, return a
-`FlacExtractor` from your `ExtractorsFactory.createExtractors` implementation.
-
-### Using `LibflacAudioRenderer` ###
-
-* If you're passing a `DefaultRenderersFactory` to
-  `ExoPlayerFactory.newSimpleInstance`, you can enable using the extension by
-  setting the `extensionRendererMode` parameter of the `DefaultRenderersFactory`
-  constructor to `EXTENSION_RENDERER_MODE_ON`. This will use
-  `LibflacAudioRenderer` for playback if `MediaCodecAudioRenderer` doesn't
-  support the input format. Pass `EXTENSION_RENDERER_MODE_PREFER` to give
-  `LibflacAudioRenderer` priority over `MediaCodecAudioRenderer`.
-* If you've subclassed `DefaultRenderersFactory`, add a `LibflacAudioRenderer`
-  to the output list in `buildAudioRenderers`. ExoPlayer will use the first
-  `Renderer` in the list that supports the input media format.
-* If you've implemented your own `RenderersFactory`, return a
-  `LibflacAudioRenderer` instance from `createRenderers`. ExoPlayer will use the
-  first `Renderer` in the returned array that supports the input media format.
-* If you're using `ExoPlayerFactory.newInstance`, pass a `LibflacAudioRenderer`
-  in the array of `Renderer`s. ExoPlayer will use the first `Renderer` in the
-  list that supports the input media format.
-
-Note: These instructions assume you're using `DefaultTrackSelector`. If you have
-a custom track selector the choice of `Renderer` is up to your implementation,
-so you need to make sure you are passing an `LibflacAudioRenderer` to the
-player, then implement your own logic to use the renderer for a given track.
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.flac.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/flac/build.gradle b/extensions/flac/build.gradle
deleted file mode 100644
index 454416803a..0000000000
--- a/extensions/flac/build.gradle
+++ /dev/null
@@ -1,36 +0,0 @@
-// Copyright (C) 2016 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion project.ext.minSdkVersion
-        targetSdkVersion project.ext.targetSdkVersion
-        consumerProguardFiles 'proguard-rules.txt'
-    }
-
-    sourceSets.main {
-        jniLibs.srcDir 'src/main/libs'
-        jni.srcDirs = [] // Disable the automatic ndk-build call by Android Studio.
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-    androidTestCompile project(modulePrefix + 'testutils')
-}
\ No newline at end of file
diff --git a/extensions/flac/proguard-rules.txt b/extensions/flac/proguard-rules.txt
deleted file mode 100644
index ee0a9fa5b5..0000000000
--- a/extensions/flac/proguard-rules.txt
+++ /dev/null
@@ -1,14 +0,0 @@
-# Proguard rules specific to the Flac extension.
-
-# This prevents the names of native methods from being obfuscated.
--keepclasseswithmembernames class * {
-    native <methods>;
-}
-
-# Some members of these classes are being accessed from native methods. Keep them unobfuscated.
--keep class com.google.android.exoplayer2.ext.flac.FlacDecoderJni {
-    *;
-}
--keep class com.google.android.exoplayer2.util.FlacStreamInfo {
-    *;
-}
diff --git a/extensions/flac/src/androidTest/AndroidManifest.xml b/extensions/flac/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index 73032ab50c..0000000000
--- a/extensions/flac/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer2.ext.flac.test">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner"/>
-  </application>
-
-  <instrumentation
-      android:targetPackage="com.google.android.exoplayer2.ext.flac.test"
-      android:name="android.test.InstrumentationTestRunner"/>
-
-</manifest>
diff --git a/extensions/flac/src/androidTest/assets/bear-flac.mka b/extensions/flac/src/androidTest/assets/bear-flac.mka
deleted file mode 100644
index 457353d722..0000000000
Binary files a/extensions/flac/src/androidTest/assets/bear-flac.mka and /dev/null differ
diff --git a/extensions/flac/src/androidTest/assets/bear.flac b/extensions/flac/src/androidTest/assets/bear.flac
deleted file mode 100644
index 3e17983fef..0000000000
Binary files a/extensions/flac/src/androidTest/assets/bear.flac and /dev/null differ
diff --git a/extensions/flac/src/androidTest/assets/bear.flac.0.dump b/extensions/flac/src/androidTest/assets/bear.flac.0.dump
deleted file mode 100644
index b03636f2bb..0000000000
--- a/extensions/flac/src/androidTest/assets/bear.flac.0.dump
+++ /dev/null
@@ -1,161 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8880
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 768000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 33
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 16384, hash 61D2C5C2
-  sample 1:
-    time = 85333
-    flags = 1
-    data = length 16384, hash E6D7F214
-  sample 2:
-    time = 170666
-    flags = 1
-    data = length 16384, hash 59BF0D5D
-  sample 3:
-    time = 256000
-    flags = 1
-    data = length 16384, hash 3625F468
-  sample 4:
-    time = 341333
-    flags = 1
-    data = length 16384, hash F66A323
-  sample 5:
-    time = 426666
-    flags = 1
-    data = length 16384, hash CDBAE629
-  sample 6:
-    time = 512000
-    flags = 1
-    data = length 16384, hash 536F3A91
-  sample 7:
-    time = 597333
-    flags = 1
-    data = length 16384, hash D4F35C9C
-  sample 8:
-    time = 682666
-    flags = 1
-    data = length 16384, hash EE04CEBF
-  sample 9:
-    time = 768000
-    flags = 1
-    data = length 16384, hash 647E2A67
-  sample 10:
-    time = 853333
-    flags = 1
-    data = length 16384, hash 31583F2C
-  sample 11:
-    time = 938666
-    flags = 1
-    data = length 16384, hash E433A93D
-  sample 12:
-    time = 1024000
-    flags = 1
-    data = length 16384, hash 5E1C7051
-  sample 13:
-    time = 1109333
-    flags = 1
-    data = length 16384, hash 43E6E358
-  sample 14:
-    time = 1194666
-    flags = 1
-    data = length 16384, hash 5DC1B256
-  sample 15:
-    time = 1280000
-    flags = 1
-    data = length 16384, hash 3D9D95CF
-  sample 16:
-    time = 1365333
-    flags = 1
-    data = length 16384, hash 2A5BD2C0
-  sample 17:
-    time = 1450666
-    flags = 1
-    data = length 16384, hash 93E25061
-  sample 18:
-    time = 1536000
-    flags = 1
-    data = length 16384, hash B81793D8
-  sample 19:
-    time = 1621333
-    flags = 1
-    data = length 16384, hash 1A3BD49F
-  sample 20:
-    time = 1706666
-    flags = 1
-    data = length 16384, hash FB672FF1
-  sample 21:
-    time = 1792000
-    flags = 1
-    data = length 16384, hash 48AB8B45
-  sample 22:
-    time = 1877333
-    flags = 1
-    data = length 16384, hash 13C9640A
-  sample 23:
-    time = 1962666
-    flags = 1
-    data = length 16384, hash 499E4A0B
-  sample 24:
-    time = 2048000
-    flags = 1
-    data = length 16384, hash F9A783E6
-  sample 25:
-    time = 2133333
-    flags = 1
-    data = length 16384, hash D2B77598
-  sample 26:
-    time = 2218666
-    flags = 1
-    data = length 16384, hash CE5B826C
-  sample 27:
-    time = 2304000
-    flags = 1
-    data = length 16384, hash E99EE956
-  sample 28:
-    time = 2389333
-    flags = 1
-    data = length 16384, hash F2DB1486
-  sample 29:
-    time = 2474666
-    flags = 1
-    data = length 16384, hash 1636EAB
-  sample 30:
-    time = 2560000
-    flags = 1
-    data = length 16384, hash 23457C08
-  sample 31:
-    time = 2645333
-    flags = 1
-    data = length 16384, hash 30EB8381
-  sample 32:
-    time = 2730666
-    flags = 1
-    data = length 1984, hash 59CFDE1B
-tracksEnded = true
diff --git a/extensions/flac/src/androidTest/assets/bear.flac.1.dump b/extensions/flac/src/androidTest/assets/bear.flac.1.dump
deleted file mode 100644
index 4e8388dba8..0000000000
--- a/extensions/flac/src/androidTest/assets/bear.flac.1.dump
+++ /dev/null
@@ -1,121 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8880
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 768000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 23
-  sample 0:
-    time = 853333
-    flags = 1
-    data = length 16384, hash 31583F2C
-  sample 1:
-    time = 938666
-    flags = 1
-    data = length 16384, hash E433A93D
-  sample 2:
-    time = 1024000
-    flags = 1
-    data = length 16384, hash 5E1C7051
-  sample 3:
-    time = 1109333
-    flags = 1
-    data = length 16384, hash 43E6E358
-  sample 4:
-    time = 1194666
-    flags = 1
-    data = length 16384, hash 5DC1B256
-  sample 5:
-    time = 1280000
-    flags = 1
-    data = length 16384, hash 3D9D95CF
-  sample 6:
-    time = 1365333
-    flags = 1
-    data = length 16384, hash 2A5BD2C0
-  sample 7:
-    time = 1450666
-    flags = 1
-    data = length 16384, hash 93E25061
-  sample 8:
-    time = 1536000
-    flags = 1
-    data = length 16384, hash B81793D8
-  sample 9:
-    time = 1621333
-    flags = 1
-    data = length 16384, hash 1A3BD49F
-  sample 10:
-    time = 1706666
-    flags = 1
-    data = length 16384, hash FB672FF1
-  sample 11:
-    time = 1792000
-    flags = 1
-    data = length 16384, hash 48AB8B45
-  sample 12:
-    time = 1877333
-    flags = 1
-    data = length 16384, hash 13C9640A
-  sample 13:
-    time = 1962666
-    flags = 1
-    data = length 16384, hash 499E4A0B
-  sample 14:
-    time = 2048000
-    flags = 1
-    data = length 16384, hash F9A783E6
-  sample 15:
-    time = 2133333
-    flags = 1
-    data = length 16384, hash D2B77598
-  sample 16:
-    time = 2218666
-    flags = 1
-    data = length 16384, hash CE5B826C
-  sample 17:
-    time = 2304000
-    flags = 1
-    data = length 16384, hash E99EE956
-  sample 18:
-    time = 2389333
-    flags = 1
-    data = length 16384, hash F2DB1486
-  sample 19:
-    time = 2474666
-    flags = 1
-    data = length 16384, hash 1636EAB
-  sample 20:
-    time = 2560000
-    flags = 1
-    data = length 16384, hash 23457C08
-  sample 21:
-    time = 2645333
-    flags = 1
-    data = length 16384, hash 30EB8381
-  sample 22:
-    time = 2730666
-    flags = 1
-    data = length 1984, hash 59CFDE1B
-tracksEnded = true
diff --git a/extensions/flac/src/androidTest/assets/bear.flac.2.dump b/extensions/flac/src/androidTest/assets/bear.flac.2.dump
deleted file mode 100644
index 0860c36cef..0000000000
--- a/extensions/flac/src/androidTest/assets/bear.flac.2.dump
+++ /dev/null
@@ -1,77 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8880
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 768000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 12
-  sample 0:
-    time = 1792000
-    flags = 1
-    data = length 16384, hash 48AB8B45
-  sample 1:
-    time = 1877333
-    flags = 1
-    data = length 16384, hash 13C9640A
-  sample 2:
-    time = 1962666
-    flags = 1
-    data = length 16384, hash 499E4A0B
-  sample 3:
-    time = 2048000
-    flags = 1
-    data = length 16384, hash F9A783E6
-  sample 4:
-    time = 2133333
-    flags = 1
-    data = length 16384, hash D2B77598
-  sample 5:
-    time = 2218666
-    flags = 1
-    data = length 16384, hash CE5B826C
-  sample 6:
-    time = 2304000
-    flags = 1
-    data = length 16384, hash E99EE956
-  sample 7:
-    time = 2389333
-    flags = 1
-    data = length 16384, hash F2DB1486
-  sample 8:
-    time = 2474666
-    flags = 1
-    data = length 16384, hash 1636EAB
-  sample 9:
-    time = 2560000
-    flags = 1
-    data = length 16384, hash 23457C08
-  sample 10:
-    time = 2645333
-    flags = 1
-    data = length 16384, hash 30EB8381
-  sample 11:
-    time = 2730666
-    flags = 1
-    data = length 1984, hash 59CFDE1B
-tracksEnded = true
diff --git a/extensions/flac/src/androidTest/assets/bear.flac.3.dump b/extensions/flac/src/androidTest/assets/bear.flac.3.dump
deleted file mode 100644
index 6f7f72b806..0000000000
--- a/extensions/flac/src/androidTest/assets/bear.flac.3.dump
+++ /dev/null
@@ -1,37 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8880
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 768000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 2
-  sample 0:
-    time = 2645333
-    flags = 1
-    data = length 16384, hash 30EB8381
-  sample 1:
-    time = 2730666
-    flags = 1
-    data = length 1984, hash 59CFDE1B
-tracksEnded = true
diff --git a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacExtractorTest.java b/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacExtractorTest.java
deleted file mode 100644
index 7b193997c3..0000000000
--- a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacExtractorTest.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link FlacExtractor}.
- */
-public class FlacExtractorTest extends InstrumentationTestCase {
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new FlacExtractor();
-      }
-    }, "bear.flac", getInstrumentation());
-  }
-}
diff --git a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java b/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java
deleted file mode 100644
index 1fa30bed9d..0000000000
--- a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java
+++ /dev/null
@@ -1,142 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import android.content.Context;
-import android.net.Uri;
-import android.os.Looper;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.ExoPlayer;
-import com.google.android.exoplayer2.ExoPlayerFactory;
-import com.google.android.exoplayer2.PlaybackParameters;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Renderer;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor;
-import com.google.android.exoplayer2.source.ExtractorMediaSource;
-import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
-import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
-import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
-
-/**
- * Playback tests using {@link LibflacAudioRenderer}.
- */
-public class FlacPlaybackTest extends InstrumentationTestCase {
-
-  private static final String BEAR_FLAC_URI = "asset:///bear-flac.mka";
-
-  public void testBasicPlayback() throws ExoPlaybackException {
-    playUri(BEAR_FLAC_URI);
-  }
-
-  private void playUri(String uri) throws ExoPlaybackException {
-    TestPlaybackThread thread = new TestPlaybackThread(Uri.parse(uri),
-        getInstrumentation().getContext());
-    thread.start();
-    try {
-      thread.join();
-    } catch (InterruptedException e) {
-      fail(); // Should never happen.
-    }
-    if (thread.playbackException != null) {
-      throw thread.playbackException;
-    }
-  }
-
-  private static class TestPlaybackThread extends Thread implements Player.EventListener {
-
-    private final Context context;
-    private final Uri uri;
-
-    private ExoPlayer player;
-    private ExoPlaybackException playbackException;
-
-    public TestPlaybackThread(Uri uri, Context context) {
-      this.uri = uri;
-      this.context = context;
-    }
-
-    @Override
-    public void run() {
-      Looper.prepare();
-      LibflacAudioRenderer audioRenderer = new LibflacAudioRenderer();
-      DefaultTrackSelector trackSelector = new DefaultTrackSelector();
-      player = ExoPlayerFactory.newInstance(new Renderer[] {audioRenderer}, trackSelector);
-      player.addListener(this);
-      ExtractorMediaSource mediaSource = new ExtractorMediaSource(
-          uri,
-          new DefaultDataSourceFactory(context, "ExoPlayerExtFlacTest"),
-          MatroskaExtractor.FACTORY,
-          null,
-          null);
-      player.prepare(mediaSource);
-      player.setPlayWhenReady(true);
-      Looper.loop();
-    }
-
-    @Override
-    public void onLoadingChanged(boolean isLoading) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPositionDiscontinuity() {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onTimelineChanged(Timeline timeline, Object manifest) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPlayerError(ExoPlaybackException error) {
-      playbackException = error;
-    }
-
-    @Override
-    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
-      if (playbackState == Player.STATE_ENDED
-          || (playbackState == Player.STATE_IDLE && playbackException != null)) {
-        releasePlayerAndQuitLooper();
-      }
-    }
-
-    @Override
-    public void onRepeatModeChanged(int repeatMode) {
-      // Do nothing.
-    }
-
-    private void releasePlayerAndQuitLooper() {
-      player.release();
-      Looper.myLooper().quit();
-    }
-
-  }
-
-}
diff --git a/extensions/flac/src/main/AndroidManifest.xml b/extensions/flac/src/main/AndroidManifest.xml
deleted file mode 100644
index 1d68b376ac..0000000000
--- a/extensions/flac/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest package="com.google.android.exoplayer2.ext.flac"/>
diff --git a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoder.java b/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoder.java
deleted file mode 100644
index 3ecccd8246..0000000000
--- a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoder.java
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import com.google.android.exoplayer2.decoder.DecoderInputBuffer;
-import com.google.android.exoplayer2.decoder.SimpleDecoder;
-import com.google.android.exoplayer2.decoder.SimpleOutputBuffer;
-import com.google.android.exoplayer2.util.FlacStreamInfo;
-import java.io.IOException;
-import java.nio.ByteBuffer;
-import java.util.List;
-
-/**
- * Flac decoder.
- */
-/* package */ final class FlacDecoder extends
-    SimpleDecoder<DecoderInputBuffer, SimpleOutputBuffer, FlacDecoderException> {
-
-  private final int maxOutputBufferSize;
-  private final FlacDecoderJni decoderJni;
-
-  /**
-   * Creates a Flac decoder.
-   *
-   * @param numInputBuffers The number of input buffers.
-   * @param numOutputBuffers The number of output buffers.
-   * @param initializationData Codec-specific initialization data. It should contain only one entry
-   *    which is the flac file header.
-   * @throws FlacDecoderException Thrown if an exception occurs when initializing the decoder.
-   */
-  public FlacDecoder(int numInputBuffers, int numOutputBuffers, List<byte[]> initializationData)
-      throws FlacDecoderException {
-    super(new DecoderInputBuffer[numInputBuffers], new SimpleOutputBuffer[numOutputBuffers]);
-    if (initializationData.size() != 1) {
-      throw new FlacDecoderException("Initialization data must be of length 1");
-    }
-    decoderJni = new FlacDecoderJni();
-    decoderJni.setData(ByteBuffer.wrap(initializationData.get(0)));
-    FlacStreamInfo streamInfo;
-    try {
-      streamInfo = decoderJni.decodeMetadata();
-    } catch (IOException | InterruptedException e) {
-      // Never happens.
-      throw new IllegalStateException(e);
-    }
-    if (streamInfo == null) {
-      throw new FlacDecoderException("Metadata decoding failed");
-    }
-
-    setInitialInputBufferSize(streamInfo.maxFrameSize);
-    maxOutputBufferSize = streamInfo.maxDecodedFrameSize();
-  }
-
-  @Override
-  public String getName() {
-    return "libflac";
-  }
-
-  @Override
-  public DecoderInputBuffer createInputBuffer() {
-    return new DecoderInputBuffer(DecoderInputBuffer.BUFFER_REPLACEMENT_MODE_NORMAL);
-  }
-
-  @Override
-  public SimpleOutputBuffer createOutputBuffer() {
-    return new SimpleOutputBuffer(this);
-  }
-
-  @Override
-  public FlacDecoderException decode(DecoderInputBuffer inputBuffer,
-      SimpleOutputBuffer outputBuffer, boolean reset) {
-    if (reset) {
-      decoderJni.flush();
-    }
-    decoderJni.setData(inputBuffer.data);
-    ByteBuffer outputData = outputBuffer.init(inputBuffer.timeUs, maxOutputBufferSize);
-    int result;
-    try {
-      result = decoderJni.decodeSample(outputData);
-    } catch (IOException | InterruptedException e) {
-      // Never happens.
-      throw new IllegalStateException(e);
-    }
-    if (result < 0) {
-      return new FlacDecoderException("Frame decoding failed");
-    }
-    outputData.position(0);
-    outputData.limit(result);
-    return null;
-  }
-
-  @Override
-  public void release() {
-    super.release();
-    decoderJni.release();
-  }
-
-}
diff --git a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoderException.java b/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoderException.java
deleted file mode 100644
index 2bdff62935..0000000000
--- a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoderException.java
+++ /dev/null
@@ -1,29 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import com.google.android.exoplayer2.audio.AudioDecoderException;
-
-/**
- * Thrown when an Flac decoder error occurs.
- */
-public final class FlacDecoderException extends AudioDecoderException {
-
-  /* package */ FlacDecoderException(String message) {
-    super(message);
-  }
-
-}
diff --git a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoderJni.java b/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoderJni.java
deleted file mode 100644
index ce787712da..0000000000
--- a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoderJni.java
+++ /dev/null
@@ -1,198 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.extractor.ExtractorInput;
-import com.google.android.exoplayer2.util.FlacStreamInfo;
-import java.io.IOException;
-import java.nio.ByteBuffer;
-
-/**
- * JNI wrapper for the libflac Flac decoder.
- */
-/* package */ final class FlacDecoderJni {
-
-  private static final int TEMP_BUFFER_SIZE = 8192; // The same buffer size which libflac has
-
-  private final long nativeDecoderContext;
-
-  private ByteBuffer byteBufferData;
-  private ExtractorInput extractorInput;
-  private boolean endOfExtractorInput;
-  private byte[] tempBuffer;
-
-  public FlacDecoderJni() throws FlacDecoderException {
-    if (!FlacLibrary.isAvailable()) {
-      throw new FlacDecoderException("Failed to load decoder native libraries.");
-    }
-    nativeDecoderContext = flacInit();
-    if (nativeDecoderContext == 0) {
-      throw new FlacDecoderException("Failed to initialize decoder");
-    }
-  }
-
-  /**
-   * Sets data to be parsed by libflac.
-   * @param byteBufferData Source {@link ByteBuffer}
-   */
-  public void setData(ByteBuffer byteBufferData) {
-    this.byteBufferData = byteBufferData;
-    this.extractorInput = null;
-    this.tempBuffer = null;
-  }
-
-  /**
-   * Sets data to be parsed by libflac.
-   * @param extractorInput Source {@link ExtractorInput}
-   */
-  public void setData(ExtractorInput extractorInput) {
-    this.byteBufferData = null;
-    this.extractorInput = extractorInput;
-    if (tempBuffer == null) {
-      this.tempBuffer = new byte[TEMP_BUFFER_SIZE];
-    }
-    endOfExtractorInput = false;
-  }
-
-  public boolean isEndOfData() {
-    if (byteBufferData != null) {
-      return byteBufferData.remaining() == 0;
-    } else if (extractorInput != null) {
-      return endOfExtractorInput;
-    }
-    return true;
-  }
-
-  /**
-   * Reads up to {@code length} bytes from the data source.
-   * <p>
-   * This method blocks until at least one byte of data can be read, the end of the input is
-   * detected or an exception is thrown.
-   * <p>
-   * This method is called from the native code.
-   *
-   * @param target A target {@link ByteBuffer} into which data should be written.
-   * @return Returns the number of bytes read, or -1 on failure. It's not an error if this returns
-   * zero; it just means all the data read from the source.
-   */
-  public int read(ByteBuffer target) throws IOException, InterruptedException {
-    int byteCount = target.remaining();
-    if (byteBufferData != null) {
-      byteCount = Math.min(byteCount, byteBufferData.remaining());
-      int originalLimit = byteBufferData.limit();
-      byteBufferData.limit(byteBufferData.position() + byteCount);
-
-      target.put(byteBufferData);
-
-      byteBufferData.limit(originalLimit);
-    } else if (extractorInput != null) {
-      byteCount = Math.min(byteCount, TEMP_BUFFER_SIZE);
-      int read = readFromExtractorInput(0, byteCount);
-      if (read < 4) {
-        // Reading less than 4 bytes, most of the time, happens because of getting the bytes left in
-        // the buffer of the input. Do another read to reduce the number of calls to this method
-        // from the native code.
-        read += readFromExtractorInput(read, byteCount - read);
-      }
-      byteCount = read;
-      target.put(tempBuffer, 0, byteCount);
-    } else {
-      return -1;
-    }
-    return byteCount;
-  }
-
-  public FlacStreamInfo decodeMetadata() throws IOException, InterruptedException {
-    return flacDecodeMetadata(nativeDecoderContext);
-  }
-
-  public int decodeSample(ByteBuffer output) throws IOException, InterruptedException {
-    return output.isDirect()
-        ? flacDecodeToBuffer(nativeDecoderContext, output)
-        : flacDecodeToArray(nativeDecoderContext, output.array());
-  }
-
-  /**
-   * Returns the position of the next data to be decoded, or -1 in case of error.
-   */
-  public long getDecodePosition() {
-    return flacGetDecodePosition(nativeDecoderContext);
-  }
-
-  public long getLastSampleTimestamp() {
-    return flacGetLastTimestamp(nativeDecoderContext);
-  }
-
-  /**
-   * Maps a seek position in microseconds to a corresponding position (byte offset) in the flac
-   * stream.
-   *
-   * @param timeUs A seek position in microseconds.
-   * @return The corresponding position (byte offset) in the flac stream or -1 if the stream doesn't
-   * have a seek table.
-   */
-  public long getSeekPosition(long timeUs) {
-    return flacGetSeekPosition(nativeDecoderContext, timeUs);
-  }
-
-  public String getStateString() {
-    return flacGetStateString(nativeDecoderContext);
-  }
-
-  public void flush() {
-    flacFlush(nativeDecoderContext);
-  }
-
-  /**
-   * Resets internal state of the decoder and sets the stream position.
-   *
-   * @param newPosition Stream's new position.
-   */
-  public void reset(long newPosition) {
-    flacReset(nativeDecoderContext, newPosition);
-  }
-
-  public void release() {
-    flacRelease(nativeDecoderContext);
-  }
-
-  private int readFromExtractorInput(int offset, int length)
-      throws IOException, InterruptedException {
-    int read = extractorInput.read(tempBuffer, offset, length);
-    if (read == C.RESULT_END_OF_INPUT) {
-      endOfExtractorInput = true;
-      read = 0;
-    }
-    return read;
-  }
-
-  private native long flacInit();
-  private native FlacStreamInfo flacDecodeMetadata(long context)
-      throws IOException, InterruptedException;
-  private native int flacDecodeToBuffer(long context, ByteBuffer outputBuffer)
-      throws IOException, InterruptedException;
-  private native int flacDecodeToArray(long context, byte[] outputArray)
-      throws IOException, InterruptedException;
-  private native long flacGetDecodePosition(long context);
-  private native long flacGetLastTimestamp(long context);
-  private native long flacGetSeekPosition(long context, long timeUs);
-  private native String flacGetStateString(long context);
-  private native void flacFlush(long context);
-  private native void flacReset(long context, long newPosition);
-  private native void flacRelease(long context);
-
-}
diff --git a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacExtractor.java b/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacExtractor.java
deleted file mode 100644
index 7b71b5c743..0000000000
--- a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacExtractor.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.extractor.ExtractorInput;
-import com.google.android.exoplayer2.extractor.ExtractorOutput;
-import com.google.android.exoplayer2.extractor.ExtractorsFactory;
-import com.google.android.exoplayer2.extractor.PositionHolder;
-import com.google.android.exoplayer2.extractor.SeekMap;
-import com.google.android.exoplayer2.extractor.TrackOutput;
-import com.google.android.exoplayer2.util.FlacStreamInfo;
-import com.google.android.exoplayer2.util.MimeTypes;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import java.io.IOException;
-import java.nio.ByteBuffer;
-import java.util.Arrays;
-
-/**
- * Facilitates the extraction of data from the FLAC container format.
- */
-public final class FlacExtractor implements Extractor {
-
-  /**
-   * Factory that returns one extractor which is a {@link FlacExtractor}.
-   */
-  public static final ExtractorsFactory FACTORY = new ExtractorsFactory() {
-
-    @Override
-    public Extractor[] createExtractors() {
-      return new Extractor[] {new FlacExtractor()};
-    }
-
-  };
-
-  /**
-   * FLAC signature: first 4 is the signature word, second 4 is the sizeof STREAMINFO. 0x22 is the
-   * mandatory STREAMINFO.
-   */
-  private static final byte[] FLAC_SIGNATURE = {'f', 'L', 'a', 'C', 0, 0, 0, 0x22};
-
-  private ExtractorOutput extractorOutput;
-  private TrackOutput trackOutput;
-
-  private FlacDecoderJni decoderJni;
-
-  private boolean metadataParsed;
-
-  private ParsableByteArray outputBuffer;
-  private ByteBuffer outputByteBuffer;
-
-  @Override
-  public void init(ExtractorOutput output) {
-    extractorOutput = output;
-    trackOutput = extractorOutput.track(0, C.TRACK_TYPE_AUDIO);
-    extractorOutput.endTracks();
-    try {
-      decoderJni = new FlacDecoderJni();
-    } catch (FlacDecoderException e) {
-      throw new RuntimeException(e);
-    }
-  }
-
-  @Override
-  public boolean sniff(ExtractorInput input) throws IOException, InterruptedException {
-    byte[] header = new byte[FLAC_SIGNATURE.length];
-    input.peekFully(header, 0, FLAC_SIGNATURE.length);
-    return Arrays.equals(header, FLAC_SIGNATURE);
-  }
-
-  @Override
-  public int read(final ExtractorInput input, PositionHolder seekPosition)
-      throws IOException, InterruptedException {
-    decoderJni.setData(input);
-
-    if (!metadataParsed) {
-      final FlacStreamInfo streamInfo;
-      try {
-        streamInfo = decoderJni.decodeMetadata();
-        if (streamInfo == null) {
-          throw new IOException("Metadata decoding failed");
-        }
-      } catch (IOException e) {
-        decoderJni.reset(0);
-        input.setRetryPosition(0, e);
-        throw e; // never executes
-      }
-      metadataParsed = true;
-
-      extractorOutput.seekMap(new SeekMap() {
-        final boolean isSeekable = decoderJni.getSeekPosition(0) != -1;
-        final long durationUs = streamInfo.durationUs();
-
-        @Override
-        public boolean isSeekable() {
-          return isSeekable;
-        }
-
-        @Override
-        public long getPosition(long timeUs) {
-          return isSeekable ? decoderJni.getSeekPosition(timeUs) : 0;
-        }
-
-        @Override
-        public long getDurationUs() {
-          return durationUs;
-        }
-
-      });
-
-      Format mediaFormat = Format.createAudioSampleFormat(null, MimeTypes.AUDIO_RAW, null,
-          streamInfo.bitRate(), Format.NO_VALUE, streamInfo.channels, streamInfo.sampleRate,
-          C.ENCODING_PCM_16BIT, null, null, 0, null);
-      trackOutput.format(mediaFormat);
-
-      outputBuffer = new ParsableByteArray(streamInfo.maxDecodedFrameSize());
-      outputByteBuffer = ByteBuffer.wrap(outputBuffer.data);
-    }
-
-    outputBuffer.reset();
-    long lastDecodePosition = decoderJni.getDecodePosition();
-    int size;
-    try {
-      size = decoderJni.decodeSample(outputByteBuffer);
-    } catch (IOException e) {
-      if (lastDecodePosition >= 0) {
-        decoderJni.reset(lastDecodePosition);
-        input.setRetryPosition(lastDecodePosition, e);
-      }
-      throw e;
-    }
-    if (size <= 0) {
-      return RESULT_END_OF_INPUT;
-    }
-    trackOutput.sampleData(outputBuffer, size);
-    trackOutput.sampleMetadata(decoderJni.getLastSampleTimestamp(), C.BUFFER_FLAG_KEY_FRAME, size,
-        0, null);
-
-    return decoderJni.isEndOfData() ? RESULT_END_OF_INPUT : RESULT_CONTINUE;
-  }
-
-  @Override
-  public void seek(long position, long timeUs) {
-    if (position == 0) {
-      metadataParsed = false;
-    }
-    if (decoderJni != null) {
-      decoderJni.reset(position);
-    }
-  }
-
-  @Override
-  public void release() {
-    if (decoderJni != null) {
-      decoderJni.release();
-      decoderJni = null;
-    }
-  }
-
-}
diff --git a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacLibrary.java b/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacLibrary.java
deleted file mode 100644
index d8b9b808a6..0000000000
--- a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacLibrary.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.util.LibraryLoader;
-
-/**
- * Configures and queries the underlying native library.
- */
-public final class FlacLibrary {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.flac");
-  }
-
-  private static final LibraryLoader LOADER = new LibraryLoader("flacJNI");
-
-  private FlacLibrary() {}
-
-  /**
-   * Override the names of the Flac native libraries. If an application wishes to call this method,
-   * it must do so before calling any other method defined by this class, and before instantiating
-   * any {@link LibflacAudioRenderer} and {@link FlacExtractor} instances.
-   *
-   * @param libraries The names of the Flac native libraries.
-   */
-  public static void setLibraries(String... libraries) {
-    LOADER.setLibraries(libraries);
-  }
-
-  /**
-   * Returns whether the underlying library is available, loading it if necessary.
-   */
-  public static boolean isAvailable() {
-    return LOADER.isAvailable();
-  }
-
-}
diff --git a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/LibflacAudioRenderer.java b/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/LibflacAudioRenderer.java
deleted file mode 100644
index 246cde9d2f..0000000000
--- a/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/LibflacAudioRenderer.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.flac;
-
-import android.os.Handler;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.audio.AudioProcessor;
-import com.google.android.exoplayer2.audio.AudioRendererEventListener;
-import com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer;
-import com.google.android.exoplayer2.drm.ExoMediaCrypto;
-import com.google.android.exoplayer2.util.MimeTypes;
-
-/**
- * Decodes and renders audio using the native Flac decoder.
- */
-public class LibflacAudioRenderer extends SimpleDecoderAudioRenderer {
-
-  private static final int NUM_BUFFERS = 16;
-
-  public LibflacAudioRenderer() {
-    this(null, null);
-  }
-
-  /**
-   * @param eventHandler A handler to use when delivering events to {@code eventListener}. May be
-   *     null if delivery of events is not required.
-   * @param eventListener A listener of events. May be null if delivery of events is not required.
-   * @param audioProcessors Optional {@link AudioProcessor}s that will process audio before output.
-   */
-  public LibflacAudioRenderer(Handler eventHandler, AudioRendererEventListener eventListener,
-      AudioProcessor... audioProcessors) {
-    super(eventHandler, eventListener, audioProcessors);
-  }
-
-  @Override
-  protected int supportsFormatInternal(Format format) {
-    return FlacLibrary.isAvailable() && MimeTypes.AUDIO_FLAC.equalsIgnoreCase(format.sampleMimeType)
-        ? FORMAT_HANDLED : FORMAT_UNSUPPORTED_TYPE;
-  }
-
-  @Override
-  protected FlacDecoder createDecoder(Format format, ExoMediaCrypto mediaCrypto)
-      throws FlacDecoderException {
-    return new FlacDecoder(NUM_BUFFERS, NUM_BUFFERS, format.initializationData);
-  }
-
-}
diff --git a/extensions/flac/src/main/jni/Android.mk b/extensions/flac/src/main/jni/Android.mk
deleted file mode 100644
index ff54c1b3c0..0000000000
--- a/extensions/flac/src/main/jni/Android.mk
+++ /dev/null
@@ -1,38 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-WORKING_DIR := $(call my-dir)
-
-# build libflacJNI.so
-include $(CLEAR_VARS)
-include $(WORKING_DIR)/flac_sources.mk
-
-LOCAL_PATH := $(WORKING_DIR)
-LOCAL_MODULE := libflacJNI
-LOCAL_ARM_MODE := arm
-LOCAL_CPP_EXTENSION := .cc
-
-LOCAL_C_INCLUDES := \
-    $(LOCAL_PATH)/flac/include \
-    $(LOCAL_PATH)/flac/src/libFLAC/include
-LOCAL_SRC_FILES := $(FLAC_SOURCES)
-
-LOCAL_CFLAGS += '-DVERSION="1.3.1"' -DFLAC__NO_MD5 -DFLAC__INTEGER_ONLY_LIBRARY -DFLAC__NO_ASM
-LOCAL_CFLAGS += -D_REENTRANT -DPIC -DU_COMMON_IMPLEMENTATION -fPIC -DHAVE_SYS_PARAM_H
-LOCAL_CFLAGS += -O3 -funroll-loops -finline-functions
-
-LOCAL_LDLIBS := -llog -lz -lm
-include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/flac/src/main/jni/Application.mk b/extensions/flac/src/main/jni/Application.mk
deleted file mode 100644
index 59bf5f8f87..0000000000
--- a/extensions/flac/src/main/jni/Application.mk
+++ /dev/null
@@ -1,20 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-APP_OPTIM := release
-APP_STL := gnustl_static
-APP_CPPFLAGS := -frtti
-APP_PLATFORM := android-9
diff --git a/extensions/flac/src/main/jni/flac_jni.cc b/extensions/flac/src/main/jni/flac_jni.cc
deleted file mode 100644
index c9e5d7ab36..0000000000
--- a/extensions/flac/src/main/jni/flac_jni.cc
+++ /dev/null
@@ -1,164 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <jni.h>
-#include <android/log.h>
-#include <cstdlib>
-#include "include/flac_parser.h"
-
-#define LOG_TAG "flac_jni"
-#define ALOGE(...) \
-  ((void)__android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__))
-#define ALOGV(...) \
-  ((void)__android_log_print(ANDROID_LOG_VERBOSE, LOG_TAG, __VA_ARGS__))
-
-#define DECODER_FUNC(RETURN_TYPE, NAME, ...)                               \
-  extern "C" {                                                             \
-  JNIEXPORT RETURN_TYPE                                                    \
-      Java_com_google_android_exoplayer2_ext_flac_FlacDecoderJni_##NAME( \
-          JNIEnv *env, jobject thiz, ##__VA_ARGS__);                       \
-  }                                                                        \
-  JNIEXPORT RETURN_TYPE                                                    \
-      Java_com_google_android_exoplayer2_ext_flac_FlacDecoderJni_##NAME( \
-          JNIEnv *env, jobject thiz, ##__VA_ARGS__)
-
-class JavaDataSource : public DataSource {
- public:
-  void setFlacDecoderJni(JNIEnv *env, jobject flacDecoderJni) {
-    this->env = env;
-    this->flacDecoderJni = flacDecoderJni;
-    if (mid == NULL) {
-      jclass cls = env->GetObjectClass(flacDecoderJni);
-      mid = env->GetMethodID(cls, "read", "(Ljava/nio/ByteBuffer;)I");
-      env->DeleteLocalRef(cls);
-    }
-  }
-
-  ssize_t readAt(off64_t offset, void *const data, size_t size) {
-    jobject byteBuffer = env->NewDirectByteBuffer(data, size);
-    int result = env->CallIntMethod(flacDecoderJni, mid, byteBuffer);
-    if (env->ExceptionOccurred()) {
-      result = -1;
-    }
-    env->DeleteLocalRef(byteBuffer);
-    return result;
-  }
-
- private:
-  JNIEnv *env;
-  jobject flacDecoderJni;
-  jmethodID mid;
-};
-
-struct Context {
-  JavaDataSource *source;
-  FLACParser *parser;
-
-  Context() {
-    source = new JavaDataSource();
-    parser = new FLACParser(source);
-  }
-
-  ~Context() {
-    delete parser;
-    delete source;
-  }
-};
-
-DECODER_FUNC(jlong, flacInit) {
-  Context *context = new Context;
-  if (!context->parser->init()) {
-    delete context;
-    return 0;
-  }
-  return reinterpret_cast<intptr_t>(context);
-}
-
-DECODER_FUNC(jobject, flacDecodeMetadata, jlong jContext) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  context->source->setFlacDecoderJni(env, thiz);
-  if (!context->parser->decodeMetadata()) {
-    return NULL;
-  }
-
-  const FLAC__StreamMetadata_StreamInfo &streamInfo =
-      context->parser->getStreamInfo();
-
-  jclass cls = env->FindClass(
-      "com/google/android/exoplayer2/util/"
-      "FlacStreamInfo");
-  jmethodID constructor = env->GetMethodID(cls, "<init>", "(IIIIIIIJ)V");
-
-  return env->NewObject(cls, constructor, streamInfo.min_blocksize,
-                        streamInfo.max_blocksize, streamInfo.min_framesize,
-                        streamInfo.max_framesize, streamInfo.sample_rate,
-                        streamInfo.channels, streamInfo.bits_per_sample,
-                        streamInfo.total_samples);
-}
-
-DECODER_FUNC(jint, flacDecodeToBuffer, jlong jContext, jobject jOutputBuffer) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  context->source->setFlacDecoderJni(env, thiz);
-  void *outputBuffer = env->GetDirectBufferAddress(jOutputBuffer);
-  jint outputSize = env->GetDirectBufferCapacity(jOutputBuffer);
-  return context->parser->readBuffer(outputBuffer, outputSize);
-}
-
-DECODER_FUNC(jint, flacDecodeToArray, jlong jContext, jbyteArray jOutputArray) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  context->source->setFlacDecoderJni(env, thiz);
-  jbyte *outputBuffer = env->GetByteArrayElements(jOutputArray, NULL);
-  jint outputSize = env->GetArrayLength(jOutputArray);
-  int count = context->parser->readBuffer(outputBuffer, outputSize);
-  env->ReleaseByteArrayElements(jOutputArray, outputBuffer, 0);
-  return count;
-}
-
-DECODER_FUNC(jlong, flacGetDecodePosition, jlong jContext) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  return context->parser->getDecodePosition();
-}
-
-DECODER_FUNC(jlong, flacGetLastTimestamp, jlong jContext) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  return context->parser->getLastTimestamp();
-}
-
-DECODER_FUNC(jlong, flacGetSeekPosition, jlong jContext, jlong timeUs) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  return context->parser->getSeekPosition(timeUs);
-}
-
-DECODER_FUNC(jstring, flacGetStateString, jlong jContext) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  const char *str = context->parser->getDecoderStateString();
-  return env->NewStringUTF(str);
-}
-
-DECODER_FUNC(void, flacFlush, jlong jContext) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  context->parser->flush();
-}
-
-DECODER_FUNC(void, flacReset, jlong jContext, jlong newPosition) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  context->parser->reset(newPosition);
-}
-
-DECODER_FUNC(void, flacRelease, jlong jContext) {
-  Context *context = reinterpret_cast<Context *>(jContext);
-  delete context;
-}
diff --git a/extensions/flac/src/main/jni/flac_parser.cc b/extensions/flac/src/main/jni/flac_parser.cc
deleted file mode 100644
index 6c6e57f5f7..0000000000
--- a/extensions/flac/src/main/jni/flac_parser.cc
+++ /dev/null
@@ -1,464 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include "include/flac_parser.h"
-
-#include <jni.h>
-
-#include <android/log.h>
-
-#include <cassert>
-#include <cstdlib>
-#include <cstring>
-
-#define LOG_TAG "FLACParser"
-#define ALOGE(...) \
-  ((void)__android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__))
-#define ALOGV(...) \
-  ((void)__android_log_print(ANDROID_LOG_VERBOSE, LOG_TAG, __VA_ARGS__))
-
-#define LOG_ALWAYS_FATAL(...) \
-  (__android_log_assert(NULL, LOG_TAG, ##__VA_ARGS__))
-
-#define LITERAL_TO_STRING_INTERNAL(x) #x
-#define LITERAL_TO_STRING(x) LITERAL_TO_STRING_INTERNAL(x)
-
-#define TRESPASS()          \
-  LOG_ALWAYS_FATAL(__FILE__ \
-                   ":" LITERAL_TO_STRING(__LINE__) " Should not be here.");
-#define CHECK(x) \
-  if (!(x)) ALOGE("Check failed: %s ", #x)
-
-// The FLAC parser calls our C++ static callbacks using C calling conventions,
-// inside FLAC__stream_decoder_process_until_end_of_metadata
-// and FLAC__stream_decoder_process_single.
-// We immediately then call our corresponding C++ instance methods
-// with the same parameter list, but discard redundant information.
-
-FLAC__StreamDecoderReadStatus FLACParser::read_callback(
-    const FLAC__StreamDecoder * /* decoder */, FLAC__byte buffer[],
-    size_t *bytes, void *client_data) {
-  return reinterpret_cast<FLACParser *>(client_data)
-      ->readCallback(buffer, bytes);
-}
-
-FLAC__StreamDecoderSeekStatus FLACParser::seek_callback(
-    const FLAC__StreamDecoder * /* decoder */,
-    FLAC__uint64 absolute_byte_offset, void *client_data) {
-  return reinterpret_cast<FLACParser *>(client_data)
-      ->seekCallback(absolute_byte_offset);
-}
-
-FLAC__StreamDecoderTellStatus FLACParser::tell_callback(
-    const FLAC__StreamDecoder * /* decoder */,
-    FLAC__uint64 *absolute_byte_offset, void *client_data) {
-  return reinterpret_cast<FLACParser *>(client_data)
-      ->tellCallback(absolute_byte_offset);
-}
-
-FLAC__StreamDecoderLengthStatus FLACParser::length_callback(
-    const FLAC__StreamDecoder * /* decoder */, FLAC__uint64 *stream_length,
-    void *client_data) {
-  return reinterpret_cast<FLACParser *>(client_data)
-      ->lengthCallback(stream_length);
-}
-
-FLAC__bool FLACParser::eof_callback(const FLAC__StreamDecoder * /* decoder */,
-                                    void *client_data) {
-  return reinterpret_cast<FLACParser *>(client_data)->eofCallback();
-}
-
-FLAC__StreamDecoderWriteStatus FLACParser::write_callback(
-    const FLAC__StreamDecoder * /* decoder */, const FLAC__Frame *frame,
-    const FLAC__int32 *const buffer[], void *client_data) {
-  return reinterpret_cast<FLACParser *>(client_data)
-      ->writeCallback(frame, buffer);
-}
-
-void FLACParser::metadata_callback(const FLAC__StreamDecoder * /* decoder */,
-                                   const FLAC__StreamMetadata *metadata,
-                                   void *client_data) {
-  reinterpret_cast<FLACParser *>(client_data)->metadataCallback(metadata);
-}
-
-void FLACParser::error_callback(const FLAC__StreamDecoder * /* decoder */,
-                                FLAC__StreamDecoderErrorStatus status,
-                                void *client_data) {
-  reinterpret_cast<FLACParser *>(client_data)->errorCallback(status);
-}
-
-// These are the corresponding callbacks with C++ calling conventions
-
-FLAC__StreamDecoderReadStatus FLACParser::readCallback(FLAC__byte buffer[],
-                                                       size_t *bytes) {
-  size_t requested = *bytes;
-  ssize_t actual = mDataSource->readAt(mCurrentPos, buffer, requested);
-  if (0 > actual) {
-    *bytes = 0;
-    return FLAC__STREAM_DECODER_READ_STATUS_ABORT;
-  } else if (0 == actual) {
-    *bytes = 0;
-    mEOF = true;
-    return FLAC__STREAM_DECODER_READ_STATUS_END_OF_STREAM;
-  } else {
-    assert(actual <= requested);
-    *bytes = actual;
-    mCurrentPos += actual;
-    return FLAC__STREAM_DECODER_READ_STATUS_CONTINUE;
-  }
-}
-
-FLAC__StreamDecoderSeekStatus FLACParser::seekCallback(
-    FLAC__uint64 absolute_byte_offset) {
-  mCurrentPos = absolute_byte_offset;
-  mEOF = false;
-  return FLAC__STREAM_DECODER_SEEK_STATUS_OK;
-}
-
-FLAC__StreamDecoderTellStatus FLACParser::tellCallback(
-    FLAC__uint64 *absolute_byte_offset) {
-  *absolute_byte_offset = mCurrentPos;
-  return FLAC__STREAM_DECODER_TELL_STATUS_OK;
-}
-
-FLAC__StreamDecoderLengthStatus FLACParser::lengthCallback(
-    FLAC__uint64 *stream_length) {
-  return FLAC__STREAM_DECODER_LENGTH_STATUS_UNSUPPORTED;
-}
-
-FLAC__bool FLACParser::eofCallback() { return mEOF; }
-
-FLAC__StreamDecoderWriteStatus FLACParser::writeCallback(
-    const FLAC__Frame *frame, const FLAC__int32 *const buffer[]) {
-  if (mWriteRequested) {
-    mWriteRequested = false;
-    // FLAC parser doesn't free or realloc buffer until next frame or finish
-    mWriteHeader = frame->header;
-    mWriteBuffer = buffer;
-    mWriteCompleted = true;
-    return FLAC__STREAM_DECODER_WRITE_STATUS_CONTINUE;
-  } else {
-    ALOGE("FLACParser::writeCallback unexpected");
-    return FLAC__STREAM_DECODER_WRITE_STATUS_ABORT;
-  }
-}
-
-void FLACParser::metadataCallback(const FLAC__StreamMetadata *metadata) {
-  switch (metadata->type) {
-    case FLAC__METADATA_TYPE_STREAMINFO:
-      if (!mStreamInfoValid) {
-        mStreamInfo = metadata->data.stream_info;
-        mStreamInfoValid = true;
-      } else {
-        ALOGE("FLACParser::metadataCallback unexpected STREAMINFO");
-      }
-      break;
-    case FLAC__METADATA_TYPE_SEEKTABLE:
-      mSeekTable = &metadata->data.seek_table;
-      break;
-    default:
-      ALOGE("FLACParser::metadataCallback unexpected type %u", metadata->type);
-      break;
-  }
-}
-
-void FLACParser::errorCallback(FLAC__StreamDecoderErrorStatus status) {
-  ALOGE("FLACParser::errorCallback status=%d", status);
-  mErrorStatus = status;
-}
-
-// Copy samples from FLAC native 32-bit non-interleaved to 16-bit interleaved.
-// These are candidates for optimization if needed.
-
-static void copyMono8(int16_t *dst, const int *const *src, unsigned nSamples,
-                      unsigned /* nChannels */) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    *dst++ = src[0][i] << 8;
-  }
-}
-
-static void copyStereo8(int16_t *dst, const int *const *src, unsigned nSamples,
-                        unsigned /* nChannels */) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    *dst++ = src[0][i] << 8;
-    *dst++ = src[1][i] << 8;
-  }
-}
-
-static void copyMultiCh8(int16_t *dst, const int *const *src, unsigned nSamples,
-                         unsigned nChannels) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    for (unsigned c = 0; c < nChannels; ++c) {
-      *dst++ = src[c][i] << 8;
-    }
-  }
-}
-
-static void copyMono16(int16_t *dst, const int *const *src, unsigned nSamples,
-                       unsigned /* nChannels */) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    *dst++ = src[0][i];
-  }
-}
-
-static void copyStereo16(int16_t *dst, const int *const *src, unsigned nSamples,
-                         unsigned /* nChannels */) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    *dst++ = src[0][i];
-    *dst++ = src[1][i];
-  }
-}
-
-static void copyMultiCh16(int16_t *dst, const int *const *src,
-                          unsigned nSamples, unsigned nChannels) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    for (unsigned c = 0; c < nChannels; ++c) {
-      *dst++ = src[c][i];
-    }
-  }
-}
-
-// 24-bit versions should do dithering or noise-shaping, here or in AudioFlinger
-
-static void copyMono24(int16_t *dst, const int *const *src, unsigned nSamples,
-                       unsigned /* nChannels */) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    *dst++ = src[0][i] >> 8;
-  }
-}
-
-static void copyStereo24(int16_t *dst, const int *const *src, unsigned nSamples,
-                         unsigned /* nChannels */) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    *dst++ = src[0][i] >> 8;
-    *dst++ = src[1][i] >> 8;
-  }
-}
-
-static void copyMultiCh24(int16_t *dst, const int *const *src,
-                          unsigned nSamples, unsigned nChannels) {
-  for (unsigned i = 0; i < nSamples; ++i) {
-    for (unsigned c = 0; c < nChannels; ++c) {
-      *dst++ = src[c][i] >> 8;
-    }
-  }
-}
-
-static void copyTrespass(int16_t * /* dst */, const int *const * /* src */,
-                         unsigned /* nSamples */, unsigned /* nChannels */) {
-  TRESPASS();
-}
-
-// FLACParser
-
-FLACParser::FLACParser(DataSource *source)
-    : mDataSource(source),
-      mCopy(copyTrespass),
-      mDecoder(NULL),
-      mSeekTable(NULL),
-      firstFrameOffset(0LL),
-      mCurrentPos(0LL),
-      mEOF(false),
-      mStreamInfoValid(false),
-      mWriteRequested(false),
-      mWriteCompleted(false),
-      mWriteBuffer(NULL),
-      mErrorStatus((FLAC__StreamDecoderErrorStatus)-1) {
-  ALOGV("FLACParser::FLACParser");
-  memset(&mStreamInfo, 0, sizeof(mStreamInfo));
-  memset(&mWriteHeader, 0, sizeof(mWriteHeader));
-}
-
-FLACParser::~FLACParser() {
-  ALOGV("FLACParser::~FLACParser");
-  if (mDecoder != NULL) {
-    FLAC__stream_decoder_delete(mDecoder);
-    mDecoder = NULL;
-  }
-}
-
-bool FLACParser::init() {
-  // setup libFLAC parser
-  mDecoder = FLAC__stream_decoder_new();
-  if (mDecoder == NULL) {
-    // The new should succeed, since probably all it does is a malloc
-    // that always succeeds in Android.  But to avoid dependence on the
-    // libFLAC internals, we check and log here.
-    ALOGE("new failed");
-    return false;
-  }
-  FLAC__stream_decoder_set_md5_checking(mDecoder, false);
-  FLAC__stream_decoder_set_metadata_ignore_all(mDecoder);
-  FLAC__stream_decoder_set_metadata_respond(mDecoder,
-                                            FLAC__METADATA_TYPE_STREAMINFO);
-  FLAC__stream_decoder_set_metadata_respond(mDecoder,
-                                            FLAC__METADATA_TYPE_SEEKTABLE);
-  FLAC__StreamDecoderInitStatus initStatus;
-  initStatus = FLAC__stream_decoder_init_stream(
-      mDecoder, read_callback, seek_callback, tell_callback, length_callback,
-      eof_callback, write_callback, metadata_callback, error_callback,
-      reinterpret_cast<void *>(this));
-  if (initStatus != FLAC__STREAM_DECODER_INIT_STATUS_OK) {
-    // A failure here probably indicates a programming error and so is
-    // unlikely to happen. But we check and log here similarly to above.
-    ALOGE("init_stream failed %d", initStatus);
-    return false;
-  }
-  return true;
-}
-
-bool FLACParser::decodeMetadata() {
-  // parse all metadata
-  if (!FLAC__stream_decoder_process_until_end_of_metadata(mDecoder)) {
-    ALOGE("metadata decoding failed");
-    return false;
-  }
-  // store first frame offset
-  FLAC__stream_decoder_get_decode_position(mDecoder, &firstFrameOffset);
-
-  if (mStreamInfoValid) {
-    // check channel count
-    if (getChannels() == 0 || getChannels() > 8) {
-      ALOGE("unsupported channel count %u", getChannels());
-      return false;
-    }
-    // check bit depth
-    switch (getBitsPerSample()) {
-      case 8:
-      case 16:
-      case 24:
-        break;
-      default:
-        ALOGE("unsupported bits per sample %u", getBitsPerSample());
-        return false;
-    }
-    // check sample rate
-    switch (getSampleRate()) {
-      case 8000:
-      case 11025:
-      case 12000:
-      case 16000:
-      case 22050:
-      case 24000:
-      case 32000:
-      case 44100:
-      case 48000:
-      case 88200:
-      case 96000:
-        break;
-      default:
-        ALOGE("unsupported sample rate %u", getSampleRate());
-        return false;
-    }
-    // configure the appropriate copy function, defaulting to trespass
-    static const struct {
-      unsigned mChannels;
-      unsigned mBitsPerSample;
-      void (*mCopy)(int16_t *dst, const int *const *src, unsigned nSamples,
-                    unsigned nChannels);
-    } table[] = {
-        {1, 8, copyMono8},   {2, 8, copyStereo8},   {8, 8, copyMultiCh8},
-        {1, 16, copyMono16}, {2, 16, copyStereo16}, {8, 16, copyMultiCh16},
-        {1, 24, copyMono24}, {2, 24, copyStereo24}, {8, 24, copyMultiCh24},
-    };
-    for (unsigned i = 0; i < sizeof(table) / sizeof(table[0]); ++i) {
-      if (table[i].mChannels >= getChannels() &&
-          table[i].mBitsPerSample == getBitsPerSample()) {
-        mCopy = table[i].mCopy;
-        break;
-      }
-    }
-  } else {
-    ALOGE("missing STREAMINFO");
-    return false;
-  }
-  return true;
-}
-
-size_t FLACParser::readBuffer(void *output, size_t output_size) {
-  mWriteRequested = true;
-  mWriteCompleted = false;
-
-  if (!FLAC__stream_decoder_process_single(mDecoder)) {
-    ALOGE("FLACParser::readBuffer process_single failed. Status: %s",
-          getDecoderStateString());
-    return -1;
-  }
-  if (!mWriteCompleted) {
-    if (FLAC__stream_decoder_get_state(mDecoder) !=
-        FLAC__STREAM_DECODER_END_OF_STREAM) {
-      ALOGE("FLACParser::readBuffer write did not complete. Status: %s",
-            getDecoderStateString());
-    }
-    return -1;
-  }
-
-  // verify that block header keeps the promises made by STREAMINFO
-  unsigned blocksize = mWriteHeader.blocksize;
-  if (blocksize == 0 || blocksize > getMaxBlockSize()) {
-    ALOGE("FLACParser::readBuffer write invalid blocksize %u", blocksize);
-    return -1;
-  }
-  if (mWriteHeader.sample_rate != getSampleRate() ||
-      mWriteHeader.channels != getChannels() ||
-      mWriteHeader.bits_per_sample != getBitsPerSample()) {
-    ALOGE(
-        "FLACParser::readBuffer write changed parameters mid-stream: %d/%d/%d "
-        "-> %d/%d/%d",
-        getSampleRate(), getChannels(), getBitsPerSample(),
-        mWriteHeader.sample_rate, mWriteHeader.channels,
-        mWriteHeader.bits_per_sample);
-    return -1;
-  }
-
-  size_t bufferSize = blocksize * getChannels() * sizeof(int16_t);
-  if (bufferSize > output_size) {
-    ALOGE(
-        "FLACParser::readBuffer not enough space in output buffer "
-        "%zu < %zu",
-        output_size, bufferSize);
-    return -1;
-  }
-
-  // copy PCM from FLAC write buffer to our media buffer, with interleaving.
-  (*mCopy)(reinterpret_cast<int16_t *>(output), mWriteBuffer, blocksize,
-           getChannels());
-
-  // fill in buffer metadata
-  CHECK(mWriteHeader.number_type == FLAC__FRAME_NUMBER_TYPE_SAMPLE_NUMBER);
-
-  return bufferSize;
-}
-
-int64_t FLACParser::getSeekPosition(int64_t timeUs) {
-  if (!mSeekTable) {
-    return -1;
-  }
-
-  int64_t sample = (timeUs * getSampleRate()) / 1000000LL;
-  if (sample >= getTotalSamples()) {
-      sample = getTotalSamples();
-  }
-
-  FLAC__StreamMetadata_SeekPoint* points = mSeekTable->points;
-  for (unsigned i = mSeekTable->num_points; i > 0; ) {
-    i--;
-    if (points[i].sample_number <= sample) {
-      return firstFrameOffset + points[i].stream_offset;
-    }
-  }
-  return firstFrameOffset;
-}
diff --git a/extensions/flac/src/main/jni/flac_sources.mk b/extensions/flac/src/main/jni/flac_sources.mk
deleted file mode 100644
index ade9daa359..0000000000
--- a/extensions/flac/src/main/jni/flac_sources.mk
+++ /dev/null
@@ -1,45 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-FLAC_SOURCES = \
-  flac_jni.cc                                    \
-  flac_parser.cc                                 \
-  flac/src/libFLAC/bitmath.c                     \
-  flac/src/libFLAC/bitreader.c                   \
-  flac/src/libFLAC/bitwriter.c                   \
-  flac/src/libFLAC/cpu.c                         \
-  flac/src/libFLAC/crc.c                         \
-  flac/src/libFLAC/fixed.c                       \
-  flac/src/libFLAC/fixed_intrin_sse2.c           \
-  flac/src/libFLAC/fixed_intrin_ssse3.c          \
-  flac/src/libFLAC/float.c                       \
-  flac/src/libFLAC/format.c                      \
-  flac/src/libFLAC/lpc.c                         \
-  flac/src/libFLAC/lpc_intrin_avx2.c             \
-  flac/src/libFLAC/lpc_intrin_sse2.c             \
-  flac/src/libFLAC/lpc_intrin_sse41.c            \
-  flac/src/libFLAC/lpc_intrin_sse.c              \
-  flac/src/libFLAC/md5.c                         \
-  flac/src/libFLAC/memory.c                      \
-  flac/src/libFLAC/metadata_iterators.c          \
-  flac/src/libFLAC/metadata_object.c             \
-  flac/src/libFLAC/stream_decoder.c              \
-  flac/src/libFLAC/stream_encoder.c              \
-  flac/src/libFLAC/stream_encoder_framing.c      \
-  flac/src/libFLAC/stream_encoder_intrin_avx2.c  \
-  flac/src/libFLAC/stream_encoder_intrin_sse2.c  \
-  flac/src/libFLAC/stream_encoder_intrin_ssse3.c \
-  flac/src/libFLAC/window.c
diff --git a/extensions/flac/src/main/jni/include/data_source.h b/extensions/flac/src/main/jni/include/data_source.h
deleted file mode 100644
index 175431dd7a..0000000000
--- a/extensions/flac/src/main/jni/include/data_source.h
+++ /dev/null
@@ -1,31 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef INCLUDE_DATA_SOURCE_H_
-#define INCLUDE_DATA_SOURCE_H_
-
-#include <jni.h>
-#include <sys/types.h>
-
-class DataSource {
- public:
-  // Returns the number of bytes read, or -1 on failure. It's not an error if
-  // this returns zero; it just means the given offset is equal to, or
-  // beyond, the end of the source.
-  virtual ssize_t readAt(off64_t offset, void* const data, size_t size) = 0;
-};
-
-#endif  // INCLUDE_DATA_SOURCE_H_
diff --git a/extensions/flac/src/main/jni/include/flac_parser.h b/extensions/flac/src/main/jni/include/flac_parser.h
deleted file mode 100644
index 8c302adb36..0000000000
--- a/extensions/flac/src/main/jni/include/flac_parser.h
+++ /dev/null
@@ -1,158 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef FLAC_PARSER_H_
-#define FLAC_PARSER_H_
-
-#include <stdint.h>
-
-// libFLAC parser
-#include "FLAC/stream_decoder.h"
-
-#include "include/data_source.h"
-
-typedef int status_t;
-
-class FLACParser {
- public:
-  FLACParser(DataSource *source);
-  ~FLACParser();
-
-  bool init();
-
-  // stream properties
-  unsigned getMaxBlockSize() const { return mStreamInfo.max_blocksize; }
-  unsigned getSampleRate() const { return mStreamInfo.sample_rate; }
-  unsigned getChannels() const { return mStreamInfo.channels; }
-  unsigned getBitsPerSample() const { return mStreamInfo.bits_per_sample; }
-  FLAC__uint64 getTotalSamples() const { return mStreamInfo.total_samples; }
-
-  const FLAC__StreamMetadata_StreamInfo& getStreamInfo() const {
-    return mStreamInfo;
-  }
-
-  int64_t getLastTimestamp() const {
-    return (1000000LL * mWriteHeader.number.sample_number) / getSampleRate();
-  }
-
-  bool decodeMetadata();
-  size_t readBuffer(void *output, size_t output_size);
-
-  int64_t getSeekPosition(int64_t timeUs);
-
-  void flush() {
-    reset(mCurrentPos);
-  }
-
-  void reset(int64_t newPosition) {
-    if (mDecoder != NULL) {
-      mCurrentPos = newPosition;
-      mEOF = false;
-      if (newPosition == 0) {
-        mStreamInfoValid = false;
-        FLAC__stream_decoder_reset(mDecoder);
-      } else {
-        FLAC__stream_decoder_flush(mDecoder);
-      }
-    }
-  }
-
-  int64_t getDecodePosition() {
-    uint64_t position;
-    if (mDecoder != NULL
-        && FLAC__stream_decoder_get_decode_position(mDecoder, &position)) {
-      return position;
-    }
-    return -1;
-  }
-
-  const char *getDecoderStateString() {
-    return FLAC__stream_decoder_get_resolved_state_string(mDecoder);
-  }
-
- private:
-  DataSource *mDataSource;
-
-  void (*mCopy)(int16_t *dst, const int *const *src, unsigned nSamples,
-                unsigned nChannels);
-
-  // handle to underlying libFLAC parser
-  FLAC__StreamDecoder *mDecoder;
-
-  // current position within the data source
-  off64_t mCurrentPos;
-  bool mEOF;
-
-  // cached when the STREAMINFO metadata is parsed by libFLAC
-  FLAC__StreamMetadata_StreamInfo mStreamInfo;
-  bool mStreamInfoValid;
-
-  const FLAC__StreamMetadata_SeekTable *mSeekTable;
-  uint64_t firstFrameOffset;
-
-  // cached when a decoded PCM block is "written" by libFLAC parser
-  bool mWriteRequested;
-  bool mWriteCompleted;
-  FLAC__FrameHeader mWriteHeader;
-  const FLAC__int32 *const *mWriteBuffer;
-
-  // most recent error reported by libFLAC parser
-  FLAC__StreamDecoderErrorStatus mErrorStatus;
-
-  // no copy constructor or assignment
-  FLACParser(const FLACParser &);
-  FLACParser &operator=(const FLACParser &);
-
-  // FLAC parser callbacks as C++ instance methods
-  FLAC__StreamDecoderReadStatus readCallback(FLAC__byte buffer[],
-                                             size_t *bytes);
-  FLAC__StreamDecoderSeekStatus seekCallback(FLAC__uint64 absolute_byte_offset);
-  FLAC__StreamDecoderTellStatus tellCallback(
-      FLAC__uint64 *absolute_byte_offset);
-  FLAC__StreamDecoderLengthStatus lengthCallback(FLAC__uint64 *stream_length);
-  FLAC__bool eofCallback();
-  FLAC__StreamDecoderWriteStatus writeCallback(
-      const FLAC__Frame *frame, const FLAC__int32 *const buffer[]);
-  void metadataCallback(const FLAC__StreamMetadata *metadata);
-  void errorCallback(FLAC__StreamDecoderErrorStatus status);
-
-  // FLAC parser callbacks as C-callable functions
-  static FLAC__StreamDecoderReadStatus read_callback(
-      const FLAC__StreamDecoder *decoder, FLAC__byte buffer[], size_t *bytes,
-      void *client_data);
-  static FLAC__StreamDecoderSeekStatus seek_callback(
-      const FLAC__StreamDecoder *decoder, FLAC__uint64 absolute_byte_offset,
-      void *client_data);
-  static FLAC__StreamDecoderTellStatus tell_callback(
-      const FLAC__StreamDecoder *decoder, FLAC__uint64 *absolute_byte_offset,
-      void *client_data);
-  static FLAC__StreamDecoderLengthStatus length_callback(
-      const FLAC__StreamDecoder *decoder, FLAC__uint64 *stream_length,
-      void *client_data);
-  static FLAC__bool eof_callback(const FLAC__StreamDecoder *decoder,
-                                 void *client_data);
-  static FLAC__StreamDecoderWriteStatus write_callback(
-      const FLAC__StreamDecoder *decoder, const FLAC__Frame *frame,
-      const FLAC__int32 *const buffer[], void *client_data);
-  static void metadata_callback(const FLAC__StreamDecoder *decoder,
-                                const FLAC__StreamMetadata *metadata,
-                                void *client_data);
-  static void error_callback(const FLAC__StreamDecoder *decoder,
-                             FLAC__StreamDecoderErrorStatus status,
-                             void *client_data);
-};
-
-#endif  // FLAC_PARSER_H_
diff --git a/extensions/gvr/README.md b/extensions/gvr/README.md
deleted file mode 100644
index 250cf58c2f..0000000000
--- a/extensions/gvr/README.md
+++ /dev/null
@@ -1,40 +0,0 @@
-# ExoPlayer GVR extension #
-
-The GVR extension wraps the [Google VR SDK for Android][]. It provides a
-GvrAudioProcessor, which uses [GvrAudioSurround][] to provide binaural rendering
-of surround sound and ambisonic soundfields.
-
-[Google VR SDK for Android]: https://developers.google.com/vr/android/
-[GvrAudioSurround]: https://developers.google.com/vr/android/reference/com/google/vr/sdk/audio/GvrAudioSurround
-
-## Getting the extension ##
-
-The easiest way to use the extension is to add it as a gradle dependency:
-
-```gradle
-compile 'com.google.android.exoplayer:extension-gvr:rX.X.X'
-```
-
-where `rX.X.X` is the version, which must match the version of the ExoPlayer
-library being used.
-
-Alternatively, you can clone the ExoPlayer repository and depend on the module
-locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-## Using the extension ##
-
-* If using `DefaultRenderersFactory`, override
-  `DefaultRenderersFactory.buildAudioProcessors` to return a
-  `GvrAudioProcessor`.
-* If constructing renderers directly, pass a `GvrAudioProcessor` to
-  `MediaCodecAudioRenderer`'s constructor.
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.gvr.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/gvr/build.gradle b/extensions/gvr/build.gradle
deleted file mode 100644
index 3a7a5c31c8..0000000000
--- a/extensions/gvr/build.gradle
+++ /dev/null
@@ -1,30 +0,0 @@
-// Copyright (C) 2017 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion 19
-        targetSdkVersion project.ext.targetSdkVersion
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-    compile 'com.google.vr:sdk-audio:1.60.1'
-}
\ No newline at end of file
diff --git a/extensions/gvr/src/main/AndroidManifest.xml b/extensions/gvr/src/main/AndroidManifest.xml
deleted file mode 100644
index 6706b2507e..0000000000
--- a/extensions/gvr/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<manifest package="com.google.android.exoplayer2.ext.gvr"/>
diff --git a/extensions/gvr/src/main/java/com/google/android/exoplayer2/ext/gvr/GvrAudioProcessor.java b/extensions/gvr/src/main/java/com/google/android/exoplayer2/ext/gvr/GvrAudioProcessor.java
deleted file mode 100644
index 5750f5f04d..0000000000
--- a/extensions/gvr/src/main/java/com/google/android/exoplayer2/ext/gvr/GvrAudioProcessor.java
+++ /dev/null
@@ -1,191 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.gvr;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.audio.AudioProcessor;
-import com.google.vr.sdk.audio.GvrAudioSurround;
-import java.nio.ByteBuffer;
-import java.nio.ByteOrder;
-
-/**
- * An {@link AudioProcessor} that uses {@code GvrAudioSurround} to provide binaural rendering of
- * surround sound and ambisonic soundfields.
- */
-public final class GvrAudioProcessor implements AudioProcessor {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.gvr");
-  }
-
-  private static final int FRAMES_PER_OUTPUT_BUFFER = 1024;
-  private static final int OUTPUT_CHANNEL_COUNT = 2;
-  private static final int OUTPUT_FRAME_SIZE = OUTPUT_CHANNEL_COUNT * 2; // 16-bit stereo output.
-
-  private int sampleRateHz;
-  private int channelCount;
-  private GvrAudioSurround gvrAudioSurround;
-  private ByteBuffer buffer;
-  private boolean inputEnded;
-
-  private float w;
-  private float x;
-  private float y;
-  private float z;
-
-  /**
-   * Creates a new GVR audio processor.
-   */
-  public GvrAudioProcessor() {
-    // Use the identity for the initial orientation.
-    w = 1f;
-    sampleRateHz = Format.NO_VALUE;
-    channelCount = Format.NO_VALUE;
-  }
-
-  /**
-   * Updates the listener head orientation. May be called on any thread. See
-   * {@code GvrAudioSurround.updateNativeOrientation}.
-   *
-   * @param w The w component of the quaternion.
-   * @param x The x component of the quaternion.
-   * @param y The y component of the quaternion.
-   * @param z The z component of the quaternion.
-   */
-  public synchronized void updateOrientation(float w, float x, float y, float z) {
-    this.w = w;
-    this.x = x;
-    this.y = y;
-    this.z = z;
-    if (gvrAudioSurround != null) {
-      gvrAudioSurround.updateNativeOrientation(w, x, y, z);
-    }
-  }
-
-  @Override
-  public synchronized boolean configure(int sampleRateHz, int channelCount,
-      @C.Encoding int encoding) throws UnhandledFormatException {
-    if (encoding != C.ENCODING_PCM_16BIT) {
-      maybeReleaseGvrAudioSurround();
-      throw new UnhandledFormatException(sampleRateHz, channelCount, encoding);
-    }
-    if (this.sampleRateHz == sampleRateHz && this.channelCount == channelCount) {
-      return false;
-    }
-    this.sampleRateHz = sampleRateHz;
-    this.channelCount = channelCount;
-    maybeReleaseGvrAudioSurround();
-    int surroundFormat;
-    switch (channelCount) {
-      case 1:
-        surroundFormat = GvrAudioSurround.SurroundFormat.SURROUND_MONO;
-        break;
-      case 2:
-        surroundFormat = GvrAudioSurround.SurroundFormat.SURROUND_STEREO;
-        break;
-      case 4:
-        surroundFormat = GvrAudioSurround.SurroundFormat.FIRST_ORDER_AMBISONICS;
-        break;
-      case 6:
-        surroundFormat = GvrAudioSurround.SurroundFormat.SURROUND_FIVE_DOT_ONE;
-        break;
-      case 9:
-        surroundFormat = GvrAudioSurround.SurroundFormat.SECOND_ORDER_AMBISONICS;
-        break;
-      case 16:
-        surroundFormat = GvrAudioSurround.SurroundFormat.THIRD_ORDER_AMBISONICS;
-        break;
-      default:
-        throw new UnhandledFormatException(sampleRateHz, channelCount, encoding);
-    }
-    gvrAudioSurround = new GvrAudioSurround(surroundFormat, sampleRateHz, channelCount,
-        FRAMES_PER_OUTPUT_BUFFER);
-    gvrAudioSurround.updateNativeOrientation(w, x, y, z);
-    if (buffer == null) {
-      buffer = ByteBuffer.allocateDirect(FRAMES_PER_OUTPUT_BUFFER * OUTPUT_FRAME_SIZE)
-          .order(ByteOrder.nativeOrder());
-    }
-    return true;
-  }
-
-  @Override
-  public boolean isActive() {
-    return gvrAudioSurround != null;
-  }
-
-  @Override
-  public int getOutputChannelCount() {
-    return OUTPUT_CHANNEL_COUNT;
-  }
-
-  @Override
-  public int getOutputEncoding() {
-    return C.ENCODING_PCM_16BIT;
-  }
-
-  @Override
-  public void queueInput(ByteBuffer input) {
-    int position = input.position();
-    int readBytes = gvrAudioSurround.addInput(input, position, input.limit() - position);
-    input.position(position + readBytes);
-  }
-
-  @Override
-  public void queueEndOfStream() {
-    inputEnded = true;
-    gvrAudioSurround.triggerProcessing();
-  }
-
-  @Override
-  public ByteBuffer getOutput() {
-    int writtenBytes = gvrAudioSurround.getOutput(buffer, 0, buffer.capacity());
-    buffer.position(0).limit(writtenBytes);
-    return buffer;
-  }
-
-  @Override
-  public boolean isEnded() {
-    return inputEnded && gvrAudioSurround.getAvailableOutputSize() == 0;
-  }
-
-  @Override
-  public void flush() {
-    if (gvrAudioSurround != null) {
-      gvrAudioSurround.flush();
-    }
-    inputEnded = false;
-  }
-
-  @Override
-  public synchronized void reset() {
-    maybeReleaseGvrAudioSurround();
-    inputEnded = false;
-    buffer = null;
-    sampleRateHz = Format.NO_VALUE;
-    channelCount = Format.NO_VALUE;
-  }
-
-  private void maybeReleaseGvrAudioSurround() {
-    if (this.gvrAudioSurround != null) {
-      GvrAudioSurround gvrAudioSurround = this.gvrAudioSurround;
-      this.gvrAudioSurround = null;
-      gvrAudioSurround.release();
-    }
-  }
-
-}
diff --git a/extensions/ima/README.md b/extensions/ima/README.md
deleted file mode 100644
index 4f63214f04..0000000000
--- a/extensions/ima/README.md
+++ /dev/null
@@ -1,62 +0,0 @@
-# ExoPlayer IMA extension #
-
-The IMA extension is a [MediaSource][] implementation wrapping the
-[Interactive Media Ads SDK for Android][IMA]. You can use it to insert ads
-alongside content.
-
-[IMA]: https://developers.google.com/interactive-media-ads/docs/sdks/android/
-[MediaSource]: https://google.github.io/ExoPlayer/doc/reference/index.html?com/google/android/exoplayer2/source/MediaSource.html
-
-## Getting the extension ##
-
-The easiest way to use the extension is to add it as a gradle dependency:
-
-```gradle
-compile 'com.google.android.exoplayer:extension-ima:rX.X.X'
-```
-
-where `rX.X.X` is the version, which must match the version of the ExoPlayer
-library being used.
-
-Alternatively, you can clone the ExoPlayer repository and depend on the module
-locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-
-## Using the extension ##
-
-To play ads alongside a single-window content `MediaSource`, prepare the player
-with an `ImaAdsMediaSource` constructed using an `ImaAdsLoader`, the content
-`MediaSource` and an overlay `ViewGroup` on top of the player. Pass an ad tag
-URI from your ad campaign when creating the `ImaAdsLoader`. The IMA
-documentation includes some [sample ad tags][] for testing.
-
-Resuming the player after entering the background requires some special handling
-when playing ads. The player and its media source are released on entering the
-background, and are recreated when the player returns to the foreground. When
-playing ads it is necessary to persist ad playback state while in the background
-by keeping a reference to the `ImaAdsLoader`. Reuse it when resuming playback of
-the same content/ads by passing it in when constructing the new
-`ImaAdsMediaSource`. It is also important to persist the player position when
-entering the background by storing the value of `player.getContentPosition()`.
-On returning to the foreground, seek to that position before preparing the new
-player instance. Finally, it is important to call `ImaAdsLoader.release()` when
-playback of the content/ads has finished and will not be resumed.
-
-You can try the IMA extension in the ExoPlayer demo app. To do this you must
-select and build one of the `withExtensions` build variants of the demo app in
-Android Studio. You can find IMA test content in the "IMA sample ad tags"
-section of the app. The demo app's `PlayerActivity` also shows how to persist
-the `ImaAdsLoader` instance and the player position when backgrounded during ad
-playback.
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-[sample ad tags]: https://developers.google.com/interactive-media-ads/docs/sdks/android/tags
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.ima.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/ima/build.gradle b/extensions/ima/build.gradle
deleted file mode 100644
index 76f3bb377b..0000000000
--- a/extensions/ima/build.gradle
+++ /dev/null
@@ -1,44 +0,0 @@
-// Copyright (C) 2017 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion 14
-        targetSdkVersion project.ext.targetSdkVersion
-        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-    // This dependency is necessary to force the supportLibraryVersion of
-    // com.android.support:support-v4 to be used. Else an older version (25.2.0) is included via:
-    // com.google.android.gms:play-services-ads:11.0.2
-    // |-- com.google.android.gms:play-services-ads-lite:[11.0.2] -> 11.0.2
-    //   |-- com.google.android.gms:play-services-basement:[11.0.2] -> 11.0.2
-    //     |-- com.android.support:support-v4:25.2.0
-    compile 'com.android.support:support-v4:' + supportLibraryVersion
-    compile 'com.google.ads.interactivemedia.v3:interactivemedia:3.7.4'
-    compile 'com.google.android.gms:play-services-ads:11.0.2'
-    androidTestCompile project(modulePrefix + 'library')
-    androidTestCompile 'com.google.dexmaker:dexmaker:' + dexmakerVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:' + dexmakerVersion
-    androidTestCompile 'org.mockito:mockito-core:' + mockitoVersion
-    androidTestCompile 'com.android.support.test:runner:' + testSupportLibraryVersion
-}
\ No newline at end of file
diff --git a/extensions/ima/src/main/AndroidManifest.xml b/extensions/ima/src/main/AndroidManifest.xml
deleted file mode 100644
index 22fb518c58..0000000000
--- a/extensions/ima/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.google.android.exoplayer2.ext.ima">
-  <meta-data android:name="com.google.android.gms.version"
-      android:value="@integer/google_play_services_version"/>
-</manifest>
diff --git a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/AdPlaybackState.java b/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/AdPlaybackState.java
deleted file mode 100644
index 0edd7d6558..0000000000
--- a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/AdPlaybackState.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ima;
-
-import android.net.Uri;
-import com.google.android.exoplayer2.C;
-import java.util.Arrays;
-
-/**
- * Represents the structure of ads to play and the state of loaded/played ads.
- */
-/* package */ final class AdPlaybackState {
-
-  /**
-   * The number of ad groups.
-   */
-  public final int adGroupCount;
-  /**
-   * The times of ad groups, in microseconds. A final element with the value
-   * {@link C#TIME_END_OF_SOURCE} indicates a postroll ad.
-   */
-  public final long[] adGroupTimesUs;
-  /**
-   * The number of ads in each ad group. An element may be {@link C#LENGTH_UNSET} if the number of
-   * ads is not yet known.
-   */
-  public final int[] adCounts;
-  /**
-   * The number of ads loaded so far in each ad group.
-   */
-  public final int[] adsLoadedCounts;
-  /**
-   * The number of ads played so far in each ad group.
-   */
-  public final int[] adsPlayedCounts;
-  /**
-   * The URI of each ad in each ad group.
-   */
-  public final Uri[][] adUris;
-
-  /**
-   * The position offset in the first unplayed ad at which to begin playback, in microseconds.
-   */
-  public long adResumePositionUs;
-
-  /**
-   * Creates a new ad playback state with the specified ad group times.
-   *
-   * @param adGroupTimesUs The times of ad groups in microseconds. A final element with the value
-   *     {@link C#TIME_END_OF_SOURCE} indicates that there is a postroll ad.
-   */
-  public AdPlaybackState(long[] adGroupTimesUs) {
-    this.adGroupTimesUs = adGroupTimesUs;
-    adGroupCount = adGroupTimesUs.length;
-    adsPlayedCounts = new int[adGroupCount];
-    adCounts = new int[adGroupCount];
-    Arrays.fill(adCounts, C.LENGTH_UNSET);
-    adUris = new Uri[adGroupCount][];
-    Arrays.fill(adUris, new Uri[0]);
-    adsLoadedCounts = new int[adGroupTimesUs.length];
-  }
-
-  private AdPlaybackState(long[] adGroupTimesUs, int[] adCounts, int[] adsLoadedCounts,
-      int[] adsPlayedCounts, Uri[][] adUris, long adResumePositionUs) {
-    this.adGroupTimesUs = adGroupTimesUs;
-    this.adCounts = adCounts;
-    this.adsLoadedCounts = adsLoadedCounts;
-    this.adsPlayedCounts = adsPlayedCounts;
-    this.adUris = adUris;
-    this.adResumePositionUs = adResumePositionUs;
-    adGroupCount = adGroupTimesUs.length;
-  }
-
-  /**
-   * Returns a deep copy of this instance.
-   */
-  public AdPlaybackState copy() {
-    Uri[][] adUris = new Uri[adGroupTimesUs.length][];
-    for (int i = 0; i < this.adUris.length; i++) {
-      adUris[i] = Arrays.copyOf(this.adUris[i], this.adUris[i].length);
-    }
-    return new AdPlaybackState(Arrays.copyOf(adGroupTimesUs, adGroupCount),
-        Arrays.copyOf(adCounts, adGroupCount), Arrays.copyOf(adsLoadedCounts, adGroupCount),
-        Arrays.copyOf(adsPlayedCounts, adGroupCount), adUris, adResumePositionUs);
-  }
-
-  /**
-   * Sets the number of ads in the specified ad group.
-   */
-  public void setAdCount(int adGroupIndex, int adCount) {
-    adCounts[adGroupIndex] = adCount;
-  }
-
-  /**
-   * Adds an ad to the specified ad group.
-   */
-  public void addAdUri(int adGroupIndex, Uri uri) {
-    int adIndexInAdGroup = adUris[adGroupIndex].length;
-    adUris[adGroupIndex] = Arrays.copyOf(adUris[adGroupIndex], adIndexInAdGroup + 1);
-    adUris[adGroupIndex][adIndexInAdGroup] = uri;
-    adsLoadedCounts[adGroupIndex]++;
-  }
-
-  /**
-   * Marks the last ad in the specified ad group as played.
-   */
-  public void playedAd(int adGroupIndex) {
-    adResumePositionUs = 0;
-    adsPlayedCounts[adGroupIndex]++;
-  }
-
-  /**
-   * Marks all ads in the specified ad group as played.
-   */
-  public void playedAdGroup(int adGroupIndex) {
-    adResumePositionUs = 0;
-    if (adCounts[adGroupIndex] == C.LENGTH_UNSET) {
-      adCounts[adGroupIndex] = 0;
-    }
-    adsPlayedCounts[adGroupIndex] = adCounts[adGroupIndex];
-  }
-
-  /**
-   * Sets the position offset in the first unplayed ad at which to begin playback, in microseconds.
-   */
-  public void setAdResumePositionUs(long adResumePositionUs) {
-    this.adResumePositionUs = adResumePositionUs;
-  }
-
-}
diff --git a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoader.java b/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoader.java
deleted file mode 100644
index b6d9280579..0000000000
--- a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoader.java
+++ /dev/null
@@ -1,756 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ima;
-
-import android.content.Context;
-import android.net.Uri;
-import android.os.SystemClock;
-import android.util.Log;
-import android.view.ViewGroup;
-import android.webkit.WebView;
-import com.google.ads.interactivemedia.v3.api.Ad;
-import com.google.ads.interactivemedia.v3.api.AdDisplayContainer;
-import com.google.ads.interactivemedia.v3.api.AdErrorEvent;
-import com.google.ads.interactivemedia.v3.api.AdErrorEvent.AdErrorListener;
-import com.google.ads.interactivemedia.v3.api.AdEvent;
-import com.google.ads.interactivemedia.v3.api.AdEvent.AdEventListener;
-import com.google.ads.interactivemedia.v3.api.AdEvent.AdEventType;
-import com.google.ads.interactivemedia.v3.api.AdPodInfo;
-import com.google.ads.interactivemedia.v3.api.AdsLoader;
-import com.google.ads.interactivemedia.v3.api.AdsLoader.AdsLoadedListener;
-import com.google.ads.interactivemedia.v3.api.AdsManager;
-import com.google.ads.interactivemedia.v3.api.AdsManagerLoadedEvent;
-import com.google.ads.interactivemedia.v3.api.AdsRenderingSettings;
-import com.google.ads.interactivemedia.v3.api.AdsRequest;
-import com.google.ads.interactivemedia.v3.api.ImaSdkFactory;
-import com.google.ads.interactivemedia.v3.api.ImaSdkSettings;
-import com.google.ads.interactivemedia.v3.api.player.ContentProgressProvider;
-import com.google.ads.interactivemedia.v3.api.player.VideoAdPlayer;
-import com.google.ads.interactivemedia.v3.api.player.VideoProgressUpdate;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.ExoPlayer;
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.PlaybackParameters;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
-import com.google.android.exoplayer2.util.Assertions;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Loads ads using the IMA SDK. All methods are called on the main thread.
- */
-public final class ImaAdsLoader implements Player.EventListener, VideoAdPlayer,
-    ContentProgressProvider, AdErrorListener, AdsLoadedListener, AdEventListener {
-
-  /**
-   * Listener for ad loader events. All methods are called on the main thread.
-   */
-  /* package */ interface EventListener {
-
-    /**
-     * Called when the ad playback state has been updated.
-     *
-     * @param adPlaybackState The new ad playback state.
-     */
-    void onAdPlaybackState(AdPlaybackState adPlaybackState);
-
-    /**
-     * Called when there was an error loading ads.
-     *
-     * @param error The error.
-     */
-    void onLoadError(IOException error);
-
-    /**
-     * Called when the user clicks through an ad (for example, following a 'learn more' link).
-     */
-    void onAdClicked();
-
-    /**
-     * Called when the user taps a non-clickthrough part of an ad.
-     */
-    void onAdTapped();
-
-  }
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.ima");
-  }
-
-  private static final boolean DEBUG = false;
-  private static final String TAG = "ImaAdsLoader";
-
-  /**
-   * Whether to enable preloading of ads in {@link AdsRenderingSettings}.
-   */
-  private static final boolean ENABLE_PRELOADING = true;
-
-  private static final String IMA_SDK_SETTINGS_PLAYER_TYPE = "google/exo.ext.ima";
-  private static final String IMA_SDK_SETTINGS_PLAYER_VERSION = ExoPlayerLibraryInfo.VERSION;
-
-  /**
-   * Threshold before the end of content at which IMA is notified that content is complete if the
-   * player buffers, in milliseconds.
-   */
-  private static final long END_OF_CONTENT_POSITION_THRESHOLD_MS = 5000;
-
-  /**
-   * The "Skip ad" button rendered in the IMA WebView does not gain focus by default and cannot be
-   * clicked via a keypress event. Workaround this issue by calling focus() on the HTML element in
-   * the WebView directly when an ad starts. See [Internal: b/62371030].
-   */
-  private static final String FOCUS_SKIP_BUTTON_WORKAROUND_JS = "javascript:"
-      + "try{ document.getElementsByClassName(\"videoAdUiSkipButton\")[0].focus(); } catch (e) {}";
-
-  private final Uri adTagUri;
-  private final Timeline.Period period;
-  private final List<VideoAdPlayerCallback> adCallbacks;
-  private final ImaSdkFactory imaSdkFactory;
-  private final AdDisplayContainer adDisplayContainer;
-  private final AdsLoader adsLoader;
-
-  private EventListener eventListener;
-  private Player player;
-  private ViewGroup adUiViewGroup;
-  private VideoProgressUpdate lastContentProgress;
-  private VideoProgressUpdate lastAdProgress;
-
-  private AdsManager adsManager;
-  private Timeline timeline;
-  private long contentDurationMs;
-  private AdPlaybackState adPlaybackState;
-
-  // Fields tracking IMA's state.
-
-  /**
-   * The index of the current ad group that IMA is loading.
-   */
-  private int adGroupIndex;
-  /**
-   * Whether IMA has sent an ad event to pause content since the last resume content event.
-   */
-  private boolean imaPausedContent;
-  /**
-   * If {@link #playingAd} is set, stores whether IMA has called {@link #playAd()} and not
-   * {@link #stopAd()}.
-   */
-  private boolean imaPlayingAd;
-  /**
-   * If {@link #playingAd} is set, stores whether IMA has called {@link #pauseAd()} since a
-   * preceding call to {@link #playAd()} for the current ad.
-   */
-  private boolean imaPausedInAd;
-  /**
-   * Whether {@link AdsLoader#contentComplete()} has been called since starting ad playback.
-   */
-  private boolean sentContentComplete;
-
-  // Fields tracking the player/loader state.
-
-  /**
-   * Whether the player's play when ready flag has temporarily been set to true for playing ads.
-   */
-  private boolean playWhenReadyOverriddenForAds;
-  /**
-   * Whether the player is playing an ad.
-   */
-  private boolean playingAd;
-  /**
-   * If the player is playing an ad, stores the ad index in its ad group. {@link C#INDEX_UNSET}
-   * otherwise.
-   */
-  private int playingAdIndexInAdGroup;
-  /**
-   * If a content period has finished but IMA has not yet sent an ad event with
-   * {@link AdEvent.AdEventType#CONTENT_PAUSE_REQUESTED}, stores the value of
-   * {@link SystemClock#elapsedRealtime()} when the content stopped playing. This can be used to
-   * determine a fake, increasing content position. {@link C#TIME_UNSET} otherwise.
-   */
-  private long fakeContentProgressElapsedRealtimeMs;
-  /**
-   * If {@link #fakeContentProgressElapsedRealtimeMs} is set, stores the offset from which the
-   * content progress should increase. {@link C#TIME_UNSET} otherwise.
-   */
-  private long fakeContentProgressOffsetMs;
-  /**
-   * Stores the pending content position when a seek operation was intercepted to play an ad.
-   */
-  private long pendingContentPositionMs;
-  /**
-   * Whether {@link #getContentProgress()} has sent {@link #pendingContentPositionMs} to IMA.
-   */
-  private boolean sentPendingContentPositionMs;
-  /**
-   * Whether {@link #release()} has been called.
-   */
-  private boolean released;
-
-  /**
-   * Creates a new IMA ads loader.
-   *
-   * @param context The context.
-   * @param adTagUri The {@link Uri} of an ad tag compatible with the Android IMA SDK. See
-   *     https://developers.google.com/interactive-media-ads/docs/sdks/android/compatibility for
-   *     more information.
-   */
-  public ImaAdsLoader(Context context, Uri adTagUri) {
-    this(context, adTagUri, null);
-  }
-
-  /**
-   * Creates a new IMA ads loader.
-   *
-   * @param context The context.
-   * @param adTagUri The {@link Uri} of an ad tag compatible with the Android IMA SDK. See
-   *     https://developers.google.com/interactive-media-ads/docs/sdks/android/compatibility for
-   *     more information.
-   * @param imaSdkSettings {@link ImaSdkSettings} used to configure the IMA SDK, or {@code null} to
-   *     use the default settings. If set, the player type and version fields may be overwritten.
-   */
-  public ImaAdsLoader(Context context, Uri adTagUri, ImaSdkSettings imaSdkSettings) {
-    this.adTagUri = adTagUri;
-    period = new Timeline.Period();
-    adCallbacks = new ArrayList<>(1);
-    imaSdkFactory = ImaSdkFactory.getInstance();
-    adDisplayContainer = imaSdkFactory.createAdDisplayContainer();
-    adDisplayContainer.setPlayer(this);
-    if (imaSdkSettings == null) {
-      imaSdkSettings = imaSdkFactory.createImaSdkSettings();
-    }
-    imaSdkSettings.setPlayerType(IMA_SDK_SETTINGS_PLAYER_TYPE);
-    imaSdkSettings.setPlayerVersion(IMA_SDK_SETTINGS_PLAYER_VERSION);
-    adsLoader = imaSdkFactory.createAdsLoader(context, imaSdkSettings);
-    adsLoader.addAdErrorListener(this);
-    adsLoader.addAdsLoadedListener(this);
-    fakeContentProgressElapsedRealtimeMs = C.TIME_UNSET;
-    fakeContentProgressOffsetMs = C.TIME_UNSET;
-    pendingContentPositionMs = C.TIME_UNSET;
-    adGroupIndex = C.INDEX_UNSET;
-    contentDurationMs = C.TIME_UNSET;
-  }
-
-  /**
-   * Attaches a player that will play ads loaded using this instance.
-   *
-   * @param player The player instance that will play the loaded ads.
-   * @param eventListener Listener for ads loader events.
-   * @param adUiViewGroup A {@link ViewGroup} on top of the player that will show any ad UI.
-   */
-  /* package */ void attachPlayer(ExoPlayer player, EventListener eventListener,
-      ViewGroup adUiViewGroup) {
-    this.player = player;
-    this.eventListener = eventListener;
-    this.adUiViewGroup = adUiViewGroup;
-    lastAdProgress = null;
-    lastContentProgress = null;
-    adDisplayContainer.setAdContainer(adUiViewGroup);
-    player.addListener(this);
-    if (adPlaybackState != null) {
-      eventListener.onAdPlaybackState(adPlaybackState);
-      if (imaPausedContent) {
-        adsManager.resume();
-      }
-    } else {
-      requestAds();
-    }
-  }
-
-  /**
-   * Detaches the attached player and event listener. To attach a new player, call
-   * {@link #attachPlayer(ExoPlayer, EventListener, ViewGroup)}. Call {@link #release()} to release
-   * all resources associated with this instance.
-   */
-  /* package */ void detachPlayer() {
-    if (adsManager != null && imaPausedContent) {
-      adPlaybackState.setAdResumePositionUs(C.msToUs(player.getCurrentPosition()));
-      adsManager.pause();
-    }
-    lastAdProgress = getAdProgress();
-    lastContentProgress = getContentProgress();
-    player.removeListener(this);
-    player = null;
-    eventListener = null;
-    adUiViewGroup = null;
-  }
-
-  /**
-   * Releases the loader. Must be called when the instance is no longer needed.
-   */
-  public void release() {
-    released = true;
-    if (adsManager != null) {
-      adsManager.destroy();
-      adsManager = null;
-    }
-  }
-
-  // AdsLoader.AdsLoadedListener implementation.
-
-  @Override
-  public void onAdsManagerLoaded(AdsManagerLoadedEvent adsManagerLoadedEvent) {
-    AdsManager adsManager = adsManagerLoadedEvent.getAdsManager();
-    if (released) {
-      adsManager.destroy();
-      return;
-    }
-    this.adsManager = adsManager;
-    adsManager.addAdErrorListener(this);
-    adsManager.addAdEventListener(this);
-    if (ENABLE_PRELOADING) {
-      ImaSdkFactory imaSdkFactory = ImaSdkFactory.getInstance();
-      AdsRenderingSettings adsRenderingSettings = imaSdkFactory.createAdsRenderingSettings();
-      adsRenderingSettings.setEnablePreloading(true);
-      adsManager.init(adsRenderingSettings);
-      if (DEBUG) {
-        Log.d(TAG, "Initialized with preloading");
-      }
-    } else {
-      adsManager.init();
-      if (DEBUG) {
-        Log.d(TAG, "Initialized without preloading");
-      }
-    }
-    long[] adGroupTimesUs = getAdGroupTimesUs(adsManager.getAdCuePoints());
-    adPlaybackState = new AdPlaybackState(adGroupTimesUs);
-    updateAdPlaybackState();
-  }
-
-  // AdEvent.AdEventListener implementation.
-
-  @Override
-  public void onAdEvent(AdEvent adEvent) {
-    AdEventType adEventType = adEvent.getType();
-    boolean isLogAdEvent = adEventType == AdEventType.LOG;
-    if (DEBUG || isLogAdEvent) {
-      Log.w(TAG, "onAdEvent: " + adEventType);
-      if (isLogAdEvent) {
-        for (Map.Entry<String, String> entry : adEvent.getAdData().entrySet()) {
-          Log.w(TAG, "  " + entry.getKey() + ": " + entry.getValue());
-        }
-      }
-    }
-    if (adsManager == null) {
-      Log.w(TAG, "Dropping ad event after release: " + adEvent);
-      return;
-    }
-    Ad ad = adEvent.getAd();
-    switch (adEvent.getType()) {
-      case LOADED:
-        // The ad position is not always accurate when using preloading. See [Internal: b/62613240].
-        AdPodInfo adPodInfo = ad.getAdPodInfo();
-        int podIndex = adPodInfo.getPodIndex();
-        adGroupIndex = podIndex == -1 ? adPlaybackState.adGroupCount - 1 : podIndex;
-        int adPosition = adPodInfo.getAdPosition();
-        int adCountInAdGroup = adPodInfo.getTotalAds();
-        adsManager.start();
-        if (DEBUG) {
-          Log.d(TAG, "Loaded ad " + adPosition + " of " + adCountInAdGroup + " in ad group "
-              + adGroupIndex);
-        }
-        adPlaybackState.setAdCount(adGroupIndex, adCountInAdGroup);
-        updateAdPlaybackState();
-        break;
-      case CONTENT_PAUSE_REQUESTED:
-        // After CONTENT_PAUSE_REQUESTED, IMA will playAd/pauseAd/stopAd to show one or more ads
-        // before sending CONTENT_RESUME_REQUESTED.
-        imaPausedContent = true;
-        pauseContentInternal();
-        break;
-      case STARTED:
-        if (ad.isSkippable()) {
-          focusSkipButton();
-        }
-        break;
-      case TAPPED:
-        if (eventListener != null) {
-          eventListener.onAdTapped();
-        }
-        break;
-      case CLICKED:
-        if (eventListener != null) {
-          eventListener.onAdClicked();
-        }
-        break;
-      case CONTENT_RESUME_REQUESTED:
-        imaPausedContent = false;
-        resumeContentInternal();
-        break;
-      case ALL_ADS_COMPLETED:
-        // Do nothing. The ads manager will be released when the source is released.
-      default:
-        break;
-    }
-  }
-
-  // AdErrorEvent.AdErrorListener implementation.
-
-  @Override
-  public void onAdError(AdErrorEvent adErrorEvent) {
-    if (DEBUG) {
-      Log.d(TAG, "onAdError " + adErrorEvent);
-    }
-    if (adsManager == null) {
-      adPlaybackState = new AdPlaybackState(new long[0]);
-      updateAdPlaybackState();
-    }
-    if (eventListener != null) {
-      IOException exception = new IOException("Ad error: " + adErrorEvent, adErrorEvent.getError());
-      eventListener.onLoadError(exception);
-    }
-  }
-
-  // ContentProgressProvider implementation.
-
-  @Override
-  public VideoProgressUpdate getContentProgress() {
-    if (player == null) {
-      return lastContentProgress;
-    } else if (pendingContentPositionMs != C.TIME_UNSET) {
-      sentPendingContentPositionMs = true;
-      return new VideoProgressUpdate(pendingContentPositionMs, contentDurationMs);
-    } else if (fakeContentProgressElapsedRealtimeMs != C.TIME_UNSET) {
-      long elapsedSinceEndMs = SystemClock.elapsedRealtime() - fakeContentProgressElapsedRealtimeMs;
-      long fakePositionMs = fakeContentProgressOffsetMs + elapsedSinceEndMs;
-      return new VideoProgressUpdate(fakePositionMs, contentDurationMs);
-    } else if (playingAd || contentDurationMs == C.TIME_UNSET) {
-      return VideoProgressUpdate.VIDEO_TIME_NOT_READY;
-    } else {
-      return new VideoProgressUpdate(player.getCurrentPosition(), contentDurationMs);
-    }
-  }
-
-  // VideoAdPlayer implementation.
-
-  @Override
-  public VideoProgressUpdate getAdProgress() {
-    if (player == null) {
-      return lastAdProgress;
-    } else if (!playingAd) {
-      return VideoProgressUpdate.VIDEO_TIME_NOT_READY;
-    } else {
-      long adDuration = player.getDuration();
-      return adDuration == C.TIME_UNSET ? VideoProgressUpdate.VIDEO_TIME_NOT_READY
-          : new VideoProgressUpdate(player.getCurrentPosition(), adDuration);
-    }
-  }
-
-  @Override
-  public void loadAd(String adUriString) {
-    if (DEBUG) {
-      Log.d(TAG, "loadAd in ad group " + adGroupIndex);
-    }
-    adPlaybackState.addAdUri(adGroupIndex, Uri.parse(adUriString));
-    updateAdPlaybackState();
-  }
-
-  @Override
-  public void addCallback(VideoAdPlayerCallback videoAdPlayerCallback) {
-    adCallbacks.add(videoAdPlayerCallback);
-  }
-
-  @Override
-  public void removeCallback(VideoAdPlayerCallback videoAdPlayerCallback) {
-    adCallbacks.remove(videoAdPlayerCallback);
-  }
-
-  @Override
-  public void playAd() {
-    if (DEBUG) {
-      Log.d(TAG, "playAd");
-    }
-    if (player == null) {
-      // Sometimes messages from IMA arrive after detaching the player. See [Internal: b/63801642].
-      Log.w(TAG, "Unexpected playAd while detached");
-    } else if (!player.getPlayWhenReady()) {
-      playWhenReadyOverriddenForAds = true;
-      player.setPlayWhenReady(true);
-    }
-    if (imaPlayingAd && !imaPausedInAd) {
-      // Work around an issue where IMA does not always call stopAd before resuming content.
-      // See [Internal: b/38354028, b/63320878].
-      Log.w(TAG, "Unexpected playAd without stopAd");
-    }
-    if (!imaPlayingAd) {
-      imaPlayingAd = true;
-      for (VideoAdPlayerCallback callback : adCallbacks) {
-        callback.onPlay();
-      }
-    } else if (imaPausedInAd) {
-      imaPausedInAd = false;
-      for (VideoAdPlayerCallback callback : adCallbacks) {
-        callback.onResume();
-      }
-    }
-  }
-
-  @Override
-  public void stopAd() {
-    if (DEBUG) {
-      Log.d(TAG, "stopAd");
-    }
-    if (player == null) {
-      // Sometimes messages from IMA arrive after detaching the player. See [Internal: b/63801642].
-      Log.w(TAG, "Unexpected stopAd while detached");
-    }
-    if (!imaPlayingAd) {
-      Log.w(TAG, "Unexpected stopAd");
-      return;
-    }
-    stopAdInternal();
-  }
-
-  @Override
-  public void pauseAd() {
-    if (DEBUG) {
-      Log.d(TAG, "pauseAd");
-    }
-    if (!imaPlayingAd) {
-      // This method is called after content is resumed.
-      return;
-    }
-    imaPausedInAd = true;
-    for (VideoAdPlayerCallback callback : adCallbacks) {
-      callback.onPause();
-    }
-  }
-
-  @Override
-  public void resumeAd() {
-    // This method is never called. See [Internal: b/18931719].
-    throw new IllegalStateException();
-  }
-
-  // Player.EventListener implementation.
-
-  @Override
-  public void onTimelineChanged(Timeline timeline, Object manifest) {
-    if (timeline.isEmpty()) {
-      // The player is being re-prepared and this source will be released.
-      return;
-    }
-    Assertions.checkArgument(timeline.getPeriodCount() == 1);
-    this.timeline = timeline;
-    contentDurationMs = C.usToMs(timeline.getPeriod(0, period).durationUs);
-    updateImaStateForPlayerState();
-  }
-
-  @Override
-  public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
-    // Do nothing.
-  }
-
-  @Override
-  public void onLoadingChanged(boolean isLoading) {
-    // Do nothing.
-  }
-
-  @Override
-  public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
-    if (adsManager == null) {
-      return;
-    }
-
-    if (!imaPlayingAd && playbackState == Player.STATE_BUFFERING && playWhenReady) {
-      checkForContentComplete();
-    } else if (imaPlayingAd && playbackState == Player.STATE_ENDED) {
-      // IMA is waiting for the ad playback to finish so invoke the callback now.
-      // Either CONTENT_RESUME_REQUESTED will be passed next, or playAd will be called again.
-      for (VideoAdPlayerCallback callback : adCallbacks) {
-        callback.onEnded();
-      }
-    }
-  }
-
-  @Override
-  public void onRepeatModeChanged(int repeatMode) {
-    // Do nothing.
-  }
-
-  @Override
-  public void onPlayerError(ExoPlaybackException error) {
-    if (playingAd) {
-      for (VideoAdPlayerCallback callback : adCallbacks) {
-        callback.onError();
-      }
-    }
-  }
-
-  @Override
-  public void onPositionDiscontinuity() {
-    if (adsManager == null) {
-      return;
-    }
-    if (!playingAd && !player.isPlayingAd()) {
-      checkForContentComplete();
-      if (sentContentComplete) {
-        for (int i = 0; i < adPlaybackState.adGroupCount; i++) {
-          if (adPlaybackState.adGroupTimesUs[i] != C.TIME_END_OF_SOURCE) {
-            adPlaybackState.playedAdGroup(i);
-          }
-        }
-        updateAdPlaybackState();
-      } else {
-        long positionMs = player.getCurrentPosition();
-        timeline.getPeriod(0, period);
-        if (period.getAdGroupIndexForPositionUs(C.msToUs(positionMs)) != C.INDEX_UNSET) {
-          sentPendingContentPositionMs = false;
-          pendingContentPositionMs = positionMs;
-        }
-      }
-    } else {
-      updateImaStateForPlayerState();
-    }
-  }
-
-  @Override
-  public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {
-    // Do nothing.
-  }
-
-  // Internal methods.
-
-  private void requestAds() {
-    AdsRequest request = imaSdkFactory.createAdsRequest();
-    request.setAdTagUrl(adTagUri.toString());
-    request.setAdDisplayContainer(adDisplayContainer);
-    request.setContentProgressProvider(this);
-    adsLoader.requestAds(request);
-  }
-
-  private void updateImaStateForPlayerState() {
-    boolean wasPlayingAd = playingAd;
-    playingAd = player.isPlayingAd();
-    if (!playingAd && playWhenReadyOverriddenForAds) {
-      playWhenReadyOverriddenForAds = false;
-      player.setPlayWhenReady(false);
-    }
-    if (!sentContentComplete) {
-      boolean adFinished = (wasPlayingAd && !playingAd)
-          || playingAdIndexInAdGroup != player.getCurrentAdIndexInAdGroup();
-      if (adFinished) {
-        // IMA is waiting for the ad playback to finish so invoke the callback now.
-        // Either CONTENT_RESUME_REQUESTED will be passed next, or playAd will be called again.
-        for (VideoAdPlayerCallback callback : adCallbacks) {
-          callback.onEnded();
-        }
-      }
-      if (!wasPlayingAd && playingAd) {
-        int adGroupIndex = player.getCurrentAdGroupIndex();
-        // IMA hasn't sent CONTENT_PAUSE_REQUESTED yet, so fake the content position.
-        Assertions.checkState(fakeContentProgressElapsedRealtimeMs == C.TIME_UNSET);
-        fakeContentProgressElapsedRealtimeMs = SystemClock.elapsedRealtime();
-        fakeContentProgressOffsetMs = C.usToMs(adPlaybackState.adGroupTimesUs[adGroupIndex]);
-        if (fakeContentProgressOffsetMs == C.TIME_END_OF_SOURCE) {
-          fakeContentProgressOffsetMs = contentDurationMs;
-        }
-      }
-    }
-    playingAdIndexInAdGroup = playingAd ? player.getCurrentAdIndexInAdGroup() : C.INDEX_UNSET;
-  }
-
-  private void resumeContentInternal() {
-    if (imaPlayingAd) {
-      if (DEBUG) {
-        Log.d(TAG, "Unexpected CONTENT_RESUME_REQUESTED without stopAd");
-      }
-    }
-    if (playingAd && adGroupIndex != C.INDEX_UNSET) {
-      adPlaybackState.playedAdGroup(adGroupIndex);
-      adGroupIndex = C.INDEX_UNSET;
-      updateAdPlaybackState();
-    }
-    clearFlags();
-  }
-
-  private void pauseContentInternal() {
-    if (sentPendingContentPositionMs) {
-      pendingContentPositionMs = C.TIME_UNSET;
-      sentPendingContentPositionMs = false;
-    }
-    // IMA is requesting to pause content, so stop faking the content position.
-    fakeContentProgressElapsedRealtimeMs = C.TIME_UNSET;
-    fakeContentProgressOffsetMs = C.TIME_UNSET;
-    clearFlags();
-  }
-
-  private void stopAdInternal() {
-    Assertions.checkState(imaPlayingAd);
-    adPlaybackState.playedAd(adGroupIndex);
-    updateAdPlaybackState();
-    if (!playingAd) {
-      adGroupIndex = C.INDEX_UNSET;
-    }
-    clearFlags();
-  }
-
-  private void clearFlags() {
-    // If an ad is displayed, these flags will be updated in response to playAd/pauseAd/stopAd until
-    // the content is resumed.
-    imaPlayingAd = false;
-    imaPausedInAd = false;
-  }
-
-  private void checkForContentComplete() {
-    if (contentDurationMs != C.TIME_UNSET && pendingContentPositionMs == C.TIME_UNSET
-        && player.getContentPosition() + END_OF_CONTENT_POSITION_THRESHOLD_MS >= contentDurationMs
-        && !sentContentComplete) {
-      adsLoader.contentComplete();
-      if (DEBUG) {
-        Log.d(TAG, "adsLoader.contentComplete");
-      }
-      sentContentComplete = true;
-    }
-  }
-
-  private void updateAdPlaybackState() {
-    // Ignore updates while detached. When a player is attached it will receive the latest state.
-    if (eventListener != null) {
-      eventListener.onAdPlaybackState(adPlaybackState.copy());
-    }
-  }
-
-  private static long[] getAdGroupTimesUs(List<Float> cuePoints) {
-    if (cuePoints.isEmpty()) {
-      // If no cue points are specified, there is a preroll ad.
-      return new long[] {0};
-    }
-
-    int count = cuePoints.size();
-    long[] adGroupTimesUs = new long[count];
-    for (int i = 0; i < count; i++) {
-      double cuePoint = cuePoints.get(i);
-      adGroupTimesUs[i] =
-          cuePoint == -1.0 ? C.TIME_END_OF_SOURCE : (long) (C.MICROS_PER_SECOND * cuePoint);
-    }
-    return adGroupTimesUs;
-  }
-
-  private void focusSkipButton() {
-    if (playingAd && adUiViewGroup != null && adUiViewGroup.getChildCount() > 0
-        && adUiViewGroup.getChildAt(0) instanceof WebView) {
-      WebView webView = (WebView) (adUiViewGroup.getChildAt(0));
-      webView.requestFocus();
-      webView.loadUrl(FOCUS_SKIP_BUTTON_WORKAROUND_JS);
-    }
-  }
-
-}
diff --git a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsMediaSource.java b/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsMediaSource.java
deleted file mode 100644
index d56a3ad41f..0000000000
--- a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsMediaSource.java
+++ /dev/null
@@ -1,350 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ima;
-
-import android.os.Handler;
-import android.os.Looper;
-import android.support.annotation.Nullable;
-import android.util.Log;
-import android.view.ViewGroup;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlayer;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
-import com.google.android.exoplayer2.source.ExtractorMediaSource;
-import com.google.android.exoplayer2.source.MediaPeriod;
-import com.google.android.exoplayer2.source.MediaSource;
-import com.google.android.exoplayer2.upstream.Allocator;
-import com.google.android.exoplayer2.upstream.DataSource;
-import com.google.android.exoplayer2.util.Assertions;
-import java.io.IOException;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Map;
-
-/**
- * A {@link MediaSource} that inserts ads linearly with a provided content media source using the
- * Interactive Media Ads SDK for ad loading and tracking.
- */
-public final class ImaAdsMediaSource implements MediaSource {
-
-  /**
-   * Listener for events relating to ad loading.
-   */
-  public interface AdsListener {
-
-    /**
-     * Called if there was an error loading ads. The media source will load the content without ads
-     * if ads can't be loaded, so listen for this event if you need to implement additional handling
-     * (for example, stopping the player).
-     *
-     * @param error The error.
-     */
-    void onAdLoadError(IOException error);
-
-    /**
-     * Called when the user clicks through an ad (for example, following a 'learn more' link).
-     */
-    void onAdClicked();
-
-    /**
-     * Called when the user taps a non-clickthrough part of an ad.
-     */
-    void onAdTapped();
-
-  }
-
-  private static final String TAG = "ImaAdsMediaSource";
-
-  private final MediaSource contentMediaSource;
-  private final DataSource.Factory dataSourceFactory;
-  private final ImaAdsLoader imaAdsLoader;
-  private final ViewGroup adUiViewGroup;
-  private final Handler mainHandler;
-  private final AdsLoaderListener adsLoaderListener;
-  private final Map<MediaPeriod, MediaSource> adMediaSourceByMediaPeriod;
-  private final Timeline.Period period;
-  @Nullable
-  private final Handler eventHandler;
-  @Nullable
-  private final AdsListener eventListener;
-
-  private Handler playerHandler;
-  private ExoPlayer player;
-  private volatile boolean released;
-
-  // Accessed on the player thread.
-  private Timeline contentTimeline;
-  private Object contentManifest;
-  private AdPlaybackState adPlaybackState;
-  private MediaSource[][] adGroupMediaSources;
-  private long[][] adDurationsUs;
-  private MediaSource.Listener listener;
-
-  /**
-   * Constructs a new source that inserts ads linearly with the content specified by
-   * {@code contentMediaSource}.
-   *
-   * @param contentMediaSource The {@link MediaSource} providing the content to play.
-   * @param dataSourceFactory Factory for data sources used to load ad media.
-   * @param imaAdsLoader The loader for ads.
-   * @param adUiViewGroup A {@link ViewGroup} on top of the player that will show any ad UI.
-   */
-  public ImaAdsMediaSource(MediaSource contentMediaSource, DataSource.Factory dataSourceFactory,
-      ImaAdsLoader imaAdsLoader, ViewGroup adUiViewGroup) {
-    this(contentMediaSource, dataSourceFactory, imaAdsLoader, adUiViewGroup, null, null);
-  }
-
-  /**
-   * Constructs a new source that inserts ads linearly with the content specified by
-   * {@code contentMediaSource}.
-   *
-   * @param contentMediaSource The {@link MediaSource} providing the content to play.
-   * @param dataSourceFactory Factory for data sources used to load ad media.
-   * @param imaAdsLoader The loader for ads.
-   * @param adUiViewGroup A {@link ViewGroup} on top of the player that will show any ad UI.
-   * @param eventHandler A handler for events. May be null if delivery of events is not required.
-   * @param eventListener A listener of events. May be null if delivery of events is not required.
-   */
-  public ImaAdsMediaSource(MediaSource contentMediaSource, DataSource.Factory dataSourceFactory,
-      ImaAdsLoader imaAdsLoader, ViewGroup adUiViewGroup, @Nullable Handler eventHandler,
-      @Nullable AdsListener eventListener) {
-    this.contentMediaSource = contentMediaSource;
-    this.dataSourceFactory = dataSourceFactory;
-    this.imaAdsLoader = imaAdsLoader;
-    this.adUiViewGroup = adUiViewGroup;
-    this.eventHandler = eventHandler;
-    this.eventListener = eventListener;
-    mainHandler = new Handler(Looper.getMainLooper());
-    adsLoaderListener = new AdsLoaderListener();
-    adMediaSourceByMediaPeriod = new HashMap<>();
-    period = new Timeline.Period();
-    adGroupMediaSources = new MediaSource[0][];
-    adDurationsUs = new long[0][];
-  }
-
-  @Override
-  public void prepareSource(final ExoPlayer player, boolean isTopLevelSource, Listener listener) {
-    Assertions.checkArgument(isTopLevelSource);
-    this.listener = listener;
-    this.player = player;
-    playerHandler = new Handler();
-    contentMediaSource.prepareSource(player, false, new Listener() {
-      @Override
-      public void onSourceInfoRefreshed(Timeline timeline, Object manifest) {
-        ImaAdsMediaSource.this.onContentSourceInfoRefreshed(timeline, manifest);
-      }
-    });
-    mainHandler.post(new Runnable() {
-      @Override
-      public void run() {
-        imaAdsLoader.attachPlayer(player, adsLoaderListener, adUiViewGroup);
-      }
-    });
-  }
-
-  @Override
-  public void maybeThrowSourceInfoRefreshError() throws IOException {
-    contentMediaSource.maybeThrowSourceInfoRefreshError();
-    for (MediaSource[] mediaSources : adGroupMediaSources) {
-      for (MediaSource mediaSource : mediaSources) {
-        if (mediaSource != null) {
-          mediaSource.maybeThrowSourceInfoRefreshError();
-        }
-      }
-    }
-  }
-
-  @Override
-  public MediaPeriod createPeriod(MediaPeriodId id, Allocator allocator) {
-    if (adPlaybackState.adGroupCount > 0 && id.isAd()) {
-      final int adGroupIndex = id.adGroupIndex;
-      final int adIndexInAdGroup = id.adIndexInAdGroup;
-      if (adGroupMediaSources[adGroupIndex].length <= adIndexInAdGroup) {
-        MediaSource adMediaSource = new ExtractorMediaSource(
-            adPlaybackState.adUris[id.adGroupIndex][id.adIndexInAdGroup], dataSourceFactory,
-            new DefaultExtractorsFactory(), mainHandler, adsLoaderListener);
-        int oldAdCount = adGroupMediaSources[id.adGroupIndex].length;
-        if (adIndexInAdGroup >= oldAdCount) {
-          int adCount = adIndexInAdGroup + 1;
-          adGroupMediaSources[adGroupIndex] =
-              Arrays.copyOf(adGroupMediaSources[adGroupIndex], adCount);
-          adDurationsUs[adGroupIndex] = Arrays.copyOf(adDurationsUs[adGroupIndex], adCount);
-          Arrays.fill(adDurationsUs[adGroupIndex], oldAdCount, adCount, C.TIME_UNSET);
-        }
-        adGroupMediaSources[adGroupIndex][adIndexInAdGroup] = adMediaSource;
-        adMediaSource.prepareSource(player, false, new Listener() {
-          @Override
-          public void onSourceInfoRefreshed(Timeline timeline, Object manifest) {
-            onAdSourceInfoRefreshed(adGroupIndex, adIndexInAdGroup, timeline);
-          }
-        });
-      }
-      MediaSource mediaSource = adGroupMediaSources[adGroupIndex][adIndexInAdGroup];
-      MediaPeriod mediaPeriod = mediaSource.createPeriod(new MediaPeriodId(0), allocator);
-      adMediaSourceByMediaPeriod.put(mediaPeriod, mediaSource);
-      return mediaPeriod;
-    } else {
-      return contentMediaSource.createPeriod(id, allocator);
-    }
-  }
-
-  @Override
-  public void releasePeriod(MediaPeriod mediaPeriod) {
-    if (adMediaSourceByMediaPeriod.containsKey(mediaPeriod)) {
-      adMediaSourceByMediaPeriod.remove(mediaPeriod).releasePeriod(mediaPeriod);
-    } else {
-      contentMediaSource.releasePeriod(mediaPeriod);
-    }
-  }
-
-  @Override
-  public void releaseSource() {
-    released = true;
-    contentMediaSource.releaseSource();
-    for (MediaSource[] mediaSources : adGroupMediaSources) {
-      for (MediaSource mediaSource : mediaSources) {
-        if (mediaSource != null) {
-          mediaSource.releaseSource();
-        }
-      }
-    }
-    mainHandler.post(new Runnable() {
-      @Override
-      public void run() {
-        imaAdsLoader.detachPlayer();
-      }
-    });
-  }
-
-  // Internal methods.
-
-  private void onAdPlaybackState(AdPlaybackState adPlaybackState) {
-    if (this.adPlaybackState == null) {
-      adGroupMediaSources = new MediaSource[adPlaybackState.adGroupCount][];
-      Arrays.fill(adGroupMediaSources, new MediaSource[0]);
-      adDurationsUs = new long[adPlaybackState.adGroupCount][];
-      Arrays.fill(adDurationsUs, new long[0]);
-    }
-    this.adPlaybackState = adPlaybackState;
-    maybeUpdateSourceInfo();
-  }
-
-  private void onLoadError(final IOException error) {
-    Log.w(TAG, "Ad load error", error);
-    if (eventHandler != null && eventListener != null) {
-      eventHandler.post(new Runnable() {
-        @Override
-        public void run() {
-          if (!released) {
-            eventListener.onAdLoadError(error);
-          }
-        }
-      });
-    }
-  }
-
-  private void onContentSourceInfoRefreshed(Timeline timeline, Object manifest) {
-    contentTimeline = timeline;
-    contentManifest = manifest;
-    maybeUpdateSourceInfo();
-  }
-
-  private void onAdSourceInfoRefreshed(int adGroupIndex, int adIndexInAdGroup, Timeline timeline) {
-    Assertions.checkArgument(timeline.getPeriodCount() == 1);
-    adDurationsUs[adGroupIndex][adIndexInAdGroup] = timeline.getPeriod(0, period).getDurationUs();
-    maybeUpdateSourceInfo();
-  }
-
-  private void maybeUpdateSourceInfo() {
-    if (adPlaybackState != null && contentTimeline != null) {
-      Timeline timeline = adPlaybackState.adGroupCount == 0 ? contentTimeline
-          : new SinglePeriodAdTimeline(contentTimeline, adPlaybackState.adGroupTimesUs,
-              adPlaybackState.adCounts, adPlaybackState.adsLoadedCounts,
-              adPlaybackState.adsPlayedCounts, adDurationsUs, adPlaybackState.adResumePositionUs);
-      listener.onSourceInfoRefreshed(timeline, contentManifest);
-    }
-  }
-
-  /**
-   * Listener for ad loading events. All methods are called on the main thread.
-   */
-  private final class AdsLoaderListener implements ImaAdsLoader.EventListener,
-      ExtractorMediaSource.EventListener {
-
-    @Override
-    public void onAdPlaybackState(final AdPlaybackState adPlaybackState) {
-      if (released) {
-        return;
-      }
-      playerHandler.post(new Runnable() {
-        @Override
-        public void run() {
-          if (released) {
-            return;
-          }
-          ImaAdsMediaSource.this.onAdPlaybackState(adPlaybackState);
-        }
-      });
-    }
-
-    @Override
-    public void onLoadError(final IOException error) {
-      if (released) {
-        return;
-      }
-      playerHandler.post(new Runnable() {
-        @Override
-        public void run() {
-          if (released) {
-            return;
-          }
-          ImaAdsMediaSource.this.onLoadError(error);
-        }
-      });
-    }
-
-    @Override
-    public void onAdClicked() {
-      if (eventHandler != null && eventListener != null) {
-        eventHandler.post(new Runnable() {
-          @Override
-          public void run() {
-            if (!released) {
-              eventListener.onAdClicked();
-            }
-          }
-        });
-      }
-    }
-
-    @Override
-    public void onAdTapped() {
-      if (eventHandler != null && eventListener != null) {
-        eventHandler.post(new Runnable() {
-          @Override
-          public void run() {
-            if (!released) {
-              eventListener.onAdTapped();
-            }
-          }
-        });
-      }
-    }
-
-  }
-
-}
diff --git a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/SinglePeriodAdTimeline.java b/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/SinglePeriodAdTimeline.java
deleted file mode 100644
index 1d73234286..0000000000
--- a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/SinglePeriodAdTimeline.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.ima;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.util.Assertions;
-
-/**
- * A {@link Timeline} for sources that have ads.
- */
-/* package */ final class SinglePeriodAdTimeline extends Timeline {
-
-  private final Timeline contentTimeline;
-  private final long[] adGroupTimesUs;
-  private final int[] adCounts;
-  private final int[] adsLoadedCounts;
-  private final int[] adsPlayedCounts;
-  private final long[][] adDurationsUs;
-  private final long adResumePositionUs;
-
-  /**
-   * Creates a new timeline with a single period containing the specified ads.
-   *
-   * @param contentTimeline The timeline of the content alongside which ads will be played. It must
-   *     have one window and one period.
-   * @param adGroupTimesUs The times of ad groups relative to the start of the period, in
-   *     microseconds. A final element with the value {@link C#TIME_END_OF_SOURCE} indicates that
-   *     the period has a postroll ad.
-   * @param adCounts The number of ads in each ad group. An element may be {@link C#LENGTH_UNSET}
-   *     if the number of ads is not yet known.
-   * @param adsLoadedCounts The number of ads loaded so far in each ad group.
-   * @param adsPlayedCounts The number of ads played so far in each ad group.
-   * @param adDurationsUs The duration of each ad in each ad group, in microseconds. An element
-   *     may be {@link C#TIME_UNSET} if the duration is not yet known.
-   * @param adResumePositionUs The position offset in the earliest unplayed ad at which to begin
-   *     playback, in microseconds.
-   */
-  public SinglePeriodAdTimeline(Timeline contentTimeline, long[] adGroupTimesUs, int[] adCounts,
-      int[] adsLoadedCounts, int[] adsPlayedCounts, long[][] adDurationsUs,
-      long adResumePositionUs) {
-    Assertions.checkState(contentTimeline.getPeriodCount() == 1);
-    Assertions.checkState(contentTimeline.getWindowCount() == 1);
-    this.contentTimeline = contentTimeline;
-    this.adGroupTimesUs = adGroupTimesUs;
-    this.adCounts = adCounts;
-    this.adsLoadedCounts = adsLoadedCounts;
-    this.adsPlayedCounts = adsPlayedCounts;
-    this.adDurationsUs = adDurationsUs;
-    this.adResumePositionUs = adResumePositionUs;
-  }
-
-  @Override
-  public int getWindowCount() {
-    return 1;
-  }
-
-  @Override
-  public Window getWindow(int windowIndex, Window window, boolean setIds,
-      long defaultPositionProjectionUs) {
-    return contentTimeline.getWindow(windowIndex, window, setIds, defaultPositionProjectionUs);
-  }
-
-  @Override
-  public int getPeriodCount() {
-    return 1;
-  }
-
-  @Override
-  public Period getPeriod(int periodIndex, Period period, boolean setIds) {
-    contentTimeline.getPeriod(periodIndex, period, setIds);
-    period.set(period.id, period.uid, period.windowIndex, period.durationUs,
-        period.getPositionInWindowUs(), adGroupTimesUs, adCounts, adsLoadedCounts, adsPlayedCounts,
-        adDurationsUs, adResumePositionUs);
-    return period;
-  }
-
-  @Override
-  public int getIndexOfPeriod(Object uid) {
-    return contentTimeline.getIndexOfPeriod(uid);
-  }
-
-}
diff --git a/extensions/mediasession/README.md b/extensions/mediasession/README.md
deleted file mode 100644
index 3278e8dba5..0000000000
--- a/extensions/mediasession/README.md
+++ /dev/null
@@ -1,32 +0,0 @@
-# ExoPlayer MediaSession extension #
-
-The MediaSession extension mediates between a Player (or ExoPlayer) instance
-and a [MediaSession][]. It automatically retrieves and implements playback
-actions and syncs the player state with the state of the media session. The
-behaviour can be extended to support other playback and custom actions.
-
-[MediaSession]: https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.html
-
-## Getting the extension ##
-
-The easiest way to use the extension is to add it as a gradle dependency:
-
-```gradle
-compile 'com.google.android.exoplayer:extension-mediasession:rX.X.X'
-```
-
-where `rX.X.X` is the version, which must match the version of the ExoPlayer
-library being used.
-
-Alternatively, you can clone the ExoPlayer repository and depend on the module
-locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-
-## Links ##
-
-* [Javadoc][]: Classes matching
-  `com.google.android.exoplayer2.ext.mediasession.*` belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/mediasession/build.gradle b/extensions/mediasession/build.gradle
deleted file mode 100644
index 7655e72114..0000000000
--- a/extensions/mediasession/build.gradle
+++ /dev/null
@@ -1,31 +0,0 @@
-// Copyright (C) 2017 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion project.ext.minSdkVersion
-        targetSdkVersion project.ext.targetSdkVersion
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-    compile 'com.android.support:support-media-compat:' + supportLibraryVersion
-    compile 'com.android.support:appcompat-v7:' + supportLibraryVersion
-}
\ No newline at end of file
diff --git a/extensions/mediasession/src/main/AndroidManifest.xml b/extensions/mediasession/src/main/AndroidManifest.xml
deleted file mode 100644
index 8ed6ef2011..0000000000
--- a/extensions/mediasession/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest package="com.google.android.exoplayer2.ext.mediasession"/>
diff --git a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/DefaultPlaybackController.java b/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/DefaultPlaybackController.java
deleted file mode 100644
index c3586b29e6..0000000000
--- a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/DefaultPlaybackController.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/*
- * Copyright (c) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.mediasession;
-
-import android.support.v4.media.session.PlaybackStateCompat;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Player;
-
-/**
- * A default implementation of {@link MediaSessionConnector.PlaybackController}.
- * <p>
- * Methods can be safely overridden by subclasses to intercept calls for given actions.
- */
-public class DefaultPlaybackController implements MediaSessionConnector.PlaybackController {
-
-  /**
-   * The default fast forward increment, in milliseconds.
-   */
-  public static final int DEFAULT_FAST_FORWARD_MS = 15000;
-  /**
-   * The default rewind increment, in milliseconds.
-   */
-  public static final int DEFAULT_REWIND_MS = 5000;
-
-  private static final long BASE_ACTIONS = PlaybackStateCompat.ACTION_PLAY_PAUSE
-      | PlaybackStateCompat.ACTION_PLAY | PlaybackStateCompat.ACTION_PAUSE
-      | PlaybackStateCompat.ACTION_STOP;
-
-  protected final long rewindIncrementMs;
-  protected final long fastForwardIncrementMs;
-
-  /**
-   * Creates a new instance.
-   * <p>
-   * Equivalent to {@code DefaultPlaybackController(
-   *     DefaultPlaybackController.DEFAULT_REWIND_MS,
-   *     DefaultPlaybackController.DEFAULT_FAST_FORWARD_MS)}.
-   */
-  public DefaultPlaybackController() {
-    this(DEFAULT_REWIND_MS, DEFAULT_FAST_FORWARD_MS);
-  }
-
-  /**
-   * Creates a new instance with the given fast forward and rewind increments.
-   *
-   * @param rewindIncrementMs The rewind increment in milliseconds. A zero or negative value will
-   *     cause the rewind action to be disabled.
-   * @param fastForwardIncrementMs The fast forward increment in milliseconds. A zero or negative
-   *     value will cause the fast forward action to be removed.
-   */
-  public DefaultPlaybackController(long rewindIncrementMs, long fastForwardIncrementMs) {
-    this.rewindIncrementMs = rewindIncrementMs;
-    this.fastForwardIncrementMs = fastForwardIncrementMs;
-  }
-
-  @Override
-  public long getSupportedPlaybackActions(Player player) {
-    if (player == null || player.getCurrentTimeline().isEmpty()) {
-      return 0;
-    }
-    long actions = BASE_ACTIONS;
-    if (player.isCurrentWindowSeekable()) {
-      actions |= PlaybackStateCompat.ACTION_SEEK_TO;
-    }
-    if (fastForwardIncrementMs > 0) {
-      actions |= PlaybackStateCompat.ACTION_FAST_FORWARD;
-    }
-    if (rewindIncrementMs > 0) {
-      actions |= PlaybackStateCompat.ACTION_REWIND;
-    }
-    return actions;
-  }
-
-  @Override
-  public void onPlay(Player player) {
-    player.setPlayWhenReady(true);
-  }
-
-  @Override
-  public void onPause(Player player) {
-    player.setPlayWhenReady(false);
-  }
-
-  @Override
-  public void onSeekTo(Player player, long position) {
-    long duration = player.getDuration();
-    if (duration != C.TIME_UNSET) {
-      position = Math.min(position, duration);
-    }
-    player.seekTo(Math.max(position, 0));
-  }
-
-  @Override
-  public void onFastForward(Player player) {
-    if (fastForwardIncrementMs <= 0) {
-      return;
-    }
-    onSeekTo(player, player.getCurrentPosition() + fastForwardIncrementMs);
-  }
-
-  @Override
-  public void onRewind(Player player) {
-    if (rewindIncrementMs <= 0) {
-      return;
-    }
-    onSeekTo(player, player.getCurrentPosition() - rewindIncrementMs);
-  }
-
-  @Override
-  public void onStop(Player player) {
-    player.stop();
-  }
-
-}
diff --git a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.java b/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.java
deleted file mode 100644
index 329d446506..0000000000
--- a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.java
+++ /dev/null
@@ -1,849 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.mediasession;
-
-import android.net.Uri;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
-import android.os.ResultReceiver;
-import android.os.SystemClock;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.v4.media.MediaDescriptionCompat;
-import android.support.v4.media.MediaMetadataCompat;
-import android.support.v4.media.RatingCompat;
-import android.support.v4.media.session.MediaControllerCompat;
-import android.support.v4.media.session.MediaSessionCompat;
-import android.support.v4.media.session.PlaybackStateCompat;
-import android.util.Pair;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.PlaybackParameters;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Connects a {@link MediaSessionCompat} to a {@link Player}.
- * <p>
- * The connector listens for actions sent by the media session's controller and implements these
- * actions by calling appropriate player methods. The playback state of the media session is
- * automatically synced with the player. The connector can also be optionally extended by providing
- * various collaborators:
- * <ul>
- *   <li>Actions to initiate media playback ({@code PlaybackStateCompat#ACTION_PREPARE_*} and
- *   {@code PlaybackStateCompat#ACTION_PLAY_*}) can be handled by a {@link PlaybackPreparer} passed
- *   when calling {@link #setPlayer(Player, PlaybackPreparer, CustomActionProvider...)}. Custom
- *   actions can be handled by passing one or more {@link CustomActionProvider}s in a similar way.
- *   </li>
- *   <li>To enable a media queue and navigation within it, you can set a {@link QueueNavigator} by
- *   calling {@link #setQueueNavigator(QueueNavigator)}. Use of {@link TimelineQueueNavigator} is
- *   recommended for most use cases.</li>
- *   <li>To enable editing of the media queue, you can set a {@link QueueEditor} by calling
- *   {@link #setQueueEditor(QueueEditor)}.</li>
- *   <li>An {@link ErrorMessageProvider} for providing human readable error messages and
- *   corresponding error codes can be set by calling
- *   {@link #setErrorMessageProvider(ErrorMessageProvider)}.</li>
- * </ul>
- */
-public final class MediaSessionConnector {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.mediasession");
-  }
-
-  public static final String EXTRAS_PITCH = "EXO_PITCH";
-  private static final int BASE_MEDIA_SESSION_FLAGS = MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS
-      | MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS;
-  private static final int EDITOR_MEDIA_SESSION_FLAGS = BASE_MEDIA_SESSION_FLAGS
-      | MediaSessionCompat.FLAG_HANDLES_QUEUE_COMMANDS;
-
-  /**
-   * Interface to which playback preparation actions are delegated.
-   */
-  public interface PlaybackPreparer {
-
-    long ACTIONS = PlaybackStateCompat.ACTION_PREPARE
-        | PlaybackStateCompat.ACTION_PREPARE_FROM_MEDIA_ID
-        | PlaybackStateCompat.ACTION_PREPARE_FROM_SEARCH
-        | PlaybackStateCompat.ACTION_PREPARE_FROM_URI
-        | PlaybackStateCompat.ACTION_PLAY_FROM_MEDIA_ID
-        | PlaybackStateCompat.ACTION_PLAY_FROM_SEARCH
-        | PlaybackStateCompat.ACTION_PLAY_FROM_URI;
-
-    /**
-     * Returns the actions which are supported by the preparer. The supported actions must be a
-     * bitmask combined out of {@link PlaybackStateCompat#ACTION_PREPARE},
-     * {@link PlaybackStateCompat#ACTION_PREPARE_FROM_MEDIA_ID},
-     * {@link PlaybackStateCompat#ACTION_PREPARE_FROM_SEARCH},
-     * {@link PlaybackStateCompat#ACTION_PREPARE_FROM_URI},
-     * {@link PlaybackStateCompat#ACTION_PLAY_FROM_MEDIA_ID},
-     * {@link PlaybackStateCompat#ACTION_PLAY_FROM_SEARCH} and
-     * {@link PlaybackStateCompat#ACTION_PLAY_FROM_URI}.
-     *
-     * @return The bitmask of the supported media actions.
-     */
-    long getSupportedPrepareActions();
-    /**
-     * See {@link MediaSessionCompat.Callback#onPrepare()}.
-     */
-    void onPrepare();
-    /**
-     * See {@link MediaSessionCompat.Callback#onPrepareFromMediaId(String, Bundle)}.
-     */
-    void onPrepareFromMediaId(String mediaId, Bundle extras);
-    /**
-     * See {@link MediaSessionCompat.Callback#onPrepareFromSearch(String, Bundle)}.
-     */
-    void onPrepareFromSearch(String query, Bundle extras);
-    /**
-     * See {@link MediaSessionCompat.Callback#onPrepareFromUri(Uri, Bundle)}.
-     */
-    void onPrepareFromUri(Uri uri, Bundle extras);
-    /**
-     * See {@link MediaSessionCompat.Callback#onCommand(String, Bundle, ResultReceiver)}.
-     */
-    void onCommand(String command, Bundle extras, ResultReceiver cb);
-  }
-
-  /**
-   * Interface to which playback actions are delegated.
-   */
-  public interface PlaybackController {
-
-    long ACTIONS = PlaybackStateCompat.ACTION_PLAY_PAUSE | PlaybackStateCompat.ACTION_PLAY
-        | PlaybackStateCompat.ACTION_PAUSE | PlaybackStateCompat.ACTION_SEEK_TO
-        | PlaybackStateCompat.ACTION_FAST_FORWARD | PlaybackStateCompat.ACTION_REWIND
-        | PlaybackStateCompat.ACTION_STOP;
-
-    /**
-     * Returns the actions which are supported by the controller. The supported actions must be a
-     * bitmask combined out of {@link PlaybackStateCompat#ACTION_PLAY_PAUSE},
-     * {@link PlaybackStateCompat#ACTION_PLAY}, {@link PlaybackStateCompat#ACTION_PAUSE},
-     * {@link PlaybackStateCompat#ACTION_SEEK_TO}, {@link PlaybackStateCompat#ACTION_FAST_FORWARD},
-     * {@link PlaybackStateCompat#ACTION_REWIND} and {@link PlaybackStateCompat#ACTION_STOP}.
-     *
-     * @param player The player.
-     * @return The bitmask of the supported media actions.
-     */
-    long getSupportedPlaybackActions(@Nullable Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onPlay()}.
-     */
-    void onPlay(Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onPause()}.
-     */
-    void onPause(Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onSeekTo(long)}.
-     */
-    void onSeekTo(Player player, long position);
-    /**
-     * See {@link MediaSessionCompat.Callback#onFastForward()}.
-     */
-    void onFastForward(Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onRewind()}.
-     */
-    void onRewind(Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onStop()}.
-     */
-    void onStop(Player player);
-  }
-
-  /**
-   * Handles queue navigation actions, and updates the media session queue by calling
-   * {@code MediaSessionCompat.setQueue()}.
-   */
-  public interface QueueNavigator {
-
-    long ACTIONS = PlaybackStateCompat.ACTION_SKIP_TO_QUEUE_ITEM
-        | PlaybackStateCompat.ACTION_SKIP_TO_NEXT | PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS
-        | PlaybackStateCompat.ACTION_SET_SHUFFLE_MODE_ENABLED;
-
-    /**
-     * Returns the actions which are supported by the navigator. The supported actions must be a
-     * bitmask combined out of {@link PlaybackStateCompat#ACTION_SKIP_TO_QUEUE_ITEM},
-     * {@link PlaybackStateCompat#ACTION_SKIP_TO_NEXT},
-     * {@link PlaybackStateCompat#ACTION_SKIP_TO_PREVIOUS},
-     * {@link PlaybackStateCompat#ACTION_SET_SHUFFLE_MODE_ENABLED}.
-     *
-     * @param player The {@link Player}.
-     * @return The bitmask of the supported media actions.
-     */
-    long getSupportedQueueNavigatorActions(@Nullable Player player);
-    /**
-     * Called when the timeline of the player has changed.
-     *
-     * @param player The player of which the timeline has changed.
-     */
-    void onTimelineChanged(Player player);
-    /**
-     * Called when the current window index changed.
-     *
-     * @param player The player of which the current window index of the timeline has changed.
-     */
-    void onCurrentWindowIndexChanged(Player player);
-    /**
-     * Gets the id of the currently active queue item, or
-     * {@link MediaSessionCompat.QueueItem#UNKNOWN_ID} if the active item is unknown.
-     * <p>
-     * To let the connector publish metadata for the active queue item, the queue item with the
-     * returned id must be available in the list of items returned by
-     * {@link MediaControllerCompat#getQueue()}.
-     *
-     * @param player The player connected to the media session.
-     * @return The id of the active queue item.
-     */
-    long getActiveQueueItemId(@Nullable Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onSkipToPrevious()}.
-     */
-    void onSkipToPrevious(Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onSkipToQueueItem(long)}.
-     */
-    void onSkipToQueueItem(Player player, long id);
-    /**
-     * See {@link MediaSessionCompat.Callback#onSkipToNext()}.
-     */
-    void onSkipToNext(Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onSetShuffleModeEnabled(boolean)}.
-     */
-    void onSetShuffleModeEnabled(Player player, boolean enabled);
-  }
-
-  /**
-   * Handles media session queue edits.
-   */
-  public interface QueueEditor {
-
-    long ACTIONS = PlaybackStateCompat.ACTION_SET_RATING;
-
-    /**
-     * Returns {@link PlaybackStateCompat#ACTION_SET_RATING} or {@code 0}. The Media API does
-     * not declare action constants for adding and removing queue items.
-     *
-     * @param player The {@link Player}.
-     */
-    long getSupportedQueueEditorActions(@Nullable Player player);
-    /**
-     * See {@link MediaSessionCompat.Callback#onAddQueueItem(MediaDescriptionCompat description)}.
-     */
-    void onAddQueueItem(Player player, MediaDescriptionCompat description);
-    /**
-     * See {@link MediaSessionCompat.Callback#onAddQueueItem(MediaDescriptionCompat description,
-     * int index)}.
-     */
-    void onAddQueueItem(Player player, MediaDescriptionCompat description, int index);
-    /**
-     * See {@link MediaSessionCompat.Callback#onRemoveQueueItem(MediaDescriptionCompat
-     * description)}.
-     */
-    void onRemoveQueueItem(Player player, MediaDescriptionCompat description);
-    /**
-     * See {@link MediaSessionCompat.Callback#onRemoveQueueItemAt(int index)}.
-     */
-    void onRemoveQueueItemAt(Player player, int index);
-    /**
-     * See {@link MediaSessionCompat.Callback#onSetRating(RatingCompat)}.
-     */
-    void onSetRating(Player player, RatingCompat rating);
-  }
-
-  /**
-   * Provides a {@link PlaybackStateCompat.CustomAction} to be published and handles the action when
-   * sent by a media controller.
-   */
-  public interface CustomActionProvider {
-    /**
-     * Called when a custom action provided by this provider is sent to the media session.
-     *
-     * @param action The name of the action which was sent by a media controller.
-     * @param extras Optional extras sent by a media controller.
-     */
-    void onCustomAction(String action, Bundle extras);
-
-    /**
-     * Returns a {@link PlaybackStateCompat.CustomAction} which will be published to the
-     * media session by the connector or {@code null} if this action should not be published at the
-     * given player state.
-     *
-     * @return The custom action to be included in the session playback state or {@code null}.
-     */
-    PlaybackStateCompat.CustomAction getCustomAction();
-  }
-
-  /**
-   * Converts an exception into an error code and a user readable error message.
-   */
-  public interface ErrorMessageProvider {
-    /**
-     * Returns a pair consisting of an error code and a user readable error message for a given
-     * exception.
-     */
-    Pair<Integer, String> getErrorMessage(ExoPlaybackException playbackException);
-  }
-
-  /**
-   * The wrapped {@link MediaSessionCompat}.
-   */
-  public final MediaSessionCompat mediaSession;
-
-  private final MediaControllerCompat mediaController;
-  private final Handler handler;
-  private final boolean doMaintainMetadata;
-  private final ExoPlayerEventListener exoPlayerEventListener;
-  private final MediaSessionCallback mediaSessionCallback;
-  private final PlaybackController playbackController;
-
-  private Player player;
-  private CustomActionProvider[] customActionProviders;
-  private Map<String, CustomActionProvider> customActionMap;
-  private ErrorMessageProvider errorMessageProvider;
-  private PlaybackPreparer playbackPreparer;
-  private QueueNavigator queueNavigator;
-  private QueueEditor queueEditor;
-  private ExoPlaybackException playbackException;
-
-  /**
-   * Creates an instance. Must be called on the same thread that is used to construct the player
-   * instances passed to {@link #setPlayer(Player, PlaybackPreparer, CustomActionProvider...)}.
-   * <p>
-   * Equivalent to {@code MediaSessionConnector(mediaSession, new DefaultPlaybackController())}.
-   *
-   * @param mediaSession The {@link MediaSessionCompat} to connect to.
-   */
-  public MediaSessionConnector(MediaSessionCompat mediaSession) {
-    this(mediaSession, new DefaultPlaybackController());
-  }
-
-  /**
-   * Creates an instance. Must be called on the same thread that is used to construct the player
-   * instances passed to {@link #setPlayer(Player, PlaybackPreparer, CustomActionProvider...)}.
-   * <p>
-   * Equivalent to {@code MediaSessionConnector(mediaSession, playbackController, true)}.
-   *
-   * @param mediaSession The {@link MediaSessionCompat} to connect to.
-   * @param playbackController A {@link PlaybackController} for handling playback actions.
-   */
-  public MediaSessionConnector(MediaSessionCompat mediaSession,
-      PlaybackController playbackController) {
-    this(mediaSession, playbackController, true);
-  }
-
-  /**
-   * Creates an instance. Must be called on the same thread that is used to construct the player
-   * instances passed to {@link #setPlayer(Player, PlaybackPreparer, CustomActionProvider...)}.
-   *
-   * @param mediaSession The {@link MediaSessionCompat} to connect to.
-   * @param playbackController A {@link PlaybackController} for handling playback actions.
-   * @param doMaintainMetadata Whether the connector should maintain the metadata of the session. If
-   *     {@code false}, you need to maintain the metadata of the media session yourself (provide at
-   *     least the duration to allow clients to show a progress bar).
-   */
-  public MediaSessionConnector(MediaSessionCompat mediaSession,
-      PlaybackController playbackController, boolean doMaintainMetadata) {
-    this.mediaSession = mediaSession;
-    this.playbackController = playbackController;
-    this.handler = new Handler(Looper.myLooper() != null ? Looper.myLooper()
-        : Looper.getMainLooper());
-    this.doMaintainMetadata = doMaintainMetadata;
-    mediaSession.setFlags(BASE_MEDIA_SESSION_FLAGS);
-    mediaController = mediaSession.getController();
-    mediaSessionCallback = new MediaSessionCallback();
-    exoPlayerEventListener = new ExoPlayerEventListener();
-    customActionMap = Collections.emptyMap();
-  }
-
-  /**
-   * Sets the player to be connected to the media session.
-   * <p>
-   * The order in which any {@link CustomActionProvider}s are passed determines the order of the
-   * actions published with the playback state of the session.
-   *
-   * @param player The player to be connected to the {@code MediaSession}.
-   * @param playbackPreparer An optional {@link PlaybackPreparer} for preparing the player.
-   * @param customActionProviders An optional {@link CustomActionProvider}s to publish and handle
-   *     custom actions.
-   */
-  public void setPlayer(Player player, PlaybackPreparer playbackPreparer,
-      CustomActionProvider... customActionProviders) {
-    if (this.player != null) {
-      this.player.removeListener(exoPlayerEventListener);
-      mediaSession.setCallback(null);
-    }
-    this.playbackPreparer = playbackPreparer;
-    this.player = player;
-    this.customActionProviders = (player != null && customActionProviders != null)
-        ? customActionProviders : new CustomActionProvider[0];
-    if (player != null) {
-      mediaSession.setCallback(mediaSessionCallback, handler);
-      player.addListener(exoPlayerEventListener);
-    }
-    updateMediaSessionPlaybackState();
-    updateMediaSessionMetadata();
-  }
-
-  /**
-   * Sets the {@link ErrorMessageProvider}.
-   *
-   * @param errorMessageProvider The error message provider.
-   */
-  public void setErrorMessageProvider(ErrorMessageProvider errorMessageProvider) {
-    this.errorMessageProvider = errorMessageProvider;
-  }
-
-  /**
-   * Sets the {@link QueueNavigator} to handle queue navigation actions {@code ACTION_SKIP_TO_NEXT},
-   * {@code ACTION_SKIP_TO_PREVIOUS}, {@code ACTION_SKIP_TO_QUEUE_ITEM} and
-   * {@code ACTION_SET_SHUFFLE_MODE_ENABLED}.
-   *
-   * @param queueNavigator The queue navigator.
-   */
-  public void setQueueNavigator(QueueNavigator queueNavigator) {
-    this.queueNavigator = queueNavigator;
-  }
-
-  /**
-   * Sets the {@link QueueEditor} to handle queue edits sent by the media controller.
-   *
-   * @param queueEditor The queue editor.
-   */
-  public void setQueueEditor(QueueEditor queueEditor) {
-    this.queueEditor = queueEditor;
-    mediaSession.setFlags(queueEditor == null ? BASE_MEDIA_SESSION_FLAGS
-        : EDITOR_MEDIA_SESSION_FLAGS);
-  }
-
-  private void updateMediaSessionPlaybackState() {
-    PlaybackStateCompat.Builder builder = new PlaybackStateCompat.Builder();
-    if (player == null) {
-      builder.setActions(buildPlaybackActions()).setState(PlaybackStateCompat.STATE_NONE, 0, 0, 0);
-      mediaSession.setPlaybackState(builder.build());
-      return;
-    }
-
-    Map<String, CustomActionProvider> currentActions = new HashMap<>();
-    for (CustomActionProvider customActionProvider : customActionProviders) {
-      PlaybackStateCompat.CustomAction customAction = customActionProvider.getCustomAction();
-      if (customAction != null) {
-        currentActions.put(customAction.getAction(), customActionProvider);
-        builder.addCustomAction(customAction);
-      }
-    }
-    customActionMap = Collections.unmodifiableMap(currentActions);
-
-    int sessionPlaybackState = playbackException != null ? PlaybackStateCompat.STATE_ERROR
-        : mapPlaybackState(player.getPlaybackState(), player.getPlayWhenReady());
-    if (playbackException != null) {
-      if (errorMessageProvider != null) {
-        Pair<Integer, String> message = errorMessageProvider.getErrorMessage(playbackException);
-        builder.setErrorMessage(message.first, message.second);
-      }
-      if (player.getPlaybackState() != Player.STATE_IDLE) {
-        playbackException = null;
-      }
-    }
-    long activeQueueItemId = queueNavigator != null ? queueNavigator.getActiveQueueItemId(player)
-        : MediaSessionCompat.QueueItem.UNKNOWN_ID;
-    Bundle extras = new Bundle();
-    extras.putFloat(EXTRAS_PITCH, player.getPlaybackParameters().pitch);
-    builder.setActions(buildPlaybackActions())
-        .setActiveQueueItemId(activeQueueItemId)
-        .setBufferedPosition(player.getBufferedPosition())
-        .setState(sessionPlaybackState, player.getCurrentPosition(),
-            player.getPlaybackParameters().speed, SystemClock.elapsedRealtime())
-        .setExtras(extras);
-    mediaSession.setPlaybackState(builder.build());
-  }
-
-  private long buildPlaybackActions() {
-    long actions = 0;
-    if (playbackController != null) {
-      actions |= (PlaybackController.ACTIONS & playbackController
-          .getSupportedPlaybackActions(player));
-    }
-    if (playbackPreparer != null) {
-      actions |= (PlaybackPreparer.ACTIONS & playbackPreparer.getSupportedPrepareActions());
-    }
-    if (queueNavigator != null) {
-      actions |= (QueueNavigator.ACTIONS & queueNavigator.getSupportedQueueNavigatorActions(
-          player));
-    }
-    if (queueEditor != null) {
-      actions |= (QueueEditor.ACTIONS & queueEditor.getSupportedQueueEditorActions(player));
-    }
-    return actions;
-  }
-
-  private void updateMediaSessionMetadata() {
-    if (doMaintainMetadata) {
-      MediaMetadataCompat.Builder builder = new MediaMetadataCompat.Builder();
-      if (player != null && player.isPlayingAd()) {
-        builder.putLong(MediaMetadataCompat.METADATA_KEY_ADVERTISEMENT, 1);
-      }
-      builder.putLong(MediaMetadataCompat.METADATA_KEY_DURATION, player == null ? 0
-          : player.getDuration() == C.TIME_UNSET ? -1 : player.getDuration());
-
-      if (queueNavigator != null) {
-        long activeQueueItemId = queueNavigator.getActiveQueueItemId(player);
-        List<MediaSessionCompat.QueueItem> queue = mediaController.getQueue();
-        for (int i = 0; queue != null && i < queue.size(); i++) {
-          MediaSessionCompat.QueueItem queueItem = queue.get(i);
-          if (queueItem.getQueueId() == activeQueueItemId) {
-            MediaDescriptionCompat description = queueItem.getDescription();
-            if (description.getTitle() != null) {
-              builder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE,
-                  String.valueOf(description.getTitle()));
-            }
-            if (description.getSubtitle() != null) {
-              builder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE,
-                  String.valueOf(description.getSubtitle()));
-            }
-            if (description.getDescription() != null) {
-              builder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_DESCRIPTION,
-                  String.valueOf(description.getDescription()));
-            }
-            if (description.getIconBitmap() != null) {
-              builder.putBitmap(MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON,
-                  description.getIconBitmap());
-            }
-            if (description.getIconUri() != null) {
-              builder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_ICON_URI,
-                  String.valueOf(description.getIconUri()));
-            }
-            if (description.getMediaId() != null) {
-              builder.putString(MediaMetadataCompat.METADATA_KEY_MEDIA_ID,
-                  String.valueOf(description.getMediaId()));
-            }
-            if (description.getMediaUri() != null) {
-              builder.putString(MediaMetadataCompat.METADATA_KEY_MEDIA_URI,
-                  String.valueOf(description.getMediaUri()));
-            }
-            break;
-          }
-        }
-      }
-      mediaSession.setMetadata(builder.build());
-    }
-  }
-
-  private int mapPlaybackState(int exoPlayerPlaybackState, boolean playWhenReady) {
-    switch (exoPlayerPlaybackState) {
-      case Player.STATE_BUFFERING:
-        return PlaybackStateCompat.STATE_BUFFERING;
-      case Player.STATE_READY:
-        return playWhenReady ? PlaybackStateCompat.STATE_PLAYING : PlaybackStateCompat.STATE_PAUSED;
-      case Player.STATE_ENDED:
-        return PlaybackStateCompat.STATE_PAUSED;
-      default:
-        return PlaybackStateCompat.STATE_NONE;
-    }
-  }
-
-  private boolean canDispatchToPlaybackPreparer(long action) {
-    return playbackPreparer != null && (playbackPreparer.getSupportedPrepareActions()
-        & PlaybackPreparer.ACTIONS & action) != 0;
-  }
-
-  private boolean canDispatchToPlaybackController(long action) {
-    return playbackController != null && (playbackController.getSupportedPlaybackActions(player)
-        & PlaybackController.ACTIONS & action) != 0;
-  }
-
-  private boolean canDispatchToQueueNavigator(long action) {
-    return queueNavigator != null && (queueNavigator.getSupportedQueueNavigatorActions(player)
-        & QueueNavigator.ACTIONS & action) != 0;
-  }
-
-  private boolean canDispatchToQueueEditor(long action) {
-    return queueEditor != null && (queueEditor.getSupportedQueueEditorActions(player)
-        & QueueEditor.ACTIONS & action) != 0;
-  }
-
-  private class ExoPlayerEventListener implements Player.EventListener {
-
-    private int currentWindowIndex;
-    private int currentWindowCount;
-
-    @Override
-    public void onTimelineChanged(Timeline timeline, Object manifest) {
-      if (queueNavigator != null) {
-        queueNavigator.onTimelineChanged(player);
-      }
-      int windowCount = player.getCurrentTimeline().getWindowCount();
-      if (currentWindowCount != windowCount) {
-        // active queue item and queue navigation actions may need to be updated
-        updateMediaSessionPlaybackState();
-      }
-      currentWindowCount = windowCount;
-      currentWindowIndex = player.getCurrentWindowIndex();
-      updateMediaSessionMetadata();
-    }
-
-    @Override
-    public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onLoadingChanged(boolean isLoading) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
-      updateMediaSessionPlaybackState();
-    }
-
-    @Override
-    public void onRepeatModeChanged(@Player.RepeatMode int repeatMode) {
-      mediaSession.setRepeatMode(repeatMode == Player.REPEAT_MODE_ONE
-          ? PlaybackStateCompat.REPEAT_MODE_ONE : repeatMode == Player.REPEAT_MODE_ALL
-          ? PlaybackStateCompat.REPEAT_MODE_ALL : PlaybackStateCompat.REPEAT_MODE_NONE);
-      updateMediaSessionPlaybackState();
-    }
-
-    @Override
-    public void onPlayerError(ExoPlaybackException error) {
-      playbackException = error;
-      updateMediaSessionPlaybackState();
-    }
-
-    @Override
-    public void onPositionDiscontinuity() {
-      if (currentWindowIndex != player.getCurrentWindowIndex()) {
-        if (queueNavigator != null) {
-          queueNavigator.onCurrentWindowIndexChanged(player);
-        }
-        updateMediaSessionMetadata();
-        currentWindowIndex = player.getCurrentWindowIndex();
-      }
-      updateMediaSessionPlaybackState();
-    }
-
-    @Override
-    public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {
-      updateMediaSessionPlaybackState();
-    }
-
-  }
-
-  private class MediaSessionCallback extends MediaSessionCompat.Callback {
-
-    @Override
-    public void onPlay() {
-      if (canDispatchToPlaybackController(PlaybackStateCompat.ACTION_PLAY)) {
-        playbackController.onPlay(player);
-      }
-    }
-
-    @Override
-    public void onPause() {
-      if (canDispatchToPlaybackController(PlaybackStateCompat.ACTION_PAUSE)) {
-        playbackController.onPause(player);
-      }
-    }
-
-    @Override
-    public void onSeekTo(long position) {
-      if (canDispatchToPlaybackController(PlaybackStateCompat.ACTION_SEEK_TO)) {
-        playbackController.onSeekTo(player, position);
-      }
-    }
-
-    @Override
-    public void onFastForward() {
-      if (canDispatchToPlaybackController(PlaybackStateCompat.ACTION_FAST_FORWARD)) {
-        playbackController.onFastForward(player);
-      }
-    }
-
-    @Override
-    public void onRewind() {
-      if (canDispatchToPlaybackController(PlaybackStateCompat.ACTION_REWIND)) {
-        playbackController.onRewind(player);
-      }
-    }
-
-    @Override
-    public void onStop() {
-      if (canDispatchToPlaybackController(PlaybackStateCompat.ACTION_STOP)) {
-        playbackController.onStop(player);
-      }
-    }
-
-    @Override
-    public void onSkipToNext() {
-      if (canDispatchToQueueNavigator(PlaybackStateCompat.ACTION_SKIP_TO_NEXT)) {
-        queueNavigator.onSkipToNext(player);
-      }
-    }
-
-    @Override
-    public void onSkipToPrevious() {
-      if (canDispatchToQueueNavigator(PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS)) {
-        queueNavigator.onSkipToPrevious(player);
-      }
-    }
-
-    @Override
-    public void onSkipToQueueItem(long id) {
-      if (canDispatchToQueueNavigator(PlaybackStateCompat.ACTION_SKIP_TO_QUEUE_ITEM)) {
-        queueNavigator.onSkipToQueueItem(player, id);
-      }
-    }
-
-    @Override
-    public void onSetRepeatMode(int repeatMode) {
-      // implemented as custom action
-    }
-
-    @Override
-    public void onCustomAction(@NonNull String action, @Nullable Bundle extras) {
-      Map<String, CustomActionProvider> actionMap = customActionMap;
-      if (actionMap.containsKey(action)) {
-        actionMap.get(action).onCustomAction(action, extras);
-        updateMediaSessionPlaybackState();
-      }
-    }
-
-    @Override
-    public void onCommand(String command, Bundle extras, ResultReceiver cb) {
-      if (playbackPreparer != null) {
-        playbackPreparer.onCommand(command, extras, cb);
-      }
-    }
-
-    @Override
-    public void onPrepare() {
-      if (canDispatchToPlaybackPreparer(PlaybackStateCompat.ACTION_PREPARE)) {
-        player.stop();
-        player.setPlayWhenReady(false);
-        playbackPreparer.onPrepare();
-      }
-    }
-
-    @Override
-    public void onPrepareFromMediaId(String mediaId, Bundle extras) {
-      if (canDispatchToPlaybackPreparer(PlaybackStateCompat.ACTION_PREPARE_FROM_MEDIA_ID)) {
-        player.stop();
-        player.setPlayWhenReady(false);
-        playbackPreparer.onPrepareFromMediaId(mediaId, extras);
-      }
-    }
-
-    @Override
-    public void onPrepareFromSearch(String query, Bundle extras) {
-      if (canDispatchToPlaybackPreparer(PlaybackStateCompat.ACTION_PREPARE_FROM_SEARCH)) {
-        player.stop();
-        player.setPlayWhenReady(false);
-        playbackPreparer.onPrepareFromSearch(query, extras);
-      }
-    }
-
-    @Override
-    public void onPrepareFromUri(Uri uri, Bundle extras) {
-      if (canDispatchToPlaybackPreparer(PlaybackStateCompat.ACTION_PREPARE_FROM_URI)) {
-        player.stop();
-        player.setPlayWhenReady(false);
-        playbackPreparer.onPrepareFromUri(uri, extras);
-      }
-    }
-
-    @Override
-    public void onPlayFromMediaId(String mediaId, Bundle extras) {
-      if (canDispatchToPlaybackPreparer(PlaybackStateCompat.ACTION_PLAY_FROM_MEDIA_ID)) {
-        player.stop();
-        player.setPlayWhenReady(true);
-        playbackPreparer.onPrepareFromMediaId(mediaId, extras);
-      }
-    }
-
-    @Override
-    public void onPlayFromSearch(String query, Bundle extras) {
-      if (canDispatchToPlaybackPreparer(PlaybackStateCompat.ACTION_PLAY_FROM_SEARCH)) {
-        player.stop();
-        player.setPlayWhenReady(true);
-        playbackPreparer.onPrepareFromSearch(query, extras);
-      }
-    }
-
-    @Override
-    public void onPlayFromUri(Uri uri, Bundle extras) {
-      if (canDispatchToPlaybackPreparer(PlaybackStateCompat.ACTION_PLAY_FROM_URI)) {
-        player.stop();
-        player.setPlayWhenReady(true);
-        playbackPreparer.onPrepareFromUri(uri, extras);
-      }
-    }
-
-    @Override
-    public void onSetShuffleModeEnabled(boolean enabled) {
-      if (canDispatchToQueueNavigator(PlaybackStateCompat.ACTION_SET_SHUFFLE_MODE_ENABLED)) {
-        queueNavigator.onSetShuffleModeEnabled(player, enabled);
-      }
-    }
-
-    @Override
-    public void onAddQueueItem(MediaDescriptionCompat description) {
-      if (queueEditor != null) {
-        queueEditor.onAddQueueItem(player, description);
-      }
-    }
-
-    @Override
-    public void onAddQueueItem(MediaDescriptionCompat description, int index) {
-      if (queueEditor != null) {
-        queueEditor.onAddQueueItem(player, description, index);
-      }
-    }
-
-    @Override
-    public void onRemoveQueueItem(MediaDescriptionCompat description) {
-      if (queueEditor != null) {
-        queueEditor.onRemoveQueueItem(player, description);
-      }
-    }
-
-    @Override
-    public void onRemoveQueueItemAt(int index) {
-      if (queueEditor != null) {
-        queueEditor.onRemoveQueueItemAt(player, index);
-      }
-    }
-
-    @Override
-    public void onSetRating(RatingCompat rating) {
-      if (canDispatchToQueueEditor(PlaybackStateCompat.ACTION_SET_RATING)) {
-        queueEditor.onSetRating(player, rating);
-      }
-    }
-
-  }
-
-}
diff --git a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/RepeatModeActionProvider.java b/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/RepeatModeActionProvider.java
deleted file mode 100644
index abefe533ce..0000000000
--- a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/RepeatModeActionProvider.java
+++ /dev/null
@@ -1,106 +0,0 @@
-package com.google.android.exoplayer2.ext.mediasession;
-/*
- * Copyright (c) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import android.content.Context;
-import android.os.Bundle;
-import android.support.v4.media.session.PlaybackStateCompat;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.util.RepeatModeUtil;
-
-/**
- * Provides a custom action for toggling repeat modes.
- */
-public final class RepeatModeActionProvider implements MediaSessionConnector.CustomActionProvider {
-
-  /**
-   * The default repeat toggle modes.
-   */
-  public static final @RepeatModeUtil.RepeatToggleModes int DEFAULT_REPEAT_TOGGLE_MODES =
-      RepeatModeUtil.REPEAT_TOGGLE_MODE_ONE | RepeatModeUtil.REPEAT_TOGGLE_MODE_ALL;
-
-  private static final String ACTION_REPEAT_MODE = "ACTION_EXO_REPEAT_MODE";
-
-  private final Player player;
-  @RepeatModeUtil.RepeatToggleModes
-  private final int repeatToggleModes;
-  private final CharSequence repeatAllDescription;
-  private final CharSequence repeatOneDescription;
-  private final CharSequence repeatOffDescription;
-
-  /**
-   * Creates a new instance.
-   * <p>
-   * Equivalent to {@code RepeatModeActionProvider(context, player,
-   *     RepeatModeActionProvider.DEFAULT_REPEAT_TOGGLE_MODES)}.
-   *
-   * @param context The context.
-   * @param player The player on which to toggle the repeat mode.
-   */
-  public RepeatModeActionProvider(Context context, Player player) {
-    this(context, player, DEFAULT_REPEAT_TOGGLE_MODES);
-  }
-
-  /**
-   * Creates a new instance enabling the given repeat toggle modes.
-   *
-   * @param context The context.
-   * @param player The player on which to toggle the repeat mode.
-   * @param repeatToggleModes The toggle modes to enable.
-   */
-  public RepeatModeActionProvider(Context context, Player player,
-      @RepeatModeUtil.RepeatToggleModes int repeatToggleModes) {
-    this.player = player;
-    this.repeatToggleModes = repeatToggleModes;
-    repeatAllDescription = context.getString(R.string.exo_media_action_repeat_all_description);
-    repeatOneDescription = context.getString(R.string.exo_media_action_repeat_one_description);
-    repeatOffDescription = context.getString(R.string.exo_media_action_repeat_off_description);
-  }
-
-  @Override
-  public void onCustomAction(String action, Bundle extras) {
-    int mode = player.getRepeatMode();
-    int proposedMode = RepeatModeUtil.getNextRepeatMode(mode, repeatToggleModes);
-    if (mode != proposedMode) {
-      player.setRepeatMode(proposedMode);
-    }
-  }
-
-  @Override
-  public PlaybackStateCompat.CustomAction getCustomAction() {
-    CharSequence actionLabel;
-    int iconResourceId;
-    switch (player.getRepeatMode()) {
-      case Player.REPEAT_MODE_ONE:
-        actionLabel = repeatOneDescription;
-        iconResourceId = R.drawable.exo_media_action_repeat_one;
-        break;
-      case Player.REPEAT_MODE_ALL:
-        actionLabel = repeatAllDescription;
-        iconResourceId = R.drawable.exo_media_action_repeat_all;
-        break;
-      case Player.REPEAT_MODE_OFF:
-      default:
-        actionLabel = repeatOffDescription;
-        iconResourceId = R.drawable.exo_media_action_repeat_off;
-        break;
-    }
-    PlaybackStateCompat.CustomAction.Builder repeatBuilder = new PlaybackStateCompat.CustomAction
-        .Builder(ACTION_REPEAT_MODE, actionLabel, iconResourceId);
-    return repeatBuilder.build();
-  }
-
-}
diff --git a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/TimelineQueueNavigator.java b/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/TimelineQueueNavigator.java
deleted file mode 100644
index 521b4cd6e3..0000000000
--- a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/TimelineQueueNavigator.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.mediasession;
-
-import android.support.annotation.Nullable;
-import android.support.v4.media.MediaDescriptionCompat;
-import android.support.v4.media.session.MediaSessionCompat;
-import android.support.v4.media.session.PlaybackStateCompat;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.util.Util;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-/**
- * An abstract implementation of the {@link MediaSessionConnector.QueueNavigator} that maps the
- * windows of a {@link Player}'s {@link Timeline} to the media session queue.
- */
-public abstract class TimelineQueueNavigator implements MediaSessionConnector.QueueNavigator {
-
-  public static final long MAX_POSITION_FOR_SEEK_TO_PREVIOUS = 3000;
-  public static final int DEFAULT_MAX_QUEUE_SIZE = 10;
-
-  private final MediaSessionCompat mediaSession;
-  protected final int maxQueueSize;
-
-  private long activeQueueItemId;
-
-  /**
-   * Creates an instance for a given {@link MediaSessionCompat}.
-   * <p>
-   * Equivalent to {@code TimelineQueueNavigator(mediaSession, DEFAULT_MAX_QUEUE_SIZE)}.
-   *
-   * @param mediaSession The {@link MediaSessionCompat}.
-   */
-  public TimelineQueueNavigator(MediaSessionCompat mediaSession) {
-    this(mediaSession, DEFAULT_MAX_QUEUE_SIZE);
-  }
-
-  /**
-   * Creates an instance for a given {@link MediaSessionCompat} and maximum queue size.
-   * <p>
-   * If the number of windows in the {@link Player}'s {@link Timeline} exceeds {@code maxQueueSize},
-   * the media session queue will correspond to {@code maxQueueSize} windows centered on the one
-   * currently being played.
-   *
-   * @param mediaSession The {@link MediaSessionCompat}.
-   * @param maxQueueSize The maximum queue size.
-   */
-  public TimelineQueueNavigator(MediaSessionCompat mediaSession, int maxQueueSize) {
-    this.mediaSession = mediaSession;
-    this.maxQueueSize = maxQueueSize;
-    activeQueueItemId = MediaSessionCompat.QueueItem.UNKNOWN_ID;
-  }
-
-  /**
-   * Gets the {@link MediaDescriptionCompat} for a given timeline window index.
-   *
-   * @param windowIndex The timeline window index for which to provide a description.
-   * @return A {@link MediaDescriptionCompat}.
-   */
-  public abstract MediaDescriptionCompat getMediaDescription(int windowIndex);
-
-  @Override
-  public long getSupportedQueueNavigatorActions(Player player) {
-    if (player == null || player.getCurrentTimeline().getWindowCount() < 2) {
-      return 0;
-    }
-    if (player.getRepeatMode() != Player.REPEAT_MODE_OFF) {
-      return PlaybackStateCompat.ACTION_SKIP_TO_NEXT | PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS
-          | PlaybackStateCompat.ACTION_SKIP_TO_QUEUE_ITEM;
-    }
-
-    int currentWindowIndex = player.getCurrentWindowIndex();
-    long actions;
-    if (currentWindowIndex == 0) {
-      actions = PlaybackStateCompat.ACTION_SKIP_TO_NEXT;
-    } else if (currentWindowIndex == player.getCurrentTimeline().getWindowCount() - 1) {
-      actions = PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS;
-    } else {
-      actions = PlaybackStateCompat.ACTION_SKIP_TO_NEXT
-          | PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS;
-    }
-    return actions | PlaybackStateCompat.ACTION_SKIP_TO_QUEUE_ITEM;
-  }
-
-  @Override
-  public final void onTimelineChanged(Player player) {
-    publishFloatingQueueWindow(player);
-  }
-
-  @Override
-  public final void onCurrentWindowIndexChanged(Player player) {
-    if (activeQueueItemId == MediaSessionCompat.QueueItem.UNKNOWN_ID
-        || player.getCurrentTimeline().getWindowCount() > maxQueueSize) {
-      publishFloatingQueueWindow(player);
-    } else if (!player.getCurrentTimeline().isEmpty()) {
-      activeQueueItemId = player.getCurrentWindowIndex();
-    }
-  }
-
-  @Override
-  public final long getActiveQueueItemId(@Nullable Player player) {
-    return activeQueueItemId;
-  }
-
-  @Override
-  public void onSkipToPrevious(Player player) {
-    Timeline timeline = player.getCurrentTimeline();
-    if (timeline.isEmpty()) {
-      return;
-    }
-    int previousWindowIndex = timeline.getPreviousWindowIndex(player.getCurrentWindowIndex(),
-        player.getRepeatMode());
-    if (player.getCurrentPosition() > MAX_POSITION_FOR_SEEK_TO_PREVIOUS
-        || previousWindowIndex == C.INDEX_UNSET) {
-      player.seekTo(0);
-    } else {
-      player.seekTo(previousWindowIndex, C.TIME_UNSET);
-    }
-  }
-
-  @Override
-  public void onSkipToQueueItem(Player player, long id) {
-    Timeline timeline = player.getCurrentTimeline();
-    if (timeline.isEmpty()) {
-      return;
-    }
-    int windowIndex = (int) id;
-    if (0 <= windowIndex && windowIndex < timeline.getWindowCount()) {
-      player.seekTo(windowIndex, C.TIME_UNSET);
-    }
-  }
-
-  @Override
-  public void onSkipToNext(Player player) {
-    Timeline timeline = player.getCurrentTimeline();
-    if (timeline.isEmpty()) {
-      return;
-    }
-    int nextWindowIndex = timeline.getNextWindowIndex(player.getCurrentWindowIndex(),
-        player.getRepeatMode());
-    if (nextWindowIndex != C.INDEX_UNSET) {
-      player.seekTo(nextWindowIndex, C.TIME_UNSET);
-    }
-  }
-
-  @Override
-  public void onSetShuffleModeEnabled(Player player, boolean enabled) {
-    // TODO: Implement this.
-  }
-
-  private void publishFloatingQueueWindow(Player player) {
-    if (player.getCurrentTimeline().isEmpty()) {
-      mediaSession.setQueue(Collections.<MediaSessionCompat.QueueItem>emptyList());
-      activeQueueItemId = MediaSessionCompat.QueueItem.UNKNOWN_ID;
-      return;
-    }
-    int windowCount = player.getCurrentTimeline().getWindowCount();
-    int currentWindowIndex = player.getCurrentWindowIndex();
-    int queueSize = Math.min(maxQueueSize, windowCount);
-    int startIndex = Util.constrainValue(currentWindowIndex - ((queueSize - 1) / 2), 0,
-        windowCount - queueSize);
-    List<MediaSessionCompat.QueueItem> queue = new ArrayList<>();
-    for (int i = startIndex; i < startIndex + queueSize; i++) {
-      queue.add(new MediaSessionCompat.QueueItem(getMediaDescription(i), i));
-    }
-    mediaSession.setQueue(queue);
-    activeQueueItemId = currentWindowIndex;
-  }
-
-}
diff --git a/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_all.xml b/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_all.xml
deleted file mode 100644
index dad37fa1f0..0000000000
--- a/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_all.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="32dp"
-        android:height="32dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
-    <path
-        android:fillColor="#FFFFFFFF"
-        android:pathData="M7,7h10v3l4,-4 -4,-4v3L5,5v6h2L7,7zM17,17L7,17v-3l-4,4 4,4v-3h12v-6h-2v4z"/>
-</vector>
diff --git a/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_off.xml b/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_off.xml
deleted file mode 100644
index 132eae0d76..0000000000
--- a/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_off.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="32dp"
-        android:height="32dp"
-        android:viewportWidth="24.0"
-        android:viewportHeight="24.0">
-    <path
-        android:fillColor="#4EFFFFFF"
-        android:pathData="M7,7h10v3l4,-4 -4,-4v3L5,5v6h2L7,7zM17,17L7,17v-3l-4,4 4,4v-3h12v-6h-2v4z"/>
-</vector>
diff --git a/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_one.xml b/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_one.xml
deleted file mode 100644
index d51010566a..0000000000
--- a/extensions/mediasession/src/main/res/drawable-anydpi-v21/exo_media_action_repeat_one.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:height="32dp"
-        android:width="32dp"
-        android:viewportHeight="24.0"
-        android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FFFFFFFF"
-        android:pathData="M7,7h10v3l4,-4 -4,-4v3L5,5v6h2L7,7zM17,17L7,17v-3l-4,4 4,4v-3h12v-6h-2v4zM13,15L13,9h-1l-2,1v1h1.5v4L13,15z"/>
-</vector>
diff --git a/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_all.png b/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_all.png
deleted file mode 100644
index 2824e7847c..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_all.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_off.png b/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_off.png
deleted file mode 100644
index 0b92f583da..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_off.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_one.png b/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_one.png
deleted file mode 100644
index 232aa2b1cd..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-hdpi/exo_media_action_repeat_one.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_all.png b/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_all.png
deleted file mode 100644
index 5c91a47519..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_all.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_off.png b/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_off.png
deleted file mode 100644
index a94abd864f..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_off.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_one.png b/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_one.png
deleted file mode 100644
index a59a985239..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-ldpi/exo_media_action_repeat_one.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_all.png b/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_all.png
deleted file mode 100644
index 97f7e1cc75..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_all.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_off.png b/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_off.png
deleted file mode 100644
index 6a02321702..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_off.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_one.png b/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_one.png
deleted file mode 100644
index 59bac33705..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-mdpi/exo_media_action_repeat_one.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_all.png b/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_all.png
deleted file mode 100644
index 2baaedecbf..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_all.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_off.png b/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_off.png
deleted file mode 100644
index 2468f92f9f..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_off.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_one.png b/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_one.png
deleted file mode 100644
index 4e1d53db77..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-xhdpi/exo_media_action_repeat_one.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_all.png b/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_all.png
deleted file mode 100644
index d7207ebc0d..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_all.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_off.png b/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_off.png
deleted file mode 100644
index 4d6253ead6..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_off.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_one.png b/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_one.png
deleted file mode 100644
index d577f4ebcd..0000000000
Binary files a/extensions/mediasession/src/main/res/drawable-xxhdpi/exo_media_action_repeat_one.png and /dev/null differ
diff --git a/extensions/mediasession/src/main/res/values-af/strings.xml b/extensions/mediasession/src/main/res/values-af/strings.xml
deleted file mode 100644
index 4ef78cd84f..0000000000
--- a/extensions/mediasession/src/main/res/values-af/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Herhaal alles"</string>
-  <string name="exo_media_action_repeat_off_description">"Herhaal niks"</string>
-  <string name="exo_media_action_repeat_one_description">"Herhaal een"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-am/strings.xml b/extensions/mediasession/src/main/res/values-am/strings.xml
deleted file mode 100644
index 531f605584..0000000000
--- a/extensions/mediasession/src/main/res/values-am/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"ሁሉንም ድገም"</string>
-  <string name="exo_media_action_repeat_off_description">"ምንም አትድገም"</string>
-  <string name="exo_media_action_repeat_one_description">"አንዱን ድገም"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ar/strings.xml b/extensions/mediasession/src/main/res/values-ar/strings.xml
deleted file mode 100644
index 0101a746e0..0000000000
--- a/extensions/mediasession/src/main/res/values-ar/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"تكرار الكل"</string>
-  <string name="exo_media_action_repeat_off_description">"عدم التكرار"</string>
-  <string name="exo_media_action_repeat_one_description">"تكرار مقطع واحد"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-az-rAZ/strings.xml b/extensions/mediasession/src/main/res/values-az-rAZ/strings.xml
deleted file mode 100644
index 34408143fa..0000000000
--- a/extensions/mediasession/src/main/res/values-az-rAZ/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Bütün təkrarlayın"</string>
-  <string name="exo_media_action_repeat_one_description">"Təkrar bir"</string>
-  <string name="exo_media_action_repeat_off_description">"Heç bir təkrar"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-b+sr+Latn/strings.xml b/extensions/mediasession/src/main/res/values-b+sr+Latn/strings.xml
deleted file mode 100644
index 67a51cf85e..0000000000
--- a/extensions/mediasession/src/main/res/values-b+sr+Latn/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ponovi sve"</string>
-  <string name="exo_media_action_repeat_off_description">"Ne ponavljaj nijednu"</string>
-  <string name="exo_media_action_repeat_one_description">"Ponovi jednu"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-be-rBY/strings.xml b/extensions/mediasession/src/main/res/values-be-rBY/strings.xml
deleted file mode 100644
index 2f05607235..0000000000
--- a/extensions/mediasession/src/main/res/values-be-rBY/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Паўтарыць усё"</string>
-  <string name="exo_media_action_repeat_off_description">"Паўтараць ні"</string>
-  <string name="exo_media_action_repeat_one_description">"Паўтарыць адзін"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-bg/strings.xml b/extensions/mediasession/src/main/res/values-bg/strings.xml
deleted file mode 100644
index 16910d640a..0000000000
--- a/extensions/mediasession/src/main/res/values-bg/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Повтаряне на всички"</string>
-  <string name="exo_media_action_repeat_off_description">"Без повтаряне"</string>
-  <string name="exo_media_action_repeat_one_description">"Повтаряне на един елемент"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-bn-rBD/strings.xml b/extensions/mediasession/src/main/res/values-bn-rBD/strings.xml
deleted file mode 100644
index 8872b464c6..0000000000
--- a/extensions/mediasession/src/main/res/values-bn-rBD/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"সবগুলির পুনরাবৃত্তি করুন"</string>
-  <string name="exo_media_action_repeat_off_description">"একটিরও পুনরাবৃত্তি করবেন না"</string>
-  <string name="exo_media_action_repeat_one_description">"একটির পুনরাবৃত্তি করুন"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-bs-rBA/strings.xml b/extensions/mediasession/src/main/res/values-bs-rBA/strings.xml
deleted file mode 100644
index d0bf068573..0000000000
--- a/extensions/mediasession/src/main/res/values-bs-rBA/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ponovite sve"</string>
-  <string name="exo_media_action_repeat_off_description">"Ne ponavljaju"</string>
-  <string name="exo_media_action_repeat_one_description">"Ponovite jedan"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ca/strings.xml b/extensions/mediasession/src/main/res/values-ca/strings.xml
deleted file mode 100644
index 89414d736e..0000000000
--- a/extensions/mediasession/src/main/res/values-ca/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repeteix-ho tot"</string>
-  <string name="exo_media_action_repeat_off_description">"No en repeteixis cap"</string>
-  <string name="exo_media_action_repeat_one_description">"Repeteix-ne un"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-cs/strings.xml b/extensions/mediasession/src/main/res/values-cs/strings.xml
deleted file mode 100644
index 784d872570..0000000000
--- a/extensions/mediasession/src/main/res/values-cs/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Opakovat vše"</string>
-  <string name="exo_media_action_repeat_off_description">"Neopakovat"</string>
-  <string name="exo_media_action_repeat_one_description">"Opakovat jednu položku"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-da/strings.xml b/extensions/mediasession/src/main/res/values-da/strings.xml
deleted file mode 100644
index 2c9784d122..0000000000
--- a/extensions/mediasession/src/main/res/values-da/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Gentag alle"</string>
-  <string name="exo_media_action_repeat_off_description">"Gentag ingen"</string>
-  <string name="exo_media_action_repeat_one_description">"Gentag en"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-de/strings.xml b/extensions/mediasession/src/main/res/values-de/strings.xml
deleted file mode 100644
index c11e449665..0000000000
--- a/extensions/mediasession/src/main/res/values-de/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Alle wiederholen"</string>
-  <string name="exo_media_action_repeat_off_description">"Keinen Titel wiederholen"</string>
-  <string name="exo_media_action_repeat_one_description">"Einen Titel wiederholen"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-el/strings.xml b/extensions/mediasession/src/main/res/values-el/strings.xml
deleted file mode 100644
index 6279af5d64..0000000000
--- a/extensions/mediasession/src/main/res/values-el/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Επανάληψη όλων"</string>
-  <string name="exo_media_action_repeat_off_description">"Καμία επανάληψη"</string>
-  <string name="exo_media_action_repeat_one_description">"Επανάληψη ενός στοιχείου"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-en-rAU/strings.xml b/extensions/mediasession/src/main/res/values-en-rAU/strings.xml
deleted file mode 100644
index a3fccf8b52..0000000000
--- a/extensions/mediasession/src/main/res/values-en-rAU/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repeat all"</string>
-  <string name="exo_media_action_repeat_off_description">"Repeat none"</string>
-  <string name="exo_media_action_repeat_one_description">"Repeat one"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-en-rGB/strings.xml b/extensions/mediasession/src/main/res/values-en-rGB/strings.xml
deleted file mode 100644
index a3fccf8b52..0000000000
--- a/extensions/mediasession/src/main/res/values-en-rGB/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repeat all"</string>
-  <string name="exo_media_action_repeat_off_description">"Repeat none"</string>
-  <string name="exo_media_action_repeat_one_description">"Repeat one"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-en-rIN/strings.xml b/extensions/mediasession/src/main/res/values-en-rIN/strings.xml
deleted file mode 100644
index a3fccf8b52..0000000000
--- a/extensions/mediasession/src/main/res/values-en-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repeat all"</string>
-  <string name="exo_media_action_repeat_off_description">"Repeat none"</string>
-  <string name="exo_media_action_repeat_one_description">"Repeat one"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-es-rUS/strings.xml b/extensions/mediasession/src/main/res/values-es-rUS/strings.xml
deleted file mode 100644
index 0fe29d3d5a..0000000000
--- a/extensions/mediasession/src/main/res/values-es-rUS/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repetir todo"</string>
-  <string name="exo_media_action_repeat_off_description">"No repetir"</string>
-  <string name="exo_media_action_repeat_one_description">"Repetir uno"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-es/strings.xml b/extensions/mediasession/src/main/res/values-es/strings.xml
deleted file mode 100644
index 0fe29d3d5a..0000000000
--- a/extensions/mediasession/src/main/res/values-es/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repetir todo"</string>
-  <string name="exo_media_action_repeat_off_description">"No repetir"</string>
-  <string name="exo_media_action_repeat_one_description">"Repetir uno"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-et-rEE/strings.xml b/extensions/mediasession/src/main/res/values-et-rEE/strings.xml
deleted file mode 100644
index 1bc3b59706..0000000000
--- a/extensions/mediasession/src/main/res/values-et-rEE/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Korda kõike"</string>
-  <string name="exo_media_action_repeat_off_description">"Ära korda midagi"</string>
-  <string name="exo_media_action_repeat_one_description">"Korda ühte"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-eu-rES/strings.xml b/extensions/mediasession/src/main/res/values-eu-rES/strings.xml
deleted file mode 100644
index f15f03160f..0000000000
--- a/extensions/mediasession/src/main/res/values-eu-rES/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Errepikatu guztiak"</string>
-  <string name="exo_media_action_repeat_off_description">"Ez errepikatu"</string>
-  <string name="exo_media_action_repeat_one_description">"Errepikatu bat"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-fa/strings.xml b/extensions/mediasession/src/main/res/values-fa/strings.xml
deleted file mode 100644
index e37a08de64..0000000000
--- a/extensions/mediasession/src/main/res/values-fa/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"تکرار همه"</string>
-  <string name="exo_media_action_repeat_off_description">"تکرار هیچ‌کدام"</string>
-  <string name="exo_media_action_repeat_one_description">"یک‌بار تکرار"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-fi/strings.xml b/extensions/mediasession/src/main/res/values-fi/strings.xml
deleted file mode 100644
index c920827976..0000000000
--- a/extensions/mediasession/src/main/res/values-fi/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Toista kaikki"</string>
-  <string name="exo_media_action_repeat_off_description">"Toista ei mitään"</string>
-  <string name="exo_media_action_repeat_one_description">"Toista yksi"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-fr-rCA/strings.xml b/extensions/mediasession/src/main/res/values-fr-rCA/strings.xml
deleted file mode 100644
index c5191e74a9..0000000000
--- a/extensions/mediasession/src/main/res/values-fr-rCA/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Tout lire en boucle"</string>
-  <string name="exo_media_action_repeat_off_description">"Aucune répétition"</string>
-  <string name="exo_media_action_repeat_one_description">"Répéter un élément"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-fr/strings.xml b/extensions/mediasession/src/main/res/values-fr/strings.xml
deleted file mode 100644
index 1d76358d1f..0000000000
--- a/extensions/mediasession/src/main/res/values-fr/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Tout lire en boucle"</string>
-  <string name="exo_media_action_repeat_off_description">"Ne rien lire en boucle"</string>
-  <string name="exo_media_action_repeat_one_description">"Lire en boucle un élément"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-gl-rES/strings.xml b/extensions/mediasession/src/main/res/values-gl-rES/strings.xml
deleted file mode 100644
index 6b65b3e843..0000000000
--- a/extensions/mediasession/src/main/res/values-gl-rES/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repetir todo"</string>
-  <string name="exo_media_action_repeat_off_description">"Non repetir"</string>
-  <string name="exo_media_action_repeat_one_description">"Repetir un"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-gu-rIN/strings.xml b/extensions/mediasession/src/main/res/values-gu-rIN/strings.xml
deleted file mode 100644
index 0eb9cab37e..0000000000
--- a/extensions/mediasession/src/main/res/values-gu-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"બધા પુનરાવર્તન કરો"</string>
-  <string name="exo_media_action_repeat_off_description">"કંઈ પુનરાવર્તન કરો"</string>
-  <string name="exo_media_action_repeat_one_description">"એક પુનરાવર્તન કરો"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-hi/strings.xml b/extensions/mediasession/src/main/res/values-hi/strings.xml
deleted file mode 100644
index 8ce336d5e5..0000000000
--- a/extensions/mediasession/src/main/res/values-hi/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"सभी को दोहराएं"</string>
-  <string name="exo_media_action_repeat_off_description">"कुछ भी न दोहराएं"</string>
-  <string name="exo_media_action_repeat_one_description">"एक दोहराएं"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-hr/strings.xml b/extensions/mediasession/src/main/res/values-hr/strings.xml
deleted file mode 100644
index 9f995ec15b..0000000000
--- a/extensions/mediasession/src/main/res/values-hr/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ponovi sve"</string>
-  <string name="exo_media_action_repeat_off_description">"Bez ponavljanja"</string>
-  <string name="exo_media_action_repeat_one_description">"Ponovi jedno"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-hu/strings.xml b/extensions/mediasession/src/main/res/values-hu/strings.xml
deleted file mode 100644
index 2335ade72e..0000000000
--- a/extensions/mediasession/src/main/res/values-hu/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Összes ismétlése"</string>
-  <string name="exo_media_action_repeat_off_description">"Nincs ismétlés"</string>
-  <string name="exo_media_action_repeat_one_description">"Egy ismétlése"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-hy-rAM/strings.xml b/extensions/mediasession/src/main/res/values-hy-rAM/strings.xml
deleted file mode 100644
index 19a89e6c87..0000000000
--- a/extensions/mediasession/src/main/res/values-hy-rAM/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"կրկնել այն ամենը"</string>
-  <string name="exo_media_action_repeat_off_description">"Չկրկնել"</string>
-  <string name="exo_media_action_repeat_one_description">"Կրկնել մեկը"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-in/strings.xml b/extensions/mediasession/src/main/res/values-in/strings.xml
deleted file mode 100644
index 093a7f8576..0000000000
--- a/extensions/mediasession/src/main/res/values-in/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ulangi Semua"</string>
-  <string name="exo_media_action_repeat_off_description">"Jangan Ulangi"</string>
-  <string name="exo_media_action_repeat_one_description">"Ulangi Satu"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-is-rIS/strings.xml b/extensions/mediasession/src/main/res/values-is-rIS/strings.xml
deleted file mode 100644
index b200abbdb2..0000000000
--- a/extensions/mediasession/src/main/res/values-is-rIS/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Endurtaka allt"</string>
-  <string name="exo_media_action_repeat_off_description">"Endurtaka ekkert"</string>
-  <string name="exo_media_action_repeat_one_description">"Endurtaka eitt"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-it/strings.xml b/extensions/mediasession/src/main/res/values-it/strings.xml
deleted file mode 100644
index c0682519f9..0000000000
--- a/extensions/mediasession/src/main/res/values-it/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ripeti tutti"</string>
-  <string name="exo_media_action_repeat_off_description">"Non ripetere nessuno"</string>
-  <string name="exo_media_action_repeat_one_description">"Ripeti uno"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-iw/strings.xml b/extensions/mediasession/src/main/res/values-iw/strings.xml
deleted file mode 100644
index 5cf23d5a4c..0000000000
--- a/extensions/mediasession/src/main/res/values-iw/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"חזור על הכל"</string>
-  <string name="exo_media_action_repeat_off_description">"אל תחזור על כלום"</string>
-  <string name="exo_media_action_repeat_one_description">"חזור על פריט אחד"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ja/strings.xml b/extensions/mediasession/src/main/res/values-ja/strings.xml
deleted file mode 100644
index 6f543fbdee..0000000000
--- a/extensions/mediasession/src/main/res/values-ja/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"全曲を繰り返し"</string>
-  <string name="exo_media_action_repeat_off_description">"繰り返しなし"</string>
-  <string name="exo_media_action_repeat_one_description">"1曲を繰り返し"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ka-rGE/strings.xml b/extensions/mediasession/src/main/res/values-ka-rGE/strings.xml
deleted file mode 100644
index 96656612a7..0000000000
--- a/extensions/mediasession/src/main/res/values-ka-rGE/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"გამეორება ყველა"</string>
-  <string name="exo_media_action_repeat_off_description">"გაიმეორეთ არცერთი"</string>
-  <string name="exo_media_action_repeat_one_description">"გაიმეორეთ ერთი"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-kk-rKZ/strings.xml b/extensions/mediasession/src/main/res/values-kk-rKZ/strings.xml
deleted file mode 100644
index be4140120d..0000000000
--- a/extensions/mediasession/src/main/res/values-kk-rKZ/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Барлығын қайталау"</string>
-  <string name="exo_media_action_repeat_off_description">"Ешқайсысын қайталамау"</string>
-  <string name="exo_media_action_repeat_one_description">"Біреуін қайталау"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-km-rKH/strings.xml b/extensions/mediasession/src/main/res/values-km-rKH/strings.xml
deleted file mode 100644
index dd4b734e30..0000000000
--- a/extensions/mediasession/src/main/res/values-km-rKH/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"ធ្វើ​ម្ដង​ទៀត​ទាំងអស់"</string>
-  <string name="exo_media_action_repeat_off_description">"មិន​ធ្វើ​ឡើង​វិញ"</string>
-  <string name="exo_media_action_repeat_one_description">"ធ្វើ​​ឡើងវិញ​ម្ដង"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-kn-rIN/strings.xml b/extensions/mediasession/src/main/res/values-kn-rIN/strings.xml
deleted file mode 100644
index 3d79aca9e2..0000000000
--- a/extensions/mediasession/src/main/res/values-kn-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"ಎಲ್ಲವನ್ನು ಪುನರಾವರ್ತಿಸಿ"</string>
-  <string name="exo_media_action_repeat_off_description">"ಯಾವುದನ್ನೂ ಪುನರಾವರ್ತಿಸಬೇಡಿ"</string>
-  <string name="exo_media_action_repeat_one_description">"ಒಂದನ್ನು ಪುನರಾವರ್ತಿಸಿ"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ko/strings.xml b/extensions/mediasession/src/main/res/values-ko/strings.xml
deleted file mode 100644
index d269937771..0000000000
--- a/extensions/mediasession/src/main/res/values-ko/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"전체 반복"</string>
-  <string name="exo_media_action_repeat_off_description">"반복 안함"</string>
-  <string name="exo_media_action_repeat_one_description">"한 항목 반복"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ky-rKG/strings.xml b/extensions/mediasession/src/main/res/values-ky-rKG/strings.xml
deleted file mode 100644
index a8978ecc61..0000000000
--- a/extensions/mediasession/src/main/res/values-ky-rKG/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Баарын кайталоо"</string>
-  <string name="exo_media_action_repeat_off_description">"Эч бирин кайталабоо"</string>
-  <string name="exo_media_action_repeat_one_description">"Бирөөнү кайталоо"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-lo-rLA/strings.xml b/extensions/mediasession/src/main/res/values-lo-rLA/strings.xml
deleted file mode 100644
index 950a9ba097..0000000000
--- a/extensions/mediasession/src/main/res/values-lo-rLA/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"ຫຼິ້ນ​ຊ້ຳ​ທັງ​ໝົດ"</string>
-  <string name="exo_media_action_repeat_off_description">"​ບໍ່ຫຼິ້ນ​ຊ້ຳ"</string>
-  <string name="exo_media_action_repeat_one_description">"ຫຼິ້ນ​ຊ້ຳ"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-lt/strings.xml b/extensions/mediasession/src/main/res/values-lt/strings.xml
deleted file mode 100644
index ae8f1cf8c3..0000000000
--- a/extensions/mediasession/src/main/res/values-lt/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Kartoti viską"</string>
-  <string name="exo_media_action_repeat_off_description">"Nekartoti nieko"</string>
-  <string name="exo_media_action_repeat_one_description">"Kartoti vieną"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-lv/strings.xml b/extensions/mediasession/src/main/res/values-lv/strings.xml
deleted file mode 100644
index a69f6a0ad5..0000000000
--- a/extensions/mediasession/src/main/res/values-lv/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Atkārtot visu"</string>
-  <string name="exo_media_action_repeat_off_description">"Neatkārtot nevienu"</string>
-  <string name="exo_media_action_repeat_one_description">"Atkārtot vienu"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-mk-rMK/strings.xml b/extensions/mediasession/src/main/res/values-mk-rMK/strings.xml
deleted file mode 100644
index ddf2a60c20..0000000000
--- a/extensions/mediasession/src/main/res/values-mk-rMK/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Повтори ги сите"</string>
-  <string name="exo_media_action_repeat_off_description">"Не повторувај ниту една"</string>
-  <string name="exo_media_action_repeat_one_description">"Повтори една"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ml-rIN/strings.xml b/extensions/mediasession/src/main/res/values-ml-rIN/strings.xml
deleted file mode 100644
index 6f869e2931..0000000000
--- a/extensions/mediasession/src/main/res/values-ml-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"എല്ലാം ആവർത്തിക്കുക"</string>
-  <string name="exo_media_action_repeat_off_description">"ഒന്നും ആവർത്തിക്കരുത്"</string>
-  <string name="exo_media_action_repeat_one_description">"ഒന്ന് ആവർത്തിക്കുക"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-mn-rMN/strings.xml b/extensions/mediasession/src/main/res/values-mn-rMN/strings.xml
deleted file mode 100644
index 8d3074b91a..0000000000
--- a/extensions/mediasession/src/main/res/values-mn-rMN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Бүгдийг давтах"</string>
-  <string name="exo_media_action_repeat_off_description">"Алийг нь ч давтахгүй"</string>
-  <string name="exo_media_action_repeat_one_description">"Нэгийг давтах"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-mr-rIN/strings.xml b/extensions/mediasession/src/main/res/values-mr-rIN/strings.xml
deleted file mode 100644
index 6e4bfccc16..0000000000
--- a/extensions/mediasession/src/main/res/values-mr-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"सर्व पुनरावृत्ती करा"</string>
-  <string name="exo_media_action_repeat_off_description">"काहीही पुनरावृत्ती करू नका"</string>
-  <string name="exo_media_action_repeat_one_description">"एक पुनरावृत्ती करा"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ms-rMY/strings.xml b/extensions/mediasession/src/main/res/values-ms-rMY/strings.xml
deleted file mode 100644
index 829542b668..0000000000
--- a/extensions/mediasession/src/main/res/values-ms-rMY/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ulang semua"</string>
-  <string name="exo_media_action_repeat_off_description">"Tiada ulangan"</string>
-  <string name="exo_media_action_repeat_one_description">"Ulangan"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-my-rMM/strings.xml b/extensions/mediasession/src/main/res/values-my-rMM/strings.xml
deleted file mode 100644
index aeb1375ebf..0000000000
--- a/extensions/mediasession/src/main/res/values-my-rMM/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"အားလုံး ထပ်တလဲလဲဖွင့်ရန်"</string>
-  <string name="exo_media_action_repeat_off_description">"ထပ်တလဲလဲမဖွင့်ရန်"</string>
-  <string name="exo_media_action_repeat_one_description">"တစ်ခုအား ထပ်တလဲလဲဖွင့်ရန်"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-nb/strings.xml b/extensions/mediasession/src/main/res/values-nb/strings.xml
deleted file mode 100644
index 10f334b226..0000000000
--- a/extensions/mediasession/src/main/res/values-nb/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Gjenta alle"</string>
-  <string name="exo_media_action_repeat_off_description">"Ikke gjenta noen"</string>
-  <string name="exo_media_action_repeat_one_description">"Gjenta én"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ne-rNP/strings.xml b/extensions/mediasession/src/main/res/values-ne-rNP/strings.xml
deleted file mode 100644
index 6d81ce5684..0000000000
--- a/extensions/mediasession/src/main/res/values-ne-rNP/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"सबै दोहोर्याउनुहोस्"</string>
-  <string name="exo_media_action_repeat_off_description">"कुनै पनि नदोहोर्याउनुहोस्"</string>
-  <string name="exo_media_action_repeat_one_description">"एउटा दोहोर्याउनुहोस्"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-nl/strings.xml b/extensions/mediasession/src/main/res/values-nl/strings.xml
deleted file mode 100644
index 55997be098..0000000000
--- a/extensions/mediasession/src/main/res/values-nl/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Alles herhalen"</string>
-  <string name="exo_media_action_repeat_off_description">"Niet herhalen"</string>
-  <string name="exo_media_action_repeat_one_description">"Eén herhalen"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-pa-rIN/strings.xml b/extensions/mediasession/src/main/res/values-pa-rIN/strings.xml
deleted file mode 100644
index 8eee0bee16..0000000000
--- a/extensions/mediasession/src/main/res/values-pa-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"ਸਭ ਨੂੰ ਦੁਹਰਾਓ"</string>
-  <string name="exo_media_action_repeat_off_description">"ਕੋਈ ਵੀ ਨਹੀਂ ਦੁਹਰਾਓ"</string>
-  <string name="exo_media_action_repeat_one_description">"ਇੱਕ ਦੁਹਰਾਓ"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-pl/strings.xml b/extensions/mediasession/src/main/res/values-pl/strings.xml
deleted file mode 100644
index 6a52d58b63..0000000000
--- a/extensions/mediasession/src/main/res/values-pl/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Powtórz wszystkie"</string>
-  <string name="exo_media_action_repeat_off_description">"Nie powtarzaj"</string>
-  <string name="exo_media_action_repeat_one_description">"Powtórz jeden"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-pt-rBR/strings.xml b/extensions/mediasession/src/main/res/values-pt-rBR/strings.xml
deleted file mode 100644
index efb8fc433f..0000000000
--- a/extensions/mediasession/src/main/res/values-pt-rBR/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repetir tudo"</string>
-  <string name="exo_media_action_repeat_off_description">"Não repetir"</string>
-  <string name="exo_media_action_repeat_one_description">"Repetir um"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-pt-rPT/strings.xml b/extensions/mediasession/src/main/res/values-pt-rPT/strings.xml
deleted file mode 100644
index efb8fc433f..0000000000
--- a/extensions/mediasession/src/main/res/values-pt-rPT/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repetir tudo"</string>
-  <string name="exo_media_action_repeat_off_description">"Não repetir"</string>
-  <string name="exo_media_action_repeat_one_description">"Repetir um"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-pt/strings.xml b/extensions/mediasession/src/main/res/values-pt/strings.xml
deleted file mode 100644
index aadebbb3b0..0000000000
--- a/extensions/mediasession/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repetir tudo"</string>
-  <string name="exo_media_action_repeat_off_description">"Não repetir"</string>
-  <string name="exo_media_action_repeat_one_description">"Repetir uma"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ro/strings.xml b/extensions/mediasession/src/main/res/values-ro/strings.xml
deleted file mode 100644
index f6aee447e5..0000000000
--- a/extensions/mediasession/src/main/res/values-ro/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Repetați toate"</string>
-  <string name="exo_media_action_repeat_off_description">"Repetați niciuna"</string>
-  <string name="exo_media_action_repeat_one_description">"Repetați unul"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ru/strings.xml b/extensions/mediasession/src/main/res/values-ru/strings.xml
deleted file mode 100644
index 575ad9f930..0000000000
--- a/extensions/mediasession/src/main/res/values-ru/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Повторять все"</string>
-  <string name="exo_media_action_repeat_off_description">"Не повторять"</string>
-  <string name="exo_media_action_repeat_one_description">"Повторять один элемент"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-si-rLK/strings.xml b/extensions/mediasession/src/main/res/values-si-rLK/strings.xml
deleted file mode 100644
index 8e172ac268..0000000000
--- a/extensions/mediasession/src/main/res/values-si-rLK/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"සියලු නැවත"</string>
-  <string name="exo_media_action_repeat_off_description">"කිසිවක් නැවත"</string>
-  <string name="exo_media_action_repeat_one_description">"නැවත නැවත එක්"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-sk/strings.xml b/extensions/mediasession/src/main/res/values-sk/strings.xml
deleted file mode 100644
index 5d092003e5..0000000000
--- a/extensions/mediasession/src/main/res/values-sk/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Opakovať všetko"</string>
-  <string name="exo_media_action_repeat_off_description">"Neopakovať"</string>
-  <string name="exo_media_action_repeat_one_description">"Opakovať jednu položku"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-sl/strings.xml b/extensions/mediasession/src/main/res/values-sl/strings.xml
deleted file mode 100644
index ecac3800c8..0000000000
--- a/extensions/mediasession/src/main/res/values-sl/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ponovi vse"</string>
-  <string name="exo_media_action_repeat_off_description">"Ne ponovi"</string>
-  <string name="exo_media_action_repeat_one_description">"Ponovi eno"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-sq-rAL/strings.xml b/extensions/mediasession/src/main/res/values-sq-rAL/strings.xml
deleted file mode 100644
index 6da24cc4c7..0000000000
--- a/extensions/mediasession/src/main/res/values-sq-rAL/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Përsërit të gjithë"</string>
-  <string name="exo_media_action_repeat_off_description">"Përsëritni asnjë"</string>
-  <string name="exo_media_action_repeat_one_description">"Përsëritni një"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-sr/strings.xml b/extensions/mediasession/src/main/res/values-sr/strings.xml
deleted file mode 100644
index 881cb2703b..0000000000
--- a/extensions/mediasession/src/main/res/values-sr/strings.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-sv/strings.xml b/extensions/mediasession/src/main/res/values-sv/strings.xml
deleted file mode 100644
index 3a7bb630aa..0000000000
--- a/extensions/mediasession/src/main/res/values-sv/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Upprepa alla"</string>
-  <string name="exo_media_action_repeat_off_description">"Upprepa inga"</string>
-  <string name="exo_media_action_repeat_one_description">"Upprepa en"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-sw/strings.xml b/extensions/mediasession/src/main/res/values-sw/strings.xml
deleted file mode 100644
index 726012ab88..0000000000
--- a/extensions/mediasession/src/main/res/values-sw/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Rudia zote"</string>
-  <string name="exo_media_action_repeat_off_description">"Usirudie Yoyote"</string>
-  <string name="exo_media_action_repeat_one_description">"Rudia Moja"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ta-rIN/strings.xml b/extensions/mediasession/src/main/res/values-ta-rIN/strings.xml
deleted file mode 100644
index 9364bc0be2..0000000000
--- a/extensions/mediasession/src/main/res/values-ta-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"அனைத்தையும் மீண்டும் இயக்கு"</string>
-  <string name="exo_media_action_repeat_off_description">"எதையும் மீண்டும் இயக்காதே"</string>
-  <string name="exo_media_action_repeat_one_description">"ஒன்றை மட்டும் மீண்டும் இயக்கு"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-te-rIN/strings.xml b/extensions/mediasession/src/main/res/values-te-rIN/strings.xml
deleted file mode 100644
index b7ee7345d5..0000000000
--- a/extensions/mediasession/src/main/res/values-te-rIN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"అన్నీ పునరావృతం చేయి"</string>
-  <string name="exo_media_action_repeat_off_description">"ఏదీ పునరావృతం చేయవద్దు"</string>
-  <string name="exo_media_action_repeat_one_description">"ఒకదాన్ని పునరావృతం చేయి"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-th/strings.xml b/extensions/mediasession/src/main/res/values-th/strings.xml
deleted file mode 100644
index af502b3a4c..0000000000
--- a/extensions/mediasession/src/main/res/values-th/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"เล่นซ้ำทั้งหมด"</string>
-  <string name="exo_media_action_repeat_off_description">"ไม่เล่นซ้ำ"</string>
-  <string name="exo_media_action_repeat_one_description">"เล่นซ้ำรายการเดียว"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-tl/strings.xml b/extensions/mediasession/src/main/res/values-tl/strings.xml
deleted file mode 100644
index 239972a4c7..0000000000
--- a/extensions/mediasession/src/main/res/values-tl/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Ulitin Lahat"</string>
-  <string name="exo_media_action_repeat_off_description">"Walang Uulitin"</string>
-  <string name="exo_media_action_repeat_one_description">"Ulitin ang Isa"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-tr/strings.xml b/extensions/mediasession/src/main/res/values-tr/strings.xml
deleted file mode 100644
index 89a98b1ed9..0000000000
--- a/extensions/mediasession/src/main/res/values-tr/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Tümünü Tekrarla"</string>
-  <string name="exo_media_action_repeat_off_description">"Hiçbirini Tekrarlama"</string>
-  <string name="exo_media_action_repeat_one_description">"Birini Tekrarla"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-uk/strings.xml b/extensions/mediasession/src/main/res/values-uk/strings.xml
deleted file mode 100644
index 4e1d25eb8a..0000000000
--- a/extensions/mediasession/src/main/res/values-uk/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Повторити все"</string>
-  <string name="exo_media_action_repeat_off_description">"Не повторювати"</string>
-  <string name="exo_media_action_repeat_one_description">"Повторити один елемент"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-ur-rPK/strings.xml b/extensions/mediasession/src/main/res/values-ur-rPK/strings.xml
deleted file mode 100644
index ab2631a4ec..0000000000
--- a/extensions/mediasession/src/main/res/values-ur-rPK/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"سبھی کو دہرائیں"</string>
-  <string name="exo_media_action_repeat_off_description">"کسی کو نہ دہرائیں"</string>
-  <string name="exo_media_action_repeat_one_description">"ایک کو دہرائیں"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-uz-rUZ/strings.xml b/extensions/mediasession/src/main/res/values-uz-rUZ/strings.xml
deleted file mode 100644
index c32d00af8e..0000000000
--- a/extensions/mediasession/src/main/res/values-uz-rUZ/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Barchasini takrorlash"</string>
-  <string name="exo_media_action_repeat_off_description">"Takrorlamaslik"</string>
-  <string name="exo_media_action_repeat_one_description">"Bir marta takrorlash"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-vi/strings.xml b/extensions/mediasession/src/main/res/values-vi/strings.xml
deleted file mode 100644
index dabc9e05d5..0000000000
--- a/extensions/mediasession/src/main/res/values-vi/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Lặp lại tất cả"</string>
-  <string name="exo_media_action_repeat_off_description">"Không lặp lại"</string>
-  <string name="exo_media_action_repeat_one_description">"Lặp lại một mục"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-zh-rCN/strings.xml b/extensions/mediasession/src/main/res/values-zh-rCN/strings.xml
deleted file mode 100644
index beb3403cb9..0000000000
--- a/extensions/mediasession/src/main/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"重复播放全部"</string>
-  <string name="exo_media_action_repeat_off_description">"不重复播放"</string>
-  <string name="exo_media_action_repeat_one_description">"重复播放单个视频"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-zh-rHK/strings.xml b/extensions/mediasession/src/main/res/values-zh-rHK/strings.xml
deleted file mode 100644
index 775cd6441c..0000000000
--- a/extensions/mediasession/src/main/res/values-zh-rHK/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"重複播放所有媒體項目"</string>
-  <string name="exo_media_action_repeat_off_description">"不重複播放任何媒體項目"</string>
-  <string name="exo_media_action_repeat_one_description">"重複播放一個媒體項目"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-zh-rTW/strings.xml b/extensions/mediasession/src/main/res/values-zh-rTW/strings.xml
deleted file mode 100644
index d3789f4145..0000000000
--- a/extensions/mediasession/src/main/res/values-zh-rTW/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"重複播放所有媒體項目"</string>
-  <string name="exo_media_action_repeat_off_description">"不重複播放"</string>
-  <string name="exo_media_action_repeat_one_description">"重複播放單一媒體項目"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values-zu/strings.xml b/extensions/mediasession/src/main/res/values-zu/strings.xml
deleted file mode 100644
index 789b6fecb4..0000000000
--- a/extensions/mediasession/src/main/res/values-zu/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0"?>
-<!--
-     Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_all_description">"Phinda konke"</string>
-  <string name="exo_media_action_repeat_off_description">"Ungaphindi lutho"</string>
-  <string name="exo_media_action_repeat_one_description">"Phida okukodwa"</string>
-</resources>
diff --git a/extensions/mediasession/src/main/res/values/strings.xml b/extensions/mediasession/src/main/res/values/strings.xml
deleted file mode 100644
index 72a67ff01c..0000000000
--- a/extensions/mediasession/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-  <string name="exo_media_action_repeat_off_description">Repeat none</string>
-  <string name="exo_media_action_repeat_one_description">Repeat one</string>
-  <string name="exo_media_action_repeat_all_description">Repeat all</string>
-</resources>
diff --git a/extensions/okhttp/README.md b/extensions/okhttp/README.md
deleted file mode 100644
index f84d0c35f2..0000000000
--- a/extensions/okhttp/README.md
+++ /dev/null
@@ -1,56 +0,0 @@
-# ExoPlayer OkHttp extension #
-
-The OkHttp extension is an [HttpDataSource][] implementation using Square's
-[OkHttp][].
-
-[HttpDataSource]: https://google.github.io/ExoPlayer/doc/reference/com/google/android/exoplayer2/upstream/HttpDataSource.html
-[OkHttp]: https://square.github.io/okhttp/
-
-## Getting the extension ##
-
-The easiest way to use the extension is to add it as a gradle dependency:
-
-```gradle
-compile 'com.google.android.exoplayer:extension-okhttp:rX.X.X'
-```
-
-where `rX.X.X` is the version, which must match the version of the ExoPlayer
-library being used.
-
-Alternatively, you can clone the ExoPlayer repository and depend on the module
-locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-
-## Using the extension ##
-
-ExoPlayer requests data through `DataSource` instances. These instances are
-either instantiated and injected from application code, or obtained from
-instances of `DataSource.Factory` that are instantiated and injected from
-application code.
-
-If your application only needs to play http(s) content, using the OkHttp
-extension is as simple as updating any `DataSource`s and `DataSource.Factory`
-instantiations in your application code to use `OkHttpDataSource` and
-`OkHttpDataSourceFactory` respectively. If your application also needs to play
-non-http(s) content such as local files, use
-```
-new DefaultDataSource(
-    ...
-    new OkHttpDataSource(...) /* baseDataSource argument */);
-```
-and
-```
-new DefaultDataSourceFactory(
-    ...
-    new OkHttpDataSourceFactory(...) /* baseDataSourceFactory argument */);
-```
-respectively.
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.okhttp.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/okhttp/build.gradle b/extensions/okhttp/build.gradle
deleted file mode 100644
index eacf40dfef..0000000000
--- a/extensions/okhttp/build.gradle
+++ /dev/null
@@ -1,37 +0,0 @@
-// Copyright (C) 2016 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion project.ext.minSdkVersion
-        targetSdkVersion project.ext.targetSdkVersion
-    }
-
-    lintOptions {
-        // See: https://github.com/square/okio/issues/58
-        warning 'InvalidPackage'
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-    compile('com.squareup.okhttp3:okhttp:3.8.1') {
-        exclude group: 'org.json'
-    }
-}
\ No newline at end of file
diff --git a/extensions/okhttp/src/main/AndroidManifest.xml b/extensions/okhttp/src/main/AndroidManifest.xml
deleted file mode 100644
index eeb181014a..0000000000
--- a/extensions/okhttp/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest package="com.google.android.exoplayer2.ext.okhttp"/>
diff --git a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java b/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
deleted file mode 100644
index 0519673e50..0000000000
--- a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
+++ /dev/null
@@ -1,395 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.okhttp;
-
-import android.net.Uri;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.upstream.DataSourceException;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import com.google.android.exoplayer2.upstream.HttpDataSource;
-import com.google.android.exoplayer2.upstream.TransferListener;
-import com.google.android.exoplayer2.util.Assertions;
-import com.google.android.exoplayer2.util.Predicate;
-import java.io.EOFException;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InterruptedIOException;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.atomic.AtomicReference;
-import okhttp3.CacheControl;
-import okhttp3.Call;
-import okhttp3.HttpUrl;
-import okhttp3.MediaType;
-import okhttp3.Request;
-import okhttp3.RequestBody;
-import okhttp3.Response;
-
-/**
- * An {@link HttpDataSource} that delegates to Square's {@link Call.Factory}.
- */
-public class OkHttpDataSource implements HttpDataSource {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.okhttp");
-  }
-
-  private static final AtomicReference<byte[]> skipBufferReference = new AtomicReference<>();
-
-  @NonNull private final Call.Factory callFactory;
-  @NonNull private final RequestProperties requestProperties;
-
-  @Nullable private final String userAgent;
-  @Nullable private final Predicate<String> contentTypePredicate;
-  @Nullable private final TransferListener<? super OkHttpDataSource> listener;
-  @Nullable private final CacheControl cacheControl;
-  @Nullable private final RequestProperties defaultRequestProperties;
-
-  private DataSpec dataSpec;
-  private Response response;
-  private InputStream responseByteStream;
-  private boolean opened;
-
-  private long bytesToSkip;
-  private long bytesToRead;
-
-  private long bytesSkipped;
-  private long bytesRead;
-
-  /**
-   * @param callFactory A {@link Call.Factory} (typically an {@link okhttp3.OkHttpClient}) for use
-   *     by the source.
-   * @param userAgent An optional User-Agent string.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then a InvalidContentTypeException} is thrown from {@link #open(DataSpec)}.
-   */
-  public OkHttpDataSource(@NonNull Call.Factory callFactory, @Nullable String userAgent,
-      @Nullable Predicate<String> contentTypePredicate) {
-    this(callFactory, userAgent, contentTypePredicate, null);
-  }
-
-  /**
-   * @param callFactory A {@link Call.Factory} (typically an {@link okhttp3.OkHttpClient}) for use
-   *     by the source.
-   * @param userAgent An optional User-Agent string.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then a {@link InvalidContentTypeException} is thrown from
-   *     {@link #open(DataSpec)}.
-   * @param listener An optional listener.
-   */
-  public OkHttpDataSource(@NonNull Call.Factory callFactory, @Nullable String userAgent,
-      @Nullable Predicate<String> contentTypePredicate,
-      @Nullable TransferListener<? super OkHttpDataSource> listener) {
-    this(callFactory, userAgent, contentTypePredicate, listener, null, null);
-  }
-
-  /**
-   * @param callFactory A {@link Call.Factory} (typically an {@link okhttp3.OkHttpClient}) for use
-   *     by the source.
-   * @param userAgent An optional User-Agent string.
-   * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
-   *     predicate then a {@link InvalidContentTypeException} is thrown from
-   *     {@link #open(DataSpec)}.
-   * @param listener An optional listener.
-   * @param cacheControl An optional {@link CacheControl} for setting the Cache-Control header.
-   * @param defaultRequestProperties The optional default {@link RequestProperties} to be sent to
-   *    the server as HTTP headers on every request.
-   */
-  public OkHttpDataSource(@NonNull Call.Factory callFactory, @Nullable String userAgent,
-      @Nullable Predicate<String> contentTypePredicate,
-      @Nullable TransferListener<? super OkHttpDataSource> listener,
-      @Nullable CacheControl cacheControl, @Nullable RequestProperties defaultRequestProperties) {
-    this.callFactory = Assertions.checkNotNull(callFactory);
-    this.userAgent = userAgent;
-    this.contentTypePredicate = contentTypePredicate;
-    this.listener = listener;
-    this.cacheControl = cacheControl;
-    this.defaultRequestProperties = defaultRequestProperties;
-    this.requestProperties = new RequestProperties();
-  }
-
-  @Override
-  public Uri getUri() {
-    return response == null ? null : Uri.parse(response.request().url().toString());
-  }
-
-  @Override
-  public Map<String, List<String>> getResponseHeaders() {
-    return response == null ? null : response.headers().toMultimap();
-  }
-
-  @Override
-  public void setRequestProperty(String name, String value) {
-    Assertions.checkNotNull(name);
-    Assertions.checkNotNull(value);
-    requestProperties.set(name, value);
-  }
-
-  @Override
-  public void clearRequestProperty(String name) {
-    Assertions.checkNotNull(name);
-    requestProperties.remove(name);
-  }
-
-  @Override
-  public void clearAllRequestProperties() {
-    requestProperties.clear();
-  }
-
-  @Override
-  public long open(DataSpec dataSpec) throws HttpDataSourceException {
-    this.dataSpec = dataSpec;
-    this.bytesRead = 0;
-    this.bytesSkipped = 0;
-    Request request = makeRequest(dataSpec);
-    try {
-      response = callFactory.newCall(request).execute();
-      responseByteStream = response.body().byteStream();
-    } catch (IOException e) {
-      throw new HttpDataSourceException("Unable to connect to " + dataSpec.uri.toString(), e,
-          dataSpec, HttpDataSourceException.TYPE_OPEN);
-    }
-
-    int responseCode = response.code();
-
-    // Check for a valid response code.
-    if (!response.isSuccessful()) {
-      Map<String, List<String>> headers = request.headers().toMultimap();
-      closeConnectionQuietly();
-      InvalidResponseCodeException exception = new InvalidResponseCodeException(
-          responseCode, headers, dataSpec);
-      if (responseCode == 416) {
-        exception.initCause(new DataSourceException(DataSourceException.POSITION_OUT_OF_RANGE));
-      }
-      throw exception;
-    }
-
-    // Check for a valid content type.
-    MediaType mediaType = response.body().contentType();
-    String contentType = mediaType != null ? mediaType.toString() : null;
-    if (contentTypePredicate != null && !contentTypePredicate.evaluate(contentType)) {
-      closeConnectionQuietly();
-      throw new InvalidContentTypeException(contentType, dataSpec);
-    }
-
-    // If we requested a range starting from a non-zero position and received a 200 rather than a
-    // 206, then the server does not support partial requests. We'll need to manually skip to the
-    // requested position.
-    bytesToSkip = responseCode == 200 && dataSpec.position != 0 ? dataSpec.position : 0;
-
-    // Determine the length of the data to be read, after skipping.
-    if (dataSpec.length != C.LENGTH_UNSET) {
-      bytesToRead = dataSpec.length;
-    } else {
-      long contentLength = response.body().contentLength();
-      bytesToRead = contentLength != -1 ? (contentLength - bytesToSkip) : C.LENGTH_UNSET;
-    }
-
-    opened = true;
-    if (listener != null) {
-      listener.onTransferStart(this, dataSpec);
-    }
-
-    return bytesToRead;
-  }
-
-  @Override
-  public int read(byte[] buffer, int offset, int readLength) throws HttpDataSourceException {
-    try {
-      skipInternal();
-      return readInternal(buffer, offset, readLength);
-    } catch (IOException e) {
-      throw new HttpDataSourceException(e, dataSpec, HttpDataSourceException.TYPE_READ);
-    }
-  }
-
-  @Override
-  public void close() throws HttpDataSourceException {
-    if (opened) {
-      opened = false;
-      if (listener != null) {
-        listener.onTransferEnd(this);
-      }
-      closeConnectionQuietly();
-    }
-  }
-
-  /**
-   * Returns the number of bytes that have been skipped since the most recent call to
-   * {@link #open(DataSpec)}.
-   *
-   * @return The number of bytes skipped.
-   */
-  protected final long bytesSkipped() {
-    return bytesSkipped;
-  }
-
-  /**
-   * Returns the number of bytes that have been read since the most recent call to
-   * {@link #open(DataSpec)}.
-   *
-   * @return The number of bytes read.
-   */
-  protected final long bytesRead() {
-    return bytesRead;
-  }
-
-  /**
-   * Returns the number of bytes that are still to be read for the current {@link DataSpec}.
-   * <p>
-   * If the total length of the data being read is known, then this length minus {@code bytesRead()}
-   * is returned. If the total length is unknown, {@link C#LENGTH_UNSET} is returned.
-   *
-   * @return The remaining length, or {@link C#LENGTH_UNSET}.
-   */
-  protected final long bytesRemaining() {
-    return bytesToRead == C.LENGTH_UNSET ? bytesToRead : bytesToRead - bytesRead;
-  }
-
-  /**
-   * Establishes a connection.
-   */
-  private Request makeRequest(DataSpec dataSpec) {
-    long position = dataSpec.position;
-    long length = dataSpec.length;
-    boolean allowGzip = dataSpec.isFlagSet(DataSpec.FLAG_ALLOW_GZIP);
-
-    HttpUrl url = HttpUrl.parse(dataSpec.uri.toString());
-    Request.Builder builder = new Request.Builder().url(url);
-    if (cacheControl != null) {
-      builder.cacheControl(cacheControl);
-    }
-    if (defaultRequestProperties != null) {
-      for (Map.Entry<String, String> property : defaultRequestProperties.getSnapshot().entrySet()) {
-        builder.header(property.getKey(), property.getValue());
-      }
-    }
-    for (Map.Entry<String, String> property : requestProperties.getSnapshot().entrySet()) {
-      builder.header(property.getKey(), property.getValue());
-    }
-    if (!(position == 0 && length == C.LENGTH_UNSET)) {
-      String rangeRequest = "bytes=" + position + "-";
-      if (length != C.LENGTH_UNSET) {
-        rangeRequest += (position + length - 1);
-      }
-      builder.addHeader("Range", rangeRequest);
-    }
-    if (userAgent != null) {
-      builder.addHeader("User-Agent", userAgent);
-    }
-
-    if (!allowGzip) {
-      builder.addHeader("Accept-Encoding", "identity");
-    }
-    if (dataSpec.postBody != null) {
-      builder.post(RequestBody.create(null, dataSpec.postBody));
-    }
-    return builder.build();
-  }
-
-  /**
-   * Skips any bytes that need skipping. Else does nothing.
-   * <p>
-   * This implementation is based roughly on {@code libcore.io.Streams.skipByReading()}.
-   *
-   * @throws InterruptedIOException If the thread is interrupted during the operation.
-   * @throws EOFException If the end of the input stream is reached before the bytes are skipped.
-   */
-  private void skipInternal() throws IOException {
-    if (bytesSkipped == bytesToSkip) {
-      return;
-    }
-
-    // Acquire the shared skip buffer.
-    byte[] skipBuffer = skipBufferReference.getAndSet(null);
-    if (skipBuffer == null) {
-      skipBuffer = new byte[4096];
-    }
-
-    while (bytesSkipped != bytesToSkip) {
-      int readLength = (int) Math.min(bytesToSkip - bytesSkipped, skipBuffer.length);
-      int read = responseByteStream.read(skipBuffer, 0, readLength);
-      if (Thread.interrupted()) {
-        throw new InterruptedIOException();
-      }
-      if (read == -1) {
-        throw new EOFException();
-      }
-      bytesSkipped += read;
-      if (listener != null) {
-        listener.onBytesTransferred(this, read);
-      }
-    }
-
-    // Release the shared skip buffer.
-    skipBufferReference.set(skipBuffer);
-  }
-
-  /**
-   * Reads up to {@code length} bytes of data and stores them into {@code buffer}, starting at
-   * index {@code offset}.
-   * <p>
-   * This method blocks until at least one byte of data can be read, the end of the opened range is
-   * detected, or an exception is thrown.
-   *
-   * @param buffer The buffer into which the read data should be stored.
-   * @param offset The start offset into {@code buffer} at which data should be written.
-   * @param readLength The maximum number of bytes to read.
-   * @return The number of bytes read, or {@link C#RESULT_END_OF_INPUT} if the end of the opened
-   *     range is reached.
-   * @throws IOException If an error occurs reading from the source.
-   */
-  private int readInternal(byte[] buffer, int offset, int readLength) throws IOException {
-    if (readLength == 0) {
-      return 0;
-    }
-    if (bytesToRead != C.LENGTH_UNSET) {
-      long bytesRemaining = bytesToRead - bytesRead;
-      if (bytesRemaining == 0) {
-        return C.RESULT_END_OF_INPUT;
-      }
-      readLength = (int) Math.min(readLength, bytesRemaining);
-    }
-
-    int read = responseByteStream.read(buffer, offset, readLength);
-    if (read == -1) {
-      if (bytesToRead != C.LENGTH_UNSET) {
-        // End of stream reached having not read sufficient data.
-        throw new EOFException();
-      }
-      return C.RESULT_END_OF_INPUT;
-    }
-
-    bytesRead += read;
-    if (listener != null) {
-      listener.onBytesTransferred(this, read);
-    }
-    return read;
-  }
-
-  /**
-   * Closes the current connection quietly, if there is one.
-   */
-  private void closeConnectionQuietly() {
-    response.body().close();
-    response = null;
-    responseByteStream = null;
-  }
-
-}
diff --git a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSourceFactory.java b/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSourceFactory.java
deleted file mode 100644
index 32fc5a58cb..0000000000
--- a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSourceFactory.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.okhttp;
-
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import com.google.android.exoplayer2.upstream.DataSource;
-import com.google.android.exoplayer2.upstream.HttpDataSource;
-import com.google.android.exoplayer2.upstream.HttpDataSource.BaseFactory;
-import com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
-import com.google.android.exoplayer2.upstream.TransferListener;
-import okhttp3.CacheControl;
-import okhttp3.Call;
-
-/**
- * A {@link Factory} that produces {@link OkHttpDataSource}.
- */
-public final class OkHttpDataSourceFactory extends BaseFactory {
-
-  @NonNull private final Call.Factory callFactory;
-  @Nullable private final String userAgent;
-  @Nullable private final TransferListener<? super DataSource> listener;
-  @Nullable private final CacheControl cacheControl;
-
-  /**
-   * @param callFactory A {@link Call.Factory} (typically an {@link okhttp3.OkHttpClient}) for use
-   *     by the sources created by the factory.
-   * @param userAgent An optional User-Agent string.
-   * @param listener An optional listener.
-   */
-  public OkHttpDataSourceFactory(@NonNull Call.Factory callFactory, @Nullable String userAgent,
-      @Nullable TransferListener<? super DataSource> listener) {
-    this(callFactory, userAgent, listener, null);
-  }
-
-  /**
-   * @param callFactory A {@link Call.Factory} (typically an {@link okhttp3.OkHttpClient}) for use
-   *     by the sources created by the factory.
-   * @param userAgent An optional User-Agent string.
-   * @param listener An optional listener.
-   * @param cacheControl An optional {@link CacheControl} for setting the Cache-Control header.
-   */
-  public OkHttpDataSourceFactory(@NonNull Call.Factory callFactory, @Nullable String userAgent,
-      @Nullable TransferListener<? super DataSource> listener,
-      @Nullable CacheControl cacheControl) {
-    this.callFactory = callFactory;
-    this.userAgent = userAgent;
-    this.listener = listener;
-    this.cacheControl = cacheControl;
-  }
-
-  @Override
-  protected OkHttpDataSource createDataSourceInternal(
-      HttpDataSource.RequestProperties defaultRequestProperties) {
-    return new OkHttpDataSource(callFactory, userAgent, null, listener, cacheControl,
-        defaultRequestProperties);
-  }
-
-}
diff --git a/extensions/opus/README.md b/extensions/opus/README.md
deleted file mode 100644
index d766e8c9c4..0000000000
--- a/extensions/opus/README.md
+++ /dev/null
@@ -1,93 +0,0 @@
-# ExoPlayer Opus extension #
-
-The Opus extension provides `LibopusAudioRenderer`, which uses libopus (the Opus
-decoding library) to decode Opus audio.
-
-## Build instructions ##
-
-To use this extension you need to clone the ExoPlayer repository and depend on
-its modules locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-In addition, it's necessary to build the extension's native components as
-follows:
-
-* Set the following environment variables:
-
-```
-cd "<path to exoplayer checkout>"
-EXOPLAYER_ROOT="$(pwd)"
-OPUS_EXT_PATH="${EXOPLAYER_ROOT}/extensions/opus/src/main"
-```
-
-* Download the [Android NDK][] and set its location in an environment variable:
-
-```
-NDK_PATH="<path to Android NDK>"
-```
-
-* Fetch libopus:
-
-```
-cd "${OPUS_EXT_PATH}/jni" && \
-git clone https://git.xiph.org/opus.git libopus
-```
-
-* Run the script to convert arm assembly to NDK compatible format:
-
-```
-cd ${OPUS_EXT_PATH}/jni && ./convert_android_asm.sh
-```
-
-* Build the JNI native libraries from the command line:
-
-```
-cd "${OPUS_EXT_PATH}"/jni && \
-${NDK_PATH}/ndk-build APP_ABI=all -j4
-```
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-[Android NDK]: https://developer.android.com/tools/sdk/ndk/index.html
-
-## Notes ##
-
-* Every time there is a change to the libopus checkout:
-  * Arm assembly should be converted by running `convert_android_asm.sh`
-  * Clean and re-build the project.
-* If you want to use your own version of libopus, place it in
-  `${OPUS_EXT_PATH}/jni/libopus`.
-
-## Using the extension ##
-
-Once you've followed the instructions above to check out, build and depend on
-the extension, the next step is to tell ExoPlayer to use `LibopusAudioRenderer`.
-How you do this depends on which player API you're using:
-
-* If you're passing a `DefaultRenderersFactory` to
-  `ExoPlayerFactory.newSimpleInstance`, you can enable using the extension by
-  setting the `extensionRendererMode` parameter of the `DefaultRenderersFactory`
-  constructor to `EXTENSION_RENDERER_MODE_ON`. This will use
-  `LibopusAudioRenderer` for playback if `MediaCodecAudioRenderer` doesn't
-  support the input format. Pass `EXTENSION_RENDERER_MODE_PREFER` to give
-  `LibopusAudioRenderer` priority over `MediaCodecAudioRenderer`.
-* If you've subclassed `DefaultRenderersFactory`, add a `LibopusAudioRenderer`
-  to the output list in `buildAudioRenderers`. ExoPlayer will use the first
-  `Renderer` in the list that supports the input media format.
-* If you've implemented your own `RenderersFactory`, return a
-  `LibopusAudioRenderer` instance from `createRenderers`. ExoPlayer will use the
-  first `Renderer` in the returned array that supports the input media format.
-* If you're using `ExoPlayerFactory.newInstance`, pass a `LibopusAudioRenderer`
-  in the array of `Renderer`s. ExoPlayer will use the first `Renderer` in the
-  list that supports the input media format.
-
-Note: These instructions assume you're using `DefaultTrackSelector`. If you have
-a custom track selector the choice of `Renderer` is up to your implementation,
-so you need to make sure you are passing an `LibopusAudioRenderer` to the
-player, then implement your own logic to use the renderer for a given track.
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.opus.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/opus/build.gradle b/extensions/opus/build.gradle
deleted file mode 100644
index c606bb7236..0000000000
--- a/extensions/opus/build.gradle
+++ /dev/null
@@ -1,35 +0,0 @@
-// Copyright (C) 2016 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion project.ext.minSdkVersion
-        targetSdkVersion project.ext.targetSdkVersion
-        consumerProguardFiles 'proguard-rules.txt'
-    }
-
-    sourceSets.main {
-        jniLibs.srcDir 'src/main/libs'
-        jni.srcDirs = [] // Disable the automatic ndk-build call by Android Studio.
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-}
\ No newline at end of file
diff --git a/extensions/opus/proguard-rules.txt b/extensions/opus/proguard-rules.txt
deleted file mode 100644
index 2a380e23dd..0000000000
--- a/extensions/opus/proguard-rules.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-# Proguard rules specific to the Opus extension.
-
-# This prevents the names of native methods from being obfuscated.
--keepclasseswithmembernames class * {
-    native <methods>;
-}
-
-# Some members of this class are being accessed from native methods. Keep them unobfuscated.
--keep class com.google.android.exoplayer2.decoder.SimpleOutputBuffer {
-    *;
-}
diff --git a/extensions/opus/src/androidTest/AndroidManifest.xml b/extensions/opus/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index e77590dc65..0000000000
--- a/extensions/opus/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer2.ext.opus.test">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner"/>
-  </application>
-
-  <instrumentation
-      android:targetPackage="com.google.android.exoplayer2.ext.opus.test"
-      android:name="android.test.InstrumentationTestRunner"/>
-
-</manifest>
diff --git a/extensions/opus/src/androidTest/assets/bear-opus.webm b/extensions/opus/src/androidTest/assets/bear-opus.webm
deleted file mode 100644
index c198148814..0000000000
Binary files a/extensions/opus/src/androidTest/assets/bear-opus.webm and /dev/null differ
diff --git a/extensions/opus/src/androidTest/java/com/google/android/exoplayer2/ext/opus/OpusPlaybackTest.java b/extensions/opus/src/androidTest/java/com/google/android/exoplayer2/ext/opus/OpusPlaybackTest.java
deleted file mode 100644
index 4c576b2cc0..0000000000
--- a/extensions/opus/src/androidTest/java/com/google/android/exoplayer2/ext/opus/OpusPlaybackTest.java
+++ /dev/null
@@ -1,142 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.opus;
-
-import android.content.Context;
-import android.net.Uri;
-import android.os.Looper;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.ExoPlayer;
-import com.google.android.exoplayer2.ExoPlayerFactory;
-import com.google.android.exoplayer2.PlaybackParameters;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Renderer;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor;
-import com.google.android.exoplayer2.source.ExtractorMediaSource;
-import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
-import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
-import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
-
-/**
- * Playback tests using {@link LibopusAudioRenderer}.
- */
-public class OpusPlaybackTest extends InstrumentationTestCase {
-
-  private static final String BEAR_OPUS_URI = "asset:///bear-opus.webm";
-
-  public void testBasicPlayback() throws ExoPlaybackException {
-    playUri(BEAR_OPUS_URI);
-  }
-
-  private void playUri(String uri) throws ExoPlaybackException {
-    TestPlaybackThread thread = new TestPlaybackThread(Uri.parse(uri),
-        getInstrumentation().getContext());
-    thread.start();
-    try {
-      thread.join();
-    } catch (InterruptedException e) {
-      fail(); // Should never happen.
-    }
-    if (thread.playbackException != null) {
-      throw thread.playbackException;
-    }
-  }
-
-  private static class TestPlaybackThread extends Thread implements Player.EventListener {
-
-    private final Context context;
-    private final Uri uri;
-
-    private ExoPlayer player;
-    private ExoPlaybackException playbackException;
-
-    public TestPlaybackThread(Uri uri, Context context) {
-      this.uri = uri;
-      this.context = context;
-    }
-
-    @Override
-    public void run() {
-      Looper.prepare();
-      LibopusAudioRenderer audioRenderer = new LibopusAudioRenderer();
-      DefaultTrackSelector trackSelector = new DefaultTrackSelector();
-      player = ExoPlayerFactory.newInstance(new Renderer[] {audioRenderer}, trackSelector);
-      player.addListener(this);
-      ExtractorMediaSource mediaSource = new ExtractorMediaSource(
-          uri,
-          new DefaultDataSourceFactory(context, "ExoPlayerExtOpusTest"),
-          MatroskaExtractor.FACTORY,
-          null,
-          null);
-      player.prepare(mediaSource);
-      player.setPlayWhenReady(true);
-      Looper.loop();
-    }
-
-    @Override
-    public void onLoadingChanged(boolean isLoading) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPositionDiscontinuity() {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onTimelineChanged(Timeline timeline, Object manifest) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPlayerError(ExoPlaybackException error) {
-      playbackException = error;
-    }
-
-    @Override
-    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
-      if (playbackState == Player.STATE_ENDED
-          || (playbackState == Player.STATE_IDLE && playbackException != null)) {
-        releasePlayerAndQuitLooper();
-      }
-    }
-
-    @Override
-    public void onRepeatModeChanged(int repeatMode) {
-      // Do nothing.
-    }
-
-    private void releasePlayerAndQuitLooper() {
-      player.release();
-      Looper.myLooper().quit();
-    }
-
-  }
-
-}
diff --git a/extensions/opus/src/main/AndroidManifest.xml b/extensions/opus/src/main/AndroidManifest.xml
deleted file mode 100644
index 220b74d494..0000000000
--- a/extensions/opus/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest package="com.google.android.exoplayer2.ext.opus"/>
diff --git a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/LibopusAudioRenderer.java b/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/LibopusAudioRenderer.java
deleted file mode 100644
index 730473ddad..0000000000
--- a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/LibopusAudioRenderer.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.opus;
-
-import android.os.Handler;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.audio.AudioProcessor;
-import com.google.android.exoplayer2.audio.AudioRendererEventListener;
-import com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer;
-import com.google.android.exoplayer2.drm.DrmSessionManager;
-import com.google.android.exoplayer2.drm.ExoMediaCrypto;
-import com.google.android.exoplayer2.util.MimeTypes;
-
-/**
- * Decodes and renders audio using the native Opus decoder.
- */
-public final class LibopusAudioRenderer extends SimpleDecoderAudioRenderer {
-
-  private static final int NUM_BUFFERS = 16;
-  private static final int INITIAL_INPUT_BUFFER_SIZE = 960 * 6;
-
-  private OpusDecoder decoder;
-
-  public LibopusAudioRenderer() {
-    this(null, null);
-  }
-
-  /**
-   * @param eventHandler A handler to use when delivering events to {@code eventListener}. May be
-   *     null if delivery of events is not required.
-   * @param eventListener A listener of events. May be null if delivery of events is not required.
-   * @param audioProcessors Optional {@link AudioProcessor}s that will process audio before output.
-   */
-  public LibopusAudioRenderer(Handler eventHandler, AudioRendererEventListener eventListener,
-      AudioProcessor... audioProcessors) {
-    super(eventHandler, eventListener, audioProcessors);
-  }
-
-  /**
-   * @param eventHandler A handler to use when delivering events to {@code eventListener}. May be
-   *     null if delivery of events is not required.
-   * @param eventListener A listener of events. May be null if delivery of events is not required.
-   * @param drmSessionManager For use with encrypted media. May be null if support for encrypted
-   *     media is not required.
-   * @param playClearSamplesWithoutKeys Encrypted media may contain clear (un-encrypted) regions.
-   *     For example a media file may start with a short clear region so as to allow playback to
-   *     begin in parallel with key acquisition. This parameter specifies whether the renderer is
-   *     permitted to play clear regions of encrypted media files before {@code drmSessionManager}
-   *     has obtained the keys necessary to decrypt encrypted regions of the media.
-   * @param audioProcessors Optional {@link AudioProcessor}s that will process audio before output.
-   */
-  public LibopusAudioRenderer(Handler eventHandler, AudioRendererEventListener eventListener,
-      DrmSessionManager<ExoMediaCrypto> drmSessionManager, boolean playClearSamplesWithoutKeys,
-      AudioProcessor... audioProcessors) {
-    super(eventHandler, eventListener, null, drmSessionManager, playClearSamplesWithoutKeys,
-        audioProcessors);
-  }
-
-  @Override
-  protected int supportsFormatInternal(Format format) {
-    return OpusLibrary.isAvailable() && MimeTypes.AUDIO_OPUS.equalsIgnoreCase(format.sampleMimeType)
-        ? FORMAT_HANDLED : FORMAT_UNSUPPORTED_TYPE;
-  }
-
-  @Override
-  protected OpusDecoder createDecoder(Format format, ExoMediaCrypto mediaCrypto)
-      throws OpusDecoderException {
-    decoder = new OpusDecoder(NUM_BUFFERS, NUM_BUFFERS, INITIAL_INPUT_BUFFER_SIZE,
-        format.initializationData, mediaCrypto);
-    return decoder;
-  }
-
-  @Override
-  protected Format getOutputFormat() {
-    return Format.createAudioSampleFormat(null, MimeTypes.AUDIO_RAW, null, Format.NO_VALUE,
-        Format.NO_VALUE, decoder.getChannelCount(), decoder.getSampleRate(), C.ENCODING_PCM_16BIT,
-        null, null, 0, null);
-  }
-
-}
diff --git a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusDecoder.java b/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusDecoder.java
deleted file mode 100644
index b4a4622346..0000000000
--- a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusDecoder.java
+++ /dev/null
@@ -1,237 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.opus;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.decoder.CryptoInfo;
-import com.google.android.exoplayer2.decoder.DecoderInputBuffer;
-import com.google.android.exoplayer2.decoder.SimpleDecoder;
-import com.google.android.exoplayer2.decoder.SimpleOutputBuffer;
-import com.google.android.exoplayer2.drm.DecryptionException;
-import com.google.android.exoplayer2.drm.ExoMediaCrypto;
-import java.nio.ByteBuffer;
-import java.nio.ByteOrder;
-import java.util.List;
-
-/**
- * Opus decoder.
- */
-/* package */ final class OpusDecoder extends
-    SimpleDecoder<DecoderInputBuffer, SimpleOutputBuffer, OpusDecoderException> {
-
-  private static final int DEFAULT_SEEK_PRE_ROLL_SAMPLES = 3840;
-
-  /**
-   * Opus streams are always decoded at 48000 Hz.
-   */
-  private static final int SAMPLE_RATE = 48000;
-
-  private static final int NO_ERROR = 0;
-  private static final int DECODE_ERROR = -1;
-  private static final int DRM_ERROR = -2;
-
-  private final ExoMediaCrypto exoMediaCrypto;
-
-  private final int channelCount;
-  private final int headerSkipSamples;
-  private final int headerSeekPreRollSamples;
-  private final long nativeDecoderContext;
-
-  private int skipSamples;
-
-  /**
-   * Creates an Opus decoder.
-   *
-   * @param numInputBuffers The number of input buffers.
-   * @param numOutputBuffers The number of output buffers.
-   * @param initialInputBufferSize The initial size of each input buffer.
-   * @param initializationData Codec-specific initialization data. The first element must contain an
-   *     opus header. Optionally, the list may contain two additional buffers, which must contain
-   *     the encoder delay and seek pre roll values in nanoseconds, encoded as longs.
-   * @param exoMediaCrypto The {@link ExoMediaCrypto} object required for decoding encrypted
-   *     content. Maybe null and can be ignored if decoder does not handle encrypted content.
-   * @throws OpusDecoderException Thrown if an exception occurs when initializing the decoder.
-   */
-  public OpusDecoder(int numInputBuffers, int numOutputBuffers, int initialInputBufferSize,
-      List<byte[]> initializationData, ExoMediaCrypto exoMediaCrypto) throws OpusDecoderException {
-    super(new DecoderInputBuffer[numInputBuffers], new SimpleOutputBuffer[numOutputBuffers]);
-    if (!OpusLibrary.isAvailable()) {
-      throw new OpusDecoderException("Failed to load decoder native libraries.");
-    }
-    this.exoMediaCrypto = exoMediaCrypto;
-    if (exoMediaCrypto != null && !OpusLibrary.opusIsSecureDecodeSupported()) {
-      throw new OpusDecoderException("Opus decoder does not support secure decode.");
-    }
-    byte[] headerBytes = initializationData.get(0);
-    if (headerBytes.length < 19) {
-      throw new OpusDecoderException("Header size is too small.");
-    }
-    channelCount = headerBytes[9] & 0xFF;
-    if (channelCount > 8) {
-      throw new OpusDecoderException("Invalid channel count: " + channelCount);
-    }
-    int preskip = readLittleEndian16(headerBytes, 10);
-    int gain = readLittleEndian16(headerBytes, 16);
-
-    byte[] streamMap = new byte[8];
-    int numStreams;
-    int numCoupled;
-    if (headerBytes[18] == 0) { // Channel mapping
-      // If there is no channel mapping, use the defaults.
-      if (channelCount > 2) { // Maximum channel count with default layout.
-        throw new OpusDecoderException("Invalid Header, missing stream map.");
-      }
-      numStreams = 1;
-      numCoupled = (channelCount == 2) ? 1 : 0;
-      streamMap[0] = 0;
-      streamMap[1] = 1;
-    } else {
-      if (headerBytes.length < 21 + channelCount) {
-        throw new OpusDecoderException("Header size is too small.");
-      }
-      // Read the channel mapping.
-      numStreams = headerBytes[19] & 0xFF;
-      numCoupled = headerBytes[20] & 0xFF;
-      System.arraycopy(headerBytes, 21, streamMap, 0, channelCount);
-    }
-    if (initializationData.size() == 3) {
-      if (initializationData.get(1).length != 8 || initializationData.get(2).length != 8) {
-        throw new OpusDecoderException("Invalid Codec Delay or Seek Preroll");
-      }
-      long codecDelayNs =
-          ByteBuffer.wrap(initializationData.get(1)).order(ByteOrder.nativeOrder()).getLong();
-      long seekPreRollNs =
-          ByteBuffer.wrap(initializationData.get(2)).order(ByteOrder.nativeOrder()).getLong();
-      headerSkipSamples = nsToSamples(codecDelayNs);
-      headerSeekPreRollSamples = nsToSamples(seekPreRollNs);
-    } else {
-      headerSkipSamples = preskip;
-      headerSeekPreRollSamples = DEFAULT_SEEK_PRE_ROLL_SAMPLES;
-    }
-    nativeDecoderContext = opusInit(SAMPLE_RATE, channelCount, numStreams, numCoupled, gain,
-        streamMap);
-    if (nativeDecoderContext == 0) {
-      throw new OpusDecoderException("Failed to initialize decoder");
-    }
-    setInitialInputBufferSize(initialInputBufferSize);
-  }
-
-  @Override
-  public String getName() {
-    return "libopus" + OpusLibrary.getVersion();
-  }
-
-  @Override
-  public DecoderInputBuffer createInputBuffer() {
-    return new DecoderInputBuffer(DecoderInputBuffer.BUFFER_REPLACEMENT_MODE_DIRECT);
-  }
-
-  @Override
-  public SimpleOutputBuffer createOutputBuffer() {
-    return new SimpleOutputBuffer(this);
-  }
-
-  @Override
-  public OpusDecoderException decode(DecoderInputBuffer inputBuffer,
-      SimpleOutputBuffer outputBuffer, boolean reset) {
-    if (reset) {
-      opusReset(nativeDecoderContext);
-      // When seeking to 0, skip number of samples as specified in opus header. When seeking to
-      // any other time, skip number of samples as specified by seek preroll.
-      skipSamples = (inputBuffer.timeUs == 0) ? headerSkipSamples : headerSeekPreRollSamples;
-    }
-    ByteBuffer inputData = inputBuffer.data;
-    CryptoInfo cryptoInfo = inputBuffer.cryptoInfo;
-    int result = inputBuffer.isEncrypted()
-        ? opusSecureDecode(nativeDecoderContext, inputBuffer.timeUs, inputData, inputData.limit(),
-            outputBuffer, SAMPLE_RATE, exoMediaCrypto, cryptoInfo.mode,
-            cryptoInfo.key, cryptoInfo.iv, cryptoInfo.numSubSamples,
-            cryptoInfo.numBytesOfClearData, cryptoInfo.numBytesOfEncryptedData)
-        : opusDecode(nativeDecoderContext, inputBuffer.timeUs, inputData, inputData.limit(),
-            outputBuffer);
-    if (result < 0) {
-      if (result == DRM_ERROR) {
-        String message = "Drm error: " + opusGetErrorMessage(nativeDecoderContext);
-        DecryptionException cause = new DecryptionException(
-            opusGetErrorCode(nativeDecoderContext), message);
-        return new OpusDecoderException(message, cause);
-      } else {
-        return new OpusDecoderException("Decode error: " + opusGetErrorMessage(result));
-      }
-    }
-
-    ByteBuffer outputData = outputBuffer.data;
-    outputData.position(0);
-    outputData.limit(result);
-    if (skipSamples > 0) {
-      int bytesPerSample = channelCount * 2;
-      int skipBytes = skipSamples * bytesPerSample;
-      if (result <= skipBytes) {
-        skipSamples -= result / bytesPerSample;
-        outputBuffer.addFlag(C.BUFFER_FLAG_DECODE_ONLY);
-        outputData.position(result);
-      } else {
-        skipSamples = 0;
-        outputData.position(skipBytes);
-      }
-    }
-    return null;
-  }
-
-  @Override
-  public void release() {
-    super.release();
-    opusClose(nativeDecoderContext);
-  }
-
-  /**
-   * Returns the channel count of output audio.
-   */
-  public int getChannelCount() {
-    return channelCount;
-  }
-
-  /**
-   * Returns the sample rate of output audio.
-   */
-  public int getSampleRate() {
-    return SAMPLE_RATE;
-  }
-
-  private static int nsToSamples(long ns) {
-    return (int) (ns * SAMPLE_RATE / 1000000000);
-  }
-
-  private static int readLittleEndian16(byte[] input, int offset) {
-    int value = input[offset] & 0xFF;
-    value |= (input[offset + 1] & 0xFF) << 8;
-    return value;
-  }
-
-  private native long opusInit(int sampleRate, int channelCount, int numStreams, int numCoupled,
-      int gain, byte[] streamMap);
-  private native int opusDecode(long decoder, long timeUs, ByteBuffer inputBuffer, int inputSize,
-      SimpleOutputBuffer outputBuffer);
-  private native int opusSecureDecode(long decoder, long timeUs, ByteBuffer inputBuffer,
-      int inputSize, SimpleOutputBuffer outputBuffer, int sampleRate,
-      ExoMediaCrypto mediaCrypto, int inputMode, byte[] key, byte[] iv,
-      int numSubSamples, int[] numBytesOfClearData, int[] numBytesOfEncryptedData);
-  private native void opusClose(long decoder);
-  private native void opusReset(long decoder);
-  private native int opusGetErrorCode(long decoder);
-  private native String opusGetErrorMessage(long decoder);
-
-}
diff --git a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusDecoderException.java b/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusDecoderException.java
deleted file mode 100644
index 6645086838..0000000000
--- a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusDecoderException.java
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.opus;
-
-import com.google.android.exoplayer2.audio.AudioDecoderException;
-
-/**
- * Thrown when an Opus decoder error occurs.
- */
-public final class OpusDecoderException extends AudioDecoderException {
-
-  /* package */ OpusDecoderException(String message) {
-    super(message);
-  }
-
-  /* package */ OpusDecoderException(String message, Throwable cause) {
-    super(message, cause);
-  }
-
-}
diff --git a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusLibrary.java b/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusLibrary.java
deleted file mode 100644
index 22985ea497..0000000000
--- a/extensions/opus/src/main/java/com/google/android/exoplayer2/ext/opus/OpusLibrary.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.opus;
-
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.util.LibraryLoader;
-
-/**
- * Configures and queries the underlying native library.
- */
-public final class OpusLibrary {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.opus");
-  }
-
-  private static final LibraryLoader LOADER = new LibraryLoader("opus", "opusJNI");
-
-  private OpusLibrary() {}
-
-  /**
-   * Override the names of the Opus native libraries. If an application wishes to call this method,
-   * it must do so before calling any other method defined by this class, and before instantiating a
-   * {@link LibopusAudioRenderer} instance.
-   *
-   * @param libraries The names of the Opus native libraries.
-   */
-  public static void setLibraries(String... libraries) {
-    LOADER.setLibraries(libraries);
-  }
-
-  /**
-   * Returns whether the underlying library is available, loading it if necessary.
-   */
-  public static boolean isAvailable() {
-    return LOADER.isAvailable();
-  }
-
-  /**
-   * Returns the version of the underlying library if available, or null otherwise.
-   */
-  public static String getVersion() {
-    return isAvailable() ? opusGetVersion() : null;
-  }
-
-  public static native String opusGetVersion();
-  public static native boolean opusIsSecureDecodeSupported();
-}
diff --git a/extensions/opus/src/main/jni/Android.mk b/extensions/opus/src/main/jni/Android.mk
deleted file mode 100644
index 2ceb8fc4f7..0000000000
--- a/extensions/opus/src/main/jni/Android.mk
+++ /dev/null
@@ -1,33 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-WORKING_DIR := $(call my-dir)
-include $(CLEAR_VARS)
-
-# build libopus.so
-LOCAL_PATH := $(WORKING_DIR)
-include libopus.mk
-
-# build libopusJNI.so
-include $(CLEAR_VARS)
-LOCAL_PATH := $(WORKING_DIR)
-LOCAL_MODULE := libopusJNI
-LOCAL_ARM_MODE := arm
-LOCAL_CPP_EXTENSION := .cc
-LOCAL_SRC_FILES := opus_jni.cc
-LOCAL_LDLIBS := -llog -lz -lm
-LOCAL_SHARED_LIBRARIES := libopus
-include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/opus/src/main/jni/Application.mk b/extensions/opus/src/main/jni/Application.mk
deleted file mode 100644
index 59bf5f8f87..0000000000
--- a/extensions/opus/src/main/jni/Application.mk
+++ /dev/null
@@ -1,20 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-APP_OPTIM := release
-APP_STL := gnustl_static
-APP_CPPFLAGS := -frtti
-APP_PLATFORM := android-9
diff --git a/extensions/opus/src/main/jni/convert_android_asm.sh b/extensions/opus/src/main/jni/convert_android_asm.sh
deleted file mode 100755
index e8aa255842..0000000000
--- a/extensions/opus/src/main/jni/convert_android_asm.sh
+++ /dev/null
@@ -1,47 +0,0 @@
-#!/bin/bash
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-set -e
-ASM_CONVERTER="./libopus/celt/arm/arm2gnu.pl"
-
-if [[ ! -x "${ASM_CONVERTER}" ]]; then
-  echo "Please make sure you have checked out libopus."
-  exit
-fi
-
-while read file; do
-  # This check is required because the ASM conversion script doesn't seem to be
-  # idempotent.
-  if [[ ! "${file}" =~ .*_gnu\.s$ ]]; then
-    gnu_file="${file%.s}_gnu.s"
-    ${ASM_CONVERTER} "${file}" > "${gnu_file}"
-    # The ASM conversion script replaces includes with *_gnu.S. So, replace
-    # occurences of "*-gnu.S" with "*_gnu.s".
-    perl -pi -e "s/-gnu\.S/_gnu\.s/g" "${gnu_file}"
-    rm -f "${file}"
-  fi
-done < <(find . -iname '*.s')
-
-# Generate armopts.s from armopts.s.in
-sed \
-  -e "s/@OPUS_ARM_MAY_HAVE_EDSP@/1/g" \
-  -e "s/@OPUS_ARM_MAY_HAVE_MEDIA@/1/g" \
-  -e "s/@OPUS_ARM_MAY_HAVE_NEON@/1/g" \
-  libopus/celt/arm/armopts.s.in > libopus/celt/arm/armopts.s.temp
-${ASM_CONVERTER} "libopus/celt/arm/armopts.s.temp" > "libopus/celt/arm/armopts_gnu.s"
-rm "libopus/celt/arm/armopts.s.temp"
-echo "Converted all ASM files and generated armopts.s successfully."
diff --git a/extensions/opus/src/main/jni/libopus.mk b/extensions/opus/src/main/jni/libopus.mk
deleted file mode 100644
index 0a5dd15b5a..0000000000
--- a/extensions/opus/src/main/jni/libopus.mk
+++ /dev/null
@@ -1,50 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-LOCAL_PATH := $(call my-dir)/libopus
-
-include $(CLEAR_VARS)
-
-include $(LOCAL_PATH)/celt_headers.mk
-include $(LOCAL_PATH)/celt_sources.mk
-include $(LOCAL_PATH)/opus_headers.mk
-include $(LOCAL_PATH)/opus_sources.mk
-include $(LOCAL_PATH)/silk_headers.mk
-include $(LOCAL_PATH)/silk_sources.mk
-
-LOCAL_MODULE := libopus
-LOCAL_ARM_MODE := arm
-LOCAL_CFLAGS := -DOPUS_BUILD -DFIXED_POINT -DUSE_ALLOCA -DHAVE_LRINT \
-                -DHAVE_LRINTF
-LOCAL_C_INCLUDES := $(LOCAL_PATH)/include $(LOCAL_PATH)/src \
-                    $(LOCAL_PATH)/silk $(LOCAL_PATH)/celt \
-                    $(LOCAL_PATH)/silk/fixed
-LOCAL_SRC_FILES := $(CELT_SOURCES) $(OPUS_SOURCES) $(OPUS_SOURCES_FLOAT) \
-                   $(SILK_SOURCES) $(SILK_SOURCES_FIXED)
-
-ifneq ($(findstring armeabi-v7a, $(TARGET_ARCH_ABI)),)
-LOCAL_SRC_FILES += $(CELT_SOURCES_ARM)
-LOCAL_SRC_FILES += celt/arm/armopts_gnu.s.neon
-LOCAL_SRC_FILES += $(subst .s,_gnu.s.neon,$(CELT_SOURCES_ARM_ASM))
-LOCAL_CFLAGS += -DOPUS_ARM_ASM -DOPUS_ARM_INLINE_ASM -DOPUS_ARM_INLINE_EDSP \
-                -DOPUS_ARM_INLINE_MEDIA -DOPUS_ARM_INLINE_NEON \
-                -DOPUS_ARM_MAY_HAVE_NEON -DOPUS_ARM_MAY_HAVE_MEDIA \
-                -DOPUS_ARM_MAY_HAVE_EDSP
-endif
-
-LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/include
-
-include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/opus/src/main/jni/opus_jni.cc b/extensions/opus/src/main/jni/opus_jni.cc
deleted file mode 100644
index 8d9c1a4152..0000000000
--- a/extensions/opus/src/main/jni/opus_jni.cc
+++ /dev/null
@@ -1,156 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <jni.h>
-
-#include <android/log.h>
-
-#include <cstdlib>
-
-#include "opus.h"  // NOLINT
-#include "opus_multistream.h"  // NOLINT
-
-#define LOG_TAG "opus_jni"
-#define LOGE(...) ((void)__android_log_print(ANDROID_LOG_ERROR, LOG_TAG, \
-                                             __VA_ARGS__))
-
-#define DECODER_FUNC(RETURN_TYPE, NAME, ...) \
-  extern "C" { \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_opus_OpusDecoder_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__);\
-  } \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_opus_OpusDecoder_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__)\
-
-#define LIBRARY_FUNC(RETURN_TYPE, NAME, ...) \
-  extern "C" { \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_opus_OpusLibrary_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__);\
-  } \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_opus_OpusLibrary_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__)\
-
-// JNI references for SimpleOutputBuffer class.
-static jmethodID outputBufferInit;
-
-jint JNI_OnLoad(JavaVM* vm, void* reserved) {
-  JNIEnv* env;
-  if (vm->GetEnv(reinterpret_cast<void**>(&env), JNI_VERSION_1_6) != JNI_OK) {
-    return -1;
-  }
-  return JNI_VERSION_1_6;
-}
-
-static const int kBytesPerSample = 2;  // opus fixed point uses 16 bit samples.
-static const int kMaxOpusOutputPacketSizeSamples = 960 * 6;
-static int channelCount;
-static int errorCode;
-
-DECODER_FUNC(jlong, opusInit, jint sampleRate, jint channelCount,
-     jint numStreams, jint numCoupled, jint gain, jbyteArray jStreamMap) {
-  int status = OPUS_INVALID_STATE;
-  ::channelCount = channelCount;
-  errorCode = 0;
-  jbyte* streamMapBytes = env->GetByteArrayElements(jStreamMap, 0);
-  uint8_t* streamMap = reinterpret_cast<uint8_t*>(streamMapBytes);
-  OpusMSDecoder* decoder = opus_multistream_decoder_create(
-      sampleRate, channelCount, numStreams, numCoupled, streamMap, &status);
-  env->ReleaseByteArrayElements(jStreamMap, streamMapBytes, 0);
-  if (!decoder || status != OPUS_OK) {
-    LOGE("Failed to create Opus Decoder; status=%s", opus_strerror(status));
-    return 0;
-  }
-  status = opus_multistream_decoder_ctl(decoder, OPUS_SET_GAIN(gain));
-  if (status != OPUS_OK) {
-    LOGE("Failed to set Opus header gain; status=%s", opus_strerror(status));
-    return 0;
-  }
-
-  // Populate JNI References.
-  const jclass outputBufferClass = env->FindClass(
-      "com/google/android/exoplayer2/decoder/SimpleOutputBuffer");
-  outputBufferInit = env->GetMethodID(outputBufferClass, "init",
-      "(JI)Ljava/nio/ByteBuffer;");
-
-  return reinterpret_cast<intptr_t>(decoder);
-}
-
-DECODER_FUNC(jint, opusDecode, jlong jDecoder, jlong jTimeUs,
-     jobject jInputBuffer, jint inputSize, jobject jOutputBuffer) {
-  OpusMSDecoder* decoder = reinterpret_cast<OpusMSDecoder*>(jDecoder);
-  const uint8_t* inputBuffer =
-      reinterpret_cast<const uint8_t*>(
-          env->GetDirectBufferAddress(jInputBuffer));
-
-  const jint outputSize =
-      kMaxOpusOutputPacketSizeSamples * kBytesPerSample * channelCount;
-
-  env->CallObjectMethod(jOutputBuffer, outputBufferInit, jTimeUs, outputSize);
-  const jobject jOutputBufferData = env->CallObjectMethod(jOutputBuffer,
-      outputBufferInit, jTimeUs, outputSize);
-
-  int16_t* outputBufferData = reinterpret_cast<int16_t*>(
-      env->GetDirectBufferAddress(jOutputBufferData));
-  int sampleCount = opus_multistream_decode(decoder, inputBuffer, inputSize,
-      outputBufferData, kMaxOpusOutputPacketSizeSamples, 0);
-  // record error code
-  errorCode = (sampleCount < 0) ? sampleCount : 0;
-  return (sampleCount < 0) ? sampleCount
-      : sampleCount * kBytesPerSample * channelCount;
-}
-
-DECODER_FUNC(jint, opusSecureDecode, jlong jDecoder, jlong jTimeUs,
-     jobject jInputBuffer, jint inputSize, jobject jOutputBuffer,
-     jint sampleRate, jobject mediaCrypto, jint inputMode, jbyteArray key,
-     jbyteArray javaIv, jint inputNumSubSamples, jintArray numBytesOfClearData,
-     jintArray numBytesOfEncryptedData) {
-  // Doesn't support
-  // Java client should have checked vpxSupportSecureDecode
-  // and avoid calling this
-  // return -2 (DRM Error)
-  return -2;
-}
-
-DECODER_FUNC(void, opusClose, jlong jDecoder) {
-  OpusMSDecoder* decoder = reinterpret_cast<OpusMSDecoder*>(jDecoder);
-  opus_multistream_decoder_destroy(decoder);
-}
-
-DECODER_FUNC(void, opusReset, jlong jDecoder) {
-  OpusMSDecoder* decoder = reinterpret_cast<OpusMSDecoder*>(jDecoder);
-  opus_multistream_decoder_ctl(decoder, OPUS_RESET_STATE);
-}
-
-DECODER_FUNC(jstring, opusGetErrorMessage, jlong jContext) {
-  return env->NewStringUTF(opus_strerror(errorCode));
-}
-
-DECODER_FUNC(jint, opusGetErrorCode, jlong jContext) {
-  return errorCode;
-}
-
-LIBRARY_FUNC(jstring, opusIsSecureDecodeSupported) {
-  // Doesn't support
-  return 0;
-}
-
-LIBRARY_FUNC(jstring, opusGetVersion) {
-  return env->NewStringUTF(opus_get_version_string());
-}
diff --git a/extensions/rtmp/README.md b/extensions/rtmp/README.md
deleted file mode 100644
index 7e6bc0d641..0000000000
--- a/extensions/rtmp/README.md
+++ /dev/null
@@ -1,48 +0,0 @@
-# ExoPlayer RTMP extension #
-
-The RTMP extension is a [DataSource][] implementation for playing [RTMP][]
-streams using [LibRtmp Client for Android][].
-
-[DataSource]: https://google.github.io/ExoPlayer/doc/reference/com/google/android/exoplayer2/upstream/DataSource.html
-[RTMP]: https://en.wikipedia.org/wiki/Real-Time_Messaging_Protocol
-[LibRtmp Client for Android]: https://github.com/ant-media/LibRtmp-Client-for-Android
-
-## Getting the extension ##
-
-The easiest way to use the extension is to add it as a gradle dependency:
-
-```gradle
-compile 'com.google.android.exoplayer:extension-rtmp:rX.X.X'
-```
-
-where `rX.X.X` is the version, which must match the version of the ExoPlayer
-library being used.
-
-Alternatively, you can clone the ExoPlayer repository and depend on the module
-locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-
-## Using the extension ##
-
-ExoPlayer requests data through `DataSource` instances. These instances are
-either instantiated and injected from application code, or obtained from
-instances of `DataSource.Factory` that are instantiated and injected from
-application code.
-
-`DefaultDataSource` will automatically use uses the RTMP extension whenever it's
-available. Hence if your application is using `DefaultDataSource` or
-`DefaultDataSourceFactory`, adding support for RTMP streams is as simple as
-adding a dependency to the RTMP extension as described above. No changes to your
-application code are required. Alternatively, if you know that your application
-doesn't need to handle any other protocols, you can update any `DataSource`s and
-`DataSource.Factory` instantiations in your application code to use
-`RtmpDataSource` and `RtmpDataSourceFactory` directly.
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.rtmp.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/rtmp/build.gradle b/extensions/rtmp/build.gradle
deleted file mode 100644
index a883bd89c3..0000000000
--- a/extensions/rtmp/build.gradle
+++ /dev/null
@@ -1,30 +0,0 @@
-// Copyright (C) 2016 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion 15
-        targetSdkVersion project.ext.targetSdkVersion
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-    compile 'net.butterflytv.utils:rtmp-client:3.0.0'
-}
\ No newline at end of file
diff --git a/extensions/rtmp/src/main/AndroidManifest.xml b/extensions/rtmp/src/main/AndroidManifest.xml
deleted file mode 100644
index 7c5e92c198..0000000000
--- a/extensions/rtmp/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest package="com.google.android.exoplayer2.ext.rtmp"/>
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
deleted file mode 100644
index 0601af4a2f..0000000000
--- a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.rtmp;
-
-import android.net.Uri;
-import android.support.annotation.Nullable;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.upstream.DataSource;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import com.google.android.exoplayer2.upstream.TransferListener;
-import java.io.IOException;
-import net.butterflytv.rtmp_client.RtmpClient;
-import net.butterflytv.rtmp_client.RtmpClient.RtmpIOException;
-
-/**
- * A Real-Time Messaging Protocol (RTMP) {@link DataSource}.
- */
-public final class RtmpDataSource implements DataSource {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.rtmp");
-  }
-
-  @Nullable private final TransferListener<? super RtmpDataSource> listener;
-
-  private RtmpClient rtmpClient;
-  private Uri uri;
-
-  public RtmpDataSource() {
-    this(null);
-  }
-
-  /**
-   * @param listener An optional listener.
-   */
-  public RtmpDataSource(@Nullable TransferListener<? super RtmpDataSource> listener) {
-    this.listener = listener;
-  }
-
-  @Override
-  public long open(DataSpec dataSpec) throws RtmpIOException {
-    rtmpClient = new RtmpClient();
-    rtmpClient.open(dataSpec.uri.toString(), false);
-
-    this.uri = dataSpec.uri;
-    if (listener != null) {
-      listener.onTransferStart(this, dataSpec);
-    }
-    return C.LENGTH_UNSET;
-  }
-
-  @Override
-  public int read(byte[] buffer, int offset, int readLength) throws IOException {
-    int bytesRead = rtmpClient.read(buffer, offset, readLength);
-    if (bytesRead == -1) {
-      return C.RESULT_END_OF_INPUT;
-    }
-    if (listener != null) {
-      listener.onBytesTransferred(this, bytesRead);
-    }
-    return bytesRead;
-  }
-
-  @Override
-  public void close() {
-    if (uri != null) {
-      uri = null;
-      if (listener != null) {
-        listener.onTransferEnd(this);
-      }
-    }
-    if (rtmpClient != null) {
-      rtmpClient.close();
-      rtmpClient = null;
-    }
-  }
-
-  @Override
-  public Uri getUri() {
-    return uri;
-  }
-
-}
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
deleted file mode 100644
index 0510e9c7da..0000000000
--- a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.rtmp;
-
-import android.support.annotation.Nullable;
-import com.google.android.exoplayer2.upstream.DataSource;
-import com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
-import com.google.android.exoplayer2.upstream.TransferListener;
-
-/**
- * A {@link Factory} that produces {@link RtmpDataSource}.
- */
-public final class RtmpDataSourceFactory implements DataSource.Factory {
-
-  @Nullable
-  private final TransferListener<? super RtmpDataSource> listener;
-
-  public RtmpDataSourceFactory() {
-    this(null);
-  }
-
-  /**
-   * @param listener An optional listener.
-   */
-  public RtmpDataSourceFactory(@Nullable TransferListener<? super RtmpDataSource> listener) {
-    this.listener = listener;
-  }
-
-  @Override
-  public DataSource createDataSource() {
-    return new RtmpDataSource(listener);
-  }
-
-}
diff --git a/extensions/vp9/README.md b/extensions/vp9/README.md
deleted file mode 100644
index 7bce4a2a25..0000000000
--- a/extensions/vp9/README.md
+++ /dev/null
@@ -1,117 +0,0 @@
-# ExoPlayer VP9 extension #
-
-The VP9 extension provides `LibvpxVideoRenderer`, which uses libvpx (the VPx
-decoding library) to decode VP9 video.
-
-## Build instructions ##
-
-To use this extension you need to clone the ExoPlayer repository and depend on
-its modules locally. Instructions for doing this can be found in ExoPlayer's
-[top level README][].
-
-In addition, it's necessary to build the extension's native components as
-follows:
-
-* Set the following environment variables:
-
-```
-cd "<path to exoplayer checkout>"
-EXOPLAYER_ROOT="$(pwd)"
-VP9_EXT_PATH="${EXOPLAYER_ROOT}/extensions/vp9/src/main"
-```
-
-* Download the [Android NDK][] and set its location in an environment variable:
-
-```
-NDK_PATH="<path to Android NDK>"
-```
-
-* Fetch libvpx and libyuv:
-
-```
-cd "${VP9_EXT_PATH}/jni" && \
-git clone https://chromium.googlesource.com/webm/libvpx libvpx && \
-git clone https://chromium.googlesource.com/libyuv/libyuv libyuv
-```
-
-* Checkout the appropriate branches of libvpx and libyuv (the scripts and
-  makefiles bundled in this repo are known to work only at these versions of the
-  libraries - we will update this periodically as newer versions of
-  libvpx/libyuv are released):
-
-```
-cd "${VP9_EXT_PATH}/jni/libvpx" && \
-git checkout tags/v1.6.1 -b v1.6.1 && \
-cd "${VP9_EXT_PATH}/jni/libyuv" && \
-git checkout 996a2bbd
-```
-
-* Run a script that generates necessary configuration files for libvpx:
-
-```
-cd ${VP9_EXT_PATH}/jni && \
-./generate_libvpx_android_configs.sh "${NDK_PATH}"
-```
-
-* Build the JNI native libraries from the command line:
-
-```
-cd "${VP9_EXT_PATH}"/jni && \
-${NDK_PATH}/ndk-build APP_ABI=all -j4
-```
-
-[top level README]: https://github.com/google/ExoPlayer/blob/release-v2/README.md
-[Android NDK]: https://developer.android.com/tools/sdk/ndk/index.html
-
-## Notes ##
-
-* Every time there is a change to the libvpx checkout:
-  * Android config scripts should be re-generated by running
-    `generate_libvpx_android_configs.sh`
-  * Clean and re-build the project.
-* If you want to use your own version of libvpx or libyuv, place it in
-  `${VP9_EXT_PATH}/jni/libvpx` or `${VP9_EXT_PATH}/jni/libyuv` respectively. But
-  please note that `generate_libvpx_android_configs.sh` and the makefiles need
-  to be modified to work with arbitrary versions of libvpx and libyuv.
-
-## Using the extension ##
-
-Once you've followed the instructions above to check out, build and depend on
-the extension, the next step is to tell ExoPlayer to use `LibvpxVideoRenderer`.
-How you do this depends on which player API you're using:
-
-* If you're passing a `DefaultRenderersFactory` to
-  `ExoPlayerFactory.newSimpleInstance`, you can enable using the extension by
-  setting the `extensionRendererMode` parameter of the `DefaultRenderersFactory`
-  constructor to `EXTENSION_RENDERER_MODE_ON`. This will use
-  `LibvpxVideoRenderer` for playback if `MediaCodecVideoRenderer` doesn't
-  support decoding the input VP9 stream. Pass `EXTENSION_RENDERER_MODE_PREFER`
-  to give `LibvpxVideoRenderer` priority over `MediaCodecVideoRenderer`.
-* If you've subclassed `DefaultRenderersFactory`, add a `LibvpxVideoRenderer`
-  to the output list in `buildVideoRenderers`. ExoPlayer will use the first
-  `Renderer` in the list that supports the input media format.
-* If you've implemented your own `RenderersFactory`, return a
-  `LibvpxVideoRenderer` instance from `createRenderers`. ExoPlayer will use the
-  first `Renderer` in the returned array that supports the input media format.
-* If you're using `ExoPlayerFactory.newInstance`, pass a `LibvpxVideoRenderer`
-  in the array of `Renderer`s. ExoPlayer will use the first `Renderer` in the
-  list that supports the input media format.
-
-Note: These instructions assume you're using `DefaultTrackSelector`. If you have
-a custom track selector the choice of `Renderer` is up to your implementation,
-so you need to make sure you are passing an `LibvpxVideoRenderer` to the
-player, then implement your own logic to use the renderer for a given track.
-
-`LibvpxVideoRenderer` can optionally output to a `VpxVideoSurfaceView` when not
-being used via `SimpleExoPlayer`, in which case color space conversion will be
-performed using a GL shader. To enable this mode, send the renderer a message of
-type `LibvpxVideoRenderer.MSG_SET_OUTPUT_BUFFER_RENDERER` with the
-`VpxVideoSurfaceView` as its object, instead of sending `MSG_SET_SURFACE` with a
-`Surface`.
-
-## Links ##
-
-* [Javadoc][]: Classes matching `com.google.android.exoplayer2.ext.vp9.*`
-  belong to this module.
-
-[Javadoc]: https://google.github.io/ExoPlayer/doc/reference/index.html
diff --git a/extensions/vp9/build.gradle b/extensions/vp9/build.gradle
deleted file mode 100644
index c606bb7236..0000000000
--- a/extensions/vp9/build.gradle
+++ /dev/null
@@ -1,35 +0,0 @@
-// Copyright (C) 2016 The Android Open Source Project
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//      http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-apply from: '../../constants.gradle'
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion project.ext.compileSdkVersion
-    buildToolsVersion project.ext.buildToolsVersion
-
-    defaultConfig {
-        minSdkVersion project.ext.minSdkVersion
-        targetSdkVersion project.ext.targetSdkVersion
-        consumerProguardFiles 'proguard-rules.txt'
-    }
-
-    sourceSets.main {
-        jniLibs.srcDir 'src/main/libs'
-        jni.srcDirs = [] // Disable the automatic ndk-build call by Android Studio.
-    }
-}
-
-dependencies {
-    compile project(modulePrefix + 'library-core')
-}
\ No newline at end of file
diff --git a/extensions/vp9/proguard-rules.txt b/extensions/vp9/proguard-rules.txt
deleted file mode 100644
index d64773da2f..0000000000
--- a/extensions/vp9/proguard-rules.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-# Proguard rules specific to the VP9 extension.
-
-# This prevents the names of native methods from being obfuscated.
--keepclasseswithmembernames class * {
-    native <methods>;
-}
-
-# Some members of this class are being accessed from native methods. Keep them unobfuscated.
--keep class com.google.android.exoplayer2.ext.vp9.VpxOutputBuffer {
-    *;
-}
diff --git a/extensions/vp9/src/androidTest/AndroidManifest.xml b/extensions/vp9/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index b8b28fc346..0000000000
--- a/extensions/vp9/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer2.ext.vp9.test">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner"/>
-  </application>
-
-  <instrumentation
-      android:targetPackage="com.google.android.exoplayer2.ext.vp9.test"
-      android:name="android.test.InstrumentationTestRunner"/>
-
-</manifest>
diff --git a/extensions/vp9/src/androidTest/assets/bear-vp9-odd-dimensions.webm b/extensions/vp9/src/androidTest/assets/bear-vp9-odd-dimensions.webm
deleted file mode 100644
index 4d65a906fa..0000000000
Binary files a/extensions/vp9/src/androidTest/assets/bear-vp9-odd-dimensions.webm and /dev/null differ
diff --git a/extensions/vp9/src/androidTest/assets/bear-vp9.webm b/extensions/vp9/src/androidTest/assets/bear-vp9.webm
deleted file mode 100644
index 4f497aeb34..0000000000
Binary files a/extensions/vp9/src/androidTest/assets/bear-vp9.webm and /dev/null differ
diff --git a/extensions/vp9/src/androidTest/assets/invalid-bitstream.webm b/extensions/vp9/src/androidTest/assets/invalid-bitstream.webm
deleted file mode 100644
index 7763cb452f..0000000000
Binary files a/extensions/vp9/src/androidTest/assets/invalid-bitstream.webm and /dev/null differ
diff --git a/extensions/vp9/src/androidTest/assets/roadtrip-vp92-10bit.webm b/extensions/vp9/src/androidTest/assets/roadtrip-vp92-10bit.webm
deleted file mode 100644
index b3bd1b9d74..0000000000
Binary files a/extensions/vp9/src/androidTest/assets/roadtrip-vp92-10bit.webm and /dev/null differ
diff --git a/extensions/vp9/src/androidTest/java/com/google/android/exoplayer2/ext/vp9/VpxPlaybackTest.java b/extensions/vp9/src/androidTest/java/com/google/android/exoplayer2/ext/vp9/VpxPlaybackTest.java
deleted file mode 100644
index 0bc945174e..0000000000
--- a/extensions/vp9/src/androidTest/java/com/google/android/exoplayer2/ext/vp9/VpxPlaybackTest.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import android.content.Context;
-import android.net.Uri;
-import android.os.Looper;
-import android.test.InstrumentationTestCase;
-import android.util.Log;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.ExoPlayer;
-import com.google.android.exoplayer2.ExoPlayerFactory;
-import com.google.android.exoplayer2.PlaybackParameters;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Renderer;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor;
-import com.google.android.exoplayer2.source.ExtractorMediaSource;
-import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
-import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
-import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
-
-/**
- * Playback tests using {@link LibvpxVideoRenderer}.
- */
-public class VpxPlaybackTest extends InstrumentationTestCase {
-
-  private static final String BEAR_URI = "asset:///bear-vp9.webm";
-  private static final String BEAR_ODD_DIMENSIONS_URI = "asset:///bear-vp9-odd-dimensions.webm";
-  private static final String ROADTRIP_10BIT_URI = "asset:///roadtrip-vp92-10bit.webm";
-  private static final String INVALID_BITSTREAM_URI = "asset:///invalid-bitstream.webm";
-
-  private static final String TAG = "VpxPlaybackTest";
-
-  public void testBasicPlayback() throws ExoPlaybackException {
-    playUri(BEAR_URI);
-  }
-
-  public void testOddDimensionsPlayback() throws ExoPlaybackException {
-    playUri(BEAR_ODD_DIMENSIONS_URI);
-  }
-
-  public void test10BitProfile2Playback() throws ExoPlaybackException {
-    if (VpxLibrary.isHighBitDepthSupported()) {
-      Log.d(TAG, "High Bit Depth supported.");
-      playUri(ROADTRIP_10BIT_URI);
-      return;
-    }
-    Log.d(TAG, "High Bit Depth not supported.");
-  }
-
-  public void testInvalidBitstream() {
-    try {
-      playUri(INVALID_BITSTREAM_URI);
-      fail();
-    } catch (Exception e) {
-      assertNotNull(e.getCause());
-      assertTrue(e.getCause() instanceof VpxDecoderException);
-    }
-  }
-
-  private void playUri(String uri) throws ExoPlaybackException {
-    TestPlaybackThread thread = new TestPlaybackThread(Uri.parse(uri),
-        getInstrumentation().getContext());
-    thread.start();
-    try {
-      thread.join();
-    } catch (InterruptedException e) {
-      fail(); // Should never happen.
-    }
-    if (thread.playbackException != null) {
-      throw thread.playbackException;
-    }
-  }
-
-  private static class TestPlaybackThread extends Thread implements Player.EventListener {
-
-    private final Context context;
-    private final Uri uri;
-
-    private ExoPlayer player;
-    private ExoPlaybackException playbackException;
-
-    public TestPlaybackThread(Uri uri, Context context) {
-      this.uri = uri;
-      this.context = context;
-    }
-
-    @Override
-    public void run() {
-      Looper.prepare();
-      LibvpxVideoRenderer videoRenderer = new LibvpxVideoRenderer(true, 0);
-      DefaultTrackSelector trackSelector = new DefaultTrackSelector();
-      player = ExoPlayerFactory.newInstance(new Renderer[] {videoRenderer}, trackSelector);
-      player.addListener(this);
-      ExtractorMediaSource mediaSource = new ExtractorMediaSource(
-          uri,
-          new DefaultDataSourceFactory(context, "ExoPlayerExtVp9Test"),
-          MatroskaExtractor.FACTORY,
-          null,
-          null);
-      player.sendMessages(new ExoPlayer.ExoPlayerMessage(videoRenderer,
-          LibvpxVideoRenderer.MSG_SET_OUTPUT_BUFFER_RENDERER,
-          new VpxVideoSurfaceView(context)));
-      player.prepare(mediaSource);
-      player.setPlayWhenReady(true);
-      Looper.loop();
-    }
-
-    @Override
-    public void onLoadingChanged(boolean isLoading) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPositionDiscontinuity() {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onTimelineChanged(Timeline timeline, Object manifest) {
-      // Do nothing.
-    }
-
-    @Override
-    public void onPlayerError(ExoPlaybackException error) {
-      playbackException = error;
-    }
-
-    @Override
-    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
-      if (playbackState == Player.STATE_ENDED
-          || (playbackState == Player.STATE_IDLE && playbackException != null)) {
-        releasePlayerAndQuitLooper();
-      }
-    }
-
-    @Override
-    public void onRepeatModeChanged(int repeatMode) {
-      // Do nothing.
-    }
-
-    private void releasePlayerAndQuitLooper() {
-      player.release();
-      Looper.myLooper().quit();
-    }
-
-  }
-
-}
diff --git a/extensions/vp9/src/main/AndroidManifest.xml b/extensions/vp9/src/main/AndroidManifest.xml
deleted file mode 100644
index fc49a2a8a2..0000000000
--- a/extensions/vp9/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.google.android.exoplayer2.ext.vp9">
-
-  <uses-feature android:glEsVersion="0x00020000"/>
-
-</manifest>
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
deleted file mode 100644
index a947378de5..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
+++ /dev/null
@@ -1,738 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.os.Handler;
-import android.os.Looper;
-import android.os.SystemClock;
-import android.support.annotation.IntDef;
-import android.view.Surface;
-import com.google.android.exoplayer2.BaseRenderer;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.ExoPlayer;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.FormatHolder;
-import com.google.android.exoplayer2.decoder.DecoderCounters;
-import com.google.android.exoplayer2.decoder.DecoderInputBuffer;
-import com.google.android.exoplayer2.drm.DrmSession;
-import com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
-import com.google.android.exoplayer2.drm.DrmSessionManager;
-import com.google.android.exoplayer2.drm.ExoMediaCrypto;
-import com.google.android.exoplayer2.util.Assertions;
-import com.google.android.exoplayer2.util.MimeTypes;
-import com.google.android.exoplayer2.util.TraceUtil;
-import com.google.android.exoplayer2.util.Util;
-import com.google.android.exoplayer2.video.VideoRendererEventListener;
-import com.google.android.exoplayer2.video.VideoRendererEventListener.EventDispatcher;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-
-/**
- * Decodes and renders video using the native VP9 decoder.
- */
-public final class LibvpxVideoRenderer extends BaseRenderer {
-
-  @Retention(RetentionPolicy.SOURCE)
-  @IntDef({REINITIALIZATION_STATE_NONE, REINITIALIZATION_STATE_SIGNAL_END_OF_STREAM,
-      REINITIALIZATION_STATE_WAIT_END_OF_STREAM})
-  private @interface ReinitializationState {}
-  /**
-   * The decoder does not need to be re-initialized.
-   */
-  private static final int REINITIALIZATION_STATE_NONE = 0;
-  /**
-   * The input format has changed in a way that requires the decoder to be re-initialized, but we
-   * haven't yet signaled an end of stream to the existing decoder. We need to do so in order to
-   * ensure that it outputs any remaining buffers before we release it.
-   */
-  private static final int REINITIALIZATION_STATE_SIGNAL_END_OF_STREAM = 1;
-  /**
-   * The input format has changed in a way that requires the decoder to be re-initialized, and we've
-   * signaled an end of stream to the existing decoder. We're waiting for the decoder to output an
-   * end of stream signal to indicate that it has output any remaining buffers before we release it.
-   */
-  private static final int REINITIALIZATION_STATE_WAIT_END_OF_STREAM = 2;
-
-  /**
-   * The type of a message that can be passed to an instance of this class via
-   * {@link ExoPlayer#sendMessages} or {@link ExoPlayer#blockingSendMessages}. The message object
-   * should be the target {@link VpxOutputBufferRenderer}, or null.
-   */
-  public static final int MSG_SET_OUTPUT_BUFFER_RENDERER = C.MSG_CUSTOM_BASE;
-
-  /**
-   * The number of input buffers.
-   */
-  private static final int NUM_INPUT_BUFFERS = 8;
-  /**
-   * The number of output buffers. The renderer may limit the minimum possible value due to
-   * requiring multiple output buffers to be dequeued at a time for it to make progress.
-   */
-  private static final int NUM_OUTPUT_BUFFERS = 16;
-  /**
-   * The initial input buffer size. Input buffers are reallocated dynamically if this value is
-   * insufficient.
-   */
-  private static final int INITIAL_INPUT_BUFFER_SIZE = 768 * 1024; // Value based on cs/SoftVpx.cpp.
-
-  private final boolean scaleToFit;
-  private final long allowedJoiningTimeMs;
-  private final int maxDroppedFramesToNotify;
-  private final boolean playClearSamplesWithoutKeys;
-  private final EventDispatcher eventDispatcher;
-  private final FormatHolder formatHolder;
-  private final DecoderInputBuffer flagsOnlyBuffer;
-  private final DrmSessionManager<ExoMediaCrypto> drmSessionManager;
-
-  private DecoderCounters decoderCounters;
-  private Format format;
-  private VpxDecoder decoder;
-  private VpxInputBuffer inputBuffer;
-  private VpxOutputBuffer outputBuffer;
-  private VpxOutputBuffer nextOutputBuffer;
-  private DrmSession<ExoMediaCrypto> drmSession;
-  private DrmSession<ExoMediaCrypto> pendingDrmSession;
-
-  @ReinitializationState
-  private int decoderReinitializationState;
-  private boolean decoderReceivedBuffers;
-
-  private Bitmap bitmap;
-  private boolean renderedFirstFrame;
-  private long joiningDeadlineMs;
-  private Surface surface;
-  private VpxOutputBufferRenderer outputBufferRenderer;
-  private int outputMode;
-  private boolean waitingForKeys;
-
-  private boolean inputStreamEnded;
-  private boolean outputStreamEnded;
-  private int reportedWidth;
-  private int reportedHeight;
-
-  private long droppedFrameAccumulationStartTimeMs;
-  private int droppedFrames;
-  private int consecutiveDroppedFrameCount;
-
-  /**
-   * @param scaleToFit Whether video frames should be scaled to fit when rendering.
-   * @param allowedJoiningTimeMs The maximum duration in milliseconds for which this video renderer
-   *     can attempt to seamlessly join an ongoing playback.
-   */
-  public LibvpxVideoRenderer(boolean scaleToFit, long allowedJoiningTimeMs) {
-    this(scaleToFit, allowedJoiningTimeMs, null, null, 0);
-  }
-
-  /**
-   * @param scaleToFit Whether video frames should be scaled to fit when rendering.
-   * @param allowedJoiningTimeMs The maximum duration in milliseconds for which this video renderer
-   *     can attempt to seamlessly join an ongoing playback.
-   * @param eventHandler A handler to use when delivering events to {@code eventListener}. May be
-   *     null if delivery of events is not required.
-   * @param eventListener A listener of events. May be null if delivery of events is not required.
-   * @param maxDroppedFramesToNotify The maximum number of frames that can be dropped between
-   *     invocations of {@link VideoRendererEventListener#onDroppedFrames(int, long)}.
-   */
-  public LibvpxVideoRenderer(boolean scaleToFit, long allowedJoiningTimeMs,
-      Handler eventHandler, VideoRendererEventListener eventListener,
-      int maxDroppedFramesToNotify) {
-    this(scaleToFit, allowedJoiningTimeMs, eventHandler, eventListener, maxDroppedFramesToNotify,
-        null, false);
-  }
-
-  /**
-   * @param scaleToFit Whether video frames should be scaled to fit when rendering.
-   * @param allowedJoiningTimeMs The maximum duration in milliseconds for which this video renderer
-   *     can attempt to seamlessly join an ongoing playback.
-   * @param eventHandler A handler to use when delivering events to {@code eventListener}. May be
-   *     null if delivery of events is not required.
-   * @param eventListener A listener of events. May be null if delivery of events is not required.
-   * @param maxDroppedFramesToNotify The maximum number of frames that can be dropped between
-   *     invocations of {@link VideoRendererEventListener#onDroppedFrames(int, long)}.
-   * @param drmSessionManager For use with encrypted media. May be null if support for encrypted
-   *     media is not required.
-   * @param playClearSamplesWithoutKeys Encrypted media may contain clear (un-encrypted) regions.
-   *     For example a media file may start with a short clear region so as to allow playback to
-   *     begin in parallel with key acquisition. This parameter specifies whether the renderer is
-   *     permitted to play clear regions of encrypted media files before {@code drmSessionManager}
-   *     has obtained the keys necessary to decrypt encrypted regions of the media.
-   */
-  public LibvpxVideoRenderer(boolean scaleToFit, long allowedJoiningTimeMs,
-      Handler eventHandler, VideoRendererEventListener eventListener,
-      int maxDroppedFramesToNotify, DrmSessionManager<ExoMediaCrypto> drmSessionManager,
-      boolean playClearSamplesWithoutKeys) {
-    super(C.TRACK_TYPE_VIDEO);
-    this.scaleToFit = scaleToFit;
-    this.allowedJoiningTimeMs = allowedJoiningTimeMs;
-    this.maxDroppedFramesToNotify = maxDroppedFramesToNotify;
-    this.drmSessionManager = drmSessionManager;
-    this.playClearSamplesWithoutKeys = playClearSamplesWithoutKeys;
-    joiningDeadlineMs = C.TIME_UNSET;
-    clearReportedVideoSize();
-    formatHolder = new FormatHolder();
-    flagsOnlyBuffer = DecoderInputBuffer.newFlagsOnlyInstance();
-    eventDispatcher = new EventDispatcher(eventHandler, eventListener);
-    outputMode = VpxDecoder.OUTPUT_MODE_NONE;
-    decoderReinitializationState = REINITIALIZATION_STATE_NONE;
-  }
-
-  @Override
-  public int supportsFormat(Format format) {
-    return VpxLibrary.isAvailable() && MimeTypes.VIDEO_VP9.equalsIgnoreCase(format.sampleMimeType)
-        ? (FORMAT_HANDLED | ADAPTIVE_SEAMLESS) : FORMAT_UNSUPPORTED_TYPE;
-  }
-
-  @Override
-  public void render(long positionUs, long elapsedRealtimeUs) throws ExoPlaybackException {
-    if (outputStreamEnded) {
-      return;
-    }
-
-    if (format == null) {
-      // We don't have a format yet, so try and read one.
-      flagsOnlyBuffer.clear();
-      int result = readSource(formatHolder, flagsOnlyBuffer, true);
-      if (result == C.RESULT_FORMAT_READ) {
-        onInputFormatChanged(formatHolder.format);
-      } else if (result == C.RESULT_BUFFER_READ) {
-        // End of stream read having not read a format.
-        Assertions.checkState(flagsOnlyBuffer.isEndOfStream());
-        inputStreamEnded = true;
-        outputStreamEnded = true;
-        return;
-      } else {
-        // We still don't have a format and can't make progress without one.
-        return;
-      }
-    }
-
-    // If we don't have a decoder yet, we need to instantiate one.
-    maybeInitDecoder();
-
-    if (decoder != null) {
-      try {
-        // Rendering loop.
-        TraceUtil.beginSection("drainAndFeed");
-        while (drainOutputBuffer(positionUs)) {}
-        while (feedInputBuffer()) {}
-        TraceUtil.endSection();
-      } catch (VpxDecoderException e) {
-        throw ExoPlaybackException.createForRenderer(e, getIndex());
-      }
-      decoderCounters.ensureUpdated();
-    }
-  }
-
-  private boolean drainOutputBuffer(long positionUs) throws ExoPlaybackException,
-      VpxDecoderException {
-    // Acquire outputBuffer either from nextOutputBuffer or from the decoder.
-    if (outputBuffer == null) {
-      if (nextOutputBuffer != null) {
-        outputBuffer = nextOutputBuffer;
-        nextOutputBuffer = null;
-      } else {
-        outputBuffer = decoder.dequeueOutputBuffer();
-      }
-      if (outputBuffer == null) {
-        return false;
-      }
-      decoderCounters.skippedOutputBufferCount += outputBuffer.skippedOutputBufferCount;
-    }
-
-    if (nextOutputBuffer == null) {
-      nextOutputBuffer = decoder.dequeueOutputBuffer();
-    }
-
-    if (outputBuffer.isEndOfStream()) {
-      if (decoderReinitializationState == REINITIALIZATION_STATE_WAIT_END_OF_STREAM) {
-        // We're waiting to re-initialize the decoder, and have now processed all final buffers.
-        releaseDecoder();
-        maybeInitDecoder();
-      } else {
-        outputBuffer.release();
-        outputBuffer = null;
-        outputStreamEnded = true;
-      }
-      return false;
-    }
-
-    if (outputMode == VpxDecoder.OUTPUT_MODE_NONE) {
-      // Skip frames in sync with playback, so we'll be at the right frame if the mode changes.
-      if (isBufferLate(outputBuffer.timeUs - positionUs)) {
-        skipBuffer();
-        return true;
-      }
-      return false;
-    }
-
-    final long nextOutputBufferTimeUs =
-        nextOutputBuffer != null && !nextOutputBuffer.isEndOfStream()
-            ? nextOutputBuffer.timeUs : C.TIME_UNSET;
-    if (shouldDropOutputBuffer(
-        outputBuffer.timeUs, nextOutputBufferTimeUs, positionUs, joiningDeadlineMs)) {
-      dropBuffer();
-      return true;
-    }
-
-    // If we have yet to render a frame to the current output (either initially or immediately
-    // following a seek), render one irrespective of the state or current position.
-    if (!renderedFirstFrame
-        || (getState() == STATE_STARTED && outputBuffer.timeUs <= positionUs + 30000)) {
-      renderBuffer();
-    }
-    return false;
-  }
-
-  /**
-   * Returns whether the current frame should be dropped.
-   *
-   * @param outputBufferTimeUs The timestamp of the current output buffer.
-   * @param nextOutputBufferTimeUs The timestamp of the next output buffer or
-   *     {@link C#TIME_UNSET} if the next output buffer is unavailable.
-   * @param positionUs The current playback position.
-   * @param joiningDeadlineMs The joining deadline.
-   * @return Returns whether to drop the current output buffer.
-   */
-  protected boolean shouldDropOutputBuffer(long outputBufferTimeUs, long nextOutputBufferTimeUs,
-      long positionUs, long joiningDeadlineMs) {
-    return isBufferLate(outputBufferTimeUs - positionUs)
-        && (joiningDeadlineMs != C.TIME_UNSET || nextOutputBufferTimeUs != C.TIME_UNSET);
-  }
-
-  private void renderBuffer() {
-    int bufferMode = outputBuffer.mode;
-    boolean renderRgb = bufferMode == VpxDecoder.OUTPUT_MODE_RGB && surface != null;
-    boolean renderYuv = bufferMode == VpxDecoder.OUTPUT_MODE_YUV && outputBufferRenderer != null;
-    if (!renderRgb && !renderYuv) {
-      dropBuffer();
-    } else {
-      maybeNotifyVideoSizeChanged(outputBuffer.width, outputBuffer.height);
-      if (renderRgb) {
-        renderRgbFrame(outputBuffer, scaleToFit);
-        outputBuffer.release();
-      } else /* renderYuv */ {
-        outputBufferRenderer.setOutputBuffer(outputBuffer);
-        // The renderer will release the buffer.
-      }
-      outputBuffer = null;
-      consecutiveDroppedFrameCount = 0;
-      decoderCounters.renderedOutputBufferCount++;
-      maybeNotifyRenderedFirstFrame();
-    }
-  }
-
-  private void dropBuffer() {
-    decoderCounters.droppedOutputBufferCount++;
-    droppedFrames++;
-    consecutiveDroppedFrameCount++;
-    decoderCounters.maxConsecutiveDroppedOutputBufferCount = Math.max(
-        consecutiveDroppedFrameCount, decoderCounters.maxConsecutiveDroppedOutputBufferCount);
-    if (droppedFrames == maxDroppedFramesToNotify) {
-      maybeNotifyDroppedFrames();
-    }
-    outputBuffer.release();
-    outputBuffer = null;
-  }
-
-  private void skipBuffer() {
-    decoderCounters.skippedOutputBufferCount++;
-    outputBuffer.release();
-    outputBuffer = null;
-  }
-
-  private void renderRgbFrame(VpxOutputBuffer outputBuffer, boolean scale) {
-    if (bitmap == null || bitmap.getWidth() != outputBuffer.width
-        || bitmap.getHeight() != outputBuffer.height) {
-      bitmap = Bitmap.createBitmap(outputBuffer.width, outputBuffer.height, Bitmap.Config.RGB_565);
-    }
-    bitmap.copyPixelsFromBuffer(outputBuffer.data);
-    Canvas canvas = surface.lockCanvas(null);
-    if (scale) {
-      canvas.scale(((float) canvas.getWidth()) / outputBuffer.width,
-          ((float) canvas.getHeight()) / outputBuffer.height);
-    }
-    canvas.drawBitmap(bitmap, 0, 0, null);
-    surface.unlockCanvasAndPost(canvas);
-  }
-
-  private boolean feedInputBuffer() throws VpxDecoderException, ExoPlaybackException {
-    if (decoder == null || decoderReinitializationState == REINITIALIZATION_STATE_WAIT_END_OF_STREAM
-        || inputStreamEnded) {
-      // We need to reinitialize the decoder or the input stream has ended.
-      return false;
-    }
-
-    if (inputBuffer == null) {
-      inputBuffer = decoder.dequeueInputBuffer();
-      if (inputBuffer == null) {
-        return false;
-      }
-    }
-
-    if (decoderReinitializationState == REINITIALIZATION_STATE_SIGNAL_END_OF_STREAM) {
-      inputBuffer.setFlags(C.BUFFER_FLAG_END_OF_STREAM);
-      decoder.queueInputBuffer(inputBuffer);
-      inputBuffer = null;
-      decoderReinitializationState = REINITIALIZATION_STATE_WAIT_END_OF_STREAM;
-      return false;
-    }
-
-    int result;
-    if (waitingForKeys) {
-      // We've already read an encrypted sample into buffer, and are waiting for keys.
-      result = C.RESULT_BUFFER_READ;
-    } else {
-      result = readSource(formatHolder, inputBuffer, false);
-    }
-
-    if (result == C.RESULT_NOTHING_READ) {
-      return false;
-    }
-    if (result == C.RESULT_FORMAT_READ) {
-      onInputFormatChanged(formatHolder.format);
-      return true;
-    }
-    if (inputBuffer.isEndOfStream()) {
-      inputStreamEnded = true;
-      decoder.queueInputBuffer(inputBuffer);
-      inputBuffer = null;
-      return false;
-    }
-    boolean bufferEncrypted = inputBuffer.isEncrypted();
-    waitingForKeys = shouldWaitForKeys(bufferEncrypted);
-    if (waitingForKeys) {
-      return false;
-    }
-    inputBuffer.flip();
-    inputBuffer.colorInfo = formatHolder.format.colorInfo;
-    decoder.queueInputBuffer(inputBuffer);
-    decoderReceivedBuffers = true;
-    decoderCounters.inputBufferCount++;
-    inputBuffer = null;
-    return true;
-  }
-
-  private boolean shouldWaitForKeys(boolean bufferEncrypted) throws ExoPlaybackException {
-    if (drmSession == null || (!bufferEncrypted && playClearSamplesWithoutKeys)) {
-      return false;
-    }
-    @DrmSession.State int drmSessionState = drmSession.getState();
-    if (drmSessionState == DrmSession.STATE_ERROR) {
-      throw ExoPlaybackException.createForRenderer(drmSession.getError(), getIndex());
-    }
-    return drmSessionState != DrmSession.STATE_OPENED_WITH_KEYS;
-  }
-
-  private void flushDecoder() throws ExoPlaybackException {
-    waitingForKeys = false;
-    if (decoderReinitializationState != REINITIALIZATION_STATE_NONE) {
-      releaseDecoder();
-      maybeInitDecoder();
-    } else {
-      inputBuffer = null;
-      if (outputBuffer != null) {
-        outputBuffer.release();
-        outputBuffer = null;
-      }
-      if (nextOutputBuffer != null) {
-        nextOutputBuffer.release();
-        nextOutputBuffer = null;
-      }
-      decoder.flush();
-      decoderReceivedBuffers = false;
-    }
-  }
-
-  @Override
-  public boolean isEnded() {
-    return outputStreamEnded;
-  }
-
-  @Override
-  public boolean isReady() {
-    if (waitingForKeys) {
-      return false;
-    }
-    if (format != null && (isSourceReady() || outputBuffer != null)
-        && (renderedFirstFrame || outputMode == VpxDecoder.OUTPUT_MODE_NONE)) {
-      // Ready. If we were joining then we've now joined, so clear the joining deadline.
-      joiningDeadlineMs = C.TIME_UNSET;
-      return true;
-    } else if (joiningDeadlineMs == C.TIME_UNSET) {
-      // Not joining.
-      return false;
-    } else if (SystemClock.elapsedRealtime() < joiningDeadlineMs) {
-      // Joining and still within the joining deadline.
-      return true;
-    } else {
-      // The joining deadline has been exceeded. Give up and clear the deadline.
-      joiningDeadlineMs = C.TIME_UNSET;
-      return false;
-    }
-  }
-
-  @Override
-  protected void onEnabled(boolean joining) throws ExoPlaybackException {
-    decoderCounters = new DecoderCounters();
-    eventDispatcher.enabled(decoderCounters);
-  }
-
-  @Override
-  protected void onPositionReset(long positionUs, boolean joining) throws ExoPlaybackException {
-    inputStreamEnded = false;
-    outputStreamEnded = false;
-    clearRenderedFirstFrame();
-    consecutiveDroppedFrameCount = 0;
-    if (decoder != null) {
-      flushDecoder();
-    }
-    if (joining) {
-      setJoiningDeadlineMs();
-    } else {
-      joiningDeadlineMs = C.TIME_UNSET;
-    }
-  }
-
-  @Override
-  protected void onStarted() {
-    droppedFrames = 0;
-    droppedFrameAccumulationStartTimeMs = SystemClock.elapsedRealtime();
-  }
-
-  @Override
-  protected void onStopped() {
-    joiningDeadlineMs = C.TIME_UNSET;
-    maybeNotifyDroppedFrames();
-  }
-
-  @Override
-  protected void onDisabled() {
-    format = null;
-    waitingForKeys = false;
-    clearReportedVideoSize();
-    clearRenderedFirstFrame();
-    try {
-      releaseDecoder();
-    } finally {
-      try {
-        if (drmSession != null) {
-          drmSessionManager.releaseSession(drmSession);
-        }
-      } finally {
-        try {
-          if (pendingDrmSession != null && pendingDrmSession != drmSession) {
-            drmSessionManager.releaseSession(pendingDrmSession);
-          }
-        } finally {
-          drmSession = null;
-          pendingDrmSession = null;
-          decoderCounters.ensureUpdated();
-          eventDispatcher.disabled(decoderCounters);
-        }
-      }
-    }
-  }
-
-  private void maybeInitDecoder() throws ExoPlaybackException {
-    if (decoder != null) {
-      return;
-    }
-
-    drmSession = pendingDrmSession;
-    ExoMediaCrypto mediaCrypto = null;
-    if (drmSession != null) {
-      mediaCrypto = drmSession.getMediaCrypto();
-      if (mediaCrypto == null) {
-        DrmSessionException drmError = drmSession.getError();
-        if (drmError != null) {
-          throw ExoPlaybackException.createForRenderer(drmError, getIndex());
-        }
-        // The drm session isn't open yet.
-        return;
-      }
-    }
-
-    try {
-      long codecInitializingTimestamp = SystemClock.elapsedRealtime();
-      TraceUtil.beginSection("createVpxDecoder");
-      decoder = new VpxDecoder(NUM_INPUT_BUFFERS, NUM_OUTPUT_BUFFERS, INITIAL_INPUT_BUFFER_SIZE,
-          mediaCrypto);
-      decoder.setOutputMode(outputMode);
-      TraceUtil.endSection();
-      long codecInitializedTimestamp = SystemClock.elapsedRealtime();
-      eventDispatcher.decoderInitialized(decoder.getName(), codecInitializedTimestamp,
-          codecInitializedTimestamp - codecInitializingTimestamp);
-      decoderCounters.decoderInitCount++;
-    } catch (VpxDecoderException e) {
-      throw ExoPlaybackException.createForRenderer(e, getIndex());
-    }
-  }
-
-  private void releaseDecoder() {
-    if (decoder == null) {
-      return;
-    }
-
-    inputBuffer = null;
-    outputBuffer = null;
-    nextOutputBuffer = null;
-    decoder.release();
-    decoder = null;
-    decoderCounters.decoderReleaseCount++;
-    decoderReinitializationState = REINITIALIZATION_STATE_NONE;
-    decoderReceivedBuffers = false;
-  }
-
-  private void onInputFormatChanged(Format newFormat) throws ExoPlaybackException {
-    Format oldFormat = format;
-    format = newFormat;
-
-    boolean drmInitDataChanged = !Util.areEqual(format.drmInitData, oldFormat == null ? null
-        : oldFormat.drmInitData);
-    if (drmInitDataChanged) {
-      if (format.drmInitData != null) {
-        if (drmSessionManager == null) {
-          throw ExoPlaybackException.createForRenderer(
-              new IllegalStateException("Media requires a DrmSessionManager"), getIndex());
-        }
-        pendingDrmSession = drmSessionManager.acquireSession(Looper.myLooper(), format.drmInitData);
-        if (pendingDrmSession == drmSession) {
-          drmSessionManager.releaseSession(pendingDrmSession);
-        }
-      } else {
-        pendingDrmSession = null;
-      }
-    }
-
-    if (pendingDrmSession != drmSession) {
-      if (decoderReceivedBuffers) {
-        // Signal end of stream and wait for any final output buffers before re-initialization.
-        decoderReinitializationState = REINITIALIZATION_STATE_SIGNAL_END_OF_STREAM;
-      } else {
-        // There aren't any final output buffers, so release the decoder immediately.
-        releaseDecoder();
-        maybeInitDecoder();
-      }
-    }
-
-    eventDispatcher.inputFormatChanged(format);
-  }
-
-  @Override
-  public void handleMessage(int messageType, Object message) throws ExoPlaybackException {
-    if (messageType == C.MSG_SET_SURFACE) {
-      setOutput((Surface) message, null);
-    } else if (messageType == MSG_SET_OUTPUT_BUFFER_RENDERER) {
-      setOutput(null, (VpxOutputBufferRenderer) message);
-    } else {
-      super.handleMessage(messageType, message);
-    }
-  }
-
-  private void setOutput(Surface surface, VpxOutputBufferRenderer outputBufferRenderer) {
-    // At most one output may be non-null. Both may be null if the output is being cleared.
-    Assertions.checkState(surface == null || outputBufferRenderer == null);
-    if (this.surface != surface || this.outputBufferRenderer != outputBufferRenderer) {
-      // The output has changed.
-      this.surface = surface;
-      this.outputBufferRenderer = outputBufferRenderer;
-      outputMode = outputBufferRenderer != null ? VpxDecoder.OUTPUT_MODE_YUV
-          : surface != null ? VpxDecoder.OUTPUT_MODE_RGB : VpxDecoder.OUTPUT_MODE_NONE;
-      if (outputMode != VpxDecoder.OUTPUT_MODE_NONE) {
-        if (decoder != null) {
-          decoder.setOutputMode(outputMode);
-        }
-        // If we know the video size, report it again immediately.
-        maybeRenotifyVideoSizeChanged();
-        // We haven't rendered to the new output yet.
-        clearRenderedFirstFrame();
-        if (getState() == STATE_STARTED) {
-          setJoiningDeadlineMs();
-        }
-      } else {
-        // The output has been removed. We leave the outputMode of the underlying decoder unchanged
-        // in anticipation that a subsequent output will likely be of the same type.
-        clearReportedVideoSize();
-        clearRenderedFirstFrame();
-      }
-    } else if (outputMode != VpxDecoder.OUTPUT_MODE_NONE) {
-      // The output is unchanged and non-null. If we know the video size and/or have already
-      // rendered to the output, report these again immediately.
-      maybeRenotifyVideoSizeChanged();
-      maybeRenotifyRenderedFirstFrame();
-    }
-  }
-
-  private void setJoiningDeadlineMs() {
-    joiningDeadlineMs = allowedJoiningTimeMs > 0
-        ? (SystemClock.elapsedRealtime() + allowedJoiningTimeMs) : C.TIME_UNSET;
-  }
-
-  private void clearRenderedFirstFrame() {
-    renderedFirstFrame = false;
-  }
-
-  private void maybeNotifyRenderedFirstFrame() {
-    if (!renderedFirstFrame) {
-      renderedFirstFrame = true;
-      eventDispatcher.renderedFirstFrame(surface);
-    }
-  }
-
-  private void maybeRenotifyRenderedFirstFrame() {
-    if (renderedFirstFrame) {
-      eventDispatcher.renderedFirstFrame(surface);
-    }
-  }
-
-  private void clearReportedVideoSize() {
-    reportedWidth = Format.NO_VALUE;
-    reportedHeight = Format.NO_VALUE;
-  }
-
-  private void maybeNotifyVideoSizeChanged(int width, int height) {
-    if (reportedWidth != width || reportedHeight != height) {
-      reportedWidth = width;
-      reportedHeight = height;
-      eventDispatcher.videoSizeChanged(width, height, 0, 1);
-    }
-  }
-
-  private void maybeRenotifyVideoSizeChanged() {
-    if (reportedWidth != Format.NO_VALUE || reportedHeight != Format.NO_VALUE) {
-      eventDispatcher.videoSizeChanged(reportedWidth, reportedHeight, 0, 1);
-    }
-  }
-
-  private void maybeNotifyDroppedFrames() {
-    if (droppedFrames > 0) {
-      long now = SystemClock.elapsedRealtime();
-      long elapsedMs = now - droppedFrameAccumulationStartTimeMs;
-      eventDispatcher.droppedFrames(droppedFrames, elapsedMs);
-      droppedFrames = 0;
-      droppedFrameAccumulationStartTimeMs = now;
-    }
-  }
-
-  private static boolean isBufferLate(long earlyUs) {
-    // Class a buffer as late if it should have been presented more than 30ms ago.
-    return earlyUs < -30000;
-  }
-
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxDecoder.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxDecoder.java
deleted file mode 100644
index 4bec5bdf4c..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxDecoder.java
+++ /dev/null
@@ -1,150 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.decoder.CryptoInfo;
-import com.google.android.exoplayer2.decoder.SimpleDecoder;
-import com.google.android.exoplayer2.drm.DecryptionException;
-import com.google.android.exoplayer2.drm.ExoMediaCrypto;
-import java.nio.ByteBuffer;
-
-/**
- * Vpx decoder.
- */
-/* package */ final class VpxDecoder extends
-    SimpleDecoder<VpxInputBuffer, VpxOutputBuffer, VpxDecoderException> {
-
-  public static final int OUTPUT_MODE_NONE = -1;
-  public static final int OUTPUT_MODE_YUV = 0;
-  public static final int OUTPUT_MODE_RGB = 1;
-
-  private static final int NO_ERROR = 0;
-  private static final int DECODE_ERROR = 1;
-  private static final int DRM_ERROR = 2;
-
-  private final ExoMediaCrypto exoMediaCrypto;
-  private final long vpxDecContext;
-
-  private volatile int outputMode;
-
-  /**
-   * Creates a VP9 decoder.
-   *
-   * @param numInputBuffers The number of input buffers.
-   * @param numOutputBuffers The number of output buffers.
-   * @param initialInputBufferSize The initial size of each input buffer.
-   * @param exoMediaCrypto The {@link ExoMediaCrypto} object required for decoding encrypted
-   *     content. Maybe null and can be ignored if decoder does not handle encrypted content.
-   * @throws VpxDecoderException Thrown if an exception occurs when initializing the decoder.
-   */
-  public VpxDecoder(int numInputBuffers, int numOutputBuffers, int initialInputBufferSize,
-      ExoMediaCrypto exoMediaCrypto) throws VpxDecoderException {
-    super(new VpxInputBuffer[numInputBuffers], new VpxOutputBuffer[numOutputBuffers]);
-    if (!VpxLibrary.isAvailable()) {
-      throw new VpxDecoderException("Failed to load decoder native libraries.");
-    }
-    this.exoMediaCrypto = exoMediaCrypto;
-    if (exoMediaCrypto != null && !VpxLibrary.vpxIsSecureDecodeSupported()) {
-      throw new VpxDecoderException("Vpx decoder does not support secure decode.");
-    }
-    vpxDecContext = vpxInit();
-    if (vpxDecContext == 0) {
-      throw new VpxDecoderException("Failed to initialize decoder");
-    }
-    setInitialInputBufferSize(initialInputBufferSize);
-  }
-
-  @Override
-  public String getName() {
-    return "libvpx" + VpxLibrary.getVersion();
-  }
-
-  /**
-   * Sets the output mode for frames rendered by the decoder.
-   *
-   * @param outputMode The output mode. One of {@link #OUTPUT_MODE_NONE}, {@link #OUTPUT_MODE_RGB}
-   *     and {@link #OUTPUT_MODE_YUV}.
-   */
-  public void setOutputMode(int outputMode) {
-    this.outputMode = outputMode;
-  }
-
-  @Override
-  protected VpxInputBuffer createInputBuffer() {
-    return new VpxInputBuffer();
-  }
-
-  @Override
-  protected VpxOutputBuffer createOutputBuffer() {
-    return new VpxOutputBuffer(this);
-  }
-
-  @Override
-  protected void releaseOutputBuffer(VpxOutputBuffer buffer) {
-    super.releaseOutputBuffer(buffer);
-  }
-
-  @Override
-  protected VpxDecoderException decode(VpxInputBuffer inputBuffer, VpxOutputBuffer outputBuffer,
-      boolean reset) {
-    ByteBuffer inputData = inputBuffer.data;
-    int inputSize = inputData.limit();
-    CryptoInfo cryptoInfo = inputBuffer.cryptoInfo;
-    final long result = inputBuffer.isEncrypted()
-        ? vpxSecureDecode(vpxDecContext, inputData, inputSize, exoMediaCrypto,
-        cryptoInfo.mode, cryptoInfo.key, cryptoInfo.iv, cryptoInfo.numSubSamples,
-        cryptoInfo.numBytesOfClearData, cryptoInfo.numBytesOfEncryptedData)
-        : vpxDecode(vpxDecContext, inputData, inputSize);
-    if (result != NO_ERROR) {
-      if (result == DRM_ERROR) {
-        String message = "Drm error: " + vpxGetErrorMessage(vpxDecContext);
-        DecryptionException cause = new DecryptionException(
-            vpxGetErrorCode(vpxDecContext), message);
-        return new VpxDecoderException(message, cause);
-      } else {
-        return new VpxDecoderException("Decode error: " + vpxGetErrorMessage(vpxDecContext));
-      }
-    }
-
-    outputBuffer.init(inputBuffer.timeUs, outputMode);
-    int getFrameResult = vpxGetFrame(vpxDecContext, outputBuffer);
-    if (getFrameResult == 1) {
-      outputBuffer.addFlag(C.BUFFER_FLAG_DECODE_ONLY);
-    } else if (getFrameResult == -1) {
-      return new VpxDecoderException("Buffer initialization failed.");
-    }
-    outputBuffer.colorInfo = inputBuffer.colorInfo;
-    return null;
-  }
-
-  @Override
-  public void release() {
-    super.release();
-    vpxClose(vpxDecContext);
-  }
-
-  private native long vpxInit();
-  private native long vpxClose(long context);
-  private native long vpxDecode(long context, ByteBuffer encoded, int length);
-  private native long vpxSecureDecode(long context, ByteBuffer encoded, int length,
-      ExoMediaCrypto mediaCrypto, int inputMode, byte[] key, byte[] iv,
-      int numSubSamples, int[] numBytesOfClearData, int[] numBytesOfEncryptedData);
-  private native int vpxGetFrame(long context, VpxOutputBuffer outputBuffer);
-  private native int vpxGetErrorCode(long context);
-  private native String vpxGetErrorMessage(long context);
-
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxDecoderException.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxDecoderException.java
deleted file mode 100644
index 5f43b503ac..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxDecoderException.java
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-/**
- * Thrown when a libvpx decoder error occurs.
- */
-public class VpxDecoderException extends Exception {
-
-  /* package */ VpxDecoderException(String message) {
-    super(message);
-  }
-
-  /* package */ VpxDecoderException(String message, Throwable cause) {
-    super(message, cause);
-  }
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxInputBuffer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxInputBuffer.java
deleted file mode 100644
index fcae9dc6bc..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxInputBuffer.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import com.google.android.exoplayer2.decoder.DecoderInputBuffer;
-import com.google.android.exoplayer2.video.ColorInfo;
-
-/**
- * Input buffer to a {@link VpxDecoder}.
- */
-/* package */ final class VpxInputBuffer extends DecoderInputBuffer {
-
-  public ColorInfo colorInfo;
-
-  public VpxInputBuffer() {
-    super(DecoderInputBuffer.BUFFER_REPLACEMENT_MODE_DIRECT);
-  }
-
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxLibrary.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxLibrary.java
deleted file mode 100644
index 854576b4b2..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxLibrary.java
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
-import com.google.android.exoplayer2.util.LibraryLoader;
-
-/**
- * Configures and queries the underlying native library.
- */
-public final class VpxLibrary {
-
-  static {
-    ExoPlayerLibraryInfo.registerModule("goog.exo.vpx");
-  }
-
-  private static final LibraryLoader LOADER = new LibraryLoader("vpx", "vpxJNI");
-
-  private VpxLibrary() {}
-
-  /**
-   * Override the names of the Vpx native libraries. If an application wishes to call this method,
-   * it must do so before calling any other method defined by this class, and before instantiating a
-   * {@link LibvpxVideoRenderer} instance.
-   *
-   * @param libraries The names of the Vpx native libraries.
-   */
-  public static void setLibraries(String... libraries) {
-    LOADER.setLibraries(libraries);
-  }
-
-  /**
-   * Returns whether the underlying library is available, loading it if necessary.
-   */
-  public static boolean isAvailable() {
-    return LOADER.isAvailable();
-  }
-
-  /**
-   * Returns the version of the underlying library if available, or null otherwise.
-   */
-  public static String getVersion() {
-    return isAvailable() ? vpxGetVersion() : null;
-  }
-
-  /**
-   * Returns the configuration string with which the underlying library was built if available, or
-   * null otherwise.
-   */
-  public static String getBuildConfig() {
-    return isAvailable() ? vpxGetBuildConfig() : null;
-  }
-
-  /**
-   * Returns true if the underlying libvpx library supports high bit depth.
-   */
-  public static boolean isHighBitDepthSupported() {
-    String config = getBuildConfig();
-    int indexHbd = config != null
-        ? config.indexOf("--enable-vp9-highbitdepth") : -1;
-    return indexHbd >= 0;
-  }
-
-  private static native String vpxGetVersion();
-  private static native String vpxGetBuildConfig();
-  public static native boolean vpxIsSecureDecodeSupported();
-
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxOutputBuffer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxOutputBuffer.java
deleted file mode 100644
index 2618bf7c62..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxOutputBuffer.java
+++ /dev/null
@@ -1,146 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import com.google.android.exoplayer2.decoder.OutputBuffer;
-import com.google.android.exoplayer2.video.ColorInfo;
-import java.nio.ByteBuffer;
-
-/**
- * Output buffer containing video frame data, populated by {@link VpxDecoder}.
- */
-/* package */ final class VpxOutputBuffer extends OutputBuffer {
-
-  public static final int COLORSPACE_UNKNOWN = 0;
-  public static final int COLORSPACE_BT601 = 1;
-  public static final int COLORSPACE_BT709 = 2;
-  public static final int COLORSPACE_BT2020 = 3;
-
-  private final VpxDecoder owner;
-
-  public int mode;
-  /**
-   * RGB buffer for RGB mode.
-   */
-  public ByteBuffer data;
-  public int width;
-  public int height;
-  public ColorInfo colorInfo;
-
-  /**
-   * YUV planes for YUV mode.
-   */
-  public ByteBuffer[] yuvPlanes;
-  public int[] yuvStrides;
-  public int colorspace;
-
-  public VpxOutputBuffer(VpxDecoder owner) {
-    this.owner = owner;
-  }
-
-  @Override
-  public void release() {
-    owner.releaseOutputBuffer(this);
-  }
-
-  /**
-   * Initializes the buffer.
-   *
-   * @param timeUs The presentation timestamp for the buffer, in microseconds.
-   * @param mode The output mode. One of {@link VpxDecoder#OUTPUT_MODE_NONE},
-   *     {@link VpxDecoder#OUTPUT_MODE_RGB} and {@link VpxDecoder#OUTPUT_MODE_YUV}.
-   */
-  public void init(long timeUs, int mode) {
-    this.timeUs = timeUs;
-    this.mode = mode;
-  }
-
-  /**
-   * Resizes the buffer based on the given dimensions. Called via JNI after decoding completes.
-   * @return Whether the buffer was resized successfully.
-   */
-  public boolean initForRgbFrame(int width, int height) {
-    this.width = width;
-    this.height = height;
-    this.yuvPlanes = null;
-    if (!isSafeToMultiply(width, height) || !isSafeToMultiply(width * height, 2)) {
-      return false;
-    }
-    int minimumRgbSize = width * height * 2;
-    initData(minimumRgbSize);
-    return true;
-  }
-
-  /**
-   * Resizes the buffer based on the given stride. Called via JNI after decoding completes.
-   * @return Whether the buffer was resized successfully.
-   */
-  public boolean initForYuvFrame(int width, int height, int yStride, int uvStride,
-      int colorspace) {
-    this.width = width;
-    this.height = height;
-    this.colorspace = colorspace;
-    int uvHeight = (int) (((long) height + 1) / 2);
-    if (!isSafeToMultiply(yStride, height) || !isSafeToMultiply(uvStride, uvHeight)) {
-      return false;
-    }
-    int yLength = yStride * height;
-    int uvLength = uvStride * uvHeight;
-    int minimumYuvSize = yLength + (uvLength * 2);
-    if (!isSafeToMultiply(uvLength, 2) || minimumYuvSize < yLength) {
-      return false;
-    }
-    initData(minimumYuvSize);
-
-    if (yuvPlanes == null) {
-      yuvPlanes = new ByteBuffer[3];
-    }
-    // Rewrapping has to be done on every frame since the stride might have changed.
-    yuvPlanes[0] = data.slice();
-    yuvPlanes[0].limit(yLength);
-    data.position(yLength);
-    yuvPlanes[1] = data.slice();
-    yuvPlanes[1].limit(uvLength);
-    data.position(yLength + uvLength);
-    yuvPlanes[2] = data.slice();
-    yuvPlanes[2].limit(uvLength);
-    if (yuvStrides == null) {
-      yuvStrides = new int[3];
-    }
-    yuvStrides[0] = yStride;
-    yuvStrides[1] = uvStride;
-    yuvStrides[2] = uvStride;
-    return true;
-  }
-
-  private void initData(int size) {
-    if (data == null || data.capacity() < size) {
-      data = ByteBuffer.allocateDirect(size);
-    } else {
-      data.position(0);
-      data.limit(size);
-    }
-  }
-
-  /**
-   * Ensures that the result of multiplying individual numbers can fit into the size limit of an
-   * integer.
-   */
-  private boolean isSafeToMultiply(int a, int b) {
-    return a >= 0 && b >= 0 && !(b > 0 && a >= Integer.MAX_VALUE / b);
-  }
-
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxOutputBufferRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxOutputBufferRenderer.java
deleted file mode 100644
index d07e24d920..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxOutputBufferRenderer.java
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-/**
- * Renders the {@link VpxOutputBuffer}.
- */
-public interface VpxOutputBufferRenderer {
-
-  /**
-   * Sets the output buffer to be rendered. The renderer is responsible for releasing the buffer.
-   *
-   * @param outputBuffer The output buffer to be rendered.
-   */
-  void setOutputBuffer(VpxOutputBuffer outputBuffer);
-
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxRenderer.java
deleted file mode 100644
index 837539593e..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxRenderer.java
+++ /dev/null
@@ -1,264 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import android.opengl.GLES20;
-import android.opengl.GLSurfaceView;
-import java.nio.ByteBuffer;
-import java.nio.ByteOrder;
-import java.nio.FloatBuffer;
-import java.util.concurrent.atomic.AtomicReference;
-import javax.microedition.khronos.egl.EGLConfig;
-import javax.microedition.khronos.opengles.GL10;
-
-/**
- * GLSurfaceView.Renderer implementation that can render YUV Frames returned by libvpx after
- * decoding. It does the YUV to RGB color conversion in the Fragment Shader.
- */
-/* package */ class VpxRenderer implements GLSurfaceView.Renderer {
-
-  private static final float[] kColorConversion601 = {
-    1.164f, 1.164f, 1.164f,
-    0.0f, -0.392f, 2.017f,
-    1.596f, -0.813f, 0.0f,
-  };
-
-  private static final float[] kColorConversion709 = {
-    1.164f, 1.164f, 1.164f,
-    0.0f, -0.213f, 2.112f,
-    1.793f, -0.533f, 0.0f,
-  };
-
-  private static final float[] kColorConversion2020 = {
-    1.168f, 1.168f, 1.168f,
-    0.0f, -0.188f, 2.148f,
-    1.683f, -0.652f, 0.0f,
-  };
-
-  private static final String VERTEX_SHADER =
-      "varying vec2 interp_tc;\n"
-      + "attribute vec4 in_pos;\n"
-      + "attribute vec2 in_tc;\n"
-      + "void main() {\n"
-      + "  gl_Position = in_pos;\n"
-      + "  interp_tc = in_tc;\n"
-      + "}\n";
-  private static final String[] TEXTURE_UNIFORMS = {"y_tex", "u_tex", "v_tex"};
-  private static final String FRAGMENT_SHADER =
-      "precision mediump float;\n"
-      + "varying vec2 interp_tc;\n"
-      + "uniform sampler2D y_tex;\n"
-      + "uniform sampler2D u_tex;\n"
-      + "uniform sampler2D v_tex;\n"
-      + "uniform mat3 mColorConversion;\n"
-      + "void main() {\n"
-      + "  vec3 yuv;\n"
-      + "  yuv.x = texture2D(y_tex, interp_tc).r - 0.0625;\n"
-      + "  yuv.y = texture2D(u_tex, interp_tc).r - 0.5;\n"
-      + "  yuv.z = texture2D(v_tex, interp_tc).r - 0.5;\n"
-      + "  gl_FragColor = vec4(mColorConversion * yuv, 1.0);\n"
-      + "}\n";
-
-  private static final FloatBuffer TEXTURE_VERTICES = nativeFloatBuffer(
-      -1.0f, 1.0f,
-      -1.0f, -1.0f,
-      1.0f, 1.0f,
-      1.0f, -1.0f);
-  private final int[] yuvTextures = new int[3];
-  private final AtomicReference<VpxOutputBuffer> pendingOutputBufferReference;
-
-  // Kept in a field rather than a local variable so that it doesn't get garbage collected before
-  // glDrawArrays uses it.
-  @SuppressWarnings("FieldCanBeLocal")
-  private FloatBuffer textureCoords;
-  private int program;
-  private int texLocation;
-  private int colorMatrixLocation;
-  private int previousWidth;
-  private int previousStride;
-
-  private VpxOutputBuffer renderedOutputBuffer; // Accessed only from the GL thread.
-
-  public VpxRenderer() {
-    previousWidth = -1;
-    previousStride = -1;
-    pendingOutputBufferReference = new AtomicReference<>();
-  }
-
-  /**
-   * Set a frame to be rendered. This should be followed by a call to
-   * VpxVideoSurfaceView.requestRender() to actually render the frame.
-   *
-   * @param outputBuffer OutputBuffer containing the YUV Frame to be rendered
-   */
-  public void setFrame(VpxOutputBuffer outputBuffer) {
-    VpxOutputBuffer oldPendingOutputBuffer = pendingOutputBufferReference.getAndSet(outputBuffer);
-    if (oldPendingOutputBuffer != null) {
-      // The old pending output buffer will never be used for rendering, so release it now.
-      oldPendingOutputBuffer.release();
-    }
-  }
-
-  @Override
-  public void onSurfaceCreated(GL10 unused, EGLConfig config) {
-    // Create the GL program.
-    program = GLES20.glCreateProgram();
-
-    // Add the vertex and fragment shaders.
-    addShader(GLES20.GL_VERTEX_SHADER, VERTEX_SHADER, program);
-    addShader(GLES20.GL_FRAGMENT_SHADER, FRAGMENT_SHADER, program);
-
-    // Link the GL program.
-    GLES20.glLinkProgram(program);
-    int[] result = new int[] {
-        GLES20.GL_FALSE
-    };
-    result[0] = GLES20.GL_FALSE;
-    GLES20.glGetProgramiv(program, GLES20.GL_LINK_STATUS, result, 0);
-    abortUnless(result[0] == GLES20.GL_TRUE, GLES20.glGetProgramInfoLog(program));
-    GLES20.glUseProgram(program);
-    int posLocation = GLES20.glGetAttribLocation(program, "in_pos");
-    GLES20.glEnableVertexAttribArray(posLocation);
-    GLES20.glVertexAttribPointer(
-        posLocation, 2, GLES20.GL_FLOAT, false, 0, TEXTURE_VERTICES);
-    texLocation = GLES20.glGetAttribLocation(program, "in_tc");
-    GLES20.glEnableVertexAttribArray(texLocation);
-    checkNoGLES2Error();
-    colorMatrixLocation = GLES20.glGetUniformLocation(program, "mColorConversion");
-    checkNoGLES2Error();
-    setupTextures();
-    checkNoGLES2Error();
-  }
-
-  @Override
-  public void onSurfaceChanged(GL10 unused, int width, int height) {
-    GLES20.glViewport(0, 0, width, height);
-  }
-
-  @Override
-  public void onDrawFrame(GL10 unused) {
-    VpxOutputBuffer pendingOutputBuffer = pendingOutputBufferReference.getAndSet(null);
-    if (pendingOutputBuffer == null && renderedOutputBuffer == null) {
-      // There is no output buffer to render at the moment.
-      return;
-    }
-    if (pendingOutputBuffer != null) {
-      if (renderedOutputBuffer != null) {
-        renderedOutputBuffer.release();
-      }
-      renderedOutputBuffer = pendingOutputBuffer;
-    }
-    VpxOutputBuffer outputBuffer = renderedOutputBuffer;
-    // Set color matrix. Assume BT709 if the color space is unknown.
-    float[] colorConversion = kColorConversion709;
-    switch (outputBuffer.colorspace) {
-      case VpxOutputBuffer.COLORSPACE_BT601:
-        colorConversion = kColorConversion601;
-        break;
-      case VpxOutputBuffer.COLORSPACE_BT2020:
-        colorConversion = kColorConversion2020;
-        break;
-      case VpxOutputBuffer.COLORSPACE_BT709:
-      default:
-        break; // Do nothing
-    }
-    GLES20.glUniformMatrix3fv(colorMatrixLocation, 1, false, colorConversion, 0);
-
-    for (int i = 0; i < 3; i++) {
-      int h = (i == 0) ? outputBuffer.height : (outputBuffer.height + 1) / 2;
-      GLES20.glActiveTexture(GLES20.GL_TEXTURE0 + i);
-      GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, yuvTextures[i]);
-      GLES20.glPixelStorei(GLES20.GL_UNPACK_ALIGNMENT, 1);
-      GLES20.glTexImage2D(GLES20.GL_TEXTURE_2D, 0, GLES20.GL_LUMINANCE,
-          outputBuffer.yuvStrides[i], h, 0, GLES20.GL_LUMINANCE, GLES20.GL_UNSIGNED_BYTE,
-          outputBuffer.yuvPlanes[i]);
-    }
-    // Set cropping of stride if either width or stride has changed.
-    if (previousWidth != outputBuffer.width || previousStride != outputBuffer.yuvStrides[0]) {
-      float crop = (float) outputBuffer.width / outputBuffer.yuvStrides[0];
-      // This buffer is consumed during each call to glDrawArrays. It needs to be a member variable
-      // rather than a local variable to ensure that it doesn't get garbage collected.
-      textureCoords = nativeFloatBuffer(
-          0.0f, 0.0f,
-          0.0f, 1.0f,
-          crop, 0.0f,
-          crop, 1.0f);
-      GLES20.glVertexAttribPointer(
-          texLocation, 2, GLES20.GL_FLOAT, false, 0, textureCoords);
-      previousWidth = outputBuffer.width;
-      previousStride = outputBuffer.yuvStrides[0];
-    }
-    GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);
-    GLES20.glDrawArrays(GLES20.GL_TRIANGLE_STRIP, 0, 4);
-    checkNoGLES2Error();
-  }
-
-  private void addShader(int type, String source, int program) {
-    int[] result = new int[] {
-        GLES20.GL_FALSE
-    };
-    int shader = GLES20.glCreateShader(type);
-    GLES20.glShaderSource(shader, source);
-    GLES20.glCompileShader(shader);
-    GLES20.glGetShaderiv(shader, GLES20.GL_COMPILE_STATUS, result, 0);
-    abortUnless(result[0] == GLES20.GL_TRUE,
-        GLES20.glGetShaderInfoLog(shader) + ", source: " + source);
-    GLES20.glAttachShader(program, shader);
-    GLES20.glDeleteShader(shader);
-
-    checkNoGLES2Error();
-  }
-
-  private void setupTextures() {
-    GLES20.glGenTextures(3, yuvTextures, 0);
-    for (int i = 0; i < 3; i++)  {
-      GLES20.glUniform1i(GLES20.glGetUniformLocation(program, TEXTURE_UNIFORMS[i]), i);
-      GLES20.glActiveTexture(GLES20.GL_TEXTURE0 + i);
-      GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, yuvTextures[i]);
-      GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,
-          GLES20.GL_TEXTURE_MIN_FILTER, GLES20.GL_LINEAR);
-      GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,
-          GLES20.GL_TEXTURE_MAG_FILTER, GLES20.GL_LINEAR);
-      GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,
-          GLES20.GL_TEXTURE_WRAP_S, GLES20.GL_CLAMP_TO_EDGE);
-      GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,
-          GLES20.GL_TEXTURE_WRAP_T, GLES20.GL_CLAMP_TO_EDGE);
-    }
-    checkNoGLES2Error();
-  }
-
-  private void abortUnless(boolean condition, String msg) {
-    if (!condition) {
-      throw new RuntimeException(msg);
-    }
-  }
-
-  private void checkNoGLES2Error() {
-    int error = GLES20.glGetError();
-    if (error != GLES20.GL_NO_ERROR) {
-      throw new RuntimeException("GLES20 error: " + error);
-    }
-  }
-
-  private static FloatBuffer nativeFloatBuffer(float... array) {
-    FloatBuffer buffer = ByteBuffer.allocateDirect(array.length * 4).order(
-        ByteOrder.nativeOrder()).asFloatBuffer();
-    buffer.put(array);
-    buffer.flip();
-    return buffer;
-  }
-
-}
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxVideoSurfaceView.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxVideoSurfaceView.java
deleted file mode 100644
index e7468d8593..0000000000
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/VpxVideoSurfaceView.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.ext.vp9;
-
-import android.annotation.TargetApi;
-import android.content.Context;
-import android.opengl.GLSurfaceView;
-import android.util.AttributeSet;
-
-/**
- * A GLSurfaceView extension that scales itself to the given aspect ratio.
- */
-@TargetApi(11)
-public class VpxVideoSurfaceView extends GLSurfaceView implements VpxOutputBufferRenderer {
-
-  private final VpxRenderer renderer;
-
-  public VpxVideoSurfaceView(Context context) {
-    this(context, null);
-  }
-
-  public VpxVideoSurfaceView(Context context, AttributeSet attrs) {
-    super(context, attrs);
-    renderer = new VpxRenderer();
-    setPreserveEGLContextOnPause(true);
-    setEGLContextClientVersion(2);
-    setRenderer(renderer);
-    setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);
-  }
-
-  @Override
-  public void setOutputBuffer(VpxOutputBuffer outputBuffer) {
-    renderer.setFrame(outputBuffer);
-    requestRender();
-  }
-
-}
diff --git a/extensions/vp9/src/main/jni/Android.mk b/extensions/vp9/src/main/jni/Android.mk
deleted file mode 100644
index 92fed0a064..0000000000
--- a/extensions/vp9/src/main/jni/Android.mk
+++ /dev/null
@@ -1,43 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-WORKING_DIR := $(call my-dir)
-include $(CLEAR_VARS)
-LIBVPX_ROOT := $(WORKING_DIR)/libvpx
-LIBYUV_ROOT := $(WORKING_DIR)/libyuv
-
-# build libyuv_static.a
-LOCAL_PATH := $(WORKING_DIR)
-LIBYUV_DISABLE_JPEG := "yes"
-include $(LIBYUV_ROOT)/Android.mk
-
-# build libvpx.so
-LOCAL_PATH := $(WORKING_DIR)
-include libvpx.mk
-
-# build libvpxJNI.so
-include $(CLEAR_VARS)
-LOCAL_PATH := $(WORKING_DIR)
-LOCAL_MODULE := libvpxJNI
-LOCAL_ARM_MODE := arm
-LOCAL_CPP_EXTENSION := .cc
-LOCAL_SRC_FILES := vpx_jni.cc
-LOCAL_LDLIBS := -llog -lz -lm
-LOCAL_SHARED_LIBRARIES := libvpx
-LOCAL_STATIC_LIBRARIES := libyuv_static cpufeatures
-include $(BUILD_SHARED_LIBRARY)
-
-$(call import-module,android/cpufeatures)
diff --git a/extensions/vp9/src/main/jni/Application.mk b/extensions/vp9/src/main/jni/Application.mk
deleted file mode 100644
index 59bf5f8f87..0000000000
--- a/extensions/vp9/src/main/jni/Application.mk
+++ /dev/null
@@ -1,20 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-APP_OPTIM := release
-APP_STL := gnustl_static
-APP_CPPFLAGS := -frtti
-APP_PLATFORM := android-9
diff --git a/extensions/vp9/src/main/jni/generate_libvpx_android_configs.sh b/extensions/vp9/src/main/jni/generate_libvpx_android_configs.sh
deleted file mode 100755
index 5f058d0551..0000000000
--- a/extensions/vp9/src/main/jni/generate_libvpx_android_configs.sh
+++ /dev/null
@@ -1,127 +0,0 @@
-#!/bin/bash
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-# a bash script that generates the necessary config files for libvpx android ndk
-# builds.
-
-set -e
-
-if [ $# -ne 1 ]; then
-  echo "Usage: ${0} <path_to_android_ndk>"
-  exit
-fi
-
-ndk="${1}"
-shift 1
-
-# configuration parameters common to all architectures
-common_params="--disable-examples --disable-docs --enable-realtime-only"
-common_params+=" --disable-vp8 --disable-vp9-encoder --disable-webm-io"
-common_params+=" --disable-libyuv --disable-runtime-cpu-detect"
-
-# configuration parameters for various architectures
-arch[0]="armeabi-v7a"
-config[0]="--target=armv7-android-gcc --sdk-path=$ndk --enable-neon"
-config[0]+=" --enable-neon-asm"
-
-arch[1]="armeabi"
-config[1]="--target=armv7-android-gcc --sdk-path=$ndk --disable-neon"
-config[1]+=" --disable-neon-asm"
-
-arch[2]="mips"
-config[2]="--force-target=mips32-android-gcc --sdk-path=$ndk"
-
-arch[3]="x86"
-config[3]="--force-target=x86-android-gcc --sdk-path=$ndk --disable-sse2"
-config[3]+=" --disable-sse3 --disable-ssse3 --disable-sse4_1 --disable-avx"
-config[3]+=" --disable-avx2 --enable-pic"
-
-arch[4]="arm64-v8a"
-config[4]="--force-target=armv8-android-gcc --sdk-path=$ndk --enable-neon"
-
-arch[5]="x86_64"
-config[5]="--force-target=x86_64-android-gcc --sdk-path=$ndk --disable-sse2"
-config[5]+=" --disable-sse3 --disable-ssse3 --disable-sse4_1 --disable-avx"
-config[5]+=" --disable-avx2 --enable-pic --disable-neon --disable-neon-asm"
-
-arch[6]="mips64"
-config[6]="--force-target=mips64-android-gcc --sdk-path=$ndk"
-
-limit=$((${#arch[@]} - 1))
-
-# list of files allowed after running configure in each arch directory.
-# everything else will be removed.
-allowed_files="libvpx_srcs.txt vpx_config.c vpx_config.h vpx_scale_rtcd.h"
-allowed_files+=" vp8_rtcd.h vp9_rtcd.h vpx_version.h vpx_config.asm"
-allowed_files+=" vpx_dsp_rtcd.h libvpx.ver"
-
-remove_trailing_whitespace() {
-  perl -pi -e 's/\s\+$//' "$@"
-}
-
-convert_asm() {
-  for i in $(seq 0 ${limit}); do
-    while read file; do
-      case "${file}" in
-        *.asm.[sS])
-          # Some files may already have been processed (there are duplicated
-          # .asm.s files for vp8 in the armeabi/armeabi-v7a configurations).
-          file="libvpx/${file}"
-          if [[ ! -e "${file}" ]]; then
-            asm_file="${file%.[sS]}"
-            cat "${asm_file}" | libvpx/build/make/ads2gas.pl > "${file}"
-            remove_trailing_whitespace "${file}"
-            rm "${asm_file}"
-          fi
-          ;;
-      esac
-    done < libvpx_android_configs/${arch[${i}]}/libvpx_srcs.txt
-  done
-}
-
-extglob_status="$(shopt extglob | cut -f2)"
-shopt -s extglob
-for i in $(seq 0 ${limit}); do
-  mkdir -p "libvpx_android_configs/${arch[${i}]}"
-  pushd "libvpx_android_configs/${arch[${i}]}"
-
-  # configure and make
-  echo "build_android_configs: "
-  echo "configure ${config[${i}]} ${common_params}"
-  ../../libvpx/configure ${config[${i}]} ${common_params}
-  rm -f libvpx_srcs.txt
-  for f in ${allowed_files}; do
-    # the build system supports multiple different configurations. avoid
-    # failing out when, for example, vp8_rtcd.h is not part of a configuration
-    make "${f}" || true
-  done
-
-  # remove files that aren't needed
-  rm -rf !(${allowed_files// /|})
-  remove_trailing_whitespace *
-
-  popd
-done
-
-# restore extglob status as it was before
-if [[ "${extglob_status}" == "off" ]]; then
-  shopt -u extglob
-fi
-
-convert_asm
-
-echo "Generated android config files."
diff --git a/extensions/vp9/src/main/jni/libvpx.mk b/extensions/vp9/src/main/jni/libvpx.mk
deleted file mode 100644
index 005f49fcc6..0000000000
--- a/extensions/vp9/src/main/jni/libvpx.mk
+++ /dev/null
@@ -1,53 +0,0 @@
-#
-# Copyright (C) 2016 The Android Open Source Project
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-CONFIG_DIR := $(LOCAL_PATH)/libvpx_android_configs/$(TARGET_ARCH_ABI)
-libvpx_source_dir := $(LOCAL_PATH)/libvpx
-
-LOCAL_MODULE := libvpx
-LOCAL_MODULE_CLASS := STATIC_LIBRARIES
-LOCAL_CFLAGS := -DHAVE_CONFIG_H=vpx_config.h
-LOCAL_ARM_MODE := arm
-LOCAL_CFLAGS += -O3
-
-# config specific include should go first to pick up the config specific rtcd.
-LOCAL_C_INCLUDES := $(CONFIG_DIR) $(libvpx_source_dir)
-
-# generate source file list
-libvpx_codec_srcs := $(sort $(shell cat $(CONFIG_DIR)/libvpx_srcs.txt))
-LOCAL_SRC_FILES := libvpx_android_configs/$(TARGET_ARCH_ABI)/vpx_config.c
-LOCAL_SRC_FILES += $(addprefix libvpx/, $(filter-out vpx_config.c, \
-                     $(filter %.c, $(libvpx_codec_srcs))))
-
-# include assembly files if they exist
-# "%.asm.[sS]" covers neon assembly and "%.asm" covers x86 assembly
-LOCAL_SRC_FILES += $(addprefix libvpx/, \
-                     $(filter %.asm.s %.asm.S %.asm, $(libvpx_codec_srcs)))
-
-ifneq ($(findstring armeabi-v7a, $(TARGET_ARCH_ABI)),)
-# append .neon to *_neon.c and *.[sS]
-LOCAL_SRC_FILES := $(subst _neon.c,_neon.c.neon,$(LOCAL_SRC_FILES))
-LOCAL_SRC_FILES := $(subst .s,.s.neon,$(LOCAL_SRC_FILES))
-LOCAL_SRC_FILES := $(subst .S,.S.neon,$(LOCAL_SRC_FILES))
-endif
-
-LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/libvpx \
-                           $(LOCAL_PATH)/libvpx/vpx
-
-LOCAL_LDFLAGS := -Wl,--version-script=$(CONFIG_DIR)/libvpx.ver
-include $(BUILD_SHARED_LIBRARY)
diff --git a/extensions/vp9/src/main/jni/vpx_jni.cc b/extensions/vp9/src/main/jni/vpx_jni.cc
deleted file mode 100644
index f0b93b1dc2..0000000000
--- a/extensions/vp9/src/main/jni/vpx_jni.cc
+++ /dev/null
@@ -1,273 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <cpu-features.h>
-#include <jni.h>
-
-#include <android/log.h>
-
-#include <algorithm>
-#include <cstdio>
-#include <cstdlib>
-#include <cstring>
-#include <new>
-
-#include "libyuv.h"  // NOLINT
-
-#define VPX_CODEC_DISABLE_COMPAT 1
-#include "vpx/vpx_decoder.h"
-#include "vpx/vp8dx.h"
-
-#define LOG_TAG "vpx_jni"
-#define LOGE(...) ((void)__android_log_print(ANDROID_LOG_ERROR, LOG_TAG, \
-                                             __VA_ARGS__))
-
-#define DECODER_FUNC(RETURN_TYPE, NAME, ...) \
-  extern "C" { \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_vp9_VpxDecoder_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__);\
-  } \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_vp9_VpxDecoder_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__)\
-
-#define LIBRARY_FUNC(RETURN_TYPE, NAME, ...) \
-  extern "C" { \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_vp9_VpxLibrary_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__);\
-  } \
-  JNIEXPORT RETURN_TYPE \
-    Java_com_google_android_exoplayer2_ext_vp9_VpxLibrary_ ## NAME \
-      (JNIEnv* env, jobject thiz, ##__VA_ARGS__)\
-
-// JNI references for VpxOutputBuffer class.
-static jmethodID initForRgbFrame;
-static jmethodID initForYuvFrame;
-static jfieldID dataField;
-static jfieldID outputModeField;
-static int errorCode;
-
-jint JNI_OnLoad(JavaVM* vm, void* reserved) {
-  JNIEnv* env;
-  if (vm->GetEnv(reinterpret_cast<void**>(&env), JNI_VERSION_1_6) != JNI_OK) {
-    return -1;
-  }
-  return JNI_VERSION_1_6;
-}
-
-DECODER_FUNC(jlong, vpxInit) {
-  vpx_codec_ctx_t* context = new vpx_codec_ctx_t();
-  vpx_codec_dec_cfg_t cfg = {0, 0, 0};
-  cfg.threads = android_getCpuCount();
-  errorCode = 0;
-  vpx_codec_err_t err = vpx_codec_dec_init(context, &vpx_codec_vp9_dx_algo,
-                                           &cfg, 0);
-  if (err) {
-    LOGE("ERROR: Failed to initialize libvpx decoder, error = %d.", err);
-    errorCode = err;
-    return 0;
-  }
-
-  // Populate JNI References.
-  const jclass outputBufferClass = env->FindClass(
-      "com/google/android/exoplayer2/ext/vp9/VpxOutputBuffer");
-  initForYuvFrame = env->GetMethodID(outputBufferClass, "initForYuvFrame",
-                                     "(IIIII)Z");
-  initForRgbFrame = env->GetMethodID(outputBufferClass, "initForRgbFrame",
-                                     "(II)Z");
-  dataField = env->GetFieldID(outputBufferClass, "data",
-                              "Ljava/nio/ByteBuffer;");
-  outputModeField = env->GetFieldID(outputBufferClass, "mode", "I");
-
-  return reinterpret_cast<intptr_t>(context);
-}
-
-DECODER_FUNC(jlong, vpxDecode, jlong jContext, jobject encoded, jint len) {
-  vpx_codec_ctx_t* const context = reinterpret_cast<vpx_codec_ctx_t*>(jContext);
-  const uint8_t* const buffer =
-      reinterpret_cast<const uint8_t*>(env->GetDirectBufferAddress(encoded));
-  const vpx_codec_err_t status =
-      vpx_codec_decode(context, buffer, len, NULL, 0);
-  errorCode = 0;
-  if (status != VPX_CODEC_OK) {
-    LOGE("ERROR: vpx_codec_decode() failed, status= %d", status);
-    errorCode = status;
-    return -1;
-  }
-  return 0;
-}
-
-DECODER_FUNC(jlong, vpxSecureDecode, jlong jContext, jobject encoded, jint len,
-    jobject mediaCrypto, jint inputMode, jbyteArray&, jbyteArray&,
-    jint inputNumSubSamples, jintArray numBytesOfClearData,
-    jintArray numBytesOfEncryptedData) {
-  // Doesn't support
-  // Java client should have checked vpxSupportSecureDecode
-  // and avoid calling this
-  // return -2 (DRM Error)
-  return -2;
-}
-
-DECODER_FUNC(jlong, vpxClose, jlong jContext) {
-  vpx_codec_ctx_t* const context = reinterpret_cast<vpx_codec_ctx_t*>(jContext);
-  vpx_codec_destroy(context);
-  delete context;
-  return 0;
-}
-
-DECODER_FUNC(jint, vpxGetFrame, jlong jContext, jobject jOutputBuffer) {
-  vpx_codec_ctx_t* const context = reinterpret_cast<vpx_codec_ctx_t*>(jContext);
-  vpx_codec_iter_t iter = NULL;
-  const vpx_image_t* const img = vpx_codec_get_frame(context, &iter);
-
-  if (img == NULL) {
-    return 1;
-  }
-
-  const int kOutputModeYuv = 0;
-  const int kOutputModeRgb = 1;
-
-  int outputMode = env->GetIntField(jOutputBuffer, outputModeField);
-  if (outputMode == kOutputModeRgb) {
-    // resize buffer if required.
-    jboolean initResult = env->CallBooleanMethod(jOutputBuffer, initForRgbFrame,
-                                                 img->d_w, img->d_h);
-    if (initResult == JNI_FALSE) {
-      return -1;
-    }
-
-    // get pointer to the data buffer.
-    const jobject dataObject = env->GetObjectField(jOutputBuffer, dataField);
-    uint8_t* const dst =
-        reinterpret_cast<uint8_t*>(env->GetDirectBufferAddress(dataObject));
-
-    libyuv::I420ToRGB565(img->planes[VPX_PLANE_Y], img->stride[VPX_PLANE_Y],
-                         img->planes[VPX_PLANE_U], img->stride[VPX_PLANE_U],
-                         img->planes[VPX_PLANE_V], img->stride[VPX_PLANE_V],
-                         dst, img->d_w * 2, img->d_w, img->d_h);
-  } else if (outputMode == kOutputModeYuv) {
-    const int kColorspaceUnknown = 0;
-    const int kColorspaceBT601 = 1;
-    const int kColorspaceBT709 = 2;
-    const int kColorspaceBT2020 = 3;
-
-    int colorspace = kColorspaceUnknown;
-    switch (img->cs) {
-      case VPX_CS_BT_601:
-        colorspace = kColorspaceBT601;
-        break;
-      case VPX_CS_BT_709:
-        colorspace = kColorspaceBT709;
-        break;
-    case VPX_CS_BT_2020:
-        colorspace = kColorspaceBT2020;
-        break;
-      default:
-        break;
-    }
-
-    // resize buffer if required.
-    jboolean initResult = env->CallBooleanMethod(
-        jOutputBuffer, initForYuvFrame, img->d_w, img->d_h,
-        img->stride[VPX_PLANE_Y], img->stride[VPX_PLANE_U], colorspace);
-    if (initResult == JNI_FALSE) {
-      return -1;
-    }
-
-    // get pointer to the data buffer.
-    const jobject dataObject = env->GetObjectField(jOutputBuffer, dataField);
-    jbyte* const data =
-        reinterpret_cast<jbyte*>(env->GetDirectBufferAddress(dataObject));
-
-    const int32_t uvHeight = (img->d_h + 1) / 2;
-    const uint64_t yLength = img->stride[VPX_PLANE_Y] * img->d_h;
-    const uint64_t uvLength = img->stride[VPX_PLANE_U] * uvHeight;
-    if (img->fmt == VPX_IMG_FMT_I42016) {  // HBD planar 420.
-      // Note: The stride for BT2020 is twice of what we use so this is wasting
-      // memory. The long term goal however is to upload half-float/short so
-      // it's not important to optimize the stride at this time.
-      // Y
-      int sampleY = 0;
-      for (int y = 0; y < img->d_h; y++) {
-        const uint16_t* srcBase = reinterpret_cast<uint16_t*>(
-            img->planes[VPX_PLANE_Y] + img->stride[VPX_PLANE_Y] * y);
-        int8_t* destBase = data + img->stride[VPX_PLANE_Y] * y;
-        for (int x = 0; x < img->d_w; x++) {
-          // Lightweight dither. Carryover the remainder of each 10->8 bit
-          // conversion to the next pixel.
-          sampleY += *srcBase++;
-          *destBase++ = sampleY >> 2;
-          sampleY = sampleY & 3;  // Remainder.
-        }
-      }
-      // UV
-      int sampleU = 0;
-      int sampleV = 0;
-      const int32_t uvWidth = (img->d_w + 1) / 2;
-      for (int y = 0; y < uvHeight; y++) {
-        const uint16_t* srcUBase = reinterpret_cast<uint16_t*>(
-            img->planes[VPX_PLANE_U] + img->stride[VPX_PLANE_U] * y);
-        const uint16_t* srcVBase = reinterpret_cast<uint16_t*>(
-            img->planes[VPX_PLANE_V] + img->stride[VPX_PLANE_V] * y);
-        int8_t* destUBase = data + yLength + img->stride[VPX_PLANE_U] * y;
-        int8_t* destVBase = data + yLength + uvLength
-            + img->stride[VPX_PLANE_V] * y;
-        for (int x = 0; x < uvWidth; x++) {
-          // Lightweight dither. Carryover the remainder of each 10->8 bit
-          // conversion to the next pixel.
-          sampleU += *srcUBase++;
-          *destUBase++ = sampleU >> 2;
-          sampleU = sampleU & 3;  // Remainder.
-          sampleV += *srcVBase++;
-          *destVBase++ = sampleV >> 2;
-          sampleV = sampleV & 3;  // Remainder.
-        }
-      }
-    } else {
-      // TODO: This copy can be eliminated by using external frame buffers. This
-      // is insignificant for smaller videos but takes ~1.5ms for 1080p clips.
-      // So this should eventually be gotten rid of.
-      memcpy(data, img->planes[VPX_PLANE_Y], yLength);
-      memcpy(data + yLength, img->planes[VPX_PLANE_U], uvLength);
-      memcpy(data + yLength + uvLength, img->planes[VPX_PLANE_V], uvLength);
-    }
-  }
-  return 0;
-}
-
-DECODER_FUNC(jstring, vpxGetErrorMessage, jlong jContext) {
-  vpx_codec_ctx_t* const context = reinterpret_cast<vpx_codec_ctx_t*>(jContext);
-  return env->NewStringUTF(vpx_codec_error(context));
-}
-
-DECODER_FUNC(jint, vpxGetErrorCode, jlong jContext) {
-  return errorCode;
-}
-
-LIBRARY_FUNC(jstring, vpxIsSecureDecodeSupported) {
-  // Doesn't support
-  return 0;
-}
-
-LIBRARY_FUNC(jstring, vpxGetVersion) {
-  return env->NewStringUTF(vpx_codec_version_str());
-}
-
-LIBRARY_FUNC(jstring, vpxGetBuildConfig) {
-  return env->NewStringUTF(vpx_codec_build_config());
-}
