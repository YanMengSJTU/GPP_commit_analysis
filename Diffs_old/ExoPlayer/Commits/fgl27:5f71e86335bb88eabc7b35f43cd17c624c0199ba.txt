diff --git a/RELEASENOTES.md b/RELEASENOTES.md
index c8d1b6fd4c..b2f5931e02 100644
--- a/RELEASENOTES.md
+++ b/RELEASENOTES.md
@@ -32,6 +32,8 @@
     ([#1787](https://github.com/google/ExoPlayer/issues/1787)).
   * Support `Label` elements
     ([#6297](https://github.com/google/ExoPlayer/issues/6297)).
+  * Support legacy audio channel configuration
+    ([#6523](https://github.com/google/ExoPlayer/issues/6523)).
 * Add `allowedCapturePolicy` field to `AudioAttributes` wrapper to allow to
   opt-out of audio recording.
 * Add `DataSpec.httpRequestHeaders` to set HTTP request headers when connecting
diff --git a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java
index d225f65cea..643b1203dc 100644
--- a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java
+++ b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java
@@ -1169,10 +1169,13 @@ protected String parseBaseUrl(XmlPullParser xpp, String parentBaseUrl)
   protected int parseAudioChannelConfiguration(XmlPullParser xpp)
       throws XmlPullParserException, IOException {
     String schemeIdUri = parseString(xpp, "schemeIdUri", null);
-    int audioChannels = "urn:mpeg:dash:23003:3:audio_channel_configuration:2011".equals(schemeIdUri)
-        ? parseInt(xpp, "value", Format.NO_VALUE)
-        : ("tag:dolby.com,2014:dash:audio_channel_configuration:2011".equals(schemeIdUri)
-        ? parseDolbyChannelConfiguration(xpp) : Format.NO_VALUE);
+    int audioChannels =
+        "urn:mpeg:dash:23003:3:audio_channel_configuration:2011".equals(schemeIdUri)
+            ? parseInt(xpp, "value", Format.NO_VALUE)
+            : ("tag:dolby.com,2014:dash:audio_channel_configuration:2011".equals(schemeIdUri)
+                    || "urn:dolby:dash:audio_channel_configuration:2011".equals(schemeIdUri)
+                ? parseDolbyChannelConfiguration(xpp)
+                : Format.NO_VALUE);
     do {
       xpp.next();
     } while (!XmlPullParserUtil.isEndTag(xpp, "AudioChannelConfiguration"));
@@ -1551,7 +1554,8 @@ protected static String parseString(XmlPullParser xpp, String name, String defau
   /**
    * Parses the number of channels from the value attribute of an AudioElementConfiguration with
    * schemeIdUri "tag:dolby.com,2014:dash:audio_channel_configuration:2011", as defined by table E.5
-   * in ETSI TS 102 366.
+   * in ETSI TS 102 366, or the legacy schemeIdUri
+   * "urn:dolby:dash:audio_channel_configuration:2011".
    *
    * @param xpp The parser from which to read.
    * @return The parsed number of channels, or {@link Format#NO_VALUE} if the channel count could
