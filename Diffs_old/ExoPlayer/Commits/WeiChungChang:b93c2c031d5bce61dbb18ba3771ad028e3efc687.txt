diff --git a/demo/src/main/assets/media.exolist.json b/demo/src/main/assets/media.exolist.json
index 6fba5bd65b..1c255a6a5a 100644
--- a/demo/src/main/assets/media.exolist.json
+++ b/demo/src/main/assets/media.exolist.json
@@ -21,6 +21,14 @@
         "name": "Google Play (WebM,VP9)",
         "uri": "http://www.youtube.com/api/manifest/dash/id/3aa39fa2cc27967f/source/youtube?as=fmp4_audio_clear,webm2_sd_hd_clear&sparams=ip,ipbits,expire,source,id,as&ip=0.0.0.0&ipbits=0&expire=19000000000&signature=B1C2A74783AC1CC4865EB312D7DD2D48230CC9FD.BD153B9882175F1F94BFE5141A5482313EA38E8D&key=ik0",
         "extension": "mpd"
+      },
+      {
+        "name": "original test movie",
+        "uri": "asset:///compare.mp4"
+      },
+      {
+        "name": "baseball test movie",
+        "uri": "asset:///baseball2.mp4"
       }
     ]
   },
diff --git a/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java b/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java
index dc3c398357..92864f1791 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java
@@ -36,6 +36,7 @@
 import com.google.android.exoplayer2.util.Util;
 import java.util.Formatter;
 import java.util.Locale;
+import android.widget.Toast;
 
 /**
  * A view for controlling {@link ExoPlayer} instances.
@@ -219,6 +220,30 @@ public boolean dispatchSeek(ExoPlayer player, int windowIndex, long positionMs)
   private int showTimeoutMs;
   private long hideAtMs;
 
+  private Context mContext;
+  private TrickSpeed mSpeed = TrickSpeed.TRICK_NORMAL;
+  private boolean mIsRewind = false;
+
+  /** added by Sacha for using playback speed */
+  enum TrickSpeed {
+    TRICK_NORMAL(1), TRICK_2(2), TRICK_4(4), TRICK_8(8), TRICK_16(16), TRICK_32(32);
+
+    public int speed;
+    TrickSpeed (int speed) {
+      this.speed = speed;
+    }
+    public TrickSpeed findNext() {
+      boolean found = false;
+      for (TrickSpeed trickSpeed: TrickSpeed.values()) {
+        if (found) 
+          return trickSpeed;
+        if (trickSpeed.equals(this)) 
+          found = true;
+      }
+      return this;
+    }
+  }
+
   private final Runnable updateProgressAction = new Runnable() {
     @Override
     public void run() {
@@ -244,6 +269,7 @@ public PlaybackControlView(Context context, AttributeSet attrs) {
   public PlaybackControlView(Context context, AttributeSet attrs, int defStyleAttr) {
     super(context, attrs, defStyleAttr);
 
+    mContext = context;
     int controllerLayoutId = R.layout.exo_playback_control_view;
     rewindMs = DEFAULT_REWIND_MS;
     fastForwardMs = DEFAULT_FAST_FORWARD_MS;
@@ -613,17 +639,25 @@ private void next() {
   }
 
   private void rewind() {
-    if (rewindMs <= 0) {
-      return;
-    }
-    seekTo(Math.max(player.getCurrentPosition() - rewindMs, 0));
+	if (mIsRewind) {
+	  mSpeed = mSpeed.findNext();
+	} else {
+	  mIsRewind = true;
+	  mSpeed = TrickSpeed.TRICK_2;
+	}
+	player.setPlaybackSpeed(0 - mSpeed.speed);
+	Toast.makeText(mContext, "RWD x" + mSpeed.speed, Toast.LENGTH_SHORT).show();
   }
 
   private void fastForward() {
-    if (fastForwardMs <= 0) {
-      return;
+    if (!mIsRewind) {
+      mSpeed = mSpeed.findNext();
+    } else {
+      mIsRewind = false;
+      mSpeed = TrickSpeed.TRICK_2;
     }
-    seekTo(Math.min(player.getCurrentPosition() + fastForwardMs, player.getDuration()));
+    player.setPlaybackSpeed(mSpeed.speed);
+    Toast.makeText(mContext, "FF x" + mSpeed.speed, Toast.LENGTH_SHORT).show();
   }
 
   private void seekTo(long positionMs) {
@@ -801,8 +835,10 @@ public void onClick(View view) {
           rewind();
         } else if (playButton == view) {
           player.setPlayWhenReady(true);
+          resetTrickState();
         } else if (pauseButton == view) {
           player.setPlayWhenReady(false);
+          resetTrickState();
         }
       }
       hideAfterTimeout();
@@ -810,4 +846,10 @@ public void onClick(View view) {
 
   }
 
+  private void resetTrickState() {
+    mSpeed = TrickSpeed.TRICK_NORMAL;
+    mIsRewind = false;
+    player.setPlaybackSpeed(1.0f);
+  }
+
 }
diff --git a/library/src/main/java/com/google/android/exoplayer2/util/Util.java b/library/src/main/java/com/google/android/exoplayer2/util/Util.java
index 2c706a9367..2b27f371e7 100644
--- a/library/src/main/java/com/google/android/exoplayer2/util/Util.java
+++ b/library/src/main/java/com/google/android/exoplayer2/util/Util.java
@@ -61,7 +61,7 @@
 
   public static final boolean TRICK_PLAY_TEST_HACK = false;
   public static final boolean TRICK_PLAY_HIGH_SPEED = true;
-  public static final long  TRICK_PLAY_DISPLAY_TIME_MS = 500; /*ms*/
+  public static final long  TRICK_PLAY_DISPLAY_TIME_MS = 0; /*ms*/
   public static final long MAX_NATIVE_SUPPORT_SPEED = 4;
   /**
    * Like {@link android.os.Build.VERSION#SDK_INT}, but in a place where it can be conveniently
