diff --git a/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java
index e41398b734..6f3587191c 100644
--- a/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java
@@ -30,9 +30,9 @@
 import com.google.android.exoplayer.demo.player.HlsRendererBuilder;
 import com.google.android.exoplayer.demo.player.SmoothStreamingRendererBuilder;
 import com.google.android.exoplayer.drm.UnsupportedDrmException;
-import com.google.android.exoplayer.metadata.GeobMetadata;
-import com.google.android.exoplayer.metadata.PrivMetadata;
-import com.google.android.exoplayer.metadata.TxxxMetadata;
+import com.google.android.exoplayer.metadata.frame.GeobFrame;
+import com.google.android.exoplayer.metadata.frame.PrivFrame;
+import com.google.android.exoplayer.metadata.frame.TxxxFrame;
 import com.google.android.exoplayer.text.CaptionStyleCompat;
 import com.google.android.exoplayer.text.Cue;
 import com.google.android.exoplayer.text.SubtitleLayout;
@@ -607,19 +607,19 @@ public void onCues(List<Cue> cues) {
   @Override
   public void onId3Metadata(Map<String, Object> metadata) {
     for (Map.Entry<String, Object> entry : metadata.entrySet()) {
-      if (TxxxMetadata.TYPE.equals(entry.getKey())) {
-        TxxxMetadata txxxMetadata = (TxxxMetadata) entry.getValue();
+      if ( TxxxFrame.ID.equals(entry.getKey())) {
+        TxxxFrame txxxFrame = (TxxxFrame ) entry.getValue();
         Log.i(TAG, String.format("ID3 TimedMetadata %s: description=%s, value=%s",
-            TxxxMetadata.TYPE, txxxMetadata.description, txxxMetadata.value));
-      } else if (PrivMetadata.TYPE.equals(entry.getKey())) {
-        PrivMetadata privMetadata = (PrivMetadata) entry.getValue();
+            TxxxFrame.ID, txxxFrame.description, txxxFrame.value));
+      } else if ( PrivFrame.ID.equals(entry.getKey())) {
+        PrivFrame privFrame = (PrivFrame ) entry.getValue();
         Log.i(TAG, String.format("ID3 TimedMetadata %s: owner=%s",
-            PrivMetadata.TYPE, privMetadata.owner));
-      } else if (GeobMetadata.TYPE.equals(entry.getKey())) {
-        GeobMetadata geobMetadata = (GeobMetadata) entry.getValue();
+            PrivFrame.ID, privFrame.owner));
+      } else if ( GeobFrame.TYPE.equals(entry.getKey())) {
+        GeobFrame geobFrame = (GeobFrame ) entry.getValue();
         Log.i(TAG, String.format("ID3 TimedMetadata %s: mimeType=%s, filename=%s, description=%s",
-            GeobMetadata.TYPE, geobMetadata.mimeType, geobMetadata.filename,
-            geobMetadata.description));
+            GeobFrame.TYPE, geobFrame.mimeType, geobFrame.filename,
+            geobFrame.description));
       } else {
         Log.i(TAG, String.format("ID3 TimedMetadata %s", entry.getKey()));
       }
diff --git a/library/src/androidTest/java/com/google/android/exoplayer/metadata/Id3ParserTest.java b/library/src/androidTest/java/com/google/android/exoplayer/metadata/Id3ParserTest.java
index cfa773ae89..907fdbbc22 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/metadata/Id3ParserTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/metadata/Id3ParserTest.java
@@ -15,9 +15,10 @@
  */
 package com.google.android.exoplayer.metadata;
 
+import com.google.android.exoplayer.metadata.frame.TxxxFrame;
+
 import junit.framework.TestCase;
 
-import java.util.Map;
 import java.util.Set;
 
 /**
@@ -35,9 +36,9 @@ public void testParseTxxxFrames() {
       Id3Tag id3Tag = parser.parse(rawId3, rawId3.length);
       assertNotNull(id3Tag);
       assertEquals(1, id3Tag.size());
-      Set<TxxxMetadata> txxxFrames = id3Tag.getTxxxFrames();
+      Set<TxxxFrame> txxxFrames = id3Tag.getTxxxFrames();
       assertEquals( 1, txxxFrames.size() );
-      TxxxMetadata txxxFrame = txxxFrames.toArray( new TxxxMetadata[1] )[1];
+      TxxxFrame txxxFrame = txxxFrames.toArray( new TxxxFrame[1] )[1];
       assertNotNull(txxxFrame);
       assertEquals("", txxxFrame.description);
       assertEquals("mdialog_VINDICO1527664_start", txxxFrame.value);
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/Id3Parser.java b/library/src/main/java/com/google/android/exoplayer/metadata/Id3Parser.java
index 62cbc935fb..5aaa4e15e2 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/Id3Parser.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/Id3Parser.java
@@ -16,17 +16,24 @@
 package com.google.android.exoplayer.metadata;
 
 import com.google.android.exoplayer.ParserException;
+import com.google.android.exoplayer.metadata.frame.BinaryFrame;
+import com.google.android.exoplayer.metadata.frame.GeobFrame;
+import com.google.android.exoplayer.metadata.frame.Id3Frame;
+import com.google.android.exoplayer.metadata.frame.PrivFrame;
+import com.google.android.exoplayer.metadata.frame.TxxxFrame;
 import com.google.android.exoplayer.util.MimeTypes;
 import com.google.android.exoplayer.util.ParsableByteArray;
 
 import java.io.UnsupportedEncodingException;
+import java.util.ArrayList;
 import java.util.Collections;
+import java.util.List;
 import java.util.Locale;
 
 /**
  * Extracts individual TXXX text frames from raw ID3 data.
  */
-public final class Id3Parser implements MetadataParser<Id3Tag> {
+public final class Id3Parser implements MetadataParser<List<Id3Frame>> {
 
   private static final int ID3_TEXT_ENCODING_ISO_8859_1 = 0;
   private static final int ID3_TEXT_ENCODING_UTF_16 = 1;
@@ -39,9 +46,9 @@ public boolean canParse(String mimeType) {
   }
 
   @Override
-  public Id3Tag parse(byte[] data, int size)
+  public List<Id3Frame> parse( byte[] data, int size)
           throws UnsupportedEncodingException, ParserException {
-    Id3Tag id3Tag = new Id3Tag();
+    List<Id3Frame> id3Frames = new ArrayList<>();
     ParsableByteArray id3Data = new ParsableByteArray(data, size);
     int id3Size = parseId3Header(id3Data);
 
@@ -70,7 +77,7 @@ public Id3Tag parse(byte[] data, int size)
         int valueEndIndex = indexOfEOS(frame, valueStartIndex, encoding);
         String value = new String(frame, valueStartIndex, valueEndIndex - valueStartIndex,
                 charset);
-        id3Tag.addTxxxFrame( new TxxxMetadata(description, value));
+        id3Frames.add(new TxxxFrame(description, value));
       } else if (frameId0 == 'P' && frameId1 == 'R' && frameId2 == 'I' && frameId3 == 'V') {
         // Check frame ID == PRIV
         byte[] frame = new byte[frameSize];
@@ -80,7 +87,7 @@ public Id3Tag parse(byte[] data, int size)
         String owner = new String(frame, 0, firstZeroIndex, "ISO-8859-1");
         byte[] privateData = new byte[frameSize - firstZeroIndex - 1];
         System.arraycopy(frame, firstZeroIndex + 1, privateData, 0, frameSize - firstZeroIndex - 1);
-        id3Tag.put(PrivMetadata.TYPE, new PrivMetadata(owner, privateData));
+        id3Frames.add(new PrivFrame(owner, privateData));
       } else if (frameId0 == 'G' && frameId1 == 'E' && frameId2 == 'O' && frameId3 == 'B') {
         // Check frame ID == GEOB
         int encoding = id3Data.readUnsignedByte();
@@ -104,19 +111,18 @@ public Id3Tag parse(byte[] data, int size)
         byte[] objectData = new byte[objectDataSize];
         System.arraycopy(frame, descriptionEndIndex + delimiterLength(encoding), objectData, 0,
                 objectDataSize);
-        id3Tag.put(GeobMetadata.TYPE, new GeobMetadata(mimeType, filename,
-                description, objectData));
+        id3Frames.add(new GeobFrame(mimeType, filename, description, objectData));
       } else {
         String type = String.format(Locale.US, "%c%c%c%c", frameId0, frameId1, frameId2, frameId3);
         byte[] frame = new byte[frameSize];
         id3Data.readBytes(frame, 0, frameSize);
-        id3Tag.put(type, frame);
+        id3Frames.add(new BinaryFrame(type,frame));
       }
 
       id3Size -= frameSize + 10 /* header size */;
     }
 
-    return ( Id3Tag ) Collections.unmodifiableMap(id3Tag);
+    return Collections.unmodifiableList(id3Frames);
   }
 
   private static int indexOf(byte[] data, int fromIndex, byte key) {
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/Id3Tag.java b/library/src/main/java/com/google/android/exoplayer/metadata/Id3Tag.java
deleted file mode 100644
index 6ac73dddaa..0000000000
--- a/library/src/main/java/com/google/android/exoplayer/metadata/Id3Tag.java
+++ /dev/null
@@ -1,97 +0,0 @@
-package com.google.android.exoplayer.metadata;
-
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-
-
-public class Id3Tag implements Map<String, Object> {
-
-    private final Map<String, Object> frames;
-    private Set<TxxxMetadata> txxxFrames;
-
-    public Id3Tag() {
-        frames = new HashMap<>();
-        txxxFrames = new HashSet<>();
-    }
-
-    @Override
-    public void clear() {
-        frames.clear();
-    }
-
-    @Override
-    public boolean containsKey( Object key ) {
-        return frames.containsKey( key );
-    }
-
-    @Override
-    public boolean containsValue( Object value ) {
-        return frames.containsValue( value );
-    }
-
-    @Override
-    public Set<Entry<String, Object>> entrySet() {
-        return frames.entrySet();
-    }
-
-    @Override
-    public boolean equals( Object object ) {
-        return frames.equals( object );
-    }
-
-    @Override
-    public Object get( Object key ) {
-        return frames.get( key );
-    }
-
-    @Override
-    public int hashCode() {
-        return frames.hashCode();
-    }
-
-    @Override
-    public boolean isEmpty() {
-        return frames.isEmpty();
-    }
-
-    @Override
-    public Set<String> keySet() {
-        return frames.keySet();
-    }
-
-    @Override
-    public Object put( String key, Object value ) {
-        return frames.put( key, value );
-    }
-
-    @Override
-    public void putAll( Map<? extends String, ?> map ) {
-        frames.putAll( map );
-    }
-
-    @Override
-    public Object remove( Object key ) {
-        return frames.remove( key );
-    }
-
-    @Override
-    public int size() {
-        return frames.size();
-    }
-
-    @Override
-    public Collection<Object> values() {
-        return frames.values();
-    }
-
-    public void addTxxxFrame( TxxxMetadata txxxMetadata ) {
-        txxxFrames.add( txxxMetadata );
-    }
-
-    public Set<TxxxMetadata> getTxxxFrames() {
-        return txxxFrames;
-    }
-}
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/frame/BinaryFrame.java b/library/src/main/java/com/google/android/exoplayer/metadata/frame/BinaryFrame.java
new file mode 100644
index 0000000000..ae97b49845
--- /dev/null
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/frame/BinaryFrame.java
@@ -0,0 +1,18 @@
+package com.google.android.exoplayer.metadata.frame;
+
+/**
+ * Binary ID3 frame
+ */
+public class BinaryFrame extends Id3Frame {
+
+    private final byte[] data;
+
+    public BinaryFrame( String type, byte[] data ) {
+        super(type);
+        this.data = data;
+    }
+
+    public byte[] getBytes() {
+        return data;
+    }
+}
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/GeobMetadata.java b/library/src/main/java/com/google/android/exoplayer/metadata/frame/GeobFrame.java
similarity index 59%
rename from library/src/main/java/com/google/android/exoplayer/metadata/GeobMetadata.java
rename to library/src/main/java/com/google/android/exoplayer/metadata/frame/GeobFrame.java
index 6cc61dd468..c3e8ea45b0 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/GeobMetadata.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/frame/GeobFrame.java
@@ -13,26 +13,42 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata;
+package com.google.android.exoplayer.metadata.frame;
 
 /**
  * A metadata that contains parsed ID3 GEOB (General Encapsulated Object) frame data associated
  * with time indices.
  */
-public final class GeobMetadata {
+public final class GeobFrame extends Id3Frame {
 
-  public static final String TYPE = "GEOB";
+  public static final String ID = "GEOB";
 
-  public final String mimeType;
-  public final String filename;
-  public final String description;
-  public final byte[] data;
+  private final String mimeType;
+  private final String filename;
+  private final String description;
+  private final byte[] data;
 
-  public GeobMetadata(String mimeType, String filename, String description, byte[] data) {
+  public GeobFrame( String mimeType, String filename, String description, byte[] data) {
+    super(ID);
     this.mimeType = mimeType;
     this.filename = filename;
     this.description = description;
     this.data = data;
   }
 
+  public String getMimeType() {
+    return mimeType;
+  }
+
+  public String getFilename() {
+    return filename;
+  }
+
+  public String getDescription() {
+    return description;
+  }
+
+  public byte[] getData() {
+    return data;
+  }
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/frame/Id3Frame.java b/library/src/main/java/com/google/android/exoplayer/metadata/frame/Id3Frame.java
new file mode 100644
index 0000000000..808477313a
--- /dev/null
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/frame/Id3Frame.java
@@ -0,0 +1,17 @@
+package com.google.android.exoplayer.metadata.frame;
+
+/**
+ * Base abstract class for ID3 frames
+ */
+public abstract class Id3Frame {
+
+    private final String frameId;
+
+    public Id3Frame( String frameId ){
+        this.frameId = frameId;
+    }
+
+    public String getFrameId() {
+        return frameId;
+    }
+}
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/PrivMetadata.java b/library/src/main/java/com/google/android/exoplayer/metadata/frame/PrivFrame.java
similarity index 68%
rename from library/src/main/java/com/google/android/exoplayer/metadata/PrivMetadata.java
rename to library/src/main/java/com/google/android/exoplayer/metadata/frame/PrivFrame.java
index 94ba6e52cc..082fe7b716 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/PrivMetadata.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/frame/PrivFrame.java
@@ -13,22 +13,32 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata;
+package com.google.android.exoplayer.metadata.frame;
+
+import com.google.android.exoplayer.metadata.frame.Id3Frame;
 
 /**
  * A metadata that contains parsed ID3 PRIV (Private) frame data associated
  * with time indices.
  */
-public final class PrivMetadata {
+public final class PrivFrame extends Id3Frame {
 
-  public static final String TYPE = "PRIV";
+  public static final String ID = "PRIV";
 
   public final String owner;
   public final byte[] privateData;
 
-  public PrivMetadata(String owner, byte[] privateData) {
+  public PrivFrame( String owner, byte[] privateData) {
+    super(ID);
     this.owner = owner;
     this.privateData = privateData;
   }
 
+  public String getOwner() {
+    return owner;
+  }
+
+  public byte[] getPrivateData() {
+    return privateData;
+  }
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/TxxxMetadata.java b/library/src/main/java/com/google/android/exoplayer/metadata/frame/TxxxFrame.java
similarity index 59%
rename from library/src/main/java/com/google/android/exoplayer/metadata/TxxxMetadata.java
rename to library/src/main/java/com/google/android/exoplayer/metadata/frame/TxxxFrame.java
index c0f1d2c5b3..70d6779951 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/TxxxMetadata.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/frame/TxxxFrame.java
@@ -13,22 +13,23 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata;
+package com.google.android.exoplayer.metadata.frame;
 
 /**
- * A metadata that contains parsed ID3 TXXX (User defined text information) frame data associated
+ * A metadata that contains parsed ID3 PRIV (Private) frame data associated
  * with time indices.
  */
-public final class TxxxMetadata {
+public final class TxxxFrame extends Id3Frame {
 
-  public static final String TYPE = "TXXX";
+    private static final String ID = "TXXX";
 
-  public final String description;
-  public final String value;
+    public final String description;
+    public final String value;
 
-  public TxxxMetadata(String description, String value) {
-    this.description = description;
-    this.value = value;
-  }
+    public TxxxFrame( String description, String value ) {
+        super( ID );
+        this.description = description;
+        this.value = value;
+    }
 
 }
