diff --git a/demo/build.gradle b/demo/build.gradle
index c55e863eb6..5da04e32eb 100644
--- a/demo/build.gradle
+++ b/demo/build.gradle
@@ -64,13 +64,14 @@ dependencies {
     withExtensionsCompile project(path: modulePrefix + 'extension-ima')
     withExtensionsCompile project(path: modulePrefix + 'extension-opus')
     withExtensionsCompile project(path: modulePrefix + 'extension-vp9')
-	withExtensionsCompile project(path: modulePrefix + 'extension-rtmp')
+    withExtensionsCompile project(path: modulePrefix + 'extension-rtmp')
     compile 'commons-io:commons-io:2.5'
     compile 'com.google.code.gson:gson:2.8.1'
     compile 'com.github.bumptech.glide:glide:4.0.0'
-    compile 'com.android.support:support-v4:25.4.0'
+    compile 'com.android.support:support-v4:25.3.1'
     compile 'com.android.support:appcompat-v7:25.3.1'
     compile 'com.android.support:design:25.3.1'
     compile 'com.android.support:support-vector-drawable:25.3.1'
+    compile 'me.relex:circleindicator:1.2.2@aar'
     annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
 }
diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
index aca514edf4..6ba63602db 100644
--- a/demo/src/main/AndroidManifest.xml
+++ b/demo/src/main/AndroidManifest.xml
@@ -106,8 +106,7 @@
             </intent-filter>
         </activity>
         <activity
-            android:name=".main.LoginActivity"
-            android:theme="@android:style/Theme.Holo.Light" />
+            android:name=".main.LoginActivity" />
 
         <service
             android:name=".services.DownloaderService"
diff --git a/demo/src/main/java/com/novo/adapters/BannerAdapter.java b/demo/src/main/java/com/novo/adapters/BannerAdapter.java
new file mode 100644
index 0000000000..21d18c68be
--- /dev/null
+++ b/demo/src/main/java/com/novo/adapters/BannerAdapter.java
@@ -0,0 +1,74 @@
+package com.novo.adapters;
+
+import android.content.Context;
+import android.os.Parcelable;
+import android.support.v4.app.Fragment;
+import android.support.v4.view.PagerAdapter;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+
+import com.bumptech.glide.Glide;
+import com.novo.R;
+
+import java.util.ArrayList;
+
+/**
+ * Created by ayushgarg on 21/11/16.
+ */
+
+public class BannerAdapter extends PagerAdapter {
+
+    private ArrayList<String> IMAGES;
+    private LayoutInflater inflater;
+    private Context context;
+
+
+    public BannerAdapter(Fragment fragment, ArrayList<String> IMAGES) {
+        this.context = fragment.getActivity();
+        this.IMAGES=IMAGES;
+        inflater = LayoutInflater.from(context);
+    }
+
+
+    @Override
+    public void destroyItem(ViewGroup container, int position, Object object) {
+        container.removeView((View) object);
+    }
+
+    @Override
+    public int getCount() {
+        return IMAGES.size();
+    }
+
+    @Override
+    public Object instantiateItem(ViewGroup view, int position) {
+        View imageLayout = inflater.inflate(R.layout.view_pager_fragment, view, false);
+
+        assert imageLayout != null;
+        ImageView imageView = (ImageView) imageLayout
+                .findViewById(R.id.vp_image);
+
+        Glide.with(context).load(IMAGES.get(position)).into(imageView);
+
+        view.addView(imageLayout, 0);
+
+        return imageLayout;
+    }
+
+    @Override
+    public boolean isViewFromObject(View view, Object object) {
+        return view.equals(object);
+    }
+
+    @Override
+    public void restoreState(Parcelable state, ClassLoader loader) {
+    }
+
+    @Override
+    public Parcelable saveState() {
+        return null;
+    }
+
+}
diff --git a/demo/src/main/java/com/novo/fragments/DemoFragment.java b/demo/src/main/java/com/novo/fragments/DemoFragment.java
new file mode 100644
index 0000000000..d4d8d8bc0f
--- /dev/null
+++ b/demo/src/main/java/com/novo/fragments/DemoFragment.java
@@ -0,0 +1,451 @@
+package com.novo.fragments;
+
+import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.v4.app.Fragment;
+import android.text.TextUtils;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.GridView;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.source.hls.HLSUtils;
+import com.google.android.exoplayer2.source.hls.KeyWriter;
+import com.google.android.exoplayer2.upstream.novo.TokenManager;
+import com.google.gson.Gson;
+import com.novo.R;
+import com.novo.adapters.VideoAdapter;
+import com.novo.main.PlayerActivity;
+import com.novo.models.FileDownloadModel;
+import com.novo.models.VideoModel;
+import com.novo.network.DownloadTask;
+import com.novo.network.EndPoints;
+import com.novo.network.ServerHit;
+import com.novo.network.ZipHelper;
+import com.novo.services.DownloaderService;
+import com.novo.util.Utils;
+
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.novo.util.Utils.TAG;
+
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Activities that contain this fragment must implement the
+ * {@link OnDemoFragInteractionListener} interface
+ * to handle interaction events.
+ * Use the {@link DemoFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class DemoFragment extends Fragment implements VideoAdapter.ItemListener {
+    // TODO: Rename parameter arguments, choose names that match
+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+    private static final String ARG_PARAM1 = "param1";
+    private static final String ARG_PARAM2 = "param2";
+
+    // TODO: Rename and change types of parameters
+    private String mParam1;
+    private String mParam2;
+
+    private OnDemoFragInteractionListener mListener;
+
+
+    private GridView lvAll;
+    private Activity activity;
+    private BroadcastReceiver receiver;
+    private List<VideoModel> videoModelsList;
+    private VideoAdapter adapter;
+
+    public DemoFragment() {
+        // Required empty public constructor
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     *
+     * @param param1 Parameter 1.
+     * @param param2 Parameter 2.
+     * @return A new instance of fragment DemoFragment.
+     */
+    // TODO: Rename and change types and number of parameters
+    public static DemoFragment newInstance(String param1, String param2) {
+        DemoFragment fragment = new DemoFragment();
+        Bundle args = new Bundle();
+        args.putString(ARG_PARAM1, param1);
+        args.putString(ARG_PARAM2, param2);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        activity = getActivity();
+        if (getArguments() != null) {
+            mParam1 = getArguments().getString(ARG_PARAM1);
+            mParam2 = getArguments().getString(ARG_PARAM2);
+        }
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_demo, container, false);
+        initStuff(view);
+
+        setReceiver();
+
+        return view;
+    }
+
+    private void setReceiver() {
+
+        // register a receiver for callbacks
+        IntentFilter filter = new IntentFilter("progress_callback");
+        receiver = new BroadcastReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                long startTime = System.currentTimeMillis();
+                //do something based on the intent's action
+                Bundle b = intent.getExtras();
+                FileDownloadModel downloadModel = (FileDownloadModel) b.getSerializable("fileDownloadModelReturned");
+                // could be used to update a progress bar or show info somewhere in the Activity
+                Log.d(TAG, "onReceive: PROGRESS HOME: " + downloadModel.getProgress() + "%");
+
+                for (int i = 0; i < lvAll.getAdapter().getCount(); i++) {
+                    View child = lvAll.getChildAt(i);
+                    if (child != null && videoModelsList.get(i).getVideoId().equalsIgnoreCase(downloadModel.getVideoId())) {
+                        TextView tvPercentage = (TextView) child.findViewById(R.id.tvPercentage); // todo fix getting a crash here sometimes null pointer
+                        ImageView ivDownload = (ImageView) child.findViewById(R.id.ivDownload);
+
+                        switch (downloadModel.getStatus()) {
+                            case DOWNLOADING:
+                                if (downloadModel.getProgress() == -1) {
+                                    tvPercentage.setText(R.string.downloading);
+                                } else {
+                                    tvPercentage.setText(downloadModel.getProgress() + "%");
+                                }
+                                break;
+                            case DOWNLOADED:
+                                tvPercentage.setText(R.string.completed);
+                                break;
+                            case UNZIPPING:
+                                tvPercentage.setText(R.string.processing);
+                                break;
+                            case UNZIPPED:
+                                tvPercentage.setText("");
+                                ivDownload.setImageResource(R.drawable.ic_delete_black_24dp);
+                                break;
+                            case ERROR:
+                                tvPercentage.setText(R.string.unable_to_download);
+                                break;
+                            case CANCELLED:
+                                tvPercentage.setText("");
+                                break;
+                        }
+                        break;
+                    }
+                }
+                Log.d(TAG, "onReceive: Time taken to search views in videoModelsList = " + (System.currentTimeMillis() - startTime) + " ms");
+            }
+        };
+        activity.registerReceiver(receiver, filter);
+
+    }
+
+    private void initStuff(View view) {
+
+        lvAll = (GridView) view.findViewById(R.id.lvAll);
+        ServerHit.JSONTask task = new ServerHit.JSONTask(activity, TokenManager.getToken(), "GET", null, null, new ServerHit.ServiceHitResponseListener() {
+            @Override
+            public void onDone(String response) {
+                Log.d(TAG, "onDone: " + response);
+                response = "[\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Encrypted Stream - Open Policy\",\n" +
+                        "    \"videoId\": \"Gear_640x3642340_750k_open\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Encrypted Stream - Token Auth policy\",\n" +
+                        "    \"videoId\": \"Gear_640x3612340_750k_auth\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Gear\",\n" +
+                        "    \"videoId\": \"5WT9g212m4outw\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Encrypted Stream - Open Policy\",\n" +
+                        "    \"videoId\": \"Gear_640x369870_750k_open\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Encrypted Stream - Token Auth policy\",\n" +
+                        "    \"videoId\": \"Gear_640x8360_750k_auth\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Gear\",\n" +
+                        "    \"videoId\": \"5WT9gm654outw\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Encrypted Stream - Open Policy\",\n" +
+                        "    \"videoId\": \"Gear_54640x360_750k_open\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Encrypted Stream - Token Auth policy\",\n" +
+                        "    \"videoId\": \"Gear_63440x360_750k_auth\"\n" +
+                        "  },\n" +
+                        "  {\n" +
+                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
+                        "    \"name\": \"Gear\",\n" +
+                        "    \"videoId\": \"5WT9gm234outw\"\n" +
+                        "  }\n" +
+                        "]";
+                videoModelsList = getVideoModelsFromResponse(response);
+                adapter = new VideoAdapter(activity, R.layout.row_videos_grid, videoModelsList);
+                adapter.setItemListener(DemoFragment.this);
+                lvAll.setAdapter(adapter);
+
+
+            }
+
+            @Override
+            public void onError(String error) {
+
+                activity.runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        String response = "[ {  \"thumbnail\" : \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",  \"name\" : \"Encrypted Stream - Open Policy\",  \"videoId\" : \"Gear_640x360_750k_open\"}, {  \"thumbnail\" : \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",  \"name\" : \"Encrypted Stream - Token Auth policy\",  \"videoId\" : \"Gear_640x360_750k_auth\"} ]";
+                        onDone(response);
+                    }
+                });
+
+
+            }
+        });
+
+        String url = EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/fetchAll";
+        task.execute(url);
+
+    }
+
+
+    private void refreshList() {
+        adapter.notifyDataSetChanged();
+    }
+
+    @NonNull
+    private List<VideoModel> getVideoModelsFromResponse(String response) {
+        List<VideoModel> items = new ArrayList<>();
+        if (TextUtils.isEmpty(response)) {
+            return items;
+        }
+        try {
+            JSONArray array = new JSONArray(response);
+            for (int i = 0; i < array.length(); i++) {
+                JSONObject jsonObject = array.getJSONObject(i);
+                VideoModel model = new Gson().fromJson(jsonObject.toString(), VideoModel.class);
+                items.add(model);
+            }
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+        return items;
+    }
+
+    private void playMediaFromServer(VideoModel model) {
+        ServerHit.JSONTask streamTask = new ServerHit.JSONTask(activity, TokenManager.getToken(), "GET", null, null, new ServerHit.ServiceHitResponseListener() {
+            @Override
+            public void onDone(String response) {
+                try {
+                    JSONObject object = new JSONObject(response);
+                    String videoUrl = object.getString("videoUrl");
+                    // send to player
+                    Intent intent = new Intent(activity, PlayerActivity.class);
+                    intent.setData(Uri.parse(videoUrl));
+                    intent.setAction(PlayerActivity.ACTION_VIEW);
+                    startActivity(intent);
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            }
+
+            @Override
+            public void onError(String error) {
+
+            }
+        });
+        streamTask.execute(EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/stream?videoId=" + model.getVideoId());
+    }
+
+
+    @Override
+    public void onVideoPlayClicked(final VideoModel model) {
+        File dir = new File(new Utils(activity).getStorageDirectoryExtracts() + model.getVideoId());
+        if (Utils.isFolderPresent(dir)) {
+            File[] file = dir.listFiles();
+            // trying to find my file
+            Log.d(TAG, "onVideoPlayClicked: " + ZipHelper.searchFile(file, null));
+            ZipHelper.searchFile(file, new ZipHelper.FileListener() {
+                @Override
+                public void onFileSearchComplete(boolean fileFound, String fileToPlay) {
+                    if (fileFound && !TextUtils.isEmpty(fileToPlay)) {
+                        Intent intent = new Intent(activity, PlayerActivity.class);
+                        intent.setData(Uri.parse(fileToPlay));
+                        intent.setAction(PlayerActivity.ACTION_VIEW);
+                        startActivity(intent);
+                    } else {
+                        Toast.makeText(activity, "Unable to play local video, playing stream.", Toast.LENGTH_SHORT).show();
+                        playMediaFromServer(model);
+                    }
+                }
+            });
+        } else { // if folder is not present locally, play via server
+            playMediaFromServer(model);
+        }
+    }
+
+    @Override
+    public void onDownloadClicked(VideoModel model, final ImageView ivDownload) {
+        String serverFileUrl = EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/download?videoId=" + model.getVideoId();
+        // todo problem with zip file, hardcoded
+        final String keyFileUrl = EndPoints.getBaseUrl() + "VocabimateKeyServer/webapi/keys/getKey?videoId=" + model.getVideoId();
+        String videoId = HLSUtils.getVideoIdFromUrl(serverFileUrl);
+        if(TextUtils.isEmpty(videoId)){
+            Toast.makeText(activity, "Video id not found", Toast.LENGTH_SHORT).show();
+            return;
+        }
+        // execute this when the downloader must be fired
+        final File sourceZipFile = new File(new Utils(activity).getStorageDirectoryZips() + videoId);
+        String fileNameWithOutExt = FilenameUtils.removeExtension(sourceZipFile.getName());
+        final File targetDirectory = new File(new Utils(activity).getStorageDirectoryExtracts() + fileNameWithOutExt);
+        targetDirectory.mkdir();
+
+
+
+        FileDownloadModel fileDownloadModel = new FileDownloadModel()
+                .setVideoId(model.getVideoId())
+                .setVideoTitle(model.getName())
+                .setToken(TokenManager.getToken())
+                .setLink("https://drmdemo-94ea7.firebaseapp.com/arc.zip") // todo hard code
+//                .setLink(serverFileUrl)
+                .setFilePath(sourceZipFile.getAbsolutePath())
+                .setTargetDirectoryPath(targetDirectory.getAbsolutePath())
+                .setCallBackIntent("progress_callback");
+
+        Intent intent = new Intent(activity, DownloaderService.class);
+        Bundle bundle = new Bundle();
+        bundle.putSerializable("fileDownloadModel", fileDownloadModel);
+//        bundle.putString("videoId", model.getVideoId());
+//        bundle.putString("videoTitle", model.getName());
+//        bundle.putString("token", TokenManager.getToken());
+//        bundle.putString("link", "https://drmdemo-94ea7.firebaseapp.com/arc.zip");
+//        bundle.putString("filePath", sourceZipFile.getAbsolutePath());
+//        bundle.putString("targetDirectoryPath", targetDirectory.getAbsolutePath());
+//        bundle.putString("CallbackString", "progress_callback");
+        activity.startService(intent.putExtras(bundle)); // todo uncomment
+
+//        final DownloadTask downloadTask = new DownloadTask(activity, TokenManager.getToken(), sourceZipFile.getAbsolutePath(), new DownloadTask.DownloadTaskListener() {
+//            @Override
+//            public void onFileDownload() {
+//                new ZipHelper.ZipTask(activity, new ZipHelper.ZipTaskListener() {
+//                    @Override
+//                    public void onUnzipped(String fileToPlay) {
+//                        Log.d(TAG, "onUnzipped: " + fileToPlay);
+//                        ivDownload.setImageResource(R.mipmap.ic_download_complete);
+//                    }
+//                }).execute(sourceZipFile, targetDirectory);
+//            }
+//        });
+//        downloadTask.execute(serverFileUrl);
+//
+        final File tempKeyFile = new File(new Utils(activity).getTempDirectoryExtracts() + videoId);
+        final DownloadTask keyTask = new DownloadTask(activity, "KEY", TokenManager.getToken(), tempKeyFile.getAbsolutePath(), new DownloadTask.DownloadTaskListener() {
+            @Override
+            public void onFileDownload() {
+                KeyWriter writer = new KeyWriter(activity);
+                writer.writeByteToFile(writer.readByteToFileUnencryptedData(keyFileUrl, tempKeyFile), keyFileUrl);
+                writer.deleteTempKey(tempKeyFile);
+            }
+        });
+        keyTask.execute(keyFileUrl);
+    }
+
+    @Override
+    public void onDeleteClicked(File directory, ImageView ivDownload) {
+        try {
+            FileUtils.deleteDirectory(directory);
+            ivDownload.setImageResource(R.drawable.ic_file_download_black_24dp);
+        } catch (IOException e) {
+            e.printStackTrace();
+            Log.d(TAG, "onDeleteClicked: unable to delete directory" + e.getLocalizedMessage());
+        }
+    }
+
+
+    // TODO: Rename method, update argument and hook method into UI event
+    public void onButtonPressed(Uri uri) {
+        if (mListener != null) {
+//            mListener.onFragmentInteraction(uri);
+        }
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnDemoFragInteractionListener) {
+            mListener = (OnDemoFragInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnDemoFragInteractionListener");
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+    /**
+     * This interface must be implemented by activities that contain this
+     * fragment to allow an interaction in this fragment to be communicated
+     * to the activity and potentially other fragments contained in that
+     * activity.
+     * <p>
+     * See the Android Training lesson <a href=
+     * "http://developer.android.com/training/basics/fragments/communicating.html"
+     * >Communicating with Other Fragments</a> for more information.
+     */
+    public interface OnDemoFragInteractionListener {
+//        // TODO: Update argument type and name
+//        void onFragmentInteraction(Uri uri);
+    }
+}
diff --git a/demo/src/main/java/com/novo/fragments/HomeFragment.java b/demo/src/main/java/com/novo/fragments/HomeFragment.java
new file mode 100644
index 0000000000..7ddf2c9cf7
--- /dev/null
+++ b/demo/src/main/java/com/novo/fragments/HomeFragment.java
@@ -0,0 +1,79 @@
+package com.novo.fragments;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v4.view.ViewPager;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.novo.R;
+import com.novo.adapters.BannerAdapter;
+
+import java.util.ArrayList;
+
+import me.relex.circleindicator.CircleIndicator;
+
+
+public class HomeFragment extends Fragment {
+    private static ViewPager mPager;
+    private ArrayList<String> ImagesArray = new ArrayList<>();
+    private static final String[] STRINGS = {"http://lorempixel.com/750/400/nightlife/", "http://lorempixel.com/750/400/technics/",
+            "http://lorempixel.com/750/400/nature/", "http://lorempixel.com/750/400/city/"};
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        LayoutInflater layoutInflater = getLayoutInflater();
+        View view = layoutInflater.inflate(R.layout.fragment_home, container, false);
+
+        for (int i = 0; i < STRINGS.length; i++)
+            ImagesArray.add(STRINGS[i]);
+
+        mPager = (ViewPager) view.findViewById(R.id.pager);
+        CircleIndicator indicator = (CircleIndicator) view.findViewById(R.id.indicator);
+
+        mPager.addOnPageChangeListener(onPageChangeListener);
+        mPager.setAdapter(new BannerAdapter(this, ImagesArray));
+        indicator.setViewPager(mPager);
+
+        return view;
+    }
+
+    ViewPager.OnPageChangeListener onPageChangeListener = new ViewPager.OnPageChangeListener() {
+        @Override
+        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+
+        }
+
+        @Override
+        public void onPageSelected(int position) {
+
+        }
+
+        @Override
+        public void onPageScrollStateChanged(int state) {
+
+            int currentPage = mPager.getCurrentItem();       //ViewPager Type
+
+//            if (currentPage == IMAGES.length - 1 || currentPage == 0){
+//                previousState = currentState;
+//                currentState = state;
+//                if (previousState == 1 && currentState == 0){
+//                    mPager.setCurrentItem(currentPage == 0 ? IMAGES.length - 1 : 0);
+//                }
+//            }
+        }
+    };
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+    }
+}
diff --git a/demo/src/main/java/com/novo/main/HomeActivity.java b/demo/src/main/java/com/novo/main/HomeActivity.java
index 2fad3519df..d8d3576bb5 100644
--- a/demo/src/main/java/com/novo/main/HomeActivity.java
+++ b/demo/src/main/java/com/novo/main/HomeActivity.java
@@ -1,220 +1,43 @@
 package com.novo.main;
 
-import android.app.DownloadManager;
-import android.content.BroadcastReceiver;
-import android.content.Context;
 import android.content.Intent;
-import android.content.IntentFilter;
-import android.net.Uri;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.design.widget.BottomNavigationView;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
 import android.support.v7.app.AppCompatActivity;
 import android.text.TextUtils;
-import android.util.Log;
-import android.view.Gravity;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
-import android.widget.GridView;
-import android.widget.ImageView;
-import android.widget.TextView;
-import android.widget.Toast;
 
-import com.google.android.exoplayer2.source.hls.HLSUtils;
-import com.google.android.exoplayer2.source.hls.KeyWriter;
 import com.google.android.exoplayer2.upstream.novo.TokenManager;
-import com.google.gson.Gson;
 import com.novo.R;
-import com.novo.adapters.VideoAdapter;
-import com.novo.models.FileDownloadModel;
-import com.novo.models.VideoModel;
-import com.novo.network.DownloadTask;
-import com.novo.network.EndPoints;
-import com.novo.network.ServerHit;
-import com.novo.network.ZipHelper;
-import com.novo.services.DownloaderService;
-import com.novo.util.Utils;
+import com.novo.fragments.DemoFragment;
+import com.novo.fragments.HomeFragment;
 
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.io.FilenameUtils;
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
-import static com.novo.util.Utils.TAG;
-
-public class HomeActivity extends AppCompatActivity implements VideoAdapter.ItemListener {
+public class HomeActivity extends AppCompatActivity implements DemoFragment.OnDemoFragInteractionListener {
 
     private Button btnLogin;
-    private GridView lvAll;
-    private HomeActivity activity;
-    private BroadcastReceiver receiver;
-    private List<VideoModel> videoModelsList;
-    private VideoAdapter adapter;
+    private FragmentManager fragmentManager;
+    private BottomNavigationView bottomNavigationView;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home);
-        activity = HomeActivity.this;
-
-        initStuff();
-
-        mTextMessage = (TextView) findViewById(R.id.message);
-        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
-        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
 
-        // register a receiver for callbacks
-        IntentFilter filter = new IntentFilter("progress_callback");
-        receiver = new BroadcastReceiver() {
-            @Override
-            public void onReceive(Context context, Intent intent) {
-                long startTime = System.currentTimeMillis();
-                //do something based on the intent's action
-                Bundle b = intent.getExtras();
-                FileDownloadModel downloadModel = (FileDownloadModel) b.getSerializable("fileDownloadModelReturned");
-                // could be used to update a progress bar or show info somewhere in the Activity
-                Log.d(TAG, "onReceive: PROGRESS HOME: " + downloadModel.getProgress() + "%");
-
-                for (int i = 0; i < lvAll.getAdapter().getCount(); i++) {
-                    View child = lvAll.getChildAt(i);
-                    if (child != null && videoModelsList.get(i).getVideoId().equalsIgnoreCase(downloadModel.getVideoId())) {
-                        TextView tvPercentage = (TextView) child.findViewById(R.id.tvPercentage); // todo fix getting a crash here sometimes null pointer
-                        ImageView ivDownload = (ImageView) child.findViewById(R.id.ivDownload);
+        fragmentManager = getSupportFragmentManager();
+        fragmentManager.beginTransaction().replace(R.id.fragment_container, new HomeFragment()).commit(); // only first time
 
-                        switch (downloadModel.getStatus()) {
-                            case DOWNLOADING:
-                                if (downloadModel.getProgress() == -1) {
-                                    tvPercentage.setText(R.string.downloading);
-                                } else {
-                                    tvPercentage.setText(downloadModel.getProgress() + "%");
-                                }
-                                break;
-                            case DOWNLOADED:
-                                tvPercentage.setText(R.string.completed);
-                                break;
-                            case UNZIPPING:
-                                tvPercentage.setText(R.string.processing);
-                                break;
-                            case UNZIPPED:
-                                tvPercentage.setText("");
-                                ivDownload.setImageResource(R.drawable.ic_delete_black_24dp);
-                                break;
-                            case ERROR:
-                                tvPercentage.setText(R.string.unable_to_download);
-                                break;
-                            case CANCELLED:
-                                tvPercentage.setText("");
-                                break;
-                        }
-                        break;
-                    }
-                }
-                Log.d(TAG, "onReceive: Time taken to search views in videoModelsList = " + (System.currentTimeMillis() - startTime) + " ms");
-            }
-        };
-        registerReceiver(receiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(receiver);
-        super.onDestroy();
-    }
-
-    private void initStuff() {
         btnLogin = (Button) findViewById(R.id.btnLogin);
-        lvAll = (GridView) findViewById(R.id.lvAll);
-        ServerHit.JSONTask task = new ServerHit.JSONTask(this, TokenManager.getToken(), "GET", null, null, new ServerHit.ServiceHitResponseListener() {
-            @Override
-            public void onDone(String response) {
-                Log.d(TAG, "onDone: " + response);
-                response = "[\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Encrypted Stream - Open Policy\",\n" +
-                        "    \"videoId\": \"Gear_640x3642340_750k_open\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Encrypted Stream - Token Auth policy\",\n" +
-                        "    \"videoId\": \"Gear_640x3612340_750k_auth\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Gear\",\n" +
-                        "    \"videoId\": \"5WT9g212m4outw\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Encrypted Stream - Open Policy\",\n" +
-                        "    \"videoId\": \"Gear_640x369870_750k_open\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Encrypted Stream - Token Auth policy\",\n" +
-                        "    \"videoId\": \"Gear_640x8360_750k_auth\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Gear\",\n" +
-                        "    \"videoId\": \"5WT9gm654outw\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Encrypted Stream - Open Policy\",\n" +
-                        "    \"videoId\": \"Gear_54640x360_750k_open\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Encrypted Stream - Token Auth policy\",\n" +
-                        "    \"videoId\": \"Gear_63440x360_750k_auth\"\n" +
-                        "  },\n" +
-                        "  {\n" +
-                        "    \"thumbnail\": \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",\n" +
-                        "    \"name\": \"Gear\",\n" +
-                        "    \"videoId\": \"5WT9gm234outw\"\n" +
-                        "  }\n" +
-                        "]";
-                videoModelsList = getVideoModelsFromResponse(response);
-                adapter = new VideoAdapter(activity, R.layout.row_videos_grid, videoModelsList);
-                adapter.setItemListener(activity);
-                lvAll.setAdapter(adapter);
-
-
-            }
-
-            @Override
-            public void onError(String error) {
-
-                runOnUiThread(new Runnable() {
-                    @Override
-                    public void run() {
-                        String response = "[ {  \"thumbnail\" : \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",  \"name\" : \"Encrypted Stream - Open Policy\",  \"videoId\" : \"Gear_640x360_750k_open\"}, {  \"thumbnail\" : \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",  \"name\" : \"Encrypted Stream - Token Auth policy\",  \"videoId\" : \"Gear_640x360_750k_auth\"} ]";
-                        onDone(response);
-                    }
-                });
-
-
-            }
-        });
-
-        String url = EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/fetchAll";
-        task.execute(url);
-
         btnLogin.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 if (!TextUtils.isEmpty(TokenManager.getToken())) { // logging user out
-                    LogoutHelper.cleanup(activity);
+                    LogoutHelper.cleanup(HomeActivity.this);
                     loginButtonTextUpdate();
-                    refreshList();
                     return;
                 }
                 Intent intent = new Intent(getApplicationContext(), LoginActivity.class);
@@ -223,54 +46,8 @@ public void onClick(View v) {
             }
         });
 
-    }
-
-    private void refreshList() {
-        adapter.notifyDataSetChanged();
-    }
-
-    @NonNull
-    private List<VideoModel> getVideoModelsFromResponse(String response) {
-        List<VideoModel> items = new ArrayList<>();
-        if (TextUtils.isEmpty(response)) {
-            return items;
-        }
-        try {
-            JSONArray array = new JSONArray(response);
-            for (int i = 0; i < array.length(); i++) {
-                JSONObject jsonObject = array.getJSONObject(i);
-                VideoModel model = new Gson().fromJson(jsonObject.toString(), VideoModel.class);
-                items.add(model);
-            }
-        } catch (JSONException e) {
-            e.printStackTrace();
-        }
-        return items;
-    }
-
-    private void playMediaFromServer(VideoModel model) {
-        ServerHit.JSONTask streamTask = new ServerHit.JSONTask(this, TokenManager.getToken(), "GET", null, null, new ServerHit.ServiceHitResponseListener() {
-            @Override
-            public void onDone(String response) {
-                try {
-                    JSONObject object = new JSONObject(response);
-                    String videoUrl = object.getString("videoUrl");
-                    // send to player
-                    Intent intent = new Intent(getApplicationContext(), PlayerActivity.class);
-                    intent.setData(Uri.parse(videoUrl));
-                    intent.setAction(PlayerActivity.ACTION_VIEW);
-                    startActivity(intent);
-                } catch (JSONException e) {
-                    e.printStackTrace();
-                }
-            }
-
-            @Override
-            public void onError(String error) {
-
-            }
-        });
-        streamTask.execute(EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/stream?videoId=" + model.getVideoId());
+        bottomNavigationView = (BottomNavigationView) findViewById(R.id.navigation);
+        bottomNavigationView.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
     }
 
     @Override
@@ -287,135 +64,32 @@ private void loginButtonTextUpdate() {
         }
     }
 
-    @Override
-    public void onVideoPlayClicked(final VideoModel model) {
-        File dir = new File(new Utils(activity).getStorageDirectoryExtracts() + model.getVideoId());
-        if (Utils.isFolderPresent(dir)) {
-            File[] file = dir.listFiles();
-            // trying to find my file
-            Log.d(TAG, "onVideoPlayClicked: " + ZipHelper.searchFile(file, null));
-            ZipHelper.searchFile(file, new ZipHelper.FileListener() {
-                @Override
-                public void onFileSearchComplete(boolean fileFound, String fileToPlay) {
-                    if (fileFound && !TextUtils.isEmpty(fileToPlay)) {
-                        Intent intent = new Intent(getApplicationContext(), PlayerActivity.class);
-                        intent.setData(Uri.parse(fileToPlay));
-                        intent.setAction(PlayerActivity.ACTION_VIEW);
-                        startActivity(intent);
-                    } else {
-                        Toast.makeText(activity, "Unable to play local video, playing stream.", Toast.LENGTH_SHORT).show();
-                        playMediaFromServer(model);
-                    }
-                }
-            });
-        } else { // if folder is not present locally, play via server
-            playMediaFromServer(model);
-        }
-    }
-
-    @Override
-    public void onDownloadClicked(VideoModel model, final ImageView ivDownload) {
-        String serverFileUrl = EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/download?videoId=" + model.getVideoId();
-        // todo problem with zip file, hardcoded
-        final String keyFileUrl = EndPoints.getBaseUrl() + "VocabimateKeyServer/webapi/keys/getKey?videoId=" + model.getVideoId();
-        String videoId = HLSUtils.getVideoIdFromUrl(serverFileUrl);
-        if(TextUtils.isEmpty(videoId)){
-            Toast.makeText(activity, "Video id not found", Toast.LENGTH_SHORT).show();
-            return;
-        }
-        // execute this when the downloader must be fired
-        final File sourceZipFile = new File(new Utils(activity).getStorageDirectoryZips() + videoId);
-        String fileNameWithOutExt = FilenameUtils.removeExtension(sourceZipFile.getName());
-        final File targetDirectory = new File(new Utils(activity).getStorageDirectoryExtracts() + fileNameWithOutExt);
-        targetDirectory.mkdir();
-
-
-
-        FileDownloadModel fileDownloadModel = new FileDownloadModel()
-                .setVideoId(model.getVideoId())
-                .setVideoTitle(model.getName())
-                .setToken(TokenManager.getToken())
-                .setLink("https://drmdemo-94ea7.firebaseapp.com/arc.zip") // todo hard code
-//                .setLink(serverFileUrl)
-                .setFilePath(sourceZipFile.getAbsolutePath())
-                .setTargetDirectoryPath(targetDirectory.getAbsolutePath())
-                .setCallBackIntent("progress_callback");
-
-        Intent intent = new Intent(activity, DownloaderService.class);
-        Bundle bundle = new Bundle();
-        bundle.putSerializable("fileDownloadModel", fileDownloadModel);
-//        bundle.putString("videoId", model.getVideoId());
-//        bundle.putString("videoTitle", model.getName());
-//        bundle.putString("token", TokenManager.getToken());
-//        bundle.putString("link", "https://drmdemo-94ea7.firebaseapp.com/arc.zip");
-//        bundle.putString("filePath", sourceZipFile.getAbsolutePath());
-//        bundle.putString("targetDirectoryPath", targetDirectory.getAbsolutePath());
-//        bundle.putString("CallbackString", "progress_callback");
-        startService(intent.putExtras(bundle)); // todo uncomment
-
-//        final DownloadTask downloadTask = new DownloadTask(activity, TokenManager.getToken(), sourceZipFile.getAbsolutePath(), new DownloadTask.DownloadTaskListener() {
-//            @Override
-//            public void onFileDownload() {
-//                new ZipHelper.ZipTask(activity, new ZipHelper.ZipTaskListener() {
-//                    @Override
-//                    public void onUnzipped(String fileToPlay) {
-//                        Log.d(TAG, "onUnzipped: " + fileToPlay);
-//                        ivDownload.setImageResource(R.mipmap.ic_download_complete);
-//                    }
-//                }).execute(sourceZipFile, targetDirectory);
-//            }
-//        });
-//        downloadTask.execute(serverFileUrl);
-//
-        final File tempKeyFile = new File(new Utils(activity).getTempDirectoryExtracts() + videoId);
-        final DownloadTask keyTask = new DownloadTask(activity, "KEY", TokenManager.getToken(), tempKeyFile.getAbsolutePath(), new DownloadTask.DownloadTaskListener() {
-            @Override
-            public void onFileDownload() {
-                KeyWriter writer = new KeyWriter(activity);
-                writer.writeByteToFile(writer.readByteToFileUnencryptedData(keyFileUrl, tempKeyFile), keyFileUrl);
-                writer.deleteTempKey(tempKeyFile);
-            }
-        });
-        keyTask.execute(keyFileUrl);
-    }
-
-    @Override
-    public void onDeleteClicked(File directory, ImageView ivDownload) {
-        try {
-            FileUtils.deleteDirectory(directory);
-            ivDownload.setImageResource(R.drawable.ic_file_download_black_24dp);
-        } catch (IOException e) {
-            e.printStackTrace();
-            Log.d(TAG, "onDeleteClicked: unable to delete directory" + e.getLocalizedMessage());
-        }
-    }
-
-
-    private TextView mTextMessage;
 
     private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
             = new BottomNavigationView.OnNavigationItemSelectedListener() {
 
         @Override
         public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-            Intent intent = new Intent(activity, DownloaderService.class);
+            Fragment mFragment;
             switch (item.getItemId()) {
                 case R.id.navigation_home:
-                    mTextMessage.setText(R.string.title_home);
+//                    bottomNavigationView.setItemBackgroundResource(R.color.md_teal_800);
+                    mFragment = new HomeFragment();
+                    fragmentManager.beginTransaction().replace(R.id.fragment_container, mFragment).commit();
                     return true;
-                case R.id.navigation_dashboard:
-                    mTextMessage.setText(R.string.title_dashboard);
+                case R.id.navigation_library:
+//                    bottomNavigationView.setItemBackgroundResource(R.color.md_deep_orange_800);
+                    mFragment = DemoFragment.newInstance(null, null);
+                    fragmentManager.beginTransaction().replace(R.id.fragment_container, mFragment).commit();
                     return true;
 //                case R.id.navigation_notifications:
 //                    mTextMessage.setText(R.string.title_notifications);
 //                    return true;
-                case R.id.navigation_library:
-                    mTextMessage.setText(R.string.title_library);
-                    stopService(intent);
-                    return true;
-                case R.id.navigation_others:
-                    mTextMessage.setText(R.string.title_others);
+                case R.id.navigation_dashboard:
+//                    bottomNavigationView.setItemBackgroundResource(R.color.md_pink_800);
                     return true;
+//                case R.id.navigation_others:
+//                    return true;
             }
             return false;
         }
@@ -423,5 +97,4 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
     };
 
 
-
 }
diff --git a/demo/src/main/res/drawable/bnv_tab_item_foreground.xml b/demo/src/main/res/drawable/bnv_tab_item_foreground.xml
new file mode 100644
index 0000000000..58dd9e38fd
--- /dev/null
+++ b/demo/src/main/res/drawable/bnv_tab_item_foreground.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@android:color/holo_blue_dark" android:state_checked="true" />
+    <item android:color="@color/md_white" />
+</selector>
\ No newline at end of file
diff --git a/demo/src/main/res/drawable/ic_video_library_black_24dp.xml b/demo/src/main/res/drawable/ic_video_library_black_24dp.xml
new file mode 100644
index 0000000000..f808aee583
--- /dev/null
+++ b/demo/src/main/res/drawable/ic_video_library_black_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M4,6L2,6v14c0,1.1 0.9,2 2,2h14v-2L4,20L4,6zM20,2L8,2c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2L22,4c0,-1.1 -0.9,-2 -2,-2zM12,14.5v-9l6,4.5 -6,4.5z"/>
+</vector>
diff --git a/demo/src/main/res/layout/activity_home.xml b/demo/src/main/res/layout/activity_home.xml
index 76747079ed..060bbd433f 100644
--- a/demo/src/main/res/layout/activity_home.xml
+++ b/demo/src/main/res/layout/activity_home.xml
@@ -8,25 +8,21 @@
     android:orientation="vertical"
     tools:context="com.novo.main.HomeActivity">
 
+    <Button
+        android:id="@+id/btnLogin"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="right"
+        android:layout_marginRight="4dp"
+        android:layout_marginTop="4dp"
+        android:text="Login"
+        android:textAllCaps="false" />
+
     <FrameLayout
-        android:id="@+id/content"
+        android:id="@+id/fragment_container"
         android:layout_width="match_parent"
         android:layout_height="0dp"
-        android:layout_weight="1">
-
-        <TextView
-            android:id="@+id/message"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginBottom="@dimen/activity_vertical_margin"
-            android:layout_marginLeft="@dimen/activity_horizontal_margin"
-            android:layout_marginRight="@dimen/activity_horizontal_margin"
-            android:layout_marginTop="@dimen/activity_vertical_margin"
-            android:text="@string/title_home" />
-
-        <include layout="@layout/activity_main" />
-
-    </FrameLayout>
+        android:layout_weight="1" />
 
     <android.support.design.widget.BottomNavigationView
         android:id="@+id/navigation"
@@ -35,5 +31,8 @@
         android:layout_gravity="bottom"
         android:background="?android:attr/windowBackground"
         app:menu="@menu/navigation" />
+        <!--app:itemBackground="@color/md_teal_800"-->
+        <!--app:itemIconTint="@drawable/bnv_tab_item_foreground"-->
+        <!--app:itemTextColor="@drawable/bnv_tab_item_foreground"-->
 
 </LinearLayout>
diff --git a/demo/src/main/res/layout/activity_main.xml b/demo/src/main/res/layout/activity_main.xml
deleted file mode 100644
index 1c385fb18e..0000000000
--- a/demo/src/main/res/layout/activity_main.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:gravity="center_horizontal"
-    android:orientation="vertical"
-    tools:context=".main.MainActivity">
-
-    <Button
-        android:id="@+id/btnLogin"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="right"
-        android:layout_marginRight="4dp"
-        android:layout_marginTop="4dp"
-        android:text="Login"
-        android:textAllCaps="false" />
-
-    <Button
-        android:id="@+id/btnOpen"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="32dp"
-        android:visibility="gone"
-        android:layout_marginRight="32dp"
-        android:text="Encrypted stream - Open"
-        android:textAllCaps="false" />
-
-    <Button
-        android:id="@+id/btnRestricted"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="32dp"
-        android:layout_marginRight="32dp"
-        android:visibility="gone"
-        android:layout_marginTop="16dp"
-        android:text="Encrypted stream - Token Auth"
-        android:textAllCaps="false" />
-
-
-    <GridView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:numColumns="2"
-        android:id="@+id/lvAll"></GridView>
-
-</LinearLayout>
diff --git a/demo/src/main/res/layout/fragment_demo.xml b/demo/src/main/res/layout/fragment_demo.xml
new file mode 100644
index 0000000000..e339b42348
--- /dev/null
+++ b/demo/src/main/res/layout/fragment_demo.xml
@@ -0,0 +1,13 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.novo.fragments.DemoFragment">
+
+    <GridView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:numColumns="2"
+        android:id="@+id/lvAll"/>
+
+</FrameLayout>
diff --git a/demo/src/main/res/layout/fragment_home.xml b/demo/src/main/res/layout/fragment_home.xml
new file mode 100644
index 0000000000..17ff30e59b
--- /dev/null
+++ b/demo/src/main/res/layout/fragment_home.xml
@@ -0,0 +1,26 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.novo.fragments.HomeFragment">
+
+    <RelativeLayout
+        android:id="@+id/rl_view_pager"
+        android:layout_width="match_parent"
+        android:layout_height="175dp">
+
+        <android.support.v4.view.ViewPager
+            android:id="@+id/pager"
+            android:layout_width="match_parent"
+            android:layout_height="400dp"
+            android:layout_alignParentTop="true" />
+
+        <me.relex.circleindicator.CircleIndicator
+            android:id="@+id/indicator"
+            android:layout_width="match_parent"
+            android:layout_height="48dp"
+            android:layout_alignParentBottom="true" />
+
+    </RelativeLayout>
+
+</FrameLayout>
diff --git a/demo/src/main/res/layout/view_pager_fragment.xml b/demo/src/main/res/layout/view_pager_fragment.xml
new file mode 100644
index 0000000000..3f0e68434a
--- /dev/null
+++ b/demo/src/main/res/layout/view_pager_fragment.xml
@@ -0,0 +1,11 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:id="@+id/vp_image"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scaleType="centerCrop"
+        android:adjustViewBounds="true"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/menu/navigation.xml b/demo/src/main/res/menu/navigation.xml
index 8417ef9131..5d1e13098a 100644
--- a/demo/src/main/res/menu/navigation.xml
+++ b/demo/src/main/res/menu/navigation.xml
@@ -1,25 +1,32 @@
 <?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
 
     <item
         android:id="@+id/navigation_home"
         android:icon="@drawable/ic_home_black_24dp"
-        android:title="@string/title_home" />
-
-    <item
-        android:id="@+id/navigation_dashboard"
-        android:icon="@drawable/ic_dashboard_black_24dp"
-        android:title="@string/title_dashboard" />
+        android:title="@string/title_home"
+        app:showAsAction="always|withText"/>
 
     <item
         android:id="@+id/navigation_library"
-        android:icon="@drawable/ic_dashboard_black_24dp"
-        android:title="@string/title_library" />
+        android:icon="@drawable/ic_video_library_black_24dp"
+        android:title="@string/title_library"
+        app:showAsAction="always|withText"/>
 
     <item
-        android:id="@+id/navigation_others"
+        android:id="@+id/navigation_dashboard"
         android:icon="@drawable/ic_dashboard_black_24dp"
-        android:title="@string/title_others" />
+        android:title="@string/title_dashboard"
+        app:showAsAction="always|withText"/>
+
+
+
+    <!--<item-->
+        <!--android:id="@+id/navigation_others"-->
+        <!--android:icon="@drawable/ic_dashboard_black_24dp"-->
+        <!--android:title="@string/title_others"-->
+        <!--app:showAsAction="always|withText"/>-->
 
 
 </menu>
diff --git a/demo/src/main/res/values/strings.xml b/demo/src/main/res/values/strings.xml
index 66f71f1361..c607429372 100644
--- a/demo/src/main/res/values/strings.xml
+++ b/demo/src/main/res/values/strings.xml
@@ -73,4 +73,7 @@
     <string name="download">Download</string>
     <string name="do_you_want_to_download">Do you want to download this video?</string>
 
+    <!-- TODO: Remove or change this placeholder text -->
+    <string name="hello_blank_fragment">Hello blank fragment</string>
+
 </resources>
diff --git a/demo/src/main/res/values/styles.xml b/demo/src/main/res/values/styles.xml
index 6eb4c0f8a1..a818c02cbb 100644
--- a/demo/src/main/res/values/styles.xml
+++ b/demo/src/main/res/values/styles.xml
@@ -16,7 +16,7 @@
 
 <resources xmlns:android="http://schemas.android.com/apk/res/android">
 
-  <style name="PlayerTheme" parent="android:Theme.Holo">
+  <style name="PlayerTheme" parent="AppTheme">
     <item name="android:windowNoTitle">true</item>
     <item name="android:windowBackground">@android:color/black</item>
   </style>
