diff --git a/RELEASENOTES.md b/RELEASENOTES.md
index c6f3c289b8..93c3fd2387 100644
--- a/RELEASENOTES.md
+++ b/RELEASENOTES.md
@@ -1,10 +1,11 @@
 # Release notes #
 
-### Current dev branch (from r1.5.1) ###
+### r1.5.2 ###
 
-* [Nothing yet]
+* MPEG-TS/HLS: Fix frame drops playing H265 video.
+* SmoothStreaming: Fix parsing of ProtectionHeader.
 
-### r1.5.0 ###
+### r1.5.1 ###
 
 * Enable smooth frame release by default.
 * Added OkHttpDataSource extension.
diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
index 6dd5b055e7..e4c615999a 100644
--- a/demo/src/main/AndroidManifest.xml
+++ b/demo/src/main/AndroidManifest.xml
@@ -16,8 +16,8 @@
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.google.android.exoplayer.demo"
-    android:versionCode="1501"
-    android:versionName="1.5.1"
+    android:versionCode="1502"
+    android:versionName="1.5.2"
     android:theme="@style/RootTheme">
 
   <uses-permission android:name="android.permission.INTERNET"/>
diff --git a/demo_misc/vp9_opus_sw/src/main/AndroidManifest.xml b/demo_misc/vp9_opus_sw/src/main/AndroidManifest.xml
index 05f231f072..02ac98fb54 100644
--- a/demo_misc/vp9_opus_sw/src/main/AndroidManifest.xml
+++ b/demo_misc/vp9_opus_sw/src/main/AndroidManifest.xml
@@ -17,8 +17,8 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     package="com.google.android.exoplayer.demo.vp9opus"
-    android:versionCode="1501"
-    android:versionName="1.5.1"
+    android:versionCode="1502"
+    android:versionName="1.5.2"
     android:theme="@style/RootTheme">
 
   <uses-permission android:name="android.permission.INTERNET"/>
diff --git a/library/build.gradle b/library/build.gradle
index a68596bad6..e7deac79bf 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -77,7 +77,7 @@ publish {
     userOrg = 'google'
     groupId = 'com.google.android.exoplayer'
     artifactId = 'exoplayer'
-    version = 'r1.5.1'
+    version = 'r1.5.2'
     description = 'The ExoPlayer library.'
     website = 'https://github.com/google/ExoPlayer'
 }
diff --git a/library/src/androidTest/assets/smoothstreaming/sample_ismc_1 b/library/src/androidTest/assets/smoothstreaming/sample_ismc_1
new file mode 100755
index 0000000000..25a37d65b4
--- /dev/null
+++ b/library/src/androidTest/assets/smoothstreaming/sample_ismc_1
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<SmoothStreamingMedia MajorVersion="2" MinorVersion="0"
+    Duration="2300000000" TimeScale="10000000">
+    <Protection>
+        <ProtectionHeader SystemID="9A04F079-9840-4286-AB92-E65BE0885F95">
+            <!-- Base 64-Encoded data omitted for clarity -->
+        </ProtectionHeader>
+    </Protection>
+
+    <StreamIndex
+        Type = "video"
+        Chunks = "115"
+        QualityLevels = "2"
+        MaxWidth = "720"
+        MaxHeight = "480"
+        TimeScale="10000000"
+        Url =
+            "QualityLevels({bitrate},{CustomAttributes})/Fragments(video={start_time})"
+        Name = "video"
+        >
+        <QualityLevel Index="0" Bitrate="1536000" FourCC="WVC1"
+            MaxWidth="720" MaxHeight="480"
+            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840"
+            >
+            <CustomAttributes>
+                <Attribute Name = "Compatibility" Value = "Desktop" />
+            </CustomAttributes>
+        </QualityLevel>
+
+
+        <QualityLevel Index="5" Bitrate="307200" FourCC="WVC1"
+            MaxWidth="720" MaxHeight="480"
+            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840">
+            <CustomAttributes>
+                <Attribute Name = "Compatibility" Value = "Handheld" />
+            </CustomAttributes>
+        </QualityLevel>
+
+
+        <c t = "0" d = "19680000" />
+        <c n = "1" t = "19680000" d="8980000" />
+
+    </StreamIndex>
+</SmoothStreamingMedia>
+
diff --git a/library/src/androidTest/assets/smoothstreaming/sample_ismc_2 b/library/src/androidTest/assets/smoothstreaming/sample_ismc_2
new file mode 100755
index 0000000000..5875a18183
--- /dev/null
+++ b/library/src/androidTest/assets/smoothstreaming/sample_ismc_2
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<SmoothStreamingMedia MajorVersion="2" MinorVersion="0"
+    Duration="2300000000" TimeScale="10000000">
+    <Protection>
+        <ProtectionHeader SystemID="{9A04F079-9840-4286-AB92-E65BE0885F95}">
+            <!-- Base 64-Encoded data omitted for clarity -->
+        </ProtectionHeader>
+    </Protection>
+
+    <StreamIndex
+        Type = "video"
+        Chunks = "115"
+        QualityLevels = "2"
+        MaxWidth = "720"
+        MaxHeight = "480"
+        TimeScale="10000000"
+        Url =
+            "QualityLevels({bitrate},{CustomAttributes})/Fragments(video={start_time})"
+        Name = "video"
+        >
+        <QualityLevel Index="0" Bitrate="1536000" FourCC="WVC1"
+            MaxWidth="720" MaxHeight="480"
+            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840"
+            >
+            <CustomAttributes>
+                <Attribute Name = "Compatibility" Value = "Desktop" />
+            </CustomAttributes>
+        </QualityLevel>
+
+
+        <QualityLevel Index="5" Bitrate="307200" FourCC="WVC1"
+            MaxWidth="720" MaxHeight="480"
+            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840">
+            <CustomAttributes>
+                <Attribute Name = "Compatibility" Value = "Handheld" />
+            </CustomAttributes>
+        </QualityLevel>
+
+
+        <c t = "0" d = "19680000" />
+        <c n = "1" t = "19680000" d="8980000" />
+
+    </StreamIndex>
+</SmoothStreamingMedia>
+
diff --git a/library/src/androidTest/java/com/google/android/exoplayer/smoothstreaming/SmoothStreamingManifestParserTest.java b/library/src/androidTest/java/com/google/android/exoplayer/smoothstreaming/SmoothStreamingManifestParserTest.java
new file mode 100644
index 0000000000..c8bc4241fa
--- /dev/null
+++ b/library/src/androidTest/java/com/google/android/exoplayer/smoothstreaming/SmoothStreamingManifestParserTest.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.google.android.exoplayer.smoothstreaming;
+
+import android.test.InstrumentationTestCase;
+
+import java.io.IOException;
+import java.io.InputStream;
+
+/**
+ * Unit tests for {@link SmoothStreamingManifestParser}.
+ */
+public class SmoothStreamingManifestParserTest extends InstrumentationTestCase {
+
+    private static final String SAMPLE_ISMC_1 = "smoothstreaming/sample_ismc_1";
+    private static final String SAMPLE_ISMC_2 = "smoothstreaming/sample_ismc_2";
+
+    public void testParseSmoothStreamingManifest() throws IOException {
+        SmoothStreamingManifestParser parser = new SmoothStreamingManifestParser();
+        // Simple test to ensure that the sample manifest parses without throwing any exceptions.
+        // SystemID UUID in the manifest is not wrapped in braces.
+        InputStream inputStream1 =
+                getInstrumentation().getContext().getResources().getAssets().open(SAMPLE_ISMC_1);
+        parser.parse("https://example.com/test.ismc", inputStream1);
+        // Simple test to ensure that the sample manifest parses without throwing any exceptions.
+        // SystemID UUID in the manifest is wrapped in braces.
+        InputStream inputStream2 =
+                getInstrumentation().getContext().getResources().getAssets().open(SAMPLE_ISMC_2);
+        parser.parse("https://example.com/test.ismc", inputStream2);
+    }
+}
diff --git a/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java b/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java
index aad604859e..54640a3d38 100644
--- a/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java
+++ b/library/src/main/java/com/google/android/exoplayer/ExoPlayerLibraryInfo.java
@@ -23,7 +23,7 @@
   /**
    * The version of the library, expressed as a string.
    */
-  public static final String VERSION = "1.5.1";
+  public static final String VERSION = "1.5.2";
 
   /**
    * The version of the library, expressed as an integer.
@@ -31,7 +31,7 @@
    * Three digits are used for each component of {@link #VERSION}. For example "1.2.3" has the
    * corresponding integer version 001002003.
    */
-  public static final int VERSION_INT = 001005001;
+  public static final int VERSION_INT = 001005002;
 
   /**
    * Whether the library was compiled with {@link com.google.android.exoplayer.util.Assertions}
diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/ts/H265Reader.java b/library/src/main/java/com/google/android/exoplayer/extractor/ts/H265Reader.java
index 0927ffa3b4..a4429ab90c 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/ts/H265Reader.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/ts/H265Reader.java
@@ -120,7 +120,7 @@ public void consume(ParsableByteArray data, long pesTimeUs, boolean startOfPacke
 
           // Indicate the start of the next NAL unit.
           int nalUnitType = NalUnitUtil.getH265NalUnitType(dataArray, nalUnitOffset);
-          startNalUnit(absolutePosition, bytesWrittenPastPosition, nalUnitType);
+          startNalUnit(absolutePosition, bytesWrittenPastPosition, nalUnitType, pesTimeUs);
           // Continue scanning the data.
           offset = nalUnitOffset + 3;
         } else {
@@ -136,7 +136,7 @@ public void packetFinished() {
     // Do nothing.
   }
 
-  private void startNalUnit(long position, int offset, int nalUnitType) {
+  private void startNalUnit(long position, int offset, int nalUnitType, long pesTimeUs) {
     if (!hasOutputFormat) {
       vps.startNalUnit(nalUnitType);
       sps.startNalUnit(nalUnitType);
@@ -144,7 +144,7 @@ private void startNalUnit(long position, int offset, int nalUnitType) {
     }
     prefixSei.startNalUnit(nalUnitType);
     suffixSei.startNalUnit(nalUnitType);
-    sampleReader.startNalUnit(position, offset, nalUnitType);
+    sampleReader.startNalUnit(position, offset, nalUnitType, pesTimeUs);
   }
 
   private void nalUnitData(byte[] dataArray, int offset, int limit) {
@@ -161,7 +161,7 @@ private void nalUnitData(byte[] dataArray, int offset, int limit) {
 
   private void nalUnitEnd(long position, int offset, int discardPadding, long pesTimeUs) {
     if (hasOutputFormat) {
-      sampleReader.endNalUnit(position, offset, pesTimeUs);
+      sampleReader.endNalUnit(position, offset);
     } else {
       vps.endNalUnit(discardPadding);
       sps.endNalUnit(discardPadding);
@@ -377,6 +377,7 @@ private static void skipShortTermRefPicSets(ParsableBitArray bitArray) {
     private long nalUnitStartPosition;
     private boolean nalUnitHasKeyframeData;
     private int nalUnitBytesRead;
+    private long nalUnitTimeUs;
     private boolean lookingForFirstSliceFlag;
     private boolean firstSliceFlag;
 
@@ -396,8 +397,9 @@ public void reset() {
       readingSample = false;
     }
 
-    public void startNalUnit(long position, int offset, int nalUnitType) {
+    public void startNalUnit(long position, int offset, int nalUnitType, long pesTimeUs) {
       firstSliceFlag = false;
+      nalUnitTimeUs = pesTimeUs;
       nalUnitBytesRead = 0;
       nalUnitStartPosition = position;
       // Flush the previous sample when reading a non-VCL NAL unit.
@@ -422,7 +424,7 @@ public void readNalUnitData(byte[] data, int offset, int limit) {
       }
     }
 
-    public void endNalUnit(long position, int offset, long timeUs) {
+    public void endNalUnit(long position, int offset) {
       if (firstSliceFlag) {
         // If the NAL unit ending is the start of a new sample, output the previous one.
         if (readingSample) {
@@ -430,7 +432,7 @@ public void endNalUnit(long position, int offset, long timeUs) {
           outputSample(offset + nalUnitLength);
         }
         samplePosition = nalUnitStartPosition;
-        sampleTimeUs = timeUs;
+        sampleTimeUs = nalUnitTimeUs;
         readingSample = true;
         sampleIsKeyframe = nalUnitHasKeyframeData;
       }
diff --git a/library/src/main/java/com/google/android/exoplayer/smoothstreaming/SmoothStreamingManifestParser.java b/library/src/main/java/com/google/android/exoplayer/smoothstreaming/SmoothStreamingManifestParser.java
index a0bc0e7926..ee40743623 100644
--- a/library/src/main/java/com/google/android/exoplayer/smoothstreaming/SmoothStreamingManifestParser.java
+++ b/library/src/main/java/com/google/android/exoplayer/smoothstreaming/SmoothStreamingManifestParser.java
@@ -404,6 +404,7 @@ public void parseStartTag(XmlPullParser parser) {
       if (TAG_PROTECTION_HEADER.equals(parser.getName())) {
         inProtectionHeader = true;
         String uuidString = parser.getAttributeValue(null, KEY_SYSTEM_ID);
+        uuidString = stripCurlyBraces(uuidString);
         uuid = UUID.fromString(uuidString);
       }
     }
@@ -427,6 +428,12 @@ public Object build() {
       return new ProtectionElement(uuid, PsshAtomUtil.buildPsshAtom(uuid, initData));
     }
 
+    private static String stripCurlyBraces(String uuidString) {
+      if (uuidString.charAt(0) == '{' && uuidString.charAt(uuidString.length() - 1) == '}') {
+        uuidString = uuidString.substring(1, uuidString.length() - 1);
+      }
+      return uuidString;
+    }
   }
 
   private static class StreamElementParser extends ElementParser {
diff --git a/playbacktests/src/main/AndroidManifest.xml b/playbacktests/src/main/AndroidManifest.xml
index d39b180ad8..ee8184da6d 100644
--- a/playbacktests/src/main/AndroidManifest.xml
+++ b/playbacktests/src/main/AndroidManifest.xml
@@ -17,8 +17,8 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     package="com.google.android.exoplayer.playbacktests"
-    android:versionCode="1501"
-    android:versionName="1.5.1">
+    android:versionCode="1502"
+    android:versionName="1.5.2">
 
   <uses-permission android:name="android.permission.INTERNET"/>
   <uses-permission android:name="android.permission.WAKE_LOCK"/>
