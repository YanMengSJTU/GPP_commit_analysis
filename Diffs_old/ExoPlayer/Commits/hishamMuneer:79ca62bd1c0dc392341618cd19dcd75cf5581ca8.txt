diff --git a/demo/build.gradle b/demo/build.gradle
index e797e7e3b5..382d27e463 100644
--- a/demo/build.gradle
+++ b/demo/build.gradle
@@ -22,6 +22,7 @@ android {
         minSdkVersion 16
         targetSdkVersion project.ext.targetSdkVersion
         applicationId = "com.novo.player"
+        vectorDrawables.useSupportLibrary = true
     }
 
     buildTypes {
@@ -52,14 +53,17 @@ dependencies {
     compile project(modulePrefix + 'library-hls')
     compile project(modulePrefix + 'library-smoothstreaming')
     compile project(modulePrefix + 'library-ui')
-    compile 'commons-io:commons-io:2.5'
-    compile 'com.google.code.gson:gson:2.8.1'
-    compile 'com.github.bumptech.glide:glide:4.0.0'
-    compile 'com.android.support:support-v4:25.4.0'
-    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
     withExtensionsCompile project(path: modulePrefix + 'extension-ffmpeg')
     withExtensionsCompile project(path: modulePrefix + 'extension-flac')
     withExtensionsCompile project(path: modulePrefix + 'extension-ima')
     withExtensionsCompile project(path: modulePrefix + 'extension-opus')
     withExtensionsCompile project(path: modulePrefix + 'extension-vp9')
+    compile 'commons-io:commons-io:2.5'
+    compile 'com.google.code.gson:gson:2.8.1'
+    compile 'com.github.bumptech.glide:glide:4.0.0'
+    compile 'com.android.support:support-v4:25.4.0'
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    compile 'com.android.support:design:25.3.1'
+    compile 'com.android.support:support-vector-drawable:25.3.1'
+    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
 }
diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
index 5e549f895a..5caa91f39c 100644
--- a/demo/src/main/AndroidManifest.xml
+++ b/demo/src/main/AndroidManifest.xml
@@ -18,91 +18,104 @@
     android:versionCode="2501"
     android:versionName="2.5.1">
 
-  <uses-sdk
-      android:minSdkVersion="16"
-      android:targetSdkVersion="25" />
-
-  <uses-permission android:name="android.permission.INTERNET" />
-  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
-  <uses-permission android:name="android.permission.WAKE_LOCK" />
-
-  <uses-feature
-      android:name="android.software.leanback"
-      android:required="false" />
-  <uses-feature
-      android:name="android.hardware.touchscreen"
-      android:required="false" />
-
-  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-  <uses-permission android:name="android.permission.READ_PHONE_STATE" />
-  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-
-  <application
-      android:name="com.novo.main.DemoApplication"
-      android:allowBackup="false"
-      android:banner="@drawable/ic_banner"
-      android:icon="@mipmap/ic_launcher"
-      android:label="@string/application_name"
-      android:largeHeap="true">
-    <activity android:name="com.novo.main.MainActivity"
-        android:theme="@android:style/Theme.Holo.Light">
-      <intent-filter>
-        <action android:name="android.intent.action.MAIN" />
-
-        <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
-        <category android:name="android.intent.category.LAUNCHER" />
-      </intent-filter>
-    </activity>
-    <activity
-        android:name="com.novo.main.SampleChooserActivity"
-        android:configChanges="keyboardHidden"
-        android:label="@string/application_name">
-      <!--<intent-filter>-->
-      <!--<action android:name="android.intent.action.MAIN" />-->
-
-      <!--<category android:name="android.intent.category.LAUNCHER" />-->
-      <!--<category android:name="android.intent.category.LEANBACK_LAUNCHER" />-->
-      <!--</intent-filter>-->
-      <intent-filter>
-        <action android:name="android.intent.action.VIEW" />
-
-        <category android:name="android.intent.category.DEFAULT" />
-        <category android:name="android.intent.category.BROWSABLE" />
-
-        <data android:scheme="http" />
-        <data android:scheme="https" />
-        <data android:scheme="content" />
-        <data android:scheme="asset" />
-        <data android:scheme="file" />
-        <data android:host="*" />
-        <data android:pathPattern=".*\\.exolist\\.json" />
-      </intent-filter>
-    </activity>
-    <activity
-        android:name="com.novo.main.PlayerActivity"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize|uiMode"
+    <uses-sdk
+        android:minSdkVersion="16"
+        android:targetSdkVersion="25" />
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.WAKE_LOCK" />
+
+    <uses-feature
+        android:name="android.software.leanback"
+        android:required="false" />
+    <uses-feature
+        android:name="android.hardware.touchscreen"
+        android:required="false" />
+
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+
+    <application
+        android:name=".main.DemoApplication"
+        android:allowBackup="false"
+        android:banner="@drawable/ic_banner"
+        android:icon="@mipmap/ic_launcher"
         android:label="@string/application_name"
-        android:launchMode="singleTop"
-        android:theme="@style/PlayerTheme">
-      <intent-filter>
-        <action android:name="com.google.android.exoplayer.demo.action.VIEW" />
-
-        <category android:name="android.intent.category.DEFAULT" />
-
-        <data android:scheme="http" />
-        <data android:scheme="https" />
-        <data android:scheme="content" />
-        <data android:scheme="asset" />
-        <data android:scheme="file" />
-      </intent-filter>
-      <intent-filter>
-        <action android:name="com.google.android.exoplayer.demo.action.VIEW_LIST" />
-
-        <category android:name="android.intent.category.DEFAULT" />
-      </intent-filter>
-    </activity>
-    <activity android:name="com.novo.main.LoginActivity"
-        android:theme="@android:style/Theme.Holo.Light"></activity>
-  </application>
+        android:largeHeap="true"
+        android:theme="@style/AppTheme">
+        <activity
+            android:name=".main.HomeActivity"
+            android:label="@string/application_name">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".main.MainActivity"
+            android:theme="@android:style/Theme.Holo.Light"></activity>
+        <activity
+            android:name=".main.SampleChooserActivity"
+            android:configChanges="keyboardHidden"
+            android:label="@string/application_name">
+
+            <!-- <intent-filter> -->
+            <!-- <action android:name="android.intent.action.MAIN" /> -->
+
+
+            <!-- <category android:name="android.intent.category.LAUNCHER" /> -->
+            <!-- <category android:name="android.intent.category.LEANBACK_LAUNCHER" /> -->
+            <!-- </intent-filter> -->
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
+
+                <data android:scheme="http" />
+                <data android:scheme="https" />
+                <data android:scheme="content" />
+                <data android:scheme="asset" />
+                <data android:scheme="file" />
+                <data android:host="*" />
+                <data android:pathPattern=".*\\.exolist\\.json" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".main.PlayerActivity"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize|uiMode"
+            android:label="@string/application_name"
+            android:launchMode="singleTop"
+            android:theme="@style/PlayerTheme">
+            <intent-filter>
+                <action android:name="com.google.android.exoplayer.demo.action.VIEW" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+
+                <data android:scheme="http" />
+                <data android:scheme="https" />
+                <data android:scheme="content" />
+                <data android:scheme="asset" />
+                <data android:scheme="file" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.google.android.exoplayer.demo.action.VIEW_LIST" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".main.LoginActivity"
+            android:theme="@android:style/Theme.Holo.Light" />
+
+        <service
+            android:name=".services.DownloaderService"
+            android:enabled="true"
+            android:exported="false"></service>
+    </application>
 
 </manifest>
\ No newline at end of file
diff --git a/demo/src/main/java/com/novo/adapters/VideoAdapter.java b/demo/src/main/java/com/novo/adapters/VideoAdapter.java
index fd29304886..03f21a48b5 100644
--- a/demo/src/main/java/com/novo/adapters/VideoAdapter.java
+++ b/demo/src/main/java/com/novo/adapters/VideoAdapter.java
@@ -56,6 +56,12 @@ public VideoAdapter(@NonNull Activity activity, @LayoutRes int resource, @NonNul
         this.items = objects;
     }
 
+    @Nullable
+    @Override
+    public VideoModel getItem(int position) {
+        return super.getItem(position);
+    }
+
     @NonNull
     @Override
     public View getView(final int position, @Nullable View convertView, @NonNull ViewGroup parent) {
diff --git a/demo/src/main/java/com/novo/main/HomeActivity.java b/demo/src/main/java/com/novo/main/HomeActivity.java
new file mode 100644
index 0000000000..e567952137
--- /dev/null
+++ b/demo/src/main/java/com/novo/main/HomeActivity.java
@@ -0,0 +1,375 @@
+package com.novo.main;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.design.widget.BottomNavigationView;
+import android.support.v7.app.AppCompatActivity;
+import android.text.TextUtils;
+import android.util.Log;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.GridView;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.source.hls.HLSUtils;
+import com.google.android.exoplayer2.source.hls.KeyWriter;
+import com.google.android.exoplayer2.upstream.novo.TokenManager;
+import com.google.gson.Gson;
+import com.novo.R;
+import com.novo.adapters.VideoAdapter;
+import com.novo.models.FileDownloadModel;
+import com.novo.models.VideoModel;
+import com.novo.network.DownloadTask;
+import com.novo.network.EndPoints;
+import com.novo.network.ServerHit;
+import com.novo.network.ZipHelper;
+import com.novo.services.DownloaderService;
+import com.novo.util.Utils;
+
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.novo.util.Utils.TAG;
+
+public class HomeActivity extends AppCompatActivity implements VideoAdapter.ItemListener {
+
+    private Button btnLogin;
+    private GridView lvAll;
+    private HomeActivity activity;
+    private BroadcastReceiver receiver;
+    private List<VideoModel> videoModelsList;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_home);
+        activity = HomeActivity.this;
+
+        initStuff();
+
+        mTextMessage = (TextView) findViewById(R.id.message);
+        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
+        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
+
+        // register a receiver for callbacks
+        IntentFilter filter = new IntentFilter("progress_callback");
+        receiver = new BroadcastReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                //do something based on the intent's action
+                Bundle b = intent.getExtras();
+                FileDownloadModel downloadModel = (FileDownloadModel) b.getSerializable("fileDownloadModelReturned");
+                // could be used to update a progress bar or show info somewhere in the Activity
+                Log.d(TAG, "onReceive: PROGRESS HOME: " + downloadModel.getProgress() + "%");
+
+                for (int i = 0; i < lvAll.getAdapter().getCount(); i++) {
+                    View child = lvAll.getChildAt(i);
+                    if(videoModelsList.get(i).getVideoId().equalsIgnoreCase(downloadModel.getVideoId())) {
+                        TextView tvPercentage = (TextView) child.findViewById(R.id.tvPercentage);
+                        ImageView ivDownload = (ImageView) child.findViewById(R.id.ivDownload);
+
+                        switch (downloadModel.getStatus()) {
+                            case DOWNLOADING:
+                                if (downloadModel.getProgress() == -1) {
+                                    tvPercentage.setText("Downloading...");
+                                } else {
+                                    tvPercentage.setText(downloadModel.getProgress() + "%");
+                                }
+                                break;
+                            case DOWNLOADED:
+                                tvPercentage.setText("Completed.");
+                                break;
+                            case UNZIPPING:
+                                tvPercentage.setText("Processing...");
+                                break;
+                            case UNZIPPED:
+                                tvPercentage.setText("Downloaded.");
+                                ivDownload.setImageResource(R.mipmap.ic_download_complete);
+                                break;
+                            case ERROR:
+                                tvPercentage.setText("Unable to download.");
+                                break;
+                        }
+                        break;
+                    }
+                }
+
+            }
+        };
+        registerReceiver(receiver, filter);
+    }
+
+    @Override
+    protected void onDestroy() {
+        unregisterReceiver(receiver);
+        super.onDestroy();
+    }
+
+    private void initStuff() {
+        btnLogin = (Button) findViewById(R.id.btnLogin);
+        lvAll = (GridView) findViewById(R.id.lvAll);
+        ServerHit.JSONTask task = new ServerHit.JSONTask(this, TokenManager.getToken(), "GET", null, null, new ServerHit.ServiceHitResponseListener() {
+            @Override
+            public void onDone(final String response) {
+                Log.d(TAG, "onDone: " + response);
+                videoModelsList = getVideoModelsFromResponse(response);
+                VideoAdapter adapter = new VideoAdapter(activity, R.layout.row_videos_grid, videoModelsList);
+                adapter.setItemListener(activity);
+                lvAll.setAdapter(adapter);
+
+
+            }
+
+            @Override
+            public void onError(String error) {
+
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        String response = "[ {  \"thumbnail\" : \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",  \"name\" : \"Encrypted Stream - Open Policy\",  \"videoId\" : \"Gear_640x360_750k_open\"}, {  \"thumbnail\" : \"http://35.154.11.202/VocabimateContentServer/thumbnails/thumbnail.jpg\",  \"name\" : \"Encrypted Stream - Token Auth policy\",  \"videoId\" : \"Gear_640x360_750k_auth\"} ]";
+                        onDone(response);
+                    }
+                });
+
+
+            }
+        });
+
+        String url = EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/fetchAll";
+        task.execute(url);
+
+        btnLogin.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (!TextUtils.isEmpty(TokenManager.getToken())) {
+                    TokenManager.setToken(null);
+                    loginButtonTextUpdate();
+                    return;
+                }
+                Intent intent = new Intent(getApplicationContext(), LoginActivity.class);
+                Bundle bundle = new Bundle();
+                startActivity(intent.putExtras(bundle));
+            }
+        });
+
+    }
+
+    @NonNull
+    private List<VideoModel> getVideoModelsFromResponse(String response) {
+        List<VideoModel> items = new ArrayList<>();
+        if (TextUtils.isEmpty(response)) {
+            return items;
+        }
+        try {
+            JSONArray array = new JSONArray(response);
+            for (int i = 0; i < array.length(); i++) {
+                JSONObject jsonObject = array.getJSONObject(i);
+                VideoModel model = new Gson().fromJson(jsonObject.toString(), VideoModel.class);
+                items.add(model);
+            }
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+        return items;
+    }
+
+    private void playMediaFromServer(VideoModel model) {
+        ServerHit.JSONTask streamTask = new ServerHit.JSONTask(this, TokenManager.getToken(), "GET", null, null, new ServerHit.ServiceHitResponseListener() {
+            @Override
+            public void onDone(String response) {
+                try {
+                    JSONObject object = new JSONObject(response);
+                    String videoUrl = object.getString("videoUrl");
+                    // send to player
+                    Intent intent = new Intent(getApplicationContext(), PlayerActivity.class);
+                    intent.setData(Uri.parse(videoUrl));
+                    intent.setAction(PlayerActivity.ACTION_VIEW);
+                    startActivity(intent);
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            }
+
+            @Override
+            public void onError(String error) {
+
+            }
+        });
+        streamTask.execute(EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/stream?videoId=" + model.getVideoId());
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        loginButtonTextUpdate();
+//        File dir = new File(storageDirectoryZips + videoId);
+//        if(isFolderPresent(dir)){
+//            iVDownload.setImageResource(R.mipmap.ic_download_complete);
+//        } else {
+//            iVDownload.setImageResource(R.mipmap.ic_download);
+//        }
+    }
+
+    private void loginButtonTextUpdate() {
+        if (!TextUtils.isEmpty(TokenManager.getToken())) {
+            btnLogin.setText("Logout");
+        } else {
+            btnLogin.setText("Login");
+        }
+    }
+
+    @Override
+    public void onVideoPlayClicked(final VideoModel model) {
+        File dir = new File(Utils.getStorageDirectoryExtracts() + model.getVideoId());
+        File[] file = dir.listFiles();
+        if (Utils.isFolderPresent(dir)) {
+            // trying to find my file
+            Log.d(TAG, "onVideoPlayClicked: " + ZipHelper.searchFile(file, null));
+            ZipHelper.searchFile(file, new ZipHelper.FileListener() {
+                @Override
+                public void onFileSearchComplete(boolean fileFound, String fileToPlay) {
+                    if (fileFound && !TextUtils.isEmpty(fileToPlay)) {
+                        Intent intent = new Intent(getApplicationContext(), PlayerActivity.class);
+                        intent.setData(Uri.parse(fileToPlay));
+                        intent.setAction(PlayerActivity.ACTION_VIEW);
+                        startActivity(intent);
+                    } else {
+                        Toast.makeText(activity, "Unable to play local video, playing stream.", Toast.LENGTH_SHORT).show();
+                        playMediaFromServer(model);
+                    }
+                }
+            });
+        } else { // if folder is not present locally, play via server
+            playMediaFromServer(model);
+        }
+    }
+
+    @Override
+    public void onDownloadClicked(VideoModel model, final ImageView ivDownload) {
+        String serverFileUrl = EndPoints.getBaseUrl() + "VocabimateContentServer/webapi/video/download?videoId=" + model.getVideoId();
+        // todo problem with zip file, hardcoded
+        final String keyFileUrl = EndPoints.getBaseUrl() + "VocabimateKeyServer/webapi/keys/getKey?videoId=" + model.getVideoId();
+        String videoId = HLSUtils.getVideoIdFromUrl(serverFileUrl);
+        if(TextUtils.isEmpty(videoId)){
+            Toast.makeText(activity, "Video id not found", Toast.LENGTH_SHORT).show();
+            return;
+        }
+        // execute this when the downloader must be fired
+        final File sourceZipFile = new File(Utils.getStorageDirectoryZips() + videoId);
+        String fileNameWithOutExt = FilenameUtils.removeExtension(sourceZipFile.getName());
+        final File targetDirectory = new File(Utils.getStorageDirectoryExtracts() + fileNameWithOutExt);
+        targetDirectory.mkdir();
+
+
+
+        FileDownloadModel fileDownloadModel = new FileDownloadModel()
+                .setVideoId(model.getVideoId())
+                .setVideoTitle(model.getName())
+                .setToken(TokenManager.getToken())
+//                .setLink("https://drmdemo-94ea7.firebaseapp.com/arc.zip")
+                .setLink(serverFileUrl)
+                .setFilePath(sourceZipFile.getAbsolutePath())
+                .setTargetDirectoryPath(targetDirectory.getAbsolutePath())
+                .setCallBackIntent("progress_callback");
+
+        Intent intent = new Intent(activity, DownloaderService.class);
+        Bundle bundle = new Bundle();
+        bundle.putSerializable("fileDownloadModel", fileDownloadModel);
+//        bundle.putString("videoId", model.getVideoId());
+//        bundle.putString("videoTitle", model.getName());
+//        bundle.putString("token", TokenManager.getToken());
+//        bundle.putString("link", "https://drmdemo-94ea7.firebaseapp.com/arc.zip");
+//        bundle.putString("filePath", sourceZipFile.getAbsolutePath());
+//        bundle.putString("targetDirectoryPath", targetDirectory.getAbsolutePath());
+//        bundle.putString("CallbackString", "progress_callback");
+        startService(intent.putExtras(bundle));
+
+
+
+
+//        final DownloadTask downloadTask = new DownloadTask(activity, TokenManager.getToken(), sourceZipFile.getAbsolutePath(), new DownloadTask.DownloadTaskListener() {
+//            @Override
+//            public void onFileDownload() {
+//                new ZipHelper.ZipTask(activity, new ZipHelper.ZipTaskListener() {
+//                    @Override
+//                    public void onUnzipped(String fileToPlay) {
+//                        Log.d(TAG, "onUnzipped: " + fileToPlay);
+//                        ivDownload.setImageResource(R.mipmap.ic_download_complete);
+//                    }
+//                }).execute(sourceZipFile, targetDirectory);
+//            }
+//        });
+//        downloadTask.execute(serverFileUrl);
+//
+        final File tempKeyPath = new File(Utils.getTempDirectoryExtracts() + videoId);
+        final DownloadTask keyTask = new DownloadTask(activity, TokenManager.getToken(), tempKeyPath.toString(), new DownloadTask.DownloadTaskListener() {
+            @Override
+            public void onFileDownload() {
+                KeyWriter.writeByteToFile(KeyWriter.readByteToFileUnencryptedData(keyFileUrl, tempKeyPath), keyFileUrl);
+            }
+        });
+        keyTask.execute(keyFileUrl);
+    }
+
+    @Override
+    public void onDeleteClicked(File directory, ImageView ivDownload) {
+        try {
+            FileUtils.deleteDirectory(directory);
+            ivDownload.setImageResource(R.mipmap.ic_download);
+        } catch (IOException e) {
+            e.printStackTrace();
+            Log.d(TAG, "onDeleteClicked: unable to delete directory" + e.getLocalizedMessage());
+        }
+    }
+
+
+    private TextView mTextMessage;
+
+    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
+            = new BottomNavigationView.OnNavigationItemSelectedListener() {
+
+        @Override
+        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+            Intent intent = new Intent(activity, DownloaderService.class);
+            switch (item.getItemId()) {
+                case R.id.navigation_home:
+                    mTextMessage.setText(R.string.title_home);
+                    return true;
+                case R.id.navigation_dashboard:
+                    mTextMessage.setText(R.string.title_dashboard);
+                    return true;
+//                case R.id.navigation_notifications:
+//                    mTextMessage.setText(R.string.title_notifications);
+//                    return true;
+                case R.id.navigation_library:
+                    mTextMessage.setText(R.string.title_library);
+                    stopService(intent);
+                    return true;
+                case R.id.navigation_others:
+                    mTextMessage.setText(R.string.title_others);
+                    return true;
+            }
+            return false;
+        }
+
+    };
+
+
+
+}
diff --git a/demo/src/main/java/com/novo/main/MainActivity.java b/demo/src/main/java/com/novo/main/MainActivity.java
index cdd2697686..aa05e7fca7 100644
--- a/demo/src/main/java/com/novo/main/MainActivity.java
+++ b/demo/src/main/java/com/novo/main/MainActivity.java
@@ -49,13 +49,6 @@
     private Button btnLogin;
     private GridView lvAll;
 
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-        initStuff();
-    }
-
     private void initStuff() {
         btnLogin = (Button) findViewById(R.id.btnLogin);
         lvAll = (GridView) findViewById(R.id.lvAll);
diff --git a/demo/src/main/java/com/novo/models/FileDownloadModel.java b/demo/src/main/java/com/novo/models/FileDownloadModel.java
new file mode 100644
index 0000000000..6c7acfb28f
--- /dev/null
+++ b/demo/src/main/java/com/novo/models/FileDownloadModel.java
@@ -0,0 +1,108 @@
+package com.novo.models;
+
+import java.io.Serializable;
+
+/**
+ * Created by Hisham on 11/Sep/2017 - 16:25
+ */
+
+public class FileDownloadModel implements Serializable {
+
+    public enum Status {
+        DOWNLOADING, DOWNLOADED, UNZIPPING, UNZIPPED, ERROR
+    }
+
+    private String videoId;
+    private String videoTitle;
+    private String link;
+    private String token;
+    private String filePath;
+    private String targetDirectoryPath;
+    private String callBackIntent;
+    private int progress = -1;
+    /**
+     * status like unzipping, downloading... etc
+     */
+    private Status status;
+
+    public Status getStatus() {
+        return status;
+    }
+
+    public FileDownloadModel setStatus(Status status) {
+        this.status = status;
+        return this;
+    }
+
+    public int getProgress() {
+        return progress;
+    }
+
+    public FileDownloadModel setProgress(int progress) {
+        this.progress = progress;
+        return this;
+    }
+
+    public String getVideoId() {
+        return videoId;
+    }
+
+    public FileDownloadModel setVideoId(String videoId) {
+        this.videoId = videoId;
+        return this;
+    }
+
+    public String getVideoTitle() {
+        return videoTitle;
+    }
+
+    public FileDownloadModel setVideoTitle(String videoTitle) {
+        this.videoTitle = videoTitle;
+        return this;
+    }
+
+    public String getLink() {
+        return link;
+    }
+
+    public FileDownloadModel setLink(String link) {
+        this.link = link;
+        return this;
+    }
+
+    public String getToken() {
+        return token;
+    }
+
+    public FileDownloadModel setToken(String token) {
+        this.token = token;
+        return this;
+    }
+
+    public String getFilePath() {
+        return filePath;
+    }
+
+    public FileDownloadModel setFilePath(String filePath) {
+        this.filePath = filePath;
+        return this;
+    }
+
+    public String getTargetDirectoryPath() {
+        return targetDirectoryPath;
+    }
+
+    public FileDownloadModel setTargetDirectoryPath(String targetDirectoryPath) {
+        this.targetDirectoryPath = targetDirectoryPath;
+        return this;
+    }
+
+    public String getCallBackIntent() {
+        return callBackIntent;
+    }
+
+    public FileDownloadModel setCallBackIntent(String callBackIntent) {
+        this.callBackIntent = callBackIntent;
+        return this;
+    }
+}
diff --git a/demo/src/main/java/com/novo/services/DownloaderService.java b/demo/src/main/java/com/novo/services/DownloaderService.java
new file mode 100644
index 0000000000..3633fc565f
--- /dev/null
+++ b/demo/src/main/java/com/novo/services/DownloaderService.java
@@ -0,0 +1,221 @@
+package com.novo.services;
+
+import android.app.Notification;
+import android.app.PendingIntent;
+import android.app.Service;
+import android.content.Intent;
+import android.os.IBinder;
+import android.support.v7.app.NotificationCompat;
+import android.text.TextUtils;
+import android.util.Log;
+
+import com.google.android.exoplayer2.upstream.novo.TokenManager;
+import com.novo.BuildConfig;
+import com.novo.R;
+import com.novo.main.HomeActivity;
+import com.novo.models.FileDownloadModel;
+
+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipInputStream;
+
+import static com.novo.util.Utils.TAG;
+
+public class DownloaderService extends Service {
+
+    private NotificationCompat.Builder builder;
+
+    public DownloaderService() {
+    }
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        Intent notificationIntent = new Intent(this, HomeActivity.class);
+
+        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0,
+                notificationIntent, 0);
+
+        builder = new NotificationCompat.Builder(this);
+        builder.setSmallIcon(R.mipmap.ic_launcher)
+                .setContentTitle("Downloading...")
+                .setContentIntent(pendingIntent);
+//        Notification notification = builder.build();
+//        startForeground(1337, notification);
+    }
+
+    @Override
+    public int onStartCommand(Intent intent, int flags, int startId) {
+        if (intent != null && intent.hasExtra("fileDownloadModel")) {
+            final FileDownloadModel fileDownloadModel = (FileDownloadModel) intent.getSerializableExtra("fileDownloadModel");
+            new Thread(new Runnable() {
+                @Override
+                public void run() {
+                    startDownload(fileDownloadModel, builder);
+                }
+            }).start();
+        }
+        return super.onStartCommand(intent, flags, startId);
+    }
+
+    @Override
+    public IBinder onBind(Intent intent) {
+        return null;
+    }
+
+    private String startDownload(FileDownloadModel fileDownloadModel, NotificationCompat.Builder builder) {
+        InputStream input = null;
+        OutputStream output = null;
+        HttpURLConnection connection = null;
+        try {
+            URL url = new URL(fileDownloadModel.getLink());
+            connection = (HttpURLConnection) url.openConnection();
+            if (!TextUtils.isEmpty(fileDownloadModel.getToken())) {
+                connection.setRequestProperty("token", TokenManager.getToken());
+            }
+
+            connection.connect();
+            // expect HTTP 200 OK, so we don't mistakenly save error report
+            // instead of the file
+            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
+                return "Server returned HTTP " + connection.getResponseCode()
+                        + " " + connection.getResponseMessage();
+            }
+
+            // this will be useful to display download percentage
+            // might be -1: server did not report the length
+            int fileLength = connection.getContentLength();
+
+            // download the file
+            input = connection.getInputStream();
+            output = new FileOutputStream(fileDownloadModel.getFilePath());
+
+            byte data[] = new byte[4096];
+            long total = 0;
+            int count;
+            int updateCounter = 0;
+            while ((count = input.read(data)) != -1) {
+//                // allow canceling with back button
+//                if (isCancelled()) {
+//                    input.close();
+//                    return null;
+//                }
+                total += count;
+                updateCounter++; // counter for updating progress
+                if (updateCounter % 200 == 0) {
+                    updateProgressInNotification(fileDownloadModel.setStatus(FileDownloadModel.Status.DOWNLOADING), builder, fileLength, total);
+                }
+                output.write(data, 0, count);
+            }
+
+            updateProgressInNotification(fileDownloadModel.setStatus(FileDownloadModel.Status.DOWNLOADED).setProgress(100), builder, fileLength, total);
+
+            // unzipping
+            builder.setContentText("Unzipping");
+            updateProgressInNotification(fileDownloadModel.setStatus(FileDownloadModel.Status.UNZIPPING), builder, fileLength, total);
+            unzip(new File(fileDownloadModel.getFilePath()), new File(fileDownloadModel.getTargetDirectoryPath()));
+            updateProgressInNotification(fileDownloadModel.setStatus(FileDownloadModel.Status.UNZIPPED), builder, fileLength, total);
+
+        } catch (Exception e) {
+            sendCallback(fileDownloadModel.setProgress(-1).setStatus(FileDownloadModel.Status.ERROR));
+            return e.toString();
+        } finally {
+
+            // When the loop is finished, updates the notification
+            builder.setContentText("Download complete");
+            // Removes the progress bar
+//                    builder.setProgress(0,0,false);
+            stopSelf();
+            try {
+                if (output != null)
+                    output.close();
+                if (input != null)
+                    input.close();
+            } catch (IOException ignored) {
+            }
+
+            if (connection != null)
+                connection.disconnect();
+        }
+        return null;
+    }
+
+    private void unzip(File zipFile, File targetDirectory) throws IOException {
+        ZipInputStream zis = new ZipInputStream(new BufferedInputStream(new FileInputStream(zipFile)));
+        try {
+            ZipEntry ze;
+            int count;
+            byte[] buffer = new byte[8192];
+            while ((ze = zis.getNextEntry()) != null) {
+                File file = new File(targetDirectory, ze.getName());
+                File dir = ze.isDirectory() ? file : file.getParentFile();
+                if (!dir.isDirectory() && !dir.mkdirs())
+                    throw new FileNotFoundException("Failed to ensure directory: " +
+                            dir.getAbsolutePath());
+                if (ze.isDirectory())
+                    continue;
+                FileOutputStream fout = new FileOutputStream(file);
+                try {
+                    while ((count = zis.read(buffer)) != -1)
+                        fout.write(buffer, 0, count);
+                } finally {
+                    fout.close();
+                }
+            /* if time should be restored as well
+            long time = ze.getTime();
+            if (time > 0)
+                file.setLastModified(time);
+            */
+            }
+        } finally {
+            zis.close();
+            if(!BuildConfig.DEBUG) { // if not debugging - delete zip file
+                String absolutePath = zipFile.getAbsolutePath();
+                if (zipFile.delete()) {
+                    Log.d(TAG, "zip file deleted: " + absolutePath);
+                } else {
+                    Log.d(TAG, "Error deleting zip file : " + absolutePath);
+                }
+            }
+        }
+    }
+
+    int updateCounter = 0;
+
+    private void updateProgressInNotification(FileDownloadModel fileDownloadModel, NotificationCompat.Builder builder, int fileLength, long total) {
+        Log.d("counter", "startDownload: " + ++updateCounter);
+        builder.setContentTitle(fileDownloadModel.getVideoTitle());
+        // publishing the progress....
+        int percentage = -1;
+        if (fileLength > 0) {// only if total length is known
+            percentage = (int) (total * 100 / fileLength);
+            long totalMB = fileLength / (1024 * 1024);
+            long currentMB = total / (1024 * 1024);
+            builder.setProgress(100, percentage, false);
+            builder.setContentText(percentage + "%")
+                    .setContentInfo(currentMB + "MB / " + totalMB + "MB");
+        } else {
+            builder.setProgress(100, 0, true);
+        }
+        fileDownloadModel.setProgress(percentage);
+        sendCallback(fileDownloadModel);
+        startForeground(1337, builder.build());
+    }
+
+    private void sendCallback(FileDownloadModel fileDownloadModel) {
+        Intent i = new Intent(fileDownloadModel.getCallBackIntent());
+        i.putExtra("fileDownloadModelReturned", fileDownloadModel);
+        sendBroadcast(i);
+    }
+
+
+}
diff --git a/demo/src/main/res/drawable/ic_dashboard_black_24dp.xml b/demo/src/main/res/drawable/ic_dashboard_black_24dp.xml
new file mode 100644
index 0000000000..ae6a44683c
--- /dev/null
+++ b/demo/src/main/res/drawable/ic_dashboard_black_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M3,13h8L11,3L3,3v10zM3,21h8v-6L3,15v6zM13,21h8L21,11h-8v10zM13,3v6h8L21,3h-8z" />
+</vector>
diff --git a/demo/src/main/res/drawable/ic_home_black_24dp.xml b/demo/src/main/res/drawable/ic_home_black_24dp.xml
new file mode 100644
index 0000000000..0c36320fd1
--- /dev/null
+++ b/demo/src/main/res/drawable/ic_home_black_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M10,20v-6h4v6h5v-8h3L12,3 2,12h3v8z" />
+</vector>
diff --git a/demo/src/main/res/drawable/ic_notifications_black_24dp.xml b/demo/src/main/res/drawable/ic_notifications_black_24dp.xml
new file mode 100644
index 0000000000..02623821ce
--- /dev/null
+++ b/demo/src/main/res/drawable/ic_notifications_black_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12,22c1.1,0 2,-0.9 2,-2h-4c0,1.1 0.89,2 2,2zM18,16v-5c0,-3.07 -1.64,-5.64 -4.5,-6.32L13.5,4c0,-0.83 -0.67,-1.5 -1.5,-1.5s-1.5,0.67 -1.5,1.5v0.68C7.63,5.36 6,7.92 6,11v5l-2,2v1h16v-1l-2,-2z" />
+</vector>
diff --git a/demo/src/main/res/layout/activity_home.xml b/demo/src/main/res/layout/activity_home.xml
new file mode 100644
index 0000000000..76747079ed
--- /dev/null
+++ b/demo/src/main/res/layout/activity_home.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context="com.novo.main.HomeActivity">
+
+    <FrameLayout
+        android:id="@+id/content"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1">
+
+        <TextView
+            android:id="@+id/message"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="@dimen/activity_vertical_margin"
+            android:layout_marginLeft="@dimen/activity_horizontal_margin"
+            android:layout_marginRight="@dimen/activity_horizontal_margin"
+            android:layout_marginTop="@dimen/activity_vertical_margin"
+            android:text="@string/title_home" />
+
+        <include layout="@layout/activity_main" />
+
+    </FrameLayout>
+
+    <android.support.design.widget.BottomNavigationView
+        android:id="@+id/navigation"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom"
+        android:background="?android:attr/windowBackground"
+        app:menu="@menu/navigation" />
+
+</LinearLayout>
diff --git a/demo/src/main/res/layout/row_videos.xml b/demo/src/main/res/layout/row_videos.xml
index de9f4d0624..265af0bdda 100644
--- a/demo/src/main/res/layout/row_videos.xml
+++ b/demo/src/main/res/layout/row_videos.xml
@@ -18,15 +18,23 @@
         android:id="@+id/tvTitle"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginLeft="15dp"
         android:gravity="center_vertical"
-        android:layout_marginStart="15dp"
-        android:layout_toRightOf="@+id/ivThumb"
         android:text="TextView"
+        android:layout_alignTop="@+id/ivDownload"
         android:layout_toLeftOf="@+id/ivDownload"
-        android:layout_toStartOf="@+id/ivDownload"
-        android:layout_alignParentTop="true"
-        android:layout_alignBottom="@+id/ivDownload" />
+        android:layout_toRightOf="@+id/ivThumb"
+        android:layout_toEndOf="@+id/ivThumb" />
+
+    <TextView
+        android:id="@+id/tvPercentage"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:text="percentage"
+        android:layout_below="@+id/tvTitle"
+        android:layout_toLeftOf="@+id/ivDownload"
+        android:layout_alignLeft="@+id/tvTitle"
+        android:layout_alignStart="@+id/tvTitle" />
 
     <ImageView
         android:id="@+id/ivDownload"
diff --git a/demo/src/main/res/layout/row_videos_grid.xml b/demo/src/main/res/layout/row_videos_grid.xml
index 1d5549ceee..0e8cfbcc95 100644
--- a/demo/src/main/res/layout/row_videos_grid.xml
+++ b/demo/src/main/res/layout/row_videos_grid.xml
@@ -29,6 +29,18 @@
         android:layout_toLeftOf="@+id/ivDownload"
         android:layout_toStartOf="@+id/ivDownload" />
 
+    <TextView
+        android:id="@+id/tvPercentage"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:text=""
+        android:layout_below="@+id/tvTitle"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_toLeftOf="@+id/ivDownload"
+        android:layout_toStartOf="@+id/ivDownload" />
+
     <ImageView
         android:id="@+id/ivDownload"
         android:layout_width="48dp"
diff --git a/demo/src/main/res/menu/navigation.xml b/demo/src/main/res/menu/navigation.xml
new file mode 100644
index 0000000000..8417ef9131
--- /dev/null
+++ b/demo/src/main/res/menu/navigation.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item
+        android:id="@+id/navigation_home"
+        android:icon="@drawable/ic_home_black_24dp"
+        android:title="@string/title_home" />
+
+    <item
+        android:id="@+id/navigation_dashboard"
+        android:icon="@drawable/ic_dashboard_black_24dp"
+        android:title="@string/title_dashboard" />
+
+    <item
+        android:id="@+id/navigation_library"
+        android:icon="@drawable/ic_dashboard_black_24dp"
+        android:title="@string/title_library" />
+
+    <item
+        android:id="@+id/navigation_others"
+        android:icon="@drawable/ic_dashboard_black_24dp"
+        android:title="@string/title_others" />
+
+
+</menu>
diff --git a/demo/src/main/res/values/dimens.xml b/demo/src/main/res/values/dimens.xml
new file mode 100644
index 0000000000..47c8224673
--- /dev/null
+++ b/demo/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
diff --git a/demo/src/main/res/values/material_colors.xml b/demo/src/main/res/values/material_colors.xml
new file mode 100644
index 0000000000..91d0cecba9
--- /dev/null
+++ b/demo/src/main/res/values/material_colors.xml
@@ -0,0 +1,371 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!-- red -->
+    <color name="md_red_50">#ffebee</color>
+    <color name="md_red_100">#ffcdd2</color>
+    <color name="md_red_200">#ef9a9a</color>
+    <color name="md_red_300">#e57373</color>
+    <color name="md_red_400">#ef5350</color>
+    <color name="md_red_500">#f44336</color>
+    <color name="md_red_600">#e53935</color>
+    <color name="md_red_700">#d32f2f</color>
+    <color name="md_red_800">#c62828</color>
+    <color name="md_red_900">#b71c1c</color>
+    <color name="md_red_a100">#ff8a80</color>
+    <color name="md_red_a200">#ff5252</color>
+    <color name="md_red_a400">#ff1744</color>
+    <color name="md_red_a700">#d50000</color>
+
+    <!-- pink -->
+    <color name="md_pink_50">#fce4ec</color>
+    <color name="md_pink_100">#f8bbd0</color>
+    <color name="md_pink_200">#f48fb1</color>
+    <color name="md_pink_300">#f06292</color>
+    <color name="md_pink_400">#ec407a</color>
+    <color name="md_pink_500">#e91e63</color>
+    <color name="md_pink_600">#d81b60</color>
+    <color name="md_pink_700">#c2185b</color>
+    <color name="md_pink_800">#ad1457</color>
+    <color name="md_pink_900">#880e4f</color>
+    <color name="md_pink_a100">#ff80ab</color>
+    <color name="md_pink_a200">#ff4081</color>
+    <color name="md_pink_a400">#f50057</color>
+    <color name="md_pink_a700">#c51162</color>
+
+    <!-- purple -->
+    <color name="md_purple_50">#f3e5f5</color>
+    <color name="md_purple_100">#e1bee7</color>
+    <color name="md_purple_200">#ce93d8</color>
+    <color name="md_purple_300">#ba68c8</color>
+    <color name="md_purple_400">#ab47bc</color>
+    <color name="md_purple_500">#9c27b0</color>
+    <color name="md_purple_600">#8e24aa</color>
+    <color name="md_purple_700">#7b1fa2</color>
+    <color name="md_purple_800">#6a1b9a</color>
+    <color name="md_purple_900">#4a148c</color>
+    <color name="md_purple_a100">#ea80fc</color>
+    <color name="md_purple_a200">#e040fb</color>
+    <color name="md_purple_a400">#d500f9</color>
+    <color name="md_purple_a700">#aa00ff</color>
+
+    <!-- deep_purple -->
+    <color name="md_deep_purple_50">#ede7f6</color>
+    <color name="md_deep_purple_100">#d1c4e9</color>
+    <color name="md_deep_purple_200">#b39ddb</color>
+    <color name="md_deep_purple_300">#9575cd</color>
+    <color name="md_deep_purple_400">#7e57c2</color>
+    <color name="md_deep_purple_500">#673ab7</color>
+    <color name="md_deep_purple_600">#5e35b1</color>
+    <color name="md_deep_purple_700">#512da8</color>
+    <color name="md_deep_purple_800">#4527a0</color>
+    <color name="md_deep_purple_900">#311b92</color>
+    <color name="md_deep_purple_a100">#b388ff</color>
+    <color name="md_deep_purple_a200">#7c4dff</color>
+    <color name="md_deep_purple_a400">#651fff</color>
+    <color name="md_deep_purple_a700">#6200ea</color>
+
+    <!-- indigo -->
+    <color name="md_indigo_50">#e8eaf6</color>
+    <color name="md_indigo_100">#c5cae9</color>
+    <color name="md_indigo_200">#9fa8da</color>
+    <color name="md_indigo_300">#7986cb</color>
+    <color name="md_indigo_400">#5c6bc0</color>
+    <color name="md_indigo_500">#3f51b5</color>
+    <color name="md_indigo_600">#3949ab</color>
+    <color name="md_indigo_700">#303f9f</color>
+    <color name="md_indigo_800">#283593</color>
+    <color name="md_indigo_900">#1a237e</color>
+    <color name="md_indigo_a100">#8c9eff</color>
+    <color name="md_indigo_a200">#536dfe</color>
+    <color name="md_indigo_a400">#3d5afe</color>
+    <color name="md_indigo_a700">#304ffe</color>
+
+    <!-- blue -->
+    <color name="md_blue_50">#e3f2fd</color>
+    <color name="md_blue_100">#bbdefb</color>
+    <color name="md_blue_200">#90caf9</color>
+    <color name="md_blue_300">#64b5f6</color>
+    <color name="md_blue_400">#42a5f5</color>
+    <color name="md_blue_500">#2196f3</color>
+    <color name="md_blue_600">#1e88e5</color>
+    <color name="md_blue_700">#1976d2</color>
+    <color name="md_blue_800">#1565c0</color>
+    <color name="md_blue_900">#0d47a1</color>
+    <color name="md_blue_a100">#82b1ff</color>
+    <color name="md_blue_a200">#448aff</color>
+    <color name="md_blue_a400">#2979ff</color>
+    <color name="md_blue_a700">#2962ff</color>
+
+    <!-- light_blue -->
+    <color name="md_light_blue_50">#e1f5fe</color>
+    <color name="md_light_blue_100">#b3e5fc</color>
+    <color name="md_light_blue_200">#81d4fa</color>
+    <color name="md_light_blue_300">#4fc3f7</color>
+    <color name="md_light_blue_400">#29b6f6</color>
+    <color name="md_light_blue_500">#03a9f4</color>
+    <color name="md_light_blue_600">#039be5</color>
+    <color name="md_light_blue_700">#0288d1</color>
+    <color name="md_light_blue_800">#0277bd</color>
+    <color name="md_light_blue_900">#01579b</color>
+    <color name="md_light_blue_a100">#80d8ff</color>
+    <color name="md_light_blue_a200">#40c4ff</color>
+    <color name="md_light_blue_a400">#00b0ff</color>
+    <color name="md_light_blue_a700">#0091ea</color>
+
+    <!-- cyan -->
+    <color name="md_cyan_50">#e0f7fa</color>
+    <color name="md_cyan_100">#b2ebf2</color>
+    <color name="md_cyan_200">#80deea</color>
+    <color name="md_cyan_300">#4dd0e1</color>
+    <color name="md_cyan_400">#26c6da</color>
+    <color name="md_cyan_500">#00bcd4</color>
+    <color name="md_cyan_600">#00acc1</color>
+    <color name="md_cyan_700">#0097a7</color>
+    <color name="md_cyan_800">#00838f</color>
+    <color name="md_cyan_900">#006064</color>
+    <color name="md_cyan_a100">#84ffff</color>
+    <color name="md_cyan_a200">#18ffff</color>
+    <color name="md_cyan_a400">#00e5ff</color>
+    <color name="md_cyan_a700">#00b8d4</color>
+
+    <!-- teal -->
+    <color name="md_teal_50">#e0f2f1</color>
+    <color name="md_teal_100">#b2dfdb</color>
+    <color name="md_teal_200">#80cbc4</color>
+    <color name="md_teal_300">#4db6ac</color>
+    <color name="md_teal_400">#26a69a</color>
+    <color name="md_teal_500">#009688</color>
+    <color name="md_teal_600">#00897b</color>
+    <color name="md_teal_700">#00796b</color>
+    <color name="md_teal_800">#00695c</color>
+    <color name="md_teal_900">#004d40</color>
+    <color name="md_teal_a100">#a7ffeb</color>
+    <color name="md_teal_a200">#64ffda</color>
+    <color name="md_teal_a400">#1de9b6</color>
+    <color name="md_teal_a700">#00bfa5</color>
+
+    <!-- green -->
+    <color name="md_green_50">#e8f5e9</color>
+    <color name="md_green_100">#c8e6c9</color>
+    <color name="md_green_200">#a5d6a7</color>
+    <color name="md_green_300">#81c784</color>
+    <color name="md_green_400">#66bb6a</color>
+    <color name="md_green_500">#4caf50</color>
+    <color name="md_green_600">#43a047</color>
+    <color name="md_green_700">#388e3c</color>
+    <color name="md_green_800">#2e7d32</color>
+    <color name="md_green_900">#1b5e20</color>
+    <color name="md_green_a100">#b9f6ca</color>
+    <color name="md_green_a200">#69f0ae</color>
+    <color name="md_green_a400">#00e676</color>
+    <color name="md_green_a700">#00c853</color>
+
+    <!-- light_green -->
+    <color name="md_light_green_50">#f1f8e9</color>
+    <color name="md_light_green_100">#dcedc8</color>
+    <color name="md_light_green_200">#c5e1a5</color>
+    <color name="md_light_green_300">#aed581</color>
+    <color name="md_light_green_400">#9ccc65</color>
+    <color name="md_light_green_500">#8bc34a</color>
+    <color name="md_light_green_600">#7cb342</color>
+    <color name="md_light_green_700">#689f38</color>
+    <color name="md_light_green_800">#558b2f</color>
+    <color name="md_light_green_900">#33691e</color>
+    <color name="md_light_green_a100">#ccff90</color>
+    <color name="md_light_green_a200">#b2ff59</color>
+    <color name="md_light_green_a400">#76ff03</color>
+    <color name="md_light_green_a700">#64dd17</color>
+
+    <!-- lime -->
+    <color name="md_lime_50">#f9fbe7</color>
+    <color name="md_lime_100">#f0f4c3</color>
+    <color name="md_lime_200">#e6ee9c</color>
+    <color name="md_lime_300">#dce775</color>
+    <color name="md_lime_400">#d4e157</color>
+    <color name="md_lime_500">#cddc39</color>
+    <color name="md_lime_600">#c0ca33</color>
+    <color name="md_lime_700">#afb42b</color>
+    <color name="md_lime_800">#9e9d24</color>
+    <color name="md_lime_900">#827717</color>
+    <color name="md_lime_a100">#f4ff81</color>
+    <color name="md_lime_a200">#eeff41</color>
+    <color name="md_lime_a400">#c6ff00</color>
+    <color name="md_lime_a700">#aeea00</color>
+
+    <!-- yellow -->
+    <color name="md_yellow_50">#fffde7</color>
+    <color name="md_yellow_100">#fff9c4</color>
+    <color name="md_yellow_200">#fff59d</color>
+    <color name="md_yellow_300">#fff176</color>
+    <color name="md_yellow_400">#ffee58</color>
+    <color name="md_yellow_500">#ffeb3b</color>
+    <color name="md_yellow_600">#fdd835</color>
+    <color name="md_yellow_700">#fbc02d</color>
+    <color name="md_yellow_800">#f9a825</color>
+    <color name="md_yellow_900">#f57f17</color>
+    <color name="md_yellow_a100">#ffff8d</color>
+    <color name="md_yellow_a200">#ffff00</color>
+    <color name="md_yellow_a400">#ffea00</color>
+    <color name="md_yellow_a700">#ffd600</color>
+
+    <!-- amber -->
+    <color name="md_amber_50">#fff8e1</color>
+    <color name="md_amber_100">#ffecb3</color>
+    <color name="md_amber_200">#ffe082</color>
+    <color name="md_amber_300">#ffd54f</color>
+    <color name="md_amber_400">#ffca28</color>
+    <color name="md_amber_500">#ffc107</color>
+    <color name="md_amber_600">#ffb300</color>
+    <color name="md_amber_700">#ffa000</color>
+    <color name="md_amber_800">#ff8f00</color>
+    <color name="md_amber_900">#ff6f00</color>
+    <color name="md_amber_a100">#ffe57f</color>
+    <color name="md_amber_a200">#ffd740</color>
+    <color name="md_amber_a400">#ffc400</color>
+    <color name="md_amber_a700">#ffab00</color>
+
+    <!-- orange -->
+    <color name="md_orange_50">#fff3e0</color>
+    <color name="md_orange_100">#ffe0b2</color>
+    <color name="md_orange_200">#ffcc80</color>
+    <color name="md_orange_300">#ffb74d</color>
+    <color name="md_orange_400">#ffa726</color>
+    <color name="md_orange_500">#ff9800</color>
+    <color name="md_orange_600">#fb8c00</color>
+    <color name="md_orange_700">#f57c00</color>
+    <color name="md_orange_800">#ef6c00</color>
+    <color name="md_orange_900">#e65100</color>
+    <color name="md_orange_a100">#ffd180</color>
+    <color name="md_orange_a200">#ffab40</color>
+    <color name="md_orange_a400">#ff9100</color>
+    <color name="md_orange_a700">#ff6d00</color>
+
+    <!-- deep_orange -->
+    <color name="md_deep_orange_50">#fbe9e7</color>
+    <color name="md_deep_orange_100">#ffccbc</color>
+    <color name="md_deep_orange_200">#ffab91</color>
+    <color name="md_deep_orange_300">#ff8a65</color>
+    <color name="md_deep_orange_400">#ff7043</color>
+    <color name="md_deep_orange_500">#ff5722</color>
+    <color name="md_deep_orange_600">#f4511e</color>
+    <color name="md_deep_orange_700">#e64a19</color>
+    <color name="md_deep_orange_800">#d84315</color>
+    <color name="md_deep_orange_900">#bf360c</color>
+    <color name="md_deep_orange_a100">#ff9e80</color>
+    <color name="md_deep_orange_a200">#ff6e40</color>
+    <color name="md_deep_orange_a400">#ff3d00</color>
+    <color name="md_deep_orange_a700">#dd2c00</color>
+
+    <!-- brown -->
+    <color name="md_brown_50">#efebe9</color>
+    <color name="md_brown_100">#d7ccc8</color>
+    <color name="md_brown_200">#bcaaa4</color>
+    <color name="md_brown_300">#a1887f</color>
+    <color name="md_brown_400">#8d6e63</color>
+    <color name="md_brown_500">#795548</color>
+    <color name="md_brown_600">#6d4c41</color>
+    <color name="md_brown_700">#5d4037</color>
+    <color name="md_brown_800">#4e342e</color>
+    <color name="md_brown_900">#3e2723</color>
+
+    <!-- grey -->
+    <color name="md_grey_50">#fafafa</color>
+    <color name="md_grey_100">#f5f5f5</color>
+    <color name="md_grey_200">#eeeeee</color>
+    <color name="md_grey_300">#e0e0e0</color>
+    <color name="md_grey_400">#bdbdbd</color>
+    <color name="md_grey_500">#9e9e9e</color>
+    <color name="md_grey_600">#757575</color>
+    <color name="md_grey_700">#616161</color>
+    <color name="md_grey_800">#424242</color>
+    <color name="md_grey_900">#212121</color>
+    <!-- <color name="md_grey_1000">#000000</color> -->
+    <color name="md_black">#000000</color>
+    <!-- <color name="md_grey_1000">#ffffff</color> -->
+    <color name="md_white">#ffffff</color>
+
+    <!-- blue_grey -->
+    <color name="md_blue_grey_50">#eceff1</color>
+    <color name="md_blue_grey_100">#cfd8dc</color>
+    <color name="md_blue_grey_200">#b0bec5</color>
+    <color name="md_blue_grey_300">#90a4ae</color>
+    <color name="md_blue_grey_400">#78909c</color>
+    <color name="md_blue_grey_500">#607d8b</color>
+    <color name="md_blue_grey_600">#546e7a</color>
+    <color name="md_blue_grey_700">#455a64</color>
+    <color name="md_blue_grey_800">#37474f</color>
+    <color name="md_blue_grey_900">#263238</color>
+
+
+    <!--==================================-->
+    <!--Spectrum Reference Colors List For use-->
+    <!--==================================-->
+    <array name="demo_colors">
+        <item>@color/md_red_500</item>
+        <item>@color/md_pink_500</item>
+        <item>@color/md_purple_500</item>
+        <item>@color/md_deep_purple_500</item>
+        <item>@color/md_indigo_500</item>
+        <item>@color/md_blue_500</item>
+        <item>@color/md_light_blue_500</item>
+        <item>@color/md_cyan_500</item>
+        <item>@color/md_teal_500</item>
+        <item>@color/md_green_500</item>
+        <item>@color/md_light_green_500</item>
+        <item>@color/md_lime_500</item>
+        <item>@color/md_yellow_500</item>
+        <item>@color/md_amber_500</item>
+        <item>@color/md_orange_500</item>
+        <item>@color/md_deep_orange_500</item>
+        <item>@color/md_brown_500</item>
+        <item>@color/md_grey_500</item>
+        <item>@color/md_blue_grey_500</item>
+        <item>@color/md_white</item>
+    </array>
+
+    <array name="demo_colors_expanded">
+        <item>@color/md_red_500</item>
+        <item>@color/md_pink_500</item>
+        <item>@color/md_purple_500</item>
+        <item>@color/md_deep_purple_500</item>
+        <item>@color/md_indigo_500</item>
+        <item>@color/md_blue_500</item>
+        <item>@color/md_light_blue_500</item>
+        <item>@color/md_cyan_500</item>
+        <item>@color/md_teal_500</item>
+        <item>@color/md_green_500</item>
+        <item>@color/md_light_green_500</item>
+        <item>@color/md_lime_500</item>
+        <item>@color/md_yellow_500</item>
+        <item>@color/md_amber_500</item>
+        <item>@color/md_orange_500</item>
+        <item>@color/md_deep_orange_500</item>
+        <item>@color/md_brown_500</item>
+        <item>@color/md_grey_500</item>
+        <item>@color/md_blue_grey_500</item>
+        <item>@color/md_white</item>
+
+        <item>@color/md_red_500</item>
+        <item>@color/md_pink_500</item>
+        <item>@color/md_purple_500</item>
+        <item>@color/md_deep_purple_500</item>
+        <item>@color/md_indigo_500</item>
+        <item>@color/md_blue_500</item>
+        <item>@color/md_light_blue_500</item>
+        <item>@color/md_cyan_500</item>
+        <item>@color/md_teal_500</item>
+        <item>@color/md_green_500</item>
+        <item>@color/md_light_green_500</item>
+        <item>@color/md_lime_500</item>
+        <item>@color/md_yellow_500</item>
+        <item>@color/md_amber_500</item>
+        <item>@color/md_orange_500</item>
+        <item>@color/md_deep_orange_500</item>
+        <item>@color/md_brown_500</item>
+        <item>@color/md_grey_500</item>
+        <item>@color/md_blue_grey_500</item>
+        <item>@color/md_white</item>
+    </array>
+
+
+</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values/strings.xml b/demo/src/main/res/values/strings.xml
index 5ee613b59a..e969e6de2e 100644
--- a/demo/src/main/res/values/strings.xml
+++ b/demo/src/main/res/values/strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
+<?xml version="1.0" encoding="utf-8"?><!-- Copyright (C) 2016 The Android Open Source Project
 
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
@@ -16,46 +15,52 @@
 
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
 
-  <string name="application_name">Vocabimate Demo</string>
+    <string name="application_name">Vocabimate Demo</string>
 
-  <string name="video">Video</string>
+    <string name="video">Video</string>
 
-  <string name="audio">Audio</string>
+    <string name="audio">Audio</string>
 
-  <string name="text">Text</string>
+    <string name="text">Text</string>
 
-  <string name="retry">Retry</string>
+    <string name="retry">Retry</string>
 
-  <string name="selection_disabled">Disabled</string>
+    <string name="selection_disabled">Disabled</string>
 
-  <string name="selection_default">Default</string>
+    <string name="selection_default">Default</string>
 
-  <string name="unexpected_intent_action">Unexpected intent action: <xliff:g id="action">%1$s</xliff:g></string>
+    <string name="unexpected_intent_action">Unexpected intent action: <xliff:g id="action">%1$s</xliff:g></string>
 
-  <string name="enable_random_adaptation">Enable random adaptation</string>
+    <string name="enable_random_adaptation">Enable random adaptation</string>
 
-  <string name="error_drm_not_supported">Protected content not supported on API levels below 18</string>
+    <string name="error_drm_not_supported">Protected content not supported on API levels below 18</string>
 
-  <string name="error_drm_unsupported_scheme">This device does not support the required DRM scheme</string>
+    <string name="error_drm_unsupported_scheme">This device does not support the required DRM scheme</string>
 
-  <string name="error_drm_unknown">An unknown DRM error occurred</string>
+    <string name="error_drm_unknown">An unknown DRM error occurred</string>
 
-  <string name="error_no_decoder">This device does not provide a decoder for <xliff:g id="mime_type">%1$s</xliff:g></string>
+    <string name="error_no_decoder">This device does not provide a decoder for <xliff:g id="mime_type">%1$s</xliff:g></string>
 
-  <string name="error_no_secure_decoder">This device does not provide a secure decoder for <xliff:g id="mime_type">%1$s</xliff:g></string>
+    <string name="error_no_secure_decoder">This device does not provide a secure decoder for <xliff:g id="mime_type">%1$s</xliff:g></string>
 
-  <string name="error_querying_decoders">Unable to query device decoders</string>
+    <string name="error_querying_decoders">Unable to query device decoders</string>
 
-  <string name="error_instantiating_decoder">Unable to instantiate decoder <xliff:g id="decoder_name">%1$s</xliff:g></string>
+    <string name="error_instantiating_decoder">Unable to instantiate decoder <xliff:g id="decoder_name">%1$s</xliff:g></string>
 
-  <string name="error_unsupported_video">Media includes video tracks, but none are playable by this device</string>
+    <string name="error_unsupported_video">Media includes video tracks, but none are playable by this device</string>
 
-  <string name="error_unsupported_audio">Media includes audio tracks, but none are playable by this device</string>
+    <string name="error_unsupported_audio">Media includes audio tracks, but none are playable by this device</string>
 
-  <string name="storage_permission_denied">Permission to access storage was denied</string>
+    <string name="storage_permission_denied">Permission to access storage was denied</string>
 
-  <string name="sample_list_load_error">One or more sample lists failed to load</string>
+    <string name="sample_list_load_error">One or more sample lists failed to load</string>
 
-  <string name="ima_not_loaded">Playing sample without ads, as the IMA extension was not loaded</string>
+    <string name="ima_not_loaded">Playing sample without ads, as the IMA extension was not loaded</string>
+    <string name="title_activity_home">HomeActivity</string>
+    <string name="title_home">Home</string>
+    <string name="title_dashboard">Dashboard</string>
+    <string name="title_library">Library</string>
+    <string name="title_others">Others</string>
+    <string name="title_notifications">Notifications</string>
 
 </resources>
diff --git a/demo/src/main/res/values/styles.xml b/demo/src/main/res/values/styles.xml
index 751a224210..4bf99b8734 100644
--- a/demo/src/main/res/values/styles.xml
+++ b/demo/src/main/res/values/styles.xml
@@ -21,4 +21,25 @@
     <item name="android:windowBackground">@android:color/black</item>
   </style>
 
+  <!-- Base application theme. -->
+  <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+    <!-- Customize your theme here. -->
+    <item name="android:windowContentOverlay">@null</item>
+    <item name="colorPrimary">@color/md_blue_500</item>
+    <item name="colorPrimaryDark">@color/md_blue_700</item>
+    <item name="colorAccent">@color/md_yellow_500</item>
+  </style>
+
+  <style name="AppThemeLight" parent="Theme.AppCompat.Light">
+    <!-- Customize your theme here. -->
+    <item name="android:windowContentOverlay">@null</item>
+    <item name="colorPrimary">@color/md_blue_500</item>
+    <item name="colorPrimaryDark">@color/md_blue_700</item>
+    <item name="colorAccent">@color/md_yellow_500</item>
+  </style>
+
+  <!-- Base application theme. -->
+  <style name="AppThemeNoActionBar" parent="Theme.AppCompat.Light.NoActionBar"></style>
+
+
 </resources>
