diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java
index 0ef280a440..4fc20b79b1 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java
@@ -19,6 +19,7 @@
 import androidx.annotation.Nullable;
 import android.util.Pair;
 import android.util.SparseArray;
+
 import com.google.android.exoplayer2.C;
 import com.google.android.exoplayer2.Format;
 import com.google.android.exoplayer2.ParserException;
@@ -42,6 +43,7 @@
 import com.google.android.exoplayer2.util.ParsableByteArray;
 import com.google.android.exoplayer2.util.TimestampAdjuster;
 import com.google.android.exoplayer2.util.Util;
+
 import java.io.IOException;
 import java.lang.annotation.Documented;
 import java.lang.annotation.Retention;
@@ -409,7 +411,9 @@ private boolean readAtomHeader(ExtractorInput input) throws IOException, Interru
       parserState = STATE_READING_ATOM_PAYLOAD;
     } else {
       if (atomSize > Integer.MAX_VALUE) {
-        throw new ParserException("Skipping atom with length > 2147483647 (unsupported).");
+        return false;
+        //This makes exoplayer puke when decrypting encrypted AES GCM stream for some reason
+        //throw new ParserException("Skipping atom with length > 2147483647 (unsupported).");
       }
       atomData = null;
       parserState = STATE_READING_ATOM_PAYLOAD;
