diff --git a/library/core/src/main/java/com/google/android/exoplayer2/source/SampleMetadataQueue.java b/library/core/src/main/java/com/google/android/exoplayer2/source/SampleMetadataQueue.java
index 542565e70d..78b3a35549 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/source/SampleMetadataQueue.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/source/SampleMetadataQueue.java
@@ -227,7 +227,7 @@ public synchronized int peekNext(Format downstreamFormat) {
       return SampleQueue.PEEK_RESULT_NOTHING;
     }
     int relativeReadIndex = getRelativeIndex(readPosition);
-    if (formats[relativeReadIndex] != downstreamFormat) {
+    if (formats[relativeReadIndex].equals(downstreamFormat)) {
       return SampleQueue.PEEK_RESULT_FORMAT;
     } else {
       return (flags[relativeReadIndex] & C.BUFFER_FLAG_ENCRYPTED) != 0
@@ -275,7 +275,7 @@ public synchronized int read(
         buffer.setFlags(C.BUFFER_FLAG_END_OF_STREAM);
         return C.RESULT_BUFFER_READ;
       } else if (upstreamFormat != null
-          && (formatRequired || upstreamFormat != downstreamFormat)) {
+          && (formatRequired || !upstreamFormat.equals(downstreamFormat))) {
         formatHolder.format = upstreamFormat;
         return C.RESULT_FORMAT_READ;
       } else {
@@ -284,7 +284,7 @@ public synchronized int read(
     }
 
     int relativeReadIndex = getRelativeIndex(readPosition);
-    if (formatRequired || formats[relativeReadIndex] != downstreamFormat) {
+    if (formatRequired || !formats[relativeReadIndex].equals(downstreamFormat)) {
       formatHolder.format = formats[relativeReadIndex];
       return C.RESULT_FORMAT_READ;
     }
@@ -422,7 +422,6 @@ public synchronized boolean format(Format format) {
     }
     upstreamFormatRequired = false;
     if (Util.areEqual(format, upstreamFormat)) {
-      // Suppress changes between equal formats so we can use referential equality in readData.
       return false;
     } else {
       upstreamFormat = format;
