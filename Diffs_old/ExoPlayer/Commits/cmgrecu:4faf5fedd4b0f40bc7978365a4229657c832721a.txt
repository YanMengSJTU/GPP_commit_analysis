diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java b/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java
index edc268ddb9..26ae426151 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java
@@ -130,6 +130,10 @@ public void onPlayerError(ExoPlaybackException e) {
     Log.e(TAG, "playerFailed [" + getSessionTimeString() + "]", e);
   }
 
+  @Override
+  public void onMetadataUpdate(String metadata) {
+  }
+
   @Override
   public void onTracksChanged(TrackGroupArray ignored, TrackSelectionArray trackSelections) {
     MappedTrackInfo mappedTrackInfo = trackSelector.getCurrentMappedTrackInfo();
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index bbfadf34af..b126146f6b 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -477,6 +477,11 @@ public void onPlayerError(ExoPlaybackException e) {
     }
   }
 
+  @Override
+  public void onMetadataUpdate(String metadata) {
+    // Do nothing.
+  }
+
   @Override
   public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
     updateButtonVisibilities();
diff --git a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java b/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java
index 990c470a93..80d65f489c 100644
--- a/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java
+++ b/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacPlaybackTest.java
@@ -92,6 +92,11 @@ public void onLoadingChanged(boolean isLoading) {
       // Do nothing.
     }
 
+    @Override
+    public void onMetadataUpdate(String metadata) {
+      // Do nothong.
+    }
+
     @Override
     public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
       // Do nothing.
diff --git a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java b/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
index 90a4728933..fb8b107795 100644
--- a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
+++ b/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
@@ -111,6 +111,16 @@ public OkHttpDataSource(Call.Factory callFactory, String userAgent,
     this.requestProperties = new HashMap<>();
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public Uri getUri() {
     return response == null ? null : Uri.parse(response.request().url().toString());
diff --git a/extensions/opus/src/androidTest/java/com/google/android/exoplayer2/ext/opus/OpusPlaybackTest.java b/extensions/opus/src/androidTest/java/com/google/android/exoplayer2/ext/opus/OpusPlaybackTest.java
index 3e07186995..d2aec09122 100644
--- a/extensions/opus/src/androidTest/java/com/google/android/exoplayer2/ext/opus/OpusPlaybackTest.java
+++ b/extensions/opus/src/androidTest/java/com/google/android/exoplayer2/ext/opus/OpusPlaybackTest.java
@@ -92,6 +92,11 @@ public void onLoadingChanged(boolean isLoading) {
       // Do nothing.
     }
 
+    @Override
+    public void onMetadataUpdate(String metadata) {
+      // Do nothing.
+    }
+
     @Override
     public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
       // Do nothing.
diff --git a/extensions/vp9/src/androidTest/java/com/google/android/exoplayer2/ext/vp9/VpxPlaybackTest.java b/extensions/vp9/src/androidTest/java/com/google/android/exoplayer2/ext/vp9/VpxPlaybackTest.java
index b1ddf2368c..c8546adf03 100644
--- a/extensions/vp9/src/androidTest/java/com/google/android/exoplayer2/ext/vp9/VpxPlaybackTest.java
+++ b/extensions/vp9/src/androidTest/java/com/google/android/exoplayer2/ext/vp9/VpxPlaybackTest.java
@@ -111,6 +111,11 @@ public void onLoadingChanged(boolean isLoading) {
       // Do nothing.
     }
 
+    @Override
+    public void onMetadataUpdate(String metadata) {
+      // Do nothing.
+    }
+
     @Override
     public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
       // Do nothing.
diff --git a/library/src/androidTest/java/com/google/android/exoplayer2/ExoPlayerTest.java b/library/src/androidTest/java/com/google/android/exoplayer2/ExoPlayerTest.java
index 1197139b01..0a82fad882 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer2/ExoPlayerTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer2/ExoPlayerTest.java
@@ -256,6 +256,11 @@ public void onTimelineChanged(Timeline timeline, Object manifest) {
       this.manifest = manifest;
     }
 
+    @Override
+    public void onMetadataUpdate(String metadata) {
+      // Do nothing.
+    }
+
     @Override
     public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
       this.trackGroups = trackGroups;
diff --git a/library/src/main/java/com/google/android/exoplayer2/C.java b/library/src/main/java/com/google/android/exoplayer2/C.java
index 0b1c33bfc9..a197a9f35b 100644
--- a/library/src/main/java/com/google/android/exoplayer2/C.java
+++ b/library/src/main/java/com/google/android/exoplayer2/C.java
@@ -61,6 +61,11 @@ private C() {}
    */
   public static final int LENGTH_UNSET = -1;
 
+  /**
+   * Represents an unset or unknown metadata interval.
+   */
+  public static final int METADATA_INTERVAL_UNSET = -1;
+
   /**
    * The number of microseconds in one second.
    */
diff --git a/library/src/main/java/com/google/android/exoplayer2/ExoPlayer.java b/library/src/main/java/com/google/android/exoplayer2/ExoPlayer.java
index 083569416c..ddf4f9b27d 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ExoPlayer.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ExoPlayer.java
@@ -172,6 +172,14 @@
      */
     void onPositionDiscontinuity();
 
+
+    /**
+     * Called when a metadata update is received
+     * <p>
+     *
+     * @param metadata The metadata received
+     */
+    void onMetadataUpdate(String metadata);
   }
 
   /**
diff --git a/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java b/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java
index d44d138091..9606bb93eb 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java
@@ -383,6 +383,14 @@ public Object getCurrentManifest() {
         }
         break;
       }
+
+      case ExoPlayerImplInternal.MSG_METADATA_UPDATE: {
+        String metadata = (String) msg.obj;
+        for (EventListener listener : listeners) {
+          listener.onMetadataUpdate(metadata);
+        }
+        break;
+      }
     }
   }
 
diff --git a/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java b/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
index faf86087c9..9e50e02c1d 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
@@ -97,6 +97,7 @@ public SourceInfo(Timeline timeline, Object manifest, PlaybackInfo playbackInfo,
   public static final int MSG_POSITION_DISCONTINUITY = 5;
   public static final int MSG_SOURCE_INFO_REFRESHED = 6;
   public static final int MSG_ERROR = 7;
+  public static final int MSG_METADATA_UPDATE = 8;
 
   // Internal messages
   private static final int MSG_PREPARE = 0;
@@ -110,6 +111,7 @@ public SourceInfo(Timeline timeline, Object manifest, PlaybackInfo playbackInfo,
   private static final int MSG_SOURCE_CONTINUE_LOADING_REQUESTED = 8;
   private static final int MSG_TRACK_SELECTION_INVALIDATED = 9;
   private static final int MSG_CUSTOM = 10;
+  private static final int MSG_STRING_METADATA = 11;
 
   private static final int PREPARING_SOURCE_INTERVAL_MS = 10;
   private static final int RENDERING_INTERVAL_MS = 10;
@@ -269,6 +271,13 @@ public void onPrepared(MediaPeriod source) {
     handler.obtainMessage(MSG_PERIOD_PREPARED, source).sendToTarget();
   }
 
+
+  @Override
+  public void onPeriodMetadata(String metadata) {
+    handler.obtainMessage(MSG_STRING_METADATA, metadata).sendToTarget();
+  }
+
+
   @Override
   public void onContinueLoadingRequested(MediaPeriod source) {
     handler.obtainMessage(MSG_SOURCE_CONTINUE_LOADING_REQUESTED, source).sendToTarget();
@@ -328,10 +337,17 @@ public boolean handleMessage(Message msg) {
           reselectTracksInternal();
           return true;
         }
+
         case MSG_CUSTOM: {
           sendMessagesInternal((ExoPlayerMessage[]) msg.obj);
           return true;
         }
+
+        case MSG_STRING_METADATA: {
+          handleMetadata((String) msg.obj);
+          return true;
+        }
+
         default:
           return false;
       }
@@ -842,6 +858,11 @@ private void maybeThrowPeriodPrepareError() throws IOException {
     }
   }
 
+  private void  handleMetadata(String metadata)
+  {
+    eventHandler.obtainMessage(ExoPlayerImplInternal.MSG_METADATA_UPDATE,metadata).sendToTarget();
+  }
+
   private void handleSourceInfoRefreshed(Pair<Timeline, Object> timelineAndManifest)
       throws ExoPlaybackException {
     Timeline oldTimeline = timeline;
diff --git a/library/src/main/java/com/google/android/exoplayer2/source/ClippingMediaPeriod.java b/library/src/main/java/com/google/android/exoplayer2/source/ClippingMediaPeriod.java
index b18eabf493..80d8473d7d 100644
--- a/library/src/main/java/com/google/android/exoplayer2/source/ClippingMediaPeriod.java
+++ b/library/src/main/java/com/google/android/exoplayer2/source/ClippingMediaPeriod.java
@@ -185,6 +185,11 @@ public void onPrepared(MediaPeriod mediaPeriod) {
     callback.onPrepared(this);
   }
 
+  @Override
+  public void onPeriodMetadata(String metdata) {
+
+  }
+
   @Override
   public void onContinueLoadingRequested(MediaPeriod source) {
     callback.onContinueLoadingRequested(this);
diff --git a/library/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java b/library/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java
index 5226043593..a641efe2e2 100644
--- a/library/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java
+++ b/library/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java
@@ -17,6 +17,7 @@
 
 import android.net.Uri;
 import android.os.Handler;
+import android.util.Log;
 import android.util.SparseArray;
 import com.google.android.exoplayer2.C;
 import com.google.android.exoplayer2.Format;
@@ -633,6 +634,19 @@ public void load() throws IOException, InterruptedException {
           while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {
             loadCondition.block();
             result = extractor.read(input, positionHolder);
+
+            if (dataSource.isIcyMetadataAvailable()) {
+              final String metadata = dataSource.getIcyMetadata();
+              if (metadata != null) {
+                eventHandler.post(new Runnable() {
+                  @Override
+                  public void run() {
+                   callback.onPeriodMetadata(metadata);
+                  }
+                });
+              }
+            }
+
             if (input.getPosition() > position + CONTINUE_LOADING_CHECK_INTERVAL_BYTES) {
               position = input.getPosition();
               loadCondition.close();
diff --git a/library/src/main/java/com/google/android/exoplayer2/source/MediaPeriod.java b/library/src/main/java/com/google/android/exoplayer2/source/MediaPeriod.java
index 31ee8df1e4..e3a45a32b0 100644
--- a/library/src/main/java/com/google/android/exoplayer2/source/MediaPeriod.java
+++ b/library/src/main/java/com/google/android/exoplayer2/source/MediaPeriod.java
@@ -41,6 +41,14 @@
      */
     void onPrepared(MediaPeriod mediaPeriod);
 
+
+    /**
+     * Called when metadata is detected.
+     * <p>
+     *
+     * @param metadata The medatadata received
+     */
+    void onPeriodMetadata(String metadata);
   }
 
   /**
diff --git a/library/src/main/java/com/google/android/exoplayer2/source/MergingMediaPeriod.java b/library/src/main/java/com/google/android/exoplayer2/source/MergingMediaPeriod.java
index 10c56e5576..502b0291a2 100644
--- a/library/src/main/java/com/google/android/exoplayer2/source/MergingMediaPeriod.java
+++ b/library/src/main/java/com/google/android/exoplayer2/source/MergingMediaPeriod.java
@@ -207,6 +207,10 @@ public void onPrepared(MediaPeriod ignored) {
     callback.onPrepared(this);
   }
 
+  @Override
+  public void onPeriodMetadata(String metadata){
+  }
+
   @Override
   public void onContinueLoadingRequested(MediaPeriod ignored) {
     if (trackGroups == null) {
diff --git a/library/src/main/java/com/google/android/exoplayer2/source/hls/Aes128DataSource.java b/library/src/main/java/com/google/android/exoplayer2/source/hls/Aes128DataSource.java
index 142b846a97..6acc7303fe 100644
--- a/library/src/main/java/com/google/android/exoplayer2/source/hls/Aes128DataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/source/hls/Aes128DataSource.java
@@ -60,6 +60,16 @@ public Aes128DataSource(DataSource upstream, byte[] encryptionKey, byte[] encryp
     this.encryptionIv = encryptionIv;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     Cipher cipher;
diff --git a/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java b/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java
index 1bf5b59a4a..01104d3143 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ui/DebugTextViewHelper.java
@@ -15,6 +15,7 @@
  */
 package com.google.android.exoplayer2.ui;
 
+import android.text.TextUtils;
 import android.widget.TextView;
 import com.google.android.exoplayer2.ExoPlaybackException;
 import com.google.android.exoplayer2.ExoPlayer;
@@ -36,6 +37,7 @@
   private final SimpleExoPlayer player;
   private final TextView textView;
 
+  private String currentMetdata = "";
   private boolean started;
 
   /**
@@ -80,6 +82,23 @@ public void onLoadingChanged(boolean isLoading) {
     // Do nothing.
   }
 
+  @Override
+  public void onMetadataUpdate(String metadata) {
+    currentMetdata = metadata;
+    currentMetdata = currentMetdata.replaceAll("StreamTitle=", "");
+    currentMetdata = currentMetdata.trim();
+    if (currentMetdata.endsWith("'") || currentMetdata.endsWith("\"") || currentMetdata.endsWith(";"))
+      currentMetdata = currentMetdata.substring(0, currentMetdata.length() - 1);
+
+    if (currentMetdata.endsWith("'") || currentMetdata.endsWith("\"") || currentMetdata.endsWith(";"))
+      currentMetdata = currentMetdata.substring(0, currentMetdata.length() - 1);
+
+    if (currentMetdata.startsWith("'") || currentMetdata.startsWith("\"") )
+      currentMetdata = currentMetdata.substring(1);
+
+    currentMetdata = currentMetdata.trim();
+  }
+
   @Override
   public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
     updateAndPost();
@@ -115,12 +134,20 @@ public void run() {
   // Private methods.
 
   private void updateAndPost() {
-    textView.setText(getPlayerStateString() + getPlayerWindowIndexString() + getVideoString()
-        + getAudioString());
+    textView.setText(getPlayerStateString() + getPlayerWindowIndexString() + getVideoString() + getAudioString() +
+            getNowPlaying());
     textView.removeCallbacks(this);
     textView.postDelayed(this, REFRESH_INTERVAL_MS);
   }
 
+  private String getNowPlaying()
+  {
+    if (currentMetdata == null || currentMetdata.isEmpty())
+      return "";
+
+    return "\nnow playing: " + currentMetdata;
+  }
+
   private String getPlayerStateString() {
     String text = "playWhenReady:" + player.getPlayWhenReady() + " playbackState:";
     switch (player.getPlaybackState()) {
diff --git a/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java b/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java
index dc3c398357..2ae4e397ca 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ui/PlaybackControlView.java
@@ -767,6 +767,10 @@ public void onPositionDiscontinuity() {
       updateProgress();
     }
 
+    @Override
+    public void onMetadataUpdate(String metadata) {
+    }
+
     @Override
     public void onTimelineChanged(Timeline timeline, Object manifest) {
       updateNavigation();
diff --git a/library/src/main/java/com/google/android/exoplayer2/ui/SimpleExoPlayerView.java b/library/src/main/java/com/google/android/exoplayer2/ui/SimpleExoPlayerView.java
index 3349e05eda..b660431a0c 100644
--- a/library/src/main/java/com/google/android/exoplayer2/ui/SimpleExoPlayerView.java
+++ b/library/src/main/java/com/google/android/exoplayer2/ui/SimpleExoPlayerView.java
@@ -681,6 +681,10 @@ public void onRenderedFirstFrame() {
       }
     }
 
+    @Override
+    public void onMetadataUpdate(String metadata) {
+    }
+
     @Override
     public void onTracksChanged(TrackGroupArray tracks, TrackSelectionArray selections) {
       updateForCurrentTrackSelections();
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/AssetDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/AssetDataSource.java
index d0b18bb765..1f3dffa76f 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/AssetDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/AssetDataSource.java
@@ -63,6 +63,16 @@ public AssetDataSource(Context context, TransferListener<? super AssetDataSource
     this.listener = listener;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws AssetDataSourceException {
     try {
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/ByteArrayDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/ByteArrayDataSource.java
index e5311e783b..5e907042ef 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/ByteArrayDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/ByteArrayDataSource.java
@@ -40,6 +40,16 @@ public ByteArrayDataSource(byte[] data) {
     this.data = data;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     uri = dataSpec.uri;
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/ContentDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/ContentDataSource.java
index f806f47410..03e731b516 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/ContentDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/ContentDataSource.java
@@ -66,6 +66,16 @@ public ContentDataSource(Context context, TransferListener<? super ContentDataSo
     this.listener = listener;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws ContentDataSourceException {
     try {
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/DataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/DataSource.java
index 4a2354e180..010c48ac69 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/DataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/DataSource.java
@@ -91,4 +91,18 @@
    */
   void close() throws IOException;
 
+
+  /**
+   * Check if the icy-metadata is supplied by the source.
+   *
+   * @return true if icy-metadata is supplied by the source.
+   */
+  boolean isIcyMetadataAvailable();
+
+  /**
+   * Get the icy-metadata supplied by the source.
+   *
+   * @return a String containing the icy-metadata supplied by the source.
+   */
+  String getIcyMetadata();
 }
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultDataSource.java
index ae6f1e0691..a740f219d8 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultDataSource.java
@@ -101,6 +101,16 @@ public DefaultDataSource(Context context, TransferListener<? super DataSource> l
     this.contentDataSource = new ContentDataSource(context, listener);
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return dataSource.isIcyMetadataAvailable();
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return dataSource.getIcyMetadata();
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     Assertions.checkState(dataSource == null);
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
index ca0fda9399..46eb3e507d 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
@@ -84,6 +84,11 @@
   private long bytesSkipped;
   private long bytesRead;
 
+  private int metadataInterval = C.METADATA_INTERVAL_UNSET;
+  private long lastMetadataPos = 0;
+  private int bytesMetadaRemaining = 0;
+  StringBuilder currentMetadata = new StringBuilder();
+
   /**
    * @param userAgent The User-Agent string that should be used.
    * @param contentTypePredicate An optional {@link Predicate}. If a content type is rejected by the
@@ -150,6 +155,28 @@ public DefaultHttpDataSource(String userAgent, Predicate<String> contentTypePred
     this.allowCrossProtocolRedirects = allowCrossProtocolRedirects;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable()
+  {
+    synchronized (currentMetadata) {
+      return metadataInterval != C.METADATA_INTERVAL_UNSET && currentMetadata.length() > 0 && bytesMetadaRemaining == 0;
+    }
+  }
+
+  @Override
+  public String getIcyMetadata()
+  {
+    synchronized (currentMetadata) {
+      if (isIcyMetadataAvailable()) {
+        String newMeta =  new String(currentMetadata);
+        currentMetadata.setLength(0);
+        return newMeta;
+      }
+    }
+
+    return null;
+  }
+
   @Override
   public Uri getUri() {
     return connection == null ? null : Uri.parse(connection.getURL().toString());
@@ -237,6 +264,8 @@ public long open(DataSpec dataSpec) throws HttpDataSourceException {
         long contentLength = getContentLength(connection);
         bytesToRead = contentLength != C.LENGTH_UNSET ? (contentLength - bytesToSkip)
             : C.LENGTH_UNSET;
+
+        metadataInterval = getMetadataInterval(connection);
       }
     } else {
       // Gzip is enabled. If the server opts to use gzip then the content length in the response
@@ -406,10 +435,16 @@ private HttpURLConnection makeConnection(URL url, byte[] postBody, long position
       }
       connection.setRequestProperty("Range", rangeRequest);
     }
+    else
+    {
+      // request Icy-MetaData for continuous streams (unknown length)
+      connection.setRequestProperty("Icy-MetaData", "1");
+    }
     connection.setRequestProperty("User-Agent", userAgent);
     if (!allowGzip) {
       connection.setRequestProperty("Accept-Encoding", "identity");
     }
+
     connection.setInstanceFollowRedirects(followRedirects);
     connection.setDoOutput(postBody != null);
     if (postBody != null) {
@@ -458,6 +493,24 @@ private static URL handleRedirect(URL originalUrl, String location) throws IOExc
     return url;
   }
 
+  /**
+   * Attempts to extract the icy metadata interval from the response headers of an open connection.
+   *
+   * @param connection The open connection.
+   * @return The extracted length, or {@link C#METADATA_INTERVAL_UNSET}.
+   */
+  private static int getMetadataInterval(HttpURLConnection connection) {
+    int metaInt = C.METADATA_INTERVAL_UNSET;
+    String metaInthHeader = connection.getHeaderField("Icy-MetaInt");
+    if (!TextUtils.isEmpty(metaInthHeader)) {
+      try {
+        metaInt = Integer.parseInt(metaInthHeader);
+      } catch (NumberFormatException e) {
+        Log.e(TAG, "Unexpected Meta-Int [" + metaInthHeader + "]");
+      }
+    }
+      return metaInt;
+  }
   /**
    * Attempts to extract the length of the content from the response headers of an open connection.
    *
@@ -558,6 +611,8 @@ private int readInternal(byte[] buffer, int offset, int readLength) throws IOExc
     if (readLength == 0) {
       return 0;
     }
+
+    boolean readMeta = false;
     if (bytesToRead != C.LENGTH_UNSET) {
       long bytesRemaining = bytesToRead - bytesRead;
       if (bytesRemaining == 0) {
@@ -565,6 +620,21 @@ private int readInternal(byte[] buffer, int offset, int readLength) throws IOExc
       }
       readLength = (int) Math.min(readLength, bytesRemaining);
     }
+    else
+    {
+      if (metadataInterval != C.METADATA_INTERVAL_UNSET)
+      {
+        if (bytesMetadaRemaining > 0)
+          readLength = (int) Math.min(readLength, bytesMetadaRemaining);
+        else {
+          readLength = (int) Math.min(readLength, lastMetadataPos + metadataInterval - bytesRead);
+          if (readLength == 0) {
+            readLength = 1;
+            readMeta = true;
+          }
+        }
+      }
+    }
 
     int read = inputStream.read(buffer, offset, readLength);
     if (read == -1) {
@@ -575,6 +645,45 @@ private int readInternal(byte[] buffer, int offset, int readLength) throws IOExc
       return C.RESULT_END_OF_INPUT;
     }
 
+    if (metadataInterval != C.METADATA_INTERVAL_UNSET)
+    {
+        if (readMeta)
+        {
+          int metaLength = /*expressed in number of 16 byte blocks*/ Math.abs(buffer[offset]) * 16;
+
+          currentMetadata.setLength(0);
+          bytesMetadaRemaining = metaLength;
+
+          if (metaLength == 0)
+            lastMetadataPos = bytesRead + read;
+
+          bytesRead += read;
+          return 0;
+        }
+        else
+        {
+          if (bytesMetadaRemaining > 0)
+          {
+            bytesMetadaRemaining -= read;
+            for (int i = 0; i <read; i++) {
+              if (buffer[offset + i] == 0)
+                break;
+
+              currentMetadata.append((char) buffer[offset + i]);
+            }
+
+            if (bytesMetadaRemaining == 0)
+            {
+              // finished reading metadata
+              lastMetadataPos = bytesRead + read;
+            }
+
+            bytesRead += read;
+            return 0;
+          }
+        }
+    }
+
     bytesRead += read;
     if (listener != null) {
       listener.onBytesTransferred(this, read);
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java
index 898d2169b3..9627c30019 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java
@@ -55,6 +55,16 @@ public FileDataSource(TransferListener<? super FileDataSource> listener) {
     this.listener = listener;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws FileDataSourceException {
     try {
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/PriorityDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/PriorityDataSource.java
index a36ccd11b1..a382c2e46c 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/PriorityDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/PriorityDataSource.java
@@ -50,6 +50,16 @@ public PriorityDataSource(DataSource upstream, PriorityTaskManager priorityTaskM
     this.priority = priority;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     priorityTaskManager.proceedOrThrow(priority);
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/RawResourceDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/RawResourceDataSource.java
index 0b7b85b8c3..4b46ee1a63 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/RawResourceDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/RawResourceDataSource.java
@@ -86,6 +86,16 @@ public RawResourceDataSource(Context context,
     this.listener = listener;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws RawResourceDataSourceException {
     try {
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/TeeDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/TeeDataSource.java
index 3f76ee59d5..536811ebb0 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/TeeDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/TeeDataSource.java
@@ -37,6 +37,16 @@ public TeeDataSource(DataSource upstream, DataSink dataSink) {
     this.dataSink = Assertions.checkNotNull(dataSink);
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     long dataLength = upstream.open(dataSpec);
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/UdpDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/UdpDataSource.java
index 68a04d9182..375ce25137 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/UdpDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/UdpDataSource.java
@@ -94,6 +94,16 @@ public UdpDataSource(TransferListener<? super UdpDataSource> listener, int maxPa
     packet = new DatagramPacket(packetBuffer, 0, maxPacketSize);
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws UdpDataSourceException {
     uri = dataSpec.uri;
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java
index 9b29984d06..d5bc527df3 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java
@@ -164,6 +164,16 @@ public CacheDataSource(Cache cache, DataSource upstream, DataSource cacheReadDat
     this.eventListener = eventListener;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     try {
diff --git a/library/src/main/java/com/google/android/exoplayer2/upstream/crypto/AesCipherDataSource.java b/library/src/main/java/com/google/android/exoplayer2/upstream/crypto/AesCipherDataSource.java
index 26ac3b38fa..ceff405c34 100644
--- a/library/src/main/java/com/google/android/exoplayer2/upstream/crypto/AesCipherDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer2/upstream/crypto/AesCipherDataSource.java
@@ -37,6 +37,16 @@ public AesCipherDataSource(byte[] secretKey, DataSource upstream) {
     this.secretKey = secretKey;
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     long dataLength = upstream.open(dataSpec);
diff --git a/playbacktests/src/main/java/com/google/android/exoplayer2/playbacktests/util/ExoHostedTest.java b/playbacktests/src/main/java/com/google/android/exoplayer2/playbacktests/util/ExoHostedTest.java
index 7bf8985b64..f2af30ffea 100644
--- a/playbacktests/src/main/java/com/google/android/exoplayer2/playbacktests/util/ExoHostedTest.java
+++ b/playbacktests/src/main/java/com/google/android/exoplayer2/playbacktests/util/ExoHostedTest.java
@@ -188,6 +188,11 @@ public void onLoadingChanged(boolean isLoading) {
     // Do nothing.
   }
 
+  @Override
+  public void onMetadataUpdate(String metadata) {
+    // Do nothing.
+  }
+
   @Override
   public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {
     // Do nothing.
diff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java
index 37947bb1ab..ac6e1472cc 100644
--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java
+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeDataSource.java
@@ -62,6 +62,16 @@ private FakeDataSource(boolean simulateUnknownLength, ArrayList<Segment> segment
     openedDataSpecs = new ArrayList<>();
   }
 
+  @Override
+  public boolean isIcyMetadataAvailable() {
+    return false;
+  }
+
+  @Override
+  public String getIcyMetadata() {
+    return null;
+  }
+
   @Override
   public long open(DataSpec dataSpec) throws IOException {
     Assertions.checkState(!opened);
