diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java b/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java
index 78ca511436..0af1a1c2e4 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java
@@ -556,13 +556,14 @@ public void release() {
     Assertions.checkState(remainingReleaseCount > 0);
     if (--remainingReleaseCount == 0) {
       if (loader != null) {
-        loader.release();
+        loader.release(new Runnable() {
+          @Override
+          public void run() {
+            extractorHolder.release();
+          }
+        });
         loader = null;
       }
-      if (extractorHolder.extractor != null) {
-        extractorHolder.extractor.release();
-        extractorHolder.extractor = null;
-      }
     }
   }
 
@@ -902,6 +903,13 @@ public Extractor selectExtractor(ExtractorInput input)
       return extractor;
     }
 
+    public void release() {
+      if (extractor != null) {
+        extractor.release();
+        extractor = null;
+      }
+    }
+
   }
 
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/upstream/Loader.java b/library/src/main/java/com/google/android/exoplayer/upstream/Loader.java
index 24d8b78c62..d2a7d672a0 100644
--- a/library/src/main/java/com/google/android/exoplayer/upstream/Loader.java
+++ b/library/src/main/java/com/google/android/exoplayer/upstream/Loader.java
@@ -171,9 +171,24 @@ public void cancelLoading() {
    * This method should be called when the {@link Loader} is no longer required.
    */
   public void release() {
+    release(null);
+  }
+
+  /**
+   * Releases the {@link Loader}, running {@code postLoadAction} on its thread.
+   * <p>
+   * This method should be called when the {@link Loader} is no longer required.
+   *
+   * @param postLoadAction A {@link Runnable} to run on the loader's thread when
+   *     {@link Loadable#load()} is no longer running.
+   */
+  public void release(Runnable postLoadAction) {
     if (loading) {
       cancelLoading();
     }
+    if (postLoadAction != null) {
+      downloadExecutorService.submit(postLoadAction);
+    }
     downloadExecutorService.shutdown();
   }
 
