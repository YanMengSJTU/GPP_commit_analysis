diff --git a/library/core/build.gradle b/library/core/build.gradle
index 0fb72af607..72bbb00668 100644
--- a/library/core/build.gradle
+++ b/library/core/build.gradle
@@ -23,13 +23,6 @@ android {
         targetSdkVersion project.ext.targetSdkVersion
     }
 
-    // Workaround to prevent circular dependency on project :testutils.
-    sourceSets {
-        androidTest {
-            java.srcDirs += "../../testutils/src/main/java/"
-        }
-    }
-
     buildTypes {
         // Re-enable test coverage when the following issue is fixed:
         // https://issuetracker.google.com/issues/37019591
@@ -41,7 +34,4 @@ android {
 
 dependencies {
     compile 'com.android.support:support-annotations:' + supportLibraryVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker:' + dexmakerVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:' + dexmakerVersion
-    androidTestCompile 'org.mockito:mockito-core:' + mockitoVersion
 }
\ No newline at end of file
diff --git a/library/core/src/androidTest/AndroidManifest.xml b/library/core/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index aeddc611cf..0000000000
--- a/library/core/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2016 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer2.core.test">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner"/>
-    <provider
-      android:authorities="com.google.android.exoplayer2.core.test"
-      android:name="com.google.android.exoplayer2.upstream.ContentDataSourceTest$TestContentProvider"/>
-  </application>
-
-  <instrumentation
-      android:targetPackage="com.google.android.exoplayer2.core.test"
-      android:name="android.test.InstrumentationTestRunner"/>
-
-</manifest>
diff --git a/library/core/src/androidTest/assets/binary/1024_incrementing_bytes.mp3 b/library/core/src/androidTest/assets/binary/1024_incrementing_bytes.mp3
deleted file mode 100644
index c8b49c8cd5..0000000000
Binary files a/library/core/src/androidTest/assets/binary/1024_incrementing_bytes.mp3 and /dev/null differ
diff --git a/library/core/src/androidTest/assets/flv/sample.flv b/library/core/src/androidTest/assets/flv/sample.flv
deleted file mode 100644
index 8256a4e33d..0000000000
Binary files a/library/core/src/androidTest/assets/flv/sample.flv and /dev/null differ
diff --git a/library/core/src/androidTest/assets/flv/sample.flv.0.dump b/library/core/src/androidTest/assets/flv/sample.flv.0.dump
deleted file mode 100644
index b4129ecb88..0000000000
--- a/library/core/src/androidTest/assets/flv/sample.flv.0.dump
+++ /dev/null
@@ -1,355 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = 1136000
-  getPosition(0) = 0
-numberOfTracks = 2
-track 8:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 2, hash 5F7
-  sample count = 45
-  sample 0:
-    time = 112000
-    flags = 1
-    data = length 23, hash 47DE9131
-  sample 1:
-    time = 135000
-    flags = 1
-    data = length 6, hash 31EC5206
-  sample 2:
-    time = 158000
-    flags = 1
-    data = length 148, hash 894A176B
-  sample 3:
-    time = 181000
-    flags = 1
-    data = length 189, hash CEF235A1
-  sample 4:
-    time = 205000
-    flags = 1
-    data = length 205, hash BBF5F7B0
-  sample 5:
-    time = 228000
-    flags = 1
-    data = length 210, hash F278B193
-  sample 6:
-    time = 251000
-    flags = 1
-    data = length 210, hash 82DA1589
-  sample 7:
-    time = 274000
-    flags = 1
-    data = length 207, hash 5BE231DF
-  sample 8:
-    time = 298000
-    flags = 1
-    data = length 225, hash 18819EE1
-  sample 9:
-    time = 321000
-    flags = 1
-    data = length 215, hash CA7FA67B
-  sample 10:
-    time = 344000
-    flags = 1
-    data = length 211, hash 581A1C18
-  sample 11:
-    time = 367000
-    flags = 1
-    data = length 216, hash ADB88187
-  sample 12:
-    time = 390000
-    flags = 1
-    data = length 229, hash 2E8BA4DC
-  sample 13:
-    time = 414000
-    flags = 1
-    data = length 232, hash 22F0C510
-  sample 14:
-    time = 437000
-    flags = 1
-    data = length 235, hash 867AD0DC
-  sample 15:
-    time = 460000
-    flags = 1
-    data = length 231, hash 84E823A8
-  sample 16:
-    time = 483000
-    flags = 1
-    data = length 226, hash 1BEF3A95
-  sample 17:
-    time = 507000
-    flags = 1
-    data = length 216, hash EAA345AE
-  sample 18:
-    time = 530000
-    flags = 1
-    data = length 229, hash 6957411F
-  sample 19:
-    time = 553000
-    flags = 1
-    data = length 219, hash 41275022
-  sample 20:
-    time = 576000
-    flags = 1
-    data = length 241, hash 6495DF96
-  sample 21:
-    time = 599000
-    flags = 1
-    data = length 228, hash 63D95906
-  sample 22:
-    time = 623000
-    flags = 1
-    data = length 238, hash 34F676F9
-  sample 23:
-    time = 646000
-    flags = 1
-    data = length 234, hash E5CBC045
-  sample 24:
-    time = 669000
-    flags = 1
-    data = length 231, hash 5FC43661
-  sample 25:
-    time = 692000
-    flags = 1
-    data = length 217, hash 682708ED
-  sample 26:
-    time = 716000
-    flags = 1
-    data = length 239, hash D43780FC
-  sample 27:
-    time = 739000
-    flags = 1
-    data = length 243, hash C5E17980
-  sample 28:
-    time = 762000
-    flags = 1
-    data = length 231, hash AC5837BA
-  sample 29:
-    time = 785000
-    flags = 1
-    data = length 230, hash 169EE895
-  sample 30:
-    time = 808000
-    flags = 1
-    data = length 238, hash C48FF3F1
-  sample 31:
-    time = 832000
-    flags = 1
-    data = length 225, hash 531E4599
-  sample 32:
-    time = 855000
-    flags = 1
-    data = length 232, hash CB3C6B8D
-  sample 33:
-    time = 878000
-    flags = 1
-    data = length 243, hash F8C94C7
-  sample 34:
-    time = 901000
-    flags = 1
-    data = length 232, hash A646A7D0
-  sample 35:
-    time = 925000
-    flags = 1
-    data = length 237, hash E8B787A5
-  sample 36:
-    time = 948000
-    flags = 1
-    data = length 228, hash 3FA7A29F
-  sample 37:
-    time = 971000
-    flags = 1
-    data = length 235, hash B9B33B0A
-  sample 38:
-    time = 994000
-    flags = 1
-    data = length 264, hash 71A4869E
-  sample 39:
-    time = 1017000
-    flags = 1
-    data = length 257, hash D049B54C
-  sample 40:
-    time = 1041000
-    flags = 1
-    data = length 227, hash 66757231
-  sample 41:
-    time = 1064000
-    flags = 1
-    data = length 227, hash BD374F1B
-  sample 42:
-    time = 1087000
-    flags = 1
-    data = length 235, hash 999477F6
-  sample 43:
-    time = 1110000
-    flags = 1
-    data = length 229, hash FFF98DF0
-  sample 44:
-    time = 1134000
-    flags = 1
-    data = length 6, hash 31B22286
-track 9:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = -1
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash F6F3D010
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 67000
-    flags = 1
-    data = length 36477, hash F0F36CFE
-  sample 1:
-    time = 134000
-    flags = 0
-    data = length 5341, hash 40B85E2
-  sample 2:
-    time = 100000
-    flags = 0
-    data = length 596, hash 357B4D92
-  sample 3:
-    time = 267000
-    flags = 0
-    data = length 7704, hash A39EDA06
-  sample 4:
-    time = 200000
-    flags = 0
-    data = length 989, hash 2813C72D
-  sample 5:
-    time = 167000
-    flags = 0
-    data = length 721, hash C50D1C73
-  sample 6:
-    time = 234000
-    flags = 0
-    data = length 519, hash 65FE1911
-  sample 7:
-    time = 400000
-    flags = 0
-    data = length 6160, hash E1CAC0EC
-  sample 8:
-    time = 334000
-    flags = 0
-    data = length 953, hash 7160C661
-  sample 9:
-    time = 300000
-    flags = 0
-    data = length 620, hash 7A7AE07C
-  sample 10:
-    time = 367000
-    flags = 0
-    data = length 405, hash 5CC7F4E7
-  sample 11:
-    time = 500000
-    flags = 0
-    data = length 4852, hash 9DB6979D
-  sample 12:
-    time = 467000
-    flags = 0
-    data = length 547, hash E31A6979
-  sample 13:
-    time = 434000
-    flags = 0
-    data = length 570, hash FEC40D00
-  sample 14:
-    time = 634000
-    flags = 0
-    data = length 5525, hash 7C478F7E
-  sample 15:
-    time = 567000
-    flags = 0
-    data = length 1082, hash DA07059A
-  sample 16:
-    time = 534000
-    flags = 0
-    data = length 807, hash 93478E6B
-  sample 17:
-    time = 600000
-    flags = 0
-    data = length 744, hash 9A8E6026
-  sample 18:
-    time = 767000
-    flags = 0
-    data = length 4732, hash C73B23C0
-  sample 19:
-    time = 700000
-    flags = 0
-    data = length 1004, hash 8A19A228
-  sample 20:
-    time = 667000
-    flags = 0
-    data = length 794, hash 8126022C
-  sample 21:
-    time = 734000
-    flags = 0
-    data = length 645, hash F08300E5
-  sample 22:
-    time = 900000
-    flags = 0
-    data = length 2684, hash 727FE378
-  sample 23:
-    time = 834000
-    flags = 0
-    data = length 787, hash 419A7821
-  sample 24:
-    time = 800000
-    flags = 0
-    data = length 649, hash 5C159346
-  sample 25:
-    time = 867000
-    flags = 0
-    data = length 509, hash F912D655
-  sample 26:
-    time = 1034000
-    flags = 0
-    data = length 1226, hash 29815C21
-  sample 27:
-    time = 967000
-    flags = 0
-    data = length 898, hash D997AD0A
-  sample 28:
-    time = 934000
-    flags = 0
-    data = length 476, hash A0423645
-  sample 29:
-    time = 1000000
-    flags = 0
-    data = length 486, hash DDF32CBB
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mkv/sample.mkv b/library/core/src/androidTest/assets/mkv/sample.mkv
deleted file mode 100644
index 2a795cb566..0000000000
Binary files a/library/core/src/androidTest/assets/mkv/sample.mkv and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mkv/sample.mkv.0.dump b/library/core/src/androidTest/assets/mkv/sample.mkv.0.dump
deleted file mode 100644
index 34bad9b82a..0000000000
--- a/library/core/src/androidTest/assets/mkv/sample.mkv.0.dump
+++ /dev/null
@@ -1,290 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1072000
-  getPosition(0) = 5576
-numberOfTracks = 2
-track 1:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = -1
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash F6F3D010
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 67000
-    flags = 1
-    data = length 36477, hash F0F36CFE
-  sample 1:
-    time = 134000
-    flags = 0
-    data = length 5341, hash 40B85E2
-  sample 2:
-    time = 100000
-    flags = 0
-    data = length 596, hash 357B4D92
-  sample 3:
-    time = 267000
-    flags = 0
-    data = length 7704, hash A39EDA06
-  sample 4:
-    time = 200000
-    flags = 0
-    data = length 989, hash 2813C72D
-  sample 5:
-    time = 167000
-    flags = 0
-    data = length 721, hash C50D1C73
-  sample 6:
-    time = 234000
-    flags = 0
-    data = length 519, hash 65FE1911
-  sample 7:
-    time = 400000
-    flags = 0
-    data = length 6160, hash E1CAC0EC
-  sample 8:
-    time = 334000
-    flags = 0
-    data = length 953, hash 7160C661
-  sample 9:
-    time = 300000
-    flags = 0
-    data = length 620, hash 7A7AE07C
-  sample 10:
-    time = 367000
-    flags = 0
-    data = length 405, hash 5CC7F4E7
-  sample 11:
-    time = 500000
-    flags = 0
-    data = length 4852, hash 9DB6979D
-  sample 12:
-    time = 467000
-    flags = 0
-    data = length 547, hash E31A6979
-  sample 13:
-    time = 434000
-    flags = 0
-    data = length 570, hash FEC40D00
-  sample 14:
-    time = 634000
-    flags = 0
-    data = length 5525, hash 7C478F7E
-  sample 15:
-    time = 567000
-    flags = 0
-    data = length 1082, hash DA07059A
-  sample 16:
-    time = 534000
-    flags = 0
-    data = length 807, hash 93478E6B
-  sample 17:
-    time = 600000
-    flags = 0
-    data = length 744, hash 9A8E6026
-  sample 18:
-    time = 767000
-    flags = 0
-    data = length 4732, hash C73B23C0
-  sample 19:
-    time = 700000
-    flags = 0
-    data = length 1004, hash 8A19A228
-  sample 20:
-    time = 667000
-    flags = 0
-    data = length 794, hash 8126022C
-  sample 21:
-    time = 734000
-    flags = 0
-    data = length 645, hash F08300E5
-  sample 22:
-    time = 900000
-    flags = 0
-    data = length 2684, hash 727FE378
-  sample 23:
-    time = 834000
-    flags = 0
-    data = length 787, hash 419A7821
-  sample 24:
-    time = 800000
-    flags = 0
-    data = length 649, hash 5C159346
-  sample 25:
-    time = 867000
-    flags = 0
-    data = length 509, hash F912D655
-  sample 26:
-    time = 1034000
-    flags = 0
-    data = length 1226, hash 29815C21
-  sample 27:
-    time = 967000
-    flags = 0
-    data = length 898, hash D997AD0A
-  sample 28:
-    time = 934000
-    flags = 0
-    data = length 476, hash A0423645
-  sample 29:
-    time = 1000000
-    flags = 0
-    data = length 486, hash DDF32CBB
-track 2:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/ac3
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 1
-    language = und
-    drmInitData = -
-    initializationData:
-  sample count = 29
-  sample 0:
-    time = 129000
-    flags = 1
-    data = length 416, hash 211F2286
-  sample 1:
-    time = 164000
-    flags = 1
-    data = length 418, hash 77425A86
-  sample 2:
-    time = 198829
-    flags = 1
-    data = length 418, hash A0FE5CA1
-  sample 3:
-    time = 233000
-    flags = 1
-    data = length 418, hash 2309B066
-  sample 4:
-    time = 268000
-    flags = 1
-    data = length 418, hash 928A653B
-  sample 5:
-    time = 303000
-    flags = 1
-    data = length 418, hash 3422F0CB
-  sample 6:
-    time = 337829
-    flags = 1
-    data = length 418, hash EFF43D5B
-  sample 7:
-    time = 373000
-    flags = 1
-    data = length 418, hash FC8093C7
-  sample 8:
-    time = 408000
-    flags = 1
-    data = length 418, hash CCC08A16
-  sample 9:
-    time = 443000
-    flags = 1
-    data = length 418, hash 2A6EE863
-  sample 10:
-    time = 477829
-    flags = 1
-    data = length 418, hash D69A9251
-  sample 11:
-    time = 512000
-    flags = 1
-    data = length 418, hash BCFB758D
-  sample 12:
-    time = 547000
-    flags = 1
-    data = length 418, hash 11B66799
-  sample 13:
-    time = 581829
-    flags = 1
-    data = length 418, hash C824D392
-  sample 14:
-    time = 617000
-    flags = 1
-    data = length 418, hash C167D872
-  sample 15:
-    time = 652000
-    flags = 1
-    data = length 418, hash 4221C855
-  sample 16:
-    time = 687000
-    flags = 1
-    data = length 418, hash 4D4FF934
-  sample 17:
-    time = 721829
-    flags = 1
-    data = length 418, hash 984AA025
-  sample 18:
-    time = 757000
-    flags = 1
-    data = length 418, hash BB788B46
-  sample 19:
-    time = 791000
-    flags = 1
-    data = length 418, hash 9EFBFD97
-  sample 20:
-    time = 826000
-    flags = 1
-    data = length 418, hash DF1A460C
-  sample 21:
-    time = 860829
-    flags = 1
-    data = length 418, hash 2BDB56A
-  sample 22:
-    time = 896000
-    flags = 1
-    data = length 418, hash CA230060
-  sample 23:
-    time = 931000
-    flags = 1
-    data = length 418, hash D2F19F41
-  sample 24:
-    time = 965000
-    flags = 1
-    data = length 418, hash AF392D79
-  sample 25:
-    time = 999829
-    flags = 1
-    data = length 418, hash C5D7F2A3
-  sample 26:
-    time = 1035000
-    flags = 1
-    data = length 418, hash 733A35AE
-  sample 27:
-    time = 1069829
-    flags = 1
-    data = length 418, hash DE46E5D3
-  sample 28:
-    time = 1104000
-    flags = 1
-    data = length 418, hash 56AB8D37
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mkv/sample.mkv.1.dump b/library/core/src/androidTest/assets/mkv/sample.mkv.1.dump
deleted file mode 100644
index 546c934eff..0000000000
--- a/library/core/src/androidTest/assets/mkv/sample.mkv.1.dump
+++ /dev/null
@@ -1,226 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1072000
-  getPosition(0) = 5576
-numberOfTracks = 2
-track 1:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = -1
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash F6F3D010
-      data = length 10, hash 7A0D0F2B
-  sample count = 22
-  sample 0:
-    time = 334000
-    flags = 0
-    data = length 953, hash 7160C661
-  sample 1:
-    time = 300000
-    flags = 0
-    data = length 620, hash 7A7AE07C
-  sample 2:
-    time = 367000
-    flags = 0
-    data = length 405, hash 5CC7F4E7
-  sample 3:
-    time = 500000
-    flags = 0
-    data = length 4852, hash 9DB6979D
-  sample 4:
-    time = 467000
-    flags = 0
-    data = length 547, hash E31A6979
-  sample 5:
-    time = 434000
-    flags = 0
-    data = length 570, hash FEC40D00
-  sample 6:
-    time = 634000
-    flags = 0
-    data = length 5525, hash 7C478F7E
-  sample 7:
-    time = 567000
-    flags = 0
-    data = length 1082, hash DA07059A
-  sample 8:
-    time = 534000
-    flags = 0
-    data = length 807, hash 93478E6B
-  sample 9:
-    time = 600000
-    flags = 0
-    data = length 744, hash 9A8E6026
-  sample 10:
-    time = 767000
-    flags = 0
-    data = length 4732, hash C73B23C0
-  sample 11:
-    time = 700000
-    flags = 0
-    data = length 1004, hash 8A19A228
-  sample 12:
-    time = 667000
-    flags = 0
-    data = length 794, hash 8126022C
-  sample 13:
-    time = 734000
-    flags = 0
-    data = length 645, hash F08300E5
-  sample 14:
-    time = 900000
-    flags = 0
-    data = length 2684, hash 727FE378
-  sample 15:
-    time = 834000
-    flags = 0
-    data = length 787, hash 419A7821
-  sample 16:
-    time = 800000
-    flags = 0
-    data = length 649, hash 5C159346
-  sample 17:
-    time = 867000
-    flags = 0
-    data = length 509, hash F912D655
-  sample 18:
-    time = 1034000
-    flags = 0
-    data = length 1226, hash 29815C21
-  sample 19:
-    time = 967000
-    flags = 0
-    data = length 898, hash D997AD0A
-  sample 20:
-    time = 934000
-    flags = 0
-    data = length 476, hash A0423645
-  sample 21:
-    time = 1000000
-    flags = 0
-    data = length 486, hash DDF32CBB
-track 2:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/ac3
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 1
-    language = und
-    drmInitData = -
-    initializationData:
-  sample count = 21
-  sample 0:
-    time = 408000
-    flags = 1
-    data = length 418, hash CCC08A16
-  sample 1:
-    time = 443000
-    flags = 1
-    data = length 418, hash 2A6EE863
-  sample 2:
-    time = 477829
-    flags = 1
-    data = length 418, hash D69A9251
-  sample 3:
-    time = 512000
-    flags = 1
-    data = length 418, hash BCFB758D
-  sample 4:
-    time = 547000
-    flags = 1
-    data = length 418, hash 11B66799
-  sample 5:
-    time = 581829
-    flags = 1
-    data = length 418, hash C824D392
-  sample 6:
-    time = 617000
-    flags = 1
-    data = length 418, hash C167D872
-  sample 7:
-    time = 652000
-    flags = 1
-    data = length 418, hash 4221C855
-  sample 8:
-    time = 687000
-    flags = 1
-    data = length 418, hash 4D4FF934
-  sample 9:
-    time = 721829
-    flags = 1
-    data = length 418, hash 984AA025
-  sample 10:
-    time = 757000
-    flags = 1
-    data = length 418, hash BB788B46
-  sample 11:
-    time = 791000
-    flags = 1
-    data = length 418, hash 9EFBFD97
-  sample 12:
-    time = 826000
-    flags = 1
-    data = length 418, hash DF1A460C
-  sample 13:
-    time = 860829
-    flags = 1
-    data = length 418, hash 2BDB56A
-  sample 14:
-    time = 896000
-    flags = 1
-    data = length 418, hash CA230060
-  sample 15:
-    time = 931000
-    flags = 1
-    data = length 418, hash D2F19F41
-  sample 16:
-    time = 965000
-    flags = 1
-    data = length 418, hash AF392D79
-  sample 17:
-    time = 999829
-    flags = 1
-    data = length 418, hash C5D7F2A3
-  sample 18:
-    time = 1035000
-    flags = 1
-    data = length 418, hash 733A35AE
-  sample 19:
-    time = 1069829
-    flags = 1
-    data = length 418, hash DE46E5D3
-  sample 20:
-    time = 1104000
-    flags = 1
-    data = length 418, hash 56AB8D37
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mkv/sample.mkv.2.dump b/library/core/src/androidTest/assets/mkv/sample.mkv.2.dump
deleted file mode 100644
index ec84908172..0000000000
--- a/library/core/src/androidTest/assets/mkv/sample.mkv.2.dump
+++ /dev/null
@@ -1,138 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1072000
-  getPosition(0) = 5576
-numberOfTracks = 2
-track 1:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = -1
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash F6F3D010
-      data = length 10, hash 7A0D0F2B
-  sample count = 11
-  sample 0:
-    time = 700000
-    flags = 0
-    data = length 1004, hash 8A19A228
-  sample 1:
-    time = 667000
-    flags = 0
-    data = length 794, hash 8126022C
-  sample 2:
-    time = 734000
-    flags = 0
-    data = length 645, hash F08300E5
-  sample 3:
-    time = 900000
-    flags = 0
-    data = length 2684, hash 727FE378
-  sample 4:
-    time = 834000
-    flags = 0
-    data = length 787, hash 419A7821
-  sample 5:
-    time = 800000
-    flags = 0
-    data = length 649, hash 5C159346
-  sample 6:
-    time = 867000
-    flags = 0
-    data = length 509, hash F912D655
-  sample 7:
-    time = 1034000
-    flags = 0
-    data = length 1226, hash 29815C21
-  sample 8:
-    time = 967000
-    flags = 0
-    data = length 898, hash D997AD0A
-  sample 9:
-    time = 934000
-    flags = 0
-    data = length 476, hash A0423645
-  sample 10:
-    time = 1000000
-    flags = 0
-    data = length 486, hash DDF32CBB
-track 2:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/ac3
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 1
-    language = und
-    drmInitData = -
-    initializationData:
-  sample count = 10
-  sample 0:
-    time = 791000
-    flags = 1
-    data = length 418, hash 9EFBFD97
-  sample 1:
-    time = 826000
-    flags = 1
-    data = length 418, hash DF1A460C
-  sample 2:
-    time = 860829
-    flags = 1
-    data = length 418, hash 2BDB56A
-  sample 3:
-    time = 896000
-    flags = 1
-    data = length 418, hash CA230060
-  sample 4:
-    time = 931000
-    flags = 1
-    data = length 418, hash D2F19F41
-  sample 5:
-    time = 965000
-    flags = 1
-    data = length 418, hash AF392D79
-  sample 6:
-    time = 999829
-    flags = 1
-    data = length 418, hash C5D7F2A3
-  sample 7:
-    time = 1035000
-    flags = 1
-    data = length 418, hash 733A35AE
-  sample 8:
-    time = 1069829
-    flags = 1
-    data = length 418, hash DE46E5D3
-  sample 9:
-    time = 1104000
-    flags = 1
-    data = length 418, hash 56AB8D37
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mkv/sample.mkv.3.dump b/library/core/src/androidTest/assets/mkv/sample.mkv.3.dump
deleted file mode 100644
index ac8d9a2c1c..0000000000
--- a/library/core/src/androidTest/assets/mkv/sample.mkv.3.dump
+++ /dev/null
@@ -1,66 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1072000
-  getPosition(0) = 5576
-numberOfTracks = 2
-track 1:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = -1
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash F6F3D010
-      data = length 10, hash 7A0D0F2B
-  sample count = 0
-track 2:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/ac3
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 1
-    language = und
-    drmInitData = -
-    initializationData:
-  sample count = 3
-  sample 0:
-    time = 1035000
-    flags = 1
-    data = length 418, hash 733A35AE
-  sample 1:
-    time = 1069829
-    flags = 1
-    data = length 418, hash DE46E5D3
-  sample 2:
-    time = 1104000
-    flags = 1
-    data = length 418, hash 56AB8D37
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mkv/subsample_encrypted_altref.webm b/library/core/src/androidTest/assets/mkv/subsample_encrypted_altref.webm
deleted file mode 100644
index a929e9545d..0000000000
Binary files a/library/core/src/androidTest/assets/mkv/subsample_encrypted_altref.webm and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mkv/subsample_encrypted_altref.webm.0.dump b/library/core/src/androidTest/assets/mkv/subsample_encrypted_altref.webm.0.dump
deleted file mode 100644
index f533e14c3f..0000000000
--- a/library/core/src/androidTest/assets/mkv/subsample_encrypted_altref.webm.0.dump
+++ /dev/null
@@ -1,35 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = 1000
-  getPosition(0) = 0
-numberOfTracks = 1
-track 1:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/x-vnd.on2.vp9
-    maxInputSize = -1
-    width = 360
-    height = 240
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = 1305012705
-    initializationData:
-  sample count = 1
-  sample 0:
-    time = 0
-    flags = 1073741824
-    data = length 39, hash B7FE77F4
-    crypto mode = 1
-    encryption key = length 16, hash 4CE944CF
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mkv/subsample_encrypted_noaltref.webm b/library/core/src/androidTest/assets/mkv/subsample_encrypted_noaltref.webm
deleted file mode 100644
index d4b357e5fb..0000000000
Binary files a/library/core/src/androidTest/assets/mkv/subsample_encrypted_noaltref.webm and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mkv/subsample_encrypted_noaltref.webm.0.dump b/library/core/src/androidTest/assets/mkv/subsample_encrypted_noaltref.webm.0.dump
deleted file mode 100644
index d84c549dea..0000000000
--- a/library/core/src/androidTest/assets/mkv/subsample_encrypted_noaltref.webm.0.dump
+++ /dev/null
@@ -1,35 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = 1000
-  getPosition(0) = 0
-numberOfTracks = 1
-track 1:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/x-vnd.on2.vp9
-    maxInputSize = -1
-    width = 360
-    height = 240
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = 1305012705
-    initializationData:
-  sample count = 1
-  sample 0:
-    time = 0
-    flags = 1073741824
-    data = length 24, hash E58668B1
-    crypto mode = 1
-    encryption key = length 16, hash 4CE944CF
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/bear.mp3 b/library/core/src/androidTest/assets/mp3/bear.mp3
deleted file mode 100644
index 0c1001ce39..0000000000
Binary files a/library/core/src/androidTest/assets/mp3/bear.mp3 and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mp3/bear.mp3.0.dump b/library/core/src/androidTest/assets/mp3/bear.mp3.0.dump
deleted file mode 100644
index b66d263c84..0000000000
--- a/library/core/src/androidTest/assets/mp3/bear.mp3.0.dump
+++ /dev/null
@@ -1,493 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2784000
-  getPosition(0) = 201
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = 956
-    encoderPadding = 3352
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 116
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 384, hash B1FBF8BD
-  sample 1:
-    time = 24000
-    flags = 1
-    data = length 384, hash 2B9A3B72
-  sample 2:
-    time = 48000
-    flags = 1
-    data = length 384, hash 33C65BA6
-  sample 3:
-    time = 72000
-    flags = 1
-    data = length 384, hash E64FE475
-  sample 4:
-    time = 96000
-    flags = 1
-    data = length 384, hash E9122D34
-  sample 5:
-    time = 120000
-    flags = 1
-    data = length 384, hash 9CC87327
-  sample 6:
-    time = 144000
-    flags = 1
-    data = length 384, hash 118CF6DA
-  sample 7:
-    time = 168000
-    flags = 1
-    data = length 384, hash 9610D9D6
-  sample 8:
-    time = 192000
-    flags = 1
-    data = length 384, hash 6ABFE405
-  sample 9:
-    time = 216000
-    flags = 1
-    data = length 384, hash EE5C93A9
-  sample 10:
-    time = 240000
-    flags = 1
-    data = length 384, hash 44E0D140
-  sample 11:
-    time = 264000
-    flags = 1
-    data = length 384, hash 3B3DE1D6
-  sample 12:
-    time = 288000
-    flags = 1
-    data = length 384, hash 3A572E7C
-  sample 13:
-    time = 312000
-    flags = 1
-    data = length 384, hash 240316E1
-  sample 14:
-    time = 336000
-    flags = 1
-    data = length 384, hash 9EDA9AA0
-  sample 15:
-    time = 360000
-    flags = 1
-    data = length 384, hash E31AB44F
-  sample 16:
-    time = 384000
-    flags = 1
-    data = length 384, hash A12497D6
-  sample 17:
-    time = 408000
-    flags = 1
-    data = length 384, hash 8A179B75
-  sample 18:
-    time = 432000
-    flags = 1
-    data = length 384, hash FCE9E107
-  sample 19:
-    time = 456000
-    flags = 1
-    data = length 384, hash 52CA9665
-  sample 20:
-    time = 480000
-    flags = 1
-    data = length 384, hash 9935EC4C
-  sample 21:
-    time = 504000
-    flags = 1
-    data = length 384, hash 33CA710A
-  sample 22:
-    time = 528000
-    flags = 1
-    data = length 384, hash 45B5D69
-  sample 23:
-    time = 552000
-    flags = 1
-    data = length 384, hash 7CEC655D
-  sample 24:
-    time = 576000
-    flags = 1
-    data = length 384, hash 3B5D8310
-  sample 25:
-    time = 600000
-    flags = 1
-    data = length 384, hash 3EB640F8
-  sample 26:
-    time = 624000
-    flags = 1
-    data = length 384, hash FAEC53B4
-  sample 27:
-    time = 648000
-    flags = 1
-    data = length 384, hash 92C8A6EE
-  sample 28:
-    time = 672000
-    flags = 1
-    data = length 384, hash 7CBAAE91
-  sample 29:
-    time = 696000
-    flags = 1
-    data = length 384, hash 74AC754E
-  sample 30:
-    time = 720000
-    flags = 1
-    data = length 384, hash 8242C434
-  sample 31:
-    time = 744000
-    flags = 1
-    data = length 384, hash 686C06FB
-  sample 32:
-    time = 768000
-    flags = 1
-    data = length 384, hash 1D872A3F
-  sample 33:
-    time = 792000
-    flags = 1
-    data = length 384, hash 900A20BC
-  sample 34:
-    time = 816000
-    flags = 1
-    data = length 384, hash B72FD8E7
-  sample 35:
-    time = 840000
-    flags = 1
-    data = length 384, hash 85C9A1FB
-  sample 36:
-    time = 864000
-    flags = 1
-    data = length 384, hash 1600DF3
-  sample 37:
-    time = 888000
-    flags = 1
-    data = length 384, hash D6C2138A
-  sample 38:
-    time = 912000
-    flags = 1
-    data = length 384, hash 737BA69E
-  sample 39:
-    time = 936000
-    flags = 1
-    data = length 384, hash F7E344F4
-  sample 40:
-    time = 960000
-    flags = 1
-    data = length 384, hash 14EF6AFD
-  sample 41:
-    time = 984000
-    flags = 1
-    data = length 384, hash 61C9B92C
-  sample 42:
-    time = 1008000
-    flags = 1
-    data = length 384, hash ABE1368
-  sample 43:
-    time = 1032000
-    flags = 1
-    data = length 384, hash 6A3B8547
-  sample 44:
-    time = 1056000
-    flags = 1
-    data = length 384, hash 30E905FA
-  sample 45:
-    time = 1080000
-    flags = 1
-    data = length 384, hash 21A267CD
-  sample 46:
-    time = 1104000
-    flags = 1
-    data = length 384, hash D96A2651
-  sample 47:
-    time = 1128000
-    flags = 1
-    data = length 384, hash 72340177
-  sample 48:
-    time = 1152000
-    flags = 1
-    data = length 384, hash 9345E744
-  sample 49:
-    time = 1176000
-    flags = 1
-    data = length 384, hash FDE39E3A
-  sample 50:
-    time = 1200000
-    flags = 1
-    data = length 384, hash F0B7465
-  sample 51:
-    time = 1224000
-    flags = 1
-    data = length 384, hash 3693AB86
-  sample 52:
-    time = 1248000
-    flags = 1
-    data = length 384, hash F39719B1
-  sample 53:
-    time = 1272000
-    flags = 1
-    data = length 384, hash DA3958DC
-  sample 54:
-    time = 1296000
-    flags = 1
-    data = length 384, hash FDC7599F
-  sample 55:
-    time = 1320000
-    flags = 1
-    data = length 384, hash AEFF8471
-  sample 56:
-    time = 1344000
-    flags = 1
-    data = length 384, hash 89C92C19
-  sample 57:
-    time = 1368000
-    flags = 1
-    data = length 384, hash 5C786A4B
-  sample 58:
-    time = 1392000
-    flags = 1
-    data = length 384, hash 5ACA8B
-  sample 59:
-    time = 1416000
-    flags = 1
-    data = length 384, hash 7755974C
-  sample 60:
-    time = 1440000
-    flags = 1
-    data = length 384, hash 3934B73C
-  sample 61:
-    time = 1464000
-    flags = 1
-    data = length 384, hash DDD70A2F
-  sample 62:
-    time = 1488000
-    flags = 1
-    data = length 384, hash 8FACE2EF
-  sample 63:
-    time = 1512000
-    flags = 1
-    data = length 384, hash 4A602591
-  sample 64:
-    time = 1536000
-    flags = 1
-    data = length 384, hash D019AA2D
-  sample 65:
-    time = 1560000
-    flags = 1
-    data = length 384, hash 8A680B9D
-  sample 66:
-    time = 1584000
-    flags = 1
-    data = length 384, hash B655C959
-  sample 67:
-    time = 1608000
-    flags = 1
-    data = length 384, hash 2168336B
-  sample 68:
-    time = 1632000
-    flags = 1
-    data = length 384, hash D77F6D31
-  sample 69:
-    time = 1656000
-    flags = 1
-    data = length 384, hash 524B4B2F
-  sample 70:
-    time = 1680000
-    flags = 1
-    data = length 384, hash 4752DDFC
-  sample 71:
-    time = 1704000
-    flags = 1
-    data = length 384, hash E786727F
-  sample 72:
-    time = 1728000
-    flags = 1
-    data = length 384, hash 5DA6FB8C
-  sample 73:
-    time = 1752000
-    flags = 1
-    data = length 384, hash 92F24269
-  sample 74:
-    time = 1776000
-    flags = 1
-    data = length 384, hash CD0A3BA1
-  sample 75:
-    time = 1800000
-    flags = 1
-    data = length 384, hash 7D00409F
-  sample 76:
-    time = 1824000
-    flags = 1
-    data = length 384, hash D7ADB5FA
-  sample 77:
-    time = 1848000
-    flags = 1
-    data = length 384, hash 4A140209
-  sample 78:
-    time = 1872000
-    flags = 1
-    data = length 384, hash E801184A
-  sample 79:
-    time = 1896000
-    flags = 1
-    data = length 384, hash 53C6CF9C
-  sample 80:
-    time = 1920000
-    flags = 1
-    data = length 384, hash 19A8D99F
-  sample 81:
-    time = 1944000
-    flags = 1
-    data = length 384, hash E47EB43F
-  sample 82:
-    time = 1968000
-    flags = 1
-    data = length 384, hash 4EA329E7
-  sample 83:
-    time = 1992000
-    flags = 1
-    data = length 384, hash 1CCAAE62
-  sample 84:
-    time = 2016000
-    flags = 1
-    data = length 384, hash ED3F8C66
-  sample 85:
-    time = 2040000
-    flags = 1
-    data = length 384, hash D3D646B6
-  sample 86:
-    time = 2064000
-    flags = 1
-    data = length 384, hash 68CD1574
-  sample 87:
-    time = 2088000
-    flags = 1
-    data = length 384, hash 8CEAB382
-  sample 88:
-    time = 2112000
-    flags = 1
-    data = length 384, hash D54B1C48
-  sample 89:
-    time = 2136000
-    flags = 1
-    data = length 384, hash FFE2EE90
-  sample 90:
-    time = 2160000
-    flags = 1
-    data = length 384, hash BFE8A673
-  sample 91:
-    time = 2184000
-    flags = 1
-    data = length 384, hash 978B1C92
-  sample 92:
-    time = 2208000
-    flags = 1
-    data = length 384, hash 810CC71E
-  sample 93:
-    time = 2232000
-    flags = 1
-    data = length 384, hash 44FE42D9
-  sample 94:
-    time = 2256000
-    flags = 1
-    data = length 384, hash 2F5BB02C
-  sample 95:
-    time = 2280000
-    flags = 1
-    data = length 384, hash 77DDB90
-  sample 96:
-    time = 2304000
-    flags = 1
-    data = length 384, hash 24FB5EDA
-  sample 97:
-    time = 2328000
-    flags = 1
-    data = length 384, hash E73203C6
-  sample 98:
-    time = 2352000
-    flags = 1
-    data = length 384, hash 14B525F1
-  sample 99:
-    time = 2376000
-    flags = 1
-    data = length 384, hash 5E0F4E2E
-  sample 100:
-    time = 2400000
-    flags = 1
-    data = length 384, hash 67EE4E31
-  sample 101:
-    time = 2424000
-    flags = 1
-    data = length 384, hash 2E04EC4C
-  sample 102:
-    time = 2448000
-    flags = 1
-    data = length 384, hash 852CABA7
-  sample 103:
-    time = 2472000
-    flags = 1
-    data = length 384, hash 19928903
-  sample 104:
-    time = 2496000
-    flags = 1
-    data = length 384, hash 5DA42021
-  sample 105:
-    time = 2520000
-    flags = 1
-    data = length 384, hash 45B20B7C
-  sample 106:
-    time = 2544000
-    flags = 1
-    data = length 384, hash D108A215
-  sample 107:
-    time = 2568000
-    flags = 1
-    data = length 384, hash BD25DB7C
-  sample 108:
-    time = 2592000
-    flags = 1
-    data = length 384, hash DA7F9861
-  sample 109:
-    time = 2616000
-    flags = 1
-    data = length 384, hash CCD576F
-  sample 110:
-    time = 2640000
-    flags = 1
-    data = length 384, hash 405C1EB5
-  sample 111:
-    time = 2664000
-    flags = 1
-    data = length 384, hash 6640B74E
-  sample 112:
-    time = 2688000
-    flags = 1
-    data = length 384, hash B4E5937A
-  sample 113:
-    time = 2712000
-    flags = 1
-    data = length 384, hash CEE17733
-  sample 114:
-    time = 2736000
-    flags = 1
-    data = length 384, hash 2A0DA733
-  sample 115:
-    time = 2760000
-    flags = 1
-    data = length 384, hash 97F4129B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/bear.mp3.1.dump b/library/core/src/androidTest/assets/mp3/bear.mp3.1.dump
deleted file mode 100644
index 2e0b21050c..0000000000
--- a/library/core/src/androidTest/assets/mp3/bear.mp3.1.dump
+++ /dev/null
@@ -1,333 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2784000
-  getPosition(0) = 201
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = 956
-    encoderPadding = 3352
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 76
-  sample 0:
-    time = 945782
-    flags = 1
-    data = length 384, hash 14EF6AFD
-  sample 1:
-    time = 969782
-    flags = 1
-    data = length 384, hash 61C9B92C
-  sample 2:
-    time = 993782
-    flags = 1
-    data = length 384, hash ABE1368
-  sample 3:
-    time = 1017782
-    flags = 1
-    data = length 384, hash 6A3B8547
-  sample 4:
-    time = 1041782
-    flags = 1
-    data = length 384, hash 30E905FA
-  sample 5:
-    time = 1065782
-    flags = 1
-    data = length 384, hash 21A267CD
-  sample 6:
-    time = 1089782
-    flags = 1
-    data = length 384, hash D96A2651
-  sample 7:
-    time = 1113782
-    flags = 1
-    data = length 384, hash 72340177
-  sample 8:
-    time = 1137782
-    flags = 1
-    data = length 384, hash 9345E744
-  sample 9:
-    time = 1161782
-    flags = 1
-    data = length 384, hash FDE39E3A
-  sample 10:
-    time = 1185782
-    flags = 1
-    data = length 384, hash F0B7465
-  sample 11:
-    time = 1209782
-    flags = 1
-    data = length 384, hash 3693AB86
-  sample 12:
-    time = 1233782
-    flags = 1
-    data = length 384, hash F39719B1
-  sample 13:
-    time = 1257782
-    flags = 1
-    data = length 384, hash DA3958DC
-  sample 14:
-    time = 1281782
-    flags = 1
-    data = length 384, hash FDC7599F
-  sample 15:
-    time = 1305782
-    flags = 1
-    data = length 384, hash AEFF8471
-  sample 16:
-    time = 1329782
-    flags = 1
-    data = length 384, hash 89C92C19
-  sample 17:
-    time = 1353782
-    flags = 1
-    data = length 384, hash 5C786A4B
-  sample 18:
-    time = 1377782
-    flags = 1
-    data = length 384, hash 5ACA8B
-  sample 19:
-    time = 1401782
-    flags = 1
-    data = length 384, hash 7755974C
-  sample 20:
-    time = 1425782
-    flags = 1
-    data = length 384, hash 3934B73C
-  sample 21:
-    time = 1449782
-    flags = 1
-    data = length 384, hash DDD70A2F
-  sample 22:
-    time = 1473782
-    flags = 1
-    data = length 384, hash 8FACE2EF
-  sample 23:
-    time = 1497782
-    flags = 1
-    data = length 384, hash 4A602591
-  sample 24:
-    time = 1521782
-    flags = 1
-    data = length 384, hash D019AA2D
-  sample 25:
-    time = 1545782
-    flags = 1
-    data = length 384, hash 8A680B9D
-  sample 26:
-    time = 1569782
-    flags = 1
-    data = length 384, hash B655C959
-  sample 27:
-    time = 1593782
-    flags = 1
-    data = length 384, hash 2168336B
-  sample 28:
-    time = 1617782
-    flags = 1
-    data = length 384, hash D77F6D31
-  sample 29:
-    time = 1641782
-    flags = 1
-    data = length 384, hash 524B4B2F
-  sample 30:
-    time = 1665782
-    flags = 1
-    data = length 384, hash 4752DDFC
-  sample 31:
-    time = 1689782
-    flags = 1
-    data = length 384, hash E786727F
-  sample 32:
-    time = 1713782
-    flags = 1
-    data = length 384, hash 5DA6FB8C
-  sample 33:
-    time = 1737782
-    flags = 1
-    data = length 384, hash 92F24269
-  sample 34:
-    time = 1761782
-    flags = 1
-    data = length 384, hash CD0A3BA1
-  sample 35:
-    time = 1785782
-    flags = 1
-    data = length 384, hash 7D00409F
-  sample 36:
-    time = 1809782
-    flags = 1
-    data = length 384, hash D7ADB5FA
-  sample 37:
-    time = 1833782
-    flags = 1
-    data = length 384, hash 4A140209
-  sample 38:
-    time = 1857782
-    flags = 1
-    data = length 384, hash E801184A
-  sample 39:
-    time = 1881782
-    flags = 1
-    data = length 384, hash 53C6CF9C
-  sample 40:
-    time = 1905782
-    flags = 1
-    data = length 384, hash 19A8D99F
-  sample 41:
-    time = 1929782
-    flags = 1
-    data = length 384, hash E47EB43F
-  sample 42:
-    time = 1953782
-    flags = 1
-    data = length 384, hash 4EA329E7
-  sample 43:
-    time = 1977782
-    flags = 1
-    data = length 384, hash 1CCAAE62
-  sample 44:
-    time = 2001782
-    flags = 1
-    data = length 384, hash ED3F8C66
-  sample 45:
-    time = 2025782
-    flags = 1
-    data = length 384, hash D3D646B6
-  sample 46:
-    time = 2049782
-    flags = 1
-    data = length 384, hash 68CD1574
-  sample 47:
-    time = 2073782
-    flags = 1
-    data = length 384, hash 8CEAB382
-  sample 48:
-    time = 2097782
-    flags = 1
-    data = length 384, hash D54B1C48
-  sample 49:
-    time = 2121782
-    flags = 1
-    data = length 384, hash FFE2EE90
-  sample 50:
-    time = 2145782
-    flags = 1
-    data = length 384, hash BFE8A673
-  sample 51:
-    time = 2169782
-    flags = 1
-    data = length 384, hash 978B1C92
-  sample 52:
-    time = 2193782
-    flags = 1
-    data = length 384, hash 810CC71E
-  sample 53:
-    time = 2217782
-    flags = 1
-    data = length 384, hash 44FE42D9
-  sample 54:
-    time = 2241782
-    flags = 1
-    data = length 384, hash 2F5BB02C
-  sample 55:
-    time = 2265782
-    flags = 1
-    data = length 384, hash 77DDB90
-  sample 56:
-    time = 2289782
-    flags = 1
-    data = length 384, hash 24FB5EDA
-  sample 57:
-    time = 2313782
-    flags = 1
-    data = length 384, hash E73203C6
-  sample 58:
-    time = 2337782
-    flags = 1
-    data = length 384, hash 14B525F1
-  sample 59:
-    time = 2361782
-    flags = 1
-    data = length 384, hash 5E0F4E2E
-  sample 60:
-    time = 2385782
-    flags = 1
-    data = length 384, hash 67EE4E31
-  sample 61:
-    time = 2409782
-    flags = 1
-    data = length 384, hash 2E04EC4C
-  sample 62:
-    time = 2433782
-    flags = 1
-    data = length 384, hash 852CABA7
-  sample 63:
-    time = 2457782
-    flags = 1
-    data = length 384, hash 19928903
-  sample 64:
-    time = 2481782
-    flags = 1
-    data = length 384, hash 5DA42021
-  sample 65:
-    time = 2505782
-    flags = 1
-    data = length 384, hash 45B20B7C
-  sample 66:
-    time = 2529782
-    flags = 1
-    data = length 384, hash D108A215
-  sample 67:
-    time = 2553782
-    flags = 1
-    data = length 384, hash BD25DB7C
-  sample 68:
-    time = 2577782
-    flags = 1
-    data = length 384, hash DA7F9861
-  sample 69:
-    time = 2601782
-    flags = 1
-    data = length 384, hash CCD576F
-  sample 70:
-    time = 2625782
-    flags = 1
-    data = length 384, hash 405C1EB5
-  sample 71:
-    time = 2649782
-    flags = 1
-    data = length 384, hash 6640B74E
-  sample 72:
-    time = 2673782
-    flags = 1
-    data = length 384, hash B4E5937A
-  sample 73:
-    time = 2697782
-    flags = 1
-    data = length 384, hash CEE17733
-  sample 74:
-    time = 2721782
-    flags = 1
-    data = length 384, hash 2A0DA733
-  sample 75:
-    time = 2745782
-    flags = 1
-    data = length 384, hash 97F4129B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/bear.mp3.2.dump b/library/core/src/androidTest/assets/mp3/bear.mp3.2.dump
deleted file mode 100644
index b3cb117cb2..0000000000
--- a/library/core/src/androidTest/assets/mp3/bear.mp3.2.dump
+++ /dev/null
@@ -1,181 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2784000
-  getPosition(0) = 201
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = 956
-    encoderPadding = 3352
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 38
-  sample 0:
-    time = 1858196
-    flags = 1
-    data = length 384, hash E801184A
-  sample 1:
-    time = 1882196
-    flags = 1
-    data = length 384, hash 53C6CF9C
-  sample 2:
-    time = 1906196
-    flags = 1
-    data = length 384, hash 19A8D99F
-  sample 3:
-    time = 1930196
-    flags = 1
-    data = length 384, hash E47EB43F
-  sample 4:
-    time = 1954196
-    flags = 1
-    data = length 384, hash 4EA329E7
-  sample 5:
-    time = 1978196
-    flags = 1
-    data = length 384, hash 1CCAAE62
-  sample 6:
-    time = 2002196
-    flags = 1
-    data = length 384, hash ED3F8C66
-  sample 7:
-    time = 2026196
-    flags = 1
-    data = length 384, hash D3D646B6
-  sample 8:
-    time = 2050196
-    flags = 1
-    data = length 384, hash 68CD1574
-  sample 9:
-    time = 2074196
-    flags = 1
-    data = length 384, hash 8CEAB382
-  sample 10:
-    time = 2098196
-    flags = 1
-    data = length 384, hash D54B1C48
-  sample 11:
-    time = 2122196
-    flags = 1
-    data = length 384, hash FFE2EE90
-  sample 12:
-    time = 2146196
-    flags = 1
-    data = length 384, hash BFE8A673
-  sample 13:
-    time = 2170196
-    flags = 1
-    data = length 384, hash 978B1C92
-  sample 14:
-    time = 2194196
-    flags = 1
-    data = length 384, hash 810CC71E
-  sample 15:
-    time = 2218196
-    flags = 1
-    data = length 384, hash 44FE42D9
-  sample 16:
-    time = 2242196
-    flags = 1
-    data = length 384, hash 2F5BB02C
-  sample 17:
-    time = 2266196
-    flags = 1
-    data = length 384, hash 77DDB90
-  sample 18:
-    time = 2290196
-    flags = 1
-    data = length 384, hash 24FB5EDA
-  sample 19:
-    time = 2314196
-    flags = 1
-    data = length 384, hash E73203C6
-  sample 20:
-    time = 2338196
-    flags = 1
-    data = length 384, hash 14B525F1
-  sample 21:
-    time = 2362196
-    flags = 1
-    data = length 384, hash 5E0F4E2E
-  sample 22:
-    time = 2386196
-    flags = 1
-    data = length 384, hash 67EE4E31
-  sample 23:
-    time = 2410196
-    flags = 1
-    data = length 384, hash 2E04EC4C
-  sample 24:
-    time = 2434196
-    flags = 1
-    data = length 384, hash 852CABA7
-  sample 25:
-    time = 2458196
-    flags = 1
-    data = length 384, hash 19928903
-  sample 26:
-    time = 2482196
-    flags = 1
-    data = length 384, hash 5DA42021
-  sample 27:
-    time = 2506196
-    flags = 1
-    data = length 384, hash 45B20B7C
-  sample 28:
-    time = 2530196
-    flags = 1
-    data = length 384, hash D108A215
-  sample 29:
-    time = 2554196
-    flags = 1
-    data = length 384, hash BD25DB7C
-  sample 30:
-    time = 2578196
-    flags = 1
-    data = length 384, hash DA7F9861
-  sample 31:
-    time = 2602196
-    flags = 1
-    data = length 384, hash CCD576F
-  sample 32:
-    time = 2626196
-    flags = 1
-    data = length 384, hash 405C1EB5
-  sample 33:
-    time = 2650196
-    flags = 1
-    data = length 384, hash 6640B74E
-  sample 34:
-    time = 2674196
-    flags = 1
-    data = length 384, hash B4E5937A
-  sample 35:
-    time = 2698196
-    flags = 1
-    data = length 384, hash CEE17733
-  sample 36:
-    time = 2722196
-    flags = 1
-    data = length 384, hash 2A0DA733
-  sample 37:
-    time = 2746196
-    flags = 1
-    data = length 384, hash 97F4129B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/bear.mp3.3.dump b/library/core/src/androidTest/assets/mp3/bear.mp3.3.dump
deleted file mode 100644
index a2387eb887..0000000000
--- a/library/core/src/androidTest/assets/mp3/bear.mp3.3.dump
+++ /dev/null
@@ -1,29 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2784000
-  getPosition(0) = 201
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = 956
-    encoderPadding = 3352
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 0
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3 b/library/core/src/androidTest/assets/mp3/play-trimmed.mp3
deleted file mode 100644
index d103ac5781..0000000000
Binary files a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3 and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.0.dump b/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.0.dump
deleted file mode 100644
index 37a04215ee..0000000000
--- a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.0.dump
+++ /dev/null
@@ -1,33 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 26125
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 1
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 418, hash B819987
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.1.dump b/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.1.dump
deleted file mode 100644
index 0b6516ccdb..0000000000
--- a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.1.dump
+++ /dev/null
@@ -1,29 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 26125
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 0
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.2.dump b/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.2.dump
deleted file mode 100644
index 0b6516ccdb..0000000000
--- a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.2.dump
+++ /dev/null
@@ -1,29 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 26125
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 0
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.3.dump b/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.3.dump
deleted file mode 100644
index 0b6516ccdb..0000000000
--- a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.3.dump
+++ /dev/null
@@ -1,29 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 26125
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 0
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.unklen.dump b/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.unklen.dump
deleted file mode 100644
index b75aefd91b..0000000000
--- a/library/core/src/androidTest/assets/mp3/play-trimmed.mp3.unklen.dump
+++ /dev/null
@@ -1,33 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/mpeg
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 1
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 418, hash B819987
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp4/sample.mp4 b/library/core/src/androidTest/assets/mp4/sample.mp4
deleted file mode 100644
index ea7db760d0..0000000000
Binary files a/library/core/src/androidTest/assets/mp4/sample.mp4 and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mp4/sample.mp4.0.dump b/library/core/src/androidTest/assets/mp4/sample.mp4.0.dump
deleted file mode 100644
index be0a16681c..0000000000
--- a/library/core/src/androidTest/assets/mp4/sample.mp4.0.dump
+++ /dev/null
@@ -1,355 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1024000
-  getPosition(0) = 48
-numberOfTracks = 2
-track 0:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = 36722
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = 0
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 29, hash 4746B5D9
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 36692, hash D216076E
-  sample 1:
-    time = 66733
-    flags = 0
-    data = length 5312, hash D45D3CA0
-  sample 2:
-    time = 33366
-    flags = 0
-    data = length 599, hash 1BE7812D
-  sample 3:
-    time = 200200
-    flags = 0
-    data = length 7735, hash 4490F110
-  sample 4:
-    time = 133466
-    flags = 0
-    data = length 987, hash 560B5036
-  sample 5:
-    time = 100100
-    flags = 0
-    data = length 673, hash ED7CD8C7
-  sample 6:
-    time = 166833
-    flags = 0
-    data = length 523, hash 3020DF50
-  sample 7:
-    time = 333666
-    flags = 0
-    data = length 6061, hash 736C72B2
-  sample 8:
-    time = 266933
-    flags = 0
-    data = length 992, hash FE132F23
-  sample 9:
-    time = 233566
-    flags = 0
-    data = length 623, hash 5B2C1816
-  sample 10:
-    time = 300300
-    flags = 0
-    data = length 421, hash 742E69C1
-  sample 11:
-    time = 433766
-    flags = 0
-    data = length 4899, hash F72F86A1
-  sample 12:
-    time = 400400
-    flags = 0
-    data = length 568, hash 519A8E50
-  sample 13:
-    time = 367033
-    flags = 0
-    data = length 620, hash 3990AA39
-  sample 14:
-    time = 567233
-    flags = 0
-    data = length 5450, hash F06EC4AA
-  sample 15:
-    time = 500500
-    flags = 0
-    data = length 1051, hash 92DFA63A
-  sample 16:
-    time = 467133
-    flags = 0
-    data = length 874, hash 69587FB4
-  sample 17:
-    time = 533866
-    flags = 0
-    data = length 781, hash 36BE495B
-  sample 18:
-    time = 700700
-    flags = 0
-    data = length 4725, hash AC0C8CD3
-  sample 19:
-    time = 633966
-    flags = 0
-    data = length 1022, hash 5D8BFF34
-  sample 20:
-    time = 600600
-    flags = 0
-    data = length 790, hash 99413A99
-  sample 21:
-    time = 667333
-    flags = 0
-    data = length 610, hash 5E129290
-  sample 22:
-    time = 834166
-    flags = 0
-    data = length 2751, hash 769974CB
-  sample 23:
-    time = 767433
-    flags = 0
-    data = length 745, hash B78A477A
-  sample 24:
-    time = 734066
-    flags = 0
-    data = length 621, hash CF741E7A
-  sample 25:
-    time = 800800
-    flags = 0
-    data = length 505, hash 1DB4894E
-  sample 26:
-    time = 967633
-    flags = 0
-    data = length 1268, hash C15348DC
-  sample 27:
-    time = 900900
-    flags = 0
-    data = length 880, hash C2DE85D0
-  sample 28:
-    time = 867533
-    flags = 0
-    data = length 530, hash C98BC6A8
-  sample 29:
-    time = 934266
-    flags = 0
-    data = length 568, hash 4FE5C8EA
-track 1:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = 294
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = und
-    drmInitData = -
-    initializationData:
-      data = length 2, hash 5F7
-  sample count = 45
-  sample 0:
-    time = 44000
-    flags = 1
-    data = length 23, hash 47DE9131
-  sample 1:
-    time = 67219
-    flags = 1
-    data = length 6, hash 31EC5206
-  sample 2:
-    time = 90439
-    flags = 1
-    data = length 148, hash 894A176B
-  sample 3:
-    time = 113659
-    flags = 1
-    data = length 189, hash CEF235A1
-  sample 4:
-    time = 136879
-    flags = 1
-    data = length 205, hash BBF5F7B0
-  sample 5:
-    time = 160099
-    flags = 1
-    data = length 210, hash F278B193
-  sample 6:
-    time = 183319
-    flags = 1
-    data = length 210, hash 82DA1589
-  sample 7:
-    time = 206539
-    flags = 1
-    data = length 207, hash 5BE231DF
-  sample 8:
-    time = 229759
-    flags = 1
-    data = length 225, hash 18819EE1
-  sample 9:
-    time = 252979
-    flags = 1
-    data = length 215, hash CA7FA67B
-  sample 10:
-    time = 276199
-    flags = 1
-    data = length 211, hash 581A1C18
-  sample 11:
-    time = 299419
-    flags = 1
-    data = length 216, hash ADB88187
-  sample 12:
-    time = 322639
-    flags = 1
-    data = length 229, hash 2E8BA4DC
-  sample 13:
-    time = 345859
-    flags = 1
-    data = length 232, hash 22F0C510
-  sample 14:
-    time = 369079
-    flags = 1
-    data = length 235, hash 867AD0DC
-  sample 15:
-    time = 392299
-    flags = 1
-    data = length 231, hash 84E823A8
-  sample 16:
-    time = 415519
-    flags = 1
-    data = length 226, hash 1BEF3A95
-  sample 17:
-    time = 438739
-    flags = 1
-    data = length 216, hash EAA345AE
-  sample 18:
-    time = 461959
-    flags = 1
-    data = length 229, hash 6957411F
-  sample 19:
-    time = 485179
-    flags = 1
-    data = length 219, hash 41275022
-  sample 20:
-    time = 508399
-    flags = 1
-    data = length 241, hash 6495DF96
-  sample 21:
-    time = 531619
-    flags = 1
-    data = length 228, hash 63D95906
-  sample 22:
-    time = 554839
-    flags = 1
-    data = length 238, hash 34F676F9
-  sample 23:
-    time = 578058
-    flags = 1
-    data = length 234, hash E5CBC045
-  sample 24:
-    time = 601278
-    flags = 1
-    data = length 231, hash 5FC43661
-  sample 25:
-    time = 624498
-    flags = 1
-    data = length 217, hash 682708ED
-  sample 26:
-    time = 647718
-    flags = 1
-    data = length 239, hash D43780FC
-  sample 27:
-    time = 670938
-    flags = 1
-    data = length 243, hash C5E17980
-  sample 28:
-    time = 694158
-    flags = 1
-    data = length 231, hash AC5837BA
-  sample 29:
-    time = 717378
-    flags = 1
-    data = length 230, hash 169EE895
-  sample 30:
-    time = 740598
-    flags = 1
-    data = length 238, hash C48FF3F1
-  sample 31:
-    time = 763818
-    flags = 1
-    data = length 225, hash 531E4599
-  sample 32:
-    time = 787038
-    flags = 1
-    data = length 232, hash CB3C6B8D
-  sample 33:
-    time = 810258
-    flags = 1
-    data = length 243, hash F8C94C7
-  sample 34:
-    time = 833478
-    flags = 1
-    data = length 232, hash A646A7D0
-  sample 35:
-    time = 856698
-    flags = 1
-    data = length 237, hash E8B787A5
-  sample 36:
-    time = 879918
-    flags = 1
-    data = length 228, hash 3FA7A29F
-  sample 37:
-    time = 903138
-    flags = 1
-    data = length 235, hash B9B33B0A
-  sample 38:
-    time = 926358
-    flags = 1
-    data = length 264, hash 71A4869E
-  sample 39:
-    time = 949578
-    flags = 1
-    data = length 257, hash D049B54C
-  sample 40:
-    time = 972798
-    flags = 1
-    data = length 227, hash 66757231
-  sample 41:
-    time = 996018
-    flags = 1
-    data = length 227, hash BD374F1B
-  sample 42:
-    time = 1019238
-    flags = 1
-    data = length 235, hash 999477F6
-  sample 43:
-    time = 1042458
-    flags = 1
-    data = length 229, hash FFF98DF0
-  sample 44:
-    time = 1065678
-    flags = 1
-    data = length 6, hash 31B22286
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp4/sample.mp4.1.dump b/library/core/src/androidTest/assets/mp4/sample.mp4.1.dump
deleted file mode 100644
index a759e4250a..0000000000
--- a/library/core/src/androidTest/assets/mp4/sample.mp4.1.dump
+++ /dev/null
@@ -1,307 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1024000
-  getPosition(0) = 48
-numberOfTracks = 2
-track 0:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = 36722
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = 0
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 29, hash 4746B5D9
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 36692, hash D216076E
-  sample 1:
-    time = 66733
-    flags = 0
-    data = length 5312, hash D45D3CA0
-  sample 2:
-    time = 33366
-    flags = 0
-    data = length 599, hash 1BE7812D
-  sample 3:
-    time = 200200
-    flags = 0
-    data = length 7735, hash 4490F110
-  sample 4:
-    time = 133466
-    flags = 0
-    data = length 987, hash 560B5036
-  sample 5:
-    time = 100100
-    flags = 0
-    data = length 673, hash ED7CD8C7
-  sample 6:
-    time = 166833
-    flags = 0
-    data = length 523, hash 3020DF50
-  sample 7:
-    time = 333666
-    flags = 0
-    data = length 6061, hash 736C72B2
-  sample 8:
-    time = 266933
-    flags = 0
-    data = length 992, hash FE132F23
-  sample 9:
-    time = 233566
-    flags = 0
-    data = length 623, hash 5B2C1816
-  sample 10:
-    time = 300300
-    flags = 0
-    data = length 421, hash 742E69C1
-  sample 11:
-    time = 433766
-    flags = 0
-    data = length 4899, hash F72F86A1
-  sample 12:
-    time = 400400
-    flags = 0
-    data = length 568, hash 519A8E50
-  sample 13:
-    time = 367033
-    flags = 0
-    data = length 620, hash 3990AA39
-  sample 14:
-    time = 567233
-    flags = 0
-    data = length 5450, hash F06EC4AA
-  sample 15:
-    time = 500500
-    flags = 0
-    data = length 1051, hash 92DFA63A
-  sample 16:
-    time = 467133
-    flags = 0
-    data = length 874, hash 69587FB4
-  sample 17:
-    time = 533866
-    flags = 0
-    data = length 781, hash 36BE495B
-  sample 18:
-    time = 700700
-    flags = 0
-    data = length 4725, hash AC0C8CD3
-  sample 19:
-    time = 633966
-    flags = 0
-    data = length 1022, hash 5D8BFF34
-  sample 20:
-    time = 600600
-    flags = 0
-    data = length 790, hash 99413A99
-  sample 21:
-    time = 667333
-    flags = 0
-    data = length 610, hash 5E129290
-  sample 22:
-    time = 834166
-    flags = 0
-    data = length 2751, hash 769974CB
-  sample 23:
-    time = 767433
-    flags = 0
-    data = length 745, hash B78A477A
-  sample 24:
-    time = 734066
-    flags = 0
-    data = length 621, hash CF741E7A
-  sample 25:
-    time = 800800
-    flags = 0
-    data = length 505, hash 1DB4894E
-  sample 26:
-    time = 967633
-    flags = 0
-    data = length 1268, hash C15348DC
-  sample 27:
-    time = 900900
-    flags = 0
-    data = length 880, hash C2DE85D0
-  sample 28:
-    time = 867533
-    flags = 0
-    data = length 530, hash C98BC6A8
-  sample 29:
-    time = 934266
-    flags = 0
-    data = length 568, hash 4FE5C8EA
-track 1:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = 294
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = und
-    drmInitData = -
-    initializationData:
-      data = length 2, hash 5F7
-  sample count = 33
-  sample 0:
-    time = 322639
-    flags = 1
-    data = length 229, hash 2E8BA4DC
-  sample 1:
-    time = 345859
-    flags = 1
-    data = length 232, hash 22F0C510
-  sample 2:
-    time = 369079
-    flags = 1
-    data = length 235, hash 867AD0DC
-  sample 3:
-    time = 392299
-    flags = 1
-    data = length 231, hash 84E823A8
-  sample 4:
-    time = 415519
-    flags = 1
-    data = length 226, hash 1BEF3A95
-  sample 5:
-    time = 438739
-    flags = 1
-    data = length 216, hash EAA345AE
-  sample 6:
-    time = 461959
-    flags = 1
-    data = length 229, hash 6957411F
-  sample 7:
-    time = 485179
-    flags = 1
-    data = length 219, hash 41275022
-  sample 8:
-    time = 508399
-    flags = 1
-    data = length 241, hash 6495DF96
-  sample 9:
-    time = 531619
-    flags = 1
-    data = length 228, hash 63D95906
-  sample 10:
-    time = 554839
-    flags = 1
-    data = length 238, hash 34F676F9
-  sample 11:
-    time = 578058
-    flags = 1
-    data = length 234, hash E5CBC045
-  sample 12:
-    time = 601278
-    flags = 1
-    data = length 231, hash 5FC43661
-  sample 13:
-    time = 624498
-    flags = 1
-    data = length 217, hash 682708ED
-  sample 14:
-    time = 647718
-    flags = 1
-    data = length 239, hash D43780FC
-  sample 15:
-    time = 670938
-    flags = 1
-    data = length 243, hash C5E17980
-  sample 16:
-    time = 694158
-    flags = 1
-    data = length 231, hash AC5837BA
-  sample 17:
-    time = 717378
-    flags = 1
-    data = length 230, hash 169EE895
-  sample 18:
-    time = 740598
-    flags = 1
-    data = length 238, hash C48FF3F1
-  sample 19:
-    time = 763818
-    flags = 1
-    data = length 225, hash 531E4599
-  sample 20:
-    time = 787038
-    flags = 1
-    data = length 232, hash CB3C6B8D
-  sample 21:
-    time = 810258
-    flags = 1
-    data = length 243, hash F8C94C7
-  sample 22:
-    time = 833478
-    flags = 1
-    data = length 232, hash A646A7D0
-  sample 23:
-    time = 856698
-    flags = 1
-    data = length 237, hash E8B787A5
-  sample 24:
-    time = 879918
-    flags = 1
-    data = length 228, hash 3FA7A29F
-  sample 25:
-    time = 903138
-    flags = 1
-    data = length 235, hash B9B33B0A
-  sample 26:
-    time = 926358
-    flags = 1
-    data = length 264, hash 71A4869E
-  sample 27:
-    time = 949578
-    flags = 1
-    data = length 257, hash D049B54C
-  sample 28:
-    time = 972798
-    flags = 1
-    data = length 227, hash 66757231
-  sample 29:
-    time = 996018
-    flags = 1
-    data = length 227, hash BD374F1B
-  sample 30:
-    time = 1019238
-    flags = 1
-    data = length 235, hash 999477F6
-  sample 31:
-    time = 1042458
-    flags = 1
-    data = length 229, hash FFF98DF0
-  sample 32:
-    time = 1065678
-    flags = 1
-    data = length 6, hash 31B22286
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp4/sample.mp4.2.dump b/library/core/src/androidTest/assets/mp4/sample.mp4.2.dump
deleted file mode 100644
index 59ee715255..0000000000
--- a/library/core/src/androidTest/assets/mp4/sample.mp4.2.dump
+++ /dev/null
@@ -1,247 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1024000
-  getPosition(0) = 48
-numberOfTracks = 2
-track 0:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = 36722
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = 0
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 29, hash 4746B5D9
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 36692, hash D216076E
-  sample 1:
-    time = 66733
-    flags = 0
-    data = length 5312, hash D45D3CA0
-  sample 2:
-    time = 33366
-    flags = 0
-    data = length 599, hash 1BE7812D
-  sample 3:
-    time = 200200
-    flags = 0
-    data = length 7735, hash 4490F110
-  sample 4:
-    time = 133466
-    flags = 0
-    data = length 987, hash 560B5036
-  sample 5:
-    time = 100100
-    flags = 0
-    data = length 673, hash ED7CD8C7
-  sample 6:
-    time = 166833
-    flags = 0
-    data = length 523, hash 3020DF50
-  sample 7:
-    time = 333666
-    flags = 0
-    data = length 6061, hash 736C72B2
-  sample 8:
-    time = 266933
-    flags = 0
-    data = length 992, hash FE132F23
-  sample 9:
-    time = 233566
-    flags = 0
-    data = length 623, hash 5B2C1816
-  sample 10:
-    time = 300300
-    flags = 0
-    data = length 421, hash 742E69C1
-  sample 11:
-    time = 433766
-    flags = 0
-    data = length 4899, hash F72F86A1
-  sample 12:
-    time = 400400
-    flags = 0
-    data = length 568, hash 519A8E50
-  sample 13:
-    time = 367033
-    flags = 0
-    data = length 620, hash 3990AA39
-  sample 14:
-    time = 567233
-    flags = 0
-    data = length 5450, hash F06EC4AA
-  sample 15:
-    time = 500500
-    flags = 0
-    data = length 1051, hash 92DFA63A
-  sample 16:
-    time = 467133
-    flags = 0
-    data = length 874, hash 69587FB4
-  sample 17:
-    time = 533866
-    flags = 0
-    data = length 781, hash 36BE495B
-  sample 18:
-    time = 700700
-    flags = 0
-    data = length 4725, hash AC0C8CD3
-  sample 19:
-    time = 633966
-    flags = 0
-    data = length 1022, hash 5D8BFF34
-  sample 20:
-    time = 600600
-    flags = 0
-    data = length 790, hash 99413A99
-  sample 21:
-    time = 667333
-    flags = 0
-    data = length 610, hash 5E129290
-  sample 22:
-    time = 834166
-    flags = 0
-    data = length 2751, hash 769974CB
-  sample 23:
-    time = 767433
-    flags = 0
-    data = length 745, hash B78A477A
-  sample 24:
-    time = 734066
-    flags = 0
-    data = length 621, hash CF741E7A
-  sample 25:
-    time = 800800
-    flags = 0
-    data = length 505, hash 1DB4894E
-  sample 26:
-    time = 967633
-    flags = 0
-    data = length 1268, hash C15348DC
-  sample 27:
-    time = 900900
-    flags = 0
-    data = length 880, hash C2DE85D0
-  sample 28:
-    time = 867533
-    flags = 0
-    data = length 530, hash C98BC6A8
-  sample 29:
-    time = 934266
-    flags = 0
-    data = length 568, hash 4FE5C8EA
-track 1:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = 294
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = und
-    drmInitData = -
-    initializationData:
-      data = length 2, hash 5F7
-  sample count = 18
-  sample 0:
-    time = 670938
-    flags = 1
-    data = length 243, hash C5E17980
-  sample 1:
-    time = 694158
-    flags = 1
-    data = length 231, hash AC5837BA
-  sample 2:
-    time = 717378
-    flags = 1
-    data = length 230, hash 169EE895
-  sample 3:
-    time = 740598
-    flags = 1
-    data = length 238, hash C48FF3F1
-  sample 4:
-    time = 763818
-    flags = 1
-    data = length 225, hash 531E4599
-  sample 5:
-    time = 787038
-    flags = 1
-    data = length 232, hash CB3C6B8D
-  sample 6:
-    time = 810258
-    flags = 1
-    data = length 243, hash F8C94C7
-  sample 7:
-    time = 833478
-    flags = 1
-    data = length 232, hash A646A7D0
-  sample 8:
-    time = 856698
-    flags = 1
-    data = length 237, hash E8B787A5
-  sample 9:
-    time = 879918
-    flags = 1
-    data = length 228, hash 3FA7A29F
-  sample 10:
-    time = 903138
-    flags = 1
-    data = length 235, hash B9B33B0A
-  sample 11:
-    time = 926358
-    flags = 1
-    data = length 264, hash 71A4869E
-  sample 12:
-    time = 949578
-    flags = 1
-    data = length 257, hash D049B54C
-  sample 13:
-    time = 972798
-    flags = 1
-    data = length 227, hash 66757231
-  sample 14:
-    time = 996018
-    flags = 1
-    data = length 227, hash BD374F1B
-  sample 15:
-    time = 1019238
-    flags = 1
-    data = length 235, hash 999477F6
-  sample 16:
-    time = 1042458
-    flags = 1
-    data = length 229, hash FFF98DF0
-  sample 17:
-    time = 1065678
-    flags = 1
-    data = length 6, hash 31B22286
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp4/sample.mp4.3.dump b/library/core/src/androidTest/assets/mp4/sample.mp4.3.dump
deleted file mode 100644
index a81a4189d9..0000000000
--- a/library/core/src/androidTest/assets/mp4/sample.mp4.3.dump
+++ /dev/null
@@ -1,187 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1024000
-  getPosition(0) = 48
-numberOfTracks = 2
-track 0:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = 36722
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = 0
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 29, hash 4746B5D9
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 36692, hash D216076E
-  sample 1:
-    time = 66733
-    flags = 0
-    data = length 5312, hash D45D3CA0
-  sample 2:
-    time = 33366
-    flags = 0
-    data = length 599, hash 1BE7812D
-  sample 3:
-    time = 200200
-    flags = 0
-    data = length 7735, hash 4490F110
-  sample 4:
-    time = 133466
-    flags = 0
-    data = length 987, hash 560B5036
-  sample 5:
-    time = 100100
-    flags = 0
-    data = length 673, hash ED7CD8C7
-  sample 6:
-    time = 166833
-    flags = 0
-    data = length 523, hash 3020DF50
-  sample 7:
-    time = 333666
-    flags = 0
-    data = length 6061, hash 736C72B2
-  sample 8:
-    time = 266933
-    flags = 0
-    data = length 992, hash FE132F23
-  sample 9:
-    time = 233566
-    flags = 0
-    data = length 623, hash 5B2C1816
-  sample 10:
-    time = 300300
-    flags = 0
-    data = length 421, hash 742E69C1
-  sample 11:
-    time = 433766
-    flags = 0
-    data = length 4899, hash F72F86A1
-  sample 12:
-    time = 400400
-    flags = 0
-    data = length 568, hash 519A8E50
-  sample 13:
-    time = 367033
-    flags = 0
-    data = length 620, hash 3990AA39
-  sample 14:
-    time = 567233
-    flags = 0
-    data = length 5450, hash F06EC4AA
-  sample 15:
-    time = 500500
-    flags = 0
-    data = length 1051, hash 92DFA63A
-  sample 16:
-    time = 467133
-    flags = 0
-    data = length 874, hash 69587FB4
-  sample 17:
-    time = 533866
-    flags = 0
-    data = length 781, hash 36BE495B
-  sample 18:
-    time = 700700
-    flags = 0
-    data = length 4725, hash AC0C8CD3
-  sample 19:
-    time = 633966
-    flags = 0
-    data = length 1022, hash 5D8BFF34
-  sample 20:
-    time = 600600
-    flags = 0
-    data = length 790, hash 99413A99
-  sample 21:
-    time = 667333
-    flags = 0
-    data = length 610, hash 5E129290
-  sample 22:
-    time = 834166
-    flags = 0
-    data = length 2751, hash 769974CB
-  sample 23:
-    time = 767433
-    flags = 0
-    data = length 745, hash B78A477A
-  sample 24:
-    time = 734066
-    flags = 0
-    data = length 621, hash CF741E7A
-  sample 25:
-    time = 800800
-    flags = 0
-    data = length 505, hash 1DB4894E
-  sample 26:
-    time = 967633
-    flags = 0
-    data = length 1268, hash C15348DC
-  sample 27:
-    time = 900900
-    flags = 0
-    data = length 880, hash C2DE85D0
-  sample 28:
-    time = 867533
-    flags = 0
-    data = length 530, hash C98BC6A8
-  sample 29:
-    time = 934266
-    flags = 0
-    data = length 568, hash 4FE5C8EA
-track 1:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = 294
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = und
-    drmInitData = -
-    initializationData:
-      data = length 2, hash 5F7
-  sample count = 3
-  sample 0:
-    time = 1019238
-    flags = 1
-    data = length 235, hash 999477F6
-  sample 1:
-    time = 1042458
-    flags = 1
-    data = length 229, hash FFF98DF0
-  sample 2:
-    time = 1065678
-    flags = 1
-    data = length 6, hash 31B22286
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp4/sample_fragmented.mp4 b/library/core/src/androidTest/assets/mp4/sample_fragmented.mp4
deleted file mode 100644
index 16907fdd98..0000000000
Binary files a/library/core/src/androidTest/assets/mp4/sample_fragmented.mp4 and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mp4/sample_fragmented.mp4.0.dump b/library/core/src/androidTest/assets/mp4/sample_fragmented.mp4.0.dump
deleted file mode 100644
index bf822d9db4..0000000000
--- a/library/core/src/androidTest/assets/mp4/sample_fragmented.mp4.0.dump
+++ /dev/null
@@ -1,359 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 2
-track 0:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = -1
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = 0
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 29, hash 4746B5D9
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 66000
-    flags = 1
-    data = length 38070, hash B58E1AEE
-  sample 1:
-    time = 199000
-    flags = 0
-    data = length 8340, hash 8AC449FF
-  sample 2:
-    time = 132000
-    flags = 0
-    data = length 1295, hash C0DA5090
-  sample 3:
-    time = 100000
-    flags = 0
-    data = length 469, hash D6E0A200
-  sample 4:
-    time = 166000
-    flags = 0
-    data = length 564, hash E5F56C5B
-  sample 5:
-    time = 332000
-    flags = 0
-    data = length 6075, hash 8756E49E
-  sample 6:
-    time = 266000
-    flags = 0
-    data = length 847, hash DCC2B618
-  sample 7:
-    time = 233000
-    flags = 0
-    data = length 455, hash B9CCE047
-  sample 8:
-    time = 299000
-    flags = 0
-    data = length 467, hash 69806D94
-  sample 9:
-    time = 466000
-    flags = 0
-    data = length 4549, hash 3944F501
-  sample 10:
-    time = 399000
-    flags = 0
-    data = length 1087, hash 491BF106
-  sample 11:
-    time = 367000
-    flags = 0
-    data = length 380, hash 5FED016A
-  sample 12:
-    time = 433000
-    flags = 0
-    data = length 455, hash 8A0610
-  sample 13:
-    time = 599000
-    flags = 0
-    data = length 5190, hash B9031D8
-  sample 14:
-    time = 533000
-    flags = 0
-    data = length 1071, hash 684E7DC8
-  sample 15:
-    time = 500000
-    flags = 0
-    data = length 653, hash 8494F326
-  sample 16:
-    time = 566000
-    flags = 0
-    data = length 485, hash 2CCC85F4
-  sample 17:
-    time = 733000
-    flags = 0
-    data = length 4884, hash D16B6A96
-  sample 18:
-    time = 666000
-    flags = 0
-    data = length 997, hash 164FF210
-  sample 19:
-    time = 633000
-    flags = 0
-    data = length 640, hash F664125B
-  sample 20:
-    time = 700000
-    flags = 0
-    data = length 491, hash B5930C7C
-  sample 21:
-    time = 866000
-    flags = 0
-    data = length 2989, hash 92CF4FCF
-  sample 22:
-    time = 800000
-    flags = 0
-    data = length 838, hash 294A3451
-  sample 23:
-    time = 767000
-    flags = 0
-    data = length 544, hash FCCE2DE6
-  sample 24:
-    time = 833000
-    flags = 0
-    data = length 329, hash A654FFA1
-  sample 25:
-    time = 1000000
-    flags = 0
-    data = length 1517, hash 5F7EBF8B
-  sample 26:
-    time = 933000
-    flags = 0
-    data = length 803, hash 7A5C4C1D
-  sample 27:
-    time = 900000
-    flags = 0
-    data = length 415, hash B31BBC3B
-  sample 28:
-    time = 967000
-    flags = 0
-    data = length 415, hash 850DFEA3
-  sample 29:
-    time = 1033000
-    flags = 0
-    data = length 619, hash AB5E56CA
-track 1:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = und
-    drmInitData = -
-    initializationData:
-      data = length 5, hash 2B7623A
-  sample count = 46
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 18, hash 96519432
-  sample 1:
-    time = 23000
-    flags = 1
-    data = length 4, hash EE9DF
-  sample 2:
-    time = 46000
-    flags = 1
-    data = length 4, hash EEDBF
-  sample 3:
-    time = 69000
-    flags = 1
-    data = length 157, hash E2F078F4
-  sample 4:
-    time = 92000
-    flags = 1
-    data = length 371, hash B9471F94
-  sample 5:
-    time = 116000
-    flags = 1
-    data = length 373, hash 2AB265CB
-  sample 6:
-    time = 139000
-    flags = 1
-    data = length 402, hash 1295477C
-  sample 7:
-    time = 162000
-    flags = 1
-    data = length 455, hash 2D8146C8
-  sample 8:
-    time = 185000
-    flags = 1
-    data = length 434, hash F2C5D287
-  sample 9:
-    time = 208000
-    flags = 1
-    data = length 450, hash 84143FCD
-  sample 10:
-    time = 232000
-    flags = 1
-    data = length 429, hash EF769D50
-  sample 11:
-    time = 255000
-    flags = 1
-    data = length 450, hash EC3DE692
-  sample 12:
-    time = 278000
-    flags = 1
-    data = length 447, hash 3E519E13
-  sample 13:
-    time = 301000
-    flags = 1
-    data = length 457, hash 1E4F23A0
-  sample 14:
-    time = 325000
-    flags = 1
-    data = length 447, hash A439EA97
-  sample 15:
-    time = 348000
-    flags = 1
-    data = length 456, hash 1E9034C6
-  sample 16:
-    time = 371000
-    flags = 1
-    data = length 398, hash 99DB7345
-  sample 17:
-    time = 394000
-    flags = 1
-    data = length 474, hash 3F05F10A
-  sample 18:
-    time = 417000
-    flags = 1
-    data = length 416, hash C105EE09
-  sample 19:
-    time = 441000
-    flags = 1
-    data = length 454, hash 5FDBE458
-  sample 20:
-    time = 464000
-    flags = 1
-    data = length 438, hash 41A93AC3
-  sample 21:
-    time = 487000
-    flags = 1
-    data = length 443, hash 10FDA652
-  sample 22:
-    time = 510000
-    flags = 1
-    data = length 412, hash 1F791E25
-  sample 23:
-    time = 534000
-    flags = 1
-    data = length 482, hash A6D983D
-  sample 24:
-    time = 557000
-    flags = 1
-    data = length 386, hash BED7392F
-  sample 25:
-    time = 580000
-    flags = 1
-    data = length 463, hash 5309F8C9
-  sample 26:
-    time = 603000
-    flags = 1
-    data = length 394, hash 21C7321F
-  sample 27:
-    time = 626000
-    flags = 1
-    data = length 489, hash 71B4730D
-  sample 28:
-    time = 650000
-    flags = 1
-    data = length 403, hash D9C6DE89
-  sample 29:
-    time = 673000
-    flags = 1
-    data = length 447, hash 9B14B73B
-  sample 30:
-    time = 696000
-    flags = 1
-    data = length 439, hash 4760D35B
-  sample 31:
-    time = 719000
-    flags = 1
-    data = length 463, hash 1601F88D
-  sample 32:
-    time = 743000
-    flags = 1
-    data = length 423, hash D4AE6773
-  sample 33:
-    time = 766000
-    flags = 1
-    data = length 497, hash A3C674D3
-  sample 34:
-    time = 789000
-    flags = 1
-    data = length 419, hash D3734A1F
-  sample 35:
-    time = 812000
-    flags = 1
-    data = length 474, hash DFB41F9
-  sample 36:
-    time = 835000
-    flags = 1
-    data = length 413, hash 53E7CB9F
-  sample 37:
-    time = 859000
-    flags = 1
-    data = length 445, hash D15B0E39
-  sample 38:
-    time = 882000
-    flags = 1
-    data = length 453, hash 77ED81E4
-  sample 39:
-    time = 905000
-    flags = 1
-    data = length 545, hash 3321AEB9
-  sample 40:
-    time = 928000
-    flags = 1
-    data = length 317, hash F557D0E
-  sample 41:
-    time = 952000
-    flags = 1
-    data = length 537, hash ED58CF7B
-  sample 42:
-    time = 975000
-    flags = 1
-    data = length 458, hash 51CDAA10
-  sample 43:
-    time = 998000
-    flags = 1
-    data = length 465, hash CBA1EFD7
-  sample 44:
-    time = 1021000
-    flags = 1
-    data = length 446, hash D6735B8A
-  sample 45:
-    time = 1044000
-    flags = 1
-    data = length 10, hash A453EEBE
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/mp4/sample_fragmented_sei.mp4 b/library/core/src/androidTest/assets/mp4/sample_fragmented_sei.mp4
deleted file mode 100644
index 16907fdd98..0000000000
Binary files a/library/core/src/androidTest/assets/mp4/sample_fragmented_sei.mp4 and /dev/null differ
diff --git a/library/core/src/androidTest/assets/mp4/sample_fragmented_sei.mp4.0.dump b/library/core/src/androidTest/assets/mp4/sample_fragmented_sei.mp4.0.dump
deleted file mode 100644
index 9d3755b23b..0000000000
--- a/library/core/src/androidTest/assets/mp4/sample_fragmented_sei.mp4.0.dump
+++ /dev/null
@@ -1,382 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 3
-track 0:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = video/avc
-    maxInputSize = -1
-    width = 1080
-    height = 720
-    frameRate = -1.0
-    rotationDegrees = 0
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 29, hash 4746B5D9
-      data = length 10, hash 7A0D0F2B
-  sample count = 30
-  sample 0:
-    time = 66000
-    flags = 1
-    data = length 38070, hash B58E1AEE
-  sample 1:
-    time = 199000
-    flags = 0
-    data = length 8340, hash 8AC449FF
-  sample 2:
-    time = 132000
-    flags = 0
-    data = length 1295, hash C0DA5090
-  sample 3:
-    time = 100000
-    flags = 0
-    data = length 469, hash D6E0A200
-  sample 4:
-    time = 166000
-    flags = 0
-    data = length 564, hash E5F56C5B
-  sample 5:
-    time = 332000
-    flags = 0
-    data = length 6075, hash 8756E49E
-  sample 6:
-    time = 266000
-    flags = 0
-    data = length 847, hash DCC2B618
-  sample 7:
-    time = 233000
-    flags = 0
-    data = length 455, hash B9CCE047
-  sample 8:
-    time = 299000
-    flags = 0
-    data = length 467, hash 69806D94
-  sample 9:
-    time = 466000
-    flags = 0
-    data = length 4549, hash 3944F501
-  sample 10:
-    time = 399000
-    flags = 0
-    data = length 1087, hash 491BF106
-  sample 11:
-    time = 367000
-    flags = 0
-    data = length 380, hash 5FED016A
-  sample 12:
-    time = 433000
-    flags = 0
-    data = length 455, hash 8A0610
-  sample 13:
-    time = 599000
-    flags = 0
-    data = length 5190, hash B9031D8
-  sample 14:
-    time = 533000
-    flags = 0
-    data = length 1071, hash 684E7DC8
-  sample 15:
-    time = 500000
-    flags = 0
-    data = length 653, hash 8494F326
-  sample 16:
-    time = 566000
-    flags = 0
-    data = length 485, hash 2CCC85F4
-  sample 17:
-    time = 733000
-    flags = 0
-    data = length 4884, hash D16B6A96
-  sample 18:
-    time = 666000
-    flags = 0
-    data = length 997, hash 164FF210
-  sample 19:
-    time = 633000
-    flags = 0
-    data = length 640, hash F664125B
-  sample 20:
-    time = 700000
-    flags = 0
-    data = length 491, hash B5930C7C
-  sample 21:
-    time = 866000
-    flags = 0
-    data = length 2989, hash 92CF4FCF
-  sample 22:
-    time = 800000
-    flags = 0
-    data = length 838, hash 294A3451
-  sample 23:
-    time = 767000
-    flags = 0
-    data = length 544, hash FCCE2DE6
-  sample 24:
-    time = 833000
-    flags = 0
-    data = length 329, hash A654FFA1
-  sample 25:
-    time = 1000000
-    flags = 0
-    data = length 1517, hash 5F7EBF8B
-  sample 26:
-    time = 933000
-    flags = 0
-    data = length 803, hash 7A5C4C1D
-  sample 27:
-    time = 900000
-    flags = 0
-    data = length 415, hash B31BBC3B
-  sample 28:
-    time = 967000
-    flags = 0
-    data = length 415, hash 850DFEA3
-  sample 29:
-    time = 1033000
-    flags = 0
-    data = length 619, hash AB5E56CA
-track 1:
-  format:
-    bitrate = -1
-    id = 2
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = und
-    drmInitData = -
-    initializationData:
-      data = length 5, hash 2B7623A
-  sample count = 46
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 18, hash 96519432
-  sample 1:
-    time = 23000
-    flags = 1
-    data = length 4, hash EE9DF
-  sample 2:
-    time = 46000
-    flags = 1
-    data = length 4, hash EEDBF
-  sample 3:
-    time = 69000
-    flags = 1
-    data = length 157, hash E2F078F4
-  sample 4:
-    time = 92000
-    flags = 1
-    data = length 371, hash B9471F94
-  sample 5:
-    time = 116000
-    flags = 1
-    data = length 373, hash 2AB265CB
-  sample 6:
-    time = 139000
-    flags = 1
-    data = length 402, hash 1295477C
-  sample 7:
-    time = 162000
-    flags = 1
-    data = length 455, hash 2D8146C8
-  sample 8:
-    time = 185000
-    flags = 1
-    data = length 434, hash F2C5D287
-  sample 9:
-    time = 208000
-    flags = 1
-    data = length 450, hash 84143FCD
-  sample 10:
-    time = 232000
-    flags = 1
-    data = length 429, hash EF769D50
-  sample 11:
-    time = 255000
-    flags = 1
-    data = length 450, hash EC3DE692
-  sample 12:
-    time = 278000
-    flags = 1
-    data = length 447, hash 3E519E13
-  sample 13:
-    time = 301000
-    flags = 1
-    data = length 457, hash 1E4F23A0
-  sample 14:
-    time = 325000
-    flags = 1
-    data = length 447, hash A439EA97
-  sample 15:
-    time = 348000
-    flags = 1
-    data = length 456, hash 1E9034C6
-  sample 16:
-    time = 371000
-    flags = 1
-    data = length 398, hash 99DB7345
-  sample 17:
-    time = 394000
-    flags = 1
-    data = length 474, hash 3F05F10A
-  sample 18:
-    time = 417000
-    flags = 1
-    data = length 416, hash C105EE09
-  sample 19:
-    time = 441000
-    flags = 1
-    data = length 454, hash 5FDBE458
-  sample 20:
-    time = 464000
-    flags = 1
-    data = length 438, hash 41A93AC3
-  sample 21:
-    time = 487000
-    flags = 1
-    data = length 443, hash 10FDA652
-  sample 22:
-    time = 510000
-    flags = 1
-    data = length 412, hash 1F791E25
-  sample 23:
-    time = 534000
-    flags = 1
-    data = length 482, hash A6D983D
-  sample 24:
-    time = 557000
-    flags = 1
-    data = length 386, hash BED7392F
-  sample 25:
-    time = 580000
-    flags = 1
-    data = length 463, hash 5309F8C9
-  sample 26:
-    time = 603000
-    flags = 1
-    data = length 394, hash 21C7321F
-  sample 27:
-    time = 626000
-    flags = 1
-    data = length 489, hash 71B4730D
-  sample 28:
-    time = 650000
-    flags = 1
-    data = length 403, hash D9C6DE89
-  sample 29:
-    time = 673000
-    flags = 1
-    data = length 447, hash 9B14B73B
-  sample 30:
-    time = 696000
-    flags = 1
-    data = length 439, hash 4760D35B
-  sample 31:
-    time = 719000
-    flags = 1
-    data = length 463, hash 1601F88D
-  sample 32:
-    time = 743000
-    flags = 1
-    data = length 423, hash D4AE6773
-  sample 33:
-    time = 766000
-    flags = 1
-    data = length 497, hash A3C674D3
-  sample 34:
-    time = 789000
-    flags = 1
-    data = length 419, hash D3734A1F
-  sample 35:
-    time = 812000
-    flags = 1
-    data = length 474, hash DFB41F9
-  sample 36:
-    time = 835000
-    flags = 1
-    data = length 413, hash 53E7CB9F
-  sample 37:
-    time = 859000
-    flags = 1
-    data = length 445, hash D15B0E39
-  sample 38:
-    time = 882000
-    flags = 1
-    data = length 453, hash 77ED81E4
-  sample 39:
-    time = 905000
-    flags = 1
-    data = length 545, hash 3321AEB9
-  sample 40:
-    time = 928000
-    flags = 1
-    data = length 317, hash F557D0E
-  sample 41:
-    time = 952000
-    flags = 1
-    data = length 537, hash ED58CF7B
-  sample 42:
-    time = 975000
-    flags = 1
-    data = length 458, hash 51CDAA10
-  sample 43:
-    time = 998000
-    flags = 1
-    data = length 465, hash CBA1EFD7
-  sample 44:
-    time = 1021000
-    flags = 1
-    data = length 446, hash D6735B8A
-  sample 45:
-    time = 1044000
-    flags = 1
-    data = length 10, hash A453EEBE
-track 3:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = application/cea-608
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 0
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear.opus b/library/core/src/androidTest/assets/ogg/bear.opus
deleted file mode 100644
index 4808533b3d..0000000000
Binary files a/library/core/src/androidTest/assets/ogg/bear.opus and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ogg/bear.opus.0.dump b/library/core/src/androidTest/assets/ogg/bear.opus.0.dump
deleted file mode 100644
index 8033ce8089..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear.opus.0.dump
+++ /dev/null
@@ -1,1132 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2747500
-  getPosition(0) = 125
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/opus
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 19, hash BFE794DB
-      data = length 8, hash CA22068C
-      data = length 8, hash 79C07075
-  sample count = 275
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 234, hash B77BFFDA
-  sample 1:
-    time = 10000
-    flags = 1
-    data = length 165, hash F7B07C35
-  sample 2:
-    time = 20000
-    flags = 1
-    data = length 100, hash 21AFA81F
-  sample 3:
-    time = 30000
-    flags = 1
-    data = length 85, hash 9180DC2F
-  sample 4:
-    time = 40000
-    flags = 1
-    data = length 85, hash 6AE958C
-  sample 5:
-    time = 50000
-    flags = 1
-    data = length 86, hash C1C5AE60
-  sample 6:
-    time = 60000
-    flags = 1
-    data = length 87, hash B9BD2620
-  sample 7:
-    time = 70000
-    flags = 1
-    data = length 86, hash 5E69E6F9
-  sample 8:
-    time = 80000
-    flags = 1
-    data = length 90, hash C44C7DD9
-  sample 9:
-    time = 90000
-    flags = 1
-    data = length 86, hash C3FCDC6F
-  sample 10:
-    time = 100000
-    flags = 1
-    data = length 86, hash 44EA03BA
-  sample 11:
-    time = 110000
-    flags = 1
-    data = length 160, hash 9F4E1AE8
-  sample 12:
-    time = 120000
-    flags = 1
-    data = length 89, hash 31234460
-  sample 13:
-    time = 130000
-    flags = 1
-    data = length 91, hash 45012D79
-  sample 14:
-    time = 140000
-    flags = 1
-    data = length 90, hash B3E3AC75
-  sample 15:
-    time = 150000
-    flags = 1
-    data = length 87, hash B83B756B
-  sample 16:
-    time = 160000
-    flags = 1
-    data = length 86, hash 383921EB
-  sample 17:
-    time = 170000
-    flags = 1
-    data = length 97, hash 959AD270
-  sample 18:
-    time = 180000
-    flags = 1
-    data = length 92, hash 46C74FA8
-  sample 19:
-    time = 190000
-    flags = 1
-    data = length 91, hash CEA401DD
-  sample 20:
-    time = 200000
-    flags = 1
-    data = length 89, hash 48C41853
-  sample 21:
-    time = 210000
-    flags = 1
-    data = length 90, hash F23245BD
-  sample 22:
-    time = 220000
-    flags = 1
-    data = length 96, hash 95E8985D
-  sample 23:
-    time = 230000
-    flags = 1
-    data = length 96, hash 34295492
-  sample 24:
-    time = 240000
-    flags = 1
-    data = length 94, hash 4E3C9C0F
-  sample 25:
-    time = 250000
-    flags = 1
-    data = length 89, hash 28B74A29
-  sample 26:
-    time = 260000
-    flags = 1
-    data = length 87, hash BAC119A7
-  sample 27:
-    time = 270000
-    flags = 1
-    data = length 88, hash 7139FF38
-  sample 28:
-    time = 280000
-    flags = 1
-    data = length 85, hash 246E1D2A
-  sample 29:
-    time = 290000
-    flags = 1
-    data = length 86, hash 488A0900
-  sample 30:
-    time = 300000
-    flags = 1
-    data = length 90, hash 16FD17B1
-  sample 31:
-    time = 310000
-    flags = 1
-    data = length 87, hash 20E849D9
-  sample 32:
-    time = 320000
-    flags = 1
-    data = length 86, hash 23A0E9BA
-  sample 33:
-    time = 330000
-    flags = 1
-    data = length 87, hash EC935537
-  sample 34:
-    time = 340000
-    flags = 1
-    data = length 92, hash 4D9935AD
-  sample 35:
-    time = 350000
-    flags = 1
-    data = length 87, hash DEDE3FA
-  sample 36:
-    time = 360000
-    flags = 1
-    data = length 87, hash ADC25A6E
-  sample 37:
-    time = 370000
-    flags = 1
-    data = length 88, hash A1C828C5
-  sample 38:
-    time = 380000
-    flags = 1
-    data = length 89, hash 735C087A
-  sample 39:
-    time = 390000
-    flags = 1
-    data = length 89, hash 19AF5D10
-  sample 40:
-    time = 400000
-    flags = 1
-    data = length 90, hash BCCEA2BB
-  sample 41:
-    time = 410000
-    flags = 1
-    data = length 86, hash A7C934A0
-  sample 42:
-    time = 420000
-    flags = 1
-    data = length 86, hash 28BBC0A8
-  sample 43:
-    time = 430000
-    flags = 1
-    data = length 85, hash E60BB12D
-  sample 44:
-    time = 440000
-    flags = 1
-    data = length 141, hash 1D2B8920
-  sample 45:
-    time = 450000
-    flags = 1
-    data = length 121, hash 8AA3E19C
-  sample 46:
-    time = 460000
-    flags = 1
-    data = length 86, hash 24DF0F37
-  sample 47:
-    time = 470000
-    flags = 1
-    data = length 86, hash 1D1775FF
-  sample 48:
-    time = 480000
-    flags = 1
-    data = length 87, hash 5230399E
-  sample 49:
-    time = 490000
-    flags = 1
-    data = length 91, hash 6CD98305
-  sample 50:
-    time = 500000
-    flags = 1
-    data = length 88, hash 4069FBB
-  sample 51:
-    time = 510000
-    flags = 1
-    data = length 89, hash 76824ABF
-  sample 52:
-    time = 520000
-    flags = 1
-    data = length 87, hash BC1B1322
-  sample 53:
-    time = 530000
-    flags = 1
-    data = length 102, hash E01BA053
-  sample 54:
-    time = 540000
-    flags = 1
-    data = length 85, hash C09B626D
-  sample 55:
-    time = 550000
-    flags = 1
-    data = length 88, hash 6B7B404A
-  sample 56:
-    time = 560000
-    flags = 1
-    data = length 85, hash 74A15DC7
-  sample 57:
-    time = 570000
-    flags = 1
-    data = length 88, hash 38DB82E5
-  sample 58:
-    time = 580000
-    flags = 1
-    data = length 86, hash 1A39C081
-  sample 59:
-    time = 590000
-    flags = 1
-    data = length 87, hash 39FEC92
-  sample 60:
-    time = 600000
-    flags = 1
-    data = length 92, hash 278EA09
-  sample 61:
-    time = 610000
-    flags = 1
-    data = length 87, hash 28265F2D
-  sample 62:
-    time = 620000
-    flags = 1
-    data = length 86, hash CC2040C6
-  sample 63:
-    time = 630000
-    flags = 1
-    data = length 138, hash 9E07BC1F
-  sample 64:
-    time = 640000
-    flags = 1
-    data = length 85, hash 4F299670
-  sample 65:
-    time = 650000
-    flags = 1
-    data = length 125, hash B61123C3
-  sample 66:
-    time = 660000
-    flags = 1
-    data = length 89, hash 5CC688ED
-  sample 67:
-    time = 670000
-    flags = 1
-    data = length 88, hash 84AF64A6
-  sample 68:
-    time = 680000
-    flags = 1
-    data = length 89, hash A9BFC8DC
-  sample 69:
-    time = 690000
-    flags = 1
-    data = length 90, hash 2FF77060
-  sample 70:
-    time = 700000
-    flags = 1
-    data = length 96, hash E11AFD61
-  sample 71:
-    time = 710000
-    flags = 1
-    data = length 87, hash 85D14EDA
-  sample 72:
-    time = 720000
-    flags = 1
-    data = length 88, hash 5FC71D53
-  sample 73:
-    time = 730000
-    flags = 1
-    data = length 89, hash 957187B6
-  sample 74:
-    time = 740000
-    flags = 1
-    data = length 89, hash 5A776082
-  sample 75:
-    time = 750000
-    flags = 1
-    data = length 87, hash E8A83AFE
-  sample 76:
-    time = 760000
-    flags = 1
-    data = length 87, hash F1989133
-  sample 77:
-    time = 770000
-    flags = 1
-    data = length 87, hash FA06BCCA
-  sample 78:
-    time = 780000
-    flags = 1
-    data = length 86, hash BD97E0C0
-  sample 79:
-    time = 790000
-    flags = 1
-    data = length 88, hash E6AE022C
-  sample 80:
-    time = 800000
-    flags = 1
-    data = length 87, hash FB6C6169
-  sample 81:
-    time = 810000
-    flags = 1
-    data = length 87, hash DFFCD2CF
-  sample 82:
-    time = 820000
-    flags = 1
-    data = length 88, hash A4B5EB52
-  sample 83:
-    time = 830000
-    flags = 1
-    data = length 85, hash A63CF4EA
-  sample 84:
-    time = 840000
-    flags = 1
-    data = length 86, hash F126E7C7
-  sample 85:
-    time = 850000
-    flags = 1
-    data = length 86, hash 21A8B22F
-  sample 86:
-    time = 860000
-    flags = 1
-    data = length 87, hash 6520E7C1
-  sample 87:
-    time = 870000
-    flags = 1
-    data = length 88, hash 825B7423
-  sample 88:
-    time = 880000
-    flags = 1
-    data = length 88, hash DF3DBD48
-  sample 89:
-    time = 890000
-    flags = 1
-    data = length 87, hash B32C68D0
-  sample 90:
-    time = 900000
-    flags = 1
-    data = length 89, hash B99DFFCA
-  sample 91:
-    time = 910000
-    flags = 1
-    data = length 88, hash 9C8D5178
-  sample 92:
-    time = 920000
-    flags = 1
-    data = length 88, hash 48A0B19A
-  sample 93:
-    time = 930000
-    flags = 1
-    data = length 88, hash B62C94DD
-  sample 94:
-    time = 940000
-    flags = 1
-    data = length 92, hash 96DBDD46
-  sample 95:
-    time = 950000
-    flags = 1
-    data = length 87, hash 7B80E6F
-  sample 96:
-    time = 960000
-    flags = 1
-    data = length 86, hash 9C60225B
-  sample 97:
-    time = 970000
-    flags = 1
-    data = length 87, hash 45F7E6E8
-  sample 98:
-    time = 980000
-    flags = 1
-    data = length 87, hash DDC2D592
-  sample 99:
-    time = 990000
-    flags = 1
-    data = length 91, hash 173D3B26
-  sample 100:
-    time = 1000000
-    flags = 1
-    data = length 87, hash CF3629DF
-  sample 101:
-    time = 1010000
-    flags = 1
-    data = length 87, hash BBE2E7B3
-  sample 102:
-    time = 1020000
-    flags = 1
-    data = length 89, hash 89AFFB10
-  sample 103:
-    time = 1030000
-    flags = 1
-    data = length 88, hash 510DCC90
-  sample 104:
-    time = 1040000
-    flags = 1
-    data = length 88, hash CBA56E5F
-  sample 105:
-    time = 1050000
-    flags = 1
-    data = length 87, hash B4B1B3FF
-  sample 106:
-    time = 1060000
-    flags = 1
-    data = length 89, hash B976A537
-  sample 107:
-    time = 1070000
-    flags = 1
-    data = length 96, hash 43ECF2C1
-  sample 108:
-    time = 1080000
-    flags = 1
-    data = length 90, hash BB7ECB44
-  sample 109:
-    time = 1090000
-    flags = 1
-    data = length 89, hash B8E221A5
-  sample 110:
-    time = 1100000
-    flags = 1
-    data = length 86, hash B35BEF5B
-  sample 111:
-    time = 1110000
-    flags = 1
-    data = length 89, hash 9002F0EC
-  sample 112:
-    time = 1120000
-    flags = 1
-    data = length 85, hash F694B20
-  sample 113:
-    time = 1130000
-    flags = 1
-    data = length 87, hash D7CC386E
-  sample 114:
-    time = 1140000
-    flags = 1
-    data = length 89, hash EE9E0E79
-  sample 115:
-    time = 1150000
-    flags = 1
-    data = length 90, hash CA72C96B
-  sample 116:
-    time = 1160000
-    flags = 1
-    data = length 112, hash 4AD3D1B1
-  sample 117:
-    time = 1170000
-    flags = 1
-    data = length 87, hash FA568FAB
-  sample 118:
-    time = 1180000
-    flags = 1
-    data = length 90, hash 6E6948D2
-  sample 119:
-    time = 1190000
-    flags = 1
-    data = length 89, hash 5465A762
-  sample 120:
-    time = 1200000
-    flags = 1
-    data = length 87, hash BED19B40
-  sample 121:
-    time = 1210000
-    flags = 1
-    data = length 89, hash 5D05836A
-  sample 122:
-    time = 1220000
-    flags = 1
-    data = length 87, hash A8A3EF5A
-  sample 123:
-    time = 1230000
-    flags = 1
-    data = length 90, hash 6425A77A
-  sample 124:
-    time = 1240000
-    flags = 1
-    data = length 92, hash 7F320FA
-  sample 125:
-    time = 1250000
-    flags = 1
-    data = length 89, hash 2C7837D6
-  sample 126:
-    time = 1260000
-    flags = 1
-    data = length 86, hash 58D56685
-  sample 127:
-    time = 1270000
-    flags = 1
-    data = length 91, hash ADC5072F
-  sample 128:
-    time = 1280000
-    flags = 1
-    data = length 85, hash 53EFD93
-  sample 129:
-    time = 1290000
-    flags = 1
-    data = length 87, hash D006B535
-  sample 130:
-    time = 1300000
-    flags = 1
-    data = length 86, hash AE944625
-  sample 131:
-    time = 1310000
-    flags = 1
-    data = length 89, hash B5D3C81D
-  sample 132:
-    time = 1320000
-    flags = 1
-    data = length 86, hash 3BB1D0E7
-  sample 133:
-    time = 1330000
-    flags = 1
-    data = length 102, hash 16EEC441
-  sample 134:
-    time = 1340000
-    flags = 1
-    data = length 90, hash 1005B936
-  sample 135:
-    time = 1350000
-    flags = 1
-    data = length 85, hash 15EEBF9A
-  sample 136:
-    time = 1360000
-    flags = 1
-    data = length 87, hash 37C83AC2
-  sample 137:
-    time = 1370000
-    flags = 1
-    data = length 85, hash 2D27855D
-  sample 138:
-    time = 1380000
-    flags = 1
-    data = length 85, hash 753EB7C6
-  sample 139:
-    time = 1390000
-    flags = 1
-    data = length 91, hash C0813318
-  sample 140:
-    time = 1400000
-    flags = 1
-    data = length 89, hash 3A6468AC
-  sample 141:
-    time = 1410000
-    flags = 1
-    data = length 88, hash 3D220ABC
-  sample 142:
-    time = 1420000
-    flags = 1
-    data = length 140, hash 7949ABC7
-  sample 143:
-    time = 1430000
-    flags = 1
-    data = length 92, hash F19AFA45
-  sample 144:
-    time = 1440000
-    flags = 1
-    data = length 90, hash 3D21587C
-  sample 145:
-    time = 1450000
-    flags = 1
-    data = length 89, hash 5C12226C
-  sample 146:
-    time = 1460000
-    flags = 1
-    data = length 90, hash 22BA14FC
-  sample 147:
-    time = 1470000
-    flags = 1
-    data = length 88, hash F064B21C
-  sample 148:
-    time = 1480000
-    flags = 1
-    data = length 87, hash 6D7906B9
-  sample 149:
-    time = 1490000
-    flags = 1
-    data = length 88, hash 6756A484
-  sample 150:
-    time = 1500000
-    flags = 1
-    data = length 91, hash C95C00B6
-  sample 151:
-    time = 1510000
-    flags = 1
-    data = length 87, hash 728D8119
-  sample 152:
-    time = 1520000
-    flags = 1
-    data = length 90, hash C43DA1B4
-  sample 153:
-    time = 1530000
-    flags = 1
-    data = length 88, hash C181BB57
-  sample 154:
-    time = 1540000
-    flags = 1
-    data = length 84, hash F75B1639
-  sample 155:
-    time = 1550000
-    flags = 1
-    data = length 87, hash B6F32978
-  sample 156:
-    time = 1560000
-    flags = 1
-    data = length 90, hash 36D6E2D7
-  sample 157:
-    time = 1570000
-    flags = 1
-    data = length 87, hash 4C9657A7
-  sample 158:
-    time = 1580000
-    flags = 1
-    data = length 89, hash C3BDB9B7
-  sample 159:
-    time = 1590000
-    flags = 1
-    data = length 88, hash DB51087E
-  sample 160:
-    time = 1600000
-    flags = 1
-    data = length 86, hash 1550F998
-  sample 161:
-    time = 1610000
-    flags = 1
-    data = length 86, hash A445FAD4
-  sample 162:
-    time = 1620000
-    flags = 1
-    data = length 85, hash 60D3362C
-  sample 163:
-    time = 1630000
-    flags = 1
-    data = length 172, hash 945D63E4
-  sample 164:
-    time = 1640000
-    flags = 1
-    data = length 107, hash 585B7C04
-  sample 165:
-    time = 1650000
-    flags = 1
-    data = length 110, hash 74BECF69
-  sample 166:
-    time = 1660000
-    flags = 1
-    data = length 87, hash 63DE1D24
-  sample 167:
-    time = 1670000
-    flags = 1
-    data = length 90, hash 1C1D28DB
-  sample 168:
-    time = 1680000
-    flags = 1
-    data = length 87, hash CB382A67
-  sample 169:
-    time = 1690000
-    flags = 1
-    data = length 85, hash A227BA13
-  sample 170:
-    time = 1700000
-    flags = 1
-    data = length 86, hash EFD8B10B
-  sample 171:
-    time = 1710000
-    flags = 1
-    data = length 87, hash 47FF364A
-  sample 172:
-    time = 1720000
-    flags = 1
-    data = length 91, hash 31D4B48A
-  sample 173:
-    time = 1730000
-    flags = 1
-    data = length 91, hash DD69BD85
-  sample 174:
-    time = 1740000
-    flags = 1
-    data = length 88, hash AF1A95C6
-  sample 175:
-    time = 1750000
-    flags = 1
-    data = length 87, hash 2FB8AF74
-  sample 176:
-    time = 1760000
-    flags = 1
-    data = length 92, hash 173C707A
-  sample 177:
-    time = 1770000
-    flags = 1
-    data = length 88, hash 5F58F5E8
-  sample 178:
-    time = 1780000
-    flags = 1
-    data = length 91, hash D449785F
-  sample 179:
-    time = 1790000
-    flags = 1
-    data = length 91, hash CE2CB465
-  sample 180:
-    time = 1800000
-    flags = 1
-    data = length 93, hash ABC1C62E
-  sample 181:
-    time = 1810000
-    flags = 1
-    data = length 87, hash 83B4B9A0
-  sample 182:
-    time = 1820000
-    flags = 1
-    data = length 87, hash 3220D562
-  sample 183:
-    time = 1830000
-    flags = 1
-    data = length 86, hash 64D21AA1
-  sample 184:
-    time = 1840000
-    flags = 1
-    data = length 86, hash A1FAAF2C
-  sample 185:
-    time = 1850000
-    flags = 1
-    data = length 86, hash ECA80F7E
-  sample 186:
-    time = 1860000
-    flags = 1
-    data = length 86, hash FEB03B2C
-  sample 187:
-    time = 1870000
-    flags = 1
-    data = length 85, hash 2C2E6B2F
-  sample 188:
-    time = 1880000
-    flags = 1
-    data = length 89, hash A0D7AC3
-  sample 189:
-    time = 1890000
-    flags = 1
-    data = length 87, hash 83739547
-  sample 190:
-    time = 1900000
-    flags = 1
-    data = length 86, hash 991E531E
-  sample 191:
-    time = 1910000
-    flags = 1
-    data = length 88, hash 16B287A3
-  sample 192:
-    time = 1920000
-    flags = 1
-    data = length 86, hash FC86EED
-  sample 193:
-    time = 1930000
-    flags = 1
-    data = length 86, hash 96AF0248
-  sample 194:
-    time = 1940000
-    flags = 1
-    data = length 86, hash 288402C8
-  sample 195:
-    time = 1950000
-    flags = 1
-    data = length 87, hash 4BBA7912
-  sample 196:
-    time = 1960000
-    flags = 1
-    data = length 86, hash 4A59C719
-  sample 197:
-    time = 1970000
-    flags = 1
-    data = length 85, hash 906E8187
-  sample 198:
-    time = 1980000
-    flags = 1
-    data = length 90, hash CB8B755D
-  sample 199:
-    time = 1990000
-    flags = 1
-    data = length 87, hash C8E02C
-  sample 200:
-    time = 2000000
-    flags = 1
-    data = length 88, hash ACF4D89A
-  sample 201:
-    time = 2010000
-    flags = 1
-    data = length 86, hash 510FE048
-  sample 202:
-    time = 2020000
-    flags = 1
-    data = length 86, hash 64983E46
-  sample 203:
-    time = 2030000
-    flags = 1
-    data = length 86, hash CEA76A1E
-  sample 204:
-    time = 2040000
-    flags = 1
-    data = length 87, hash AADE498E
-  sample 205:
-    time = 2050000
-    flags = 1
-    data = length 127, hash 353A6D8C
-  sample 206:
-    time = 2060000
-    flags = 1
-    data = length 87, hash 29E18E62
-  sample 207:
-    time = 2070000
-    flags = 1
-    data = length 87, hash 2CF7B30F
-  sample 208:
-    time = 2080000
-    flags = 1
-    data = length 94, hash 758704C3
-  sample 209:
-    time = 2090000
-    flags = 1
-    data = length 88, hash C2153A4C
-  sample 210:
-    time = 2100000
-    flags = 1
-    data = length 86, hash A0A83DA5
-  sample 211:
-    time = 2110000
-    flags = 1
-    data = length 86, hash 41017D7F
-  sample 212:
-    time = 2120000
-    flags = 1
-    data = length 93, hash 686B0CA2
-  sample 213:
-    time = 2130000
-    flags = 1
-    data = length 86, hash 554D16CC
-  sample 214:
-    time = 2140000
-    flags = 1
-    data = length 88, hash 99D72771
-  sample 215:
-    time = 2150000
-    flags = 1
-    data = length 88, hash 7176DFBF
-  sample 216:
-    time = 2160000
-    flags = 1
-    data = length 86, hash BAA22669
-  sample 217:
-    time = 2170000
-    flags = 1
-    data = length 88, hash B00B0D3C
-  sample 218:
-    time = 2180000
-    flags = 1
-    data = length 89, hash 73FED83A
-  sample 219:
-    time = 2190000
-    flags = 1
-    data = length 86, hash 4A4138D3
-  sample 220:
-    time = 2200000
-    flags = 1
-    data = length 89, hash E0A860FF
-  sample 221:
-    time = 2210000
-    flags = 1
-    data = length 95, hash EE5A8AED
-  sample 222:
-    time = 2220000
-    flags = 1
-    data = length 92, hash 36DBD7FD
-  sample 223:
-    time = 2230000
-    flags = 1
-    data = length 88, hash EE47A7E4
-  sample 224:
-    time = 2240000
-    flags = 1
-    data = length 100, hash 2E1A603F
-  sample 225:
-    time = 2250000
-    flags = 1
-    data = length 89, hash 657ED4A3
-  sample 226:
-    time = 2260000
-    flags = 1
-    data = length 86, hash A833DC7B
-  sample 227:
-    time = 2270000
-    flags = 1
-    data = length 88, hash 81E80732
-  sample 228:
-    time = 2280000
-    flags = 1
-    data = length 91, hash FA256A0F
-  sample 229:
-    time = 2290000
-    flags = 1
-    data = length 88, hash A63A4DBA
-  sample 230:
-    time = 2300000
-    flags = 1
-    data = length 88, hash 67910A9F
-  sample 231:
-    time = 2310000
-    flags = 1
-    data = length 86, hash EB387DB6
-  sample 232:
-    time = 2320000
-    flags = 1
-    data = length 88, hash 5ACAAC2A
-  sample 233:
-    time = 2330000
-    flags = 1
-    data = length 86, hash 6ADF2E1F
-  sample 234:
-    time = 2340000
-    flags = 1
-    data = length 85, hash 9D064471
-  sample 235:
-    time = 2350000
-    flags = 1
-    data = length 87, hash F176C59
-  sample 236:
-    time = 2360000
-    flags = 1
-    data = length 89, hash 5CA40CE4
-  sample 237:
-    time = 2370000
-    flags = 1
-    data = length 88, hash 67B944FC
-  sample 238:
-    time = 2380000
-    flags = 1
-    data = length 86, hash B3A84EC8
-  sample 239:
-    time = 2390000
-    flags = 1
-    data = length 92, hash A6ACF94B
-  sample 240:
-    time = 2400000
-    flags = 1
-    data = length 88, hash CB0C9730
-  sample 241:
-    time = 2410000
-    flags = 1
-    data = length 88, hash C79FE804
-  sample 242:
-    time = 2420000
-    flags = 1
-    data = length 88, hash A74C7F0A
-  sample 243:
-    time = 2430000
-    flags = 1
-    data = length 91, hash 55F6F0A5
-  sample 244:
-    time = 2440000
-    flags = 1
-    data = length 93, hash 330F33E7
-  sample 245:
-    time = 2450000
-    flags = 1
-    data = length 89, hash 614AFBA0
-  sample 246:
-    time = 2460000
-    flags = 1
-    data = length 87, hash 3CE4652D
-  sample 247:
-    time = 2470000
-    flags = 1
-    data = length 87, hash 4EFD5467
-  sample 248:
-    time = 2480000
-    flags = 1
-    data = length 86, hash D81B3EB8
-  sample 249:
-    time = 2490000
-    flags = 1
-    data = length 88, hash 96CB6871
-  sample 250:
-    time = 2500000
-    flags = 1
-    data = length 88, hash E9DF2786
-  sample 251:
-    time = 2510000
-    flags = 1
-    data = length 89, hash 2CA33D96
-  sample 252:
-    time = 2520000
-    flags = 1
-    data = length 90, hash 96BDE594
-  sample 253:
-    time = 2530000
-    flags = 1
-    data = length 87, hash C261493C
-  sample 254:
-    time = 2540000
-    flags = 1
-    data = length 86, hash D037318E
-  sample 255:
-    time = 2550000
-    flags = 1
-    data = length 88, hash BC15BC88
-  sample 256:
-    time = 2560000
-    flags = 1
-    data = length 91, hash A8361A51
-  sample 257:
-    time = 2570000
-    flags = 1
-    data = length 87, hash 4AFDB5F2
-  sample 258:
-    time = 2580000
-    flags = 1
-    data = length 87, hash 6447F8CB
-  sample 259:
-    time = 2590000
-    flags = 1
-    data = length 89, hash 48305229
-  sample 260:
-    time = 2600000
-    flags = 1
-    data = length 87, hash 8741D9E7
-  sample 261:
-    time = 2610000
-    flags = 1
-    data = length 120, hash 761F020C
-  sample 262:
-    time = 2620000
-    flags = 1
-    data = length 139, hash AECE2E57
-  sample 263:
-    time = 2630000
-    flags = 1
-    data = length 166, hash 6288797A
-  sample 264:
-    time = 2640000
-    flags = 1
-    data = length 144, hash 437821A0
-  sample 265:
-    time = 2650000
-    flags = 1
-    data = length 113, hash FCCBEDF1
-  sample 266:
-    time = 2660000
-    flags = 1
-    data = length 108, hash C4040614
-  sample 267:
-    time = 2670000
-    flags = 1
-    data = length 125, hash E29064C2
-  sample 268:
-    time = 2680000
-    flags = 1
-    data = length 126, hash D42D24FF
-  sample 269:
-    time = 2690000
-    flags = 1
-    data = length 122, hash 30AF267D
-  sample 270:
-    time = 2700000
-    flags = 1
-    data = length 122, hash 45CEC1FB
-  sample 271:
-    time = 2710000
-    flags = 1
-    data = length 134, hash 59143FE2
-  sample 272:
-    time = 2720000
-    flags = 1
-    data = length 134, hash BD52A84
-  sample 273:
-    time = 2730000
-    flags = 1
-    data = length 120, hash 745C3714
-  sample 274:
-    time = 2740000
-    flags = 1
-    data = length 126, hash 505E117B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear.opus.1.dump b/library/core/src/androidTest/assets/ogg/bear.opus.1.dump
deleted file mode 100644
index f9aceae68a..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear.opus.1.dump
+++ /dev/null
@@ -1,768 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2747500
-  getPosition(0) = 125
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/opus
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 19, hash BFE794DB
-      data = length 8, hash CA22068C
-      data = length 8, hash 79C07075
-  sample count = 184
-  sample 0:
-    time = 910000
-    flags = 1
-    data = length 88, hash 9C8D5178
-  sample 1:
-    time = 920000
-    flags = 1
-    data = length 88, hash 48A0B19A
-  sample 2:
-    time = 930000
-    flags = 1
-    data = length 88, hash B62C94DD
-  sample 3:
-    time = 940000
-    flags = 1
-    data = length 92, hash 96DBDD46
-  sample 4:
-    time = 950000
-    flags = 1
-    data = length 87, hash 7B80E6F
-  sample 5:
-    time = 960000
-    flags = 1
-    data = length 86, hash 9C60225B
-  sample 6:
-    time = 970000
-    flags = 1
-    data = length 87, hash 45F7E6E8
-  sample 7:
-    time = 980000
-    flags = 1
-    data = length 87, hash DDC2D592
-  sample 8:
-    time = 990000
-    flags = 1
-    data = length 91, hash 173D3B26
-  sample 9:
-    time = 1000000
-    flags = 1
-    data = length 87, hash CF3629DF
-  sample 10:
-    time = 1010000
-    flags = 1
-    data = length 87, hash BBE2E7B3
-  sample 11:
-    time = 1020000
-    flags = 1
-    data = length 89, hash 89AFFB10
-  sample 12:
-    time = 1030000
-    flags = 1
-    data = length 88, hash 510DCC90
-  sample 13:
-    time = 1040000
-    flags = 1
-    data = length 88, hash CBA56E5F
-  sample 14:
-    time = 1050000
-    flags = 1
-    data = length 87, hash B4B1B3FF
-  sample 15:
-    time = 1060000
-    flags = 1
-    data = length 89, hash B976A537
-  sample 16:
-    time = 1070000
-    flags = 1
-    data = length 96, hash 43ECF2C1
-  sample 17:
-    time = 1080000
-    flags = 1
-    data = length 90, hash BB7ECB44
-  sample 18:
-    time = 1090000
-    flags = 1
-    data = length 89, hash B8E221A5
-  sample 19:
-    time = 1100000
-    flags = 1
-    data = length 86, hash B35BEF5B
-  sample 20:
-    time = 1110000
-    flags = 1
-    data = length 89, hash 9002F0EC
-  sample 21:
-    time = 1120000
-    flags = 1
-    data = length 85, hash F694B20
-  sample 22:
-    time = 1130000
-    flags = 1
-    data = length 87, hash D7CC386E
-  sample 23:
-    time = 1140000
-    flags = 1
-    data = length 89, hash EE9E0E79
-  sample 24:
-    time = 1150000
-    flags = 1
-    data = length 90, hash CA72C96B
-  sample 25:
-    time = 1160000
-    flags = 1
-    data = length 112, hash 4AD3D1B1
-  sample 26:
-    time = 1170000
-    flags = 1
-    data = length 87, hash FA568FAB
-  sample 27:
-    time = 1180000
-    flags = 1
-    data = length 90, hash 6E6948D2
-  sample 28:
-    time = 1190000
-    flags = 1
-    data = length 89, hash 5465A762
-  sample 29:
-    time = 1200000
-    flags = 1
-    data = length 87, hash BED19B40
-  sample 30:
-    time = 1210000
-    flags = 1
-    data = length 89, hash 5D05836A
-  sample 31:
-    time = 1220000
-    flags = 1
-    data = length 87, hash A8A3EF5A
-  sample 32:
-    time = 1230000
-    flags = 1
-    data = length 90, hash 6425A77A
-  sample 33:
-    time = 1240000
-    flags = 1
-    data = length 92, hash 7F320FA
-  sample 34:
-    time = 1250000
-    flags = 1
-    data = length 89, hash 2C7837D6
-  sample 35:
-    time = 1260000
-    flags = 1
-    data = length 86, hash 58D56685
-  sample 36:
-    time = 1270000
-    flags = 1
-    data = length 91, hash ADC5072F
-  sample 37:
-    time = 1280000
-    flags = 1
-    data = length 85, hash 53EFD93
-  sample 38:
-    time = 1290000
-    flags = 1
-    data = length 87, hash D006B535
-  sample 39:
-    time = 1300000
-    flags = 1
-    data = length 86, hash AE944625
-  sample 40:
-    time = 1310000
-    flags = 1
-    data = length 89, hash B5D3C81D
-  sample 41:
-    time = 1320000
-    flags = 1
-    data = length 86, hash 3BB1D0E7
-  sample 42:
-    time = 1330000
-    flags = 1
-    data = length 102, hash 16EEC441
-  sample 43:
-    time = 1340000
-    flags = 1
-    data = length 90, hash 1005B936
-  sample 44:
-    time = 1350000
-    flags = 1
-    data = length 85, hash 15EEBF9A
-  sample 45:
-    time = 1360000
-    flags = 1
-    data = length 87, hash 37C83AC2
-  sample 46:
-    time = 1370000
-    flags = 1
-    data = length 85, hash 2D27855D
-  sample 47:
-    time = 1380000
-    flags = 1
-    data = length 85, hash 753EB7C6
-  sample 48:
-    time = 1390000
-    flags = 1
-    data = length 91, hash C0813318
-  sample 49:
-    time = 1400000
-    flags = 1
-    data = length 89, hash 3A6468AC
-  sample 50:
-    time = 1410000
-    flags = 1
-    data = length 88, hash 3D220ABC
-  sample 51:
-    time = 1420000
-    flags = 1
-    data = length 140, hash 7949ABC7
-  sample 52:
-    time = 1430000
-    flags = 1
-    data = length 92, hash F19AFA45
-  sample 53:
-    time = 1440000
-    flags = 1
-    data = length 90, hash 3D21587C
-  sample 54:
-    time = 1450000
-    flags = 1
-    data = length 89, hash 5C12226C
-  sample 55:
-    time = 1460000
-    flags = 1
-    data = length 90, hash 22BA14FC
-  sample 56:
-    time = 1470000
-    flags = 1
-    data = length 88, hash F064B21C
-  sample 57:
-    time = 1480000
-    flags = 1
-    data = length 87, hash 6D7906B9
-  sample 58:
-    time = 1490000
-    flags = 1
-    data = length 88, hash 6756A484
-  sample 59:
-    time = 1500000
-    flags = 1
-    data = length 91, hash C95C00B6
-  sample 60:
-    time = 1510000
-    flags = 1
-    data = length 87, hash 728D8119
-  sample 61:
-    time = 1520000
-    flags = 1
-    data = length 90, hash C43DA1B4
-  sample 62:
-    time = 1530000
-    flags = 1
-    data = length 88, hash C181BB57
-  sample 63:
-    time = 1540000
-    flags = 1
-    data = length 84, hash F75B1639
-  sample 64:
-    time = 1550000
-    flags = 1
-    data = length 87, hash B6F32978
-  sample 65:
-    time = 1560000
-    flags = 1
-    data = length 90, hash 36D6E2D7
-  sample 66:
-    time = 1570000
-    flags = 1
-    data = length 87, hash 4C9657A7
-  sample 67:
-    time = 1580000
-    flags = 1
-    data = length 89, hash C3BDB9B7
-  sample 68:
-    time = 1590000
-    flags = 1
-    data = length 88, hash DB51087E
-  sample 69:
-    time = 1600000
-    flags = 1
-    data = length 86, hash 1550F998
-  sample 70:
-    time = 1610000
-    flags = 1
-    data = length 86, hash A445FAD4
-  sample 71:
-    time = 1620000
-    flags = 1
-    data = length 85, hash 60D3362C
-  sample 72:
-    time = 1630000
-    flags = 1
-    data = length 172, hash 945D63E4
-  sample 73:
-    time = 1640000
-    flags = 1
-    data = length 107, hash 585B7C04
-  sample 74:
-    time = 1650000
-    flags = 1
-    data = length 110, hash 74BECF69
-  sample 75:
-    time = 1660000
-    flags = 1
-    data = length 87, hash 63DE1D24
-  sample 76:
-    time = 1670000
-    flags = 1
-    data = length 90, hash 1C1D28DB
-  sample 77:
-    time = 1680000
-    flags = 1
-    data = length 87, hash CB382A67
-  sample 78:
-    time = 1690000
-    flags = 1
-    data = length 85, hash A227BA13
-  sample 79:
-    time = 1700000
-    flags = 1
-    data = length 86, hash EFD8B10B
-  sample 80:
-    time = 1710000
-    flags = 1
-    data = length 87, hash 47FF364A
-  sample 81:
-    time = 1720000
-    flags = 1
-    data = length 91, hash 31D4B48A
-  sample 82:
-    time = 1730000
-    flags = 1
-    data = length 91, hash DD69BD85
-  sample 83:
-    time = 1740000
-    flags = 1
-    data = length 88, hash AF1A95C6
-  sample 84:
-    time = 1750000
-    flags = 1
-    data = length 87, hash 2FB8AF74
-  sample 85:
-    time = 1760000
-    flags = 1
-    data = length 92, hash 173C707A
-  sample 86:
-    time = 1770000
-    flags = 1
-    data = length 88, hash 5F58F5E8
-  sample 87:
-    time = 1780000
-    flags = 1
-    data = length 91, hash D449785F
-  sample 88:
-    time = 1790000
-    flags = 1
-    data = length 91, hash CE2CB465
-  sample 89:
-    time = 1800000
-    flags = 1
-    data = length 93, hash ABC1C62E
-  sample 90:
-    time = 1810000
-    flags = 1
-    data = length 87, hash 83B4B9A0
-  sample 91:
-    time = 1820000
-    flags = 1
-    data = length 87, hash 3220D562
-  sample 92:
-    time = 1830000
-    flags = 1
-    data = length 86, hash 64D21AA1
-  sample 93:
-    time = 1840000
-    flags = 1
-    data = length 86, hash A1FAAF2C
-  sample 94:
-    time = 1850000
-    flags = 1
-    data = length 86, hash ECA80F7E
-  sample 95:
-    time = 1860000
-    flags = 1
-    data = length 86, hash FEB03B2C
-  sample 96:
-    time = 1870000
-    flags = 1
-    data = length 85, hash 2C2E6B2F
-  sample 97:
-    time = 1880000
-    flags = 1
-    data = length 89, hash A0D7AC3
-  sample 98:
-    time = 1890000
-    flags = 1
-    data = length 87, hash 83739547
-  sample 99:
-    time = 1900000
-    flags = 1
-    data = length 86, hash 991E531E
-  sample 100:
-    time = 1910000
-    flags = 1
-    data = length 88, hash 16B287A3
-  sample 101:
-    time = 1920000
-    flags = 1
-    data = length 86, hash FC86EED
-  sample 102:
-    time = 1930000
-    flags = 1
-    data = length 86, hash 96AF0248
-  sample 103:
-    time = 1940000
-    flags = 1
-    data = length 86, hash 288402C8
-  sample 104:
-    time = 1950000
-    flags = 1
-    data = length 87, hash 4BBA7912
-  sample 105:
-    time = 1960000
-    flags = 1
-    data = length 86, hash 4A59C719
-  sample 106:
-    time = 1970000
-    flags = 1
-    data = length 85, hash 906E8187
-  sample 107:
-    time = 1980000
-    flags = 1
-    data = length 90, hash CB8B755D
-  sample 108:
-    time = 1990000
-    flags = 1
-    data = length 87, hash C8E02C
-  sample 109:
-    time = 2000000
-    flags = 1
-    data = length 88, hash ACF4D89A
-  sample 110:
-    time = 2010000
-    flags = 1
-    data = length 86, hash 510FE048
-  sample 111:
-    time = 2020000
-    flags = 1
-    data = length 86, hash 64983E46
-  sample 112:
-    time = 2030000
-    flags = 1
-    data = length 86, hash CEA76A1E
-  sample 113:
-    time = 2040000
-    flags = 1
-    data = length 87, hash AADE498E
-  sample 114:
-    time = 2050000
-    flags = 1
-    data = length 127, hash 353A6D8C
-  sample 115:
-    time = 2060000
-    flags = 1
-    data = length 87, hash 29E18E62
-  sample 116:
-    time = 2070000
-    flags = 1
-    data = length 87, hash 2CF7B30F
-  sample 117:
-    time = 2080000
-    flags = 1
-    data = length 94, hash 758704C3
-  sample 118:
-    time = 2090000
-    flags = 1
-    data = length 88, hash C2153A4C
-  sample 119:
-    time = 2100000
-    flags = 1
-    data = length 86, hash A0A83DA5
-  sample 120:
-    time = 2110000
-    flags = 1
-    data = length 86, hash 41017D7F
-  sample 121:
-    time = 2120000
-    flags = 1
-    data = length 93, hash 686B0CA2
-  sample 122:
-    time = 2130000
-    flags = 1
-    data = length 86, hash 554D16CC
-  sample 123:
-    time = 2140000
-    flags = 1
-    data = length 88, hash 99D72771
-  sample 124:
-    time = 2150000
-    flags = 1
-    data = length 88, hash 7176DFBF
-  sample 125:
-    time = 2160000
-    flags = 1
-    data = length 86, hash BAA22669
-  sample 126:
-    time = 2170000
-    flags = 1
-    data = length 88, hash B00B0D3C
-  sample 127:
-    time = 2180000
-    flags = 1
-    data = length 89, hash 73FED83A
-  sample 128:
-    time = 2190000
-    flags = 1
-    data = length 86, hash 4A4138D3
-  sample 129:
-    time = 2200000
-    flags = 1
-    data = length 89, hash E0A860FF
-  sample 130:
-    time = 2210000
-    flags = 1
-    data = length 95, hash EE5A8AED
-  sample 131:
-    time = 2220000
-    flags = 1
-    data = length 92, hash 36DBD7FD
-  sample 132:
-    time = 2230000
-    flags = 1
-    data = length 88, hash EE47A7E4
-  sample 133:
-    time = 2240000
-    flags = 1
-    data = length 100, hash 2E1A603F
-  sample 134:
-    time = 2250000
-    flags = 1
-    data = length 89, hash 657ED4A3
-  sample 135:
-    time = 2260000
-    flags = 1
-    data = length 86, hash A833DC7B
-  sample 136:
-    time = 2270000
-    flags = 1
-    data = length 88, hash 81E80732
-  sample 137:
-    time = 2280000
-    flags = 1
-    data = length 91, hash FA256A0F
-  sample 138:
-    time = 2290000
-    flags = 1
-    data = length 88, hash A63A4DBA
-  sample 139:
-    time = 2300000
-    flags = 1
-    data = length 88, hash 67910A9F
-  sample 140:
-    time = 2310000
-    flags = 1
-    data = length 86, hash EB387DB6
-  sample 141:
-    time = 2320000
-    flags = 1
-    data = length 88, hash 5ACAAC2A
-  sample 142:
-    time = 2330000
-    flags = 1
-    data = length 86, hash 6ADF2E1F
-  sample 143:
-    time = 2340000
-    flags = 1
-    data = length 85, hash 9D064471
-  sample 144:
-    time = 2350000
-    flags = 1
-    data = length 87, hash F176C59
-  sample 145:
-    time = 2360000
-    flags = 1
-    data = length 89, hash 5CA40CE4
-  sample 146:
-    time = 2370000
-    flags = 1
-    data = length 88, hash 67B944FC
-  sample 147:
-    time = 2380000
-    flags = 1
-    data = length 86, hash B3A84EC8
-  sample 148:
-    time = 2390000
-    flags = 1
-    data = length 92, hash A6ACF94B
-  sample 149:
-    time = 2400000
-    flags = 1
-    data = length 88, hash CB0C9730
-  sample 150:
-    time = 2410000
-    flags = 1
-    data = length 88, hash C79FE804
-  sample 151:
-    time = 2420000
-    flags = 1
-    data = length 88, hash A74C7F0A
-  sample 152:
-    time = 2430000
-    flags = 1
-    data = length 91, hash 55F6F0A5
-  sample 153:
-    time = 2440000
-    flags = 1
-    data = length 93, hash 330F33E7
-  sample 154:
-    time = 2450000
-    flags = 1
-    data = length 89, hash 614AFBA0
-  sample 155:
-    time = 2460000
-    flags = 1
-    data = length 87, hash 3CE4652D
-  sample 156:
-    time = 2470000
-    flags = 1
-    data = length 87, hash 4EFD5467
-  sample 157:
-    time = 2480000
-    flags = 1
-    data = length 86, hash D81B3EB8
-  sample 158:
-    time = 2490000
-    flags = 1
-    data = length 88, hash 96CB6871
-  sample 159:
-    time = 2500000
-    flags = 1
-    data = length 88, hash E9DF2786
-  sample 160:
-    time = 2510000
-    flags = 1
-    data = length 89, hash 2CA33D96
-  sample 161:
-    time = 2520000
-    flags = 1
-    data = length 90, hash 96BDE594
-  sample 162:
-    time = 2530000
-    flags = 1
-    data = length 87, hash C261493C
-  sample 163:
-    time = 2540000
-    flags = 1
-    data = length 86, hash D037318E
-  sample 164:
-    time = 2550000
-    flags = 1
-    data = length 88, hash BC15BC88
-  sample 165:
-    time = 2560000
-    flags = 1
-    data = length 91, hash A8361A51
-  sample 166:
-    time = 2570000
-    flags = 1
-    data = length 87, hash 4AFDB5F2
-  sample 167:
-    time = 2580000
-    flags = 1
-    data = length 87, hash 6447F8CB
-  sample 168:
-    time = 2590000
-    flags = 1
-    data = length 89, hash 48305229
-  sample 169:
-    time = 2600000
-    flags = 1
-    data = length 87, hash 8741D9E7
-  sample 170:
-    time = 2610000
-    flags = 1
-    data = length 120, hash 761F020C
-  sample 171:
-    time = 2620000
-    flags = 1
-    data = length 139, hash AECE2E57
-  sample 172:
-    time = 2630000
-    flags = 1
-    data = length 166, hash 6288797A
-  sample 173:
-    time = 2640000
-    flags = 1
-    data = length 144, hash 437821A0
-  sample 174:
-    time = 2650000
-    flags = 1
-    data = length 113, hash FCCBEDF1
-  sample 175:
-    time = 2660000
-    flags = 1
-    data = length 108, hash C4040614
-  sample 176:
-    time = 2670000
-    flags = 1
-    data = length 125, hash E29064C2
-  sample 177:
-    time = 2680000
-    flags = 1
-    data = length 126, hash D42D24FF
-  sample 178:
-    time = 2690000
-    flags = 1
-    data = length 122, hash 30AF267D
-  sample 179:
-    time = 2700000
-    flags = 1
-    data = length 122, hash 45CEC1FB
-  sample 180:
-    time = 2710000
-    flags = 1
-    data = length 134, hash 59143FE2
-  sample 181:
-    time = 2720000
-    flags = 1
-    data = length 134, hash BD52A84
-  sample 182:
-    time = 2730000
-    flags = 1
-    data = length 120, hash 745C3714
-  sample 183:
-    time = 2740000
-    flags = 1
-    data = length 126, hash 505E117B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear.opus.2.dump b/library/core/src/androidTest/assets/ogg/bear.opus.2.dump
deleted file mode 100644
index f2f07f3e2f..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear.opus.2.dump
+++ /dev/null
@@ -1,400 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2747500
-  getPosition(0) = 125
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/opus
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 19, hash BFE794DB
-      data = length 8, hash CA22068C
-      data = length 8, hash 79C07075
-  sample count = 92
-  sample 0:
-    time = 1830000
-    flags = 1
-    data = length 86, hash 64D21AA1
-  sample 1:
-    time = 1840000
-    flags = 1
-    data = length 86, hash A1FAAF2C
-  sample 2:
-    time = 1850000
-    flags = 1
-    data = length 86, hash ECA80F7E
-  sample 3:
-    time = 1860000
-    flags = 1
-    data = length 86, hash FEB03B2C
-  sample 4:
-    time = 1870000
-    flags = 1
-    data = length 85, hash 2C2E6B2F
-  sample 5:
-    time = 1880000
-    flags = 1
-    data = length 89, hash A0D7AC3
-  sample 6:
-    time = 1890000
-    flags = 1
-    data = length 87, hash 83739547
-  sample 7:
-    time = 1900000
-    flags = 1
-    data = length 86, hash 991E531E
-  sample 8:
-    time = 1910000
-    flags = 1
-    data = length 88, hash 16B287A3
-  sample 9:
-    time = 1920000
-    flags = 1
-    data = length 86, hash FC86EED
-  sample 10:
-    time = 1930000
-    flags = 1
-    data = length 86, hash 96AF0248
-  sample 11:
-    time = 1940000
-    flags = 1
-    data = length 86, hash 288402C8
-  sample 12:
-    time = 1950000
-    flags = 1
-    data = length 87, hash 4BBA7912
-  sample 13:
-    time = 1960000
-    flags = 1
-    data = length 86, hash 4A59C719
-  sample 14:
-    time = 1970000
-    flags = 1
-    data = length 85, hash 906E8187
-  sample 15:
-    time = 1980000
-    flags = 1
-    data = length 90, hash CB8B755D
-  sample 16:
-    time = 1990000
-    flags = 1
-    data = length 87, hash C8E02C
-  sample 17:
-    time = 2000000
-    flags = 1
-    data = length 88, hash ACF4D89A
-  sample 18:
-    time = 2010000
-    flags = 1
-    data = length 86, hash 510FE048
-  sample 19:
-    time = 2020000
-    flags = 1
-    data = length 86, hash 64983E46
-  sample 20:
-    time = 2030000
-    flags = 1
-    data = length 86, hash CEA76A1E
-  sample 21:
-    time = 2040000
-    flags = 1
-    data = length 87, hash AADE498E
-  sample 22:
-    time = 2050000
-    flags = 1
-    data = length 127, hash 353A6D8C
-  sample 23:
-    time = 2060000
-    flags = 1
-    data = length 87, hash 29E18E62
-  sample 24:
-    time = 2070000
-    flags = 1
-    data = length 87, hash 2CF7B30F
-  sample 25:
-    time = 2080000
-    flags = 1
-    data = length 94, hash 758704C3
-  sample 26:
-    time = 2090000
-    flags = 1
-    data = length 88, hash C2153A4C
-  sample 27:
-    time = 2100000
-    flags = 1
-    data = length 86, hash A0A83DA5
-  sample 28:
-    time = 2110000
-    flags = 1
-    data = length 86, hash 41017D7F
-  sample 29:
-    time = 2120000
-    flags = 1
-    data = length 93, hash 686B0CA2
-  sample 30:
-    time = 2130000
-    flags = 1
-    data = length 86, hash 554D16CC
-  sample 31:
-    time = 2140000
-    flags = 1
-    data = length 88, hash 99D72771
-  sample 32:
-    time = 2150000
-    flags = 1
-    data = length 88, hash 7176DFBF
-  sample 33:
-    time = 2160000
-    flags = 1
-    data = length 86, hash BAA22669
-  sample 34:
-    time = 2170000
-    flags = 1
-    data = length 88, hash B00B0D3C
-  sample 35:
-    time = 2180000
-    flags = 1
-    data = length 89, hash 73FED83A
-  sample 36:
-    time = 2190000
-    flags = 1
-    data = length 86, hash 4A4138D3
-  sample 37:
-    time = 2200000
-    flags = 1
-    data = length 89, hash E0A860FF
-  sample 38:
-    time = 2210000
-    flags = 1
-    data = length 95, hash EE5A8AED
-  sample 39:
-    time = 2220000
-    flags = 1
-    data = length 92, hash 36DBD7FD
-  sample 40:
-    time = 2230000
-    flags = 1
-    data = length 88, hash EE47A7E4
-  sample 41:
-    time = 2240000
-    flags = 1
-    data = length 100, hash 2E1A603F
-  sample 42:
-    time = 2250000
-    flags = 1
-    data = length 89, hash 657ED4A3
-  sample 43:
-    time = 2260000
-    flags = 1
-    data = length 86, hash A833DC7B
-  sample 44:
-    time = 2270000
-    flags = 1
-    data = length 88, hash 81E80732
-  sample 45:
-    time = 2280000
-    flags = 1
-    data = length 91, hash FA256A0F
-  sample 46:
-    time = 2290000
-    flags = 1
-    data = length 88, hash A63A4DBA
-  sample 47:
-    time = 2300000
-    flags = 1
-    data = length 88, hash 67910A9F
-  sample 48:
-    time = 2310000
-    flags = 1
-    data = length 86, hash EB387DB6
-  sample 49:
-    time = 2320000
-    flags = 1
-    data = length 88, hash 5ACAAC2A
-  sample 50:
-    time = 2330000
-    flags = 1
-    data = length 86, hash 6ADF2E1F
-  sample 51:
-    time = 2340000
-    flags = 1
-    data = length 85, hash 9D064471
-  sample 52:
-    time = 2350000
-    flags = 1
-    data = length 87, hash F176C59
-  sample 53:
-    time = 2360000
-    flags = 1
-    data = length 89, hash 5CA40CE4
-  sample 54:
-    time = 2370000
-    flags = 1
-    data = length 88, hash 67B944FC
-  sample 55:
-    time = 2380000
-    flags = 1
-    data = length 86, hash B3A84EC8
-  sample 56:
-    time = 2390000
-    flags = 1
-    data = length 92, hash A6ACF94B
-  sample 57:
-    time = 2400000
-    flags = 1
-    data = length 88, hash CB0C9730
-  sample 58:
-    time = 2410000
-    flags = 1
-    data = length 88, hash C79FE804
-  sample 59:
-    time = 2420000
-    flags = 1
-    data = length 88, hash A74C7F0A
-  sample 60:
-    time = 2430000
-    flags = 1
-    data = length 91, hash 55F6F0A5
-  sample 61:
-    time = 2440000
-    flags = 1
-    data = length 93, hash 330F33E7
-  sample 62:
-    time = 2450000
-    flags = 1
-    data = length 89, hash 614AFBA0
-  sample 63:
-    time = 2460000
-    flags = 1
-    data = length 87, hash 3CE4652D
-  sample 64:
-    time = 2470000
-    flags = 1
-    data = length 87, hash 4EFD5467
-  sample 65:
-    time = 2480000
-    flags = 1
-    data = length 86, hash D81B3EB8
-  sample 66:
-    time = 2490000
-    flags = 1
-    data = length 88, hash 96CB6871
-  sample 67:
-    time = 2500000
-    flags = 1
-    data = length 88, hash E9DF2786
-  sample 68:
-    time = 2510000
-    flags = 1
-    data = length 89, hash 2CA33D96
-  sample 69:
-    time = 2520000
-    flags = 1
-    data = length 90, hash 96BDE594
-  sample 70:
-    time = 2530000
-    flags = 1
-    data = length 87, hash C261493C
-  sample 71:
-    time = 2540000
-    flags = 1
-    data = length 86, hash D037318E
-  sample 72:
-    time = 2550000
-    flags = 1
-    data = length 88, hash BC15BC88
-  sample 73:
-    time = 2560000
-    flags = 1
-    data = length 91, hash A8361A51
-  sample 74:
-    time = 2570000
-    flags = 1
-    data = length 87, hash 4AFDB5F2
-  sample 75:
-    time = 2580000
-    flags = 1
-    data = length 87, hash 6447F8CB
-  sample 76:
-    time = 2590000
-    flags = 1
-    data = length 89, hash 48305229
-  sample 77:
-    time = 2600000
-    flags = 1
-    data = length 87, hash 8741D9E7
-  sample 78:
-    time = 2610000
-    flags = 1
-    data = length 120, hash 761F020C
-  sample 79:
-    time = 2620000
-    flags = 1
-    data = length 139, hash AECE2E57
-  sample 80:
-    time = 2630000
-    flags = 1
-    data = length 166, hash 6288797A
-  sample 81:
-    time = 2640000
-    flags = 1
-    data = length 144, hash 437821A0
-  sample 82:
-    time = 2650000
-    flags = 1
-    data = length 113, hash FCCBEDF1
-  sample 83:
-    time = 2660000
-    flags = 1
-    data = length 108, hash C4040614
-  sample 84:
-    time = 2670000
-    flags = 1
-    data = length 125, hash E29064C2
-  sample 85:
-    time = 2680000
-    flags = 1
-    data = length 126, hash D42D24FF
-  sample 86:
-    time = 2690000
-    flags = 1
-    data = length 122, hash 30AF267D
-  sample 87:
-    time = 2700000
-    flags = 1
-    data = length 122, hash 45CEC1FB
-  sample 88:
-    time = 2710000
-    flags = 1
-    data = length 134, hash 59143FE2
-  sample 89:
-    time = 2720000
-    flags = 1
-    data = length 134, hash BD52A84
-  sample 90:
-    time = 2730000
-    flags = 1
-    data = length 120, hash 745C3714
-  sample 91:
-    time = 2740000
-    flags = 1
-    data = length 126, hash 505E117B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear.opus.3.dump b/library/core/src/androidTest/assets/ogg/bear.opus.3.dump
deleted file mode 100644
index 905055797c..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear.opus.3.dump
+++ /dev/null
@@ -1,36 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2747500
-  getPosition(0) = 125
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/opus
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 19, hash BFE794DB
-      data = length 8, hash CA22068C
-      data = length 8, hash 79C07075
-  sample count = 1
-  sample 0:
-    time = 2741000
-    flags = 1
-    data = length 126, hash 505E117B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear.opus.unklen.dump b/library/core/src/androidTest/assets/ogg/bear.opus.unklen.dump
deleted file mode 100644
index cd29da3e27..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear.opus.unklen.dump
+++ /dev/null
@@ -1,1132 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/opus
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 19, hash BFE794DB
-      data = length 8, hash CA22068C
-      data = length 8, hash 79C07075
-  sample count = 275
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 234, hash B77BFFDA
-  sample 1:
-    time = 10000
-    flags = 1
-    data = length 165, hash F7B07C35
-  sample 2:
-    time = 20000
-    flags = 1
-    data = length 100, hash 21AFA81F
-  sample 3:
-    time = 30000
-    flags = 1
-    data = length 85, hash 9180DC2F
-  sample 4:
-    time = 40000
-    flags = 1
-    data = length 85, hash 6AE958C
-  sample 5:
-    time = 50000
-    flags = 1
-    data = length 86, hash C1C5AE60
-  sample 6:
-    time = 60000
-    flags = 1
-    data = length 87, hash B9BD2620
-  sample 7:
-    time = 70000
-    flags = 1
-    data = length 86, hash 5E69E6F9
-  sample 8:
-    time = 80000
-    flags = 1
-    data = length 90, hash C44C7DD9
-  sample 9:
-    time = 90000
-    flags = 1
-    data = length 86, hash C3FCDC6F
-  sample 10:
-    time = 100000
-    flags = 1
-    data = length 86, hash 44EA03BA
-  sample 11:
-    time = 110000
-    flags = 1
-    data = length 160, hash 9F4E1AE8
-  sample 12:
-    time = 120000
-    flags = 1
-    data = length 89, hash 31234460
-  sample 13:
-    time = 130000
-    flags = 1
-    data = length 91, hash 45012D79
-  sample 14:
-    time = 140000
-    flags = 1
-    data = length 90, hash B3E3AC75
-  sample 15:
-    time = 150000
-    flags = 1
-    data = length 87, hash B83B756B
-  sample 16:
-    time = 160000
-    flags = 1
-    data = length 86, hash 383921EB
-  sample 17:
-    time = 170000
-    flags = 1
-    data = length 97, hash 959AD270
-  sample 18:
-    time = 180000
-    flags = 1
-    data = length 92, hash 46C74FA8
-  sample 19:
-    time = 190000
-    flags = 1
-    data = length 91, hash CEA401DD
-  sample 20:
-    time = 200000
-    flags = 1
-    data = length 89, hash 48C41853
-  sample 21:
-    time = 210000
-    flags = 1
-    data = length 90, hash F23245BD
-  sample 22:
-    time = 220000
-    flags = 1
-    data = length 96, hash 95E8985D
-  sample 23:
-    time = 230000
-    flags = 1
-    data = length 96, hash 34295492
-  sample 24:
-    time = 240000
-    flags = 1
-    data = length 94, hash 4E3C9C0F
-  sample 25:
-    time = 250000
-    flags = 1
-    data = length 89, hash 28B74A29
-  sample 26:
-    time = 260000
-    flags = 1
-    data = length 87, hash BAC119A7
-  sample 27:
-    time = 270000
-    flags = 1
-    data = length 88, hash 7139FF38
-  sample 28:
-    time = 280000
-    flags = 1
-    data = length 85, hash 246E1D2A
-  sample 29:
-    time = 290000
-    flags = 1
-    data = length 86, hash 488A0900
-  sample 30:
-    time = 300000
-    flags = 1
-    data = length 90, hash 16FD17B1
-  sample 31:
-    time = 310000
-    flags = 1
-    data = length 87, hash 20E849D9
-  sample 32:
-    time = 320000
-    flags = 1
-    data = length 86, hash 23A0E9BA
-  sample 33:
-    time = 330000
-    flags = 1
-    data = length 87, hash EC935537
-  sample 34:
-    time = 340000
-    flags = 1
-    data = length 92, hash 4D9935AD
-  sample 35:
-    time = 350000
-    flags = 1
-    data = length 87, hash DEDE3FA
-  sample 36:
-    time = 360000
-    flags = 1
-    data = length 87, hash ADC25A6E
-  sample 37:
-    time = 370000
-    flags = 1
-    data = length 88, hash A1C828C5
-  sample 38:
-    time = 380000
-    flags = 1
-    data = length 89, hash 735C087A
-  sample 39:
-    time = 390000
-    flags = 1
-    data = length 89, hash 19AF5D10
-  sample 40:
-    time = 400000
-    flags = 1
-    data = length 90, hash BCCEA2BB
-  sample 41:
-    time = 410000
-    flags = 1
-    data = length 86, hash A7C934A0
-  sample 42:
-    time = 420000
-    flags = 1
-    data = length 86, hash 28BBC0A8
-  sample 43:
-    time = 430000
-    flags = 1
-    data = length 85, hash E60BB12D
-  sample 44:
-    time = 440000
-    flags = 1
-    data = length 141, hash 1D2B8920
-  sample 45:
-    time = 450000
-    flags = 1
-    data = length 121, hash 8AA3E19C
-  sample 46:
-    time = 460000
-    flags = 1
-    data = length 86, hash 24DF0F37
-  sample 47:
-    time = 470000
-    flags = 1
-    data = length 86, hash 1D1775FF
-  sample 48:
-    time = 480000
-    flags = 1
-    data = length 87, hash 5230399E
-  sample 49:
-    time = 490000
-    flags = 1
-    data = length 91, hash 6CD98305
-  sample 50:
-    time = 500000
-    flags = 1
-    data = length 88, hash 4069FBB
-  sample 51:
-    time = 510000
-    flags = 1
-    data = length 89, hash 76824ABF
-  sample 52:
-    time = 520000
-    flags = 1
-    data = length 87, hash BC1B1322
-  sample 53:
-    time = 530000
-    flags = 1
-    data = length 102, hash E01BA053
-  sample 54:
-    time = 540000
-    flags = 1
-    data = length 85, hash C09B626D
-  sample 55:
-    time = 550000
-    flags = 1
-    data = length 88, hash 6B7B404A
-  sample 56:
-    time = 560000
-    flags = 1
-    data = length 85, hash 74A15DC7
-  sample 57:
-    time = 570000
-    flags = 1
-    data = length 88, hash 38DB82E5
-  sample 58:
-    time = 580000
-    flags = 1
-    data = length 86, hash 1A39C081
-  sample 59:
-    time = 590000
-    flags = 1
-    data = length 87, hash 39FEC92
-  sample 60:
-    time = 600000
-    flags = 1
-    data = length 92, hash 278EA09
-  sample 61:
-    time = 610000
-    flags = 1
-    data = length 87, hash 28265F2D
-  sample 62:
-    time = 620000
-    flags = 1
-    data = length 86, hash CC2040C6
-  sample 63:
-    time = 630000
-    flags = 1
-    data = length 138, hash 9E07BC1F
-  sample 64:
-    time = 640000
-    flags = 1
-    data = length 85, hash 4F299670
-  sample 65:
-    time = 650000
-    flags = 1
-    data = length 125, hash B61123C3
-  sample 66:
-    time = 660000
-    flags = 1
-    data = length 89, hash 5CC688ED
-  sample 67:
-    time = 670000
-    flags = 1
-    data = length 88, hash 84AF64A6
-  sample 68:
-    time = 680000
-    flags = 1
-    data = length 89, hash A9BFC8DC
-  sample 69:
-    time = 690000
-    flags = 1
-    data = length 90, hash 2FF77060
-  sample 70:
-    time = 700000
-    flags = 1
-    data = length 96, hash E11AFD61
-  sample 71:
-    time = 710000
-    flags = 1
-    data = length 87, hash 85D14EDA
-  sample 72:
-    time = 720000
-    flags = 1
-    data = length 88, hash 5FC71D53
-  sample 73:
-    time = 730000
-    flags = 1
-    data = length 89, hash 957187B6
-  sample 74:
-    time = 740000
-    flags = 1
-    data = length 89, hash 5A776082
-  sample 75:
-    time = 750000
-    flags = 1
-    data = length 87, hash E8A83AFE
-  sample 76:
-    time = 760000
-    flags = 1
-    data = length 87, hash F1989133
-  sample 77:
-    time = 770000
-    flags = 1
-    data = length 87, hash FA06BCCA
-  sample 78:
-    time = 780000
-    flags = 1
-    data = length 86, hash BD97E0C0
-  sample 79:
-    time = 790000
-    flags = 1
-    data = length 88, hash E6AE022C
-  sample 80:
-    time = 800000
-    flags = 1
-    data = length 87, hash FB6C6169
-  sample 81:
-    time = 810000
-    flags = 1
-    data = length 87, hash DFFCD2CF
-  sample 82:
-    time = 820000
-    flags = 1
-    data = length 88, hash A4B5EB52
-  sample 83:
-    time = 830000
-    flags = 1
-    data = length 85, hash A63CF4EA
-  sample 84:
-    time = 840000
-    flags = 1
-    data = length 86, hash F126E7C7
-  sample 85:
-    time = 850000
-    flags = 1
-    data = length 86, hash 21A8B22F
-  sample 86:
-    time = 860000
-    flags = 1
-    data = length 87, hash 6520E7C1
-  sample 87:
-    time = 870000
-    flags = 1
-    data = length 88, hash 825B7423
-  sample 88:
-    time = 880000
-    flags = 1
-    data = length 88, hash DF3DBD48
-  sample 89:
-    time = 890000
-    flags = 1
-    data = length 87, hash B32C68D0
-  sample 90:
-    time = 900000
-    flags = 1
-    data = length 89, hash B99DFFCA
-  sample 91:
-    time = 910000
-    flags = 1
-    data = length 88, hash 9C8D5178
-  sample 92:
-    time = 920000
-    flags = 1
-    data = length 88, hash 48A0B19A
-  sample 93:
-    time = 930000
-    flags = 1
-    data = length 88, hash B62C94DD
-  sample 94:
-    time = 940000
-    flags = 1
-    data = length 92, hash 96DBDD46
-  sample 95:
-    time = 950000
-    flags = 1
-    data = length 87, hash 7B80E6F
-  sample 96:
-    time = 960000
-    flags = 1
-    data = length 86, hash 9C60225B
-  sample 97:
-    time = 970000
-    flags = 1
-    data = length 87, hash 45F7E6E8
-  sample 98:
-    time = 980000
-    flags = 1
-    data = length 87, hash DDC2D592
-  sample 99:
-    time = 990000
-    flags = 1
-    data = length 91, hash 173D3B26
-  sample 100:
-    time = 1000000
-    flags = 1
-    data = length 87, hash CF3629DF
-  sample 101:
-    time = 1010000
-    flags = 1
-    data = length 87, hash BBE2E7B3
-  sample 102:
-    time = 1020000
-    flags = 1
-    data = length 89, hash 89AFFB10
-  sample 103:
-    time = 1030000
-    flags = 1
-    data = length 88, hash 510DCC90
-  sample 104:
-    time = 1040000
-    flags = 1
-    data = length 88, hash CBA56E5F
-  sample 105:
-    time = 1050000
-    flags = 1
-    data = length 87, hash B4B1B3FF
-  sample 106:
-    time = 1060000
-    flags = 1
-    data = length 89, hash B976A537
-  sample 107:
-    time = 1070000
-    flags = 1
-    data = length 96, hash 43ECF2C1
-  sample 108:
-    time = 1080000
-    flags = 1
-    data = length 90, hash BB7ECB44
-  sample 109:
-    time = 1090000
-    flags = 1
-    data = length 89, hash B8E221A5
-  sample 110:
-    time = 1100000
-    flags = 1
-    data = length 86, hash B35BEF5B
-  sample 111:
-    time = 1110000
-    flags = 1
-    data = length 89, hash 9002F0EC
-  sample 112:
-    time = 1120000
-    flags = 1
-    data = length 85, hash F694B20
-  sample 113:
-    time = 1130000
-    flags = 1
-    data = length 87, hash D7CC386E
-  sample 114:
-    time = 1140000
-    flags = 1
-    data = length 89, hash EE9E0E79
-  sample 115:
-    time = 1150000
-    flags = 1
-    data = length 90, hash CA72C96B
-  sample 116:
-    time = 1160000
-    flags = 1
-    data = length 112, hash 4AD3D1B1
-  sample 117:
-    time = 1170000
-    flags = 1
-    data = length 87, hash FA568FAB
-  sample 118:
-    time = 1180000
-    flags = 1
-    data = length 90, hash 6E6948D2
-  sample 119:
-    time = 1190000
-    flags = 1
-    data = length 89, hash 5465A762
-  sample 120:
-    time = 1200000
-    flags = 1
-    data = length 87, hash BED19B40
-  sample 121:
-    time = 1210000
-    flags = 1
-    data = length 89, hash 5D05836A
-  sample 122:
-    time = 1220000
-    flags = 1
-    data = length 87, hash A8A3EF5A
-  sample 123:
-    time = 1230000
-    flags = 1
-    data = length 90, hash 6425A77A
-  sample 124:
-    time = 1240000
-    flags = 1
-    data = length 92, hash 7F320FA
-  sample 125:
-    time = 1250000
-    flags = 1
-    data = length 89, hash 2C7837D6
-  sample 126:
-    time = 1260000
-    flags = 1
-    data = length 86, hash 58D56685
-  sample 127:
-    time = 1270000
-    flags = 1
-    data = length 91, hash ADC5072F
-  sample 128:
-    time = 1280000
-    flags = 1
-    data = length 85, hash 53EFD93
-  sample 129:
-    time = 1290000
-    flags = 1
-    data = length 87, hash D006B535
-  sample 130:
-    time = 1300000
-    flags = 1
-    data = length 86, hash AE944625
-  sample 131:
-    time = 1310000
-    flags = 1
-    data = length 89, hash B5D3C81D
-  sample 132:
-    time = 1320000
-    flags = 1
-    data = length 86, hash 3BB1D0E7
-  sample 133:
-    time = 1330000
-    flags = 1
-    data = length 102, hash 16EEC441
-  sample 134:
-    time = 1340000
-    flags = 1
-    data = length 90, hash 1005B936
-  sample 135:
-    time = 1350000
-    flags = 1
-    data = length 85, hash 15EEBF9A
-  sample 136:
-    time = 1360000
-    flags = 1
-    data = length 87, hash 37C83AC2
-  sample 137:
-    time = 1370000
-    flags = 1
-    data = length 85, hash 2D27855D
-  sample 138:
-    time = 1380000
-    flags = 1
-    data = length 85, hash 753EB7C6
-  sample 139:
-    time = 1390000
-    flags = 1
-    data = length 91, hash C0813318
-  sample 140:
-    time = 1400000
-    flags = 1
-    data = length 89, hash 3A6468AC
-  sample 141:
-    time = 1410000
-    flags = 1
-    data = length 88, hash 3D220ABC
-  sample 142:
-    time = 1420000
-    flags = 1
-    data = length 140, hash 7949ABC7
-  sample 143:
-    time = 1430000
-    flags = 1
-    data = length 92, hash F19AFA45
-  sample 144:
-    time = 1440000
-    flags = 1
-    data = length 90, hash 3D21587C
-  sample 145:
-    time = 1450000
-    flags = 1
-    data = length 89, hash 5C12226C
-  sample 146:
-    time = 1460000
-    flags = 1
-    data = length 90, hash 22BA14FC
-  sample 147:
-    time = 1470000
-    flags = 1
-    data = length 88, hash F064B21C
-  sample 148:
-    time = 1480000
-    flags = 1
-    data = length 87, hash 6D7906B9
-  sample 149:
-    time = 1490000
-    flags = 1
-    data = length 88, hash 6756A484
-  sample 150:
-    time = 1500000
-    flags = 1
-    data = length 91, hash C95C00B6
-  sample 151:
-    time = 1510000
-    flags = 1
-    data = length 87, hash 728D8119
-  sample 152:
-    time = 1520000
-    flags = 1
-    data = length 90, hash C43DA1B4
-  sample 153:
-    time = 1530000
-    flags = 1
-    data = length 88, hash C181BB57
-  sample 154:
-    time = 1540000
-    flags = 1
-    data = length 84, hash F75B1639
-  sample 155:
-    time = 1550000
-    flags = 1
-    data = length 87, hash B6F32978
-  sample 156:
-    time = 1560000
-    flags = 1
-    data = length 90, hash 36D6E2D7
-  sample 157:
-    time = 1570000
-    flags = 1
-    data = length 87, hash 4C9657A7
-  sample 158:
-    time = 1580000
-    flags = 1
-    data = length 89, hash C3BDB9B7
-  sample 159:
-    time = 1590000
-    flags = 1
-    data = length 88, hash DB51087E
-  sample 160:
-    time = 1600000
-    flags = 1
-    data = length 86, hash 1550F998
-  sample 161:
-    time = 1610000
-    flags = 1
-    data = length 86, hash A445FAD4
-  sample 162:
-    time = 1620000
-    flags = 1
-    data = length 85, hash 60D3362C
-  sample 163:
-    time = 1630000
-    flags = 1
-    data = length 172, hash 945D63E4
-  sample 164:
-    time = 1640000
-    flags = 1
-    data = length 107, hash 585B7C04
-  sample 165:
-    time = 1650000
-    flags = 1
-    data = length 110, hash 74BECF69
-  sample 166:
-    time = 1660000
-    flags = 1
-    data = length 87, hash 63DE1D24
-  sample 167:
-    time = 1670000
-    flags = 1
-    data = length 90, hash 1C1D28DB
-  sample 168:
-    time = 1680000
-    flags = 1
-    data = length 87, hash CB382A67
-  sample 169:
-    time = 1690000
-    flags = 1
-    data = length 85, hash A227BA13
-  sample 170:
-    time = 1700000
-    flags = 1
-    data = length 86, hash EFD8B10B
-  sample 171:
-    time = 1710000
-    flags = 1
-    data = length 87, hash 47FF364A
-  sample 172:
-    time = 1720000
-    flags = 1
-    data = length 91, hash 31D4B48A
-  sample 173:
-    time = 1730000
-    flags = 1
-    data = length 91, hash DD69BD85
-  sample 174:
-    time = 1740000
-    flags = 1
-    data = length 88, hash AF1A95C6
-  sample 175:
-    time = 1750000
-    flags = 1
-    data = length 87, hash 2FB8AF74
-  sample 176:
-    time = 1760000
-    flags = 1
-    data = length 92, hash 173C707A
-  sample 177:
-    time = 1770000
-    flags = 1
-    data = length 88, hash 5F58F5E8
-  sample 178:
-    time = 1780000
-    flags = 1
-    data = length 91, hash D449785F
-  sample 179:
-    time = 1790000
-    flags = 1
-    data = length 91, hash CE2CB465
-  sample 180:
-    time = 1800000
-    flags = 1
-    data = length 93, hash ABC1C62E
-  sample 181:
-    time = 1810000
-    flags = 1
-    data = length 87, hash 83B4B9A0
-  sample 182:
-    time = 1820000
-    flags = 1
-    data = length 87, hash 3220D562
-  sample 183:
-    time = 1830000
-    flags = 1
-    data = length 86, hash 64D21AA1
-  sample 184:
-    time = 1840000
-    flags = 1
-    data = length 86, hash A1FAAF2C
-  sample 185:
-    time = 1850000
-    flags = 1
-    data = length 86, hash ECA80F7E
-  sample 186:
-    time = 1860000
-    flags = 1
-    data = length 86, hash FEB03B2C
-  sample 187:
-    time = 1870000
-    flags = 1
-    data = length 85, hash 2C2E6B2F
-  sample 188:
-    time = 1880000
-    flags = 1
-    data = length 89, hash A0D7AC3
-  sample 189:
-    time = 1890000
-    flags = 1
-    data = length 87, hash 83739547
-  sample 190:
-    time = 1900000
-    flags = 1
-    data = length 86, hash 991E531E
-  sample 191:
-    time = 1910000
-    flags = 1
-    data = length 88, hash 16B287A3
-  sample 192:
-    time = 1920000
-    flags = 1
-    data = length 86, hash FC86EED
-  sample 193:
-    time = 1930000
-    flags = 1
-    data = length 86, hash 96AF0248
-  sample 194:
-    time = 1940000
-    flags = 1
-    data = length 86, hash 288402C8
-  sample 195:
-    time = 1950000
-    flags = 1
-    data = length 87, hash 4BBA7912
-  sample 196:
-    time = 1960000
-    flags = 1
-    data = length 86, hash 4A59C719
-  sample 197:
-    time = 1970000
-    flags = 1
-    data = length 85, hash 906E8187
-  sample 198:
-    time = 1980000
-    flags = 1
-    data = length 90, hash CB8B755D
-  sample 199:
-    time = 1990000
-    flags = 1
-    data = length 87, hash C8E02C
-  sample 200:
-    time = 2000000
-    flags = 1
-    data = length 88, hash ACF4D89A
-  sample 201:
-    time = 2010000
-    flags = 1
-    data = length 86, hash 510FE048
-  sample 202:
-    time = 2020000
-    flags = 1
-    data = length 86, hash 64983E46
-  sample 203:
-    time = 2030000
-    flags = 1
-    data = length 86, hash CEA76A1E
-  sample 204:
-    time = 2040000
-    flags = 1
-    data = length 87, hash AADE498E
-  sample 205:
-    time = 2050000
-    flags = 1
-    data = length 127, hash 353A6D8C
-  sample 206:
-    time = 2060000
-    flags = 1
-    data = length 87, hash 29E18E62
-  sample 207:
-    time = 2070000
-    flags = 1
-    data = length 87, hash 2CF7B30F
-  sample 208:
-    time = 2080000
-    flags = 1
-    data = length 94, hash 758704C3
-  sample 209:
-    time = 2090000
-    flags = 1
-    data = length 88, hash C2153A4C
-  sample 210:
-    time = 2100000
-    flags = 1
-    data = length 86, hash A0A83DA5
-  sample 211:
-    time = 2110000
-    flags = 1
-    data = length 86, hash 41017D7F
-  sample 212:
-    time = 2120000
-    flags = 1
-    data = length 93, hash 686B0CA2
-  sample 213:
-    time = 2130000
-    flags = 1
-    data = length 86, hash 554D16CC
-  sample 214:
-    time = 2140000
-    flags = 1
-    data = length 88, hash 99D72771
-  sample 215:
-    time = 2150000
-    flags = 1
-    data = length 88, hash 7176DFBF
-  sample 216:
-    time = 2160000
-    flags = 1
-    data = length 86, hash BAA22669
-  sample 217:
-    time = 2170000
-    flags = 1
-    data = length 88, hash B00B0D3C
-  sample 218:
-    time = 2180000
-    flags = 1
-    data = length 89, hash 73FED83A
-  sample 219:
-    time = 2190000
-    flags = 1
-    data = length 86, hash 4A4138D3
-  sample 220:
-    time = 2200000
-    flags = 1
-    data = length 89, hash E0A860FF
-  sample 221:
-    time = 2210000
-    flags = 1
-    data = length 95, hash EE5A8AED
-  sample 222:
-    time = 2220000
-    flags = 1
-    data = length 92, hash 36DBD7FD
-  sample 223:
-    time = 2230000
-    flags = 1
-    data = length 88, hash EE47A7E4
-  sample 224:
-    time = 2240000
-    flags = 1
-    data = length 100, hash 2E1A603F
-  sample 225:
-    time = 2250000
-    flags = 1
-    data = length 89, hash 657ED4A3
-  sample 226:
-    time = 2260000
-    flags = 1
-    data = length 86, hash A833DC7B
-  sample 227:
-    time = 2270000
-    flags = 1
-    data = length 88, hash 81E80732
-  sample 228:
-    time = 2280000
-    flags = 1
-    data = length 91, hash FA256A0F
-  sample 229:
-    time = 2290000
-    flags = 1
-    data = length 88, hash A63A4DBA
-  sample 230:
-    time = 2300000
-    flags = 1
-    data = length 88, hash 67910A9F
-  sample 231:
-    time = 2310000
-    flags = 1
-    data = length 86, hash EB387DB6
-  sample 232:
-    time = 2320000
-    flags = 1
-    data = length 88, hash 5ACAAC2A
-  sample 233:
-    time = 2330000
-    flags = 1
-    data = length 86, hash 6ADF2E1F
-  sample 234:
-    time = 2340000
-    flags = 1
-    data = length 85, hash 9D064471
-  sample 235:
-    time = 2350000
-    flags = 1
-    data = length 87, hash F176C59
-  sample 236:
-    time = 2360000
-    flags = 1
-    data = length 89, hash 5CA40CE4
-  sample 237:
-    time = 2370000
-    flags = 1
-    data = length 88, hash 67B944FC
-  sample 238:
-    time = 2380000
-    flags = 1
-    data = length 86, hash B3A84EC8
-  sample 239:
-    time = 2390000
-    flags = 1
-    data = length 92, hash A6ACF94B
-  sample 240:
-    time = 2400000
-    flags = 1
-    data = length 88, hash CB0C9730
-  sample 241:
-    time = 2410000
-    flags = 1
-    data = length 88, hash C79FE804
-  sample 242:
-    time = 2420000
-    flags = 1
-    data = length 88, hash A74C7F0A
-  sample 243:
-    time = 2430000
-    flags = 1
-    data = length 91, hash 55F6F0A5
-  sample 244:
-    time = 2440000
-    flags = 1
-    data = length 93, hash 330F33E7
-  sample 245:
-    time = 2450000
-    flags = 1
-    data = length 89, hash 614AFBA0
-  sample 246:
-    time = 2460000
-    flags = 1
-    data = length 87, hash 3CE4652D
-  sample 247:
-    time = 2470000
-    flags = 1
-    data = length 87, hash 4EFD5467
-  sample 248:
-    time = 2480000
-    flags = 1
-    data = length 86, hash D81B3EB8
-  sample 249:
-    time = 2490000
-    flags = 1
-    data = length 88, hash 96CB6871
-  sample 250:
-    time = 2500000
-    flags = 1
-    data = length 88, hash E9DF2786
-  sample 251:
-    time = 2510000
-    flags = 1
-    data = length 89, hash 2CA33D96
-  sample 252:
-    time = 2520000
-    flags = 1
-    data = length 90, hash 96BDE594
-  sample 253:
-    time = 2530000
-    flags = 1
-    data = length 87, hash C261493C
-  sample 254:
-    time = 2540000
-    flags = 1
-    data = length 86, hash D037318E
-  sample 255:
-    time = 2550000
-    flags = 1
-    data = length 88, hash BC15BC88
-  sample 256:
-    time = 2560000
-    flags = 1
-    data = length 91, hash A8361A51
-  sample 257:
-    time = 2570000
-    flags = 1
-    data = length 87, hash 4AFDB5F2
-  sample 258:
-    time = 2580000
-    flags = 1
-    data = length 87, hash 6447F8CB
-  sample 259:
-    time = 2590000
-    flags = 1
-    data = length 89, hash 48305229
-  sample 260:
-    time = 2600000
-    flags = 1
-    data = length 87, hash 8741D9E7
-  sample 261:
-    time = 2610000
-    flags = 1
-    data = length 120, hash 761F020C
-  sample 262:
-    time = 2620000
-    flags = 1
-    data = length 139, hash AECE2E57
-  sample 263:
-    time = 2630000
-    flags = 1
-    data = length 166, hash 6288797A
-  sample 264:
-    time = 2640000
-    flags = 1
-    data = length 144, hash 437821A0
-  sample 265:
-    time = 2650000
-    flags = 1
-    data = length 113, hash FCCBEDF1
-  sample 266:
-    time = 2660000
-    flags = 1
-    data = length 108, hash C4040614
-  sample 267:
-    time = 2670000
-    flags = 1
-    data = length 125, hash E29064C2
-  sample 268:
-    time = 2680000
-    flags = 1
-    data = length 126, hash D42D24FF
-  sample 269:
-    time = 2690000
-    flags = 1
-    data = length 122, hash 30AF267D
-  sample 270:
-    time = 2700000
-    flags = 1
-    data = length 122, hash 45CEC1FB
-  sample 271:
-    time = 2710000
-    flags = 1
-    data = length 134, hash 59143FE2
-  sample 272:
-    time = 2720000
-    flags = 1
-    data = length 134, hash BD52A84
-  sample 273:
-    time = 2730000
-    flags = 1
-    data = length 120, hash 745C3714
-  sample 274:
-    time = 2740000
-    flags = 1
-    data = length 126, hash 505E117B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac.ogg b/library/core/src/androidTest/assets/ogg/bear_flac.ogg
deleted file mode 100644
index 68e8091ed0..0000000000
Binary files a/library/core/src/androidTest/assets/ogg/bear_flac.ogg and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.0.dump b/library/core/src/androidTest/assets/ogg/bear_flac.ogg.0.dump
deleted file mode 100644
index 5ba8cc29ae..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.0.dump
+++ /dev/null
@@ -1,162 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8457
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 33
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 5030, hash D2B60530
-  sample 1:
-    time = 85333
-    flags = 1
-    data = length 5066, hash 4C932A54
-  sample 2:
-    time = 170666
-    flags = 1
-    data = length 5112, hash 7E5A7B61
-  sample 3:
-    time = 256000
-    flags = 1
-    data = length 5044, hash 7EF93F13
-  sample 4:
-    time = 341333
-    flags = 1
-    data = length 4943, hash DE7E27F8
-  sample 5:
-    time = 426666
-    flags = 1
-    data = length 5121, hash 6D0D0B40
-  sample 6:
-    time = 512000
-    flags = 1
-    data = length 5068, hash 9924644F
-  sample 7:
-    time = 597333
-    flags = 1
-    data = length 5143, hash 6C34F0CE
-  sample 8:
-    time = 682666
-    flags = 1
-    data = length 5109, hash E3B7BEFB
-  sample 9:
-    time = 768000
-    flags = 1
-    data = length 5129, hash 44111D9B
-  sample 10:
-    time = 853333
-    flags = 1
-    data = length 5031, hash 9D55EA53
-  sample 11:
-    time = 938666
-    flags = 1
-    data = length 5119, hash E1CB9BA6
-  sample 12:
-    time = 1024000
-    flags = 1
-    data = length 5360, hash 17265C5D
-  sample 13:
-    time = 1109333
-    flags = 1
-    data = length 5340, hash A90FDDF1
-  sample 14:
-    time = 1194666
-    flags = 1
-    data = length 5162, hash 31F65AD5
-  sample 15:
-    time = 1280000
-    flags = 1
-    data = length 5168, hash F2394F2D
-  sample 16:
-    time = 1365333
-    flags = 1
-    data = length 5776, hash 58437AB3
-  sample 17:
-    time = 1450666
-    flags = 1
-    data = length 5394, hash EBAB20A8
-  sample 18:
-    time = 1536000
-    flags = 1
-    data = length 5168, hash BF37C7A5
-  sample 19:
-    time = 1621333
-    flags = 1
-    data = length 5324, hash 59546B7B
-  sample 20:
-    time = 1706666
-    flags = 1
-    data = length 5172, hash 6036EF0B
-  sample 21:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 22:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 23:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 24:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 25:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 26:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 27:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 28:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 29:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 30:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 31:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 32:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.1.dump b/library/core/src/androidTest/assets/ogg/bear_flac.ogg.1.dump
deleted file mode 100644
index f698fd28cf..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.1.dump
+++ /dev/null
@@ -1,122 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8457
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 23
-  sample 0:
-    time = 853333
-    flags = 1
-    data = length 5031, hash 9D55EA53
-  sample 1:
-    time = 938666
-    flags = 1
-    data = length 5119, hash E1CB9BA6
-  sample 2:
-    time = 1024000
-    flags = 1
-    data = length 5360, hash 17265C5D
-  sample 3:
-    time = 1109333
-    flags = 1
-    data = length 5340, hash A90FDDF1
-  sample 4:
-    time = 1194666
-    flags = 1
-    data = length 5162, hash 31F65AD5
-  sample 5:
-    time = 1280000
-    flags = 1
-    data = length 5168, hash F2394F2D
-  sample 6:
-    time = 1365333
-    flags = 1
-    data = length 5776, hash 58437AB3
-  sample 7:
-    time = 1450666
-    flags = 1
-    data = length 5394, hash EBAB20A8
-  sample 8:
-    time = 1536000
-    flags = 1
-    data = length 5168, hash BF37C7A5
-  sample 9:
-    time = 1621333
-    flags = 1
-    data = length 5324, hash 59546B7B
-  sample 10:
-    time = 1706666
-    flags = 1
-    data = length 5172, hash 6036EF0B
-  sample 11:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 12:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 13:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 14:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 15:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 16:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 17:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 18:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 19:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 20:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 21:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 22:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.2.dump b/library/core/src/androidTest/assets/ogg/bear_flac.ogg.2.dump
deleted file mode 100644
index 8d803d0bac..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.2.dump
+++ /dev/null
@@ -1,78 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8457
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 12
-  sample 0:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 1:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 2:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 3:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 4:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 5:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 6:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 7:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 8:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 9:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 10:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 11:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.3.dump b/library/core/src/androidTest/assets/ogg/bear_flac.ogg.3.dump
deleted file mode 100644
index 09f6267270..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.3.dump
+++ /dev/null
@@ -1,34 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8457
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 1
-  sample 0:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.unklen.dump b/library/core/src/androidTest/assets/ogg/bear_flac.ogg.unklen.dump
deleted file mode 100644
index 5ba8cc29ae..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac.ogg.unklen.dump
+++ /dev/null
@@ -1,162 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8457
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 33
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 5030, hash D2B60530
-  sample 1:
-    time = 85333
-    flags = 1
-    data = length 5066, hash 4C932A54
-  sample 2:
-    time = 170666
-    flags = 1
-    data = length 5112, hash 7E5A7B61
-  sample 3:
-    time = 256000
-    flags = 1
-    data = length 5044, hash 7EF93F13
-  sample 4:
-    time = 341333
-    flags = 1
-    data = length 4943, hash DE7E27F8
-  sample 5:
-    time = 426666
-    flags = 1
-    data = length 5121, hash 6D0D0B40
-  sample 6:
-    time = 512000
-    flags = 1
-    data = length 5068, hash 9924644F
-  sample 7:
-    time = 597333
-    flags = 1
-    data = length 5143, hash 6C34F0CE
-  sample 8:
-    time = 682666
-    flags = 1
-    data = length 5109, hash E3B7BEFB
-  sample 9:
-    time = 768000
-    flags = 1
-    data = length 5129, hash 44111D9B
-  sample 10:
-    time = 853333
-    flags = 1
-    data = length 5031, hash 9D55EA53
-  sample 11:
-    time = 938666
-    flags = 1
-    data = length 5119, hash E1CB9BA6
-  sample 12:
-    time = 1024000
-    flags = 1
-    data = length 5360, hash 17265C5D
-  sample 13:
-    time = 1109333
-    flags = 1
-    data = length 5340, hash A90FDDF1
-  sample 14:
-    time = 1194666
-    flags = 1
-    data = length 5162, hash 31F65AD5
-  sample 15:
-    time = 1280000
-    flags = 1
-    data = length 5168, hash F2394F2D
-  sample 16:
-    time = 1365333
-    flags = 1
-    data = length 5776, hash 58437AB3
-  sample 17:
-    time = 1450666
-    flags = 1
-    data = length 5394, hash EBAB20A8
-  sample 18:
-    time = 1536000
-    flags = 1
-    data = length 5168, hash BF37C7A5
-  sample 19:
-    time = 1621333
-    flags = 1
-    data = length 5324, hash 59546B7B
-  sample 20:
-    time = 1706666
-    flags = 1
-    data = length 5172, hash 6036EF0B
-  sample 21:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 22:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 23:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 24:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 25:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 26:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 27:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 28:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 29:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 30:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 31:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 32:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg b/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg
deleted file mode 100644
index aeeccbe990..0000000000
Binary files a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.0.dump b/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.0.dump
deleted file mode 100644
index 73e537f8c8..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.0.dump
+++ /dev/null
@@ -1,162 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8407
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 33
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 5030, hash D2B60530
-  sample 1:
-    time = 85333
-    flags = 1
-    data = length 5066, hash 4C932A54
-  sample 2:
-    time = 170666
-    flags = 1
-    data = length 5112, hash 7E5A7B61
-  sample 3:
-    time = 256000
-    flags = 1
-    data = length 5044, hash 7EF93F13
-  sample 4:
-    time = 341333
-    flags = 1
-    data = length 4943, hash DE7E27F8
-  sample 5:
-    time = 426666
-    flags = 1
-    data = length 5121, hash 6D0D0B40
-  sample 6:
-    time = 512000
-    flags = 1
-    data = length 5068, hash 9924644F
-  sample 7:
-    time = 597333
-    flags = 1
-    data = length 5143, hash 6C34F0CE
-  sample 8:
-    time = 682666
-    flags = 1
-    data = length 5109, hash E3B7BEFB
-  sample 9:
-    time = 768000
-    flags = 1
-    data = length 5129, hash 44111D9B
-  sample 10:
-    time = 853333
-    flags = 1
-    data = length 5031, hash 9D55EA53
-  sample 11:
-    time = 938666
-    flags = 1
-    data = length 5119, hash E1CB9BA6
-  sample 12:
-    time = 1024000
-    flags = 1
-    data = length 5360, hash 17265C5D
-  sample 13:
-    time = 1109333
-    flags = 1
-    data = length 5340, hash A90FDDF1
-  sample 14:
-    time = 1194666
-    flags = 1
-    data = length 5162, hash 31F65AD5
-  sample 15:
-    time = 1280000
-    flags = 1
-    data = length 5168, hash F2394F2D
-  sample 16:
-    time = 1365333
-    flags = 1
-    data = length 5776, hash 58437AB3
-  sample 17:
-    time = 1450666
-    flags = 1
-    data = length 5394, hash EBAB20A8
-  sample 18:
-    time = 1536000
-    flags = 1
-    data = length 5168, hash BF37C7A5
-  sample 19:
-    time = 1621333
-    flags = 1
-    data = length 5324, hash 59546B7B
-  sample 20:
-    time = 1706666
-    flags = 1
-    data = length 5172, hash 6036EF0B
-  sample 21:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 22:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 23:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 24:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 25:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 26:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 27:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 28:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 29:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 30:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 31:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 32:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.1.dump b/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.1.dump
deleted file mode 100644
index 3b7dc3fd1e..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.1.dump
+++ /dev/null
@@ -1,122 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8407
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 23
-  sample 0:
-    time = 853333
-    flags = 1
-    data = length 5031, hash 9D55EA53
-  sample 1:
-    time = 938666
-    flags = 1
-    data = length 5119, hash E1CB9BA6
-  sample 2:
-    time = 1024000
-    flags = 1
-    data = length 5360, hash 17265C5D
-  sample 3:
-    time = 1109333
-    flags = 1
-    data = length 5340, hash A90FDDF1
-  sample 4:
-    time = 1194666
-    flags = 1
-    data = length 5162, hash 31F65AD5
-  sample 5:
-    time = 1280000
-    flags = 1
-    data = length 5168, hash F2394F2D
-  sample 6:
-    time = 1365333
-    flags = 1
-    data = length 5776, hash 58437AB3
-  sample 7:
-    time = 1450666
-    flags = 1
-    data = length 5394, hash EBAB20A8
-  sample 8:
-    time = 1536000
-    flags = 1
-    data = length 5168, hash BF37C7A5
-  sample 9:
-    time = 1621333
-    flags = 1
-    data = length 5324, hash 59546B7B
-  sample 10:
-    time = 1706666
-    flags = 1
-    data = length 5172, hash 6036EF0B
-  sample 11:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 12:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 13:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 14:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 15:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 16:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 17:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 18:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 19:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 20:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 21:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 22:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.2.dump b/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.2.dump
deleted file mode 100644
index b6a6741fcc..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.2.dump
+++ /dev/null
@@ -1,78 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8407
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 12
-  sample 0:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 1:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 2:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 3:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 4:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 5:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 6:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 7:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 8:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 9:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 10:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 11:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.3.dump b/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.3.dump
deleted file mode 100644
index 738002f7ef..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.3.dump
+++ /dev/null
@@ -1,34 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 8407
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 1
-  sample 0:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.unklen.dump b/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.unklen.dump
deleted file mode 100644
index a237fd0dfc..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_flac_noseektable.ogg.unklen.dump
+++ /dev/null
@@ -1,162 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/flac
-    maxInputSize = 768000
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 42, hash 83F6895
-  sample count = 33
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 5030, hash D2B60530
-  sample 1:
-    time = 85333
-    flags = 1
-    data = length 5066, hash 4C932A54
-  sample 2:
-    time = 170666
-    flags = 1
-    data = length 5112, hash 7E5A7B61
-  sample 3:
-    time = 256000
-    flags = 1
-    data = length 5044, hash 7EF93F13
-  sample 4:
-    time = 341333
-    flags = 1
-    data = length 4943, hash DE7E27F8
-  sample 5:
-    time = 426666
-    flags = 1
-    data = length 5121, hash 6D0D0B40
-  sample 6:
-    time = 512000
-    flags = 1
-    data = length 5068, hash 9924644F
-  sample 7:
-    time = 597333
-    flags = 1
-    data = length 5143, hash 6C34F0CE
-  sample 8:
-    time = 682666
-    flags = 1
-    data = length 5109, hash E3B7BEFB
-  sample 9:
-    time = 768000
-    flags = 1
-    data = length 5129, hash 44111D9B
-  sample 10:
-    time = 853333
-    flags = 1
-    data = length 5031, hash 9D55EA53
-  sample 11:
-    time = 938666
-    flags = 1
-    data = length 5119, hash E1CB9BA6
-  sample 12:
-    time = 1024000
-    flags = 1
-    data = length 5360, hash 17265C5D
-  sample 13:
-    time = 1109333
-    flags = 1
-    data = length 5340, hash A90FDDF1
-  sample 14:
-    time = 1194666
-    flags = 1
-    data = length 5162, hash 31F65AD5
-  sample 15:
-    time = 1280000
-    flags = 1
-    data = length 5168, hash F2394F2D
-  sample 16:
-    time = 1365333
-    flags = 1
-    data = length 5776, hash 58437AB3
-  sample 17:
-    time = 1450666
-    flags = 1
-    data = length 5394, hash EBAB20A8
-  sample 18:
-    time = 1536000
-    flags = 1
-    data = length 5168, hash BF37C7A5
-  sample 19:
-    time = 1621333
-    flags = 1
-    data = length 5324, hash 59546B7B
-  sample 20:
-    time = 1706666
-    flags = 1
-    data = length 5172, hash 6036EF0B
-  sample 21:
-    time = 1792000
-    flags = 1
-    data = length 5102, hash 5A131071
-  sample 22:
-    time = 1877333
-    flags = 1
-    data = length 5111, hash 3D9EBB3B
-  sample 23:
-    time = 1962666
-    flags = 1
-    data = length 5113, hash 61101D4F
-  sample 24:
-    time = 2048000
-    flags = 1
-    data = length 5229, hash D2E55742
-  sample 25:
-    time = 2133333
-    flags = 1
-    data = length 5162, hash 7F2E97FA
-  sample 26:
-    time = 2218666
-    flags = 1
-    data = length 5255, hash D92A782
-  sample 27:
-    time = 2304000
-    flags = 1
-    data = length 5196, hash 98FE5138
-  sample 28:
-    time = 2389333
-    flags = 1
-    data = length 5214, hash 3D35C38C
-  sample 29:
-    time = 2474666
-    flags = 1
-    data = length 5211, hash 7E25420F
-  sample 30:
-    time = 2560000
-    flags = 1
-    data = length 5230, hash 2AD96FBC
-  sample 31:
-    time = 2645333
-    flags = 1
-    data = length 3384, hash 938BCDD9
-  sample 32:
-    time = 2730666
-    flags = 1
-    data = length 445, hash A388E3D6
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg b/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg
deleted file mode 100644
index 106402b871..0000000000
Binary files a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.0.dump b/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.0.dump
deleted file mode 100644
index 8e2c5125a3..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.0.dump
+++ /dev/null
@@ -1,751 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 3995
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 112000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/vorbis
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash 9A8FF207
-      data = length 3832, hash 8A406249
-  sample count = 180
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 49, hash 2FFF94F0
-  sample 1:
-    time = 0
-    flags = 1
-    data = length 44, hash 3946418A
-  sample 2:
-    time = 2666
-    flags = 1
-    data = length 55, hash 2A0B878E
-  sample 3:
-    time = 5333
-    flags = 1
-    data = length 53, hash CC3B6879
-  sample 4:
-    time = 8000
-    flags = 1
-    data = length 215, hash 106AE950
-  sample 5:
-    time = 20000
-    flags = 1
-    data = length 192, hash 2B219F53
-  sample 6:
-    time = 41333
-    flags = 1
-    data = length 197, hash FBC39422
-  sample 7:
-    time = 62666
-    flags = 1
-    data = length 209, hash 386E8979
-  sample 8:
-    time = 84000
-    flags = 1
-    data = length 42, hash E81162C1
-  sample 9:
-    time = 96000
-    flags = 1
-    data = length 41, hash F15BEE36
-  sample 10:
-    time = 98666
-    flags = 1
-    data = length 42, hash D67EB19
-  sample 11:
-    time = 101333
-    flags = 1
-    data = length 42, hash F4DE4792
-  sample 12:
-    time = 104000
-    flags = 1
-    data = length 53, hash 80F66AC3
-  sample 13:
-    time = 106666
-    flags = 1
-    data = length 56, hash DCB9DFC4
-  sample 14:
-    time = 109333
-    flags = 1
-    data = length 55, hash 4E0C4E9D
-  sample 15:
-    time = 112000
-    flags = 1
-    data = length 203, hash 176B6862
-  sample 16:
-    time = 124000
-    flags = 1
-    data = length 193, hash AB13CB10
-  sample 17:
-    time = 145333
-    flags = 1
-    data = length 203, hash DE63DE9F
-  sample 18:
-    time = 166666
-    flags = 1
-    data = length 194, hash 4A9508A2
-  sample 19:
-    time = 188000
-    flags = 1
-    data = length 210, hash 196899B3
-  sample 20:
-    time = 209333
-    flags = 1
-    data = length 195, hash B68407F1
-  sample 21:
-    time = 230666
-    flags = 1
-    data = length 193, hash A1FA86E3
-  sample 22:
-    time = 252000
-    flags = 1
-    data = length 194, hash 5C0B9343
-  sample 23:
-    time = 273333
-    flags = 1
-    data = length 198, hash 789914B2
-  sample 24:
-    time = 294666
-    flags = 1
-    data = length 183, hash 1B82D11F
-  sample 25:
-    time = 316000
-    flags = 1
-    data = length 199, hash D5B848F4
-  sample 26:
-    time = 337333
-    flags = 1
-    data = length 192, hash B34427EA
-  sample 27:
-    time = 358666
-    flags = 1
-    data = length 199, hash C2599BB5
-  sample 28:
-    time = 380000
-    flags = 1
-    data = length 195, hash BFD83194
-  sample 29:
-    time = 401333
-    flags = 1
-    data = length 199, hash C9A7F7CA
-  sample 30:
-    time = 422666
-    flags = 1
-    data = length 44, hash 5D76EAD6
-  sample 31:
-    time = 434666
-    flags = 1
-    data = length 43, hash 8619C423
-  sample 32:
-    time = 437333
-    flags = 1
-    data = length 43, hash E490BBE
-  sample 33:
-    time = 440000
-    flags = 1
-    data = length 53, hash 8A557CAE
-  sample 34:
-    time = 442666
-    flags = 1
-    data = length 56, hash 81007BBA
-  sample 35:
-    time = 445333
-    flags = 1
-    data = length 56, hash 4E4DD67F
-  sample 36:
-    time = 448000
-    flags = 1
-    data = length 222, hash 414188AB
-  sample 37:
-    time = 460000
-    flags = 1
-    data = length 202, hash 67A07D30
-  sample 38:
-    time = 481333
-    flags = 1
-    data = length 200, hash E357D853
-  sample 39:
-    time = 502666
-    flags = 1
-    data = length 203, hash 4653DC90
-  sample 40:
-    time = 524000
-    flags = 1
-    data = length 192, hash A65E6C09
-  sample 41:
-    time = 545333
-    flags = 1
-    data = length 202, hash FBEAC508
-  sample 42:
-    time = 566666
-    flags = 1
-    data = length 202, hash E9B7B59F
-  sample 43:
-    time = 588000
-    flags = 1
-    data = length 204, hash E24AA78E
-  sample 44:
-    time = 609333
-    flags = 1
-    data = length 41, hash 3FBC5216
-  sample 45:
-    time = 621333
-    flags = 1
-    data = length 47, hash 153FBC55
-  sample 46:
-    time = 624000
-    flags = 1
-    data = length 42, hash 2B493D6C
-  sample 47:
-    time = 626666
-    flags = 1
-    data = length 42, hash 8303BEE3
-  sample 48:
-    time = 629333
-    flags = 1
-    data = length 62, hash 71AEE50B
-  sample 49:
-    time = 632000
-    flags = 1
-    data = length 54, hash 52F61908
-  sample 50:
-    time = 634666
-    flags = 1
-    data = length 45, hash 7BD3E3A1
-  sample 51:
-    time = 637333
-    flags = 1
-    data = length 41, hash E0F65472
-  sample 52:
-    time = 640000
-    flags = 1
-    data = length 45, hash 41838675
-  sample 53:
-    time = 642666
-    flags = 1
-    data = length 44, hash FCBC2147
-  sample 54:
-    time = 645333
-    flags = 1
-    data = length 45, hash 1A5987E3
-  sample 55:
-    time = 648000
-    flags = 1
-    data = length 43, hash 99074864
-  sample 56:
-    time = 650666
-    flags = 1
-    data = length 57, hash D4A9B60A
-  sample 57:
-    time = 653333
-    flags = 1
-    data = length 52, hash 302129DA
-  sample 58:
-    time = 656000
-    flags = 1
-    data = length 57, hash D8DD99C0
-  sample 59:
-    time = 658666
-    flags = 1
-    data = length 206, hash F4B9EF26
-  sample 60:
-    time = 670666
-    flags = 1
-    data = length 197, hash 7B8ACC8A
-  sample 61:
-    time = 692000
-    flags = 1
-    data = length 186, hash 161027CB
-  sample 62:
-    time = 713333
-    flags = 1
-    data = length 186, hash 1D6871B6
-  sample 63:
-    time = 734666
-    flags = 1
-    data = length 201, hash 536E9FDB
-  sample 64:
-    time = 756000
-    flags = 1
-    data = length 192, hash D38EFAC5
-  sample 65:
-    time = 777333
-    flags = 1
-    data = length 194, hash 4B394EF3
-  sample 66:
-    time = 798666
-    flags = 1
-    data = length 206, hash 1B31BA99
-  sample 67:
-    time = 820000
-    flags = 1
-    data = length 212, hash AD061F43
-  sample 68:
-    time = 841333
-    flags = 1
-    data = length 180, hash 6D1F7481
-  sample 69:
-    time = 862666
-    flags = 1
-    data = length 195, hash D80B21F
-  sample 70:
-    time = 884000
-    flags = 1
-    data = length 186, hash D367882
-  sample 71:
-    time = 905333
-    flags = 1
-    data = length 195, hash 2722159A
-  sample 72:
-    time = 926666
-    flags = 1
-    data = length 199, hash 10CEE97A
-  sample 73:
-    time = 948000
-    flags = 1
-    data = length 191, hash 2CF9FB3F
-  sample 74:
-    time = 969333
-    flags = 1
-    data = length 197, hash A725DA0
-  sample 75:
-    time = 990666
-    flags = 1
-    data = length 211, hash D4E5DB9E
-  sample 76:
-    time = 1012000
-    flags = 1
-    data = length 189, hash 1A90F496
-  sample 77:
-    time = 1033333
-    flags = 1
-    data = length 187, hash 44DB2689
-  sample 78:
-    time = 1054666
-    flags = 1
-    data = length 197, hash 6D3E5117
-  sample 79:
-    time = 1076000
-    flags = 1
-    data = length 208, hash 5B57B288
-  sample 80:
-    time = 1097333
-    flags = 1
-    data = length 198, hash D5FC05
-  sample 81:
-    time = 1118666
-    flags = 1
-    data = length 192, hash 350BBA45
-  sample 82:
-    time = 1140000
-    flags = 1
-    data = length 195, hash 5F96F2A8
-  sample 83:
-    time = 1161333
-    flags = 1
-    data = length 202, hash 61D7CC33
-  sample 84:
-    time = 1182666
-    flags = 1
-    data = length 202, hash 49D335F2
-  sample 85:
-    time = 1204000
-    flags = 1
-    data = length 192, hash 2FE9CB1A
-  sample 86:
-    time = 1225333
-    flags = 1
-    data = length 201, hash BF0763B2
-  sample 87:
-    time = 1246666
-    flags = 1
-    data = length 184, hash AD047421
-  sample 88:
-    time = 1268000
-    flags = 1
-    data = length 196, hash F9088F14
-  sample 89:
-    time = 1289333
-    flags = 1
-    data = length 190, hash AC6D38FD
-  sample 90:
-    time = 1310666
-    flags = 1
-    data = length 195, hash 8D1A66D2
-  sample 91:
-    time = 1332000
-    flags = 1
-    data = length 197, hash B46BFB6B
-  sample 92:
-    time = 1353333
-    flags = 1
-    data = length 195, hash D9761F23
-  sample 93:
-    time = 1374666
-    flags = 1
-    data = length 204, hash 3391B617
-  sample 94:
-    time = 1396000
-    flags = 1
-    data = length 42, hash 33A1FB52
-  sample 95:
-    time = 1408000
-    flags = 1
-    data = length 44, hash 408B146E
-  sample 96:
-    time = 1410666
-    flags = 1
-    data = length 44, hash 171C7E0D
-  sample 97:
-    time = 1413333
-    flags = 1
-    data = length 54, hash 6307E16C
-  sample 98:
-    time = 1416000
-    flags = 1
-    data = length 53, hash 4A319572
-  sample 99:
-    time = 1418666
-    flags = 1
-    data = length 215, hash BA9C445C
-  sample 100:
-    time = 1430666
-    flags = 1
-    data = length 201, hash 3120D234
-  sample 101:
-    time = 1452000
-    flags = 1
-    data = length 187, hash DB44993C
-  sample 102:
-    time = 1473333
-    flags = 1
-    data = length 196, hash CF2002D7
-  sample 103:
-    time = 1494666
-    flags = 1
-    data = length 185, hash E03B5D7
-  sample 104:
-    time = 1516000
-    flags = 1
-    data = length 187, hash DA399A2C
-  sample 105:
-    time = 1537333
-    flags = 1
-    data = length 191, hash 292AA0DB
-  sample 106:
-    time = 1558666
-    flags = 1
-    data = length 201, hash 221910E0
-  sample 107:
-    time = 1580000
-    flags = 1
-    data = length 194, hash F4ED7821
-  sample 108:
-    time = 1601333
-    flags = 1
-    data = length 43, hash FDDA515E
-  sample 109:
-    time = 1613333
-    flags = 1
-    data = length 42, hash F3571C0A
-  sample 110:
-    time = 1616000
-    flags = 1
-    data = length 38, hash 39F910B3
-  sample 111:
-    time = 1618666
-    flags = 1
-    data = length 41, hash 2D189531
-  sample 112:
-    time = 1621333
-    flags = 1
-    data = length 43, hash 1F7574DB
-  sample 113:
-    time = 1624000
-    flags = 1
-    data = length 43, hash 644D15E5
-  sample 114:
-    time = 1626666
-    flags = 1
-    data = length 49, hash E8A0878
-  sample 115:
-    time = 1629333
-    flags = 1
-    data = length 55, hash DFF2046D
-  sample 116:
-    time = 1632000
-    flags = 1
-    data = length 49, hash 9FB8A23
-  sample 117:
-    time = 1634666
-    flags = 1
-    data = length 41, hash E3E15E3B
-  sample 118:
-    time = 1637333
-    flags = 1
-    data = length 42, hash E5D17A32
-  sample 119:
-    time = 1640000
-    flags = 1
-    data = length 42, hash F308B653
-  sample 120:
-    time = 1642666
-    flags = 1
-    data = length 55, hash BB750D76
-  sample 121:
-    time = 1645333
-    flags = 1
-    data = length 51, hash 96772ABF
-  sample 122:
-    time = 1648000
-    flags = 1
-    data = length 197, hash E4524346
-  sample 123:
-    time = 1660000
-    flags = 1
-    data = length 188, hash AC3E1BB5
-  sample 124:
-    time = 1681333
-    flags = 1
-    data = length 195, hash F56DB8A5
-  sample 125:
-    time = 1702666
-    flags = 1
-    data = length 198, hash C8970FF7
-  sample 126:
-    time = 1724000
-    flags = 1
-    data = length 202, hash AF425C68
-  sample 127:
-    time = 1745333
-    flags = 1
-    data = length 196, hash 4215D839
-  sample 128:
-    time = 1766666
-    flags = 1
-    data = length 204, hash DB9BE8E3
-  sample 129:
-    time = 1788000
-    flags = 1
-    data = length 206, hash E5B20AB8
-  sample 130:
-    time = 1809333
-    flags = 1
-    data = length 209, hash D7F47B95
-  sample 131:
-    time = 1830666
-    flags = 1
-    data = length 193, hash FB54FB05
-  sample 132:
-    time = 1852000
-    flags = 1
-    data = length 199, hash D99C3106
-  sample 133:
-    time = 1873333
-    flags = 1
-    data = length 206, hash 253885B9
-  sample 134:
-    time = 1894666
-    flags = 1
-    data = length 191, hash FBDD8162
-  sample 135:
-    time = 1916000
-    flags = 1
-    data = length 183, hash 7290332F
-  sample 136:
-    time = 1937333
-    flags = 1
-    data = length 189, hash 1A9DC3DE
-  sample 137:
-    time = 1958666
-    flags = 1
-    data = length 201, hash 5D936764
-  sample 138:
-    time = 1980000
-    flags = 1
-    data = length 193, hash 6B03E75E
-  sample 139:
-    time = 2001333
-    flags = 1
-    data = length 199, hash 8A21BA83
-  sample 140:
-    time = 2022666
-    flags = 1
-    data = length 41, hash E6362210
-  sample 141:
-    time = 2034666
-    flags = 1
-    data = length 43, hash 36A57B44
-  sample 142:
-    time = 2037333
-    flags = 1
-    data = length 43, hash E51797D5
-  sample 143:
-    time = 2040000
-    flags = 1
-    data = length 43, hash 1F336C72
-  sample 144:
-    time = 2042666
-    flags = 1
-    data = length 42, hash 201AD367
-  sample 145:
-    time = 2045333
-    flags = 1
-    data = length 50, hash 606CCD6
-  sample 146:
-    time = 2048000
-    flags = 1
-    data = length 56, hash B15EBD7A
-  sample 147:
-    time = 2050666
-    flags = 1
-    data = length 212, hash 273B8D22
-  sample 148:
-    time = 2062666
-    flags = 1
-    data = length 194, hash 44F9CE1
-  sample 149:
-    time = 2084000
-    flags = 1
-    data = length 195, hash EDF9EBA1
-  sample 150:
-    time = 2105333
-    flags = 1
-    data = length 194, hash CE9F2D26
-  sample 151:
-    time = 2126666
-    flags = 1
-    data = length 192, hash 204F8A23
-  sample 152:
-    time = 2148000
-    flags = 1
-    data = length 206, hash DFA57E67
-  sample 153:
-    time = 2169333
-    flags = 1
-    data = length 196, hash 3CF084AB
-  sample 154:
-    time = 2190666
-    flags = 1
-    data = length 202, hash 2AF75C08
-  sample 155:
-    time = 2212000
-    flags = 1
-    data = length 203, hash 748EAF7
-  sample 156:
-    time = 2233333
-    flags = 1
-    data = length 205, hash ED82379D
-  sample 157:
-    time = 2254666
-    flags = 1
-    data = length 193, hash 61F26F22
-  sample 158:
-    time = 2276000
-    flags = 1
-    data = length 189, hash 85EF1D20
-  sample 159:
-    time = 2297333
-    flags = 1
-    data = length 187, hash 25E41FBF
-  sample 160:
-    time = 2318666
-    flags = 1
-    data = length 199, hash F365808
-  sample 161:
-    time = 2340000
-    flags = 1
-    data = length 197, hash 94205329
-  sample 162:
-    time = 2361333
-    flags = 1
-    data = length 201, hash FA2B2055
-  sample 163:
-    time = 2382666
-    flags = 1
-    data = length 194, hash AF95381F
-  sample 164:
-    time = 2404000
-    flags = 1
-    data = length 201, hash 923D3534
-  sample 165:
-    time = 2425333
-    flags = 1
-    data = length 198, hash 35F84C2E
-  sample 166:
-    time = 2446666
-    flags = 1
-    data = length 204, hash 6642CA40
-  sample 167:
-    time = 2468000
-    flags = 1
-    data = length 183, hash 3E2DC6BE
-  sample 168:
-    time = 2489333
-    flags = 1
-    data = length 197, hash B1E458CE
-  sample 169:
-    time = 2510666
-    flags = 1
-    data = length 193, hash E9218C84
-  sample 170:
-    time = 2532000
-    flags = 1
-    data = length 192, hash FEF08D4B
-  sample 171:
-    time = 2553333
-    flags = 1
-    data = length 201, hash FC411147
-  sample 172:
-    time = 2574666
-    flags = 1
-    data = length 218, hash 86893464
-  sample 173:
-    time = 2596000
-    flags = 1
-    data = length 226, hash 31C5320
-  sample 174:
-    time = 2617333
-    flags = 1
-    data = length 233, hash 9432BEE5
-  sample 175:
-    time = 2638666
-    flags = 1
-    data = length 213, hash B3FCC53E
-  sample 176:
-    time = 2660000
-    flags = 1
-    data = length 204, hash D70DD5A2
-  sample 177:
-    time = 2681333
-    flags = 1
-    data = length 212, hash A4EF1B69
-  sample 178:
-    time = 2702666
-    flags = 1
-    data = length 203, hash 8B0748B5
-  sample 179:
-    time = 2724000
-    flags = 1
-    data = length 149, hash E455335B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.1.dump b/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.1.dump
deleted file mode 100644
index aa25303ac3..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.1.dump
+++ /dev/null
@@ -1,467 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 3995
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 112000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/vorbis
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash 9A8FF207
-      data = length 3832, hash 8A406249
-  sample count = 109
-  sample 0:
-    time = 896000
-    flags = 1
-    data = length 195, hash 2722159A
-  sample 1:
-    time = 917333
-    flags = 1
-    data = length 199, hash 10CEE97A
-  sample 2:
-    time = 938666
-    flags = 1
-    data = length 191, hash 2CF9FB3F
-  sample 3:
-    time = 960000
-    flags = 1
-    data = length 197, hash A725DA0
-  sample 4:
-    time = 981333
-    flags = 1
-    data = length 211, hash D4E5DB9E
-  sample 5:
-    time = 1002666
-    flags = 1
-    data = length 189, hash 1A90F496
-  sample 6:
-    time = 1024000
-    flags = 1
-    data = length 187, hash 44DB2689
-  sample 7:
-    time = 1045333
-    flags = 1
-    data = length 197, hash 6D3E5117
-  sample 8:
-    time = 1066666
-    flags = 1
-    data = length 208, hash 5B57B288
-  sample 9:
-    time = 1088000
-    flags = 1
-    data = length 198, hash D5FC05
-  sample 10:
-    time = 1109333
-    flags = 1
-    data = length 192, hash 350BBA45
-  sample 11:
-    time = 1130666
-    flags = 1
-    data = length 195, hash 5F96F2A8
-  sample 12:
-    time = 1152000
-    flags = 1
-    data = length 202, hash 61D7CC33
-  sample 13:
-    time = 1173333
-    flags = 1
-    data = length 202, hash 49D335F2
-  sample 14:
-    time = 1194666
-    flags = 1
-    data = length 192, hash 2FE9CB1A
-  sample 15:
-    time = 1216000
-    flags = 1
-    data = length 201, hash BF0763B2
-  sample 16:
-    time = 1237333
-    flags = 1
-    data = length 184, hash AD047421
-  sample 17:
-    time = 1258666
-    flags = 1
-    data = length 196, hash F9088F14
-  sample 18:
-    time = 1280000
-    flags = 1
-    data = length 190, hash AC6D38FD
-  sample 19:
-    time = 1301333
-    flags = 1
-    data = length 195, hash 8D1A66D2
-  sample 20:
-    time = 1322666
-    flags = 1
-    data = length 197, hash B46BFB6B
-  sample 21:
-    time = 1344000
-    flags = 1
-    data = length 195, hash D9761F23
-  sample 22:
-    time = 1365333
-    flags = 1
-    data = length 204, hash 3391B617
-  sample 23:
-    time = 1386666
-    flags = 1
-    data = length 42, hash 33A1FB52
-  sample 24:
-    time = 1398666
-    flags = 1
-    data = length 44, hash 408B146E
-  sample 25:
-    time = 1401333
-    flags = 1
-    data = length 44, hash 171C7E0D
-  sample 26:
-    time = 1404000
-    flags = 1
-    data = length 54, hash 6307E16C
-  sample 27:
-    time = 1406666
-    flags = 1
-    data = length 53, hash 4A319572
-  sample 28:
-    time = 1409333
-    flags = 1
-    data = length 215, hash BA9C445C
-  sample 29:
-    time = 1421333
-    flags = 1
-    data = length 201, hash 3120D234
-  sample 30:
-    time = 1442666
-    flags = 1
-    data = length 187, hash DB44993C
-  sample 31:
-    time = 1464000
-    flags = 1
-    data = length 196, hash CF2002D7
-  sample 32:
-    time = 1485333
-    flags = 1
-    data = length 185, hash E03B5D7
-  sample 33:
-    time = 1506666
-    flags = 1
-    data = length 187, hash DA399A2C
-  sample 34:
-    time = 1528000
-    flags = 1
-    data = length 191, hash 292AA0DB
-  sample 35:
-    time = 1549333
-    flags = 1
-    data = length 201, hash 221910E0
-  sample 36:
-    time = 1570666
-    flags = 1
-    data = length 194, hash F4ED7821
-  sample 37:
-    time = 1592000
-    flags = 1
-    data = length 43, hash FDDA515E
-  sample 38:
-    time = 1604000
-    flags = 1
-    data = length 42, hash F3571C0A
-  sample 39:
-    time = 1606666
-    flags = 1
-    data = length 38, hash 39F910B3
-  sample 40:
-    time = 1609333
-    flags = 1
-    data = length 41, hash 2D189531
-  sample 41:
-    time = 1612000
-    flags = 1
-    data = length 43, hash 1F7574DB
-  sample 42:
-    time = 1614666
-    flags = 1
-    data = length 43, hash 644D15E5
-  sample 43:
-    time = 1617333
-    flags = 1
-    data = length 49, hash E8A0878
-  sample 44:
-    time = 1620000
-    flags = 1
-    data = length 55, hash DFF2046D
-  sample 45:
-    time = 1622666
-    flags = 1
-    data = length 49, hash 9FB8A23
-  sample 46:
-    time = 1625333
-    flags = 1
-    data = length 41, hash E3E15E3B
-  sample 47:
-    time = 1628000
-    flags = 1
-    data = length 42, hash E5D17A32
-  sample 48:
-    time = 1630666
-    flags = 1
-    data = length 42, hash F308B653
-  sample 49:
-    time = 1633333
-    flags = 1
-    data = length 55, hash BB750D76
-  sample 50:
-    time = 1636000
-    flags = 1
-    data = length 51, hash 96772ABF
-  sample 51:
-    time = 1638666
-    flags = 1
-    data = length 197, hash E4524346
-  sample 52:
-    time = 1650666
-    flags = 1
-    data = length 188, hash AC3E1BB5
-  sample 53:
-    time = 1672000
-    flags = 1
-    data = length 195, hash F56DB8A5
-  sample 54:
-    time = 1693333
-    flags = 1
-    data = length 198, hash C8970FF7
-  sample 55:
-    time = 1714666
-    flags = 1
-    data = length 202, hash AF425C68
-  sample 56:
-    time = 1736000
-    flags = 1
-    data = length 196, hash 4215D839
-  sample 57:
-    time = 1757333
-    flags = 1
-    data = length 204, hash DB9BE8E3
-  sample 58:
-    time = 1778666
-    flags = 1
-    data = length 206, hash E5B20AB8
-  sample 59:
-    time = 1800000
-    flags = 1
-    data = length 209, hash D7F47B95
-  sample 60:
-    time = 1821333
-    flags = 1
-    data = length 193, hash FB54FB05
-  sample 61:
-    time = 1842666
-    flags = 1
-    data = length 199, hash D99C3106
-  sample 62:
-    time = 1864000
-    flags = 1
-    data = length 206, hash 253885B9
-  sample 63:
-    time = 1885333
-    flags = 1
-    data = length 191, hash FBDD8162
-  sample 64:
-    time = 1906666
-    flags = 1
-    data = length 183, hash 7290332F
-  sample 65:
-    time = 1928000
-    flags = 1
-    data = length 189, hash 1A9DC3DE
-  sample 66:
-    time = 1949333
-    flags = 1
-    data = length 201, hash 5D936764
-  sample 67:
-    time = 1970666
-    flags = 1
-    data = length 193, hash 6B03E75E
-  sample 68:
-    time = 1992000
-    flags = 1
-    data = length 199, hash 8A21BA83
-  sample 69:
-    time = 2013333
-    flags = 1
-    data = length 41, hash E6362210
-  sample 70:
-    time = 2025333
-    flags = 1
-    data = length 43, hash 36A57B44
-  sample 71:
-    time = 2028000
-    flags = 1
-    data = length 43, hash E51797D5
-  sample 72:
-    time = 2030666
-    flags = 1
-    data = length 43, hash 1F336C72
-  sample 73:
-    time = 2033333
-    flags = 1
-    data = length 42, hash 201AD367
-  sample 74:
-    time = 2036000
-    flags = 1
-    data = length 50, hash 606CCD6
-  sample 75:
-    time = 2038666
-    flags = 1
-    data = length 56, hash B15EBD7A
-  sample 76:
-    time = 2041333
-    flags = 1
-    data = length 212, hash 273B8D22
-  sample 77:
-    time = 2053333
-    flags = 1
-    data = length 194, hash 44F9CE1
-  sample 78:
-    time = 2074666
-    flags = 1
-    data = length 195, hash EDF9EBA1
-  sample 79:
-    time = 2096000
-    flags = 1
-    data = length 194, hash CE9F2D26
-  sample 80:
-    time = 2117333
-    flags = 1
-    data = length 192, hash 204F8A23
-  sample 81:
-    time = 2138666
-    flags = 1
-    data = length 206, hash DFA57E67
-  sample 82:
-    time = 2160000
-    flags = 1
-    data = length 196, hash 3CF084AB
-  sample 83:
-    time = 2181333
-    flags = 1
-    data = length 202, hash 2AF75C08
-  sample 84:
-    time = 2202666
-    flags = 1
-    data = length 203, hash 748EAF7
-  sample 85:
-    time = 2224000
-    flags = 1
-    data = length 205, hash ED82379D
-  sample 86:
-    time = 2245333
-    flags = 1
-    data = length 193, hash 61F26F22
-  sample 87:
-    time = 2266666
-    flags = 1
-    data = length 189, hash 85EF1D20
-  sample 88:
-    time = 2288000
-    flags = 1
-    data = length 187, hash 25E41FBF
-  sample 89:
-    time = 2309333
-    flags = 1
-    data = length 199, hash F365808
-  sample 90:
-    time = 2330666
-    flags = 1
-    data = length 197, hash 94205329
-  sample 91:
-    time = 2352000
-    flags = 1
-    data = length 201, hash FA2B2055
-  sample 92:
-    time = 2373333
-    flags = 1
-    data = length 194, hash AF95381F
-  sample 93:
-    time = 2394666
-    flags = 1
-    data = length 201, hash 923D3534
-  sample 94:
-    time = 2416000
-    flags = 1
-    data = length 198, hash 35F84C2E
-  sample 95:
-    time = 2437333
-    flags = 1
-    data = length 204, hash 6642CA40
-  sample 96:
-    time = 2458666
-    flags = 1
-    data = length 183, hash 3E2DC6BE
-  sample 97:
-    time = 2480000
-    flags = 1
-    data = length 197, hash B1E458CE
-  sample 98:
-    time = 2501333
-    flags = 1
-    data = length 193, hash E9218C84
-  sample 99:
-    time = 2522666
-    flags = 1
-    data = length 192, hash FEF08D4B
-  sample 100:
-    time = 2544000
-    flags = 1
-    data = length 201, hash FC411147
-  sample 101:
-    time = 2565333
-    flags = 1
-    data = length 218, hash 86893464
-  sample 102:
-    time = 2586666
-    flags = 1
-    data = length 226, hash 31C5320
-  sample 103:
-    time = 2608000
-    flags = 1
-    data = length 233, hash 9432BEE5
-  sample 104:
-    time = 2629333
-    flags = 1
-    data = length 213, hash B3FCC53E
-  sample 105:
-    time = 2650666
-    flags = 1
-    data = length 204, hash D70DD5A2
-  sample 106:
-    time = 2672000
-    flags = 1
-    data = length 212, hash A4EF1B69
-  sample 107:
-    time = 2693333
-    flags = 1
-    data = length 203, hash 8B0748B5
-  sample 108:
-    time = 2714666
-    flags = 1
-    data = length 149, hash E455335B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.2.dump b/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.2.dump
deleted file mode 100644
index 58969058fa..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.2.dump
+++ /dev/null
@@ -1,227 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 3995
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 112000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/vorbis
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash 9A8FF207
-      data = length 3832, hash 8A406249
-  sample count = 49
-  sample 0:
-    time = 1821333
-    flags = 1
-    data = length 193, hash FB54FB05
-  sample 1:
-    time = 1842666
-    flags = 1
-    data = length 199, hash D99C3106
-  sample 2:
-    time = 1864000
-    flags = 1
-    data = length 206, hash 253885B9
-  sample 3:
-    time = 1885333
-    flags = 1
-    data = length 191, hash FBDD8162
-  sample 4:
-    time = 1906666
-    flags = 1
-    data = length 183, hash 7290332F
-  sample 5:
-    time = 1928000
-    flags = 1
-    data = length 189, hash 1A9DC3DE
-  sample 6:
-    time = 1949333
-    flags = 1
-    data = length 201, hash 5D936764
-  sample 7:
-    time = 1970666
-    flags = 1
-    data = length 193, hash 6B03E75E
-  sample 8:
-    time = 1992000
-    flags = 1
-    data = length 199, hash 8A21BA83
-  sample 9:
-    time = 2013333
-    flags = 1
-    data = length 41, hash E6362210
-  sample 10:
-    time = 2025333
-    flags = 1
-    data = length 43, hash 36A57B44
-  sample 11:
-    time = 2028000
-    flags = 1
-    data = length 43, hash E51797D5
-  sample 12:
-    time = 2030666
-    flags = 1
-    data = length 43, hash 1F336C72
-  sample 13:
-    time = 2033333
-    flags = 1
-    data = length 42, hash 201AD367
-  sample 14:
-    time = 2036000
-    flags = 1
-    data = length 50, hash 606CCD6
-  sample 15:
-    time = 2038666
-    flags = 1
-    data = length 56, hash B15EBD7A
-  sample 16:
-    time = 2041333
-    flags = 1
-    data = length 212, hash 273B8D22
-  sample 17:
-    time = 2053333
-    flags = 1
-    data = length 194, hash 44F9CE1
-  sample 18:
-    time = 2074666
-    flags = 1
-    data = length 195, hash EDF9EBA1
-  sample 19:
-    time = 2096000
-    flags = 1
-    data = length 194, hash CE9F2D26
-  sample 20:
-    time = 2117333
-    flags = 1
-    data = length 192, hash 204F8A23
-  sample 21:
-    time = 2138666
-    flags = 1
-    data = length 206, hash DFA57E67
-  sample 22:
-    time = 2160000
-    flags = 1
-    data = length 196, hash 3CF084AB
-  sample 23:
-    time = 2181333
-    flags = 1
-    data = length 202, hash 2AF75C08
-  sample 24:
-    time = 2202666
-    flags = 1
-    data = length 203, hash 748EAF7
-  sample 25:
-    time = 2224000
-    flags = 1
-    data = length 205, hash ED82379D
-  sample 26:
-    time = 2245333
-    flags = 1
-    data = length 193, hash 61F26F22
-  sample 27:
-    time = 2266666
-    flags = 1
-    data = length 189, hash 85EF1D20
-  sample 28:
-    time = 2288000
-    flags = 1
-    data = length 187, hash 25E41FBF
-  sample 29:
-    time = 2309333
-    flags = 1
-    data = length 199, hash F365808
-  sample 30:
-    time = 2330666
-    flags = 1
-    data = length 197, hash 94205329
-  sample 31:
-    time = 2352000
-    flags = 1
-    data = length 201, hash FA2B2055
-  sample 32:
-    time = 2373333
-    flags = 1
-    data = length 194, hash AF95381F
-  sample 33:
-    time = 2394666
-    flags = 1
-    data = length 201, hash 923D3534
-  sample 34:
-    time = 2416000
-    flags = 1
-    data = length 198, hash 35F84C2E
-  sample 35:
-    time = 2437333
-    flags = 1
-    data = length 204, hash 6642CA40
-  sample 36:
-    time = 2458666
-    flags = 1
-    data = length 183, hash 3E2DC6BE
-  sample 37:
-    time = 2480000
-    flags = 1
-    data = length 197, hash B1E458CE
-  sample 38:
-    time = 2501333
-    flags = 1
-    data = length 193, hash E9218C84
-  sample 39:
-    time = 2522666
-    flags = 1
-    data = length 192, hash FEF08D4B
-  sample 40:
-    time = 2544000
-    flags = 1
-    data = length 201, hash FC411147
-  sample 41:
-    time = 2565333
-    flags = 1
-    data = length 218, hash 86893464
-  sample 42:
-    time = 2586666
-    flags = 1
-    data = length 226, hash 31C5320
-  sample 43:
-    time = 2608000
-    flags = 1
-    data = length 233, hash 9432BEE5
-  sample 44:
-    time = 2629333
-    flags = 1
-    data = length 213, hash B3FCC53E
-  sample 45:
-    time = 2650666
-    flags = 1
-    data = length 204, hash D70DD5A2
-  sample 46:
-    time = 2672000
-    flags = 1
-    data = length 212, hash A4EF1B69
-  sample 47:
-    time = 2693333
-    flags = 1
-    data = length 203, hash 8B0748B5
-  sample 48:
-    time = 2714666
-    flags = 1
-    data = length 149, hash E455335B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.3.dump b/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.3.dump
deleted file mode 100644
index 4c789a8431..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.3.dump
+++ /dev/null
@@ -1,31 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 2741000
-  getPosition(0) = 3995
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 112000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/vorbis
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash 9A8FF207
-      data = length 3832, hash 8A406249
-  sample count = 0
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.unklen.dump b/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.unklen.dump
deleted file mode 100644
index 2f163572bf..0000000000
--- a/library/core/src/androidTest/assets/ogg/bear_vorbis.ogg.unklen.dump
+++ /dev/null
@@ -1,751 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 112000
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/vorbis
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 2
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 30, hash 9A8FF207
-      data = length 3832, hash 8A406249
-  sample count = 180
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 49, hash 2FFF94F0
-  sample 1:
-    time = 0
-    flags = 1
-    data = length 44, hash 3946418A
-  sample 2:
-    time = 2666
-    flags = 1
-    data = length 55, hash 2A0B878E
-  sample 3:
-    time = 5333
-    flags = 1
-    data = length 53, hash CC3B6879
-  sample 4:
-    time = 8000
-    flags = 1
-    data = length 215, hash 106AE950
-  sample 5:
-    time = 20000
-    flags = 1
-    data = length 192, hash 2B219F53
-  sample 6:
-    time = 41333
-    flags = 1
-    data = length 197, hash FBC39422
-  sample 7:
-    time = 62666
-    flags = 1
-    data = length 209, hash 386E8979
-  sample 8:
-    time = 84000
-    flags = 1
-    data = length 42, hash E81162C1
-  sample 9:
-    time = 96000
-    flags = 1
-    data = length 41, hash F15BEE36
-  sample 10:
-    time = 98666
-    flags = 1
-    data = length 42, hash D67EB19
-  sample 11:
-    time = 101333
-    flags = 1
-    data = length 42, hash F4DE4792
-  sample 12:
-    time = 104000
-    flags = 1
-    data = length 53, hash 80F66AC3
-  sample 13:
-    time = 106666
-    flags = 1
-    data = length 56, hash DCB9DFC4
-  sample 14:
-    time = 109333
-    flags = 1
-    data = length 55, hash 4E0C4E9D
-  sample 15:
-    time = 112000
-    flags = 1
-    data = length 203, hash 176B6862
-  sample 16:
-    time = 124000
-    flags = 1
-    data = length 193, hash AB13CB10
-  sample 17:
-    time = 145333
-    flags = 1
-    data = length 203, hash DE63DE9F
-  sample 18:
-    time = 166666
-    flags = 1
-    data = length 194, hash 4A9508A2
-  sample 19:
-    time = 188000
-    flags = 1
-    data = length 210, hash 196899B3
-  sample 20:
-    time = 209333
-    flags = 1
-    data = length 195, hash B68407F1
-  sample 21:
-    time = 230666
-    flags = 1
-    data = length 193, hash A1FA86E3
-  sample 22:
-    time = 252000
-    flags = 1
-    data = length 194, hash 5C0B9343
-  sample 23:
-    time = 273333
-    flags = 1
-    data = length 198, hash 789914B2
-  sample 24:
-    time = 294666
-    flags = 1
-    data = length 183, hash 1B82D11F
-  sample 25:
-    time = 316000
-    flags = 1
-    data = length 199, hash D5B848F4
-  sample 26:
-    time = 337333
-    flags = 1
-    data = length 192, hash B34427EA
-  sample 27:
-    time = 358666
-    flags = 1
-    data = length 199, hash C2599BB5
-  sample 28:
-    time = 380000
-    flags = 1
-    data = length 195, hash BFD83194
-  sample 29:
-    time = 401333
-    flags = 1
-    data = length 199, hash C9A7F7CA
-  sample 30:
-    time = 422666
-    flags = 1
-    data = length 44, hash 5D76EAD6
-  sample 31:
-    time = 434666
-    flags = 1
-    data = length 43, hash 8619C423
-  sample 32:
-    time = 437333
-    flags = 1
-    data = length 43, hash E490BBE
-  sample 33:
-    time = 440000
-    flags = 1
-    data = length 53, hash 8A557CAE
-  sample 34:
-    time = 442666
-    flags = 1
-    data = length 56, hash 81007BBA
-  sample 35:
-    time = 445333
-    flags = 1
-    data = length 56, hash 4E4DD67F
-  sample 36:
-    time = 448000
-    flags = 1
-    data = length 222, hash 414188AB
-  sample 37:
-    time = 460000
-    flags = 1
-    data = length 202, hash 67A07D30
-  sample 38:
-    time = 481333
-    flags = 1
-    data = length 200, hash E357D853
-  sample 39:
-    time = 502666
-    flags = 1
-    data = length 203, hash 4653DC90
-  sample 40:
-    time = 524000
-    flags = 1
-    data = length 192, hash A65E6C09
-  sample 41:
-    time = 545333
-    flags = 1
-    data = length 202, hash FBEAC508
-  sample 42:
-    time = 566666
-    flags = 1
-    data = length 202, hash E9B7B59F
-  sample 43:
-    time = 588000
-    flags = 1
-    data = length 204, hash E24AA78E
-  sample 44:
-    time = 609333
-    flags = 1
-    data = length 41, hash 3FBC5216
-  sample 45:
-    time = 621333
-    flags = 1
-    data = length 47, hash 153FBC55
-  sample 46:
-    time = 624000
-    flags = 1
-    data = length 42, hash 2B493D6C
-  sample 47:
-    time = 626666
-    flags = 1
-    data = length 42, hash 8303BEE3
-  sample 48:
-    time = 629333
-    flags = 1
-    data = length 62, hash 71AEE50B
-  sample 49:
-    time = 632000
-    flags = 1
-    data = length 54, hash 52F61908
-  sample 50:
-    time = 634666
-    flags = 1
-    data = length 45, hash 7BD3E3A1
-  sample 51:
-    time = 637333
-    flags = 1
-    data = length 41, hash E0F65472
-  sample 52:
-    time = 640000
-    flags = 1
-    data = length 45, hash 41838675
-  sample 53:
-    time = 642666
-    flags = 1
-    data = length 44, hash FCBC2147
-  sample 54:
-    time = 645333
-    flags = 1
-    data = length 45, hash 1A5987E3
-  sample 55:
-    time = 648000
-    flags = 1
-    data = length 43, hash 99074864
-  sample 56:
-    time = 650666
-    flags = 1
-    data = length 57, hash D4A9B60A
-  sample 57:
-    time = 653333
-    flags = 1
-    data = length 52, hash 302129DA
-  sample 58:
-    time = 656000
-    flags = 1
-    data = length 57, hash D8DD99C0
-  sample 59:
-    time = 658666
-    flags = 1
-    data = length 206, hash F4B9EF26
-  sample 60:
-    time = 670666
-    flags = 1
-    data = length 197, hash 7B8ACC8A
-  sample 61:
-    time = 692000
-    flags = 1
-    data = length 186, hash 161027CB
-  sample 62:
-    time = 713333
-    flags = 1
-    data = length 186, hash 1D6871B6
-  sample 63:
-    time = 734666
-    flags = 1
-    data = length 201, hash 536E9FDB
-  sample 64:
-    time = 756000
-    flags = 1
-    data = length 192, hash D38EFAC5
-  sample 65:
-    time = 777333
-    flags = 1
-    data = length 194, hash 4B394EF3
-  sample 66:
-    time = 798666
-    flags = 1
-    data = length 206, hash 1B31BA99
-  sample 67:
-    time = 820000
-    flags = 1
-    data = length 212, hash AD061F43
-  sample 68:
-    time = 841333
-    flags = 1
-    data = length 180, hash 6D1F7481
-  sample 69:
-    time = 862666
-    flags = 1
-    data = length 195, hash D80B21F
-  sample 70:
-    time = 884000
-    flags = 1
-    data = length 186, hash D367882
-  sample 71:
-    time = 905333
-    flags = 1
-    data = length 195, hash 2722159A
-  sample 72:
-    time = 926666
-    flags = 1
-    data = length 199, hash 10CEE97A
-  sample 73:
-    time = 948000
-    flags = 1
-    data = length 191, hash 2CF9FB3F
-  sample 74:
-    time = 969333
-    flags = 1
-    data = length 197, hash A725DA0
-  sample 75:
-    time = 990666
-    flags = 1
-    data = length 211, hash D4E5DB9E
-  sample 76:
-    time = 1012000
-    flags = 1
-    data = length 189, hash 1A90F496
-  sample 77:
-    time = 1033333
-    flags = 1
-    data = length 187, hash 44DB2689
-  sample 78:
-    time = 1054666
-    flags = 1
-    data = length 197, hash 6D3E5117
-  sample 79:
-    time = 1076000
-    flags = 1
-    data = length 208, hash 5B57B288
-  sample 80:
-    time = 1097333
-    flags = 1
-    data = length 198, hash D5FC05
-  sample 81:
-    time = 1118666
-    flags = 1
-    data = length 192, hash 350BBA45
-  sample 82:
-    time = 1140000
-    flags = 1
-    data = length 195, hash 5F96F2A8
-  sample 83:
-    time = 1161333
-    flags = 1
-    data = length 202, hash 61D7CC33
-  sample 84:
-    time = 1182666
-    flags = 1
-    data = length 202, hash 49D335F2
-  sample 85:
-    time = 1204000
-    flags = 1
-    data = length 192, hash 2FE9CB1A
-  sample 86:
-    time = 1225333
-    flags = 1
-    data = length 201, hash BF0763B2
-  sample 87:
-    time = 1246666
-    flags = 1
-    data = length 184, hash AD047421
-  sample 88:
-    time = 1268000
-    flags = 1
-    data = length 196, hash F9088F14
-  sample 89:
-    time = 1289333
-    flags = 1
-    data = length 190, hash AC6D38FD
-  sample 90:
-    time = 1310666
-    flags = 1
-    data = length 195, hash 8D1A66D2
-  sample 91:
-    time = 1332000
-    flags = 1
-    data = length 197, hash B46BFB6B
-  sample 92:
-    time = 1353333
-    flags = 1
-    data = length 195, hash D9761F23
-  sample 93:
-    time = 1374666
-    flags = 1
-    data = length 204, hash 3391B617
-  sample 94:
-    time = 1396000
-    flags = 1
-    data = length 42, hash 33A1FB52
-  sample 95:
-    time = 1408000
-    flags = 1
-    data = length 44, hash 408B146E
-  sample 96:
-    time = 1410666
-    flags = 1
-    data = length 44, hash 171C7E0D
-  sample 97:
-    time = 1413333
-    flags = 1
-    data = length 54, hash 6307E16C
-  sample 98:
-    time = 1416000
-    flags = 1
-    data = length 53, hash 4A319572
-  sample 99:
-    time = 1418666
-    flags = 1
-    data = length 215, hash BA9C445C
-  sample 100:
-    time = 1430666
-    flags = 1
-    data = length 201, hash 3120D234
-  sample 101:
-    time = 1452000
-    flags = 1
-    data = length 187, hash DB44993C
-  sample 102:
-    time = 1473333
-    flags = 1
-    data = length 196, hash CF2002D7
-  sample 103:
-    time = 1494666
-    flags = 1
-    data = length 185, hash E03B5D7
-  sample 104:
-    time = 1516000
-    flags = 1
-    data = length 187, hash DA399A2C
-  sample 105:
-    time = 1537333
-    flags = 1
-    data = length 191, hash 292AA0DB
-  sample 106:
-    time = 1558666
-    flags = 1
-    data = length 201, hash 221910E0
-  sample 107:
-    time = 1580000
-    flags = 1
-    data = length 194, hash F4ED7821
-  sample 108:
-    time = 1601333
-    flags = 1
-    data = length 43, hash FDDA515E
-  sample 109:
-    time = 1613333
-    flags = 1
-    data = length 42, hash F3571C0A
-  sample 110:
-    time = 1616000
-    flags = 1
-    data = length 38, hash 39F910B3
-  sample 111:
-    time = 1618666
-    flags = 1
-    data = length 41, hash 2D189531
-  sample 112:
-    time = 1621333
-    flags = 1
-    data = length 43, hash 1F7574DB
-  sample 113:
-    time = 1624000
-    flags = 1
-    data = length 43, hash 644D15E5
-  sample 114:
-    time = 1626666
-    flags = 1
-    data = length 49, hash E8A0878
-  sample 115:
-    time = 1629333
-    flags = 1
-    data = length 55, hash DFF2046D
-  sample 116:
-    time = 1632000
-    flags = 1
-    data = length 49, hash 9FB8A23
-  sample 117:
-    time = 1634666
-    flags = 1
-    data = length 41, hash E3E15E3B
-  sample 118:
-    time = 1637333
-    flags = 1
-    data = length 42, hash E5D17A32
-  sample 119:
-    time = 1640000
-    flags = 1
-    data = length 42, hash F308B653
-  sample 120:
-    time = 1642666
-    flags = 1
-    data = length 55, hash BB750D76
-  sample 121:
-    time = 1645333
-    flags = 1
-    data = length 51, hash 96772ABF
-  sample 122:
-    time = 1648000
-    flags = 1
-    data = length 197, hash E4524346
-  sample 123:
-    time = 1660000
-    flags = 1
-    data = length 188, hash AC3E1BB5
-  sample 124:
-    time = 1681333
-    flags = 1
-    data = length 195, hash F56DB8A5
-  sample 125:
-    time = 1702666
-    flags = 1
-    data = length 198, hash C8970FF7
-  sample 126:
-    time = 1724000
-    flags = 1
-    data = length 202, hash AF425C68
-  sample 127:
-    time = 1745333
-    flags = 1
-    data = length 196, hash 4215D839
-  sample 128:
-    time = 1766666
-    flags = 1
-    data = length 204, hash DB9BE8E3
-  sample 129:
-    time = 1788000
-    flags = 1
-    data = length 206, hash E5B20AB8
-  sample 130:
-    time = 1809333
-    flags = 1
-    data = length 209, hash D7F47B95
-  sample 131:
-    time = 1830666
-    flags = 1
-    data = length 193, hash FB54FB05
-  sample 132:
-    time = 1852000
-    flags = 1
-    data = length 199, hash D99C3106
-  sample 133:
-    time = 1873333
-    flags = 1
-    data = length 206, hash 253885B9
-  sample 134:
-    time = 1894666
-    flags = 1
-    data = length 191, hash FBDD8162
-  sample 135:
-    time = 1916000
-    flags = 1
-    data = length 183, hash 7290332F
-  sample 136:
-    time = 1937333
-    flags = 1
-    data = length 189, hash 1A9DC3DE
-  sample 137:
-    time = 1958666
-    flags = 1
-    data = length 201, hash 5D936764
-  sample 138:
-    time = 1980000
-    flags = 1
-    data = length 193, hash 6B03E75E
-  sample 139:
-    time = 2001333
-    flags = 1
-    data = length 199, hash 8A21BA83
-  sample 140:
-    time = 2022666
-    flags = 1
-    data = length 41, hash E6362210
-  sample 141:
-    time = 2034666
-    flags = 1
-    data = length 43, hash 36A57B44
-  sample 142:
-    time = 2037333
-    flags = 1
-    data = length 43, hash E51797D5
-  sample 143:
-    time = 2040000
-    flags = 1
-    data = length 43, hash 1F336C72
-  sample 144:
-    time = 2042666
-    flags = 1
-    data = length 42, hash 201AD367
-  sample 145:
-    time = 2045333
-    flags = 1
-    data = length 50, hash 606CCD6
-  sample 146:
-    time = 2048000
-    flags = 1
-    data = length 56, hash B15EBD7A
-  sample 147:
-    time = 2050666
-    flags = 1
-    data = length 212, hash 273B8D22
-  sample 148:
-    time = 2062666
-    flags = 1
-    data = length 194, hash 44F9CE1
-  sample 149:
-    time = 2084000
-    flags = 1
-    data = length 195, hash EDF9EBA1
-  sample 150:
-    time = 2105333
-    flags = 1
-    data = length 194, hash CE9F2D26
-  sample 151:
-    time = 2126666
-    flags = 1
-    data = length 192, hash 204F8A23
-  sample 152:
-    time = 2148000
-    flags = 1
-    data = length 206, hash DFA57E67
-  sample 153:
-    time = 2169333
-    flags = 1
-    data = length 196, hash 3CF084AB
-  sample 154:
-    time = 2190666
-    flags = 1
-    data = length 202, hash 2AF75C08
-  sample 155:
-    time = 2212000
-    flags = 1
-    data = length 203, hash 748EAF7
-  sample 156:
-    time = 2233333
-    flags = 1
-    data = length 205, hash ED82379D
-  sample 157:
-    time = 2254666
-    flags = 1
-    data = length 193, hash 61F26F22
-  sample 158:
-    time = 2276000
-    flags = 1
-    data = length 189, hash 85EF1D20
-  sample 159:
-    time = 2297333
-    flags = 1
-    data = length 187, hash 25E41FBF
-  sample 160:
-    time = 2318666
-    flags = 1
-    data = length 199, hash F365808
-  sample 161:
-    time = 2340000
-    flags = 1
-    data = length 197, hash 94205329
-  sample 162:
-    time = 2361333
-    flags = 1
-    data = length 201, hash FA2B2055
-  sample 163:
-    time = 2382666
-    flags = 1
-    data = length 194, hash AF95381F
-  sample 164:
-    time = 2404000
-    flags = 1
-    data = length 201, hash 923D3534
-  sample 165:
-    time = 2425333
-    flags = 1
-    data = length 198, hash 35F84C2E
-  sample 166:
-    time = 2446666
-    flags = 1
-    data = length 204, hash 6642CA40
-  sample 167:
-    time = 2468000
-    flags = 1
-    data = length 183, hash 3E2DC6BE
-  sample 168:
-    time = 2489333
-    flags = 1
-    data = length 197, hash B1E458CE
-  sample 169:
-    time = 2510666
-    flags = 1
-    data = length 193, hash E9218C84
-  sample 170:
-    time = 2532000
-    flags = 1
-    data = length 192, hash FEF08D4B
-  sample 171:
-    time = 2553333
-    flags = 1
-    data = length 201, hash FC411147
-  sample 172:
-    time = 2574666
-    flags = 1
-    data = length 218, hash 86893464
-  sample 173:
-    time = 2596000
-    flags = 1
-    data = length 226, hash 31C5320
-  sample 174:
-    time = 2617333
-    flags = 1
-    data = length 233, hash 9432BEE5
-  sample 175:
-    time = 2638666
-    flags = 1
-    data = length 213, hash B3FCC53E
-  sample 176:
-    time = 2660000
-    flags = 1
-    data = length 204, hash D70DD5A2
-  sample 177:
-    time = 2681333
-    flags = 1
-    data = length 212, hash A4EF1B69
-  sample 178:
-    time = 2702666
-    flags = 1
-    data = length 203, hash 8B0748B5
-  sample 179:
-    time = 2724000
-    flags = 1
-    data = length 149, hash E455335B
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/rawcc/sample.rawcc b/library/core/src/androidTest/assets/rawcc/sample.rawcc
deleted file mode 100644
index 0ea4a28390..0000000000
Binary files a/library/core/src/androidTest/assets/rawcc/sample.rawcc and /dev/null differ
diff --git a/library/core/src/androidTest/assets/rawcc/sample.rawcc.0.dump b/library/core/src/androidTest/assets/rawcc/sample.rawcc.0.dump
deleted file mode 100644
index 3e84813162..0000000000
--- a/library/core/src/androidTest/assets/rawcc/sample.rawcc.0.dump
+++ /dev/null
@@ -1,629 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = null
-    containerMimeType = null
-    sampleMimeType = application/cea-608
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 150
-  sample 0:
-    time = 37657512133
-    flags = 1
-    data = length 3, hash 7363
-  sample 1:
-    time = 37657528822
-    flags = 1
-    data = length 3, hash 7724
-  sample 2:
-    time = 37657545511
-    flags = 1
-    data = length 3, hash 766F
-  sample 3:
-    time = 37657562177
-    flags = 1
-    data = length 3, hash 7724
-  sample 4:
-    time = 37657578866
-    flags = 1
-    data = length 3, hash 767E
-  sample 5:
-    time = 37657595555
-    flags = 1
-    data = length 3, hash 7724
-  sample 6:
-    time = 37657612244
-    flags = 1
-    data = length 15, hash E4359178
-  sample 7:
-    time = 37657628911
-    flags = 1
-    data = length 3, hash 7724
-  sample 8:
-    time = 37657645600
-    flags = 1
-    data = length 12, hash 15EBEB66
-  sample 9:
-    time = 37657662288
-    flags = 1
-    data = length 3, hash 7724
-  sample 10:
-    time = 37657678977
-    flags = 1
-    data = length 3, hash 761D
-  sample 11:
-    time = 37657695644
-    flags = 1
-    data = length 3, hash 7724
-  sample 12:
-    time = 37657712333
-    flags = 1
-    data = length 30, hash E181418F
-  sample 13:
-    time = 37657729022
-    flags = 1
-    data = length 6, hash 36289CE2
-  sample 14:
-    time = 37657745711
-    flags = 1
-    data = length 12, hash 3C304F5B
-  sample 15:
-    time = 37657762377
-    flags = 1
-    data = length 3, hash 7724
-  sample 16:
-    time = 37657779066
-    flags = 1
-    data = length 12, hash 88DD8EF6
-  sample 17:
-    time = 37657795755
-    flags = 1
-    data = length 3, hash 7724
-  sample 18:
-    time = 37657812444
-    flags = 1
-    data = length 12, hash 8B411833
-  sample 19:
-    time = 37657829111
-    flags = 1
-    data = length 3, hash 7724
-  sample 20:
-    time = 37657845800
-    flags = 1
-    data = length 12, hash 742A2DF1
-  sample 21:
-    time = 37657862488
-    flags = 1
-    data = length 3, hash 7724
-  sample 22:
-    time = 37657879177
-    flags = 1
-    data = length 12, hash 9A2ECBEE
-  sample 23:
-    time = 37657895844
-    flags = 1
-    data = length 3, hash 7724
-  sample 24:
-    time = 37657912533
-    flags = 1
-    data = length 12, hash 562688EA
-  sample 25:
-    time = 37657929222
-    flags = 1
-    data = length 3, hash 7724
-  sample 26:
-    time = 37657945911
-    flags = 1
-    data = length 12, hash ADE4B953
-  sample 27:
-    time = 37657962577
-    flags = 1
-    data = length 3, hash 7724
-  sample 28:
-    time = 37657979266
-    flags = 1
-    data = length 12, hash F927E3E5
-  sample 29:
-    time = 37657995955
-    flags = 1
-    data = length 3, hash 7724
-  sample 30:
-    time = 37658012644
-    flags = 1
-    data = length 12, hash EA327945
-  sample 31:
-    time = 37658029311
-    flags = 1
-    data = length 3, hash 7724
-  sample 32:
-    time = 37658046000
-    flags = 1
-    data = length 12, hash 3E5DA13C
-  sample 33:
-    time = 37658062688
-    flags = 1
-    data = length 3, hash 7724
-  sample 34:
-    time = 37658079377
-    flags = 1
-    data = length 12, hash BF646AE3
-  sample 35:
-    time = 37658096044
-    flags = 1
-    data = length 3, hash 7724
-  sample 36:
-    time = 37658112733
-    flags = 1
-    data = length 12, hash 41E3BA78
-  sample 37:
-    time = 37658129422
-    flags = 1
-    data = length 3, hash 7724
-  sample 38:
-    time = 37658146111
-    flags = 1
-    data = length 12, hash A2945EF6
-  sample 39:
-    time = 37658162777
-    flags = 1
-    data = length 3, hash 7724
-  sample 40:
-    time = 37658179466
-    flags = 1
-    data = length 12, hash 26735812
-  sample 41:
-    time = 37658196155
-    flags = 1
-    data = length 3, hash 7724
-  sample 42:
-    time = 37658212844
-    flags = 1
-    data = length 12, hash DC14D3D8
-  sample 43:
-    time = 37658229511
-    flags = 1
-    data = length 3, hash 7724
-  sample 44:
-    time = 37658246200
-    flags = 1
-    data = length 12, hash 882191BE
-  sample 45:
-    time = 37658262888
-    flags = 1
-    data = length 3, hash 7724
-  sample 46:
-    time = 37658279577
-    flags = 1
-    data = length 12, hash 8B4886B1
-  sample 47:
-    time = 37658296244
-    flags = 1
-    data = length 3, hash 7724
-  sample 48:
-    time = 37658312933
-    flags = 1
-    data = length 12, hash 98D98F96
-  sample 49:
-    time = 37658329622
-    flags = 1
-    data = length 3, hash 7724
-  sample 50:
-    time = 37658346311
-    flags = 1
-    data = length 30, hash CF8E53E3
-  sample 51:
-    time = 37658362977
-    flags = 1
-    data = length 6, hash 36289CE2
-  sample 52:
-    time = 37658379666
-    flags = 1
-    data = length 12, hash F883C9EE
-  sample 53:
-    time = 37658396355
-    flags = 1
-    data = length 3, hash 7724
-  sample 54:
-    time = 37658413044
-    flags = 1
-    data = length 12, hash 6E6B2B9C
-  sample 55:
-    time = 37658429711
-    flags = 1
-    data = length 3, hash 7724
-  sample 56:
-    time = 37658446400
-    flags = 1
-    data = length 12, hash B4FE7F08
-  sample 57:
-    time = 37658463088
-    flags = 1
-    data = length 3, hash 7724
-  sample 58:
-    time = 37658479777
-    flags = 1
-    data = length 12, hash 5A1EA7C7
-  sample 59:
-    time = 37658496444
-    flags = 1
-    data = length 3, hash 7724
-  sample 60:
-    time = 37658513133
-    flags = 1
-    data = length 12, hash 46BD6CC9
-  sample 61:
-    time = 37658529822
-    flags = 1
-    data = length 3, hash 7724
-  sample 62:
-    time = 37658546511
-    flags = 1
-    data = length 12, hash 1B1E2554
-  sample 63:
-    time = 37658563177
-    flags = 1
-    data = length 3, hash 7724
-  sample 64:
-    time = 37658579866
-    flags = 1
-    data = length 12, hash 91FCC537
-  sample 65:
-    time = 37658596555
-    flags = 1
-    data = length 3, hash 7724
-  sample 66:
-    time = 37658613244
-    flags = 1
-    data = length 12, hash A9355E1B
-  sample 67:
-    time = 37658629911
-    flags = 1
-    data = length 3, hash 7724
-  sample 68:
-    time = 37658646600
-    flags = 1
-    data = length 12, hash 2511F69B
-  sample 69:
-    time = 37658663288
-    flags = 1
-    data = length 3, hash 7724
-  sample 70:
-    time = 37658679977
-    flags = 1
-    data = length 12, hash 90925736
-  sample 71:
-    time = 37658696644
-    flags = 1
-    data = length 3, hash 7724
-  sample 72:
-    time = 37658713333
-    flags = 1
-    data = length 21, hash 431EEE30
-  sample 73:
-    time = 37658730022
-    flags = 1
-    data = length 3, hash 7724
-  sample 74:
-    time = 37658746711
-    flags = 1
-    data = length 12, hash 7BDEF631
-  sample 75:
-    time = 37658763377
-    flags = 1
-    data = length 3, hash 7724
-  sample 76:
-    time = 37658780066
-    flags = 1
-    data = length 12, hash A2EEF59E
-  sample 77:
-    time = 37658796755
-    flags = 1
-    data = length 3, hash 7724
-  sample 78:
-    time = 37658813444
-    flags = 1
-    data = length 12, hash BFC6C022
-  sample 79:
-    time = 37658830111
-    flags = 1
-    data = length 3, hash 7724
-  sample 80:
-    time = 37658846800
-    flags = 1
-    data = length 12, hash CD4D8FCA
-  sample 81:
-    time = 37658863488
-    flags = 1
-    data = length 3, hash 7724
-  sample 82:
-    time = 37658880177
-    flags = 1
-    data = length 12, hash 2BDE8EFA
-  sample 83:
-    time = 37658896844
-    flags = 1
-    data = length 3, hash 7724
-  sample 84:
-    time = 37658913533
-    flags = 1
-    data = length 12, hash 8C858812
-  sample 85:
-    time = 37658930222
-    flags = 1
-    data = length 3, hash 7724
-  sample 86:
-    time = 37658946911
-    flags = 1
-    data = length 12, hash DE7D0E31
-  sample 87:
-    time = 37658963577
-    flags = 1
-    data = length 3, hash 7724
-  sample 88:
-    time = 37658980266
-    flags = 1
-    data = length 3, hash 7363
-  sample 89:
-    time = 37658996955
-    flags = 1
-    data = length 3, hash 7724
-  sample 90:
-    time = 37659013644
-    flags = 1
-    data = length 3, hash 7363
-  sample 91:
-    time = 37659030311
-    flags = 1
-    data = length 3, hash 7724
-  sample 92:
-    time = 37659047000
-    flags = 1
-    data = length 3, hash 7363
-  sample 93:
-    time = 37659063688
-    flags = 1
-    data = length 3, hash 7724
-  sample 94:
-    time = 37659080377
-    flags = 1
-    data = length 3, hash 7363
-  sample 95:
-    time = 37659097044
-    flags = 1
-    data = length 3, hash 7724
-  sample 96:
-    time = 37659113733
-    flags = 1
-    data = length 3, hash 7363
-  sample 97:
-    time = 37659130422
-    flags = 1
-    data = length 3, hash 7724
-  sample 98:
-    time = 37659147111
-    flags = 1
-    data = length 3, hash 7363
-  sample 99:
-    time = 37659163777
-    flags = 1
-    data = length 3, hash 7724
-  sample 100:
-    time = 37659180466
-    flags = 1
-    data = length 3, hash 7363
-  sample 101:
-    time = 37659197155
-    flags = 1
-    data = length 3, hash 7724
-  sample 102:
-    time = 37659213844
-    flags = 1
-    data = length 3, hash 7363
-  sample 103:
-    time = 37659230511
-    flags = 1
-    data = length 3, hash 7724
-  sample 104:
-    time = 37659247200
-    flags = 1
-    data = length 3, hash 7363
-  sample 105:
-    time = 37659263888
-    flags = 1
-    data = length 3, hash 7724
-  sample 106:
-    time = 37659280577
-    flags = 1
-    data = length 3, hash 7363
-  sample 107:
-    time = 37659297244
-    flags = 1
-    data = length 3, hash 7724
-  sample 108:
-    time = 37659313933
-    flags = 1
-    data = length 3, hash 7363
-  sample 109:
-    time = 37659330622
-    flags = 1
-    data = length 3, hash 7724
-  sample 110:
-    time = 37659347311
-    flags = 1
-    data = length 3, hash 7363
-  sample 111:
-    time = 37659363977
-    flags = 1
-    data = length 3, hash 7724
-  sample 112:
-    time = 37659380666
-    flags = 1
-    data = length 3, hash 7363
-  sample 113:
-    time = 37659397355
-    flags = 1
-    data = length 3, hash 7724
-  sample 114:
-    time = 37659414044
-    flags = 1
-    data = length 3, hash 7363
-  sample 115:
-    time = 37659430711
-    flags = 1
-    data = length 3, hash 7724
-  sample 116:
-    time = 37659447400
-    flags = 1
-    data = length 3, hash 7363
-  sample 117:
-    time = 37659464088
-    flags = 1
-    data = length 3, hash 7724
-  sample 118:
-    time = 37659480777
-    flags = 1
-    data = length 3, hash 7363
-  sample 119:
-    time = 37659497444
-    flags = 1
-    data = length 3, hash 7724
-  sample 120:
-    time = 37659514133
-    flags = 1
-    data = length 3, hash 7363
-  sample 121:
-    time = 37659530822
-    flags = 1
-    data = length 3, hash 7724
-  sample 122:
-    time = 37659547511
-    flags = 1
-    data = length 3, hash 7363
-  sample 123:
-    time = 37659564177
-    flags = 1
-    data = length 3, hash 7724
-  sample 124:
-    time = 37659580866
-    flags = 1
-    data = length 3, hash 7363
-  sample 125:
-    time = 37659597555
-    flags = 1
-    data = length 3, hash 7724
-  sample 126:
-    time = 37659614244
-    flags = 1
-    data = length 3, hash 766F
-  sample 127:
-    time = 37659630911
-    flags = 1
-    data = length 3, hash 7724
-  sample 128:
-    time = 37659647600
-    flags = 1
-    data = length 3, hash 767E
-  sample 129:
-    time = 37659664288
-    flags = 1
-    data = length 3, hash 7724
-  sample 130:
-    time = 37659680977
-    flags = 1
-    data = length 15, hash 191B585A
-  sample 131:
-    time = 37659697644
-    flags = 1
-    data = length 3, hash 7724
-  sample 132:
-    time = 37659714333
-    flags = 1
-    data = length 12, hash 15EC5FC5
-  sample 133:
-    time = 37659731022
-    flags = 1
-    data = length 3, hash 7724
-  sample 134:
-    time = 37659747711
-    flags = 1
-    data = length 3, hash 76A1
-  sample 135:
-    time = 37659764377
-    flags = 1
-    data = length 3, hash 7724
-  sample 136:
-    time = 37659781066
-    flags = 1
-    data = length 30, hash E8012479
-  sample 137:
-    time = 37659797755
-    flags = 1
-    data = length 6, hash 36289D5E
-  sample 138:
-    time = 37659814444
-    flags = 1
-    data = length 12, hash D32F29F3
-  sample 139:
-    time = 37659831111
-    flags = 1
-    data = length 3, hash 7724
-  sample 140:
-    time = 37659847800
-    flags = 1
-    data = length 21, hash 6258623
-  sample 141:
-    time = 37659864488
-    flags = 1
-    data = length 3, hash 7724
-  sample 142:
-    time = 37659881177
-    flags = 1
-    data = length 12, hash FE69ABA2
-  sample 143:
-    time = 37659897844
-    flags = 1
-    data = length 3, hash 7724
-  sample 144:
-    time = 37659914533
-    flags = 1
-    data = length 12, hash 958D0815
-  sample 145:
-    time = 37659931222
-    flags = 1
-    data = length 3, hash 7724
-  sample 146:
-    time = 37659947911
-    flags = 1
-    data = length 12, hash FF57BFD8
-  sample 147:
-    time = 37659964577
-    flags = 1
-    data = length 3, hash 7724
-  sample 148:
-    time = 37659981266
-    flags = 1
-    data = length 12, hash 922122E7
-  sample 149:
-    time = 37659997955
-    flags = 1
-    data = length 3, hash 7724
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ssa/empty b/library/core/src/androidTest/assets/ssa/empty
deleted file mode 100644
index e69de29bb2..0000000000
diff --git a/library/core/src/androidTest/assets/ssa/invalid_timecodes b/library/core/src/androidTest/assets/ssa/invalid_timecodes
deleted file mode 100644
index 89f3bb3f1c..0000000000
--- a/library/core/src/androidTest/assets/ssa/invalid_timecodes
+++ /dev/null
@@ -1,12 +0,0 @@
-[Script Info]
-Title: SomeTitle
-
-[V4+ Styles]
-Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
-Style: Default,Open Sans Semibold,36,&H00FFFFFF,&H000000FF,&H00020713,&H00000000,-1,0,0,0,100,100,0,0,1,1.7,0,2,0,0,28,1
-
-[Events]
-Format: Layer, Start, End, Style, Name, Text
-Dialogue: 0,Invalid,0:00:01.23,Default,Olly,This is the first subtitle{ignored}.
-Dialogue: 0,0:00:02.34,Invalid,Default,Olly,This is the second subtitle \nwith a newline \Nand another.
-Dialogue: 0,0:00:04:56,0:00:08:90,Default,Olly,This is the third subtitle, with a comma.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/ssa/no_end_timecodes b/library/core/src/androidTest/assets/ssa/no_end_timecodes
deleted file mode 100644
index c2c57ac64e..0000000000
--- a/library/core/src/androidTest/assets/ssa/no_end_timecodes
+++ /dev/null
@@ -1,12 +0,0 @@
-[Script Info]
-Title: SomeTitle
-
-[V4+ Styles]
-Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
-Style: Default,Open Sans Semibold,36,&H00FFFFFF,&H000000FF,&H00020713,&H00000000,-1,0,0,0,100,100,0,0,1,1.7,0,2,0,0,28,1
-
-[Events]
-Format: Layer, Start, End, Style, Name, Text
-Dialogue: 0,0:00:00.00,          ,Default,Olly,This is the first subtitle.
-Dialogue: 0,0:00:02.34,          ,Default,Olly,This is the second subtitle \nwith a newline \Nand another.
-Dialogue: 0,0:00:04.56,          ,Default,Olly,This is the third subtitle, with a comma.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/ssa/typical b/library/core/src/androidTest/assets/ssa/typical
deleted file mode 100644
index 8a49099c5c..0000000000
--- a/library/core/src/androidTest/assets/ssa/typical
+++ /dev/null
@@ -1,12 +0,0 @@
-[Script Info]
-Title: SomeTitle
-
-[V4+ Styles]
-Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
-Style: Default,Open Sans Semibold,36,&H00FFFFFF,&H000000FF,&H00020713,&H00000000,-1,0,0,0,100,100,0,0,1,1.7,0,2,0,0,28,1
-
-[Events]
-Format: Layer, Start, End, Style, Name, Text
-Dialogue: 0,0:00:00.00,0:00:01.23,Default,Olly,This is the first subtitle{ignored}.
-Dialogue: 0,0:00:02.34,0:00:03.45,Default,Olly,This is the second subtitle \nwith a newline \Nand another.
-Dialogue: 0,0:00:04:56,0:00:08:90,Default,Olly,This is the third subtitle, with a comma.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/ssa/typical_dialogue b/library/core/src/androidTest/assets/ssa/typical_dialogue
deleted file mode 100644
index 5cdab5a84b..0000000000
--- a/library/core/src/androidTest/assets/ssa/typical_dialogue
+++ /dev/null
@@ -1,3 +0,0 @@
-Dialogue: 0,0:00:00.00,0:00:01.23,Default,Olly,This is the first subtitle{ignored}.
-Dialogue: 0,0:00:02.34,0:00:03.45,Default,Olly,This is the second subtitle \nwith a newline \Nand another.
-Dialogue: 0,0:00:04:56,0:00:08:90,Default,Olly,This is the third subtitle, with a comma.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/ssa/typical_format b/library/core/src/androidTest/assets/ssa/typical_format
deleted file mode 100644
index 0cc5f1690f..0000000000
--- a/library/core/src/androidTest/assets/ssa/typical_format
+++ /dev/null
@@ -1 +0,0 @@
-Format: Layer, Start, End, Style, Name, Text
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/ssa/typical_header b/library/core/src/androidTest/assets/ssa/typical_header
deleted file mode 100644
index 3e96bcf14e..0000000000
--- a/library/core/src/androidTest/assets/ssa/typical_header
+++ /dev/null
@@ -1,6 +0,0 @@
-[Script Info]
-Title: SomeTitle
-
-[V4+ Styles]
-Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
-Style: Default,Open Sans Semibold,36,&H00FFFFFF,&H000000FF,&H00020713,&H00000000,-1,0,0,0,100,100,0,0,1,1.7,0,2,0,0,28,1
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/subrip/empty b/library/core/src/androidTest/assets/subrip/empty
deleted file mode 100644
index e69de29bb2..0000000000
diff --git a/library/core/src/androidTest/assets/subrip/no_end_timecodes b/library/core/src/androidTest/assets/subrip/no_end_timecodes
deleted file mode 100644
index 0a856c6994..0000000000
--- a/library/core/src/androidTest/assets/subrip/no_end_timecodes
+++ /dev/null
@@ -1,11 +0,0 @@
-1
-00:00:00,000 -->
-SubRip doesn't technically allow missing end timecodes.
-
-2
-00:00:02,345 -->
-We interpret it to mean that a subtitle extends to the start of the next one.
-
-3
-00:00:03,456 -->
-Or to the end of the media.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/subrip/typical b/library/core/src/androidTest/assets/subrip/typical
deleted file mode 100644
index 1c8ce4dd43..0000000000
--- a/library/core/src/androidTest/assets/subrip/typical
+++ /dev/null
@@ -1,12 +0,0 @@
-1
-00:00:00,000 --> 00:00:01,234
-This is the first subtitle.
-
-2
-00:00:02,345 --> 00:00:03,456
-This is the second subtitle.
-Second subtitle with second line.
-
-3
-00:00:04,567 --> 00:00:08,901
-This is the third subtitle.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/subrip/typical_extra_blank_line b/library/core/src/androidTest/assets/subrip/typical_extra_blank_line
deleted file mode 100644
index 83508dd733..0000000000
--- a/library/core/src/androidTest/assets/subrip/typical_extra_blank_line
+++ /dev/null
@@ -1,13 +0,0 @@
-1
-00:00:00,000 --> 00:00:01,234
-This is the first subtitle.
-
-
-2
-00:00:02,345 --> 00:00:03,456
-This is the second subtitle.
-Second subtitle with second line.
-
-3
-00:00:04,567 --> 00:00:08,901
-This is the third subtitle.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/subrip/typical_missing_sequence b/library/core/src/androidTest/assets/subrip/typical_missing_sequence
deleted file mode 100644
index 9318ba3239..0000000000
--- a/library/core/src/androidTest/assets/subrip/typical_missing_sequence
+++ /dev/null
@@ -1,11 +0,0 @@
-1
-00:00:00,000 --> 00:00:01,234
-This is the first subtitle.
-
-00:00:02,345 --> 00:00:03,456
-This is the second subtitle.
-Second subtitle with second line.
-
-3
-00:00:04,567 --> 00:00:08,901
-This is the third subtitle.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/subrip/typical_missing_timecode b/library/core/src/androidTest/assets/subrip/typical_missing_timecode
deleted file mode 100644
index b9c999ada9..0000000000
--- a/library/core/src/androidTest/assets/subrip/typical_missing_timecode
+++ /dev/null
@@ -1,11 +0,0 @@
-1
-00:00:00,000 --> 00:00:01,234
-This is the first subtitle.
-
-2
-This is the second subtitle.
-Second subtitle with second line.
-
-3
-00:00:04,567 --> 00:00:08,901
-This is the third subtitle.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/subrip/typical_negative_timestamps b/library/core/src/androidTest/assets/subrip/typical_negative_timestamps
deleted file mode 100644
index 2a47c0993b..0000000000
--- a/library/core/src/androidTest/assets/subrip/typical_negative_timestamps
+++ /dev/null
@@ -1,12 +0,0 @@
-1
--0:00:04,567 --> -0:00:03,456
-This is the first subtitle.
-
-2
--00:00:02,345 --> 00:00:01,234
-This is the second subtitle.
-Second subtitle with second line.
-
-3
-00:00:04,567 --> 00:00:08,901
-This is the third subtitle.
diff --git a/library/core/src/androidTest/assets/subrip/typical_unexpected_end b/library/core/src/androidTest/assets/subrip/typical_unexpected_end
deleted file mode 100644
index 8e2949b8db..0000000000
--- a/library/core/src/androidTest/assets/subrip/typical_unexpected_end
+++ /dev/null
@@ -1,10 +0,0 @@
-1
-00:00:00,000 --> 00:00:01,234
-This is the first subtitle.
-
-2
-00:00:02,345 --> 00:00:03,456
-This is the second subtitle.
-Second subtitle with second line.
-
-3
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/subrip/typical_with_byte_order_mark b/library/core/src/androidTest/assets/subrip/typical_with_byte_order_mark
deleted file mode 100644
index 9601c99bfb..0000000000
--- a/library/core/src/androidTest/assets/subrip/typical_with_byte_order_mark
+++ /dev/null
@@ -1,12 +0,0 @@
-﻿1
-00:00:00,000 --> 00:00:01,234
-This is the first subtitle.
-
-2
-00:00:02,345 --> 00:00:03,456
-This is the second subtitle.
-Second subtitle with second line.
-
-3
-00:00:04,567 --> 00:00:08,901
-This is the third subtitle.
\ No newline at end of file
diff --git a/library/core/src/androidTest/assets/ts/sample.ac3 b/library/core/src/androidTest/assets/ts/sample.ac3
deleted file mode 100644
index 0e39f0ec98..0000000000
Binary files a/library/core/src/androidTest/assets/ts/sample.ac3 and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ts/sample.ac3.0.dump b/library/core/src/androidTest/assets/ts/sample.ac3.0.dump
deleted file mode 100644
index 1b6c77efb6..0000000000
--- a/library/core/src/androidTest/assets/ts/sample.ac3.0.dump
+++ /dev/null
@@ -1,61 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = -1
-    id = 0
-    containerMimeType = null
-    sampleMimeType = audio/ac3
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 6
-    sampleRate = 48000
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 8
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 1536, hash 7108D5C2
-  sample 1:
-    time = 32000
-    flags = 1
-    data = length 1536, hash 80BF3B34
-  sample 2:
-    time = 64000
-    flags = 1
-    data = length 1536, hash 5D09685
-  sample 3:
-    time = 96000
-    flags = 1
-    data = length 1536, hash A9A24E44
-  sample 4:
-    time = 128000
-    flags = 1
-    data = length 1536, hash 6F856273
-  sample 5:
-    time = 160000
-    flags = 1
-    data = length 1536, hash B1737D3C
-  sample 6:
-    time = 192000
-    flags = 1
-    data = length 1536, hash 98FDEB9D
-  sample 7:
-    time = 224000
-    flags = 1
-    data = length 1536, hash 99B9B943
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ts/sample.adts b/library/core/src/androidTest/assets/ts/sample.adts
deleted file mode 100644
index abbaad0daf..0000000000
Binary files a/library/core/src/androidTest/assets/ts/sample.adts and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ts/sample.adts.0.dump b/library/core/src/androidTest/assets/ts/sample.adts.0.dump
deleted file mode 100644
index 0a7427d3f1..0000000000
--- a/library/core/src/androidTest/assets/ts/sample.adts.0.dump
+++ /dev/null
@@ -1,629 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 2
-track 0:
-  format:
-    bitrate = -1
-    id = 0
-    containerMimeType = null
-    sampleMimeType = audio/mp4a-latm
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 2, hash 5F7
-  sample count = 144
-  sample 0:
-    time = 0
-    flags = 1
-    data = length 23, hash 47DE9131
-  sample 1:
-    time = 23219
-    flags = 1
-    data = length 6, hash 31CF3A46
-  sample 2:
-    time = 46438
-    flags = 1
-    data = length 6, hash 31CF3A46
-  sample 3:
-    time = 69657
-    flags = 1
-    data = length 6, hash 31CF3A46
-  sample 4:
-    time = 92876
-    flags = 1
-    data = length 6, hash 31EC5206
-  sample 5:
-    time = 116095
-    flags = 1
-    data = length 171, hash 4F6478F6
-  sample 6:
-    time = 139314
-    flags = 1
-    data = length 202, hash AF4068A3
-  sample 7:
-    time = 162533
-    flags = 1
-    data = length 210, hash E4C10618
-  sample 8:
-    time = 185752
-    flags = 1
-    data = length 217, hash 9ECCD0D9
-  sample 9:
-    time = 208971
-    flags = 1
-    data = length 212, hash 6BAC2CD9
-  sample 10:
-    time = 232190
-    flags = 1
-    data = length 223, hash 188B6010
-  sample 11:
-    time = 255409
-    flags = 1
-    data = length 222, hash C1A04D0C
-  sample 12:
-    time = 278628
-    flags = 1
-    data = length 220, hash D65F9768
-  sample 13:
-    time = 301847
-    flags = 1
-    data = length 227, hash B96C9E14
-  sample 14:
-    time = 325066
-    flags = 1
-    data = length 229, hash 9FB09972
-  sample 15:
-    time = 348285
-    flags = 1
-    data = length 220, hash 2271F053
-  sample 16:
-    time = 371504
-    flags = 1
-    data = length 226, hash 5EDD2F4F
-  sample 17:
-    time = 394723
-    flags = 1
-    data = length 239, hash 957510E0
-  sample 18:
-    time = 417942
-    flags = 1
-    data = length 224, hash 718A8F47
-  sample 19:
-    time = 441161
-    flags = 1
-    data = length 225, hash 5E11E293
-  sample 20:
-    time = 464380
-    flags = 1
-    data = length 227, hash FCE50D27
-  sample 21:
-    time = 487599
-    flags = 1
-    data = length 212, hash 77908C40
-  sample 22:
-    time = 510818
-    flags = 1
-    data = length 227, hash 34C4EB32
-  sample 23:
-    time = 534037
-    flags = 1
-    data = length 231, hash 95488307
-  sample 24:
-    time = 557256
-    flags = 1
-    data = length 226, hash 97F12D6F
-  sample 25:
-    time = 580475
-    flags = 1
-    data = length 236, hash 91A9D9A2
-  sample 26:
-    time = 603694
-    flags = 1
-    data = length 227, hash 27A608F9
-  sample 27:
-    time = 626913
-    flags = 1
-    data = length 229, hash 57DAAE4
-  sample 28:
-    time = 650132
-    flags = 1
-    data = length 235, hash ED30AC34
-  sample 29:
-    time = 673351
-    flags = 1
-    data = length 227, hash BD3D6280
-  sample 30:
-    time = 696570
-    flags = 1
-    data = length 233, hash 694B1087
-  sample 31:
-    time = 719789
-    flags = 1
-    data = length 232, hash 1EDFE047
-  sample 32:
-    time = 743008
-    flags = 1
-    data = length 228, hash E2A831F4
-  sample 33:
-    time = 766227
-    flags = 1
-    data = length 231, hash 757E6012
-  sample 34:
-    time = 789446
-    flags = 1
-    data = length 223, hash 4003D791
-  sample 35:
-    time = 812665
-    flags = 1
-    data = length 232, hash 3CF9A07C
-  sample 36:
-    time = 835884
-    flags = 1
-    data = length 228, hash 25AC3FF7
-  sample 37:
-    time = 859103
-    flags = 1
-    data = length 220, hash 2C1824CE
-  sample 38:
-    time = 882322
-    flags = 1
-    data = length 229, hash 46FDD8FB
-  sample 39:
-    time = 905541
-    flags = 1
-    data = length 237, hash F6988018
-  sample 40:
-    time = 928760
-    flags = 1
-    data = length 242, hash 60436B6B
-  sample 41:
-    time = 951979
-    flags = 1
-    data = length 275, hash 90EDFA8E
-  sample 42:
-    time = 975198
-    flags = 1
-    data = length 242, hash 5C86EFCB
-  sample 43:
-    time = 998417
-    flags = 1
-    data = length 233, hash E0A51B82
-  sample 44:
-    time = 1021636
-    flags = 1
-    data = length 235, hash 590DF14F
-  sample 45:
-    time = 1044855
-    flags = 1
-    data = length 238, hash 69AF4E6E
-  sample 46:
-    time = 1068074
-    flags = 1
-    data = length 235, hash E745AE8D
-  sample 47:
-    time = 1091293
-    flags = 1
-    data = length 223, hash 295F2A13
-  sample 48:
-    time = 1114512
-    flags = 1
-    data = length 228, hash E2F47B21
-  sample 49:
-    time = 1137731
-    flags = 1
-    data = length 229, hash 262C3CFE
-  sample 50:
-    time = 1160950
-    flags = 1
-    data = length 232, hash 4B5BF5E8
-  sample 51:
-    time = 1184169
-    flags = 1
-    data = length 233, hash F3D80836
-  sample 52:
-    time = 1207388
-    flags = 1
-    data = length 237, hash 32E0A11E
-  sample 53:
-    time = 1230607
-    flags = 1
-    data = length 228, hash E1B89F13
-  sample 54:
-    time = 1253826
-    flags = 1
-    data = length 237, hash 8BDD9E38
-  sample 55:
-    time = 1277045
-    flags = 1
-    data = length 235, hash 3C84161F
-  sample 56:
-    time = 1300264
-    flags = 1
-    data = length 227, hash A47E1789
-  sample 57:
-    time = 1323483
-    flags = 1
-    data = length 228, hash 869FDFD3
-  sample 58:
-    time = 1346702
-    flags = 1
-    data = length 233, hash 272ECE2
-  sample 59:
-    time = 1369921
-    flags = 1
-    data = length 227, hash DB6B9618
-  sample 60:
-    time = 1393140
-    flags = 1
-    data = length 212, hash 63214325
-  sample 61:
-    time = 1416359
-    flags = 1
-    data = length 221, hash 9BA588A1
-  sample 62:
-    time = 1439578
-    flags = 1
-    data = length 225, hash 21EFD50C
-  sample 63:
-    time = 1462797
-    flags = 1
-    data = length 231, hash F3AD0BF
-  sample 64:
-    time = 1486016
-    flags = 1
-    data = length 224, hash 822C9210
-  sample 65:
-    time = 1509235
-    flags = 1
-    data = length 195, hash D4EF53EE
-  sample 66:
-    time = 1532454
-    flags = 1
-    data = length 195, hash A816647A
-  sample 67:
-    time = 1555673
-    flags = 1
-    data = length 184, hash 9A2B7E6
-  sample 68:
-    time = 1578892
-    flags = 1
-    data = length 210, hash 956E3600
-  sample 69:
-    time = 1602111
-    flags = 1
-    data = length 234, hash 35CFDA0A
-  sample 70:
-    time = 1625330
-    flags = 1
-    data = length 239, hash 9E15AC1E
-  sample 71:
-    time = 1648549
-    flags = 1
-    data = length 228, hash F3B70641
-  sample 72:
-    time = 1671768
-    flags = 1
-    data = length 237, hash 124E3194
-  sample 73:
-    time = 1694987
-    flags = 1
-    data = length 231, hash 950CD7C8
-  sample 74:
-    time = 1718206
-    flags = 1
-    data = length 236, hash A12E49AF
-  sample 75:
-    time = 1741425
-    flags = 1
-    data = length 242, hash 43BC9C24
-  sample 76:
-    time = 1764644
-    flags = 1
-    data = length 241, hash DCF0B17
-  sample 77:
-    time = 1787863
-    flags = 1
-    data = length 251, hash C0B99968
-  sample 78:
-    time = 1811082
-    flags = 1
-    data = length 245, hash 9B38ED1C
-  sample 79:
-    time = 1834301
-    flags = 1
-    data = length 238, hash 1BA69079
-  sample 80:
-    time = 1857520
-    flags = 1
-    data = length 233, hash 44C8C6BF
-  sample 81:
-    time = 1880739
-    flags = 1
-    data = length 231, hash EABBEE02
-  sample 82:
-    time = 1903958
-    flags = 1
-    data = length 226, hash D09C44FB
-  sample 83:
-    time = 1927177
-    flags = 1
-    data = length 235, hash BE6A6608
-  sample 84:
-    time = 1950396
-    flags = 1
-    data = length 235, hash 2735F454
-  sample 85:
-    time = 1973615
-    flags = 1
-    data = length 238, hash B160DFE7
-  sample 86:
-    time = 1996834
-    flags = 1
-    data = length 232, hash 1B217D2E
-  sample 87:
-    time = 2020053
-    flags = 1
-    data = length 251, hash D1C14CEA
-  sample 88:
-    time = 2043272
-    flags = 1
-    data = length 256, hash 97C87F08
-  sample 89:
-    time = 2066491
-    flags = 1
-    data = length 237, hash 6645DB3
-  sample 90:
-    time = 2089710
-    flags = 1
-    data = length 235, hash 727A1C82
-  sample 91:
-    time = 2112929
-    flags = 1
-    data = length 234, hash 5015F8B5
-  sample 92:
-    time = 2136148
-    flags = 1
-    data = length 241, hash 9102144B
-  sample 93:
-    time = 2159367
-    flags = 1
-    data = length 224, hash 64E0D807
-  sample 94:
-    time = 2182586
-    flags = 1
-    data = length 228, hash 1922B852
-  sample 95:
-    time = 2205805
-    flags = 1
-    data = length 224, hash 953502D8
-  sample 96:
-    time = 2229024
-    flags = 1
-    data = length 214, hash 92B87FE7
-  sample 97:
-    time = 2252243
-    flags = 1
-    data = length 213, hash BB0C8D86
-  sample 98:
-    time = 2275462
-    flags = 1
-    data = length 206, hash 9AD21017
-  sample 99:
-    time = 2298681
-    flags = 1
-    data = length 209, hash C479FE94
-  sample 100:
-    time = 2321900
-    flags = 1
-    data = length 220, hash 3033DCE1
-  sample 101:
-    time = 2345119
-    flags = 1
-    data = length 217, hash 7D589C94
-  sample 102:
-    time = 2368338
-    flags = 1
-    data = length 216, hash AAF6C183
-  sample 103:
-    time = 2391557
-    flags = 1
-    data = length 206, hash 1EE1207F
-  sample 104:
-    time = 2414776
-    flags = 1
-    data = length 204, hash 4BEB1210
-  sample 105:
-    time = 2437995
-    flags = 1
-    data = length 213, hash 21A841C9
-  sample 106:
-    time = 2461214
-    flags = 1
-    data = length 207, hash B80B0424
-  sample 107:
-    time = 2484433
-    flags = 1
-    data = length 212, hash 4785A1C3
-  sample 108:
-    time = 2507652
-    flags = 1
-    data = length 205, hash 59BF7229
-  sample 109:
-    time = 2530871
-    flags = 1
-    data = length 208, hash FA313DDE
-  sample 110:
-    time = 2554090
-    flags = 1
-    data = length 211, hash 190D85FD
-  sample 111:
-    time = 2577309
-    flags = 1
-    data = length 211, hash BA050052
-  sample 112:
-    time = 2600528
-    flags = 1
-    data = length 211, hash F3080F10
-  sample 113:
-    time = 2623747
-    flags = 1
-    data = length 210, hash F41B7BE7
-  sample 114:
-    time = 2646966
-    flags = 1
-    data = length 207, hash 2176C97E
-  sample 115:
-    time = 2670185
-    flags = 1
-    data = length 220, hash 32087455
-  sample 116:
-    time = 2693404
-    flags = 1
-    data = length 213, hash 4E5649A8
-  sample 117:
-    time = 2716623
-    flags = 1
-    data = length 213, hash 5F12FDCF
-  sample 118:
-    time = 2739842
-    flags = 1
-    data = length 204, hash 1E895C2A
-  sample 119:
-    time = 2763061
-    flags = 1
-    data = length 219, hash 45382270
-  sample 120:
-    time = 2786280
-    flags = 1
-    data = length 205, hash D66C6A1D
-  sample 121:
-    time = 2809499
-    flags = 1
-    data = length 204, hash 467AD01F
-  sample 122:
-    time = 2832718
-    flags = 1
-    data = length 211, hash F0435574
-  sample 123:
-    time = 2855937
-    flags = 1
-    data = length 206, hash 8C96B75F
-  sample 124:
-    time = 2879156
-    flags = 1
-    data = length 200, hash 82553248
-  sample 125:
-    time = 2902375
-    flags = 1
-    data = length 180, hash 1E51E6CE
-  sample 126:
-    time = 2925594
-    flags = 1
-    data = length 196, hash 33151DC4
-  sample 127:
-    time = 2948813
-    flags = 1
-    data = length 197, hash 1E62A7D6
-  sample 128:
-    time = 2972032
-    flags = 1
-    data = length 206, hash 6A6C4CC9
-  sample 129:
-    time = 2995251
-    flags = 1
-    data = length 209, hash A72FABAA
-  sample 130:
-    time = 3018470
-    flags = 1
-    data = length 217, hash BA33B985
-  sample 131:
-    time = 3041689
-    flags = 1
-    data = length 235, hash 9919CFD9
-  sample 132:
-    time = 3064908
-    flags = 1
-    data = length 236, hash A22C7267
-  sample 133:
-    time = 3088127
-    flags = 1
-    data = length 213, hash 3D57C901
-  sample 134:
-    time = 3111346
-    flags = 1
-    data = length 205, hash 47F68FDE
-  sample 135:
-    time = 3134565
-    flags = 1
-    data = length 210, hash 9A756E9C
-  sample 136:
-    time = 3157784
-    flags = 1
-    data = length 210, hash BD45C31F
-  sample 137:
-    time = 3181003
-    flags = 1
-    data = length 207, hash 8774FF7B
-  sample 138:
-    time = 3204222
-    flags = 1
-    data = length 149, hash 4678C0E5
-  sample 139:
-    time = 3227441
-    flags = 1
-    data = length 161, hash E991035D
-  sample 140:
-    time = 3250660
-    flags = 1
-    data = length 197, hash C3013689
-  sample 141:
-    time = 3273879
-    flags = 1
-    data = length 208, hash E6C0237
-  sample 142:
-    time = 3297098
-    flags = 1
-    data = length 232, hash A330F188
-  sample 143:
-    time = 3320317
-    flags = 1
-    data = length 174, hash 2B69C34E
-track 1:
-  format:
-    bitrate = -1
-    id = 1
-    containerMimeType = null
-    sampleMimeType = application/id3
-    maxInputSize = -1
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 0
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ts/sample.ps b/library/core/src/androidTest/assets/ts/sample.ps
deleted file mode 100644
index f7a2d96db5..0000000000
Binary files a/library/core/src/androidTest/assets/ts/sample.ps and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ts/sample.ps.0.dump b/library/core/src/androidTest/assets/ts/sample.ps.0.dump
deleted file mode 100644
index 98f3c6a85a..0000000000
--- a/library/core/src/androidTest/assets/ts/sample.ps.0.dump
+++ /dev/null
@@ -1,77 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 2
-track 192:
-  format:
-    bitrate = -1
-    id = 192
-    containerMimeType = null
-    sampleMimeType = audio/mpeg-L2
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 4
-  sample 0:
-    time = 29088
-    flags = 1
-    data = length 417, hash 5C710F78
-  sample 1:
-    time = 55210
-    flags = 1
-    data = length 418, hash 79CF71F8
-  sample 2:
-    time = 81332
-    flags = 1
-    data = length 418, hash 79CF71F8
-  sample 3:
-    time = 107454
-    flags = 1
-    data = length 418, hash 79CF71F8
-track 224:
-  format:
-    bitrate = -1
-    id = 224
-    containerMimeType = null
-    sampleMimeType = video/mpeg2
-    maxInputSize = -1
-    width = 640
-    height = 426
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 22, hash 743CC6F8
-  sample count = 2
-  sample 0:
-    time = 40000
-    flags = 1
-    data = length 20646, hash 576390B
-  sample 1:
-    time = 80000
-    flags = 0
-    data = length 17831, hash 5C5A57F5
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ts/sample.ts b/library/core/src/androidTest/assets/ts/sample.ts
deleted file mode 100644
index d148c6d7e0..0000000000
Binary files a/library/core/src/androidTest/assets/ts/sample.ts and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ts/sample.ts.0.dump b/library/core/src/androidTest/assets/ts/sample.ts.0.dump
deleted file mode 100644
index 91e48b1722..0000000000
--- a/library/core/src/androidTest/assets/ts/sample.ts.0.dump
+++ /dev/null
@@ -1,77 +0,0 @@
-seekMap:
-  isSeekable = false
-  duration = UNSET TIME
-  getPosition(0) = 0
-numberOfTracks = 2
-track 256:
-  format:
-    bitrate = -1
-    id = 1/256
-    containerMimeType = null
-    sampleMimeType = video/mpeg2
-    maxInputSize = -1
-    width = 640
-    height = 426
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = 1.0
-    channelCount = -1
-    sampleRate = -1
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-      data = length 22, hash CE183139
-  sample count = 2
-  sample 0:
-    time = 33366
-    flags = 1
-    data = length 20711, hash 34341E8
-  sample 1:
-    time = 66733
-    flags = 0
-    data = length 18112, hash EC44B35B
-track 257:
-  format:
-    bitrate = -1
-    id = 1/257
-    containerMimeType = null
-    sampleMimeType = audio/mpeg-L2
-    maxInputSize = 4096
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = -1
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = und
-    drmInitData = -
-    initializationData:
-  sample count = 4
-  sample 0:
-    time = 22455
-    flags = 1
-    data = length 1253, hash 727FD1C6
-  sample 1:
-    time = 48577
-    flags = 1
-    data = length 1254, hash 73FB07B8
-  sample 2:
-    time = 74700
-    flags = 1
-    data = length 1254, hash 73FB07B8
-  sample 3:
-    time = 100822
-    flags = 1
-    data = length 1254, hash 73FB07B8
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/ts/sample_with_sdt.ts b/library/core/src/androidTest/assets/ts/sample_with_sdt.ts
deleted file mode 100644
index 8d1eccee15..0000000000
Binary files a/library/core/src/androidTest/assets/ts/sample_with_sdt.ts and /dev/null differ
diff --git a/library/core/src/androidTest/assets/ttml/chain_multiple_styles.xml b/library/core/src/androidTest/assets/ttml/chain_multiple_styles.xml
deleted file mode 100644
index 307a44a507..0000000000
--- a/library/core/src/androidTest/assets/ttml/chain_multiple_styles.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<tt xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata"
-    xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-    xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-    xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1">
-  <head>
-    <styling>
-      <style id="s0"
-        tts:backgroundColor="blue"
-        tts:color="black"
-        tts:fontWeight="bold" />
-      <style id="s1"
-        tts:backgroundColor="black"
-        tts:color="red"
-        tts:fontFamily="sansSerif"
-        tts:fontStyle="italic"
-        tts:textDecoration="lineThrough" />
-      <!-- multiple ids defined -->
-      <style style="s0 s1" id="s2"
-        tts:fontFamily="serif"
-        tts:backgroundColor="red" />
-      <style style="s1 s0" id="s3"
-        tts:fontFamily="serif"
-        tts:backgroundColor="red" />
-    </styling>
-  </head>
-  <body>
-    <div>
-      <p style="s2" begin="10s" end="18s">text 1</p>
-    </div>
-  </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/font_size.xml b/library/core/src/androidTest/assets/ttml/font_size.xml
deleted file mode 100644
index a25fff1cf9..0000000000
--- a/library/core/src/androidTest/assets/ttml/font_size.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<tt xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata"
-    xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-    xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-    xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1">
-  <head>
-    <styling>
-      <style id="s0"
-        tts:textDecoration="underline"/>
-      <style id="s1"
-        tts:textDecoration="lineThrough"/>
-    </styling>
-  </head>
-  <body>
-    <div>
-      <p begin="10s" end="18s" tts:fontSize="32px">text 1</p>
-    </div>
-    <div>
-      <p begin="20s" end="28s" tts:fontSize="2.2em">text 2</p>
-    </div>
-    <div>
-      <p begin="30s" end="38s" tts:fontSize="150%">text 3</p>
-    </div>
-    <div>
-      <p begin="40s" end="48s" tts:fontSize="32px 16px">two values</p>
-    </div>
-    <div>
-      <p begin="50s" end="58s" tts:fontSize=".5em">leading dot</p>
-    </div>
-  </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/font_size_empty.xml b/library/core/src/androidTest/assets/ttml/font_size_empty.xml
deleted file mode 100644
index fdfc03ea6d..0000000000
--- a/library/core/src/androidTest/assets/ttml/font_size_empty.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<tt xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata" xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-  xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-  xmlns="http://www.w3.org/ns/ttml"
-  xmlns="http://www.w3.org/2006/10/ttaf1">
-  <body>
-    <div>
-      <p begin="10s" end="18s" tts:fontSize="">empty</p>
-    </div>
-  </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/font_size_invalid.xml b/library/core/src/androidTest/assets/ttml/font_size_invalid.xml
deleted file mode 100644
index 2635656445..0000000000
--- a/library/core/src/androidTest/assets/ttml/font_size_invalid.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<tt xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata" xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-  xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-  xmlns="http://www.w3.org/ns/ttml"
-  xmlns="http://www.w3.org/2006/10/ttaf1">
-  <body>
-    <div>
-      <p begin="10s" end="18s" tts:fontSize="px">invalid</p>
-    </div>
-    <div>
-      <p begin="20s" end="28s" tts:fontSize="12px 10px 9px">invalid</p>
-    </div>
-    <div>
-      <p begin="30s" end="38s" tts:fontSize="1.em">invalid dot</p>
-    </div>
-  </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/font_size_no_unit.xml b/library/core/src/androidTest/assets/ttml/font_size_no_unit.xml
deleted file mode 100644
index 126bd1ff33..0000000000
--- a/library/core/src/androidTest/assets/ttml/font_size_no_unit.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<tt xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata" xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-  xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-  xmlns="http://www.w3.org/ns/ttml"
-  xmlns="http://www.w3.org/2006/10/ttaf1">
-  <body>
-    <div>
-      <p begin="10s" end="18s" tts:fontSize="32">no unit</p>
-    </div>
-  </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/frame_rate.xml b/library/core/src/androidTest/assets/ttml/frame_rate.xml
deleted file mode 100644
index 0b06af21d9..0000000000
--- a/library/core/src/androidTest/assets/ttml/frame_rate.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<tt xmlns="http://www.w3.org/ns/ttml"
-    xmlns:ttp="http://www.w3.org/ns/ttml#parameter"
-    ttp:frameRate="50"
-    ttp:frameRateMultiplier="1000 1001"
-    ttp:tickRate="100">
-    <head>
-        <styling>
-        </styling>
-    </head>
-    <body>
-        <div>
-            <p begin="100t" end="101t">text 1</p>
-        </div>
-        <div>
-            <p begin="50000f" end="100000f">text 2</p>
-        </div>
-    </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/inherit_and_override_style.xml b/library/core/src/androidTest/assets/ttml/inherit_and_override_style.xml
deleted file mode 100644
index 599e22ef1b..0000000000
--- a/library/core/src/androidTest/assets/ttml/inherit_and_override_style.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<tt xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1"
-    xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-    xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-    xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata">
-    <head>
-        <styling>
-            <style id="s0"
-                tts:fontWeight="bold"
-                tts:fontStyle="italic"
-                tts:fontFamily="serif"
-                tts:textDecoration="underline"
-                tts:backgroundColor="blue"
-                tts:color="yellow"/>
-        </styling>
-    </head>
-    <body>
-        <div>
-            <p style="s0" begin="10s" end="18s">text 1</p>
-        </div>
-        <div>
-            <p style="s0" begin="20s" end="28s"
-                tts:fontWeight="normal"
-                tts:fontFamily="sansSerif"
-                tts:backgroundColor="red"
-                tts:color="yellow"
-                >text 2</p>
-        </div>
-    </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/inherit_global_and_parent.xml b/library/core/src/androidTest/assets/ttml/inherit_global_and_parent.xml
deleted file mode 100644
index 126bfcdba2..0000000000
--- a/library/core/src/androidTest/assets/ttml/inherit_global_and_parent.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<tt xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1"
-    xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-    xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-    xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata">
-    <head>
-        <styling>
-            <style id="s0"
-                tts:fontWeight="bold"
-                tts:fontStyle="italic"
-                tts:fontFamily="serif"
-                tts:textDecoration="underline"
-                tts:backgroundColor="blue"
-                tts:color="yellow"/>
-        </styling>
-    </head>
-    <body tts:textAlign="center">
-        <div tts:fontWeight="normal"
-            tts:fontStyle="normal"
-            tts:fontFamily="sansSerif"
-            tts:textDecoration="lineThrough"
-            tts:backgroundColor="red"
-            tts:color="lime">
-            <p begin="10s" end="18s">text 1</p>
-        </div>
-        <div tts:fontWeight="normal"
-            tts:fontStyle="normal"
-            tts:fontFamily="sansSerif"
-            tts:textDecoration="lineThrough"
-            tts:backgroundColor="red"
-            tts:color="lime">
-            <p style="s0" begin="20s" end="28s">text 2</p>
-        </div>
-    </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/inherit_multiple_styles.xml b/library/core/src/androidTest/assets/ttml/inherit_multiple_styles.xml
deleted file mode 100644
index 19ce4defc2..0000000000
--- a/library/core/src/androidTest/assets/ttml/inherit_multiple_styles.xml
+++ /dev/null
@@ -1,46 +0,0 @@
-<tt xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata"
-    xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-    xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-    xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1">
-  <head>
-    <styling>
-      <style id="s0"
-        tts:backgroundColor="blue"
-        tts:color="black"
-        tts:fontWeight="bold" />
-      <style id="s1"
-        tts:backgroundColor="black"
-        tts:color="red"
-        tts:fontFamily="sansSerif"
-        tts:fontStyle="italic"
-        tts:textDecoration="lineThrough" />
-      <style id="s2"
-        tts:backgroundColor="red" />
-      <style id="s3"
-        tts:backgroundColor="green"
-        tts:textDecoration="lineThrough" />
-    </styling>
-  </head>
-  <body>
-    <div>
-      <p style="s0 s1" begin="10s" end="18s" tts:color="yellow">text 1</p>
-    </div>
-    <div>
-      <p style="s0 s1" begin="20s" end="28s">text 2</p>
-    </div>
-    <div tts:color="yellow" tts:textDecoration="underline" tts:fontStyle="italic" tts:fontFamily="sansSerifInline">
-      <p style="s2                           s3" begin="30s" end="38s">text 2.5</p>
-    </div>
-    <div>
-      <!-- empty style attribute -->
-      <p style=" " begin="40s" end="48s">text 3</p>
-    </div>
-    <div>
-      <p style="not_existing" begin="50s" end="58s">text 4</p>
-    </div>
-    <div>
-      <p style="not_existing s2" begin="60s" end="68s">text 5</p>
-    </div>
-  </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/inherit_style.xml b/library/core/src/androidTest/assets/ttml/inherit_style.xml
deleted file mode 100644
index 808087960c..0000000000
--- a/library/core/src/androidTest/assets/ttml/inherit_style.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<tt xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1"
-    xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-    xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-    xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata">
-    <head>
-        <styling>
-            <style id="s0"
-                tts:fontWeight="bold"
-                tts:fontStyle="italic"
-                tts:fontFamily="serif"
-                tts:textDecoration="underline"
-                tts:backgroundColor="blue"
-                tts:color="yellow"/>
-        </styling>
-    </head>
-    <body>
-        <div>
-            <p style="s0" begin="10s" end="18s">text 1</p>
-        </div>
-    </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/inline_style_attributes.xml b/library/core/src/androidTest/assets/ttml/inline_style_attributes.xml
deleted file mode 100644
index 3d7f4a7d77..0000000000
--- a/library/core/src/androidTest/assets/ttml/inline_style_attributes.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<tt xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1"
-    xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-    xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-    xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata">
-    <body>
-        <div>
-            <p begin="10s" end="18s"
-                tts:fontWeight="bold"
-                tts:fontStyle="italic"
-                tts:fontFamily="serif"
-                tts:textDecoration="underline"
-                tts:backgroundColor="blue"
-                tts:color="yellow">text 1</p>
-        </div>
-        <div tts:fontWeight="normal"
-            tts:fontStyle="italic"
-            tts:fontFamily="sansSerif"
-            tts:textDecoration="lineThrough"
-            tts:backgroundColor="cyan"
-            tts:color="lime">
-            <p begin="20s" end="28s">text 2</p>
-        </div>
-    </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/multiple_regions.xml b/library/core/src/androidTest/assets/ttml/multiple_regions.xml
deleted file mode 100644
index 3bde2c99b5..0000000000
--- a/library/core/src/androidTest/assets/ttml/multiple_regions.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<tt xmlns="http://www.w3.org/ns/ttml"
-    xmlns="http://www.w3.org/2006/10/ttaf1"
-    xmlns:id="http://www.w3.org/XML/1998/namespace"
-    xmlns:ttp="http://www.w3.org/ns/ttml#parameter"
-    xmlns:tts="http://www.w3.org/ns/ttml#styling"
-    xmlns:ttm="http://www.w3.org/ns/ttml#metadata">
-    <head>
-        <layout>
-            <region xml:id="region1" ttm:origin="10% 10%" extent="20% 20%"/>
-            <region xml:id="region2" ttm:origin="40% 40%" extent="20% 20%"/>
-            <region xml:id="region3" ttm:origin="10% 80%"/>
-            <region xml:id="region4" ttm:origin="60% 10%" extent="20% 20%"/>
-            <region xml:id="ultimate" ttm:origin="45% 45%" extent="35% 35%"/>
-        </layout>
-    </head>
-    <body>
-        <div>
-            <p begin="1s" end="4s" region="region1">lorem</p>
-            <p begin="5s" end="8s" region="region2">ipsum</p>
-            <p begin="9s" end="18s" region="region3">dolor</p>
-            <p begin="1s" end="4s" region="region4">amet</p>
-        </div>
-        <div region="ultimate">
-            <p begin="21s" end="34s">She first said this</p>
-            <p begin="25s" end="34s">Then this</p>
-            <p begin="29s" end="34s">Finally this</p>
-        </div>
-    </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/ttml/no_underline_linethrough.xml b/library/core/src/androidTest/assets/ttml/no_underline_linethrough.xml
deleted file mode 100644
index d7092a9415..0000000000
--- a/library/core/src/androidTest/assets/ttml/no_underline_linethrough.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<tt xmlns:ttm="http://www.w3.org/2006/10/ttaf1#metadata" xmlns:ttp="http://www.w3.org/2006/10/ttaf1#parameter"
-  xmlns:tts="http://www.w3.org/2006/10/ttaf1#style"
-  xmlns="http://www.w3.org/ns/ttml"
-  xmlns="http://www.w3.org/2006/10/ttaf1">
-  <head>
-    <styling>
-      <style id="s0"
-        tts:textDecoration="underline"/>
-      <style id="s1"
-        tts:textDecoration="lineThrough"/>
-    </styling>
-  </head>
-  <body>
-    <div>
-      <p style="s0" begin="10s" end="18s" tts:textDecoration="noUnderline">text 1</p>
-    </div>
-    <div>
-      <p style="s1" begin="20s" end="28s" tts:textDecoration="noLineThrough">text 1</p>
-    </div>
-  </body>
-</tt>
diff --git a/library/core/src/androidTest/assets/tx3g/initialization b/library/core/src/androidTest/assets/tx3g/initialization
deleted file mode 100644
index def42b9ade..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/initialization and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/initialization_all_defaults b/library/core/src/androidTest/assets/tx3g/initialization_all_defaults
deleted file mode 100644
index be2f92b5f2..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/initialization_all_defaults and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/no_subtitle b/library/core/src/androidTest/assets/tx3g/no_subtitle
deleted file mode 100644
index 09f370e38f..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/no_subtitle and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_just_text b/library/core/src/androidTest/assets/tx3g/sample_just_text
deleted file mode 100644
index 68561eca7e..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_just_text and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_utf16_be_no_styl b/library/core/src/androidTest/assets/tx3g/sample_utf16_be_no_styl
deleted file mode 100644
index 9c3fed2b7d..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_utf16_be_no_styl and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_utf16_le_no_styl b/library/core/src/androidTest/assets/tx3g/sample_utf16_le_no_styl
deleted file mode 100644
index 03a2cb2350..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_utf16_le_no_styl and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_with_multiple_styl b/library/core/src/androidTest/assets/tx3g/sample_with_multiple_styl
deleted file mode 100644
index 48b01c3438..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_with_multiple_styl and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_with_other_extension b/library/core/src/androidTest/assets/tx3g/sample_with_other_extension
deleted file mode 100644
index e2eb7ac002..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_with_other_extension and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_with_styl b/library/core/src/androidTest/assets/tx3g/sample_with_styl
deleted file mode 100644
index b0f0d54265..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_with_styl and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_with_styl_all_defaults b/library/core/src/androidTest/assets/tx3g/sample_with_styl_all_defaults
deleted file mode 100644
index c1dec5d3c9..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_with_styl_all_defaults and /dev/null differ
diff --git a/library/core/src/androidTest/assets/tx3g/sample_with_tbox b/library/core/src/androidTest/assets/tx3g/sample_with_tbox
deleted file mode 100644
index 72a8fb97cb..0000000000
Binary files a/library/core/src/androidTest/assets/tx3g/sample_with_tbox and /dev/null differ
diff --git a/library/core/src/androidTest/assets/wav/sample.wav b/library/core/src/androidTest/assets/wav/sample.wav
deleted file mode 100644
index 958bcdd629..0000000000
Binary files a/library/core/src/androidTest/assets/wav/sample.wav and /dev/null differ
diff --git a/library/core/src/androidTest/assets/wav/sample.wav.0.dump b/library/core/src/androidTest/assets/wav/sample.wav.0.dump
deleted file mode 100644
index 9ad01284b7..0000000000
--- a/library/core/src/androidTest/assets/wav/sample.wav.0.dump
+++ /dev/null
@@ -1,41 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1000000
-  getPosition(0) = 78
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 705600
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = 32768
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 3
-  sample 0:
-    time = 884
-    flags = 1
-    data = length 32768, hash 9A8CEEBA
-  sample 1:
-    time = 372403
-    flags = 1
-    data = length 32768, hash C1717317
-  sample 2:
-    time = 743922
-    flags = 1
-    data = length 22664, hash 819F5F62
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/wav/sample.wav.1.dump b/library/core/src/androidTest/assets/wav/sample.wav.1.dump
deleted file mode 100644
index ca98cc5cf5..0000000000
--- a/library/core/src/androidTest/assets/wav/sample.wav.1.dump
+++ /dev/null
@@ -1,37 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1000000
-  getPosition(0) = 78
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 705600
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = 32768
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 2
-  sample 0:
-    time = 334195
-    flags = 1
-    data = length 32768, hash 42D6E860
-  sample 1:
-    time = 705714
-    flags = 1
-    data = length 26034, hash 62692C38
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/wav/sample.wav.2.dump b/library/core/src/androidTest/assets/wav/sample.wav.2.dump
deleted file mode 100644
index da212b220a..0000000000
--- a/library/core/src/androidTest/assets/wav/sample.wav.2.dump
+++ /dev/null
@@ -1,33 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1000000
-  getPosition(0) = 78
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 705600
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = 32768
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 1
-  sample 0:
-    time = 667528
-    flags = 1
-    data = length 29402, hash 4241604E
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/wav/sample.wav.3.dump b/library/core/src/androidTest/assets/wav/sample.wav.3.dump
deleted file mode 100644
index 3275ba6ef5..0000000000
--- a/library/core/src/androidTest/assets/wav/sample.wav.3.dump
+++ /dev/null
@@ -1,33 +0,0 @@
-seekMap:
-  isSeekable = true
-  duration = 1000000
-  getPosition(0) = 78
-numberOfTracks = 1
-track 0:
-  format:
-    bitrate = 705600
-    id = null
-    containerMimeType = null
-    sampleMimeType = audio/raw
-    maxInputSize = 32768
-    width = -1
-    height = -1
-    frameRate = -1.0
-    rotationDegrees = -1
-    pixelWidthHeightRatio = -1.0
-    channelCount = 1
-    sampleRate = 44100
-    pcmEncoding = 2
-    encoderDelay = -1
-    encoderPadding = -1
-    subsampleOffsetUs = 9223372036854775807
-    selectionFlags = 0
-    language = null
-    drmInitData = -
-    initializationData:
-  sample count = 1
-  sample 0:
-    time = 1000861
-    flags = 1
-    data = length 2, hash 116
-tracksEnded = true
diff --git a/library/core/src/androidTest/assets/webm/vorbis_codec_private b/library/core/src/androidTest/assets/webm/vorbis_codec_private
deleted file mode 100644
index 6a613449a7..0000000000
Binary files a/library/core/src/androidTest/assets/webm/vorbis_codec_private and /dev/null differ
diff --git a/library/core/src/androidTest/assets/webvtt/empty b/library/core/src/androidTest/assets/webvtt/empty
deleted file mode 100644
index 8b13789179..0000000000
--- a/library/core/src/androidTest/assets/webvtt/empty
+++ /dev/null
@@ -1 +0,0 @@
-
diff --git a/library/core/src/androidTest/assets/webvtt/typical b/library/core/src/androidTest/assets/webvtt/typical
deleted file mode 100644
index d4298da516..0000000000
--- a/library/core/src/androidTest/assets/webvtt/typical
+++ /dev/null
@@ -1,7 +0,0 @@
-WEBVTT # This comment is allowed
-
-00:00.000 --> 00:01.234
-This is the first subtitle.
-
-00:02.345 --> 00:03.456
-This is the second subtitle.
diff --git a/library/core/src/androidTest/assets/webvtt/typical_with_comments b/library/core/src/androidTest/assets/webvtt/typical_with_comments
deleted file mode 100644
index 9b75c00945..0000000000
--- a/library/core/src/androidTest/assets/webvtt/typical_with_comments
+++ /dev/null
@@ -1,20 +0,0 @@
-WEBVTT
-
-NOTE
-This is a comment block
-with multiple lines
-
-1
-00:00.000 --> 00:01.234
-This is the first subtitle.
-
-NOTE Single line comment with a space
-
-NOTE	Single line comment with a tab
-
-2
-00:02.345 --> 00:03.456
-This is the second subtitle.
-
-NOTE
-File ending with a comment
diff --git a/library/core/src/androidTest/assets/webvtt/typical_with_identifiers b/library/core/src/androidTest/assets/webvtt/typical_with_identifiers
deleted file mode 100644
index f6ac990e99..0000000000
--- a/library/core/src/androidTest/assets/webvtt/typical_with_identifiers
+++ /dev/null
@@ -1,9 +0,0 @@
-WEBVTT
-
-1
-00:00.000 --> 00:01.234
-This is the first subtitle.
-
-2
-00:02.345 --> 00:03.456
-This is the second subtitle.
diff --git a/library/core/src/androidTest/assets/webvtt/with_bad_cue_header b/library/core/src/androidTest/assets/webvtt/with_bad_cue_header
deleted file mode 100644
index 0cb4e8099e..0000000000
--- a/library/core/src/androidTest/assets/webvtt/with_bad_cue_header
+++ /dev/null
@@ -1,10 +0,0 @@
-WEBVTT # This comment is allowed
-
-00:00.000 --> 00:01.234
-This is the first subtitle.
-
-00:02.badbadbadbadbadbad --> 00:03.456
-This is the second subtitle.
-
-00:04.000 --> 00:05.000
-This is the third subtitle.
diff --git a/library/core/src/androidTest/assets/webvtt/with_css_complex_selectors b/library/core/src/androidTest/assets/webvtt/with_css_complex_selectors
deleted file mode 100644
index 62e3348ae9..0000000000
--- a/library/core/src/androidTest/assets/webvtt/with_css_complex_selectors
+++ /dev/null
@@ -1,40 +0,0 @@
-WEBVTT
-
-STYLE
-::cue(\n#id ){text-decoration:underline;}
-
-STYLE
-::cue(#id.class1.class2 ){ color: violet;}
-
-STYLE
-::cue(lang){font-family:Courier}
-
-STYLE
-::cue(.class.another ){font-weight: bold;}
-
-STYLE
-::cue(v.class[voice="Strider Trancos"] ){ font-weight:bold; }
-
-STYLE
-::cue(v#anId.class1.class2[voice="Robert"] ){ font-style:italic; }
-
-id
-00:00.000 --> 00:01.001
-This should be underlined and <lang.class1.class2> courier and violet.
-
-íd
-00:02.000 --> 00:02.001
-This <lang.class1.class2>should be just courier.
-
-_id
-00:02.500 --> 00:02.501
-This <lang.class.another>should be courier and bold.
-
-00:04.000 --> 00:04.001
-This <v Strider Trancos> shouldn't be bold.</v>
-This <v.class.clazz Strider Trancos> should be bold.
-
-anId
-00:05.000 --> 00:05.001
-This is <v.class1.class3.class2 Pipo> specific </v>
-<v.class1.class3.class2 Robert> But this is more italic</v>
diff --git a/library/core/src/androidTest/assets/webvtt/with_css_styles b/library/core/src/androidTest/assets/webvtt/with_css_styles
deleted file mode 100644
index 2056d50adf..0000000000
--- a/library/core/src/androidTest/assets/webvtt/with_css_styles
+++ /dev/null
@@ -1,39 +0,0 @@
-WEBVTT
-
-STYLE
-::cue {
-  background-color: green;
-  color: papayawhip;
-}
-/* Style blocks cannot use blank lines nor "dash dash greater than" */
-
-NOTE comment blocks can be used between style blocks.
-
-STYLE
-::cue(#id2) {
-  color: peachpuff;
-}
-
-STYLE
-::cue(v[voice="LaGord"]) { background-color: lime }
-
-STYLE
-::cue(v[voice="The Frog"]) { font-weight: bold }
-
-STYLE
-::cue(v){text-decoration:underline}
-
-id1
-00:00.000 --> 00:01.234
-This is the first subtitle.
-
-id2
-00:02.345 --> 00:03.456
-This is the second subtitle.
-
-00:20.000 --> 00:21.000
-This is a <v.clazz Mary>reference by element</v>
-
-00:25.000 --> 00:28.000
-<v  LaGord>You are an idiot</v>
-<v  The Frog>You don't have the guts</v>
diff --git a/library/core/src/androidTest/assets/webvtt/with_positioning b/library/core/src/androidTest/assets/webvtt/with_positioning
deleted file mode 100644
index 06a81df901..0000000000
--- a/library/core/src/androidTest/assets/webvtt/with_positioning
+++ /dev/null
@@ -1,33 +0,0 @@
-WEBVTT
-
-NOTE Position with percentage and position alignment
-
-00:00:00.000 --> 00:00:01.234 position:10%,start align:start size:35%
-This is the first subtitle.
-
-NOTE Wrong position provided. It should be provided as
-a percentage value
-
-00:02.345 --> 00:03.456 position:10 align:end size:35%
-This is the second subtitle.
-
-NOTE Line as percentage and line alignment
-
-00:04.000 --> 00:05.000 line:45%,end align:middle size:35%
-This is the third subtitle.
-
-NOTE Line as absolute negative number and without line alignment.
-
-00:06.000 --> 00:07.000 line:-10 align:middle
-This is the fourth subtitle.
-
-NOTE The positioning alignment should be inherited from align.
-
-00:07.000 --> 00:08.000 position:10% align:end size:10%
-This is the fifth subtitle.
-
-NOTE In newer drafts, align:middle has been replaced by align:center
-
-00:10.000 --> 00:11.000 line:45%,end align:center size:35%
-This is the sixth subtitle.
-
diff --git a/library/core/src/androidTest/assets/webvtt/with_tags b/library/core/src/androidTest/assets/webvtt/with_tags
deleted file mode 100644
index 56610f84fc..0000000000
--- a/library/core/src/androidTest/assets/webvtt/with_tags
+++ /dev/null
@@ -1,13 +0,0 @@
-WEBVTT
-
-00:00.000 --> 00:01.234
-This is the <i>first</i> subtitle.
-
-00:02.345 --> 00:03.456
-This is the <b><i>second</b></i> subtitle.
-
-00:04.000 --> 00:05.000
-This is the <c.red.caps>third</c> subtitle.
-
-00:06.000 --> 00:07.000
-This is the &lt;fourth&gt; &amp;subtitle.
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/CTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/CTest.java
deleted file mode 100644
index ddcdc4ac8a..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/CTest.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2;
-
-import android.annotation.SuppressLint;
-import android.media.MediaCodec;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link C}.
- */
-public class CTest extends TestCase {
-
-  @SuppressLint("InlinedApi")
-  public static void testConstants() {
-    // Sanity check that constant values match those defined by the platform.
-    assertEquals(MediaCodec.BUFFER_FLAG_KEY_FRAME, C.BUFFER_FLAG_KEY_FRAME);
-    assertEquals(MediaCodec.BUFFER_FLAG_END_OF_STREAM, C.BUFFER_FLAG_END_OF_STREAM);
-    assertEquals(MediaCodec.CRYPTO_MODE_AES_CTR, C.CRYPTO_MODE_AES_CTR);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/ExoPlayerTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/ExoPlayerTest.java
deleted file mode 100644
index bf4ea6e972..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/ExoPlayerTest.java
+++ /dev/null
@@ -1,263 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2;
-
-import android.util.Pair;
-import com.google.android.exoplayer2.source.MediaSource;
-import com.google.android.exoplayer2.source.TrackGroup;
-import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.testutil.ExoPlayerWrapper;
-import com.google.android.exoplayer2.testutil.FakeMediaClockRenderer;
-import com.google.android.exoplayer2.testutil.FakeMediaSource;
-import com.google.android.exoplayer2.testutil.FakeRenderer;
-import com.google.android.exoplayer2.testutil.FakeTimeline;
-import com.google.android.exoplayer2.testutil.FakeTimeline.TimelineWindowDefinition;
-import com.google.android.exoplayer2.util.MimeTypes;
-import java.util.LinkedList;
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link ExoPlayer}.
- */
-public final class ExoPlayerTest extends TestCase {
-
-  /**
-   * For tests that rely on the player transitioning to the ended state, the duration in
-   * milliseconds after starting the player before the test will time out. This is to catch cases
-   * where the player under test is not making progress, in which case the test should fail.
-   */
-  private static final int TIMEOUT_MS = 10000;
-
-  private static final Format TEST_VIDEO_FORMAT = Format.createVideoSampleFormat(null,
-      MimeTypes.VIDEO_H264, null, Format.NO_VALUE, Format.NO_VALUE, 1280, 720, Format.NO_VALUE,
-      null, null);
-  private static final Format TEST_AUDIO_FORMAT =  Format.createAudioSampleFormat(null,
-      MimeTypes.AUDIO_AAC, null, Format.NO_VALUE, Format.NO_VALUE, 2, 44100, null, null, 0, null);
-
-  /**
-   * Tests playback of a source that exposes an empty timeline. Playback is expected to end without
-   * error.
-   */
-  public void testPlayEmptyTimeline() throws Exception {
-    ExoPlayerWrapper playerWrapper = new ExoPlayerWrapper();
-    Timeline timeline = Timeline.EMPTY;
-    MediaSource mediaSource = new FakeMediaSource(timeline, null);
-    FakeRenderer renderer = new FakeRenderer();
-    playerWrapper.setup(mediaSource, renderer);
-    playerWrapper.blockUntilEnded(TIMEOUT_MS);
-    assertEquals(0, playerWrapper.positionDiscontinuityCount);
-    assertEquals(0, renderer.formatReadCount);
-    assertEquals(0, renderer.bufferReadCount);
-    assertFalse(renderer.isEnded);
-    playerWrapper.assertSourceInfosEquals(Pair.create(timeline, null));
-  }
-
-  /**
-   * Tests playback of a source that exposes a single period.
-   */
-  public void testPlaySinglePeriodTimeline() throws Exception {
-    ExoPlayerWrapper playerWrapper = new ExoPlayerWrapper();
-    Timeline timeline = new FakeTimeline(new TimelineWindowDefinition(false, false, 0));
-    Object manifest = new Object();
-    MediaSource mediaSource = new FakeMediaSource(timeline, manifest, TEST_VIDEO_FORMAT);
-    FakeRenderer renderer = new FakeRenderer(TEST_VIDEO_FORMAT);
-    playerWrapper.setup(mediaSource, renderer);
-    playerWrapper.blockUntilEnded(TIMEOUT_MS);
-    assertEquals(0, playerWrapper.positionDiscontinuityCount);
-    assertEquals(1, renderer.formatReadCount);
-    assertEquals(1, renderer.bufferReadCount);
-    assertTrue(renderer.isEnded);
-    assertEquals(new TrackGroupArray(new TrackGroup(TEST_VIDEO_FORMAT)), playerWrapper.trackGroups);
-    playerWrapper.assertSourceInfosEquals(Pair.create(timeline, manifest));
-  }
-
-  /**
-   * Tests playback of a source that exposes three periods.
-   */
-  public void testPlayMultiPeriodTimeline() throws Exception {
-    ExoPlayerWrapper playerWrapper = new ExoPlayerWrapper();
-    Timeline timeline = new FakeTimeline(
-        new TimelineWindowDefinition(false, false, 0),
-        new TimelineWindowDefinition(false, false, 0),
-        new TimelineWindowDefinition(false, false, 0));
-    MediaSource mediaSource = new FakeMediaSource(timeline, null, TEST_VIDEO_FORMAT);
-    FakeRenderer renderer = new FakeRenderer(TEST_VIDEO_FORMAT);
-    playerWrapper.setup(mediaSource, renderer);
-    playerWrapper.blockUntilEnded(TIMEOUT_MS);
-    assertEquals(2, playerWrapper.positionDiscontinuityCount);
-    assertEquals(3, renderer.formatReadCount);
-    assertEquals(1, renderer.bufferReadCount);
-    assertTrue(renderer.isEnded);
-    playerWrapper.assertSourceInfosEquals(Pair.create(timeline, null));
-  }
-
-  /**
-   * Tests that the player does not unnecessarily reset renderers when playing a multi-period
-   * source.
-   */
-  public void testReadAheadToEndDoesNotResetRenderer() throws Exception {
-    final ExoPlayerWrapper playerWrapper = new ExoPlayerWrapper();
-    Timeline timeline = new FakeTimeline(
-        new TimelineWindowDefinition(false, false, 10),
-        new TimelineWindowDefinition(false, false, 10),
-        new TimelineWindowDefinition(false, false, 10));
-    MediaSource mediaSource = new FakeMediaSource(timeline, null, TEST_VIDEO_FORMAT,
-        TEST_AUDIO_FORMAT);
-
-    FakeRenderer videoRenderer = new FakeRenderer(TEST_VIDEO_FORMAT);
-    FakeMediaClockRenderer audioRenderer = new FakeMediaClockRenderer(TEST_AUDIO_FORMAT) {
-
-      @Override
-      public long getPositionUs() {
-        // Simulate the playback position lagging behind the reading position: the renderer media
-        // clock position will be the start of the timeline until the stream is set to be final, at
-        // which point it jumps to the end of the timeline allowing the playing period to advance.
-        // TODO: Avoid hard-coding ExoPlayerImplInternal.RENDERER_TIMESTAMP_OFFSET_US.
-        return isCurrentStreamFinal() ? 60000030 : 60000000;
-      }
-
-      @Override
-      public PlaybackParameters setPlaybackParameters(PlaybackParameters playbackParameters) {
-        return PlaybackParameters.DEFAULT;
-      }
-
-      @Override
-      public PlaybackParameters getPlaybackParameters() {
-        return PlaybackParameters.DEFAULT;
-      }
-
-      @Override
-      public boolean isEnded() {
-        // Allow playback to end once the final period is playing.
-        return playerWrapper.positionDiscontinuityCount == 2;
-      }
-
-    };
-    playerWrapper.setup(mediaSource, videoRenderer, audioRenderer);
-    playerWrapper.blockUntilEnded(TIMEOUT_MS);
-    assertEquals(2, playerWrapper.positionDiscontinuityCount);
-    assertEquals(1, audioRenderer.positionResetCount);
-    assertTrue(videoRenderer.isEnded);
-    assertTrue(audioRenderer.isEnded);
-    playerWrapper.assertSourceInfosEquals(Pair.create(timeline, null));
-  }
-
-  public void testRepreparationGivesFreshSourceInfo() throws Exception {
-    ExoPlayerWrapper playerWrapper = new ExoPlayerWrapper();
-    Timeline timeline = new FakeTimeline(new TimelineWindowDefinition(false, false, 0));
-    FakeRenderer renderer = new FakeRenderer(TEST_VIDEO_FORMAT);
-
-    // Prepare the player with a source with the first manifest and a non-empty timeline
-    Object firstSourceManifest = new Object();
-    playerWrapper.setup(new FakeMediaSource(timeline, firstSourceManifest, TEST_VIDEO_FORMAT),
-        renderer);
-    playerWrapper.blockUntilSourceInfoRefreshed(TIMEOUT_MS);
-
-    // Prepare the player again with a source and a new manifest, which will never be exposed.
-    final CountDownLatch queuedSourceInfoCountDownLatch = new CountDownLatch(1);
-    final CountDownLatch completePreparationCountDownLatch = new CountDownLatch(1);
-    playerWrapper.prepare(new FakeMediaSource(timeline, new Object(), TEST_VIDEO_FORMAT) {
-      @Override
-      public void prepareSource(ExoPlayer player, boolean isTopLevelSource, Listener listener) {
-        super.prepareSource(player, isTopLevelSource, listener);
-        // We've queued a source info refresh on the playback thread's event queue. Allow the test
-        // thread to prepare the player with the third source, and block this thread (the playback
-        // thread) until the test thread's call to prepare() has returned.
-        queuedSourceInfoCountDownLatch.countDown();
-        try {
-          completePreparationCountDownLatch.await();
-        } catch (InterruptedException e) {
-          throw new IllegalStateException(e);
-        }
-      }
-    });
-
-    // Prepare the player again with a third source.
-    queuedSourceInfoCountDownLatch.await();
-    Object thirdSourceManifest = new Object();
-    playerWrapper.prepare(new FakeMediaSource(timeline, thirdSourceManifest, TEST_VIDEO_FORMAT));
-    completePreparationCountDownLatch.countDown();
-
-    // Wait for playback to complete.
-    playerWrapper.blockUntilEnded(TIMEOUT_MS);
-    assertEquals(0, playerWrapper.positionDiscontinuityCount);
-    assertEquals(1, renderer.formatReadCount);
-    assertEquals(1, renderer.bufferReadCount);
-    assertTrue(renderer.isEnded);
-    assertEquals(new TrackGroupArray(new TrackGroup(TEST_VIDEO_FORMAT)), playerWrapper.trackGroups);
-
-    // The first source's preparation completed with a non-empty timeline. When the player was
-    // re-prepared with the second source, it immediately exposed an empty timeline, but the source
-    // info refresh from the second source was suppressed as we re-prepared with the third source.
-    playerWrapper.assertSourceInfosEquals(
-        Pair.create(timeline, firstSourceManifest),
-        Pair.create(Timeline.EMPTY, null),
-        Pair.create(timeline, thirdSourceManifest));
-  }
-
-  public void testRepeatModeChanges() throws Exception {
-    Timeline timeline = new FakeTimeline(
-        new TimelineWindowDefinition(true, false, 100000),
-        new TimelineWindowDefinition(true, false, 100000),
-        new TimelineWindowDefinition(true, false, 100000));
-    final int[] actionSchedule = { // 0 -> 1
-        Player.REPEAT_MODE_ONE, // 1 -> 1
-        Player.REPEAT_MODE_OFF, // 1 -> 2
-        Player.REPEAT_MODE_ONE, // 2 -> 2
-        Player.REPEAT_MODE_ALL, // 2 -> 0
-        Player.REPEAT_MODE_ONE, // 0 -> 0
-        -1, // 0 -> 0
-        Player.REPEAT_MODE_OFF, // 0 -> 1
-        -1, // 1 -> 2
-        -1  // 2 -> ended
-    };
-    int[] expectedWindowIndices = {1, 1, 2, 2, 0, 0, 0, 1, 2};
-    final LinkedList<Integer> windowIndices = new LinkedList<>();
-    final CountDownLatch actionCounter = new CountDownLatch(actionSchedule.length);
-    ExoPlayerWrapper playerWrapper = new ExoPlayerWrapper() {
-      @Override
-      @SuppressWarnings("ResourceType")
-      public void onPositionDiscontinuity() {
-        super.onPositionDiscontinuity();
-        int actionIndex = actionSchedule.length - (int) actionCounter.getCount();
-        if (actionSchedule[actionIndex] != -1) {
-          player.setRepeatMode(actionSchedule[actionIndex]);
-        }
-        windowIndices.add(player.getCurrentWindowIndex());
-        actionCounter.countDown();
-      }
-    };
-    MediaSource mediaSource = new FakeMediaSource(timeline, null, TEST_VIDEO_FORMAT);
-    FakeRenderer renderer = new FakeRenderer(TEST_VIDEO_FORMAT);
-    playerWrapper.setup(mediaSource, renderer);
-    boolean finished = actionCounter.await(TIMEOUT_MS, TimeUnit.MILLISECONDS);
-    playerWrapper.release();
-    assertTrue("Test playback timed out waiting for action schedule to end.", finished);
-    if (playerWrapper.exception != null) {
-      throw playerWrapper.exception;
-    }
-    assertEquals(expectedWindowIndices.length, windowIndices.size());
-    for (int i = 0; i < expectedWindowIndices.length; i++) {
-      assertEquals(expectedWindowIndices[i], windowIndices.get(i).intValue());
-    }
-    assertEquals(9, playerWrapper.positionDiscontinuityCount);
-    assertTrue(renderer.isEnded);
-    playerWrapper.assertSourceInfosEquals(Pair.create(timeline, null));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/FormatTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/FormatTest.java
deleted file mode 100644
index bdea08638b..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/FormatTest.java
+++ /dev/null
@@ -1,151 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2;
-
-import static com.google.android.exoplayer2.C.WIDEVINE_UUID;
-import static com.google.android.exoplayer2.util.MimeTypes.VIDEO_MP4;
-import static com.google.android.exoplayer2.util.MimeTypes.VIDEO_WEBM;
-
-import android.annotation.SuppressLint;
-import android.annotation.TargetApi;
-import android.media.MediaFormat;
-import android.os.Parcel;
-import com.google.android.exoplayer2.drm.DrmInitData;
-import com.google.android.exoplayer2.metadata.Metadata;
-import com.google.android.exoplayer2.metadata.id3.TextInformationFrame;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.util.MimeTypes;
-import com.google.android.exoplayer2.util.Util;
-import com.google.android.exoplayer2.video.ColorInfo;
-import java.nio.ByteBuffer;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link Format}.
- */
-public final class FormatTest extends TestCase {
-
-  private static final List<byte[]> INIT_DATA;
-  static {
-    byte[] initData1 = new byte[] {1, 2, 3};
-    byte[] initData2 = new byte[] {4, 5, 6};
-    List<byte[]> initData = new ArrayList<>();
-    initData.add(initData1);
-    initData.add(initData2);
-    INIT_DATA = Collections.unmodifiableList(initData);
-  }
-
-  public void testParcelable() {
-    DrmInitData.SchemeData DRM_DATA_1 = new DrmInitData.SchemeData(WIDEVINE_UUID, "cenc", VIDEO_MP4,
-        TestUtil.buildTestData(128, 1 /* data seed */));
-    DrmInitData.SchemeData DRM_DATA_2 = new DrmInitData.SchemeData(C.UUID_NIL, null, VIDEO_WEBM,
-        TestUtil.buildTestData(128, 1 /* data seed */));
-    DrmInitData drmInitData = new DrmInitData(DRM_DATA_1, DRM_DATA_2);
-    byte[] projectionData = new byte[] {1, 2, 3};
-    Metadata metadata = new Metadata(
-        new TextInformationFrame("id1", "description1", "value1"),
-        new TextInformationFrame("id2", "description2", "value2"));
-    ColorInfo colorInfo =  new ColorInfo(C.COLOR_SPACE_BT709,
-        C.COLOR_RANGE_LIMITED, C.COLOR_TRANSFER_SDR, new byte[] {1, 2, 3, 4, 5, 6, 7});
-
-    Format formatToParcel = new Format("id", MimeTypes.VIDEO_MP4, MimeTypes.VIDEO_H264, null,
-        1024, 2048, 1920, 1080, 24, 90, 2, projectionData, C.STEREO_MODE_TOP_BOTTOM, colorInfo, 6,
-        44100, C.ENCODING_PCM_24BIT, 1001, 1002, 0, "und", Format.NO_VALUE,
-        Format.OFFSET_SAMPLE_RELATIVE, INIT_DATA, drmInitData, metadata);
-
-    Parcel parcel = Parcel.obtain();
-    formatToParcel.writeToParcel(parcel, 0);
-    parcel.setDataPosition(0);
-
-    Format formatFromParcel = Format.CREATOR.createFromParcel(parcel);
-    assertEquals(formatToParcel, formatFromParcel);
-
-    parcel.recycle();
-  }
-
-  public void testConversionToFrameworkMediaFormat() {
-    if (Util.SDK_INT < 16) {
-      // Test doesn't apply.
-      return;
-    }
-
-    testConversionToFrameworkMediaFormatV16(Format.createVideoSampleFormat(null, "video/xyz", null,
-        5000, 102400, 1280, 720, 30, INIT_DATA, null));
-    testConversionToFrameworkMediaFormatV16(Format.createVideoSampleFormat(null, "video/xyz", null,
-        5000, Format.NO_VALUE, 1280, 720, 30, null, null));
-    testConversionToFrameworkMediaFormatV16(Format.createAudioSampleFormat(null, "audio/xyz", null,
-        500, 128, 5, 44100, INIT_DATA, null, 0, null));
-    testConversionToFrameworkMediaFormatV16(Format.createAudioSampleFormat(null, "audio/xyz", null,
-        500, Format.NO_VALUE, 5, 44100, null, null, 0, null));
-    testConversionToFrameworkMediaFormatV16(Format.createTextSampleFormat(null, "text/xyz", 0,
-        "eng"));
-    testConversionToFrameworkMediaFormatV16(Format.createTextSampleFormat(null, "text/xyz", 0,
-        null));
-  }
-
-  @SuppressLint("InlinedApi")
-  @TargetApi(16)
-  private static void testConversionToFrameworkMediaFormatV16(Format in) {
-    MediaFormat out = in.getFrameworkMediaFormatV16();
-    assertEquals(in.sampleMimeType, out.getString(MediaFormat.KEY_MIME));
-    assertOptionalV16(out, MediaFormat.KEY_LANGUAGE, in.language);
-    assertOptionalV16(out, MediaFormat.KEY_MAX_INPUT_SIZE, in.maxInputSize);
-    assertOptionalV16(out, MediaFormat.KEY_WIDTH, in.width);
-    assertOptionalV16(out, MediaFormat.KEY_HEIGHT, in.height);
-    assertOptionalV16(out, MediaFormat.KEY_CHANNEL_COUNT, in.channelCount);
-    assertOptionalV16(out, MediaFormat.KEY_SAMPLE_RATE, in.sampleRate);
-    assertOptionalV16(out, MediaFormat.KEY_FRAME_RATE, in.frameRate);
-
-    for (int i = 0; i < in.initializationData.size(); i++) {
-      byte[] originalData = in.initializationData.get(i);
-      ByteBuffer frameworkBuffer = out.getByteBuffer("csd-" + i);
-      byte[] frameworkData = Arrays.copyOf(frameworkBuffer.array(), frameworkBuffer.limit());
-      assertTrue(Arrays.equals(originalData, frameworkData));
-    }
-  }
-
-  @TargetApi(16)
-  private static void assertOptionalV16(MediaFormat format, String key, String value) {
-    if (value == null) {
-      assertFalse(format.containsKey(key));
-    } else {
-      assertEquals(value, format.getString(key));
-    }
-  }
-
-  @TargetApi(16)
-  private static void assertOptionalV16(MediaFormat format, String key, int value) {
-    if (value == Format.NO_VALUE) {
-      assertFalse(format.containsKey(key));
-    } else {
-      assertEquals(value, format.getInteger(key));
-    }
-  }
-
-  @TargetApi(16)
-  private static void assertOptionalV16(MediaFormat format, String key, float value) {
-    if (value == Format.NO_VALUE) {
-      assertFalse(format.containsKey(key));
-    } else {
-      assertEquals(value, format.getFloat(key));
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/TimelineTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/TimelineTest.java
deleted file mode 100644
index d9ee27bd62..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/TimelineTest.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2;
-
-import com.google.android.exoplayer2.testutil.FakeTimeline;
-import com.google.android.exoplayer2.testutil.FakeTimeline.TimelineWindowDefinition;
-import com.google.android.exoplayer2.testutil.TimelineAsserts;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link Timeline}.
- */
-public class TimelineTest extends TestCase {
-
-  public void testEmptyTimeline() {
-    TimelineAsserts.assertEmpty(Timeline.EMPTY);
-  }
-
-  public void testSinglePeriodTimeline() {
-    Timeline timeline = new FakeTimeline(new TimelineWindowDefinition(1, 111));
-    TimelineAsserts.assertWindowIds(timeline, 111);
-    TimelineAsserts.assertPeriodCounts(timeline, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-  }
-
-  public void testMultiPeriodTimeline() {
-    Timeline timeline = new FakeTimeline(new TimelineWindowDefinition(5, 111));
-    TimelineAsserts.assertWindowIds(timeline, 111);
-    TimelineAsserts.assertPeriodCounts(timeline, 5);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-  }
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/drm/DrmInitDataTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/drm/DrmInitDataTest.java
deleted file mode 100644
index aa8cbfdb62..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/drm/DrmInitDataTest.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.drm;
-
-import static com.google.android.exoplayer2.C.PLAYREADY_UUID;
-import static com.google.android.exoplayer2.C.WIDEVINE_UUID;
-import static com.google.android.exoplayer2.util.MimeTypes.VIDEO_MP4;
-
-import android.os.Parcel;
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.drm.DrmInitData.SchemeData;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link DrmInitData}.
- */
-public class DrmInitDataTest extends TestCase {
-
-  private static final SchemeData DATA_1 = new SchemeData(WIDEVINE_UUID, "cbc1", VIDEO_MP4,
-      TestUtil.buildTestData(128, 1 /* data seed */));
-  private static final SchemeData DATA_2 = new SchemeData(PLAYREADY_UUID,  null, VIDEO_MP4,
-      TestUtil.buildTestData(128, 2 /* data seed */));
-  private static final SchemeData DATA_1B = new SchemeData(WIDEVINE_UUID, "cbc1", VIDEO_MP4,
-      TestUtil.buildTestData(128, 1 /* data seed */));
-  private static final SchemeData DATA_2B = new SchemeData(PLAYREADY_UUID, null, VIDEO_MP4,
-      TestUtil.buildTestData(128, 2 /* data seed */));
-  private static final SchemeData DATA_UNIVERSAL = new SchemeData(C.UUID_NIL, null, VIDEO_MP4,
-      TestUtil.buildTestData(128, 3 /* data seed */));
-
-  public void testParcelable() {
-    DrmInitData drmInitDataToParcel = new DrmInitData(DATA_1, DATA_2);
-
-    Parcel parcel = Parcel.obtain();
-    drmInitDataToParcel.writeToParcel(parcel, 0);
-    parcel.setDataPosition(0);
-
-    DrmInitData drmInitDataFromParcel = DrmInitData.CREATOR.createFromParcel(parcel);
-    assertEquals(drmInitDataToParcel, drmInitDataFromParcel);
-
-    parcel.recycle();
-  }
-
-  public void testEquals() {
-    DrmInitData drmInitData = new DrmInitData(DATA_1, DATA_2);
-
-    // Basic non-referential equality test.
-    DrmInitData testInitData = new DrmInitData(DATA_1, DATA_2);
-    assertEquals(drmInitData, testInitData);
-    assertEquals(drmInitData.hashCode(), testInitData.hashCode());
-
-    // Basic non-referential equality test with non-referential scheme data.
-    testInitData = new DrmInitData(DATA_1B, DATA_2B);
-    assertEquals(drmInitData, testInitData);
-    assertEquals(drmInitData.hashCode(), testInitData.hashCode());
-
-    // Passing the scheme data in reverse order shouldn't affect equality.
-    testInitData = new DrmInitData(DATA_2, DATA_1);
-    assertEquals(drmInitData, testInitData);
-    assertEquals(drmInitData.hashCode(), testInitData.hashCode());
-
-    // Ditto.
-    testInitData = new DrmInitData(DATA_2B, DATA_1B);
-    assertEquals(drmInitData, testInitData);
-    assertEquals(drmInitData.hashCode(), testInitData.hashCode());
-
-    // Different number of tuples should affect equality.
-    testInitData = new DrmInitData(DATA_1);
-    MoreAsserts.assertNotEqual(drmInitData, testInitData);
-
-    // Different data in one of the tuples should affect equality.
-    testInitData = new DrmInitData(DATA_1, DATA_UNIVERSAL);
-    MoreAsserts.assertNotEqual(drmInitData, testInitData);
-  }
-
-  public void testGet() {
-    // Basic matching.
-    DrmInitData testInitData = new DrmInitData(DATA_1, DATA_2);
-    assertEquals(DATA_1, testInitData.get(WIDEVINE_UUID));
-    assertEquals(DATA_2, testInitData.get(PLAYREADY_UUID));
-    assertNull(testInitData.get(C.UUID_NIL));
-
-    // Basic matching including universal data.
-    testInitData = new DrmInitData(DATA_1, DATA_2, DATA_UNIVERSAL);
-    assertEquals(DATA_1, testInitData.get(WIDEVINE_UUID));
-    assertEquals(DATA_2, testInitData.get(PLAYREADY_UUID));
-    assertEquals(DATA_UNIVERSAL, testInitData.get(C.UUID_NIL));
-
-    // Passing the scheme data in reverse order shouldn't affect equality.
-    testInitData = new DrmInitData(DATA_UNIVERSAL, DATA_2, DATA_1);
-    assertEquals(DATA_1, testInitData.get(WIDEVINE_UUID));
-    assertEquals(DATA_2, testInitData.get(PLAYREADY_UUID));
-    assertEquals(DATA_UNIVERSAL, testInitData.get(C.UUID_NIL));
-
-    // Universal data should be returned in the absence of a specific match.
-    testInitData = new DrmInitData(DATA_1, DATA_UNIVERSAL);
-    assertEquals(DATA_1, testInitData.get(WIDEVINE_UUID));
-    assertEquals(DATA_UNIVERSAL, testInitData.get(PLAYREADY_UUID));
-    assertEquals(DATA_UNIVERSAL, testInitData.get(C.UUID_NIL));
-  }
-
-  public void testDuplicateSchemeDataRejected() {
-    try {
-      new DrmInitData(DATA_1, DATA_1);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-
-    try {
-      new DrmInitData(DATA_1, DATA_1B);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-
-    try {
-      new DrmInitData(DATA_1, DATA_2, DATA_1B);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-  }
-
-  public void testSchemeDataMatches() {
-    assertTrue(DATA_1.matches(WIDEVINE_UUID));
-    assertFalse(DATA_1.matches(PLAYREADY_UUID));
-    assertFalse(DATA_2.matches(C.UUID_NIL));
-
-    assertFalse(DATA_2.matches(WIDEVINE_UUID));
-    assertTrue(DATA_2.matches(PLAYREADY_UUID));
-    assertFalse(DATA_2.matches(C.UUID_NIL));
-
-    assertTrue(DATA_UNIVERSAL.matches(WIDEVINE_UUID));
-    assertTrue(DATA_UNIVERSAL.matches(PLAYREADY_UUID));
-    assertTrue(DATA_UNIVERSAL.matches(C.UUID_NIL));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/drm/OfflineLicenseHelperTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/drm/OfflineLicenseHelperTest.java
deleted file mode 100644
index 9f5b067b5e..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/drm/OfflineLicenseHelperTest.java
+++ /dev/null
@@ -1,161 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.android.exoplayer2.drm;
-
-import static org.mockito.Matchers.any;
-import static org.mockito.Mockito.when;
-
-import android.test.InstrumentationTestCase;
-import android.test.MoreAsserts;
-import android.util.Pair;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.drm.DrmInitData.SchemeData;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.upstream.HttpDataSource;
-import java.util.HashMap;
-import org.mockito.Mock;
-
-/**
- * Tests {@link OfflineLicenseHelper}.
- */
-public class OfflineLicenseHelperTest extends InstrumentationTestCase {
-
-  private OfflineLicenseHelper<?> offlineLicenseHelper;
-  @Mock private HttpDataSource httpDataSource;
-  @Mock private MediaDrmCallback mediaDrmCallback;
-  @Mock private ExoMediaDrm<ExoMediaCrypto> mediaDrm;
-
-  @Override
-  protected void setUp() throws Exception {
-    TestUtil.setUpMockito(this);
-    when(mediaDrm.openSession()).thenReturn(new byte[] {1, 2, 3});
-    offlineLicenseHelper = new OfflineLicenseHelper<>(mediaDrm, mediaDrmCallback, null);
-  }
-
-  @Override
-  protected void tearDown() throws Exception {
-    offlineLicenseHelper.release();
-    offlineLicenseHelper = null;
-  }
-
-  public void testDownloadRenewReleaseKey() throws Exception {
-    setStubLicenseAndPlaybackDurationValues(1000, 200);
-
-    byte[] keySetId = {2, 5, 8};
-    setStubKeySetId(keySetId);
-
-    byte[] offlineLicenseKeySetId = offlineLicenseHelper.downloadLicense(newDrmInitData());
-
-    assertOfflineLicenseKeySetIdEqual(keySetId, offlineLicenseKeySetId);
-
-    byte[] keySetId2 = {6, 7, 0, 1, 4};
-    setStubKeySetId(keySetId2);
-
-    byte[] offlineLicenseKeySetId2 = offlineLicenseHelper.renewLicense(offlineLicenseKeySetId);
-
-    assertOfflineLicenseKeySetIdEqual(keySetId2, offlineLicenseKeySetId2);
-
-    offlineLicenseHelper.releaseLicense(offlineLicenseKeySetId2);
-  }
-
-  public void testDownloadLicenseFailsIfNullInitData() throws Exception {
-    try {
-      offlineLicenseHelper.downloadLicense(null);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-  }
-
-  public void testDownloadLicenseFailsIfNoKeySetIdIsReturned() throws Exception {
-    setStubLicenseAndPlaybackDurationValues(1000, 200);
-
-    byte[] offlineLicenseKeySetId = offlineLicenseHelper.downloadLicense(newDrmInitData());
-
-    assertNull(offlineLicenseKeySetId);
-  }
-
-  public void testDownloadLicenseDoesNotFailIfDurationNotAvailable() throws Exception {
-    setDefaultStubKeySetId();
-
-    byte[] offlineLicenseKeySetId = offlineLicenseHelper.downloadLicense(newDrmInitData());
-
-    assertNotNull(offlineLicenseKeySetId);
-  }
-
-  public void testGetLicenseDurationRemainingSec() throws Exception {
-    long licenseDuration = 1000;
-    int playbackDuration = 200;
-    setStubLicenseAndPlaybackDurationValues(licenseDuration, playbackDuration);
-    setDefaultStubKeySetId();
-
-    byte[] offlineLicenseKeySetId = offlineLicenseHelper.downloadLicense(newDrmInitData());
-
-    Pair<Long, Long> licenseDurationRemainingSec = offlineLicenseHelper
-        .getLicenseDurationRemainingSec(offlineLicenseKeySetId);
-
-    assertEquals(licenseDuration, (long) licenseDurationRemainingSec.first);
-    assertEquals(playbackDuration, (long) licenseDurationRemainingSec.second);
-  }
-
-  public void testGetLicenseDurationRemainingSecExpiredLicense() throws Exception {
-    long licenseDuration = 0;
-    int playbackDuration = 0;
-    setStubLicenseAndPlaybackDurationValues(licenseDuration, playbackDuration);
-    setDefaultStubKeySetId();
-
-    byte[] offlineLicenseKeySetId = offlineLicenseHelper.downloadLicense(newDrmInitData());
-
-    Pair<Long, Long> licenseDurationRemainingSec = offlineLicenseHelper
-        .getLicenseDurationRemainingSec(offlineLicenseKeySetId);
-
-    assertEquals(licenseDuration, (long) licenseDurationRemainingSec.first);
-    assertEquals(playbackDuration, (long) licenseDurationRemainingSec.second);
-  }
-
-  private void setDefaultStubKeySetId()
-      throws android.media.NotProvisionedException, android.media.DeniedByServerException {
-    setStubKeySetId(new byte[] {2, 5, 8});
-  }
-
-  private void setStubKeySetId(byte[] keySetId)
-      throws android.media.NotProvisionedException, android.media.DeniedByServerException {
-    when(mediaDrm.provideKeyResponse(any(byte[].class), any(byte[].class))).thenReturn(keySetId);
-  }
-
-  private static void assertOfflineLicenseKeySetIdEqual(
-      byte[] expectedKeySetId, byte[] actualKeySetId) throws Exception {
-    assertNotNull(actualKeySetId);
-    MoreAsserts.assertEquals(expectedKeySetId, actualKeySetId);
-  }
-
-  private void setStubLicenseAndPlaybackDurationValues(long licenseDuration,
-      long playbackDuration) {
-    HashMap<String, String> keyStatus = new HashMap<>();
-    keyStatus.put(WidevineUtil.PROPERTY_LICENSE_DURATION_REMAINING,
-        String.valueOf(licenseDuration));
-    keyStatus.put(WidevineUtil.PROPERTY_PLAYBACK_DURATION_REMAINING,
-        String.valueOf(playbackDuration));
-    when(mediaDrm.queryKeyStatus(any(byte[].class))).thenReturn(keyStatus);
-  }
-
-  private static DrmInitData newDrmInitData() {
-    return new DrmInitData(new SchemeData(C.WIDEVINE_UUID, "cenc", "mimeType",
-        new byte[] {1, 4, 7, 0, 3, 6}));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/DefaultExtractorInputTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/DefaultExtractorInputTest.java
deleted file mode 100644
index 6abd116086..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/DefaultExtractorInputTest.java
+++ /dev/null
@@ -1,431 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor;
-
-import android.net.Uri;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.testutil.FakeDataSource;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import java.io.EOFException;
-import java.io.IOException;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link DefaultExtractorInput}.
- */
-public class DefaultExtractorInputTest extends TestCase {
-
-  private static final String TEST_URI = "http://www.google.com";
-  private static final byte[] TEST_DATA = new byte[] {0, 1, 2, 3, 4, 5, 6, 7, 8};
-  private static final int LARGE_TEST_DATA_LENGTH = 8192;
-
-  public void testInitialPosition() throws Exception {
-    FakeDataSource testDataSource = buildDataSource();
-    DefaultExtractorInput input =
-        new DefaultExtractorInput(testDataSource, 123, C.LENGTH_UNSET);
-    assertEquals(123, input.getPosition());
-  }
-
-  public void testRead() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-    // We expect to perform three reads of three bytes, as setup in buildTestDataSource.
-    int bytesRead = 0;
-    bytesRead += input.read(target, 0, TEST_DATA.length);
-    assertEquals(3, bytesRead);
-    bytesRead += input.read(target, 3, TEST_DATA.length);
-    assertEquals(6, bytesRead);
-    bytesRead += input.read(target, 6, TEST_DATA.length);
-    assertEquals(9, bytesRead);
-    // Check the read data is correct.
-    assertTrue(Arrays.equals(TEST_DATA, target));
-    // Check we're now indicated that the end of input is reached.
-    int expectedEndOfInput = input.read(target, 0, TEST_DATA.length);
-    assertEquals(C.RESULT_END_OF_INPUT, expectedEndOfInput);
-  }
-
-  public void testReadPeeked() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-
-    input.advancePeekPosition(TEST_DATA.length);
-
-    int bytesRead = input.read(target, 0, TEST_DATA.length);
-    assertEquals(TEST_DATA.length, bytesRead);
-
-    // Check the read data is correct.
-    assertTrue(Arrays.equals(TEST_DATA, target));
-  }
-
-  public void testReadMoreDataPeeked() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-
-    input.advancePeekPosition(TEST_DATA.length);
-
-    int bytesRead = input.read(target, 0, TEST_DATA.length + 1);
-    assertEquals(TEST_DATA.length, bytesRead);
-
-    // Check the read data is correct.
-    assertTrue(Arrays.equals(TEST_DATA, target));
-  }
-
-  public void testReadFullyOnce() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-    input.readFully(target, 0, TEST_DATA.length);
-    // Check that we read the whole of TEST_DATA.
-    assertTrue(Arrays.equals(TEST_DATA, target));
-    assertEquals(TEST_DATA.length, input.getPosition());
-    // Check that we see end of input if we read again with allowEndOfInput set.
-    boolean result = input.readFully(target, 0, 1, true);
-    assertFalse(result);
-    // Check that we fail with EOFException we read again with allowEndOfInput unset.
-    try {
-      input.readFully(target, 0, 1);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  public void testReadFullyTwice() throws Exception {
-    // Read TEST_DATA in two parts.
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[5];
-    input.readFully(target, 0, 5);
-    assertTrue(Arrays.equals(Arrays.copyOf(TEST_DATA, 5), target));
-    assertEquals(5, input.getPosition());
-    target = new byte[4];
-    input.readFully(target, 0, 4);
-    assertTrue(Arrays.equals(Arrays.copyOfRange(TEST_DATA, 5, 9), target));
-    assertEquals(5 + 4, input.getPosition());
-  }
-
-  public void testReadFullyTooMuch() throws Exception {
-    // Read more than TEST_DATA. Should fail with an EOFException. Position should not update.
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    try {
-      byte[] target = new byte[TEST_DATA.length + 1];
-      input.readFully(target, 0, TEST_DATA.length + 1);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-    assertEquals(0, input.getPosition());
-
-    // Read more than TEST_DATA with allowEndOfInput set. Should fail with an EOFException because
-    // the end of input isn't encountered immediately. Position should not update.
-    input = createDefaultExtractorInput();
-    try {
-      byte[] target = new byte[TEST_DATA.length + 1];
-      input.readFully(target, 0, TEST_DATA.length + 1, true);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-    assertEquals(0, input.getPosition());
-  }
-
-  public void testReadFullyWithFailingDataSource() throws Exception {
-    FakeDataSource testDataSource = buildFailingDataSource();
-    DefaultExtractorInput input = new DefaultExtractorInput(testDataSource, 0, C.LENGTH_UNSET);
-    try {
-      byte[] target = new byte[TEST_DATA.length];
-      input.readFully(target, 0, TEST_DATA.length);
-      fail();
-    } catch (IOException e) {
-      // Expected.
-    }
-    // The position should not have advanced.
-    assertEquals(0, input.getPosition());
-  }
-
-  public void testReadFullyHalfPeeked() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-
-    input.advancePeekPosition(4);
-
-    input.readFully(target, 0, TEST_DATA.length);
-
-    // Check the read data is correct.
-    assertTrue(Arrays.equals(TEST_DATA, target));
-    assertEquals(TEST_DATA.length, input.getPosition());
-  }
-
-  public void testSkip() throws Exception {
-    FakeDataSource testDataSource = buildDataSource();
-    DefaultExtractorInput input = new DefaultExtractorInput(testDataSource, 0, C.LENGTH_UNSET);
-    // We expect to perform three skips of three bytes, as setup in buildTestDataSource.
-    for (int i = 0; i < 3; i++) {
-      assertEquals(3, input.skip(TEST_DATA.length));
-    }
-    // Check we're now indicated that the end of input is reached.
-    int expectedEndOfInput = input.skip(TEST_DATA.length);
-    assertEquals(C.RESULT_END_OF_INPUT, expectedEndOfInput);
-  }
-
-  public void testLargeSkip() throws Exception {
-    FakeDataSource testDataSource = buildLargeDataSource();
-    DefaultExtractorInput input = new DefaultExtractorInput(testDataSource, 0, C.LENGTH_UNSET);
-    // Check that skipping the entire data source succeeds.
-    int bytesToSkip = LARGE_TEST_DATA_LENGTH;
-    while (bytesToSkip > 0) {
-      bytesToSkip -= input.skip(bytesToSkip);
-    }
-  }
-
-  public void testSkipFullyOnce() throws Exception {
-    // Skip TEST_DATA.
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    input.skipFully(TEST_DATA.length);
-    assertEquals(TEST_DATA.length, input.getPosition());
-    // Check that we see end of input if we skip again with allowEndOfInput set.
-    boolean result = input.skipFully(1, true);
-    assertFalse(result);
-    // Check that we fail with EOFException we skip again.
-    try {
-      input.skipFully(1);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  public void testSkipFullyTwice() throws Exception {
-    // Skip TEST_DATA in two parts.
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    input.skipFully(5);
-    assertEquals(5, input.getPosition());
-    input.skipFully(4);
-    assertEquals(5 + 4, input.getPosition());
-  }
-
-  public void testSkipFullyTwicePeeked() throws Exception {
-    // Skip TEST_DATA.
-    DefaultExtractorInput input = createDefaultExtractorInput();
-
-    input.advancePeekPosition(TEST_DATA.length);
-
-    int halfLength = TEST_DATA.length / 2;
-    input.skipFully(halfLength);
-    assertEquals(halfLength, input.getPosition());
-
-    input.skipFully(TEST_DATA.length - halfLength);
-    assertEquals(TEST_DATA.length, input.getPosition());
-  }
-
-  public void testSkipFullyTooMuch() throws Exception {
-    // Skip more than TEST_DATA. Should fail with an EOFException. Position should not update.
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    try {
-      input.skipFully(TEST_DATA.length + 1);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-    assertEquals(0, input.getPosition());
-
-    // Skip more than TEST_DATA with allowEndOfInput set. Should fail with an EOFException because
-    // the end of input isn't encountered immediately. Position should not update.
-    input = createDefaultExtractorInput();
-    try {
-      input.skipFully(TEST_DATA.length + 1, true);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-    assertEquals(0, input.getPosition());
-  }
-
-  public void testSkipFullyWithFailingDataSource() throws Exception {
-    FakeDataSource testDataSource = buildFailingDataSource();
-    DefaultExtractorInput input = new DefaultExtractorInput(testDataSource, 0, C.LENGTH_UNSET);
-    try {
-      input.skipFully(TEST_DATA.length);
-      fail();
-    } catch (IOException e) {
-      // Expected.
-    }
-    // The position should not have advanced.
-    assertEquals(0, input.getPosition());
-  }
-
-  public void testSkipFullyLarge() throws Exception {
-    // Tests skipping an amount of data that's larger than any internal scratch space.
-    int largeSkipSize = 1024 * 1024;
-    FakeDataSource testDataSource = new FakeDataSource();
-    testDataSource.getDataSet().newDefaultData().appendReadData(new byte[largeSkipSize]);
-    testDataSource.open(new DataSpec(Uri.parse(TEST_URI)));
-
-    DefaultExtractorInput input = new DefaultExtractorInput(testDataSource, 0, C.LENGTH_UNSET);
-    input.skipFully(largeSkipSize);
-    assertEquals(largeSkipSize, input.getPosition());
-    // Check that we fail with EOFException we skip again.
-    try {
-      input.skipFully(1);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  public void testPeekFully() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-    input.peekFully(target, 0, TEST_DATA.length);
-
-    // Check that we read the whole of TEST_DATA.
-    assertTrue(Arrays.equals(TEST_DATA, target));
-    assertEquals(0, input.getPosition());
-    assertEquals(TEST_DATA.length, input.getPeekPosition());
-
-    // Check that we can read again from the buffer
-    byte[] target2 = new byte[TEST_DATA.length];
-    input.readFully(target2, 0, TEST_DATA.length);
-    assertTrue(Arrays.equals(TEST_DATA, target2));
-    assertEquals(TEST_DATA.length, input.getPosition());
-    assertEquals(TEST_DATA.length, input.getPeekPosition());
-
-    // Check that we fail with EOFException if we peek again
-    try {
-      input.peekFully(target, 0, 1);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  public void testResetPeekPosition() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-    input.peekFully(target, 0, TEST_DATA.length);
-
-    // Check that we read the whole of TEST_DATA.
-    assertTrue(Arrays.equals(TEST_DATA, target));
-    assertEquals(0, input.getPosition());
-
-    // Check that we can peek again after resetting.
-    input.resetPeekPosition();
-    byte[] target2 = new byte[TEST_DATA.length];
-    input.peekFully(target2, 0, TEST_DATA.length);
-    assertTrue(Arrays.equals(TEST_DATA, target2));
-
-    // Check that we fail with EOFException if we peek past the end of the input.
-    try {
-      input.peekFully(target, 0, 1);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  public void testPeekFullyAtEndOfStreamWithAllowEndOfInputSucceeds() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-
-    // Check peeking up to the end of input succeeds.
-    assertTrue(input.peekFully(target, 0, TEST_DATA.length, true));
-
-    // Check peeking at the end of input with allowEndOfInput signals the end of input.
-    assertFalse(input.peekFully(target, 0, 1, true));
-  }
-
-  public void testPeekFullyAtEndThenReadEndOfInput() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-
-    // Peek up to the end of the input.
-    assertTrue(input.peekFully(target, 0, TEST_DATA.length, false));
-
-    // Peek the end of the input.
-    assertFalse(input.peekFully(target, 0, 1, true));
-
-    // Read up to the end of the input.
-    assertTrue(input.readFully(target, 0, TEST_DATA.length, false));
-
-    // Read the end of the input.
-    assertFalse(input.readFully(target, 0, 1, true));
-  }
-
-  public void testPeekFullyAcrossEndOfInputWithAllowEndOfInputFails() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-
-    // Check peeking before the end of input with allowEndOfInput succeeds.
-    assertTrue(input.peekFully(target, 0, TEST_DATA.length - 1, true));
-
-    // Check peeking across the end of input with allowEndOfInput throws.
-    try {
-      input.peekFully(target, 0, 2, true);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  public void testResetAndPeekFullyPastEndOfStreamWithAllowEndOfInputFails() throws Exception {
-    DefaultExtractorInput input = createDefaultExtractorInput();
-    byte[] target = new byte[TEST_DATA.length];
-
-    // Check peeking up to the end of input succeeds.
-    assertTrue(input.peekFully(target, 0, TEST_DATA.length, true));
-    input.resetPeekPosition();
-    try {
-      // Check peeking one more byte throws.
-      input.peekFully(target, 0, TEST_DATA.length + 1, true);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  private static FakeDataSource buildDataSource() throws Exception {
-    FakeDataSource testDataSource = new FakeDataSource();
-    testDataSource.getDataSet().newDefaultData()
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 0, 3))
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 3, 6))
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 6, 9));
-    testDataSource.open(new DataSpec(Uri.parse(TEST_URI)));
-    return testDataSource;
-  }
-
-  private static FakeDataSource buildFailingDataSource() throws Exception {
-    FakeDataSource testDataSource = new FakeDataSource();
-    testDataSource.getDataSet().newDefaultData()
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 0, 6))
-        .appendReadError(new IOException())
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 6, 9));
-    testDataSource.open(new DataSpec(Uri.parse(TEST_URI)));
-    return testDataSource;
-  }
-
-  private static FakeDataSource buildLargeDataSource() throws Exception {
-    FakeDataSource testDataSource = new FakeDataSource();
-    testDataSource.getDataSet().newDefaultData()
-        .appendReadData(new byte[LARGE_TEST_DATA_LENGTH]);
-    testDataSource.open(new DataSpec(Uri.parse(TEST_URI)));
-    return testDataSource;
-  }
-
-  private static DefaultExtractorInput createDefaultExtractorInput() throws Exception {
-    FakeDataSource testDataSource = buildDataSource();
-    return new DefaultExtractorInput(testDataSource, 0, C.LENGTH_UNSET);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ExtractorTest.java
deleted file mode 100644
index 250ae8c513..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ExtractorTest.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor;
-
-import com.google.android.exoplayer2.C;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link Extractor}.
- */
-public class ExtractorTest extends TestCase {
-
-  public static void testConstants() {
-    // Sanity check that constant values match those defined by {@link C}.
-    assertEquals(C.RESULT_END_OF_INPUT, Extractor.RESULT_END_OF_INPUT);
-    // Sanity check that the other constant values don't overlap.
-    assertTrue(C.RESULT_END_OF_INPUT != Extractor.RESULT_CONTINUE);
-    assertTrue(C.RESULT_END_OF_INPUT != Extractor.RESULT_SEEK);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/flv/FlvExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/flv/FlvExtractorTest.java
deleted file mode 100644
index fc8d181eac..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/flv/FlvExtractorTest.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.flv;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link FlvExtractor}.
- */
-public final class FlvExtractorTest extends InstrumentationTestCase {
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new FlvExtractor();
-      }
-    }, "flv/sample.flv", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/DefaultEbmlReaderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/DefaultEbmlReaderTest.java
deleted file mode 100644
index acc62f41f9..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/DefaultEbmlReaderTest.java
+++ /dev/null
@@ -1,229 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mkv;
-
-import com.google.android.exoplayer2.extractor.ExtractorInput;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import junit.framework.TestCase;
-
-/**
- * Tests {@link DefaultEbmlReader}.
- */
-public class DefaultEbmlReaderTest extends TestCase {
-
-  public void testMasterElement() throws IOException, InterruptedException {
-    ExtractorInput input = createTestInput(0x1A, 0x45, 0xDF, 0xA3, 0x84, 0x42, 0x85, 0x81, 0x01);
-    TestOutput expected = new TestOutput();
-    expected.startMasterElement(TestOutput.ID_EBML, 5, 4);
-    expected.integerElement(TestOutput.ID_DOC_TYPE_READ_VERSION, 1);
-    expected.endMasterElement(TestOutput.ID_EBML);
-    assertEvents(input, expected.events);
-  }
-
-  public void testMasterElementEmpty() throws IOException, InterruptedException {
-    ExtractorInput input = createTestInput(0x18, 0x53, 0x80, 0x67, 0x80);
-    TestOutput expected = new TestOutput();
-    expected.startMasterElement(TestOutput.ID_SEGMENT, 5, 0);
-    expected.endMasterElement(TestOutput.ID_SEGMENT);
-    assertEvents(input, expected.events);
-  }
-
-  public void testUnsignedIntegerElement() throws IOException, InterruptedException {
-    // 0xFE is chosen because for signed integers it should be interpreted as -2
-    ExtractorInput input = createTestInput(0x42, 0xF7, 0x81, 0xFE);
-    TestOutput expected = new TestOutput();
-    expected.integerElement(TestOutput.ID_EBML_READ_VERSION, 254);
-    assertEvents(input, expected.events);
-  }
-
-  public void testUnsignedIntegerElementLarge() throws IOException, InterruptedException {
-    ExtractorInput input =
-        createTestInput(0x42, 0xF7, 0x88, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF);
-    TestOutput expected = new TestOutput();
-    expected.integerElement(TestOutput.ID_EBML_READ_VERSION, Long.MAX_VALUE);
-    assertEvents(input, expected.events);
-  }
-
-  public void testUnsignedIntegerElementTooLargeBecomesNegative()
-      throws IOException, InterruptedException {
-    ExtractorInput input =
-        createTestInput(0x42, 0xF7, 0x88, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF);
-    TestOutput expected = new TestOutput();
-    expected.integerElement(TestOutput.ID_EBML_READ_VERSION, -1);
-    assertEvents(input, expected.events);
-  }
-
-  public void testStringElement() throws IOException, InterruptedException {
-    ExtractorInput input = createTestInput(0x42, 0x82, 0x86, 0x41, 0x62, 0x63, 0x31, 0x32, 0x33);
-    TestOutput expected = new TestOutput();
-    expected.stringElement(TestOutput.ID_DOC_TYPE, "Abc123");
-    assertEvents(input, expected.events);
-  }
-
-  public void testStringElementEmpty() throws IOException, InterruptedException {
-    ExtractorInput input = createTestInput(0x42, 0x82, 0x80);
-    TestOutput expected = new TestOutput();
-    expected.stringElement(TestOutput.ID_DOC_TYPE, "");
-    assertEvents(input, expected.events);
-  }
-
-  public void testFloatElementFourBytes() throws IOException, InterruptedException {
-    ExtractorInput input =
-        createTestInput(0x44, 0x89, 0x84, 0x3F, 0x80, 0x00, 0x00);
-    TestOutput expected = new TestOutput();
-    expected.floatElement(TestOutput.ID_DURATION, 1.0);
-    assertEvents(input, expected.events);
-  }
-
-  public void testFloatElementEightBytes() throws IOException, InterruptedException {
-    ExtractorInput input =
-        createTestInput(0x44, 0x89, 0x88, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
-    TestOutput expected = new TestOutput();
-    expected.floatElement(TestOutput.ID_DURATION, -2.0);
-    assertEvents(input, expected.events);
-  }
-
-  public void testBinaryElement() throws IOException, InterruptedException {
-    ExtractorInput input =
-        createTestInput(0xA3, 0x88, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08);
-    TestOutput expected = new TestOutput();
-    expected.binaryElement(TestOutput.ID_SIMPLE_BLOCK, 8,
-        createTestInput(0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08));
-    assertEvents(input, expected.events);
-  }
-
-  private static void assertEvents(ExtractorInput input, List<String> expectedEvents)
-      throws IOException, InterruptedException {
-    DefaultEbmlReader reader = new DefaultEbmlReader();
-    TestOutput output = new TestOutput();
-    reader.init(output);
-
-    // We expect the number of successful reads to equal the number of expected events.
-    for (int i = 0; i < expectedEvents.size(); i++) {
-      assertTrue(reader.read(input));
-    }
-    // The next read should be unsuccessful.
-    assertFalse(reader.read(input));
-    // Check that we really did get to the end of input.
-    assertFalse(input.readFully(new byte[1], 0, 1, true));
-
-    assertEquals(expectedEvents.size(), output.events.size());
-    for (int i = 0; i < expectedEvents.size(); i++) {
-      assertEquals(expectedEvents.get(i), output.events.get(i));
-    }
-  }
-
-  /**
-   * Helper to build an {@link ExtractorInput} from byte data.
-   *
-   * @param data Zero or more integers with values between {@code 0x00} and {@code 0xFF}.
-   * @return An {@link ExtractorInput} from which the data can be read.
-   */
-  private static ExtractorInput createTestInput(int... data) {
-    return new FakeExtractorInput.Builder()
-        .setData(TestUtil.createByteArray(data))
-        .setSimulateUnknownLength(true)
-        .build();
-  }
-
-  /**
-   * An {@link EbmlReaderOutput} that records each event callback.
-   */
-  private static final class TestOutput implements EbmlReaderOutput {
-
-    // Element IDs
-    private static final int ID_EBML = 0x1A45DFA3;
-    private static final int ID_EBML_READ_VERSION = 0x42F7;
-    private static final int ID_DOC_TYPE = 0x4282;
-    private static final int ID_DOC_TYPE_READ_VERSION = 0x4285;
-
-    private static final int ID_SEGMENT = 0x18538067;
-    private static final int ID_DURATION = 0x4489;
-    private static final int ID_SIMPLE_BLOCK = 0xA3;
-
-    private final List<String> events = new ArrayList<>();
-
-    @Override
-    public int getElementType(int id) {
-      switch (id) {
-        case ID_EBML:
-        case ID_SEGMENT:
-          return EbmlReader.TYPE_MASTER;
-        case ID_EBML_READ_VERSION:
-        case ID_DOC_TYPE_READ_VERSION:
-          return EbmlReader.TYPE_UNSIGNED_INT;
-        case ID_DOC_TYPE:
-          return EbmlReader.TYPE_STRING;
-        case ID_SIMPLE_BLOCK:
-          return EbmlReader.TYPE_BINARY;
-        case ID_DURATION:
-          return EbmlReader.TYPE_FLOAT;
-        default:
-          return EbmlReader.TYPE_UNKNOWN;
-      }
-    }
-
-    @Override
-    public boolean isLevel1Element(int id) {
-      return false;
-    }
-
-    @Override
-    public void startMasterElement(int id, long contentPosition, long contentSize) {
-      events.add(formatEvent(id, "start contentPosition=" + contentPosition
-          + " contentSize=" + contentSize));
-    }
-
-    @Override
-    public void endMasterElement(int id) {
-      events.add(formatEvent(id, "end"));
-    }
-
-    @Override
-    public void integerElement(int id, long value) {
-      events.add(formatEvent(id, "integer=" + String.valueOf(value)));
-    }
-
-    @Override
-    public void floatElement(int id, double value) {
-      events.add(formatEvent(id, "float=" + String.valueOf(value)));
-    }
-
-    @Override
-    public void stringElement(int id, String value) {
-      events.add(formatEvent(id, "string=" + value));
-    }
-
-    @Override
-    public void binaryElement(int id, int contentSize, ExtractorInput input)
-        throws IOException, InterruptedException {
-      byte[] bytes = new byte[contentSize];
-      input.readFully(bytes, 0, contentSize);
-      events.add(formatEvent(id, "bytes=" + Arrays.toString(bytes)));
-    }
-
-    private static String formatEvent(int id, String event) {
-      return "[" + Integer.toHexString(id) + "] " + event;
-    }
-
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/MatroskaExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/MatroskaExtractorTest.java
deleted file mode 100644
index 624a5ccb7e..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/MatroskaExtractorTest.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mkv;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Tests for {@link MatroskaExtractor}.
- */
-public final class MatroskaExtractorTest extends InstrumentationTestCase {
-
-  public void testMkvSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new MatroskaExtractor();
-      }
-    }, "mkv/sample.mkv", getInstrumentation());
-  }
-
-  public void testWebmSubsampleEncryption() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new MatroskaExtractor();
-      }
-    }, "mkv/subsample_encrypted_noaltref.webm", getInstrumentation());
-  }
-
-  public void testWebmSubsampleEncryptionWithAltrefFrames() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new MatroskaExtractor();
-      }
-    }, "mkv/subsample_encrypted_altref.webm", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/VarintReaderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/VarintReaderTest.java
deleted file mode 100644
index 3eb2c10a30..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mkv/VarintReaderTest.java
+++ /dev/null
@@ -1,216 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mkv;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.extractor.ExtractorInput;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput.SimulatedIOException;
-import java.io.EOFException;
-import java.io.IOException;
-import junit.framework.TestCase;
-
-/**
- * Tests for {@link VarintReader}.
- */
-public final class VarintReaderTest extends TestCase {
-
-  private static final byte MAX_BYTE = (byte) 0xFF;
-
-  private static final byte[] DATA_1_BYTE_0 = new byte[] {(byte) 0x80};
-  private static final byte[] DATA_2_BYTE_0 = new byte[] {0x40, 0};
-  private static final byte[] DATA_3_BYTE_0 = new byte[] {0x20, 0, 0};
-  private static final byte[] DATA_4_BYTE_0 = new byte[] {0x10, 0, 0, 0};
-  private static final byte[] DATA_5_BYTE_0 = new byte[] {0x08, 0, 0, 0, 0};
-  private static final byte[] DATA_6_BYTE_0 = new byte[] {0x04, 0, 0, 0, 0, 0};
-  private static final byte[] DATA_7_BYTE_0 = new byte[] {0x02, 0, 0, 0, 0, 0, 0};
-  private static final byte[] DATA_8_BYTE_0 = new byte[] {0x01, 0, 0, 0, 0, 0, 0, 0};
-
-  private static final byte[] DATA_1_BYTE_64 = new byte[] {(byte) 0xC0};
-  private static final byte[] DATA_2_BYTE_64 = new byte[] {0x40, 0x40};
-  private static final byte[] DATA_3_BYTE_64 = new byte[] {0x20, 0, 0x40};
-  private static final byte[] DATA_4_BYTE_64 = new byte[] {0x10, 0, 0, 0x40};
-  private static final byte[] DATA_5_BYTE_64 = new byte[] {0x08, 0, 0, 0, 0x40};
-  private static final byte[] DATA_6_BYTE_64 = new byte[] {0x04, 0, 0, 0, 0, 0x40};
-  private static final byte[] DATA_7_BYTE_64 = new byte[] {0x02, 0, 0, 0, 0, 0, 0x40};
-  private static final byte[] DATA_8_BYTE_64 = new byte[] {0x01, 0, 0, 0, 0, 0, 0, 0x40};
-
-  private static final byte[] DATA_1_BYTE_MAX = new byte[] {MAX_BYTE};
-  private static final byte[] DATA_2_BYTE_MAX = new byte[] {0x7F, MAX_BYTE};
-  private static final byte[] DATA_3_BYTE_MAX = new byte[] {0x3F, MAX_BYTE, MAX_BYTE};
-  private static final byte[] DATA_4_BYTE_MAX = new byte[] {0x1F, MAX_BYTE, MAX_BYTE, MAX_BYTE};
-  private static final byte[] DATA_5_BYTE_MAX =
-      new byte[] {0x0F, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE};
-  private static final byte[] DATA_6_BYTE_MAX =
-      new byte[] {0x07, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE};
-  private static final byte[] DATA_7_BYTE_MAX =
-      new byte[] {0x03, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE};
-  private static final byte[] DATA_8_BYTE_MAX =
-      new byte[] {0x01, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE, MAX_BYTE};
-
-  private static final long VALUE_1_BYTE_MAX = 0x7F;
-  private static final long VALUE_1_BYTE_MAX_WITH_MASK = 0xFF;
-  private static final long VALUE_2_BYTE_MAX = 0x3FFF;
-  private static final long VALUE_2_BYTE_MAX_WITH_MASK = 0x7FFF;
-  private static final long VALUE_3_BYTE_MAX = 0x1FFFFF;
-  private static final long VALUE_3_BYTE_MAX_WITH_MASK = 0x3FFFFF;
-  private static final long VALUE_4_BYTE_MAX = 0xFFFFFFF;
-  private static final long VALUE_4_BYTE_MAX_WITH_MASK = 0x1FFFFFFF;
-  private static final long VALUE_5_BYTE_MAX = 0x7FFFFFFFFL;
-  private static final long VALUE_5_BYTE_MAX_WITH_MASK = 0xFFFFFFFFFL;
-  private static final long VALUE_6_BYTE_MAX = 0x3FFFFFFFFFFL;
-  private static final long VALUE_6_BYTE_MAX_WITH_MASK = 0x7FFFFFFFFFFL;
-  private static final long VALUE_7_BYTE_MAX = 0x1FFFFFFFFFFFFL;
-  private static final long VALUE_7_BYTE_MAX_WITH_MASK = 0x3FFFFFFFFFFFFL;
-  private static final long VALUE_8_BYTE_MAX = 0xFFFFFFFFFFFFFFL;
-  private static final long VALUE_8_BYTE_MAX_WITH_MASK = 0x1FFFFFFFFFFFFFFL;
-
-  public void testReadVarintEndOfInputAtStart() throws IOException, InterruptedException {
-    VarintReader reader = new VarintReader();
-    // Build an input with no data.
-    ExtractorInput input = new FakeExtractorInput.Builder()
-        .setSimulateUnknownLength(true)
-        .build();
-    // End of input allowed.
-    long result = reader.readUnsignedVarint(input, true, false, 8);
-    assertEquals(C.RESULT_END_OF_INPUT, result);
-    // End of input not allowed.
-    try {
-      reader.readUnsignedVarint(input, false, false, 8);
-      fail();
-    } catch (EOFException e) {
-      // Expected.
-    }
-  }
-
-  public void testReadVarintExceedsMaximumAllowedLength() throws IOException, InterruptedException {
-    VarintReader reader = new VarintReader();
-    ExtractorInput input = new FakeExtractorInput.Builder()
-        .setData(DATA_8_BYTE_0)
-        .setSimulateUnknownLength(true)
-        .build();
-    long result = reader.readUnsignedVarint(input, false, true, 4);
-    assertEquals(C.RESULT_MAX_LENGTH_EXCEEDED, result);
-  }
-
-  public void testReadVarint() throws IOException, InterruptedException {
-    VarintReader reader = new VarintReader();
-    testReadVarint(reader, true, DATA_1_BYTE_0, 1, 0);
-    testReadVarint(reader, true, DATA_2_BYTE_0, 2, 0);
-    testReadVarint(reader, true, DATA_3_BYTE_0, 3, 0);
-    testReadVarint(reader, true, DATA_4_BYTE_0, 4, 0);
-    testReadVarint(reader, true, DATA_5_BYTE_0, 5, 0);
-    testReadVarint(reader, true, DATA_6_BYTE_0, 6, 0);
-    testReadVarint(reader, true, DATA_7_BYTE_0, 7, 0);
-    testReadVarint(reader, true, DATA_8_BYTE_0, 8, 0);
-    testReadVarint(reader, true, DATA_1_BYTE_64, 1, 64);
-    testReadVarint(reader, true, DATA_2_BYTE_64, 2, 64);
-    testReadVarint(reader, true, DATA_3_BYTE_64, 3, 64);
-    testReadVarint(reader, true, DATA_4_BYTE_64, 4, 64);
-    testReadVarint(reader, true, DATA_5_BYTE_64, 5, 64);
-    testReadVarint(reader, true, DATA_6_BYTE_64, 6, 64);
-    testReadVarint(reader, true, DATA_7_BYTE_64, 7, 64);
-    testReadVarint(reader, true, DATA_8_BYTE_64, 8, 64);
-    testReadVarint(reader, true, DATA_1_BYTE_MAX, 1, VALUE_1_BYTE_MAX);
-    testReadVarint(reader, true, DATA_2_BYTE_MAX, 2, VALUE_2_BYTE_MAX);
-    testReadVarint(reader, true, DATA_3_BYTE_MAX, 3, VALUE_3_BYTE_MAX);
-    testReadVarint(reader, true, DATA_4_BYTE_MAX, 4, VALUE_4_BYTE_MAX);
-    testReadVarint(reader, true, DATA_5_BYTE_MAX, 5, VALUE_5_BYTE_MAX);
-    testReadVarint(reader, true, DATA_6_BYTE_MAX, 6, VALUE_6_BYTE_MAX);
-    testReadVarint(reader, true, DATA_7_BYTE_MAX, 7, VALUE_7_BYTE_MAX);
-    testReadVarint(reader, true, DATA_8_BYTE_MAX, 8, VALUE_8_BYTE_MAX);
-    testReadVarint(reader, false, DATA_1_BYTE_MAX, 1, VALUE_1_BYTE_MAX_WITH_MASK);
-    testReadVarint(reader, false, DATA_2_BYTE_MAX, 2, VALUE_2_BYTE_MAX_WITH_MASK);
-    testReadVarint(reader, false, DATA_3_BYTE_MAX, 3, VALUE_3_BYTE_MAX_WITH_MASK);
-    testReadVarint(reader, false, DATA_4_BYTE_MAX, 4, VALUE_4_BYTE_MAX_WITH_MASK);
-    testReadVarint(reader, false, DATA_5_BYTE_MAX, 5, VALUE_5_BYTE_MAX_WITH_MASK);
-    testReadVarint(reader, false, DATA_6_BYTE_MAX, 6, VALUE_6_BYTE_MAX_WITH_MASK);
-    testReadVarint(reader, false, DATA_7_BYTE_MAX, 7, VALUE_7_BYTE_MAX_WITH_MASK);
-    testReadVarint(reader, false, DATA_8_BYTE_MAX, 8, VALUE_8_BYTE_MAX_WITH_MASK);
-  }
-
-  public void testReadVarintFlaky() throws IOException, InterruptedException {
-    VarintReader reader = new VarintReader();
-    testReadVarintFlaky(reader, true, DATA_1_BYTE_0, 1, 0);
-    testReadVarintFlaky(reader, true, DATA_2_BYTE_0, 2, 0);
-    testReadVarintFlaky(reader, true, DATA_3_BYTE_0, 3, 0);
-    testReadVarintFlaky(reader, true, DATA_4_BYTE_0, 4, 0);
-    testReadVarintFlaky(reader, true, DATA_5_BYTE_0, 5, 0);
-    testReadVarintFlaky(reader, true, DATA_6_BYTE_0, 6, 0);
-    testReadVarintFlaky(reader, true, DATA_7_BYTE_0, 7, 0);
-    testReadVarintFlaky(reader, true, DATA_8_BYTE_0, 8, 0);
-    testReadVarintFlaky(reader, true, DATA_1_BYTE_64, 1, 64);
-    testReadVarintFlaky(reader, true, DATA_2_BYTE_64, 2, 64);
-    testReadVarintFlaky(reader, true, DATA_3_BYTE_64, 3, 64);
-    testReadVarintFlaky(reader, true, DATA_4_BYTE_64, 4, 64);
-    testReadVarintFlaky(reader, true, DATA_5_BYTE_64, 5, 64);
-    testReadVarintFlaky(reader, true, DATA_6_BYTE_64, 6, 64);
-    testReadVarintFlaky(reader, true, DATA_7_BYTE_64, 7, 64);
-    testReadVarintFlaky(reader, true, DATA_8_BYTE_64, 8, 64);
-    testReadVarintFlaky(reader, true, DATA_1_BYTE_MAX, 1, VALUE_1_BYTE_MAX);
-    testReadVarintFlaky(reader, true, DATA_2_BYTE_MAX, 2, VALUE_2_BYTE_MAX);
-    testReadVarintFlaky(reader, true, DATA_3_BYTE_MAX, 3, VALUE_3_BYTE_MAX);
-    testReadVarintFlaky(reader, true, DATA_4_BYTE_MAX, 4, VALUE_4_BYTE_MAX);
-    testReadVarintFlaky(reader, true, DATA_5_BYTE_MAX, 5, VALUE_5_BYTE_MAX);
-    testReadVarintFlaky(reader, true, DATA_6_BYTE_MAX, 6, VALUE_6_BYTE_MAX);
-    testReadVarintFlaky(reader, true, DATA_7_BYTE_MAX, 7, VALUE_7_BYTE_MAX);
-    testReadVarintFlaky(reader, true, DATA_8_BYTE_MAX, 8, VALUE_8_BYTE_MAX);
-    testReadVarintFlaky(reader, false, DATA_1_BYTE_MAX, 1, VALUE_1_BYTE_MAX_WITH_MASK);
-    testReadVarintFlaky(reader, false, DATA_2_BYTE_MAX, 2, VALUE_2_BYTE_MAX_WITH_MASK);
-    testReadVarintFlaky(reader, false, DATA_3_BYTE_MAX, 3, VALUE_3_BYTE_MAX_WITH_MASK);
-    testReadVarintFlaky(reader, false, DATA_4_BYTE_MAX, 4, VALUE_4_BYTE_MAX_WITH_MASK);
-    testReadVarintFlaky(reader, false, DATA_5_BYTE_MAX, 5, VALUE_5_BYTE_MAX_WITH_MASK);
-    testReadVarintFlaky(reader, false, DATA_6_BYTE_MAX, 6, VALUE_6_BYTE_MAX_WITH_MASK);
-    testReadVarintFlaky(reader, false, DATA_7_BYTE_MAX, 7, VALUE_7_BYTE_MAX_WITH_MASK);
-    testReadVarintFlaky(reader, false, DATA_8_BYTE_MAX, 8, VALUE_8_BYTE_MAX_WITH_MASK);
-  }
-
-  private static void testReadVarint(VarintReader reader, boolean removeMask, byte[] data,
-      int expectedLength, long expectedValue) throws IOException, InterruptedException {
-    ExtractorInput input = new FakeExtractorInput.Builder()
-        .setData(data)
-        .setSimulateUnknownLength(true)
-        .build();
-    long result = reader.readUnsignedVarint(input, false, removeMask, 8);
-    assertEquals(expectedLength, input.getPosition());
-    assertEquals(expectedValue, result);
-  }
-
-  private static void testReadVarintFlaky(VarintReader reader, boolean removeMask, byte[] data,
-      int expectedLength, long expectedValue) throws IOException, InterruptedException {
-    ExtractorInput input = new FakeExtractorInput.Builder()
-        .setData(data)
-        .setSimulateUnknownLength(true)
-        .setSimulateIOErrors(true)
-        .setSimulatePartialReads(true)
-        .build();
-    long result = -1;
-    while (result == -1) {
-      try {
-        result = reader.readUnsignedVarint(input, false, removeMask, 8);
-        if (result == C.RESULT_END_OF_INPUT || result == C.RESULT_MAX_LENGTH_EXCEEDED) {
-          // Unexpected.
-          fail();
-        }
-      } catch (SimulatedIOException e) {
-        // Expected.
-      }
-    }
-    assertEquals(expectedLength, input.getPosition());
-    assertEquals(expectedValue, result);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp3/Mp3ExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp3/Mp3ExtractorTest.java
deleted file mode 100644
index 0f98624d69..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp3/Mp3ExtractorTest.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mp3;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link Mp3Extractor}.
- */
-public final class Mp3ExtractorTest extends InstrumentationTestCase {
-
-  public void testMp3Sample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new Mp3Extractor();
-      }
-    }, "mp3/bear.mp3", getInstrumentation());
-  }
-
-  public void testTrimmedMp3Sample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new Mp3Extractor();
-      }
-    }, "mp3/play-trimmed.mp3", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp3/XingSeekerTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp3/XingSeekerTest.java
deleted file mode 100644
index 18775b17f4..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp3/XingSeekerTest.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mp3;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.extractor.MpegAudioHeader;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import com.google.android.exoplayer2.util.Util;
-
-/**
- * Tests for {@link XingSeeker}.
- */
-public final class XingSeekerTest extends InstrumentationTestCase {
-
-  // Xing header/payload from http://storage.googleapis.com/exoplayer-test-media-0/play.mp3.
-  private static final int XING_FRAME_HEADER_DATA = 0xFFFB3000;
-  private static final byte[] XING_FRAME_PAYLOAD = Util.getBytesFromHexString(
-      "00000007000008dd000e7919000205080a0d0f1214171a1c1e212426292c2e303336383b3d404245484a4c4f5254"
-      + "575a5c5e616466696b6e707376787a7d808285878a8c8f929496999c9ea1a4a6a8abaeb0b3b5b8babdc0c2c4c7"
-      + "cacccfd2d4d6d9dcdee1e3e6e8ebeef0f2f5f8fafd");
-  private static final int XING_FRAME_POSITION = 157;
-
-  /**
-   * Size of the audio stream, encoded in {@link #XING_FRAME_PAYLOAD}.
-   */
-  private static final int STREAM_SIZE_BYTES = 948505;
-  /**
-   * Duration of the audio stream in microseconds, encoded in {@link #XING_FRAME_PAYLOAD}.
-   */
-  private static final int STREAM_DURATION_US = 59271836;
-  /**
-   * The length of the file in bytes.
-   */
-  private static final int INPUT_LENGTH = 948662;
-
-  private XingSeeker seeker;
-  private XingSeeker seekerWithInputLength;
-  private int xingFrameSize;
-
-  @Override
-  public void setUp() throws Exception {
-    MpegAudioHeader xingFrameHeader = new MpegAudioHeader();
-    MpegAudioHeader.populateHeader(XING_FRAME_HEADER_DATA, xingFrameHeader);
-    seeker = XingSeeker.create(xingFrameHeader, new ParsableByteArray(XING_FRAME_PAYLOAD),
-        XING_FRAME_POSITION, C.LENGTH_UNSET);
-    seekerWithInputLength = XingSeeker.create(xingFrameHeader,
-        new ParsableByteArray(XING_FRAME_PAYLOAD), XING_FRAME_POSITION, INPUT_LENGTH);
-    xingFrameSize = xingFrameHeader.frameSize;
-  }
-
-  public void testGetTimeUsBeforeFirstAudioFrame() {
-    assertEquals(0, seeker.getTimeUs(-1));
-    assertEquals(0, seekerWithInputLength.getTimeUs(-1));
-  }
-
-  public void testGetTimeUsAtFirstAudioFrame() {
-    assertEquals(0, seeker.getTimeUs(XING_FRAME_POSITION + xingFrameSize));
-    assertEquals(0, seekerWithInputLength.getTimeUs(XING_FRAME_POSITION + xingFrameSize));
-  }
-
-  public void testGetTimeUsAtEndOfStream() {
-    assertEquals(STREAM_DURATION_US,
-        seeker.getTimeUs(XING_FRAME_POSITION + xingFrameSize + STREAM_SIZE_BYTES));
-    assertEquals(STREAM_DURATION_US,
-        seekerWithInputLength.getTimeUs(XING_FRAME_POSITION + xingFrameSize + STREAM_SIZE_BYTES));
-  }
-
-  public void testGetPositionAtStartOfStream() {
-    assertEquals(XING_FRAME_POSITION + xingFrameSize, seeker.getPosition(0));
-    assertEquals(XING_FRAME_POSITION + xingFrameSize, seekerWithInputLength.getPosition(0));
-  }
-
-  public void testGetPositionAtEndOfStream() {
-    assertEquals(XING_FRAME_POSITION + STREAM_SIZE_BYTES - 1,
-        seeker.getPosition(STREAM_DURATION_US));
-    assertEquals(XING_FRAME_POSITION + STREAM_SIZE_BYTES - 1,
-        seekerWithInputLength.getPosition(STREAM_DURATION_US));
-  }
-
-  public void testGetTimeForAllPositions() {
-    for (int offset = xingFrameSize; offset < STREAM_SIZE_BYTES; offset++) {
-      int position = XING_FRAME_POSITION + offset;
-      long timeUs = seeker.getTimeUs(position);
-      assertEquals(position, seeker.getPosition(timeUs));
-      timeUs = seekerWithInputLength.getTimeUs(position);
-      assertEquals(position, seekerWithInputLength.getPosition(timeUs));
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/AtomParsersTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/AtomParsersTest.java
deleted file mode 100644
index d0213337b8..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/AtomParsersTest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mp4;
-
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import com.google.android.exoplayer2.util.Util;
-import junit.framework.TestCase;
-
-/**
- * Tests for {@link AtomParsers}.
- */
-public final class AtomParsersTest extends TestCase {
-
-  private static final String ATOM_HEADER = "000000000000000000000000";
-  private static final String SAMPLE_COUNT = "00000004";
-  private static final byte[] FOUR_BIT_STZ2 = Util.getBytesFromHexString(ATOM_HEADER + "00000004"
-      + SAMPLE_COUNT + "1234");
-  private static final byte[] EIGHT_BIT_STZ2 = Util.getBytesFromHexString(ATOM_HEADER + "00000008"
-      + SAMPLE_COUNT + "01020304");
-  private static final byte[] SIXTEEN_BIT_STZ2 = Util.getBytesFromHexString(ATOM_HEADER + "00000010"
-      + SAMPLE_COUNT + "0001000200030004");
-
-  public void testStz2Parsing4BitFieldSize() {
-    verifyParsing(new Atom.LeafAtom(Atom.TYPE_stsz, new ParsableByteArray(FOUR_BIT_STZ2)));
-  }
-
-  public void testStz2Parsing8BitFieldSize() {
-    verifyParsing(new Atom.LeafAtom(Atom.TYPE_stsz, new ParsableByteArray(EIGHT_BIT_STZ2)));
-  }
-
-  public void testStz2Parsing16BitFieldSize() {
-    verifyParsing(new Atom.LeafAtom(Atom.TYPE_stsz, new ParsableByteArray(SIXTEEN_BIT_STZ2)));
-  }
-
-  private void verifyParsing(Atom.LeafAtom stz2Atom) {
-    AtomParsers.Stz2SampleSizeBox box = new AtomParsers.Stz2SampleSizeBox(stz2Atom);
-    assertEquals(4, box.getSampleCount());
-    assertFalse(box.isFixedSampleSize());
-    for (int i = 0; i < box.getSampleCount(); i++) {
-      assertEquals(i + 1, box.readNextSampleSize());
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4ExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4ExtractorTest.java
deleted file mode 100644
index c9364aa605..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4ExtractorTest.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mp4;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link FragmentedMp4Extractor}.
- */
-public final class FragmentedMp4ExtractorTest extends InstrumentationTestCase {
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(getExtractorFactory(), "mp4/sample_fragmented.mp4",
-        getInstrumentation());
-  }
-
-  public void testSampleWithSeiPayloadParsing() throws Exception {
-    // Enabling the CEA-608 track enables SEI payload parsing.
-    ExtractorAsserts.assertBehavior(
-        getExtractorFactory(FragmentedMp4Extractor.FLAG_ENABLE_CEA608_TRACK),
-        "mp4/sample_fragmented_sei.mp4", getInstrumentation());
-  }
-
-  private static ExtractorFactory getExtractorFactory() {
-    return getExtractorFactory(0);
-  }
-
-  private static ExtractorFactory getExtractorFactory(final int flags) {
-    return new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new FragmentedMp4Extractor(flags, null);
-      }
-    };
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/Mp4ExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/Mp4ExtractorTest.java
deleted file mode 100644
index 5e327e5502..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/mp4/Mp4ExtractorTest.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.mp4;
-
-import android.annotation.TargetApi;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Tests for {@link Mp4Extractor}.
- */
-@TargetApi(16)
-public final class Mp4ExtractorTest extends InstrumentationTestCase {
-
-  public void testMp4Sample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new Mp4Extractor();
-      }
-    }, "mp4/sample.mp4", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/DefaultOggSeekerTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/DefaultOggSeekerTest.java
deleted file mode 100644
index cb1751d43b..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/DefaultOggSeekerTest.java
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import java.io.IOException;
-import java.util.Random;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link DefaultOggSeeker}.
- */
-public final class DefaultOggSeekerTest extends TestCase {
-
-  public void testSetupWithUnsetEndPositionFails() {
-    try {
-      new DefaultOggSeeker(0, C.LENGTH_UNSET, new TestStreamReader(), 1, 1);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // ignored
-    }
-  }
-
-  public void testSeeking() throws IOException, InterruptedException {
-    Random random = new Random(0);
-    for (int i = 0; i < 100; i++) {
-      testSeeking(random);
-    }
-  }
-
-  private void testSeeking(Random random) throws IOException, InterruptedException {
-    OggTestFile testFile = OggTestFile.generate(random, 1000);
-    FakeExtractorInput input = new FakeExtractorInput.Builder().setData(testFile.data).build();
-    TestStreamReader streamReader = new TestStreamReader();
-    DefaultOggSeeker oggSeeker = new DefaultOggSeeker(0, testFile.data.length, streamReader,
-        testFile.firstPayloadPageSize, testFile.firstPayloadPageGranulePosition);
-    OggPageHeader pageHeader = new OggPageHeader();
-
-    while (true) {
-      long nextSeekPosition = oggSeeker.read(input);
-      if (nextSeekPosition == -1) {
-        break;
-      }
-      input.setPosition((int) nextSeekPosition);
-    }
-
-    // Test granule 0 from file start
-    assertEquals(0, seekTo(input, oggSeeker, 0, 0));
-    assertEquals(0, input.getPosition());
-
-    // Test granule 0 from file end
-    assertEquals(0, seekTo(input, oggSeeker, 0, testFile.data.length - 1));
-    assertEquals(0, input.getPosition());
-
-    { // Test last granule
-      long currentGranule = seekTo(input, oggSeeker, testFile.lastGranule, 0);
-      long position = testFile.data.length;
-      assertTrue((testFile.lastGranule > currentGranule && position > input.getPosition())
-          || (testFile.lastGranule == currentGranule && position == input.getPosition()));
-    }
-
-    { // Test exact granule
-      input.setPosition(testFile.data.length / 2);
-      oggSeeker.skipToNextPage(input);
-      assertTrue(pageHeader.populate(input, true));
-      long position = input.getPosition() + pageHeader.headerSize + pageHeader.bodySize;
-      long currentGranule = seekTo(input, oggSeeker, pageHeader.granulePosition, 0);
-      assertTrue((pageHeader.granulePosition > currentGranule && position > input.getPosition())
-          || (pageHeader.granulePosition == currentGranule && position == input.getPosition()));
-    }
-
-    for (int i = 0; i < 100; i += 1) {
-      long targetGranule = (long) (random.nextDouble() * testFile.lastGranule);
-      int initialPosition = random.nextInt(testFile.data.length);
-
-      long currentGranule = seekTo(input, oggSeeker, targetGranule, initialPosition);
-      long currentPosition = input.getPosition();
-
-      assertTrue("getNextSeekPosition() didn't leave input on a page start.",
-          pageHeader.populate(input, true));
-
-      if (currentGranule == 0) {
-        assertEquals(0, currentPosition);
-      } else {
-        int previousPageStart = testFile.findPreviousPageStart(currentPosition);
-        input.setPosition(previousPageStart);
-        assertTrue(pageHeader.populate(input, true));
-        assertEquals(pageHeader.granulePosition, currentGranule);
-      }
-
-      input.setPosition((int) currentPosition);
-      oggSeeker.skipToPageOfGranule(input, targetGranule, -1);
-      long positionDiff = Math.abs(input.getPosition() - currentPosition);
-
-      long granuleDiff = currentGranule - targetGranule;
-      if ((granuleDiff > DefaultOggSeeker.MATCH_RANGE || granuleDiff < 0)
-          && positionDiff > DefaultOggSeeker.MATCH_BYTE_RANGE) {
-        fail("granuleDiff (" + granuleDiff + ") or positionDiff (" + positionDiff
-            + ") is more than allowed.");
-      }
-    }
-  }
-
-  private long seekTo(FakeExtractorInput input, DefaultOggSeeker oggSeeker, long targetGranule,
-      int initialPosition) throws IOException, InterruptedException {
-    long nextSeekPosition = initialPosition;
-    int count = 0;
-    oggSeeker.resetSeeking();
-
-    do {
-      input.setPosition((int) nextSeekPosition);
-      nextSeekPosition = oggSeeker.getNextSeekPosition(targetGranule, input);
-
-      if (count++ > 100) {
-        fail("infinite loop?");
-      }
-    } while (nextSeekPosition >= 0);
-
-    return -(nextSeekPosition + 2);
-  }
-
-  private static class TestStreamReader extends StreamReader {
-    @Override
-    protected long preparePayload(ParsableByteArray packet) {
-      return 0;
-    }
-
-    @Override
-    protected boolean readHeaders(ParsableByteArray packet, long position,
-        SetupData setupData) throws IOException, InterruptedException {
-      return false;
-    }
-  }
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/DefaultOggSeekerUtilMethodsTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/DefaultOggSeekerUtilMethodsTest.java
deleted file mode 100644
index d52deb108f..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/DefaultOggSeekerUtilMethodsTest.java
+++ /dev/null
@@ -1,207 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.extractor.ExtractorInput;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.EOFException;
-import java.io.IOException;
-import java.util.Random;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link DefaultOggSeeker} utility methods.
- */
-public class DefaultOggSeekerUtilMethodsTest extends TestCase {
-
-  private final Random random = new Random(0);
-
-  public void testSkipToNextPage() throws Exception {
-    FakeExtractorInput extractorInput = TestData.createInput(
-        TestUtil.joinByteArrays(
-            TestUtil.buildTestData(4000, random),
-            new byte[]{'O', 'g', 'g', 'S'},
-            TestUtil.buildTestData(4000, random)
-        ), false);
-    skipToNextPage(extractorInput);
-    assertEquals(4000, extractorInput.getPosition());
-  }
-
-  public void testSkipToNextPageOverlap() throws Exception {
-    FakeExtractorInput extractorInput = TestData.createInput(
-        TestUtil.joinByteArrays(
-            TestUtil.buildTestData(2046, random),
-            new byte[]{'O', 'g', 'g', 'S'},
-            TestUtil.buildTestData(4000, random)
-        ), false);
-    skipToNextPage(extractorInput);
-    assertEquals(2046, extractorInput.getPosition());
-  }
-
-  public void testSkipToNextPageInputShorterThanPeekLength() throws Exception {
-    FakeExtractorInput extractorInput = TestData.createInput(
-        TestUtil.joinByteArrays(
-            new byte[]{'x', 'O', 'g', 'g', 'S'}
-        ), false);
-    skipToNextPage(extractorInput);
-    assertEquals(1, extractorInput.getPosition());
-  }
-
-  public void testSkipToNextPageNoMatch() throws Exception {
-    FakeExtractorInput extractorInput = TestData.createInput(
-        new byte[]{'g', 'g', 'S', 'O', 'g', 'g'}, false);
-    try {
-      skipToNextPage(extractorInput);
-      fail();
-    } catch (EOFException e) {
-      // expected
-    }
-  }
-
-  private static void skipToNextPage(ExtractorInput extractorInput)
-      throws IOException, InterruptedException {
-    DefaultOggSeeker oggSeeker = new DefaultOggSeeker(0, extractorInput.getLength(),
-        new FlacReader(), 1, 2);
-    while (true) {
-      try {
-        oggSeeker.skipToNextPage(extractorInput);
-        break;
-      } catch (FakeExtractorInput.SimulatedIOException e) { /* ignored */ }
-    }
-  }
-
-  public void testSkipToPageOfGranule() throws IOException, InterruptedException {
-    byte[] packet = TestUtil.buildTestData(3 * 254, random);
-    byte[] data = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x01, 20000, 1000, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet,
-        TestData.buildOggHeader(0x04, 40000, 1001, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet,
-        TestData.buildOggHeader(0x04, 60000, 1002, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet);
-    FakeExtractorInput input = new FakeExtractorInput.Builder().setData(data).build();
-
-    // expect to be granule of the previous page returned as elapsedSamples
-    skipToPageOfGranule(input, 54000, 40000);
-    // expect to be at the start of the third page
-    assertEquals(2 * (30 + (3 * 254)), input.getPosition());
-  }
-
-  public void testSkipToPageOfGranulePreciseMatch() throws IOException, InterruptedException {
-    byte[] packet = TestUtil.buildTestData(3 * 254, random);
-    byte[] data = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x01, 20000, 1000, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet,
-        TestData.buildOggHeader(0x04, 40000, 1001, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet,
-        TestData.buildOggHeader(0x04, 60000, 1002, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet);
-    FakeExtractorInput input = new FakeExtractorInput.Builder().setData(data).build();
-
-    skipToPageOfGranule(input, 40000, 20000);
-    // expect to be at the start of the second page
-    assertEquals((30 + (3 * 254)), input.getPosition());
-  }
-
-  public void testSkipToPageOfGranuleAfterTargetPage() throws IOException, InterruptedException {
-    byte[] packet = TestUtil.buildTestData(3 * 254, random);
-    byte[] data = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x01, 20000, 1000, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet,
-        TestData.buildOggHeader(0x04, 40000, 1001, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet,
-        TestData.buildOggHeader(0x04, 60000, 1002, 0x03),
-        TestUtil.createByteArray(254, 254, 254), // Laces.
-        packet);
-    FakeExtractorInput input = new FakeExtractorInput.Builder().setData(data).build();
-
-    skipToPageOfGranule(input, 10000, -1);
-    assertEquals(0, input.getPosition());
-  }
-
-  private void skipToPageOfGranule(ExtractorInput input, long granule,
-      long elapsedSamplesExpected) throws IOException, InterruptedException {
-    DefaultOggSeeker oggSeeker = new DefaultOggSeeker(0, input.getLength(), new FlacReader(), 1, 2);
-    while (true) {
-      try {
-        assertEquals(elapsedSamplesExpected, oggSeeker.skipToPageOfGranule(input, granule, -1));
-        return;
-      } catch (FakeExtractorInput.SimulatedIOException e) {
-        input.resetPeekPosition();
-      }
-    }
-  }
-
-  public void testReadGranuleOfLastPage() throws IOException, InterruptedException {
-    FakeExtractorInput input = TestData.createInput(TestUtil.joinByteArrays(
-        TestUtil.buildTestData(100, random),
-        TestData.buildOggHeader(0x00, 20000, 66, 3),
-        TestUtil.createByteArray(254, 254, 254), // laces
-        TestUtil.buildTestData(3 * 254, random),
-        TestData.buildOggHeader(0x00, 40000, 67, 3),
-        TestUtil.createByteArray(254, 254, 254), // laces
-        TestUtil.buildTestData(3 * 254, random),
-        TestData.buildOggHeader(0x05, 60000, 68, 3),
-        TestUtil.createByteArray(254, 254, 254), // laces
-        TestUtil.buildTestData(3 * 254, random)
-    ), false);
-    assertReadGranuleOfLastPage(input, 60000);
-  }
-
-  public void testReadGranuleOfLastPageAfterLastHeader() throws IOException, InterruptedException {
-    FakeExtractorInput input = TestData.createInput(TestUtil.buildTestData(100, random), false);
-    try {
-      assertReadGranuleOfLastPage(input, 60000);
-      fail();
-    } catch (EOFException e) {
-      // ignored
-    }
-  }
-
-  public void testReadGranuleOfLastPageWithUnboundedLength()
-      throws IOException, InterruptedException {
-    FakeExtractorInput input = TestData.createInput(new byte[0], true);
-    try {
-      assertReadGranuleOfLastPage(input, 60000);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // ignored
-    }
-  }
-
-  private void assertReadGranuleOfLastPage(FakeExtractorInput input, int expected)
-      throws IOException, InterruptedException {
-    DefaultOggSeeker oggSeeker = new DefaultOggSeeker(0, input.getLength(), new FlacReader(), 1, 2);
-    while (true) {
-      try {
-        assertEquals(expected, oggSeeker.readGranuleOfLastPage(input));
-        break;
-      } catch (FakeExtractorInput.SimulatedIOException e) {
-        // ignored
-      }
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggExtractorTest.java
deleted file mode 100644
index 3be23422cc..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggExtractorTest.java
+++ /dev/null
@@ -1,105 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-
-/**
- * Unit test for {@link OggExtractor}.
- */
-public final class OggExtractorTest extends InstrumentationTestCase {
-
-  private static final ExtractorFactory OGG_EXTRACTOR_FACTORY = new ExtractorFactory() {
-    @Override
-    public Extractor create() {
-      return new OggExtractor();
-    }
-  };
-
-  public void testOpus() throws Exception {
-    ExtractorAsserts.assertBehavior(OGG_EXTRACTOR_FACTORY, "ogg/bear.opus", getInstrumentation());
-  }
-
-  public void testFlac() throws Exception {
-    ExtractorAsserts.assertBehavior(OGG_EXTRACTOR_FACTORY, "ogg/bear_flac.ogg",
-        getInstrumentation());
-  }
-
-  public void testFlacNoSeektable() throws Exception {
-    ExtractorAsserts.assertBehavior(OGG_EXTRACTOR_FACTORY, "ogg/bear_flac_noseektable.ogg",
-        getInstrumentation());
-  }
-
-  public void testVorbis() throws Exception {
-    ExtractorAsserts.assertBehavior(OGG_EXTRACTOR_FACTORY, "ogg/bear_vorbis.ogg",
-        getInstrumentation());
-  }
-
-  public void testSniffVorbis() throws Exception {
-    byte[] data = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x02, 0, 1000, 1),
-        TestUtil.createByteArray(7),  // Laces
-        new byte[] {0x01, 'v', 'o', 'r', 'b', 'i', 's'});
-    assertTrue(sniff(data));
-  }
-
-  public void testSniffFlac() throws Exception {
-    byte[] data = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x02, 0, 1000, 1),
-        TestUtil.createByteArray(5),  // Laces
-        new byte[] {0x7F, 'F', 'L', 'A', 'C'});
-    assertTrue(sniff(data));
-  }
-
-  public void testSniffFailsOpusFile() throws Exception {
-    byte[] data = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x02, 0, 1000, 0x00),
-        new byte[] {'O', 'p', 'u', 's'});
-    assertFalse(sniff(data));
-  }
-
-  public void testSniffFailsInvalidOggHeader() throws Exception {
-    byte[] data = TestData.buildOggHeader(0x00, 0, 1000, 0x00);
-    assertFalse(sniff(data));
-  }
-
-  public void testSniffInvalidHeader() throws Exception {
-    byte[] data = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x02, 0, 1000, 1),
-        TestUtil.createByteArray(7),  // Laces
-        new byte[] {0x7F, 'X', 'o', 'r', 'b', 'i', 's'});
-    assertFalse(sniff(data));
-  }
-
-  public void testSniffFailsEOF() throws Exception {
-    byte[] data = TestData.buildOggHeader(0x02, 0, 1000, 0x00);
-    assertFalse(sniff(data));
-  }
-
-  private boolean sniff(byte[] data) throws InterruptedException, IOException {
-    FakeExtractorInput input = new FakeExtractorInput.Builder().setData(data)
-        .setSimulateIOErrors(true).setSimulateUnknownLength(true).setSimulatePartialReads(true)
-        .build();
-    return TestUtil.sniffTestData(OGG_EXTRACTOR_FACTORY.create(), input);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggPacketTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggPacketTest.java
deleted file mode 100644
index 991d31ff03..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggPacketTest.java
+++ /dev/null
@@ -1,246 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import android.test.InstrumentationTestCase;
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import java.io.IOException;
-import java.util.Arrays;
-import java.util.Random;
-
-/**
- * Unit test for {@link OggPacket}.
- */
-public final class OggPacketTest extends InstrumentationTestCase {
-
-  private static final String TEST_FILE = "ogg/bear.opus";
-
-  private Random random;
-  private OggPacket oggPacket;
-
-  @Override
-  public void setUp() throws Exception {
-    super.setUp();
-    random = new Random(0);
-    oggPacket = new OggPacket();
-  }
-
-  public void testReadPacketsWithEmptyPage() throws Exception {
-    byte[] firstPacket = TestUtil.buildTestData(8, random);
-    byte[] secondPacket = TestUtil.buildTestData(272, random);
-    byte[] thirdPacket = TestUtil.buildTestData(256, random);
-    byte[] fourthPacket = TestUtil.buildTestData(271, random);
-
-    FakeExtractorInput input = TestData.createInput(
-        TestUtil.joinByteArrays(
-            // First page with a single packet.
-            TestData.buildOggHeader(0x02,  0, 1000, 0x01),
-            TestUtil.createByteArray(0x08), // Laces
-            firstPacket,
-            // Second page with a single packet.
-            TestData.buildOggHeader(0x00,  16, 1001, 0x02),
-            TestUtil.createByteArray(0xFF, 0x11), // Laces
-            secondPacket,
-            // Third page with zero packets.
-            TestData.buildOggHeader(0x00,  16, 1002, 0x00),
-            // Fourth page with two packets.
-            TestData.buildOggHeader(0x04,  128, 1003, 0x04),
-            TestUtil.createByteArray(0xFF, 0x01, 0xFF, 0x10), // Laces
-            thirdPacket,
-            fourthPacket), true);
-
-    assertReadPacket(input, firstPacket);
-    assertTrue((oggPacket.getPageHeader().type & 0x02) == 0x02);
-    assertFalse((oggPacket.getPageHeader().type & 0x04) == 0x04);
-    assertEquals(0x02, oggPacket.getPageHeader().type);
-    assertEquals(27 + 1, oggPacket.getPageHeader().headerSize);
-    assertEquals(8, oggPacket.getPageHeader().bodySize);
-    assertEquals(0x00, oggPacket.getPageHeader().revision);
-    assertEquals(1, oggPacket.getPageHeader().pageSegmentCount);
-    assertEquals(1000, oggPacket.getPageHeader().pageSequenceNumber);
-    assertEquals(4096, oggPacket.getPageHeader().streamSerialNumber);
-    assertEquals(0, oggPacket.getPageHeader().granulePosition);
-
-    assertReadPacket(input, secondPacket);
-    assertFalse((oggPacket.getPageHeader().type & 0x02) == 0x02);
-    assertFalse((oggPacket.getPageHeader().type & 0x04) == 0x04);
-    assertEquals(0, oggPacket.getPageHeader().type);
-    assertEquals(27 + 2, oggPacket.getPageHeader().headerSize);
-    assertEquals(255 + 17, oggPacket.getPageHeader().bodySize);
-    assertEquals(2, oggPacket.getPageHeader().pageSegmentCount);
-    assertEquals(1001, oggPacket.getPageHeader().pageSequenceNumber);
-    assertEquals(16, oggPacket.getPageHeader().granulePosition);
-
-    assertReadPacket(input, thirdPacket);
-    assertFalse((oggPacket.getPageHeader().type & 0x02) == 0x02);
-    assertTrue((oggPacket.getPageHeader().type & 0x04) == 0x04);
-    assertEquals(4, oggPacket.getPageHeader().type);
-    assertEquals(27 + 4, oggPacket.getPageHeader().headerSize);
-    assertEquals(255 + 1 + 255 + 16, oggPacket.getPageHeader().bodySize);
-    assertEquals(4, oggPacket.getPageHeader().pageSegmentCount);
-    // Page 1002 is empty, so current page is 1003.
-    assertEquals(1003, oggPacket.getPageHeader().pageSequenceNumber);
-    assertEquals(128, oggPacket.getPageHeader().granulePosition);
-
-    assertReadPacket(input, fourthPacket);
-
-    assertReadEof(input);
-  }
-
-  public void testReadPacketWithZeroSizeTerminator() throws Exception {
-    byte[] firstPacket = TestUtil.buildTestData(255, random);
-    byte[] secondPacket = TestUtil.buildTestData(8, random);
-
-    FakeExtractorInput input = TestData.createInput(
-        TestUtil.joinByteArrays(
-            TestData.buildOggHeader(0x06, 0, 1000, 0x04),
-            TestUtil.createByteArray(0xFF, 0x00, 0x00, 0x08), // Laces.
-            firstPacket,
-            secondPacket), true);
-
-    assertReadPacket(input, firstPacket);
-    assertReadPacket(input, secondPacket);
-    assertReadEof(input);
-  }
-
-  public void testReadContinuedPacketOverTwoPages() throws Exception {
-    byte[] firstPacket = TestUtil.buildTestData(518);
-
-    FakeExtractorInput input = TestData.createInput(
-        TestUtil.joinByteArrays(
-            // First page.
-            TestData.buildOggHeader(0x02, 0, 1000, 0x02),
-            TestUtil.createByteArray(0xFF, 0xFF), // Laces.
-            Arrays.copyOf(firstPacket, 510),
-            // Second page (continued packet).
-            TestData.buildOggHeader(0x05, 10, 1001, 0x01),
-            TestUtil.createByteArray(0x08), // Laces.
-            Arrays.copyOfRange(firstPacket, 510, 510 + 8)), true);
-
-    assertReadPacket(input, firstPacket);
-    assertTrue((oggPacket.getPageHeader().type & 0x04) == 0x04);
-    assertFalse((oggPacket.getPageHeader().type & 0x02) == 0x02);
-    assertEquals(1001, oggPacket.getPageHeader().pageSequenceNumber);
-
-    assertReadEof(input);
-  }
-
-  public void testReadContinuedPacketOverFourPages() throws Exception {
-    byte[] firstPacket = TestUtil.buildTestData(1028);
-
-    FakeExtractorInput input = TestData.createInput(
-        TestUtil.joinByteArrays(
-            // First page.
-            TestData.buildOggHeader(0x02, 0, 1000, 0x02),
-            TestUtil.createByteArray(0xFF, 0xFF), // Laces.
-            Arrays.copyOf(firstPacket, 510),
-            // Second page (continued packet).
-            TestData.buildOggHeader(0x01, 10, 1001, 0x01),
-            TestUtil.createByteArray(0xFF), // Laces.
-            Arrays.copyOfRange(firstPacket, 510, 510 + 255),
-            // Third page (continued packet).
-            TestData.buildOggHeader(0x01, 10, 1002, 0x01),
-            TestUtil.createByteArray(0xFF), // Laces.
-            Arrays.copyOfRange(firstPacket, 510 + 255, 510 + 255 + 255),
-            // Fourth page (continued packet).
-            TestData.buildOggHeader(0x05, 10, 1003, 0x01),
-            TestUtil.createByteArray(0x08), // Laces.
-            Arrays.copyOfRange(firstPacket, 510 + 255 + 255, 510 + 255 + 255 + 8)), true);
-
-    assertReadPacket(input, firstPacket);
-    assertTrue((oggPacket.getPageHeader().type & 0x04) == 0x04);
-    assertFalse((oggPacket.getPageHeader().type & 0x02) == 0x02);
-    assertEquals(1003, oggPacket.getPageHeader().pageSequenceNumber);
-
-    assertReadEof(input);
-  }
-
-  public void testReadDiscardContinuedPacketAtStart() throws Exception {
-    byte[] pageBody = TestUtil.buildTestData(256 + 8);
-
-    FakeExtractorInput input = TestData.createInput(
-        TestUtil.joinByteArrays(
-            // Page with a continued packet at start.
-            TestData.buildOggHeader(0x01, 10, 1001, 0x03),
-            TestUtil.createByteArray(255, 1, 8), // Laces.
-            pageBody), true);
-
-    // Expect the first partial packet to be discarded.
-    assertReadPacket(input, Arrays.copyOfRange(pageBody, 256, 256 + 8));
-    assertReadEof(input);
-  }
-
-  public void testReadZeroSizedPacketsAtEndOfStream() throws Exception {
-    byte[] firstPacket = TestUtil.buildTestData(8, random);
-    byte[] secondPacket = TestUtil.buildTestData(8, random);
-    byte[] thirdPacket = TestUtil.buildTestData(8, random);
-
-    FakeExtractorInput input = TestData.createInput(
-        TestUtil.joinByteArrays(
-            TestData.buildOggHeader(0x02, 0, 1000, 0x01),
-            TestUtil.createByteArray(0x08), // Laces.
-            firstPacket,
-            TestData.buildOggHeader(0x04, 0, 1001, 0x03),
-            TestUtil.createByteArray(0x08, 0x00, 0x00), // Laces.
-            secondPacket,
-            TestData.buildOggHeader(0x04, 0, 1002, 0x03),
-            TestUtil.createByteArray(0x08, 0x00, 0x00), // Laces.
-            thirdPacket), true);
-
-    assertReadPacket(input, firstPacket);
-    assertReadPacket(input, secondPacket);
-    assertReadPacket(input, thirdPacket);
-    assertReadEof(input);
-  }
-
-
-  public void testParseRealFile() throws IOException, InterruptedException {
-    byte[] data = TestUtil.getByteArray(getInstrumentation(), TEST_FILE);
-    FakeExtractorInput input = new FakeExtractorInput.Builder().setData(data).build();
-    int packetCounter = 0;
-    while (readPacket(input)) {
-      packetCounter++;
-    }
-    assertEquals(277, packetCounter);
-  }
-
-  private void assertReadPacket(FakeExtractorInput extractorInput, byte[] expected)
-      throws IOException, InterruptedException {
-    assertTrue(readPacket(extractorInput));
-    ParsableByteArray payload = oggPacket.getPayload();
-    MoreAsserts.assertEquals(expected, Arrays.copyOf(payload.data, payload.limit()));
-  }
-
-  private void assertReadEof(FakeExtractorInput extractorInput)
-      throws IOException, InterruptedException {
-    assertFalse(readPacket(extractorInput));
-  }
-
-  private boolean readPacket(FakeExtractorInput input)
-      throws InterruptedException, IOException {
-    while (true) {
-      try {
-        return oggPacket.populate(input);
-      } catch (FakeExtractorInput.SimulatedIOException e) {
-        // Ignore.
-      }
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggPageHeaderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggPageHeaderTest.java
deleted file mode 100644
index 9d39eba174..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggPageHeaderTest.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput.SimulatedIOException;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link OggPageHeader}.
- */
-public final class OggPageHeaderTest extends TestCase {
-
-  public void testPopulatePageHeader() throws IOException, InterruptedException {
-    FakeExtractorInput input = TestData.createInput(TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x01, 123456, 4, 2),
-        TestUtil.createByteArray(2, 2)
-    ), true);
-    OggPageHeader header = new OggPageHeader();
-    populatePageHeader(input, header, false);
-
-    assertEquals(0x01, header.type);
-    assertEquals(27 + 2, header.headerSize);
-    assertEquals(4, header.bodySize);
-    assertEquals(2, header.pageSegmentCount);
-    assertEquals(123456, header.granulePosition);
-    assertEquals(4, header.pageSequenceNumber);
-    assertEquals(0x1000, header.streamSerialNumber);
-    assertEquals(0x100000, header.pageChecksum);
-    assertEquals(0, header.revision);
-  }
-
-  public void testPopulatePageHeaderQuiteOnExceptionLessThan27Bytes()
-      throws IOException, InterruptedException {
-    FakeExtractorInput input = TestData.createInput(TestUtil.createByteArray(2, 2), false);
-    OggPageHeader header = new OggPageHeader();
-    assertFalse(populatePageHeader(input, header, true));
-  }
-
-  public void testPopulatePageHeaderQuiteOnExceptionNotOgg()
-      throws IOException, InterruptedException {
-    byte[] headerBytes = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x01, 123456, 4, 2),
-        TestUtil.createByteArray(2, 2)
-    );
-    // change from 'O' to 'o'
-    headerBytes[0] = 'o';
-    FakeExtractorInput input = TestData.createInput(headerBytes, false);
-    OggPageHeader header = new OggPageHeader();
-    assertFalse(populatePageHeader(input, header, true));
-  }
-
-  public void testPopulatePageHeaderQuiteOnExceptionWrongRevision()
-      throws IOException, InterruptedException {
-    byte[] headerBytes = TestUtil.joinByteArrays(
-        TestData.buildOggHeader(0x01, 123456, 4, 2),
-        TestUtil.createByteArray(2, 2)
-    );
-    // change revision from 0 to 1
-    headerBytes[4] = 0x01;
-    FakeExtractorInput input = TestData.createInput(headerBytes, false);
-    OggPageHeader header = new OggPageHeader();
-    assertFalse(populatePageHeader(input, header, true));
-  }
-
-  private boolean populatePageHeader(FakeExtractorInput input, OggPageHeader header,
-      boolean quite) throws IOException, InterruptedException {
-    while (true) {
-      try {
-        return header.populate(input, quite);
-      } catch (SimulatedIOException e) {
-        // ignored
-      }
-    }
-  }
-
-}
-
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggTestFile.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggTestFile.java
deleted file mode 100644
index d5d187ee7c..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/OggTestFile.java
+++ /dev/null
@@ -1,125 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.util.ArrayList;
-import java.util.Random;
-import junit.framework.Assert;
-
-/**
- * Generates test data.
- */
-/* package */ final class OggTestFile {
-
-  private static final int MAX_PACKET_LENGTH = 2048;
-  private static final int MAX_SEGMENT_COUNT = 10;
-  private static final int MAX_GRANULES_IN_PAGE = 100000;
-
-  public final byte[] data;
-  public final long lastGranule;
-  public final int packetCount;
-  public final int pageCount;
-  public final int firstPayloadPageSize;
-  public final long firstPayloadPageGranulePosition;
-
-  private OggTestFile(byte[] data, long lastGranule, int packetCount, int pageCount,
-      int firstPayloadPageSize, long firstPayloadPageGranulePosition) {
-    this.data = data;
-    this.lastGranule = lastGranule;
-    this.packetCount = packetCount;
-    this.pageCount = pageCount;
-    this.firstPayloadPageSize = firstPayloadPageSize;
-    this.firstPayloadPageGranulePosition = firstPayloadPageGranulePosition;
-  }
-
-  public static OggTestFile generate(Random random, int pageCount) {
-    ArrayList<byte[]> fileData = new ArrayList<>();
-    int fileSize = 0;
-    long granule = 0;
-    int packetLength = -1;
-    int packetCount = 0;
-    int firstPayloadPageSize = 0;
-    long firstPayloadPageGranulePosition = 0;
-
-    for (int i = 0; i < pageCount; i++) {
-      int headerType = 0x00;
-      if (packetLength >= 0) {
-        headerType |= 1;
-      }
-      if (i == 0) {
-        headerType |= 2;
-      }
-      if (i == pageCount - 1) {
-        headerType |= 4;
-      }
-      granule += random.nextInt(MAX_GRANULES_IN_PAGE - 1) + 1;
-      int pageSegmentCount = random.nextInt(MAX_SEGMENT_COUNT);
-      byte[] header = TestData.buildOggHeader(headerType, granule, 0, pageSegmentCount);
-      fileData.add(header);
-      fileSize += header.length;
-
-      byte[] laces = new byte[pageSegmentCount];
-      int bodySize = 0;
-      for (int j = 0; j < pageSegmentCount; j++) {
-        if (packetLength < 0) {
-          packetCount++;
-          if (i < pageCount - 1) {
-            packetLength = random.nextInt(MAX_PACKET_LENGTH);
-          } else {
-            int maxPacketLength = 255 * (pageSegmentCount - j) - 1;
-            packetLength = random.nextInt(maxPacketLength);
-          }
-        } else if (i == pageCount - 1 && j == pageSegmentCount - 1) {
-          packetLength = Math.min(packetLength, 254);
-        }
-        laces[j] = (byte) Math.min(packetLength, 255);
-        bodySize += laces[j] & 0xFF;
-        packetLength -= 255;
-      }
-      fileData.add(laces);
-      fileSize += laces.length;
-
-      byte[] payload = TestUtil.buildTestData(bodySize, random);
-      fileData.add(payload);
-      fileSize += payload.length;
-      if (i == 0) {
-        firstPayloadPageSize = header.length + bodySize;
-        firstPayloadPageGranulePosition = granule;
-      }
-    }
-
-    byte[] file = new byte[fileSize];
-    int position = 0;
-    for (byte[] data : fileData) {
-      System.arraycopy(data, 0, file, position, data.length);
-      position += data.length;
-    }
-    return new OggTestFile(file, granule, packetCount, pageCount, firstPayloadPageSize,
-        firstPayloadPageGranulePosition);
-  }
-
-  public int findPreviousPageStart(long position) {
-    for (int i = (int) (position - 4); i >= 0; i--) {
-      if (data[i] == 'O' && data[i + 1] == 'g' && data[i + 2] == 'g' && data[i + 3] == 'S') {
-        return i;
-      }
-    }
-    Assert.fail();
-    return -1;
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/TestData.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/TestData.java
deleted file mode 100644
index cef033bf17..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/TestData.java
+++ /dev/null
@@ -1,1076 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.TestUtil;
-
-/**
- * Provides ogg/vorbis test data in bytes for unit tests.
- */
-/* package */ final class TestData {
-
-  /* package */ static FakeExtractorInput createInput(byte[] data, boolean simulateUnkownLength) {
-    return new FakeExtractorInput.Builder().setData(data).setSimulateIOErrors(true)
-        .setSimulateUnknownLength(simulateUnkownLength).setSimulatePartialReads(true).build();
-  }
-
-  public static byte[] buildOggHeader(int headerType, long granule, int pageSequenceCounter,
-      int pageSegmentCount) {
-    return TestUtil.createByteArray(
-        0x4F, 0x67, 0x67, 0x53, // Oggs.
-        0x00, // Stream revision.
-        headerType,
-        (int) (granule) & 0xFF,
-        (int) (granule >> 8) & 0xFF,
-        (int) (granule >> 16) & 0xFF,
-        (int) (granule >> 24) & 0xFF,
-        (int) (granule >> 32) & 0xFF,
-        (int) (granule >> 40) & 0xFF,
-        (int) (granule >> 48) & 0xFF,
-        (int) (granule >> 56) & 0xFF,
-        0x00, // LSB of data serial number.
-        0x10,
-        0x00,
-        0x00, // MSB of data serial number.
-        (pageSequenceCounter) & 0xFF,
-        (pageSequenceCounter >> 8) & 0xFF,
-        (pageSequenceCounter >> 16) & 0xFF,
-        (pageSequenceCounter >> 24) & 0xFF,
-        0x00, // LSB of page checksum.
-        0x00,
-        0x10,
-        0x00, // MSB of page checksum.
-        pageSegmentCount);
-  }
-
-  /**
-   * Returns the initial two pages of bytes which by spec contain the three vorbis header packets:
-   * identification, comment and setup header.
-   */
-  public static byte[] getVorbisHeaderPages() {
-    byte[] data = new byte[VORBIS_HEADER_PAGES.length];
-    System.arraycopy(VORBIS_HEADER_PAGES, 0, data, 0,
-        VORBIS_HEADER_PAGES.length);
-    return data;
-  }
-
-  /**
-   * Returns a valid vorbis identification header in bytes.
-   */
-  public static byte[] getIdentificationHeaderData() {
-    int idHeaderStart = 28;
-    int idHeaderLength = 30;
-    byte[] idHeaderData = new byte[idHeaderLength];
-    System.arraycopy(VORBIS_HEADER_PAGES, idHeaderStart, idHeaderData, 0, idHeaderLength);
-    return idHeaderData;
-  }
-
-  /**
-   * Returns a valid vorbis comment header with 3 comments including utf8 chars in bytes.
-   */
-  public static byte[] getCommentHeaderDataUTF8() {
-    byte[] commentHeaderData = new byte[COMMENT_HEADER_WITH_UTF8.length];
-    System.arraycopy(COMMENT_HEADER_WITH_UTF8, 0, commentHeaderData, 0,
-        COMMENT_HEADER_WITH_UTF8.length);
-    return commentHeaderData;
-  }
-
-  /**
-   * Returns a valid vorbis setup header in bytes.
-   */
-  public static byte[] getSetupHeaderData() {
-    int setupHeaderStart = 146;
-    int setupHeaderLength = VORBIS_HEADER_PAGES.length - setupHeaderStart;
-    byte[] setupHeaderData = new byte[setupHeaderLength];
-    System.arraycopy(VORBIS_HEADER_PAGES, setupHeaderStart, setupHeaderData, 0, setupHeaderLength);
-    return setupHeaderData;
-  }
-
-  private static final byte[] COMMENT_HEADER_WITH_UTF8 = {
-      (byte) 0x03, (byte) 0x76, (byte) 0x6f, (byte) 0x72, // 3, v, o, r,
-      (byte) 0x62, (byte) 0x69, (byte) 0x73, (byte) 0x2b, // b, i, s, .
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x58,
-      (byte) 0x69, (byte) 0x70, (byte) 0x68, (byte) 0x2e,
-      (byte) 0x4f, (byte) 0x72, (byte) 0x67, (byte) 0x20,
-      (byte) 0x6c, (byte) 0x69, (byte) 0x62, (byte) 0x56,
-      (byte) 0x6f, (byte) 0x72, (byte) 0x62, (byte) 0x69,
-      (byte) 0x73, (byte) 0x20, (byte) 0x49, (byte) 0x20,
-      (byte) 0x32, (byte) 0x30, (byte) 0x31, (byte) 0x32,
-      (byte) 0x30, (byte) 0x32, (byte) 0x30, (byte) 0x33,
-      (byte) 0x20, (byte) 0x28, (byte) 0x4f, (byte) 0x6d,
-      (byte) 0x6e, (byte) 0x69, (byte) 0x70, (byte) 0x72,
-      (byte) 0x65, (byte) 0x73, (byte) 0x65, (byte) 0x6e,
-      (byte) 0x74, (byte) 0x29, (byte) 0x03, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x0a, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x41, (byte) 0x4c,
-      (byte) 0x42, (byte) 0x55, (byte) 0x4d, (byte) 0x3d,
-      (byte) 0xc3, (byte) 0xa4, (byte) 0xc3, (byte) 0xb6,
-      (byte) 0x13, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x54, (byte) 0x49, (byte) 0x54, (byte) 0x4c,
-      (byte) 0x45, (byte) 0x3d, (byte) 0x41, (byte) 0x20,
-      (byte) 0x73, (byte) 0x61, (byte) 0x6d, (byte) 0x70,
-      (byte) 0x6c, (byte) 0x65, (byte) 0x20, (byte) 0x73,
-      (byte) 0x6f, (byte) 0x6e, (byte) 0x67, (byte) 0x0d,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x41,
-      (byte) 0x52, (byte) 0x54, (byte) 0x49, (byte) 0x53,
-      (byte) 0x54, (byte) 0x3d, (byte) 0x47, (byte) 0x6f,
-      (byte) 0x6f, (byte) 0x67, (byte) 0x6c, (byte) 0x65,
-      (byte) 0x01
-  };
-
-  // two OGG pages with 3 packets (id, comment and setup header)
-  // length: 3743 bytes
-  private static final byte[] VORBIS_HEADER_PAGES = {     /* capture pattern ogg header 1 */
-      (byte) 0x4f, (byte) 0x67, (byte) 0x67, (byte) 0x53, // O,g,g,S  : start pos 0
-      (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x5e, (byte) 0x5f,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x83, (byte) 0x36,
-      (byte) 0xe3, (byte) 0x49, (byte) 0x01, (byte) 0x1e, /* capture pattern vorbis id header */
-      (byte) 0x01, (byte) 0x76, (byte) 0x6f, (byte) 0x72, // 1,v,o,r  : start pos 28
-      (byte) 0x62, (byte) 0x69, (byte) 0x73, (byte) 0x00, // b,i,s,.
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x02,
-      (byte) 0x22, (byte) 0x56, (byte) 0x00, (byte) 0x00,
-      (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff,
-      (byte) 0x6a, (byte) 0x04, (byte) 0x01, (byte) 0x00,
-      (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, /* capture pattern ogg header 2 */
-      (byte) 0xa9, (byte) 0x01, (byte) 0x4f, (byte) 0x67, // .,.,O,g  : start pos 86
-      (byte) 0x67, (byte) 0x53, (byte) 0x00, (byte) 0x00, // g,S,.,.
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x5e, (byte) 0x5f, (byte) 0x00, (byte) 0x00,
-      (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x69, (byte) 0xf8, (byte) 0xeb, (byte) 0xe1,
-      (byte) 0x10, (byte) 0x2d, (byte) 0xff, (byte) 0xff,
-      (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff,
-      (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff,
-      (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, /* capture pattern vorbis comment header*/
-      (byte) 0x1b, (byte) 0x03, (byte) 0x76, (byte) 0x6f, // .,3,v,o  : start pos 101
-      (byte) 0x72, (byte) 0x62, (byte) 0x69, (byte) 0x73, // r,b,i,s
-      (byte) 0x1d, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x58, (byte) 0x69, (byte) 0x70, (byte) 0x68,
-      (byte) 0x2e, (byte) 0x4f, (byte) 0x72, (byte) 0x67,
-      (byte) 0x20, (byte) 0x6c, (byte) 0x69, (byte) 0x62,
-      (byte) 0x56, (byte) 0x6f, (byte) 0x72, (byte) 0x62,
-      (byte) 0x69, (byte) 0x73, (byte) 0x20, (byte) 0x49,
-      (byte) 0x20, (byte) 0x32, (byte) 0x30, (byte) 0x30,
-      (byte) 0x33, (byte) 0x30, (byte) 0x39, (byte) 0x30,
-      (byte) 0x39, (byte) 0x00, (byte) 0x00, (byte) 0x00, /* capture pattern vorbis setup header */
-      (byte) 0x00, (byte) 0x01, (byte) 0x05, (byte) 0x76, // .,.,5,v  : start pos 146
-      (byte) 0x6f, (byte) 0x72, (byte) 0x62, (byte) 0x69, // o,r,b,i
-      (byte) 0x73, (byte) 0x22, (byte) 0x42, (byte) 0x43, // s,.
-      (byte) 0x56, (byte) 0x01, (byte) 0x00, (byte) 0x40,
-      (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x42,
-      (byte) 0x10, (byte) 0x2a, (byte) 0x05, (byte) 0xad,
-      (byte) 0x63, (byte) 0x8e, (byte) 0x3a, (byte) 0xc8,
-      (byte) 0x15, (byte) 0x21, (byte) 0x8c, (byte) 0x19,
-      (byte) 0xa2, (byte) 0xa0, (byte) 0x42, (byte) 0xca,
-      (byte) 0x29, (byte) 0xc7, (byte) 0x1d, (byte) 0x42,
-      (byte) 0xd0, (byte) 0x21, (byte) 0xa3, (byte) 0x24,
-      (byte) 0x43, (byte) 0x88, (byte) 0x3a, (byte) 0xc6,
-      (byte) 0x35, (byte) 0xc7, (byte) 0x18, (byte) 0x63,
-      (byte) 0x47, (byte) 0xb9, (byte) 0x64, (byte) 0x8a,
-      (byte) 0x42, (byte) 0xc9, (byte) 0x81, (byte) 0xd0,
-      (byte) 0x90, (byte) 0x55, (byte) 0x00, (byte) 0x00,
-      (byte) 0x40, (byte) 0x00, (byte) 0x00, (byte) 0xa4,
-      (byte) 0x1c, (byte) 0x57, (byte) 0x50, (byte) 0x72,
-      (byte) 0x49, (byte) 0x2d, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0xa3, (byte) 0x18, (byte) 0x57,
-      (byte) 0xcc, (byte) 0x71, (byte) 0xe8, (byte) 0x20,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xe5,
-      (byte) 0x20, (byte) 0x67, (byte) 0xcc, (byte) 0x71,
-      (byte) 0x09, (byte) 0x25, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0x8e, (byte) 0x39, (byte) 0xe7,
-      (byte) 0x92, (byte) 0x72, (byte) 0x8e, (byte) 0x31,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xa3,
-      (byte) 0x18, (byte) 0x57, (byte) 0x0e, (byte) 0x72,
-      (byte) 0x29, (byte) 0x2d, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0x81, (byte) 0x14, (byte) 0x47,
-      (byte) 0x8a, (byte) 0x71, (byte) 0xa7, (byte) 0x18,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xa4,
-      (byte) 0x1c, (byte) 0x47, (byte) 0x8a, (byte) 0x71,
-      (byte) 0xa8, (byte) 0x18, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0x6d, (byte) 0x31, (byte) 0xb7,
-      (byte) 0x92, (byte) 0x72, (byte) 0xce, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xe6,
-      (byte) 0x20, (byte) 0x87, (byte) 0x52, (byte) 0x72,
-      (byte) 0xae, (byte) 0x35, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0xa4, (byte) 0x18, (byte) 0x67,
-      (byte) 0x0e, (byte) 0x72, (byte) 0x0b, (byte) 0x25,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xc6,
-      (byte) 0x20, (byte) 0x67, (byte) 0xcc, (byte) 0x71,
-      (byte) 0xeb, (byte) 0x20, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0x8c, (byte) 0x35, (byte) 0xb7,
-      (byte) 0xd4, (byte) 0x72, (byte) 0xce, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xce,
-      (byte) 0x39, (byte) 0xe7, (byte) 0x9c, (byte) 0x73,
-      (byte) 0xce, (byte) 0x39, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0x8c, (byte) 0x31, (byte) 0xe7,
-      (byte) 0x9c, (byte) 0x73, (byte) 0xce, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0x6e,
-      (byte) 0x31, (byte) 0xe7, (byte) 0x16, (byte) 0x73,
-      (byte) 0xae, (byte) 0x39, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0xce, (byte) 0x39, (byte) 0xe7,
-      (byte) 0x1c, (byte) 0x73, (byte) 0xce, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0x20,
-      (byte) 0x34, (byte) 0x64, (byte) 0x15, (byte) 0x00,
-      (byte) 0x90, (byte) 0x00, (byte) 0x00, (byte) 0xa0,
-      (byte) 0xa1, (byte) 0x28, (byte) 0x8a, (byte) 0xe2,
-      (byte) 0x28, (byte) 0x0e, (byte) 0x10, (byte) 0x1a,
-      (byte) 0xb2, (byte) 0x0a, (byte) 0x00, (byte) 0xc8,
-      (byte) 0x00, (byte) 0x00, (byte) 0x10, (byte) 0x40,
-      (byte) 0x71, (byte) 0x14, (byte) 0x47, (byte) 0x91,
-      (byte) 0x14, (byte) 0x4b, (byte) 0xb1, (byte) 0x1c,
-      (byte) 0xcb, (byte) 0xd1, (byte) 0x24, (byte) 0x0d,
-      (byte) 0x08, (byte) 0x0d, (byte) 0x59, (byte) 0x05,
-      (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00,
-      (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0xa0,
-      (byte) 0x48, (byte) 0x86, (byte) 0xa4, (byte) 0x48,
-      (byte) 0x8a, (byte) 0xa5, (byte) 0x58, (byte) 0x8e,
-      (byte) 0x66, (byte) 0x69, (byte) 0x9e, (byte) 0x26,
-      (byte) 0x7a, (byte) 0xa2, (byte) 0x28, (byte) 0x9a,
-      (byte) 0xa2, (byte) 0x2a, (byte) 0xab, (byte) 0xb2,
-      (byte) 0x69, (byte) 0xca, (byte) 0xb2, (byte) 0x2c,
-      (byte) 0xcb, (byte) 0xb2, (byte) 0xeb, (byte) 0xba,
-      (byte) 0x2e, (byte) 0x10, (byte) 0x1a, (byte) 0xb2,
-      (byte) 0x0a, (byte) 0x00, (byte) 0x48, (byte) 0x00,
-      (byte) 0x00, (byte) 0x50, (byte) 0x51, (byte) 0x14,
-      (byte) 0xc5, (byte) 0x70, (byte) 0x14, (byte) 0x07,
-      (byte) 0x08, (byte) 0x0d, (byte) 0x59, (byte) 0x05,
-      (byte) 0x00, (byte) 0x64, (byte) 0x00, (byte) 0x00,
-      (byte) 0x08, (byte) 0x60, (byte) 0x28, (byte) 0x8a,
-      (byte) 0xa3, (byte) 0x38, (byte) 0x8e, (byte) 0xe4,
-      (byte) 0x58, (byte) 0x92, (byte) 0xa5, (byte) 0x59,
-      (byte) 0x9e, (byte) 0x07, (byte) 0x84, (byte) 0x86,
-      (byte) 0xac, (byte) 0x02, (byte) 0x00, (byte) 0x80,
-      (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x00,
-      (byte) 0x00, (byte) 0x50, (byte) 0x0c, (byte) 0x47,
-      (byte) 0xb1, (byte) 0x14, (byte) 0x4d, (byte) 0xf1,
-      (byte) 0x24, (byte) 0xcf, (byte) 0xf2, (byte) 0x3c,
-      (byte) 0xcf, (byte) 0xf3, (byte) 0x3c, (byte) 0xcf,
-      (byte) 0xf3, (byte) 0x3c, (byte) 0xcf, (byte) 0xf3,
-      (byte) 0x3c, (byte) 0xcf, (byte) 0xf3, (byte) 0x3c,
-      (byte) 0xcf, (byte) 0xf3, (byte) 0x3c, (byte) 0xcf,
-      (byte) 0xf3, (byte) 0x3c, (byte) 0x0d, (byte) 0x08,
-      (byte) 0x0d, (byte) 0x59, (byte) 0x05, (byte) 0x00,
-      (byte) 0x20, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x82, (byte) 0x28, (byte) 0x64, (byte) 0x18,
-      (byte) 0x03, (byte) 0x42, (byte) 0x43, (byte) 0x56,
-      (byte) 0x01, (byte) 0x00, (byte) 0x40, (byte) 0x00,
-      (byte) 0x00, (byte) 0x08, (byte) 0x21, (byte) 0x1a,
-      (byte) 0x19, (byte) 0x43, (byte) 0x9d, (byte) 0x52,
-      (byte) 0x12, (byte) 0x5c, (byte) 0x0a, (byte) 0x16,
-      (byte) 0x42, (byte) 0x1c, (byte) 0x11, (byte) 0x43,
-      (byte) 0x1d, (byte) 0x42, (byte) 0xce, (byte) 0x43,
-      (byte) 0xa9, (byte) 0xa5, (byte) 0x83, (byte) 0xe0,
-      (byte) 0x29, (byte) 0x85, (byte) 0x25, (byte) 0x63,
-      (byte) 0xd2, (byte) 0x53, (byte) 0xac, (byte) 0x41,
-      (byte) 0x08, (byte) 0x21, (byte) 0x7c, (byte) 0xef,
-      (byte) 0x3d, (byte) 0xf7, (byte) 0xde, (byte) 0x7b,
-      (byte) 0xef, (byte) 0x81, (byte) 0xd0, (byte) 0x90,
-      (byte) 0x55, (byte) 0x00, (byte) 0x00, (byte) 0x10,
-      (byte) 0x00, (byte) 0x00, (byte) 0x61, (byte) 0x14,
-      (byte) 0x38, (byte) 0x88, (byte) 0x81, (byte) 0xc7,
-      (byte) 0x24, (byte) 0x08, (byte) 0x21, (byte) 0x84,
-      (byte) 0x62, (byte) 0x14, (byte) 0x27, (byte) 0x44,
-      (byte) 0x71, (byte) 0xa6, (byte) 0x20, (byte) 0x08,
-      (byte) 0x21, (byte) 0x84, (byte) 0xe5, (byte) 0x24,
-      (byte) 0x58, (byte) 0xca, (byte) 0x79, (byte) 0xe8,
-      (byte) 0x24, (byte) 0x08, (byte) 0xdd, (byte) 0x83,
-      (byte) 0x10, (byte) 0x42, (byte) 0xb8, (byte) 0x9c,
-      (byte) 0x7b, (byte) 0xcb, (byte) 0xb9, (byte) 0xf7,
-      (byte) 0xde, (byte) 0x7b, (byte) 0x20, (byte) 0x34,
-      (byte) 0x64, (byte) 0x15, (byte) 0x00, (byte) 0x00,
-      (byte) 0x08, (byte) 0x00, (byte) 0xc0, (byte) 0x20,
-      (byte) 0x84, (byte) 0x10, (byte) 0x42, (byte) 0x08,
-      (byte) 0x21, (byte) 0x84, (byte) 0x10, (byte) 0x42,
-      (byte) 0x08, (byte) 0x29, (byte) 0xa4, (byte) 0x94,
-      (byte) 0x52, (byte) 0x48, (byte) 0x29, (byte) 0xa6,
-      (byte) 0x98, (byte) 0x62, (byte) 0x8a, (byte) 0x29,
-      (byte) 0xc7, (byte) 0x1c, (byte) 0x73, (byte) 0xcc,
-      (byte) 0x31, (byte) 0xc7, (byte) 0x20, (byte) 0x83,
-      (byte) 0x0c, (byte) 0x32, (byte) 0xe8, (byte) 0xa0,
-      (byte) 0x93, (byte) 0x4e, (byte) 0x3a, (byte) 0xc9,
-      (byte) 0xa4, (byte) 0x92, (byte) 0x4e, (byte) 0x3a,
-      (byte) 0xca, (byte) 0x24, (byte) 0xa3, (byte) 0x8e,
-      (byte) 0x52, (byte) 0x6b, (byte) 0x29, (byte) 0xb5,
-      (byte) 0x14, (byte) 0x53, (byte) 0x4c, (byte) 0xb1,
-      (byte) 0xe5, (byte) 0x16, (byte) 0x63, (byte) 0xad,
-      (byte) 0xb5, (byte) 0xd6, (byte) 0x9c, (byte) 0x73,
-      (byte) 0xaf, (byte) 0x41, (byte) 0x29, (byte) 0x63,
-      (byte) 0x8c, (byte) 0x31, (byte) 0xc6, (byte) 0x18,
-      (byte) 0x63, (byte) 0x8c, (byte) 0x31, (byte) 0xc6,
-      (byte) 0x18, (byte) 0x63, (byte) 0x8c, (byte) 0x31,
-      (byte) 0xc6, (byte) 0x18, (byte) 0x23, (byte) 0x08,
-      (byte) 0x0d, (byte) 0x59, (byte) 0x05, (byte) 0x00,
-      (byte) 0x80, (byte) 0x00, (byte) 0x00, (byte) 0x10,
-      (byte) 0x06, (byte) 0x19, (byte) 0x64, (byte) 0x90,
-      (byte) 0x41, (byte) 0x08, (byte) 0x21, (byte) 0x84,
-      (byte) 0x14, (byte) 0x52, (byte) 0x48, (byte) 0x29,
-      (byte) 0xa6, (byte) 0x98, (byte) 0x72, (byte) 0xcc,
-      (byte) 0x31, (byte) 0xc7, (byte) 0x1c, (byte) 0x03,
-      (byte) 0x42, (byte) 0x43, (byte) 0x56, (byte) 0x01,
-      (byte) 0x00, (byte) 0x80, (byte) 0x00, (byte) 0x00,
-      (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x1c, (byte) 0x45, (byte) 0x52, (byte) 0x24,
-      (byte) 0x47, (byte) 0x72, (byte) 0x24, (byte) 0x47,
-      (byte) 0x92, (byte) 0x24, (byte) 0xc9, (byte) 0x92,
-      (byte) 0x2c, (byte) 0x49, (byte) 0x93, (byte) 0x3c,
-      (byte) 0xcb, (byte) 0xb3, (byte) 0x3c, (byte) 0xcb,
-      (byte) 0xb3, (byte) 0x3c, (byte) 0x4d, (byte) 0xd4,
-      (byte) 0x44, (byte) 0x4d, (byte) 0x15, (byte) 0x55,
-      (byte) 0xd5, (byte) 0x55, (byte) 0x6d, (byte) 0xd7,
-      (byte) 0xf6, (byte) 0x6d, (byte) 0x5f, (byte) 0xf6,
-      (byte) 0x6d, (byte) 0xdf, (byte) 0xd5, (byte) 0x65,
-      (byte) 0xdf, (byte) 0xf6, (byte) 0x65, (byte) 0xdb,
-      (byte) 0xd5, (byte) 0x65, (byte) 0x5d, (byte) 0x96,
-      (byte) 0x65, (byte) 0xdd, (byte) 0xb5, (byte) 0x6d,
-      (byte) 0x5d, (byte) 0xd6, (byte) 0x5d, (byte) 0x5d,
-      (byte) 0xd7, (byte) 0x75, (byte) 0x5d, (byte) 0xd7,
-      (byte) 0x75, (byte) 0x5d, (byte) 0xd7, (byte) 0x75,
-      (byte) 0x5d, (byte) 0xd7, (byte) 0x75, (byte) 0x5d,
-      (byte) 0xd7, (byte) 0x75, (byte) 0x5d, (byte) 0xd7,
-      (byte) 0x81, (byte) 0xd0, (byte) 0x90, (byte) 0x55,
-      (byte) 0x00, (byte) 0x80, (byte) 0x04, (byte) 0x00,
-      (byte) 0x80, (byte) 0x8e, (byte) 0xe4, (byte) 0x38,
-      (byte) 0x8e, (byte) 0xe4, (byte) 0x38, (byte) 0x8e,
-      (byte) 0xe4, (byte) 0x48, (byte) 0x8e, (byte) 0xa4,
-      (byte) 0x48, (byte) 0x0a, (byte) 0x10, (byte) 0x1a,
-      (byte) 0xb2, (byte) 0x0a, (byte) 0x00, (byte) 0x90,
-      (byte) 0x01, (byte) 0x00, (byte) 0x10, (byte) 0x00,
-      (byte) 0x80, (byte) 0xa3, (byte) 0x38, (byte) 0x8a,
-      (byte) 0xe3, (byte) 0x48, (byte) 0x8e, (byte) 0xe4,
-      (byte) 0x58, (byte) 0x8e, (byte) 0x25, (byte) 0x59,
-      (byte) 0x92, (byte) 0x26, (byte) 0x69, (byte) 0x96,
-      (byte) 0x67, (byte) 0x79, (byte) 0x96, (byte) 0xa7,
-      (byte) 0x79, (byte) 0x9a, (byte) 0xa8, (byte) 0x89,
-      (byte) 0x1e, (byte) 0x10, (byte) 0x1a, (byte) 0xb2,
-      (byte) 0x0a, (byte) 0x00, (byte) 0x00, (byte) 0x04,
-      (byte) 0x00, (byte) 0x10, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80,
-      (byte) 0xa2, (byte) 0x28, (byte) 0x8a, (byte) 0xa3,
-      (byte) 0x38, (byte) 0x8e, (byte) 0x24, (byte) 0x59,
-      (byte) 0x96, (byte) 0xa6, (byte) 0x69, (byte) 0x9e,
-      (byte) 0xa7, (byte) 0x7a, (byte) 0xa2, (byte) 0x28,
-      (byte) 0x9a, (byte) 0xaa, (byte) 0xaa, (byte) 0x8a,
-      (byte) 0xa6, (byte) 0xa9, (byte) 0xaa, (byte) 0xaa,
-      (byte) 0x6a, (byte) 0x9a, (byte) 0xa6, (byte) 0x69,
-      (byte) 0x9a, (byte) 0xa6, (byte) 0x69, (byte) 0x9a,
-      (byte) 0xa6, (byte) 0x69, (byte) 0x9a, (byte) 0xa6,
-      (byte) 0x69, (byte) 0x9a, (byte) 0xa6, (byte) 0x69,
-      (byte) 0x9a, (byte) 0xa6, (byte) 0x69, (byte) 0x9a,
-      (byte) 0xa6, (byte) 0x69, (byte) 0x9a, (byte) 0xa6,
-      (byte) 0x69, (byte) 0x9a, (byte) 0xa6, (byte) 0x69,
-      (byte) 0x9a, (byte) 0xa6, (byte) 0x69, (byte) 0x9a,
-      (byte) 0xa6, (byte) 0x69, (byte) 0x02, (byte) 0xa1,
-      (byte) 0x21, (byte) 0xab, (byte) 0x00, (byte) 0x00,
-      (byte) 0x09, (byte) 0x00, (byte) 0x00, (byte) 0x1d,
-      (byte) 0xc7, (byte) 0x71, (byte) 0x1c, (byte) 0x47,
-      (byte) 0x71, (byte) 0x1c, (byte) 0xc7, (byte) 0x71,
-      (byte) 0x24, (byte) 0x47, (byte) 0x92, (byte) 0x24,
-      (byte) 0x20, (byte) 0x34, (byte) 0x64, (byte) 0x15,
-      (byte) 0x00, (byte) 0x20, (byte) 0x03, (byte) 0x00,
-      (byte) 0x20, (byte) 0x00, (byte) 0x00, (byte) 0x43,
-      (byte) 0x51, (byte) 0x1c, (byte) 0x45, (byte) 0x72,
-      (byte) 0x2c, (byte) 0xc7, (byte) 0x92, (byte) 0x34,
-      (byte) 0x4b, (byte) 0xb3, (byte) 0x3c, (byte) 0xcb,
-      (byte) 0xd3, (byte) 0x44, (byte) 0xcf, (byte) 0xf4,
-      (byte) 0x5c, (byte) 0x51, (byte) 0x36, (byte) 0x75,
-      (byte) 0x53, (byte) 0x57, (byte) 0x6d, (byte) 0x20,
-      (byte) 0x34, (byte) 0x64, (byte) 0x15, (byte) 0x00,
-      (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x20,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0xc7, (byte) 0x73,
-      (byte) 0x3c, (byte) 0xc7, (byte) 0x73, (byte) 0x3c,
-      (byte) 0xc9, (byte) 0x93, (byte) 0x3c, (byte) 0xcb,
-      (byte) 0x73, (byte) 0x3c, (byte) 0xc7, (byte) 0x93,
-      (byte) 0x3c, (byte) 0x49, (byte) 0xd3, (byte) 0x34,
-      (byte) 0x4d, (byte) 0xd3, (byte) 0x34, (byte) 0x4d,
-      (byte) 0xd3, (byte) 0x34, (byte) 0x4d, (byte) 0xd3,
-      (byte) 0x34, (byte) 0x4d, (byte) 0xd3, (byte) 0x34,
-      (byte) 0x4d, (byte) 0xd3, (byte) 0x34, (byte) 0x4d,
-      (byte) 0xd3, (byte) 0x34, (byte) 0x4d, (byte) 0xd3,
-      (byte) 0x34, (byte) 0x4d, (byte) 0xd3, (byte) 0x34,
-      (byte) 0x4d, (byte) 0xd3, (byte) 0x34, (byte) 0x4d,
-      (byte) 0xd3, (byte) 0x34, (byte) 0x4d, (byte) 0xd3,
-      (byte) 0x34, (byte) 0x4d, (byte) 0xd3, (byte) 0x34,
-      (byte) 0x4d, (byte) 0xd3, (byte) 0x34, (byte) 0x4d,
-      (byte) 0x03, (byte) 0x42, (byte) 0x43, (byte) 0x56,
-      (byte) 0x02, (byte) 0x00, (byte) 0x64, (byte) 0x00,
-      (byte) 0x00, (byte) 0x90, (byte) 0x02, (byte) 0xcf,
-      (byte) 0x42, (byte) 0x29, (byte) 0x2d, (byte) 0x46,
-      (byte) 0x02, (byte) 0x1c, (byte) 0x88, (byte) 0x98,
-      (byte) 0xa3, (byte) 0xd8, (byte) 0x7b, (byte) 0xef,
-      (byte) 0xbd, (byte) 0xf7, (byte) 0xde, (byte) 0x7b,
-      (byte) 0x65, (byte) 0x3c, (byte) 0x92, (byte) 0x88,
-      (byte) 0x49, (byte) 0xed, (byte) 0x31, (byte) 0xf4,
-      (byte) 0xd4, (byte) 0x31, (byte) 0x07, (byte) 0xb1,
-      (byte) 0x67, (byte) 0xc6, (byte) 0x23, (byte) 0x66,
-      (byte) 0x94, (byte) 0xa3, (byte) 0xd8, (byte) 0x29,
-      (byte) 0xcf, (byte) 0x1c, (byte) 0x42, (byte) 0x0c,
-      (byte) 0x62, (byte) 0xe8, (byte) 0x3c, (byte) 0x74,
-      (byte) 0x4a, (byte) 0x31, (byte) 0x88, (byte) 0x29,
-      (byte) 0xf5, (byte) 0x52, (byte) 0x32, (byte) 0xc6,
-      (byte) 0x20, (byte) 0xc6, (byte) 0xd8, (byte) 0x63,
-      (byte) 0x0c, (byte) 0x21, (byte) 0x94, (byte) 0x18,
-      (byte) 0x08, (byte) 0x0d, (byte) 0x59, (byte) 0x21,
-      (byte) 0x00, (byte) 0x84, (byte) 0x66, (byte) 0x00,
-      (byte) 0x18, (byte) 0x24, (byte) 0x09, (byte) 0x90,
-      (byte) 0x34, (byte) 0x0d, (byte) 0x90, (byte) 0x34,
-      (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x24, (byte) 0x4f, (byte) 0x03, (byte) 0x34,
-      (byte) 0x51, (byte) 0x04, (byte) 0x34, (byte) 0x4f,
-      (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x49, (byte) 0xf3, (byte) 0x00, (byte) 0x4d,
-      (byte) 0xf4, (byte) 0x00, (byte) 0x4d, (byte) 0x14,
-      (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x90, (byte) 0x3c, (byte) 0x0d, (byte) 0xf0,
-      (byte) 0x44, (byte) 0x11, (byte) 0xd0, (byte) 0x44,
-      (byte) 0x11, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x34, (byte) 0x51, (byte) 0x04, (byte) 0x44,
-      (byte) 0x51, (byte) 0x05, (byte) 0x44, (byte) 0xd5,
-      (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x4d, (byte) 0x14, (byte) 0x01, (byte) 0x4f,
-      (byte) 0x15, (byte) 0x01, (byte) 0xd1, (byte) 0x54,
-      (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x90, (byte) 0x34, (byte) 0x0f, (byte) 0xd0,
-      (byte) 0x44, (byte) 0x11, (byte) 0xf0, (byte) 0x44,
-      (byte) 0x11, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x34, (byte) 0x51, (byte) 0x04, (byte) 0x44,
-      (byte) 0xd5, (byte) 0x04, (byte) 0x3c, (byte) 0x51,
-      (byte) 0x05, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x4d, (byte) 0x14, (byte) 0x01, (byte) 0xd1,
-      (byte) 0x54, (byte) 0x01, (byte) 0x51, (byte) 0x15,
-      (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x04,
-      (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x38,
-      (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x58,
-      (byte) 0x08, (byte) 0x85, (byte) 0x86, (byte) 0xac,
-      (byte) 0x08, (byte) 0x00, (byte) 0xe2, (byte) 0x04,
-      (byte) 0x00, (byte) 0x04, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x10,
-      (byte) 0x00, (byte) 0x00, (byte) 0x30, (byte) 0xe0,
-      (byte) 0x00, (byte) 0x00, (byte) 0x10, (byte) 0x60,
-      (byte) 0x42, (byte) 0x19, (byte) 0x28, (byte) 0x34,
-      (byte) 0x64, (byte) 0x45, (byte) 0x00, (byte) 0x10,
-      (byte) 0x27, (byte) 0x00, (byte) 0x60, (byte) 0x70,
-      (byte) 0x1c, (byte) 0xcb, (byte) 0x02, (byte) 0x00,
-      (byte) 0x00, (byte) 0x47, (byte) 0x92, (byte) 0x34,
-      (byte) 0x0d, (byte) 0x00, (byte) 0x00, (byte) 0x1c,
-      (byte) 0x49, (byte) 0xd2, (byte) 0x34, (byte) 0x00,
-      (byte) 0x00, (byte) 0xd0, (byte) 0x34, (byte) 0x4d,
-      (byte) 0x14, (byte) 0x01, (byte) 0x00, (byte) 0xc0,
-      (byte) 0xd2, (byte) 0x34, (byte) 0x51, (byte) 0x04,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x10, (byte) 0x00, (byte) 0x00, (byte) 0x30,
-      (byte) 0xe0, (byte) 0x00, (byte) 0x00, (byte) 0x10,
-      (byte) 0x60, (byte) 0x42, (byte) 0x19, (byte) 0x28,
-      (byte) 0x34, (byte) 0x64, (byte) 0x25, (byte) 0x00,
-      (byte) 0x10, (byte) 0x05, (byte) 0x00, (byte) 0x60,
-      (byte) 0x30, (byte) 0x14, (byte) 0x4d, (byte) 0x03,
-      (byte) 0x58, (byte) 0x16, (byte) 0xc0, (byte) 0xb2,
-      (byte) 0x00, (byte) 0x9a, (byte) 0x06, (byte) 0xd0,
-      (byte) 0x34, (byte) 0x80, (byte) 0xe7, (byte) 0x01,
-      (byte) 0x3c, (byte) 0x11, (byte) 0x60, (byte) 0x9a,
-      (byte) 0x00, (byte) 0x40, (byte) 0x00, (byte) 0x00,
-      (byte) 0x40, (byte) 0x81, (byte) 0x03, (byte) 0x00,
-      (byte) 0x40, (byte) 0x80, (byte) 0x0d, (byte) 0x9a,
-      (byte) 0x12, (byte) 0x8b, (byte) 0x03, (byte) 0x14,
-      (byte) 0x1a, (byte) 0xb2, (byte) 0x12, (byte) 0x00,
-      (byte) 0x88, (byte) 0x02, (byte) 0x00, (byte) 0x30,
-      (byte) 0x28, (byte) 0x8a, (byte) 0x24, (byte) 0x59,
-      (byte) 0x96, (byte) 0xe7, (byte) 0x41, (byte) 0xd3,
-      (byte) 0x34, (byte) 0x4d, (byte) 0x14, (byte) 0xa1,
-      (byte) 0x69, (byte) 0x9a, (byte) 0x26, (byte) 0x8a,
-      (byte) 0xf0, (byte) 0x3c, (byte) 0xcf, (byte) 0x13,
-      (byte) 0x45, (byte) 0x78, (byte) 0x9e, (byte) 0xe7,
-      (byte) 0x99, (byte) 0x26, (byte) 0x44, (byte) 0xd1,
-      (byte) 0xf3, (byte) 0x4c, (byte) 0x13, (byte) 0xa2,
-      (byte) 0xe8, (byte) 0x79, (byte) 0xa6, (byte) 0x09,
-      (byte) 0xd3, (byte) 0x14, (byte) 0x45, (byte) 0xd3,
-      (byte) 0x04, (byte) 0xa2, (byte) 0x68, (byte) 0x9a,
-      (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x0a,
-      (byte) 0x1c, (byte) 0x00, (byte) 0x00, (byte) 0x02,
-      (byte) 0x6c, (byte) 0xd0, (byte) 0x94, (byte) 0x58,
-      (byte) 0x1c, (byte) 0xa0, (byte) 0xd0, (byte) 0x90,
-      (byte) 0x95, (byte) 0x00, (byte) 0x40, (byte) 0x48,
-      (byte) 0x00, (byte) 0x80, (byte) 0x41, (byte) 0x51,
-      (byte) 0x2c, (byte) 0xcb, (byte) 0xf3, (byte) 0x44,
-      (byte) 0x51, (byte) 0x14, (byte) 0x4d, (byte) 0x53,
-      (byte) 0x55, (byte) 0x5d, (byte) 0x17, (byte) 0x9a,
-      (byte) 0xe6, (byte) 0x79, (byte) 0xa2, (byte) 0x28,
-      (byte) 0x8a, (byte) 0xa6, (byte) 0xa9, (byte) 0xaa,
-      (byte) 0xae, (byte) 0x0b, (byte) 0x4d, (byte) 0xf3,
-      (byte) 0x3c, (byte) 0x51, (byte) 0x14, (byte) 0x45,
-      (byte) 0xd3, (byte) 0x54, (byte) 0x55, (byte) 0xd7,
-      (byte) 0x85, (byte) 0xe7, (byte) 0x79, (byte) 0xa2,
-      (byte) 0x29, (byte) 0x9a, (byte) 0xa6, (byte) 0x69,
-      (byte) 0xaa, (byte) 0xaa, (byte) 0xeb, (byte) 0xc2,
-      (byte) 0xf3, (byte) 0x44, (byte) 0xd1, (byte) 0x34,
-      (byte) 0x4d, (byte) 0x53, (byte) 0x55, (byte) 0x55,
-      (byte) 0xd7, (byte) 0x75, (byte) 0xe1, (byte) 0x79,
-      (byte) 0xa2, (byte) 0x68, (byte) 0x9a, (byte) 0xa6,
-      (byte) 0xa9, (byte) 0xaa, (byte) 0xae, (byte) 0xeb,
-      (byte) 0xba, (byte) 0xf0, (byte) 0x3c, (byte) 0x51,
-      (byte) 0x34, (byte) 0x4d, (byte) 0xd3, (byte) 0x54,
-      (byte) 0x55, (byte) 0xd7, (byte) 0x95, (byte) 0x65,
-      (byte) 0x88, (byte) 0xa2, (byte) 0x28, (byte) 0x9a,
-      (byte) 0xa6, (byte) 0x69, (byte) 0xaa, (byte) 0xaa,
-      (byte) 0xeb, (byte) 0xca, (byte) 0x32, (byte) 0x10,
-      (byte) 0x45, (byte) 0xd3, (byte) 0x34, (byte) 0x4d,
-      (byte) 0x55, (byte) 0x75, (byte) 0x5d, (byte) 0x59,
-      (byte) 0x06, (byte) 0xa2, (byte) 0x68, (byte) 0x9a,
-      (byte) 0xaa, (byte) 0xea, (byte) 0xba, (byte) 0xae,
-      (byte) 0x2b, (byte) 0xcb, (byte) 0x40, (byte) 0x14,
-      (byte) 0x4d, (byte) 0x53, (byte) 0x55, (byte) 0x5d,
-      (byte) 0xd7, (byte) 0x75, (byte) 0x65, (byte) 0x19,
-      (byte) 0x98, (byte) 0xa6, (byte) 0x6a, (byte) 0xaa,
-      (byte) 0xaa, (byte) 0xeb, (byte) 0xca, (byte) 0xb2,
-      (byte) 0x2c, (byte) 0x03, (byte) 0x4c, (byte) 0x53,
-      (byte) 0x55, (byte) 0x5d, (byte) 0x57, (byte) 0x96,
-      (byte) 0x65, (byte) 0x19, (byte) 0xa0, (byte) 0xaa,
-      (byte) 0xae, (byte) 0xeb, (byte) 0xba, (byte) 0xb2,
-      (byte) 0x6c, (byte) 0xdb, (byte) 0x00, (byte) 0x55,
-      (byte) 0x75, (byte) 0x5d, (byte) 0xd7, (byte) 0x95,
-      (byte) 0x65, (byte) 0xdb, (byte) 0x06, (byte) 0xb8,
-      (byte) 0xae, (byte) 0xeb, (byte) 0xca, (byte) 0xb2,
-      (byte) 0x2c, (byte) 0xdb, (byte) 0x36, (byte) 0x00,
-      (byte) 0xd7, (byte) 0x95, (byte) 0x65, (byte) 0x59,
-      (byte) 0xb6, (byte) 0x6d, (byte) 0x01, (byte) 0x00,
-      (byte) 0x00, (byte) 0x07, (byte) 0x0e, (byte) 0x00,
-      (byte) 0x00, (byte) 0x01, (byte) 0x46, (byte) 0xd0,
-      (byte) 0x49, (byte) 0x46, (byte) 0x95, (byte) 0x45,
-      (byte) 0xd8, (byte) 0x68, (byte) 0xc2, (byte) 0x85,
-      (byte) 0x07, (byte) 0xa0, (byte) 0xd0, (byte) 0x90,
-      (byte) 0x15, (byte) 0x01, (byte) 0x40, (byte) 0x14,
-      (byte) 0x00, (byte) 0x00, (byte) 0x60, (byte) 0x8c,
-      (byte) 0x52, (byte) 0x8a, (byte) 0x29, (byte) 0x65,
-      (byte) 0x18, (byte) 0x93, (byte) 0x50, (byte) 0x4a,
-      (byte) 0x09, (byte) 0x0d, (byte) 0x63, (byte) 0x52,
-      (byte) 0x4a, (byte) 0x2a, (byte) 0xa5, (byte) 0x92,
-      (byte) 0x92, (byte) 0x52, (byte) 0x4a, (byte) 0xa5,
-      (byte) 0x54, (byte) 0x12, (byte) 0x52, (byte) 0x4a,
-      (byte) 0xa9, (byte) 0x94, (byte) 0x4a, (byte) 0x4a,
-      (byte) 0x4a, (byte) 0x29, (byte) 0x95, (byte) 0x92,
-      (byte) 0x51, (byte) 0x4a, (byte) 0x29, (byte) 0xb5,
-      (byte) 0x96, (byte) 0x2a, (byte) 0x29, (byte) 0xa9,
-      (byte) 0x94, (byte) 0x94, (byte) 0x52, (byte) 0x25,
-      (byte) 0xa5, (byte) 0xa4, (byte) 0x92, (byte) 0x52,
-      (byte) 0x2a, (byte) 0x00, (byte) 0x00, (byte) 0xec,
-      (byte) 0xc0, (byte) 0x01, (byte) 0x00, (byte) 0xec,
-      (byte) 0xc0, (byte) 0x42, (byte) 0x28, (byte) 0x34,
-      (byte) 0x64, (byte) 0x25, (byte) 0x00, (byte) 0x90,
-      (byte) 0x07, (byte) 0x00, (byte) 0x40, (byte) 0x10,
-      (byte) 0x82, (byte) 0x14, (byte) 0x63, (byte) 0x8c,
-      (byte) 0x39, (byte) 0x27, (byte) 0xa5, (byte) 0x54,
-      (byte) 0x8a, (byte) 0x31, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x93, (byte) 0x52, (byte) 0x2a, (byte) 0xc5,
-      (byte) 0x98, (byte) 0x73, (byte) 0xce, (byte) 0x49,
-      (byte) 0x29, (byte) 0x19, (byte) 0x63, (byte) 0xcc,
-      (byte) 0x39, (byte) 0xe7, (byte) 0xa4, (byte) 0x94,
-      (byte) 0x8c, (byte) 0x31, (byte) 0xe6, (byte) 0x9c,
-      (byte) 0x73, (byte) 0x52, (byte) 0x4a, (byte) 0xc6,
-      (byte) 0x9c, (byte) 0x73, (byte) 0xce, (byte) 0x39,
-      (byte) 0x29, (byte) 0x25, (byte) 0x63, (byte) 0xce,
-      (byte) 0x39, (byte) 0xe7, (byte) 0x9c, (byte) 0x94,
-      (byte) 0xd2, (byte) 0x39, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x83, (byte) 0x50, (byte) 0x4a, (byte) 0x29,
-      (byte) 0xa5, (byte) 0x73, (byte) 0xce, (byte) 0x41,
-      (byte) 0x28, (byte) 0xa5, (byte) 0x94, (byte) 0x12,
-      (byte) 0x42, (byte) 0xe7, (byte) 0x20, (byte) 0x94,
-      (byte) 0x52, (byte) 0x4a, (byte) 0xe9, (byte) 0x9c,
-      (byte) 0x73, (byte) 0x10, (byte) 0x0a, (byte) 0x00,
-      (byte) 0x00, (byte) 0x2a, (byte) 0x70, (byte) 0x00,
-      (byte) 0x00, (byte) 0x08, (byte) 0xb0, (byte) 0x51,
-      (byte) 0x64, (byte) 0x73, (byte) 0x82, (byte) 0x91,
-      (byte) 0xa0, (byte) 0x42, (byte) 0x43, (byte) 0x56,
-      (byte) 0x02, (byte) 0x00, (byte) 0xa9, (byte) 0x00,
-      (byte) 0x00, (byte) 0x06, (byte) 0xc7, (byte) 0xb1,
-      (byte) 0x2c, (byte) 0x4d, (byte) 0xd3, (byte) 0x34,
-      (byte) 0xcf, (byte) 0x13, (byte) 0x45, (byte) 0x4b,
-      (byte) 0x92, (byte) 0x34, (byte) 0xcf, (byte) 0x13,
-      (byte) 0x3d, (byte) 0x4f, (byte) 0x14, (byte) 0x4d,
-      (byte) 0xd5, (byte) 0x92, (byte) 0x24, (byte) 0xcf,
-      (byte) 0x13, (byte) 0x45, (byte) 0xcf, (byte) 0x13,
-      (byte) 0x4d, (byte) 0x53, (byte) 0xe5, (byte) 0x79,
-      (byte) 0x9e, (byte) 0x28, (byte) 0x8a, (byte) 0xa2,
-      (byte) 0x68, (byte) 0x9a, (byte) 0xaa, (byte) 0x4a,
-      (byte) 0x14, (byte) 0x45, (byte) 0x4f, (byte) 0x14,
-      (byte) 0x45, (byte) 0xd1, (byte) 0x34, (byte) 0x55,
-      (byte) 0x95, (byte) 0x2c, (byte) 0x8b, (byte) 0xa2,
-      (byte) 0x69, (byte) 0x9a, (byte) 0xa6, (byte) 0xaa,
-      (byte) 0xba, (byte) 0x2e, (byte) 0x5b, (byte) 0x16,
-      (byte) 0x45, (byte) 0xd3, (byte) 0x34, (byte) 0x4d,
-      (byte) 0x55, (byte) 0x75, (byte) 0x5d, (byte) 0x98,
-      (byte) 0xa6, (byte) 0x28, (byte) 0xaa, (byte) 0xaa,
-      (byte) 0xeb, (byte) 0xca, (byte) 0x2e, (byte) 0x4c,
-      (byte) 0x53, (byte) 0x14, (byte) 0x4d, (byte) 0xd3,
-      (byte) 0x75, (byte) 0x65, (byte) 0x19, (byte) 0xb2,
-      (byte) 0xad, (byte) 0x9a, (byte) 0xaa, (byte) 0xea,
-      (byte) 0xba, (byte) 0xb2, (byte) 0x0d, (byte) 0xdb,
-      (byte) 0x36, (byte) 0x4d, (byte) 0x55, (byte) 0x75,
-      (byte) 0x5d, (byte) 0x59, (byte) 0x06, (byte) 0xae,
-      (byte) 0xeb, (byte) 0xba, (byte) 0xb2, (byte) 0x6c,
-      (byte) 0xeb, (byte) 0xc0, (byte) 0x75, (byte) 0x5d,
-      (byte) 0x57, (byte) 0x96, (byte) 0x6d, (byte) 0x5d,
-      (byte) 0x00, (byte) 0x00, (byte) 0x78, (byte) 0x82,
-      (byte) 0x03, (byte) 0x00, (byte) 0x50, (byte) 0x81,
-      (byte) 0x0d, (byte) 0xab, (byte) 0x23, (byte) 0x9c,
-      (byte) 0x14, (byte) 0x8d, (byte) 0x05, (byte) 0x16,
-      (byte) 0x1a, (byte) 0xb2, (byte) 0x12, (byte) 0x00,
-      (byte) 0xc8, (byte) 0x00, (byte) 0x00, (byte) 0x20,
-      (byte) 0x08, (byte) 0x41, (byte) 0x48, (byte) 0x29,
-      (byte) 0x85, (byte) 0x90, (byte) 0x52, (byte) 0x0a,
-      (byte) 0x21, (byte) 0xa5, (byte) 0x14, (byte) 0x42,
-      (byte) 0x4a, (byte) 0x29, (byte) 0x84, (byte) 0x04,
-      (byte) 0x00, (byte) 0x00, (byte) 0x0c, (byte) 0x38,
-      (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x98,
-      (byte) 0x50, (byte) 0x06, (byte) 0x0a, (byte) 0x0d,
-      (byte) 0x59, (byte) 0x09, (byte) 0x00, (byte) 0xa4,
-      (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x10,
-      (byte) 0x42, (byte) 0x08, (byte) 0x21, (byte) 0x84,
-      (byte) 0x10, (byte) 0x42, (byte) 0x08, (byte) 0x21,
-      (byte) 0x84, (byte) 0x10, (byte) 0x42, (byte) 0x08,
-      (byte) 0x21, (byte) 0x84, (byte) 0x10, (byte) 0x42,
-      (byte) 0x08, (byte) 0x21, (byte) 0x84, (byte) 0x10,
-      (byte) 0x42, (byte) 0x08, (byte) 0x21, (byte) 0x84,
-      (byte) 0x10, (byte) 0x42, (byte) 0x08, (byte) 0x21,
-      (byte) 0x84, (byte) 0x10, (byte) 0x42, (byte) 0x08,
-      (byte) 0x21, (byte) 0x84, (byte) 0x10, (byte) 0x42,
-      (byte) 0x08, (byte) 0x21, (byte) 0x84, (byte) 0x10,
-      (byte) 0x42, (byte) 0x08, (byte) 0x21, (byte) 0x84,
-      (byte) 0x10, (byte) 0x42, (byte) 0x08, (byte) 0x21,
-      (byte) 0x84, (byte) 0xce, (byte) 0x39, (byte) 0xe7,
-      (byte) 0x9c, (byte) 0x73, (byte) 0xce, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xce,
-      (byte) 0x39, (byte) 0xe7, (byte) 0x9c, (byte) 0x73,
-      (byte) 0xce, (byte) 0x39, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0xce, (byte) 0x39, (byte) 0xe7,
-      (byte) 0x9c, (byte) 0x73, (byte) 0xce, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xce,
-      (byte) 0x39, (byte) 0xe7, (byte) 0x9c, (byte) 0x73,
-      (byte) 0xce, (byte) 0x39, (byte) 0xe7, (byte) 0x9c,
-      (byte) 0x73, (byte) 0xce, (byte) 0x39, (byte) 0xe7,
-      (byte) 0x9c, (byte) 0x73, (byte) 0xce, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x9c, (byte) 0x73, (byte) 0xce,
-      (byte) 0x39, (byte) 0xe7, (byte) 0x9c, (byte) 0x73,
-      (byte) 0x02, (byte) 0x00, (byte) 0xb1, (byte) 0x2b,
-      (byte) 0x1c, (byte) 0x00, (byte) 0x76, (byte) 0x22,
-      (byte) 0x6c, (byte) 0x58, (byte) 0x1d, (byte) 0xe1,
-      (byte) 0xa4, (byte) 0x68, (byte) 0x2c, (byte) 0xb0,
-      (byte) 0xd0, (byte) 0x90, (byte) 0x95, (byte) 0x00,
-      (byte) 0x40, (byte) 0x38, (byte) 0x00, (byte) 0x00,
-      (byte) 0x60, (byte) 0x8c, (byte) 0x31, (byte) 0xce,
-      (byte) 0x59, (byte) 0xac, (byte) 0xb5, (byte) 0xd6,
-      (byte) 0x5a, (byte) 0x2b, (byte) 0xa5, (byte) 0x94,
-      (byte) 0x92, (byte) 0x50, (byte) 0x6b, (byte) 0xad,
-      (byte) 0xb5, (byte) 0xd6, (byte) 0x9a, (byte) 0x29,
-      (byte) 0xa4, (byte) 0x94, (byte) 0x84, (byte) 0x16,
-      (byte) 0x63, (byte) 0x8c, (byte) 0x31, (byte) 0xc6,
-      (byte) 0x98, (byte) 0x31, (byte) 0x08, (byte) 0x29,
-      (byte) 0xb5, (byte) 0x18, (byte) 0x63, (byte) 0x8c,
-      (byte) 0x31, (byte) 0xc6, (byte) 0x8c, (byte) 0x39,
-      (byte) 0x47, (byte) 0x2d, (byte) 0xc6, (byte) 0x18,
-      (byte) 0x63, (byte) 0x8c, (byte) 0x31, (byte) 0xb6,
-      (byte) 0x56, (byte) 0x4a, (byte) 0x6c, (byte) 0x31,
-      (byte) 0xc6, (byte) 0x18, (byte) 0x63, (byte) 0x8c,
-      (byte) 0xb1, (byte) 0xb5, (byte) 0x52, (byte) 0x62,
-      (byte) 0x8c, (byte) 0x31, (byte) 0xc6, (byte) 0x18,
-      (byte) 0x63, (byte) 0x8c, (byte) 0x31, (byte) 0xc6,
-      (byte) 0x16, (byte) 0x5b, (byte) 0x8c, (byte) 0x31,
-      (byte) 0xc6, (byte) 0x18, (byte) 0x63, (byte) 0x8c,
-      (byte) 0x31, (byte) 0xb6, (byte) 0x18, (byte) 0x63,
-      (byte) 0x8c, (byte) 0x31, (byte) 0xc6, (byte) 0x18,
-      (byte) 0x63, (byte) 0x8c, (byte) 0x31, (byte) 0xc6,
-      (byte) 0x18, (byte) 0x63, (byte) 0x8c, (byte) 0x31,
-      (byte) 0xc6, (byte) 0x18, (byte) 0x63, (byte) 0x8c,
-      (byte) 0x31, (byte) 0xb6, (byte) 0x18, (byte) 0x63,
-      (byte) 0x8c, (byte) 0x31, (byte) 0xc6, (byte) 0x18,
-      (byte) 0x63, (byte) 0x8c, (byte) 0x31, (byte) 0xc6,
-      (byte) 0x18, (byte) 0x63, (byte) 0x8c, (byte) 0x31,
-      (byte) 0xc6, (byte) 0x18, (byte) 0x63, (byte) 0x8c,
-      (byte) 0x31, (byte) 0xc6, (byte) 0x18, (byte) 0x63,
-      (byte) 0x8c, (byte) 0x31, (byte) 0xc6, (byte) 0x18,
-      (byte) 0x63, (byte) 0x6c, (byte) 0x31, (byte) 0xc6,
-      (byte) 0x18, (byte) 0x63, (byte) 0x8c, (byte) 0x31,
-      (byte) 0xc6, (byte) 0x18, (byte) 0x63, (byte) 0x8c,
-      (byte) 0x31, (byte) 0xc6, (byte) 0x18, (byte) 0x63,
-      (byte) 0x2c, (byte) 0x00, (byte) 0xc0, (byte) 0xe4,
-      (byte) 0xc1, (byte) 0x01, (byte) 0x00, (byte) 0x2a,
-      (byte) 0xc1, (byte) 0xc6, (byte) 0x19, (byte) 0x56,
-      (byte) 0x92, (byte) 0xce, (byte) 0x0a, (byte) 0x47,
-      (byte) 0x83, (byte) 0x0b, (byte) 0x0d, (byte) 0x59,
-      (byte) 0x09, (byte) 0x00, (byte) 0xe4, (byte) 0x06,
-      (byte) 0x00, (byte) 0x00, (byte) 0xc6, (byte) 0x28,
-      (byte) 0xc5, (byte) 0x98, (byte) 0x63, (byte) 0xce,
-      (byte) 0x41, (byte) 0x08, (byte) 0xa1, (byte) 0x94,
-      (byte) 0x12, (byte) 0x4a, (byte) 0x49, (byte) 0xad,
-      (byte) 0x75, (byte) 0xce, (byte) 0x39, (byte) 0x08,
-      (byte) 0x21, (byte) 0x94, (byte) 0x52, (byte) 0x4a,
-      (byte) 0x49, (byte) 0xa9, (byte) 0xb4, (byte) 0x94,
-      (byte) 0x62, (byte) 0xca, (byte) 0x98, (byte) 0x73,
-      (byte) 0xce, (byte) 0x41, (byte) 0x08, (byte) 0xa5,
-      (byte) 0x94, (byte) 0x12, (byte) 0x4a, (byte) 0x49,
-      (byte) 0xa9, (byte) 0xa5, (byte) 0xd4, (byte) 0x39,
-      (byte) 0xe7, (byte) 0x20, (byte) 0x94, (byte) 0x52,
-      (byte) 0x4a, (byte) 0x4a, (byte) 0x29, (byte) 0xa5,
-      (byte) 0x94, (byte) 0x5a, (byte) 0x6a, (byte) 0xad,
-      (byte) 0x73, (byte) 0x10, (byte) 0x42, (byte) 0x08,
-      (byte) 0xa5, (byte) 0x94, (byte) 0x52, (byte) 0x4a,
-      (byte) 0x4a, (byte) 0x29, (byte) 0xa5, (byte) 0xd4,
-      (byte) 0x52, (byte) 0x08, (byte) 0x21, (byte) 0x94,
-      (byte) 0x52, (byte) 0x4a, (byte) 0x2a, (byte) 0x29,
-      (byte) 0xa5, (byte) 0x94, (byte) 0x52, (byte) 0x6b,
-      (byte) 0xad, (byte) 0xa5, (byte) 0x10, (byte) 0x42,
-      (byte) 0x28, (byte) 0xa5, (byte) 0x94, (byte) 0x94,
-      (byte) 0x52, (byte) 0x4a, (byte) 0x29, (byte) 0xa5,
-      (byte) 0xd4, (byte) 0x5a, (byte) 0x8b, (byte) 0xa1,
-      (byte) 0x94, (byte) 0x90, (byte) 0x4a, (byte) 0x29,
-      (byte) 0x25, (byte) 0xa5, (byte) 0x94, (byte) 0x52,
-      (byte) 0x49, (byte) 0x2d, (byte) 0xb5, (byte) 0x96,
-      (byte) 0x5a, (byte) 0x2a, (byte) 0xa1, (byte) 0x94,
-      (byte) 0x54, (byte) 0x52, (byte) 0x4a, (byte) 0x29,
-      (byte) 0xa5, (byte) 0x94, (byte) 0x52, (byte) 0x6b,
-      (byte) 0xa9, (byte) 0xb5, (byte) 0x56, (byte) 0x4a,
-      (byte) 0x49, (byte) 0x25, (byte) 0xa5, (byte) 0x94,
-      (byte) 0x52, (byte) 0x4a, (byte) 0x29, (byte) 0xa5,
-      (byte) 0xd4, (byte) 0x62, (byte) 0x6b, (byte) 0x29,
-      (byte) 0x94, (byte) 0x92, (byte) 0x52, (byte) 0x49,
-      (byte) 0x29, (byte) 0xb5, (byte) 0x94, (byte) 0x52,
-      (byte) 0x4a, (byte) 0xad, (byte) 0xc5, (byte) 0xd8,
-      (byte) 0x62, (byte) 0x29, (byte) 0xad, (byte) 0xa4,
-      (byte) 0x94, (byte) 0x52, (byte) 0x4a, (byte) 0x29,
-      (byte) 0xa5, (byte) 0xd6, (byte) 0x52, (byte) 0x6c,
-      (byte) 0xad, (byte) 0xb5, (byte) 0xd8, (byte) 0x52,
-      (byte) 0x4a, (byte) 0x29, (byte) 0xa5, (byte) 0x96,
-      (byte) 0x5a, (byte) 0x4a, (byte) 0x29, (byte) 0xb5,
-      (byte) 0x16, (byte) 0x5b, (byte) 0x6a, (byte) 0x2d,
-      (byte) 0xa5, (byte) 0x94, (byte) 0x52, (byte) 0x4b,
-      (byte) 0x29, (byte) 0xa5, (byte) 0x96, (byte) 0x52,
-      (byte) 0x4b, (byte) 0x2d, (byte) 0xc6, (byte) 0xd6,
-      (byte) 0x5a, (byte) 0x4b, (byte) 0x29, (byte) 0xa5,
-      (byte) 0xd4, (byte) 0x52, (byte) 0x6a, (byte) 0xa9,
-      (byte) 0xa5, (byte) 0x94, (byte) 0x52, (byte) 0x6c,
-      (byte) 0xad, (byte) 0xb5, (byte) 0x98, (byte) 0x52,
-      (byte) 0x6a, (byte) 0x2d, (byte) 0xa5, (byte) 0xd4,
-      (byte) 0x52, (byte) 0x6b, (byte) 0x2d, (byte) 0xb5,
-      (byte) 0xd8, (byte) 0x52, (byte) 0x6a, (byte) 0x2d,
-      (byte) 0xb5, (byte) 0x94, (byte) 0x52, (byte) 0x6b,
-      (byte) 0xa9, (byte) 0xa5, (byte) 0x94, (byte) 0x5a,
-      (byte) 0x6b, (byte) 0x2d, (byte) 0xb6, (byte) 0xd8,
-      (byte) 0x5a, (byte) 0x6b, (byte) 0x29, (byte) 0xb5,
-      (byte) 0x94, (byte) 0x52, (byte) 0x4a, (byte) 0xa9,
-      (byte) 0xb5, (byte) 0x16, (byte) 0x5b, (byte) 0x8a,
-      (byte) 0xb1, (byte) 0xb5, (byte) 0xd4, (byte) 0x4a,
-      (byte) 0x4a, (byte) 0x29, (byte) 0xb5, (byte) 0xd4,
-      (byte) 0x5a, (byte) 0x6a, (byte) 0x2d, (byte) 0xb6,
-      (byte) 0x16, (byte) 0x5b, (byte) 0x6b, (byte) 0xad,
-      (byte) 0xa5, (byte) 0xd6, (byte) 0x5a, (byte) 0x6a,
-      (byte) 0x29, (byte) 0xa5, (byte) 0x16, (byte) 0x5b,
-      (byte) 0x8c, (byte) 0x31, (byte) 0xc6, (byte) 0x16,
-      (byte) 0x63, (byte) 0x6b, (byte) 0x31, (byte) 0xa5,
-      (byte) 0x94, (byte) 0x52, (byte) 0x4b, (byte) 0xa9,
-      (byte) 0xa5, (byte) 0x02, (byte) 0x00, (byte) 0x80,
-      (byte) 0x0e, (byte) 0x1c, (byte) 0x00, (byte) 0x00,
-      (byte) 0x02, (byte) 0x8c, (byte) 0xa8, (byte) 0xb4,
-      (byte) 0x10, (byte) 0x3b, (byte) 0xcd, (byte) 0xb8,
-      (byte) 0xf2, (byte) 0x08, (byte) 0x1c, (byte) 0x51,
-      (byte) 0xc8, (byte) 0x30, (byte) 0x01, (byte) 0x15,
-      (byte) 0x1a, (byte) 0xb2, (byte) 0x12, (byte) 0x00,
-      (byte) 0x20, (byte) 0x03, (byte) 0x00, (byte) 0x20,
-      (byte) 0x90, (byte) 0x69, (byte) 0x92, (byte) 0x39,
-      (byte) 0x49, (byte) 0xa9, (byte) 0x11, (byte) 0x26,
-      (byte) 0x39, (byte) 0xc5, (byte) 0xa0, (byte) 0x94,
-      (byte) 0xe6, (byte) 0x9c, (byte) 0x53, (byte) 0x4a,
-      (byte) 0x29, (byte) 0xa5, (byte) 0x34, (byte) 0x44,
-      (byte) 0x96, (byte) 0x64, (byte) 0x90, (byte) 0x62,
-      (byte) 0x50, (byte) 0x1d, (byte) 0x99, (byte) 0x8c,
-      (byte) 0x39, (byte) 0x49, (byte) 0x39, (byte) 0x43,
-      (byte) 0xa4, (byte) 0x31, (byte) 0xa4, (byte) 0x20,
-      (byte) 0xf5, (byte) 0x4c, (byte) 0x91, (byte) 0xc7,
-      (byte) 0x94, (byte) 0x62, (byte) 0x10, (byte) 0x43,
-      (byte) 0x48, (byte) 0x2a, (byte) 0x74, (byte) 0x8a,
-      (byte) 0x39, (byte) 0x6c, (byte) 0x35, (byte) 0xf9,
-      (byte) 0x58, (byte) 0x42, (byte) 0x07, (byte) 0xb1,
-      (byte) 0x06, (byte) 0x65, (byte) 0x8c, (byte) 0x70,
-      (byte) 0x29, (byte) 0xc5, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x08, (byte) 0x02, (byte) 0x00,
-      (byte) 0x04, (byte) 0x84, (byte) 0x04, (byte) 0x00,
-      (byte) 0x18, (byte) 0x20, (byte) 0x28, (byte) 0x98,
-      (byte) 0x01, (byte) 0x00, (byte) 0x06, (byte) 0x07,
-      (byte) 0x08, (byte) 0x23, (byte) 0x07, (byte) 0x02,
-      (byte) 0x1d, (byte) 0x01, (byte) 0x04, (byte) 0x0e,
-      (byte) 0x6d, (byte) 0x00, (byte) 0x80, (byte) 0x81,
-      (byte) 0x08, (byte) 0x99, (byte) 0x09, (byte) 0x0c,
-      (byte) 0x0a, (byte) 0xa1, (byte) 0xc1, (byte) 0x41,
-      (byte) 0x26, (byte) 0x00, (byte) 0x3c, (byte) 0x40,
-      (byte) 0x44, (byte) 0x48, (byte) 0x05, (byte) 0x00,
-      (byte) 0x89, (byte) 0x09, (byte) 0x8a, (byte) 0xd2,
-      (byte) 0x85, (byte) 0x2e, (byte) 0x08, (byte) 0x21,
-      (byte) 0x82, (byte) 0x74, (byte) 0x11, (byte) 0x64,
-      (byte) 0xf1, (byte) 0xc0, (byte) 0x85, (byte) 0x13,
-      (byte) 0x37, (byte) 0x9e, (byte) 0xb8, (byte) 0xe1,
-      (byte) 0x84, (byte) 0x0e, (byte) 0x6d, (byte) 0x20,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x20, (byte) 0x00, (byte) 0xf0,
-      (byte) 0x01, (byte) 0x00, (byte) 0x90, (byte) 0x50,
-      (byte) 0x00, (byte) 0x11, (byte) 0x11, (byte) 0xd1,
-      (byte) 0xcc, (byte) 0x55, (byte) 0x58, (byte) 0x5c,
-      (byte) 0x60, (byte) 0x64, (byte) 0x68, (byte) 0x6c,
-      (byte) 0x70, (byte) 0x74, (byte) 0x78, (byte) 0x7c,
-      (byte) 0x80, (byte) 0x84, (byte) 0x08, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x10, (byte) 0x00, (byte) 0x7c, (byte) 0x00,
-      (byte) 0x00, (byte) 0x24, (byte) 0x22, (byte) 0x40,
-      (byte) 0x44, (byte) 0x44, (byte) 0x34, (byte) 0x73,
-      (byte) 0x15, (byte) 0x16, (byte) 0x17, (byte) 0x18,
-      (byte) 0x19, (byte) 0x1a, (byte) 0x1b, (byte) 0x1c,
-      (byte) 0x1d, (byte) 0x1e, (byte) 0x1f, (byte) 0x20,
-      (byte) 0x21, (byte) 0x01, (byte) 0x00, (byte) 0x80,
-      (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x00, (byte) 0x20, (byte) 0x80,
-      (byte) 0x00, (byte) 0x04, (byte) 0x04, (byte) 0x04,
-      (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x00,
-      (byte) 0x00, (byte) 0x04, (byte) 0x04
-  };
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisBitArrayTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisBitArrayTest.java
deleted file mode 100644
index a24cb1599b..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisBitArrayTest.java
+++ /dev/null
@@ -1,139 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.testutil.TestUtil;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link VorbisBitArray}.
- */
-public final class VorbisBitArrayTest extends TestCase {
-
-  public void testReadBit() {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0x5c, 0x50));
-    assertFalse(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-  }
-
-  public void testSkipBits() {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0xF0, 0x0F));
-    bitArray.skipBits(10);
-    assertEquals(10, bitArray.getPosition());
-    assertTrue(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-    bitArray.skipBits(1);
-    assertEquals(14, bitArray.getPosition());
-    assertFalse(bitArray.readBit());
-    assertFalse(bitArray.readBit());
-  }
-
-  public void testGetPosition() throws Exception {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0xF0, 0x0F));
-    assertEquals(0, bitArray.getPosition());
-    bitArray.readBit();
-    assertEquals(1, bitArray.getPosition());
-    bitArray.readBit();
-    bitArray.readBit();
-    bitArray.skipBits(4);
-    assertEquals(7, bitArray.getPosition());
-  }
-
-  public void testSetPosition() throws Exception {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0xF0, 0x0F));
-    assertEquals(0, bitArray.getPosition());
-    bitArray.setPosition(4);
-    assertEquals(4, bitArray.getPosition());
-    bitArray.setPosition(15);
-    assertFalse(bitArray.readBit());
-  }
-
-  public void testReadInt32() {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0xF0, 0x0F, 0xF0, 0x0F));
-    assertEquals(0x0FF00FF0, bitArray.readBits(32));
-    bitArray = new VorbisBitArray(TestUtil.createByteArray(0x0F, 0xF0, 0x0F, 0xF0));
-    assertEquals(0xF00FF00F, bitArray.readBits(32));
-  }
-
-  public void testReadBits() throws Exception {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0x03, 0x22));
-    assertEquals(3, bitArray.readBits(2));
-    bitArray.skipBits(6);
-    assertEquals(2, bitArray.readBits(2));
-    bitArray.skipBits(2);
-    assertEquals(2, bitArray.readBits(2));
-    bitArray.reset();
-    assertEquals(0x2203, bitArray.readBits(16));
-  }
-
-  public void testRead4BitsBeyondBoundary() throws Exception {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0x2e, 0x10));
-    assertEquals(0x2e, bitArray.readBits(7));
-    assertEquals(7, bitArray.getPosition());
-    assertEquals(0x0, bitArray.readBits(4));
-  }
-
-  public void testReadBitsBeyondByteBoundaries() throws Exception {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0xFF, 0x0F, 0xFF, 0x0F));
-    assertEquals(0x0FFF0FFF, bitArray.readBits(32));
-
-    bitArray.reset();
-    bitArray.skipBits(4);
-    assertEquals(0xF0FF, bitArray.readBits(16));
-
-    bitArray.reset();
-    bitArray.skipBits(6);
-    assertEquals(0xc3F, bitArray.readBits(12));
-
-    bitArray.reset();
-    bitArray.skipBits(6);
-    assertTrue(bitArray.readBit());
-    assertTrue(bitArray.readBit());
-    assertEquals(24, bitArray.bitsLeft());
-
-    bitArray.reset();
-    bitArray.skipBits(10);
-    assertEquals(3, bitArray.readBits(5));
-    assertEquals(15, bitArray.getPosition());
-  }
-
-  public void testReadBitsIllegalLengths() throws Exception {
-    VorbisBitArray bitArray = new VorbisBitArray(TestUtil.createByteArray(0x03, 0x22, 0x30));
-
-    // reading zero bits gets 0 without advancing position
-    // (like a zero-bit read is defined to yield zer0)
-    assertEquals(0, bitArray.readBits(0));
-    assertEquals(0, bitArray.getPosition());
-    bitArray.readBit();
-    assertEquals(1, bitArray.getPosition());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisReaderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisReaderTest.java
deleted file mode 100644
index c3165b34f6..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisReaderTest.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.extractor.ExtractorInput;
-import com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput.SimulatedIOException;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import java.io.IOException;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link VorbisReader}.
- */
-public final class VorbisReaderTest extends TestCase {
-
-  public void testReadBits() throws Exception {
-    assertEquals(0, VorbisReader.readBits((byte) 0x00, 2, 2));
-    assertEquals(1, VorbisReader.readBits((byte) 0x02, 1, 1));
-    assertEquals(15, VorbisReader.readBits((byte) 0xF0, 4, 4));
-    assertEquals(1, VorbisReader.readBits((byte) 0x80, 1, 7));
-  }
-
-  public void testAppendNumberOfSamples() throws Exception {
-    ParsableByteArray buffer = new ParsableByteArray(4);
-    buffer.setLimit(0);
-    VorbisReader.appendNumberOfSamples(buffer, 0x01234567);
-    assertEquals(4, buffer.limit());
-    assertEquals(0x67, buffer.data[0]);
-    assertEquals(0x45, buffer.data[1]);
-    assertEquals(0x23, buffer.data[2]);
-    assertEquals(0x01, buffer.data[3]);
-  }
-
-  public void testReadSetupHeadersWithIOExceptions() throws IOException, InterruptedException {
-    byte[] data = TestData.getVorbisHeaderPages();
-    ExtractorInput input = new FakeExtractorInput.Builder().setData(data).setSimulateIOErrors(true)
-        .setSimulateUnknownLength(true).setSimulatePartialReads(true).build();
-
-    VorbisReader reader = new VorbisReader();
-    VorbisReader.VorbisSetup vorbisSetup = readSetupHeaders(reader, input);
-
-    assertNotNull(vorbisSetup.idHeader);
-    assertNotNull(vorbisSetup.commentHeader);
-    assertNotNull(vorbisSetup.setupHeaderData);
-    assertNotNull(vorbisSetup.modes);
-
-    assertEquals(45, vorbisSetup.commentHeader.length);
-    assertEquals(30, vorbisSetup.idHeader.data.length);
-    assertEquals(3597, vorbisSetup.setupHeaderData.length);
-
-    assertEquals(-1, vorbisSetup.idHeader.bitrateMax);
-    assertEquals(-1, vorbisSetup.idHeader.bitrateMin);
-    assertEquals(66666, vorbisSetup.idHeader.bitrateNominal);
-    assertEquals(512, vorbisSetup.idHeader.blockSize0);
-    assertEquals(1024, vorbisSetup.idHeader.blockSize1);
-    assertEquals(2, vorbisSetup.idHeader.channels);
-    assertTrue(vorbisSetup.idHeader.framingFlag);
-    assertEquals(22050, vorbisSetup.idHeader.sampleRate);
-    assertEquals(0, vorbisSetup.idHeader.version);
-
-    assertEquals("Xiph.Org libVorbis I 20030909", vorbisSetup.commentHeader.vendor);
-    assertEquals(1, vorbisSetup.iLogModes);
-
-    assertEquals(data[data.length - 1],
-        vorbisSetup.setupHeaderData[vorbisSetup.setupHeaderData.length - 1]);
-
-    assertFalse(vorbisSetup.modes[0].blockFlag);
-    assertTrue(vorbisSetup.modes[1].blockFlag);
-  }
-
-  private static VorbisSetup readSetupHeaders(VorbisReader reader, ExtractorInput input)
-      throws IOException, InterruptedException {
-    OggPacket oggPacket = new OggPacket();
-    while (true) {
-      try {
-        if (!oggPacket.populate(input)) {
-          fail();
-        }
-        VorbisSetup vorbisSetup = reader.readSetupHeaders(oggPacket.getPayload());
-        if (vorbisSetup != null) {
-          return vorbisSetup;
-        }
-      } catch (SimulatedIOException e) {
-        // Ignore.
-      }
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisUtilTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisUtilTest.java
deleted file mode 100644
index ddbfee8446..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ogg/VorbisUtilTest.java
+++ /dev/null
@@ -1,126 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ogg;
-
-import com.google.android.exoplayer2.ParserException;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link VorbisUtil}.
- */
-public final class VorbisUtilTest extends TestCase {
-
-  public void testILog() throws Exception {
-    assertEquals(0, VorbisUtil.iLog(0));
-    assertEquals(1, VorbisUtil.iLog(1));
-    assertEquals(2, VorbisUtil.iLog(2));
-    assertEquals(2, VorbisUtil.iLog(3));
-    assertEquals(3, VorbisUtil.iLog(4));
-    assertEquals(3, VorbisUtil.iLog(5));
-    assertEquals(4, VorbisUtil.iLog(8));
-    assertEquals(0, VorbisUtil.iLog(-1));
-    assertEquals(0, VorbisUtil.iLog(-122));
-  }
-
-  public void testReadIdHeader() throws Exception {
-    byte[] data = TestData.getIdentificationHeaderData();
-    ParsableByteArray headerData = new ParsableByteArray(data, data.length);
-    VorbisUtil.VorbisIdHeader vorbisIdHeader =
-        VorbisUtil.readVorbisIdentificationHeader(headerData);
-
-    assertEquals(22050, vorbisIdHeader.sampleRate);
-    assertEquals(0, vorbisIdHeader.version);
-    assertTrue(vorbisIdHeader.framingFlag);
-    assertEquals(2, vorbisIdHeader.channels);
-    assertEquals(512, vorbisIdHeader.blockSize0);
-    assertEquals(1024, vorbisIdHeader.blockSize1);
-    assertEquals(-1, vorbisIdHeader.bitrateMax);
-    assertEquals(-1, vorbisIdHeader.bitrateMin);
-    assertEquals(66666, vorbisIdHeader.bitrateNominal);
-    assertEquals(66666, vorbisIdHeader.getApproximateBitrate());
-  }
-
-  public void testReadCommentHeader() throws ParserException {
-    byte[] data = TestData.getCommentHeaderDataUTF8();
-    ParsableByteArray headerData = new ParsableByteArray(data, data.length);
-    VorbisUtil.CommentHeader commentHeader = VorbisUtil.readVorbisCommentHeader(headerData);
-
-    assertEquals("Xiph.Org libVorbis I 20120203 (Omnipresent)", commentHeader.vendor);
-    assertEquals(3, commentHeader.comments.length);
-    assertEquals("ALBUM=äö", commentHeader.comments[0]);
-    assertEquals("TITLE=A sample song", commentHeader.comments[1]);
-    assertEquals("ARTIST=Google", commentHeader.comments[2]);
-  }
-
-  public void testReadVorbisModes() throws ParserException {
-    byte[] data = TestData.getSetupHeaderData();
-    ParsableByteArray headerData = new ParsableByteArray(data, data.length);
-    VorbisUtil.Mode[] modes = VorbisUtil.readVorbisModes(headerData, 2);
-
-    assertEquals(2, modes.length);
-    assertEquals(false, modes[0].blockFlag);
-    assertEquals(0, modes[0].mapping);
-    assertEquals(0, modes[0].transformType);
-    assertEquals(0, modes[0].windowType);
-    assertEquals(true, modes[1].blockFlag);
-    assertEquals(1, modes[1].mapping);
-    assertEquals(0, modes[1].transformType);
-    assertEquals(0, modes[1].windowType);
-  }
-
-  public void testVerifyVorbisHeaderCapturePattern() throws ParserException {
-    ParsableByteArray header = new ParsableByteArray(
-        new byte[] {0x01, 'v', 'o', 'r', 'b', 'i', 's'});
-    assertEquals(true, VorbisUtil.verifyVorbisHeaderCapturePattern(0x01, header, false));
-  }
-
-  public void testVerifyVorbisHeaderCapturePatternInvalidHeader() {
-    ParsableByteArray header = new ParsableByteArray(
-        new byte[] {0x01, 'v', 'o', 'r', 'b', 'i', 's'});
-    try {
-      VorbisUtil.verifyVorbisHeaderCapturePattern(0x99, header, false);
-      fail();
-    } catch (ParserException e) {
-      assertEquals("expected header type 99", e.getMessage());
-    }
-  }
-
-  public void testVerifyVorbisHeaderCapturePatternInvalidHeaderQuite() throws ParserException {
-    ParsableByteArray header = new ParsableByteArray(
-        new byte[] {0x01, 'v', 'o', 'r', 'b', 'i', 's'});
-    assertFalse(VorbisUtil.verifyVorbisHeaderCapturePattern(0x99, header, true));
-  }
-
-  public void testVerifyVorbisHeaderCapturePatternInvalidPattern() {
-    ParsableByteArray header = new ParsableByteArray(
-        new byte[] {0x01, 'x', 'v', 'o', 'r', 'b', 'i', 's'});
-    try {
-      VorbisUtil.verifyVorbisHeaderCapturePattern(0x01, header, false);
-      fail();
-    } catch (ParserException e) {
-      assertEquals("expected characters 'vorbis'", e.getMessage());
-    }
-  }
-
-  public void testVerifyVorbisHeaderCapturePatternQuiteInvalidPatternQuite()
-      throws ParserException {
-    ParsableByteArray header = new ParsableByteArray(
-        new byte[] {0x01, 'x', 'v', 'o', 'r', 'b', 'i', 's'});
-    assertFalse(VorbisUtil.verifyVorbisHeaderCapturePattern(0x01, header, true));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/rawcc/RawCcExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/rawcc/RawCcExtractorTest.java
deleted file mode 100644
index 18050f48a3..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/rawcc/RawCcExtractorTest.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.rawcc;
-
-import android.annotation.TargetApi;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-import com.google.android.exoplayer2.util.MimeTypes;
-
-/**
- * Tests for {@link RawCcExtractor}.
- */
-@TargetApi(16)
-public final class RawCcExtractorTest extends InstrumentationTestCase {
-
-  public void testRawCcSample() throws Exception {
-    ExtractorAsserts.assertBehavior(
-        new ExtractorFactory() {
-          @Override
-          public Extractor create() {
-            return new RawCcExtractor(
-                Format.createTextContainerFormat(null, null, MimeTypes.APPLICATION_CEA608,
-                    "cea608", Format.NO_VALUE, 0, null, 1));
-          }
-        }, "rawcc/sample.rawcc", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/Ac3ExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/Ac3ExtractorTest.java
deleted file mode 100644
index 31633361db..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/Ac3ExtractorTest.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ts;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link Ac3Extractor}.
- */
-public final class Ac3ExtractorTest extends InstrumentationTestCase {
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new Ac3Extractor();
-      }
-    }, "ts/sample.ac3", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/AdtsExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/AdtsExtractorTest.java
deleted file mode 100644
index 9eb65d2091..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/AdtsExtractorTest.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ts;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link AdtsExtractor}.
- */
-public final class AdtsExtractorTest extends InstrumentationTestCase {
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new AdtsExtractor();
-      }
-    }, "ts/sample.adts", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/AdtsReaderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/AdtsReaderTest.java
deleted file mode 100644
index bcfa90a565..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/AdtsReaderTest.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ts;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator;
-import com.google.android.exoplayer2.testutil.FakeExtractorOutput;
-import com.google.android.exoplayer2.testutil.FakeTrackOutput;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link AdtsReader}.
- */
-public class AdtsReaderTest extends TestCase {
-
-  public static final byte[] ID3_DATA_1 = TestUtil.createByteArray(
-      0x49, 0x44, 0x33, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x54, 0x58,
-      0x58, 0x58, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x03, 0x00, 0x20, 0x2a,
-      0x2a, 0x2a, 0x20, 0x54, 0x48, 0x49, 0x53, 0x20, 0x49, 0x53, 0x20, 0x54,
-      0x69, 0x6d, 0x65, 0x64, 0x20, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
-      0x61, 0x20, 0x40, 0x20, 0x2d, 0x2d, 0x20, 0x30, 0x30, 0x3a, 0x30, 0x30,
-      0x3a, 0x30, 0x30, 0x2e, 0x30, 0x20, 0x2a, 0x2a, 0x2a, 0x20, 0x00);
-
-  public static final byte[] ID3_DATA_2 = TestUtil.createByteArray(
-      0x49,
-      0x44, 0x33, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x50, 0x52, 0x49,
-      0x56, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
-      0x70, 0x70, 0x6c, 0x65, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
-      0x6e, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
-      0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
-      0x61, 0x6d, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xbb, 0xa0);
-
-  public static final byte[] ADTS_HEADER = TestUtil.createByteArray(
-      0xff, 0xf1, 0x50, 0x80, 0x01, 0xdf, 0xfc);
-
-  public static final byte[] ADTS_CONTENT = TestUtil.createByteArray(
-      0x20, 0x00, 0x20, 0x00, 0x00, 0x80, 0x0e);
-
-  private static final byte[] TEST_DATA = TestUtil.joinByteArrays(
-      ID3_DATA_1,
-      ID3_DATA_2,
-      ADTS_HEADER,
-      ADTS_CONTENT);
-
-  private static final long ADTS_SAMPLE_DURATION = 23219L;
-
-  private FakeTrackOutput adtsOutput;
-  private FakeTrackOutput id3Output;
-  private AdtsReader adtsReader;
-  private ParsableByteArray data;
-  private boolean firstFeed;
-
-  @Override
-  protected void setUp() throws Exception {
-    FakeExtractorOutput fakeExtractorOutput = new FakeExtractorOutput();
-    adtsOutput = fakeExtractorOutput.track(0, C.TRACK_TYPE_AUDIO);
-    id3Output = fakeExtractorOutput.track(1, C.TRACK_TYPE_METADATA);
-    adtsReader = new AdtsReader(true);
-    TrackIdGenerator idGenerator = new TrackIdGenerator(0, 1);
-    adtsReader.createTracks(fakeExtractorOutput, idGenerator);
-    data = new ParsableByteArray(TEST_DATA);
-    firstFeed = true;
-  }
-
-  public void testSkipToNextSample() throws Exception {
-    for (int i = 1; i <= ID3_DATA_1.length + ID3_DATA_2.length; i++) {
-      data.setPosition(i);
-      feed();
-      // Once the data position set to ID3_DATA_1.length, no more id3 samples are read
-      int id3SampleCount = Math.min(i, ID3_DATA_1.length);
-      assertSampleCounts(id3SampleCount, i);
-    }
-  }
-
-  public void testSkipToNextSampleResetsState() throws Exception {
-    data = new ParsableByteArray(TestUtil.joinByteArrays(
-        ADTS_HEADER,
-        ADTS_CONTENT,
-        // Adts sample missing the first sync byte
-        Arrays.copyOfRange(ADTS_HEADER, 1, ADTS_HEADER.length),
-        ADTS_CONTENT));
-    feed();
-    assertSampleCounts(0, 1);
-    adtsOutput.assertSample(0, ADTS_CONTENT, 0, C.BUFFER_FLAG_KEY_FRAME, null);
-  }
-
-  public void testNoData() throws Exception {
-    feedLimited(0);
-    assertSampleCounts(0, 0);
-  }
-
-  public void testNotEnoughDataForIdentifier() throws Exception {
-    feedLimited(3 - 1);
-    assertSampleCounts(0, 0);
-  }
-
-  public void testNotEnoughDataForHeader() throws Exception {
-    feedLimited(10 - 1);
-    assertSampleCounts(0, 0);
-  }
-
-  public void testNotEnoughDataForWholeId3Packet() throws Exception {
-    feedLimited(ID3_DATA_1.length - 1);
-    assertSampleCounts(0, 0);
-  }
-
-  public void testConsumeWholeId3Packet() throws Exception {
-    feedLimited(ID3_DATA_1.length);
-    assertSampleCounts(1, 0);
-    id3Output.assertSample(0, ID3_DATA_1, 0, C.BUFFER_FLAG_KEY_FRAME, null);
-  }
-
-  public void testMultiId3Packet() throws Exception {
-    feedLimited(ID3_DATA_1.length + ID3_DATA_2.length - 1);
-    assertSampleCounts(1, 0);
-    id3Output.assertSample(0, ID3_DATA_1, 0, C.BUFFER_FLAG_KEY_FRAME, null);
-  }
-
-  public void testMultiId3PacketConsumed() throws Exception {
-    feedLimited(ID3_DATA_1.length + ID3_DATA_2.length);
-    assertSampleCounts(2, 0);
-    id3Output.assertSample(0, ID3_DATA_1, 0, C.BUFFER_FLAG_KEY_FRAME, null);
-    id3Output.assertSample(1, ID3_DATA_2, 0, C.BUFFER_FLAG_KEY_FRAME, null);
-  }
-
-  public void testMultiPacketConsumed() throws Exception {
-    for (int i = 0; i < 10; i++) {
-      data.setPosition(0);
-      feed();
-
-      long timeUs = ADTS_SAMPLE_DURATION * i;
-      int j = i * 2;
-      assertSampleCounts(j + 2, i + 1);
-
-      id3Output.assertSample(j, ID3_DATA_1, timeUs, C.BUFFER_FLAG_KEY_FRAME, null);
-      id3Output.assertSample(j + 1, ID3_DATA_2, timeUs, C.BUFFER_FLAG_KEY_FRAME, null);
-      adtsOutput.assertSample(i, ADTS_CONTENT, timeUs, C.BUFFER_FLAG_KEY_FRAME, null);
-    }
-  }
-
-  public void testAdtsDataOnly() throws Exception {
-    data.setPosition(ID3_DATA_1.length + ID3_DATA_2.length);
-    feed();
-    assertSampleCounts(0, 1);
-    adtsOutput.assertSample(0, ADTS_CONTENT, 0, C.BUFFER_FLAG_KEY_FRAME, null);
-  }
-
-  private void feedLimited(int limit) {
-    maybeStartPacket();
-    data.setLimit(limit);
-    feed();
-  }
-
-  private void feed() {
-    maybeStartPacket();
-    adtsReader.consume(data);
-  }
-
-  private void maybeStartPacket() {
-    if (firstFeed) {
-      adtsReader.packetStarted(0, true);
-      firstFeed = false;
-    }
-  }
-
-  private void assertSampleCounts(int id3SampleCount, int adtsSampleCount) {
-    id3Output.assertSampleCount(id3SampleCount);
-    adtsOutput.assertSampleCount(adtsSampleCount);
-  }
-
-}
-
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/PsExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/PsExtractorTest.java
deleted file mode 100644
index 78ef05a769..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/PsExtractorTest.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ts;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link PsExtractor}.
- */
-public final class PsExtractorTest extends InstrumentationTestCase {
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new PsExtractor();
-      }
-    }, "ts/sample.ps", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/SectionReaderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/SectionReaderTest.java
deleted file mode 100644
index c4d9de3100..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/SectionReaderTest.java
+++ /dev/null
@@ -1,195 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ts;
-
-import com.google.android.exoplayer2.extractor.ExtractorOutput;
-import com.google.android.exoplayer2.testutil.FakeExtractorOutput;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import com.google.android.exoplayer2.util.TimestampAdjuster;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link SectionReader}.
- */
-public class SectionReaderTest extends TestCase {
-
-  private byte[] packetPayload;
-  private CustomSectionPayloadReader payloadReader;
-  private SectionReader reader;
-
-  @Override
-  public void setUp() {
-    packetPayload = new byte[512];
-    Arrays.fill(packetPayload, (byte) 0xFF);
-    payloadReader = new CustomSectionPayloadReader();
-    reader = new SectionReader(payloadReader);
-    reader.init(new TimestampAdjuster(0), new FakeExtractorOutput(),
-        new TsPayloadReader.TrackIdGenerator(0, 1));
-  }
-
-  public void testSingleOnePacketSection() {
-    packetPayload[0] = 3;
-    insertTableSection(4, (byte) 99, 3);
-    reader.consume(new ParsableByteArray(packetPayload), true);
-    assertEquals(Collections.singletonList(99), payloadReader.parsedTableIds);
-  }
-
-  public void testHeaderSplitAcrossPackets() {
-    packetPayload[0] = 3; // The first packet includes a pointer_field.
-    insertTableSection(4, (byte) 100, 3); // This section header spreads across both packets.
-
-    ParsableByteArray firstPacket = new ParsableByteArray(packetPayload, 5);
-    reader.consume(firstPacket, true);
-    assertEquals(Collections.emptyList(), payloadReader.parsedTableIds);
-
-    ParsableByteArray secondPacket = new ParsableByteArray(packetPayload);
-    secondPacket.setPosition(5);
-    reader.consume(secondPacket, false);
-    assertEquals(Collections.singletonList(100), payloadReader.parsedTableIds);
-  }
-
-  public void testFiveSectionsInTwoPackets() {
-    packetPayload[0] = 0; // The first packet includes a pointer_field.
-    insertTableSection(1, (byte) 101, 10);
-    insertTableSection(14, (byte) 102, 10);
-    insertTableSection(27, (byte) 103, 10);
-    packetPayload[40] = 0; // The second packet includes a pointer_field.
-    insertTableSection(41, (byte) 104, 10);
-    insertTableSection(54, (byte) 105, 10);
-
-    ParsableByteArray firstPacket = new ParsableByteArray(packetPayload, 40);
-    reader.consume(firstPacket, true);
-    assertEquals(Arrays.asList(101, 102, 103), payloadReader.parsedTableIds);
-
-    ParsableByteArray secondPacket = new ParsableByteArray(packetPayload);
-    secondPacket.setPosition(40);
-    reader.consume(secondPacket, true);
-    assertEquals(Arrays.asList(101, 102, 103, 104, 105), payloadReader.parsedTableIds);
-  }
-
-  public void testLongSectionAcrossFourPackets() {
-    packetPayload[0] = 13; // The first packet includes a pointer_field.
-    insertTableSection(1, (byte) 106, 10); // First section. Should be skipped.
-    // Second section spread across four packets. Should be consumed.
-    insertTableSection(14, (byte) 107, 300);
-    packetPayload[300] = 17; // The third packet includes a pointer_field.
-    // Third section, at the payload start of the fourth packet. Should be consumed.
-    insertTableSection(318, (byte) 108, 10);
-
-    ParsableByteArray firstPacket = new ParsableByteArray(packetPayload, 100);
-    reader.consume(firstPacket, true);
-    assertEquals(Collections.emptyList(), payloadReader.parsedTableIds);
-
-    ParsableByteArray secondPacket = new ParsableByteArray(packetPayload, 200);
-    secondPacket.setPosition(100);
-    reader.consume(secondPacket, false);
-    assertEquals(Collections.emptyList(), payloadReader.parsedTableIds);
-
-    ParsableByteArray thirdPacket = new ParsableByteArray(packetPayload, 300);
-    thirdPacket.setPosition(200);
-    reader.consume(thirdPacket, false);
-    assertEquals(Collections.emptyList(), payloadReader.parsedTableIds);
-
-    ParsableByteArray fourthPacket = new ParsableByteArray(packetPayload);
-    fourthPacket.setPosition(300);
-    reader.consume(fourthPacket, true);
-    assertEquals(Arrays.asList(107, 108), payloadReader.parsedTableIds);
-  }
-
-  public void testSeek() {
-    packetPayload[0] = 13; // The first packet includes a pointer_field.
-    insertTableSection(1, (byte) 109, 10); // First section. Should be skipped.
-    // Second section spread across four packets. Should be consumed.
-    insertTableSection(14, (byte) 110, 300);
-    packetPayload[300] = 17; // The third packet includes a pointer_field.
-    // Third section, at the payload start of the fourth packet. Should be consumed.
-    insertTableSection(318, (byte) 111, 10);
-
-    ParsableByteArray firstPacket = new ParsableByteArray(packetPayload, 100);
-    reader.consume(firstPacket, true);
-    assertEquals(Collections.emptyList(), payloadReader.parsedTableIds);
-
-    ParsableByteArray secondPacket = new ParsableByteArray(packetPayload, 200);
-    secondPacket.setPosition(100);
-    reader.consume(secondPacket, false);
-    assertEquals(Collections.emptyList(), payloadReader.parsedTableIds);
-
-    ParsableByteArray thirdPacket = new ParsableByteArray(packetPayload, 300);
-    thirdPacket.setPosition(200);
-    reader.consume(thirdPacket, false);
-    assertEquals(Collections.emptyList(), payloadReader.parsedTableIds);
-
-    reader.seek();
-
-    ParsableByteArray fourthPacket = new ParsableByteArray(packetPayload);
-    fourthPacket.setPosition(300);
-    reader.consume(fourthPacket, true);
-    assertEquals(Collections.singletonList(111), payloadReader.parsedTableIds);
-  }
-
-  public void testCrcChecks() {
-    byte[] correctCrcPat = new byte[] {
-        (byte) 0x0, (byte) 0x0, (byte) 0xb0, (byte) 0xd, (byte) 0x0, (byte) 0x1, (byte) 0xc1,
-        (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0xe1, (byte) 0x0, (byte) 0xe8,
-        (byte) 0xf9, (byte) 0x5e, (byte) 0x7d};
-    byte[] incorrectCrcPat = Arrays.copyOf(correctCrcPat, correctCrcPat.length);
-    // Crc field is incorrect, and should not be passed to the payload reader.
-    incorrectCrcPat[16]--;
-    reader.consume(new ParsableByteArray(correctCrcPat), true);
-    assertEquals(Collections.singletonList(0), payloadReader.parsedTableIds);
-    reader.consume(new ParsableByteArray(incorrectCrcPat), true);
-    assertEquals(Collections.singletonList(0), payloadReader.parsedTableIds);
-  }
-
-  // Internal methods.
-
-  /**
-   * Inserts a private section header to {@link #packetPayload}.
-   *
-   * @param offset The position at which the header is inserted.
-   * @param tableId The table_id for the inserted section.
-   * @param sectionLength The value to use for private_section_length.
-   */
-  private void insertTableSection(int offset, byte tableId, int sectionLength) {
-    packetPayload[offset++] = tableId;
-    packetPayload[offset++] = (byte) ((sectionLength >> 8) & 0x0F);
-    packetPayload[offset] = (byte) (sectionLength & 0xFF);
-  }
-
-  // Internal classes.
-
-  private static final class CustomSectionPayloadReader implements SectionPayloadReader {
-
-    List<Integer> parsedTableIds;
-
-    @Override
-    public void init(TimestampAdjuster timestampAdjuster, ExtractorOutput extractorOutput,
-        TsPayloadReader.TrackIdGenerator idGenerator) {
-      parsedTableIds = new ArrayList<>();
-    }
-
-    @Override
-    public void consume(ParsableByteArray sectionData) {
-      parsedTableIds.add(sectionData.readUnsignedByte());
-    }
-
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/TsExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/TsExtractorTest.java
deleted file mode 100644
index b6eddb5112..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/ts/TsExtractorTest.java
+++ /dev/null
@@ -1,253 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.ts;
-
-import android.test.InstrumentationTestCase;
-import android.util.SparseArray;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.extractor.ExtractorOutput;
-import com.google.android.exoplayer2.extractor.PositionHolder;
-import com.google.android.exoplayer2.extractor.TrackOutput;
-import com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo;
-import com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-import com.google.android.exoplayer2.testutil.FakeExtractorInput;
-import com.google.android.exoplayer2.testutil.FakeExtractorOutput;
-import com.google.android.exoplayer2.testutil.FakeTrackOutput;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import com.google.android.exoplayer2.util.TimestampAdjuster;
-import java.io.ByteArrayOutputStream;
-import java.util.Random;
-
-/**
- * Unit test for {@link TsExtractor}.
- */
-public final class TsExtractorTest extends InstrumentationTestCase {
-
-  private static final int TS_PACKET_SIZE = 188;
-  private static final int TS_SYNC_BYTE = 0x47; // First byte of each TS packet.
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new TsExtractor();
-      }
-    }, "ts/sample.ts", getInstrumentation());
-  }
-
-  public void testIncompleteSample() throws Exception {
-    Random random = new Random(0);
-    byte[] fileData = TestUtil.getByteArray(getInstrumentation(), "ts/sample.ts");
-    ByteArrayOutputStream out = new ByteArrayOutputStream(fileData.length * 2);
-    writeJunkData(out, random.nextInt(TS_PACKET_SIZE - 1) + 1);
-    out.write(fileData, 0, TS_PACKET_SIZE * 5);
-    for (int i = TS_PACKET_SIZE * 5; i < fileData.length; i += TS_PACKET_SIZE) {
-      writeJunkData(out, random.nextInt(TS_PACKET_SIZE));
-      out.write(fileData, i, TS_PACKET_SIZE);
-    }
-    out.write(TS_SYNC_BYTE);
-    writeJunkData(out, random.nextInt(TS_PACKET_SIZE - 1) + 1);
-    fileData = out.toByteArray();
-
-    ExtractorAsserts.assertOutput(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new TsExtractor();
-      }
-    }, "ts/sample.ts", fileData, getInstrumentation());
-  }
-
-  public void testCustomPesReader() throws Exception {
-    CustomTsPayloadReaderFactory factory = new CustomTsPayloadReaderFactory(true, false);
-    TsExtractor tsExtractor = new TsExtractor(TsExtractor.MODE_MULTI_PMT, new TimestampAdjuster(0),
-        factory);
-    FakeExtractorInput input = new FakeExtractorInput.Builder()
-        .setData(TestUtil.getByteArray(getInstrumentation(), "ts/sample.ts"))
-        .setSimulateIOErrors(false)
-        .setSimulateUnknownLength(false)
-        .setSimulatePartialReads(false).build();
-    FakeExtractorOutput output = new FakeExtractorOutput();
-    tsExtractor.init(output);
-    PositionHolder seekPositionHolder = new PositionHolder();
-    int readResult = Extractor.RESULT_CONTINUE;
-    while (readResult != Extractor.RESULT_END_OF_INPUT) {
-      readResult = tsExtractor.read(input, seekPositionHolder);
-    }
-    CustomEsReader reader = factory.esReader;
-    assertEquals(2, reader.packetsRead);
-    TrackOutput trackOutput = reader.getTrackOutput();
-    assertTrue(trackOutput == output.trackOutputs.get(257 /* PID of audio track. */));
-    assertEquals(
-        Format.createTextSampleFormat("1/257", "mime", null, 0, 0, "und", null, 0),
-        ((FakeTrackOutput) trackOutput).format);
-  }
-
-  public void testCustomInitialSectionReader() throws Exception {
-    CustomTsPayloadReaderFactory factory = new CustomTsPayloadReaderFactory(false, true);
-    TsExtractor tsExtractor = new TsExtractor(TsExtractor.MODE_MULTI_PMT, new TimestampAdjuster(0),
-        factory);
-    FakeExtractorInput input = new FakeExtractorInput.Builder()
-        .setData(TestUtil.getByteArray(getInstrumentation(), "ts/sample_with_sdt.ts"))
-        .setSimulateIOErrors(false)
-        .setSimulateUnknownLength(false)
-        .setSimulatePartialReads(false).build();
-    tsExtractor.init(new FakeExtractorOutput());
-    PositionHolder seekPositionHolder = new PositionHolder();
-    int readResult = Extractor.RESULT_CONTINUE;
-    while (readResult != Extractor.RESULT_END_OF_INPUT) {
-      readResult = tsExtractor.read(input, seekPositionHolder);
-    }
-    assertEquals(1, factory.sdtReader.consumedSdts);
-  }
-
-  private static void writeJunkData(ByteArrayOutputStream out, int length) {
-    for (int i = 0; i < length; i++) {
-      if (((byte) i) == TS_SYNC_BYTE) {
-        out.write(0);
-      } else {
-        out.write(i);
-      }
-    }
-  }
-
-  private static final class CustomTsPayloadReaderFactory implements TsPayloadReader.Factory {
-
-    private final boolean provideSdtReader;
-    private final boolean provideCustomEsReader;
-    private final TsPayloadReader.Factory defaultFactory;
-    private CustomEsReader esReader;
-    private SdtSectionReader sdtReader;
-
-    public CustomTsPayloadReaderFactory(boolean provideCustomEsReader, boolean provideSdtReader) {
-      this.provideCustomEsReader = provideCustomEsReader;
-      this.provideSdtReader = provideSdtReader;
-      defaultFactory = new DefaultTsPayloadReaderFactory();
-    }
-
-    @Override
-    public SparseArray<TsPayloadReader> createInitialPayloadReaders() {
-      if (provideSdtReader) {
-        assertNull(sdtReader);
-        SparseArray<TsPayloadReader> mapping = new SparseArray<>();
-        sdtReader = new SdtSectionReader();
-        mapping.put(17, new SectionReader(sdtReader));
-        return mapping;
-      } else {
-        return defaultFactory.createInitialPayloadReaders();
-      }
-    }
-
-    @Override
-    public TsPayloadReader createPayloadReader(int streamType, EsInfo esInfo) {
-      if (provideCustomEsReader && streamType == 3) {
-        esReader = new CustomEsReader(esInfo.language);
-        return new PesReader(esReader);
-      } else {
-        return defaultFactory.createPayloadReader(streamType, esInfo);
-      }
-    }
-
-  }
-
-  private static final class CustomEsReader implements ElementaryStreamReader {
-
-    private final String language;
-    private TrackOutput output;
-    public int packetsRead = 0;
-
-    public CustomEsReader(String language) {
-      this.language = language;
-    }
-
-    @Override
-    public void seek() {
-    }
-
-    @Override
-    public void createTracks(ExtractorOutput extractorOutput, TrackIdGenerator idGenerator) {
-      idGenerator.generateNewId();
-      output = extractorOutput.track(idGenerator.getTrackId(), C.TRACK_TYPE_UNKNOWN);
-      output.format(Format.createTextSampleFormat(idGenerator.getFormatId(), "mime", null, 0, 0,
-          language, null, 0));
-    }
-
-    @Override
-    public void packetStarted(long pesTimeUs, boolean dataAlignmentIndicator) {
-    }
-
-    @Override
-    public void consume(ParsableByteArray data) {
-    }
-
-    @Override
-    public void packetFinished() {
-      packetsRead++;
-    }
-
-    public TrackOutput getTrackOutput() {
-      return output;
-    }
-
-  }
-
-  private static final class SdtSectionReader implements SectionPayloadReader {
-
-    private int consumedSdts;
-
-    @Override
-    public void init(TimestampAdjuster timestampAdjuster, ExtractorOutput extractorOutput,
-        TrackIdGenerator idGenerator) {
-      // Do nothing.
-    }
-
-    @Override
-    public void consume(ParsableByteArray sectionData) {
-      // table_id(8), section_syntax_indicator(1), reserved_future_use(1), reserved(2),
-      // section_length(12), transport_stream_id(16), reserved(2), version_number(5),
-      // current_next_indicator(1), section_number(8), last_section_number(8),
-      // original_network_id(16), reserved_future_use(8)
-      sectionData.skipBytes(11);
-      // Start of the service loop.
-      assertEquals(0x5566 /* arbitrary service id */, sectionData.readUnsignedShort());
-      // reserved_future_use(6), EIT_schedule_flag(1), EIT_present_following_flag(1)
-      sectionData.skipBytes(1);
-      // Assert there is only one service.
-      // Remove running_status(3), free_CA_mode(1) from the descriptors_loop_length with the mask.
-      assertEquals(sectionData.readUnsignedShort() & 0xFFF, sectionData.bytesLeft());
-      while (sectionData.bytesLeft() > 0) {
-        int descriptorTag = sectionData.readUnsignedByte();
-        int descriptorLength = sectionData.readUnsignedByte();
-        if (descriptorTag == 72 /* service descriptor */) {
-          assertEquals(1, sectionData.readUnsignedByte()); // Service type: Digital TV.
-          int serviceProviderNameLength = sectionData.readUnsignedByte();
-          assertEquals("Some provider", sectionData.readString(serviceProviderNameLength));
-          int serviceNameLength = sectionData.readUnsignedByte();
-          assertEquals("Some Channel", sectionData.readString(serviceNameLength));
-        } else {
-          sectionData.skipBytes(descriptorLength);
-        }
-      }
-      consumedSdts++;
-    }
-
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/wav/WavExtractorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/wav/WavExtractorTest.java
deleted file mode 100644
index 36c05aa72e..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/extractor/wav/WavExtractorTest.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.extractor.wav;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.Extractor;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts;
-import com.google.android.exoplayer2.testutil.ExtractorAsserts.ExtractorFactory;
-
-/**
- * Unit test for {@link WavExtractor}.
- */
-public final class WavExtractorTest extends InstrumentationTestCase {
-
-  public void testSample() throws Exception {
-    ExtractorAsserts.assertBehavior(new ExtractorFactory() {
-      @Override
-      public Extractor create() {
-        return new WavExtractor();
-      }
-    }, "wav/sample.wav", getInstrumentation());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoderTest.java
deleted file mode 100644
index b33dfd1067..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoderTest.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.metadata.emsg;
-
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.metadata.Metadata;
-import com.google.android.exoplayer2.metadata.MetadataInputBuffer;
-import java.nio.ByteBuffer;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link EventMessageDecoder}.
- */
-public final class EventMessageDecoderTest extends TestCase {
-
-  public void testDecodeEventMessage() {
-    byte[] rawEmsgBody = new byte[] {
-        117, 114, 110, 58, 116, 101, 115, 116, 0, // scheme_id_uri = "urn:test"
-        49, 50, 51, 0, // value = "123"
-        0, 0, -69, -128, // timescale = 48000
-        0, 0, 0, 0, // presentation_time_delta (ignored) = 0
-        0, 2, 50, -128, // event_duration = 144000
-        0, 15, 67, -45, // id = 1000403
-        0, 1, 2, 3, 4}; // message_data = {0, 1, 2, 3, 4}
-    EventMessageDecoder decoder = new EventMessageDecoder();
-    MetadataInputBuffer buffer = new MetadataInputBuffer();
-    buffer.data = ByteBuffer.allocate(rawEmsgBody.length).put(rawEmsgBody);
-    Metadata metadata = decoder.decode(buffer);
-    assertEquals(1, metadata.length());
-    EventMessage eventMessage = (EventMessage) metadata.get(0);
-    assertEquals("urn:test", eventMessage.schemeIdUri);
-    assertEquals("123", eventMessage.value);
-    assertEquals(3000, eventMessage.durationMs);
-    assertEquals(1000403, eventMessage.id);
-    MoreAsserts.assertEquals(new byte[] {0, 1, 2, 3, 4}, eventMessage.messageData);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/emsg/EventMessageTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/emsg/EventMessageTest.java
deleted file mode 100644
index baafb6b18b..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/emsg/EventMessageTest.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.metadata.emsg;
-
-import android.os.Parcel;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link EventMessage}.
- */
-public final class EventMessageTest extends TestCase {
-
-  public void testEventMessageParcelable() {
-    EventMessage eventMessage = new EventMessage("urn:test", "123", 3000, 1000403,
-        new byte[] {0, 1, 2, 3, 4});
-    // Write to parcel.
-    Parcel parcel = Parcel.obtain();
-    eventMessage.writeToParcel(parcel, 0);
-    // Create from parcel.
-    parcel.setDataPosition(0);
-    EventMessage fromParcelEventMessage = EventMessage.CREATOR.createFromParcel(parcel);
-    // Assert equals.
-    assertEquals(eventMessage, fromParcelEventMessage);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/ChapterFrameTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/ChapterFrameTest.java
deleted file mode 100644
index 182ae6f1c9..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/ChapterFrameTest.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.metadata.id3;
-
-import android.os.Parcel;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link ChapterFrame}.
- */
-public final class ChapterFrameTest extends TestCase {
-
-  public void testParcelable() {
-    Id3Frame[] subFrames = new Id3Frame[] {
-      new TextInformationFrame("TIT2", null, "title"),
-      new UrlLinkFrame("WXXX", "description", "url")
-    };
-    ChapterFrame chapterFrameToParcel = new ChapterFrame("id", 0, 1, 2, 3, subFrames);
-
-    Parcel parcel = Parcel.obtain();
-    chapterFrameToParcel.writeToParcel(parcel, 0);
-    parcel.setDataPosition(0);
-
-    ChapterFrame chapterFrameFromParcel = ChapterFrame.CREATOR.createFromParcel(parcel);
-    assertEquals(chapterFrameToParcel, chapterFrameFromParcel);
-
-    parcel.recycle();
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/ChapterTocFrameTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/ChapterTocFrameTest.java
deleted file mode 100644
index 9641de7669..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/ChapterTocFrameTest.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.metadata.id3;
-
-import android.os.Parcel;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link ChapterTocFrame}.
- */
-public final class ChapterTocFrameTest extends TestCase {
-
-  public void testParcelable() {
-    String[] children = new String[] {"child0", "child1"};
-    Id3Frame[] subFrames = new Id3Frame[] {
-        new TextInformationFrame("TIT2", null, "title"),
-        new UrlLinkFrame("WXXX", "description", "url")
-    };
-    ChapterTocFrame chapterTocFrameToParcel = new ChapterTocFrame("id", false, true, children,
-        subFrames);
-
-    Parcel parcel = Parcel.obtain();
-    chapterTocFrameToParcel.writeToParcel(parcel, 0);
-    parcel.setDataPosition(0);
-
-    ChapterTocFrame chapterTocFrameFromParcel = ChapterTocFrame.CREATOR.createFromParcel(parcel);
-    assertEquals(chapterTocFrameToParcel, chapterTocFrameFromParcel);
-
-    parcel.recycle();
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/Id3DecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/Id3DecoderTest.java
deleted file mode 100644
index 6b39ed1645..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/id3/Id3DecoderTest.java
+++ /dev/null
@@ -1,221 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.metadata.id3;
-
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.metadata.Metadata;
-import com.google.android.exoplayer2.metadata.MetadataDecoderException;
-import com.google.android.exoplayer2.util.Assertions;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link Id3Decoder}.
- */
-public final class Id3DecoderTest extends TestCase {
-
-  private static final byte[] TAG_HEADER = new byte[] {73, 68, 51, 4, 0, 0, 0, 0, 0, 0};
-  private static final int FRAME_HEADER_LENGTH = 10;
-  private static final int ID3_TEXT_ENCODING_UTF_8 = 3;
-
-  public void testDecodeTxxxFrame() throws MetadataDecoderException {
-    byte[] rawId3 = buildSingleFrameTag("TXXX", new byte[] {3, 0, 109, 100, 105, 97, 108, 111, 103,
-        95, 86, 73, 78, 68, 73, 67, 79, 49, 53, 50, 55, 54, 54, 52, 95, 115, 116, 97, 114, 116, 0});
-    Id3Decoder decoder = new Id3Decoder();
-    Metadata metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    TextInformationFrame textInformationFrame = (TextInformationFrame) metadata.get(0);
-    assertEquals("TXXX", textInformationFrame.id);
-    assertEquals("", textInformationFrame.description);
-    assertEquals("mdialog_VINDICO1527664_start", textInformationFrame.value);
-
-    // Test empty.
-    rawId3 = buildSingleFrameTag("TXXX", new byte[0]);
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(0, metadata.length());
-
-    // Test encoding byte only.
-    rawId3 = buildSingleFrameTag("TXXX", new byte[] {ID3_TEXT_ENCODING_UTF_8});
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    textInformationFrame = (TextInformationFrame) metadata.get(0);
-    assertEquals("TXXX", textInformationFrame.id);
-    assertEquals("", textInformationFrame.description);
-    assertEquals("", textInformationFrame.value);
-  }
-
-  public void testDecodeTextInformationFrame() throws MetadataDecoderException {
-    byte[] rawId3 = buildSingleFrameTag("TIT2", new byte[] {3, 72, 101, 108, 108, 111, 32, 87, 111,
-        114, 108, 100, 0});
-    Id3Decoder decoder = new Id3Decoder();
-    Metadata metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    TextInformationFrame textInformationFrame = (TextInformationFrame) metadata.get(0);
-    assertEquals("TIT2", textInformationFrame.id);
-    assertNull(textInformationFrame.description);
-    assertEquals("Hello World", textInformationFrame.value);
-
-    // Test empty.
-    rawId3 = buildSingleFrameTag("TIT2", new byte[0]);
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(0, metadata.length());
-
-    // Test encoding byte only.
-    rawId3 = buildSingleFrameTag("TIT2", new byte[] {ID3_TEXT_ENCODING_UTF_8});
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    textInformationFrame = (TextInformationFrame) metadata.get(0);
-    assertEquals("TIT2", textInformationFrame.id);
-    assertEquals(null, textInformationFrame.description);
-    assertEquals("", textInformationFrame.value);
-  }
-
-  public void testDecodeWxxxFrame() throws MetadataDecoderException {
-    byte[] rawId3 = buildSingleFrameTag("WXXX", new byte[] {ID3_TEXT_ENCODING_UTF_8, 116, 101, 115,
-        116, 0, 104, 116, 116, 112, 115, 58, 47, 47, 116, 101, 115, 116, 46, 99, 111, 109, 47, 97,
-        98, 99, 63, 100, 101, 102});
-    Id3Decoder decoder = new Id3Decoder();
-    Metadata metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    UrlLinkFrame urlLinkFrame = (UrlLinkFrame) metadata.get(0);
-    assertEquals("WXXX", urlLinkFrame.id);
-    assertEquals("test", urlLinkFrame.description);
-    assertEquals("https://test.com/abc?def", urlLinkFrame.url);
-
-    // Test empty.
-    rawId3 = buildSingleFrameTag("WXXX", new byte[0]);
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(0, metadata.length());
-
-    // Test encoding byte only.
-    rawId3 = buildSingleFrameTag("WXXX", new byte[] {ID3_TEXT_ENCODING_UTF_8});
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    urlLinkFrame = (UrlLinkFrame) metadata.get(0);
-    assertEquals("WXXX", urlLinkFrame.id);
-    assertEquals("", urlLinkFrame.description);
-    assertEquals("", urlLinkFrame.url);
-  }
-
-  public void testDecodeUrlLinkFrame() throws MetadataDecoderException {
-    byte[] rawId3 = buildSingleFrameTag("WCOM", new byte[] {104, 116, 116, 112, 115, 58, 47, 47,
-        116, 101, 115, 116, 46, 99, 111, 109, 47, 97, 98, 99, 63, 100, 101, 102});
-    Id3Decoder decoder = new Id3Decoder();
-    Metadata metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    UrlLinkFrame urlLinkFrame = (UrlLinkFrame) metadata.get(0);
-    assertEquals("WCOM", urlLinkFrame.id);
-    assertEquals(null, urlLinkFrame.description);
-    assertEquals("https://test.com/abc?def", urlLinkFrame.url);
-
-    // Test empty.
-    rawId3 = buildSingleFrameTag("WCOM", new byte[0]);
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    urlLinkFrame = (UrlLinkFrame) metadata.get(0);
-    assertEquals("WCOM", urlLinkFrame.id);
-    assertEquals(null, urlLinkFrame.description);
-    assertEquals("", urlLinkFrame.url);
-  }
-
-  public void testDecodePrivFrame() throws MetadataDecoderException {
-    byte[] rawId3 = buildSingleFrameTag("PRIV", new byte[] {116, 101, 115, 116, 0, 1, 2, 3, 4});
-    Id3Decoder decoder = new Id3Decoder();
-    Metadata metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    PrivFrame privFrame = (PrivFrame) metadata.get(0);
-    assertEquals("test", privFrame.owner);
-    MoreAsserts.assertEquals(new byte[] {1, 2, 3, 4}, privFrame.privateData);
-
-    // Test empty.
-    rawId3 = buildSingleFrameTag("PRIV", new byte[0]);
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    privFrame = (PrivFrame) metadata.get(0);
-    assertEquals("", privFrame.owner);
-    MoreAsserts.assertEquals(new byte[0], privFrame.privateData);
-  }
-
-  public void testDecodeApicFrame() throws MetadataDecoderException {
-    byte[] rawId3 = buildSingleFrameTag("APIC", new byte[] {3, 105, 109, 97, 103, 101, 47, 106, 112,
-        101, 103, 0, 16, 72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 0, 1, 2, 3, 4, 5, 6, 7,
-        8, 9, 0});
-    Id3Decoder decoder = new Id3Decoder();
-    Metadata metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    ApicFrame apicFrame = (ApicFrame) metadata.get(0);
-    assertEquals("image/jpeg", apicFrame.mimeType);
-    assertEquals(16, apicFrame.pictureType);
-    assertEquals("Hello World", apicFrame.description);
-    assertEquals(10, apicFrame.pictureData.length);
-    MoreAsserts.assertEquals(new byte[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}, apicFrame.pictureData);
-  }
-
-  public void testDecodeCommentFrame() throws MetadataDecoderException {
-    byte[] rawId3 = buildSingleFrameTag("COMM", new byte[] {ID3_TEXT_ENCODING_UTF_8, 101, 110, 103,
-        100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 0, 116, 101, 120, 116, 0});
-    Id3Decoder decoder = new Id3Decoder();
-    Metadata metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    CommentFrame commentFrame = (CommentFrame) metadata.get(0);
-    assertEquals("eng", commentFrame.language);
-    assertEquals("description", commentFrame.description);
-    assertEquals("text", commentFrame.text);
-
-    // Test empty.
-    rawId3 = buildSingleFrameTag("COMM", new byte[0]);
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(0, metadata.length());
-
-    // Test language only.
-    rawId3 = buildSingleFrameTag("COMM", new byte[] {ID3_TEXT_ENCODING_UTF_8, 101, 110, 103});
-    metadata = decoder.decode(rawId3, rawId3.length);
-    assertEquals(1, metadata.length());
-    commentFrame = (CommentFrame) metadata.get(0);
-    assertEquals("eng", commentFrame.language);
-    assertEquals("", commentFrame.description);
-    assertEquals("", commentFrame.text);
-  }
-
-  private static byte[] buildSingleFrameTag(String frameId, byte[] frameData) {
-    byte[] frameIdBytes = frameId.getBytes();
-    Assertions.checkState(frameIdBytes.length == 4);
-
-    byte[] tagData = new byte[TAG_HEADER.length + FRAME_HEADER_LENGTH + frameData.length];
-    System.arraycopy(TAG_HEADER, 0, tagData, 0, TAG_HEADER.length);
-    // Fill in the size part of the tag header.
-    int offset = TAG_HEADER.length - 4;
-    int tagSize = frameData.length + FRAME_HEADER_LENGTH;
-    tagData[offset++] = (byte) ((tagSize >> 21) & 0x7F);
-    tagData[offset++] = (byte) ((tagSize >> 14) & 0x7F);
-    tagData[offset++] = (byte) ((tagSize >> 7) & 0x7F);
-    tagData[offset++] = (byte) (tagSize & 0x7F);
-    // Fill in the frame header.
-    tagData[offset++] = frameIdBytes[0];
-    tagData[offset++] = frameIdBytes[1];
-    tagData[offset++] = frameIdBytes[2];
-    tagData[offset++] = frameIdBytes[3];
-    tagData[offset++] = (byte) ((frameData.length >> 24) & 0xFF);
-    tagData[offset++] = (byte) ((frameData.length >> 16) & 0xFF);
-    tagData[offset++] = (byte) ((frameData.length >> 8) & 0xFF);
-    tagData[offset++] = (byte) (frameData.length & 0xFF);
-    offset += 2; // Frame flags set to 0
-    // Fill in the frame data.
-    System.arraycopy(frameData, 0, tagData, offset, frameData.length);
-
-    return tagData;
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/scte35/SpliceInfoDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/scte35/SpliceInfoDecoderTest.java
deleted file mode 100644
index c50ff06699..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/metadata/scte35/SpliceInfoDecoderTest.java
+++ /dev/null
@@ -1,173 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.metadata.scte35;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.metadata.Metadata;
-import com.google.android.exoplayer2.metadata.MetadataDecoderException;
-import com.google.android.exoplayer2.metadata.MetadataInputBuffer;
-import com.google.android.exoplayer2.util.TimestampAdjuster;
-import java.nio.ByteBuffer;
-import java.util.List;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link SpliceInfoDecoder}.
- */
-public final class SpliceInfoDecoderTest extends TestCase {
-
-  private SpliceInfoDecoder decoder;
-  private MetadataInputBuffer inputBuffer;
-
-  @Override
-  public void setUp() {
-    decoder = new SpliceInfoDecoder();
-    inputBuffer = new MetadataInputBuffer();
-  }
-
-  public void testWrappedAroundTimeSignalCommand() throws MetadataDecoderException {
-    byte[] rawTimeSignalSection = new byte[] {
-        0, // table_id.
-        (byte) 0x80, // section_syntax_indicator, private_indicator, reserved, section_length(4).
-        0x14, // section_length(8).
-        0x00, // protocol_version.
-        0x00, // encrypted_packet, encryption_algorithm, pts_adjustment(1).
-        0x00, 0x00, 0x00, 0x00, // pts_adjustment(32).
-        0x00, // cw_index.
-        0x00, // tier(8).
-        0x00, // tier(4), splice_command_length(4).
-        0x05, // splice_command_length(8).
-        0x06, // splice_command_type = time_signal.
-        // Start of splice_time().
-        (byte) 0x80, // time_specified_flag, reserved, pts_time(1).
-        0x52, 0x03, 0x02, (byte) 0x8f, // pts_time(32). PTS for a second after playback position.
-        0x00, 0x00, 0x00, 0x00}; // CRC_32 (ignored, check happens at extraction).
-
-    // The playback position is 57:15:58.43 approximately.
-    // With this offset, the playback position pts before wrapping is 0x451ebf851.
-    Metadata metadata = feedInputBuffer(rawTimeSignalSection, 0x3000000000L, -0x50000L);
-    assertEquals(1, metadata.length());
-    assertEquals(removePtsConversionPrecisionError(0x3001000000L, inputBuffer.subsampleOffsetUs),
-        ((TimeSignalCommand) metadata.get(0)).playbackPositionUs);
-  }
-
-  public void test2SpliceInsertCommands() throws MetadataDecoderException {
-    byte[] rawSpliceInsertCommand1 = new byte[] {
-        0, // table_id.
-        (byte) 0x80, // section_syntax_indicator, private_indicator, reserved, section_length(4).
-        0x19, // section_length(8).
-        0x00, // protocol_version.
-        0x00, // encrypted_packet, encryption_algorithm, pts_adjustment(1).
-        0x00, 0x00, 0x00, 0x00, // pts_adjustment(32).
-        0x00, // cw_index.
-        0x00, // tier(8).
-        0x00, // tier(4), splice_command_length(4).
-        0x0e, // splice_command_length(8).
-        0x05, // splice_command_type = splice_insert.
-        // Start of splice_insert().
-        0x00, 0x00, 0x00, 0x42, // splice_event_id.
-        0x00, // splice_event_cancel_indicator, reserved.
-        0x40, // out_of_network_indicator, program_splice_flag, duration_flag,
-              // splice_immediate_flag, reserved.
-        // start of splice_time().
-        (byte) 0x80, // time_specified_flag, reserved, pts_time(1).
-        0x00, 0x00, 0x00, 0x00, // PTS for playback position 3s.
-        0x00, 0x10, // unique_program_id.
-        0x01, // avail_num.
-        0x02, // avails_expected.
-        0x00, 0x00, 0x00, 0x00}; // CRC_32 (ignored, check happens at extraction).
-
-    Metadata metadata = feedInputBuffer(rawSpliceInsertCommand1, 2000000, 3000000);
-    assertEquals(1, metadata.length());
-    SpliceInsertCommand command = (SpliceInsertCommand) metadata.get(0);
-    assertEquals(66, command.spliceEventId);
-    assertFalse(command.spliceEventCancelIndicator);
-    assertFalse(command.outOfNetworkIndicator);
-    assertTrue(command.programSpliceFlag);
-    assertFalse(command.spliceImmediateFlag);
-    assertEquals(3000000, command.programSplicePlaybackPositionUs);
-    assertEquals(C.TIME_UNSET, command.breakDuration);
-    assertEquals(16, command.uniqueProgramId);
-    assertEquals(1, command.availNum);
-    assertEquals(2, command.availsExpected);
-
-    byte[] rawSpliceInsertCommand2 = new byte[] {
-        0, // table_id.
-        (byte) 0x80, // section_syntax_indicator, private_indicator, reserved, section_length(4).
-        0x22, // section_length(8).
-        0x00, // protocol_version.
-        0x00, // encrypted_packet, encryption_algorithm, pts_adjustment(1).
-        0x00, 0x00, 0x00, 0x00, // pts_adjustment(32).
-        0x00, // cw_index.
-        0x00, // tier(8).
-        0x00, // tier(4), splice_command_length(4).
-        0x13, // splice_command_length(8).
-        0x05, // splice_command_type = splice_insert.
-        // Start of splice_insert().
-        (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, // splice_event_id.
-        0x00, // splice_event_cancel_indicator, reserved.
-        0x00, // out_of_network_indicator, program_splice_flag, duration_flag,
-              // splice_immediate_flag, reserved.
-        0x02, // component_count.
-        0x10, // component_tag.
-        // start of splice_time().
-        (byte) 0x81, // time_specified_flag, reserved, pts_time(1).
-        (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, // PTS for playback position 10s.
-        // start of splice_time().
-        0x11, // component_tag.
-        0x00, // time_specified_flag, reserved.
-        0x00, 0x20, // unique_program_id.
-        0x01, // avail_num.
-        0x02, // avails_expected.
-        0x00, 0x00, 0x00, 0x00}; // CRC_32 (ignored, check happens at extraction).
-
-    // By changing the subsample offset we force adjuster reconstruction.
-    long subsampleOffset = 1000011;
-    metadata = feedInputBuffer(rawSpliceInsertCommand2, 1000000, subsampleOffset);
-    assertEquals(1, metadata.length());
-    command = (SpliceInsertCommand) metadata.get(0);
-    assertEquals(0xffffffffL, command.spliceEventId);
-    assertFalse(command.spliceEventCancelIndicator);
-    assertFalse(command.outOfNetworkIndicator);
-    assertFalse(command.programSpliceFlag);
-    assertFalse(command.spliceImmediateFlag);
-    assertEquals(C.TIME_UNSET, command.programSplicePlaybackPositionUs);
-    assertEquals(C.TIME_UNSET, command.breakDuration);
-    List<SpliceInsertCommand.ComponentSplice> componentSplices = command.componentSpliceList;
-    assertEquals(2, componentSplices.size());
-    assertEquals(16, componentSplices.get(0).componentTag);
-    assertEquals(1000000, componentSplices.get(0).componentSplicePlaybackPositionUs);
-    assertEquals(17, componentSplices.get(1).componentTag);
-    assertEquals(C.TIME_UNSET, componentSplices.get(1).componentSplicePts);
-    assertEquals(32, command.uniqueProgramId);
-    assertEquals(1, command.availNum);
-    assertEquals(2, command.availsExpected);
-  }
-
-  private Metadata feedInputBuffer(byte[] data, long timeUs, long subsampleOffset)
-      throws MetadataDecoderException{
-    inputBuffer.clear();
-    inputBuffer.data = ByteBuffer.allocate(data.length).put(data);
-    inputBuffer.timeUs = timeUs;
-    inputBuffer.subsampleOffsetUs = subsampleOffset;
-    return decoder.decode(inputBuffer);
-  }
-
-  private static long removePtsConversionPrecisionError(long timeUs, long offsetUs) {
-    return TimestampAdjuster.ptsToUs(TimestampAdjuster.usToPts(timeUs - offsetUs)) + offsetUs;
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/ClippingMediaSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/source/ClippingMediaSourceTest.java
deleted file mode 100644
index 66b0337450..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/ClippingMediaSourceTest.java
+++ /dev/null
@@ -1,130 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.Timeline.Period;
-import com.google.android.exoplayer2.Timeline.Window;
-import com.google.android.exoplayer2.testutil.FakeMediaSource;
-import com.google.android.exoplayer2.testutil.FakeTimeline;
-import com.google.android.exoplayer2.testutil.FakeTimeline.TimelineWindowDefinition;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.testutil.TimelineAsserts;
-
-/**
- * Unit tests for {@link ClippingMediaSource}.
- */
-public final class ClippingMediaSourceTest extends InstrumentationTestCase {
-
-  private static final long TEST_PERIOD_DURATION_US = 1000000;
-  private static final long TEST_CLIP_AMOUNT_US = 300000;
-
-  private Window window;
-  private Period period;
-
-  @Override
-  protected void setUp() throws Exception {
-    window = new Timeline.Window();
-    period = new Timeline.Period();
-  }
-
-  public void testNoClipping() {
-    Timeline timeline = new SinglePeriodTimeline(C.msToUs(TEST_PERIOD_DURATION_US), true);
-
-    Timeline clippedTimeline = getClippedTimeline(timeline, 0, TEST_PERIOD_DURATION_US);
-
-    assertEquals(1, clippedTimeline.getWindowCount());
-    assertEquals(1, clippedTimeline.getPeriodCount());
-    assertEquals(TEST_PERIOD_DURATION_US, clippedTimeline.getWindow(0, window).getDurationUs());
-    assertEquals(TEST_PERIOD_DURATION_US, clippedTimeline.getPeriod(0, period).getDurationUs());
-  }
-
-  public void testClippingUnseekableWindowThrows() {
-    Timeline timeline = new SinglePeriodTimeline(C.msToUs(TEST_PERIOD_DURATION_US), false);
-
-    // If the unseekable window isn't clipped, clipping succeeds.
-    getClippedTimeline(timeline, 0, TEST_PERIOD_DURATION_US);
-    try {
-      // If the unseekable window is clipped, clipping fails.
-      getClippedTimeline(timeline, 1, TEST_PERIOD_DURATION_US);
-      fail("Expected clipping to fail.");
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-  }
-
-  public void testClippingStart() {
-    Timeline timeline = new SinglePeriodTimeline(C.msToUs(TEST_PERIOD_DURATION_US), true);
-
-    Timeline clippedTimeline = getClippedTimeline(timeline, TEST_CLIP_AMOUNT_US,
-        TEST_PERIOD_DURATION_US);
-    assertEquals(TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US,
-        clippedTimeline.getWindow(0, window).getDurationUs());
-    assertEquals(TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US,
-        clippedTimeline.getPeriod(0, period).getDurationUs());
-  }
-
-  public void testClippingEnd() {
-    Timeline timeline = new SinglePeriodTimeline(C.msToUs(TEST_PERIOD_DURATION_US), true);
-
-    Timeline clippedTimeline = getClippedTimeline(timeline, 0,
-        TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US);
-    assertEquals(TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US,
-        clippedTimeline.getWindow(0, window).getDurationUs());
-    assertEquals(TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US,
-        clippedTimeline.getPeriod(0, period).getDurationUs());
-  }
-
-  public void testClippingStartAndEnd() {
-    Timeline timeline = new SinglePeriodTimeline(C.msToUs(TEST_PERIOD_DURATION_US), true);
-
-    Timeline clippedTimeline = getClippedTimeline(timeline, TEST_CLIP_AMOUNT_US,
-        TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US * 2);
-    assertEquals(TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US * 3,
-        clippedTimeline.getWindow(0, window).getDurationUs());
-    assertEquals(TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US * 3,
-        clippedTimeline.getPeriod(0, period).getDurationUs());
-  }
-
-  public void testWindowAndPeriodIndices() {
-    Timeline timeline = new FakeTimeline(
-        new TimelineWindowDefinition(1, 111, true, false, TEST_PERIOD_DURATION_US));
-    Timeline clippedTimeline = getClippedTimeline(timeline, TEST_CLIP_AMOUNT_US,
-        TEST_PERIOD_DURATION_US - TEST_CLIP_AMOUNT_US);
-    TimelineAsserts.assertWindowIds(clippedTimeline, 111);
-    TimelineAsserts.assertPeriodCounts(clippedTimeline, 1);
-    TimelineAsserts.assertPreviousWindowIndices(
-        clippedTimeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertPreviousWindowIndices(clippedTimeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertPreviousWindowIndices(clippedTimeline, Player.REPEAT_MODE_ALL, 0);
-    TimelineAsserts.assertNextWindowIndices(clippedTimeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(clippedTimeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertNextWindowIndices(clippedTimeline, Player.REPEAT_MODE_ALL, 0);
-  }
-
-  /**
-   * Wraps the specified timeline in a {@link ClippingMediaSource} and returns the clipped timeline.
-   */
-  private static Timeline getClippedTimeline(Timeline timeline, long startMs, long endMs) {
-    MediaSource mediaSource = new FakeMediaSource(timeline, null);
-    return TestUtil.extractTimelineFromMediaSource(
-        new ClippingMediaSource(mediaSource, startMs, endMs));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/ConcatenatingMediaSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/source/ConcatenatingMediaSourceTest.java
deleted file mode 100644
index 3bf89f9bcc..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/ConcatenatingMediaSourceTest.java
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.testutil.FakeMediaSource;
-import com.google.android.exoplayer2.testutil.FakeTimeline;
-import com.google.android.exoplayer2.testutil.FakeTimeline.TimelineWindowDefinition;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.testutil.TimelineAsserts;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link ConcatenatingMediaSource}.
- */
-public final class ConcatenatingMediaSourceTest extends TestCase {
-
-  public void testSingleMediaSource() {
-    Timeline timeline = getConcatenatedTimeline(false, createFakeTimeline(3, 111));
-    TimelineAsserts.assertWindowIds(timeline, 111);
-    TimelineAsserts.assertPeriodCounts(timeline, 3);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-
-    timeline = getConcatenatedTimeline(true, createFakeTimeline(3, 111));
-    TimelineAsserts.assertWindowIds(timeline, 111);
-    TimelineAsserts.assertPeriodCounts(timeline, 3);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 0);
-  }
-
-  public void testMultipleMediaSources() {
-    Timeline[] timelines = { createFakeTimeline(3, 111), createFakeTimeline(1, 222),
-        createFakeTimeline(3, 333) };
-    Timeline timeline = getConcatenatedTimeline(false, timelines);
-    TimelineAsserts.assertWindowIds(timeline, 111, 222, 333);
-    TimelineAsserts.assertPeriodCounts(timeline, 3, 1, 3);
-    TimelineAsserts.assertPreviousWindowIndices(
-        timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET, 0, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 2, 0, 1);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, 1, 2, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 1, 2, 0);
-
-    timeline = getConcatenatedTimeline(true, timelines);
-    TimelineAsserts.assertWindowIds(timeline, 111, 222, 333);
-    TimelineAsserts.assertPeriodCounts(timeline, 3, 1, 3);
-    TimelineAsserts.assertPreviousWindowIndices(
-        timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET, 0, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 2, 0, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 2, 0, 1);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, 1, 2, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 1, 2, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 1, 2, 0);
-  }
-
-  public void testNestedMediaSources() {
-    Timeline timeline = getConcatenatedTimeline(false,
-        getConcatenatedTimeline(false, createFakeTimeline(1, 111), createFakeTimeline(1, 222)),
-        getConcatenatedTimeline(true, createFakeTimeline(1, 333), createFakeTimeline(1, 444)));
-    TimelineAsserts.assertWindowIds(timeline, 111, 222, 333, 444);
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 1, 1, 1);
-    TimelineAsserts.assertPreviousWindowIndices(
-        timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET, 0, 1, 2);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 3, 2);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 3, 0, 1, 2);
-    TimelineAsserts.assertNextWindowIndices(
-        timeline, Player.REPEAT_MODE_OFF, 1, 2, 3, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 3, 2);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 1, 2, 3, 0);
-  }
-
-  /**
-   * Wraps the specified timelines in a {@link ConcatenatingMediaSource} and returns
-   * the concatenated timeline.
-   */
-  private static Timeline getConcatenatedTimeline(boolean isRepeatOneAtomic,
-      Timeline... timelines) {
-    MediaSource[] mediaSources = new MediaSource[timelines.length];
-    for (int i = 0; i < timelines.length; i++) {
-      mediaSources[i] = new FakeMediaSource(timelines[i], null);
-    }
-    return TestUtil.extractTimelineFromMediaSource(
-        new ConcatenatingMediaSource(isRepeatOneAtomic, mediaSources));
-  }
-
-  private static FakeTimeline createFakeTimeline(int periodCount, int windowId) {
-    return new FakeTimeline(new TimelineWindowDefinition(periodCount, windowId));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/DynamicConcatenatingMediaSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/source/DynamicConcatenatingMediaSourceTest.java
deleted file mode 100644
index f8636b9990..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/DynamicConcatenatingMediaSourceTest.java
+++ /dev/null
@@ -1,558 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source;
-
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.ExoPlayer;
-import com.google.android.exoplayer2.PlaybackParameters;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.source.MediaSource.Listener;
-import com.google.android.exoplayer2.testutil.FakeMediaSource;
-import com.google.android.exoplayer2.testutil.FakeTimeline;
-import com.google.android.exoplayer2.testutil.FakeTimeline.TimelineWindowDefinition;
-import com.google.android.exoplayer2.testutil.TimelineAsserts;
-import com.google.android.exoplayer2.trackselection.TrackSelectionArray;
-import com.google.android.exoplayer2.upstream.Allocator;
-import java.io.IOException;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link DynamicConcatenatingMediaSource}
- */
-public final class DynamicConcatenatingMediaSourceTest extends TestCase {
-
-  private static final int TIMEOUT_MS = 10000;
-
-  private Timeline timeline;
-  private boolean timelineUpdated;
-
-  public void testPlaylistChangesAfterPreparation() throws InterruptedException {
-    timeline = null;
-    FakeMediaSource[] childSources = createMediaSources(7);
-    DynamicConcatenatingMediaSource mediaSource = new DynamicConcatenatingMediaSource();
-    prepareAndListenToTimelineUpdates(mediaSource);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertEmpty(timeline);
-
-    // Add first source.
-    mediaSource.addMediaSource(childSources[0]);
-    waitForTimelineUpdate();
-    assertNotNull(timeline);
-    TimelineAsserts.assertPeriodCounts(timeline, 1);
-    TimelineAsserts.assertWindowIds(timeline, 111);
-
-    // Add at front of queue.
-    mediaSource.addMediaSource(0, childSources[1]);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 1);
-    TimelineAsserts.assertWindowIds(timeline, 222, 111);
-
-    // Add at back of queue.
-    mediaSource.addMediaSource(childSources[2]);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 1, 3);
-    TimelineAsserts.assertWindowIds(timeline, 222, 111, 333);
-
-    // Add in the middle.
-    mediaSource.addMediaSource(1, childSources[3]);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 4, 1, 3);
-    TimelineAsserts.assertWindowIds(timeline, 222, 444, 111, 333);
-
-    // Add bulk.
-    mediaSource.addMediaSources(3, Arrays.asList((MediaSource) childSources[4],
-        (MediaSource) childSources[5], (MediaSource) childSources[6]));
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 4, 1, 5, 6, 7, 3);
-    TimelineAsserts.assertWindowIds(timeline, 222, 444, 111, 555, 666, 777, 333);
-
-    // Move sources.
-    mediaSource.moveMediaSource(2, 3);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 4, 5, 1, 6, 7, 3);
-    TimelineAsserts.assertWindowIds(timeline, 222, 444, 555, 111, 666, 777, 333);
-    mediaSource.moveMediaSource(3, 2);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 4, 1, 5, 6, 7, 3);
-    TimelineAsserts.assertWindowIds(timeline, 222, 444, 111, 555, 666, 777, 333);
-    mediaSource.moveMediaSource(0, 6);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 4, 1, 5, 6, 7, 3, 2);
-    TimelineAsserts.assertWindowIds(timeline, 444, 111, 555, 666, 777, 333, 222);
-    mediaSource.moveMediaSource(6, 0);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 4, 1, 5, 6, 7, 3);
-    TimelineAsserts.assertWindowIds(timeline, 222, 444, 111, 555, 666, 777, 333);
-
-    // Remove in the middle.
-    mediaSource.removeMediaSource(3);
-    waitForTimelineUpdate();
-    mediaSource.removeMediaSource(3);
-    waitForTimelineUpdate();
-    mediaSource.removeMediaSource(3);
-    waitForTimelineUpdate();
-    mediaSource.removeMediaSource(1);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 2, 1, 3);
-    TimelineAsserts.assertWindowIds(timeline, 222, 111, 333);
-    for (int i = 3; i <= 6; i++) {
-      childSources[i].assertReleased();
-    }
-
-    // Assert correct next and previous indices behavior after some insertions and removals.
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, 1, 2, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 1, 2, 0);
-    TimelineAsserts.assertPreviousWindowIndices(
-        timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET, 0, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 2, 0, 1);
-
-    // Remove at front of queue.
-    mediaSource.removeMediaSource(0);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 3);
-    TimelineAsserts.assertWindowIds(timeline, 111, 333);
-    childSources[1].assertReleased();
-
-    // Remove at back of queue.
-    mediaSource.removeMediaSource(1);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 1);
-    TimelineAsserts.assertWindowIds(timeline, 111);
-    childSources[2].assertReleased();
-
-    // Remove last source.
-    mediaSource.removeMediaSource(0);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertEmpty(timeline);
-    childSources[3].assertReleased();
-  }
-
-  public void testPlaylistChangesBeforePreparation() throws InterruptedException {
-    timeline = null;
-    FakeMediaSource[] childSources = createMediaSources(4);
-    DynamicConcatenatingMediaSource mediaSource = new DynamicConcatenatingMediaSource();
-    mediaSource.addMediaSource(childSources[0]);
-    mediaSource.addMediaSource(childSources[1]);
-    mediaSource.addMediaSource(0, childSources[2]);
-    mediaSource.moveMediaSource(0, 2);
-    mediaSource.removeMediaSource(0);
-    mediaSource.moveMediaSource(1, 0);
-    mediaSource.addMediaSource(1, childSources[3]);
-    assertNull(timeline);
-
-    prepareAndListenToTimelineUpdates(mediaSource);
-    waitForTimelineUpdate();
-    assertNotNull(timeline);
-    TimelineAsserts.assertPeriodCounts(timeline, 3, 4, 2);
-    TimelineAsserts.assertWindowIds(timeline, 333, 444, 222);
-
-    mediaSource.releaseSource();
-    for (int i = 1; i < 4; i++) {
-      childSources[i].assertReleased();
-    }
-  }
-
-  public void testPlaylistWithLazyMediaSource() throws InterruptedException {
-    timeline = null;
-    FakeMediaSource[] childSources = createMediaSources(2);
-    LazyMediaSource[] lazySources = new LazyMediaSource[4];
-    for (int i = 0; i < 4; i++) {
-      lazySources[i] = new LazyMediaSource();
-    }
-
-    //Add lazy sources before preparation
-    DynamicConcatenatingMediaSource mediaSource = new DynamicConcatenatingMediaSource();
-    mediaSource.addMediaSource(lazySources[0]);
-    mediaSource.addMediaSource(0, childSources[0]);
-    mediaSource.removeMediaSource(1);
-    mediaSource.addMediaSource(1, lazySources[1]);
-    assertNull(timeline);
-    prepareAndListenToTimelineUpdates(mediaSource);
-    waitForTimelineUpdate();
-    assertNotNull(timeline);
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 1);
-    TimelineAsserts.assertWindowIds(timeline, 111, null);
-    TimelineAsserts.assertWindowIsDynamic(timeline, false, true);
-
-    lazySources[1].triggerTimelineUpdate(createFakeTimeline(8));
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 9);
-    TimelineAsserts.assertWindowIds(timeline, 111, 999);
-    TimelineAsserts.assertWindowIsDynamic(timeline, false, false);
-
-    //Add lazy sources after preparation
-    mediaSource.addMediaSource(1, lazySources[2]);
-    waitForTimelineUpdate();
-    mediaSource.addMediaSource(2, childSources[1]);
-    waitForTimelineUpdate();
-    mediaSource.addMediaSource(0, lazySources[3]);
-    waitForTimelineUpdate();
-    mediaSource.removeMediaSource(2);
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 1, 2, 9);
-    TimelineAsserts.assertWindowIds(timeline, null, 111, 222, 999);
-    TimelineAsserts.assertWindowIsDynamic(timeline, true, false, false, false);
-
-    lazySources[3].triggerTimelineUpdate(createFakeTimeline(7));
-    waitForTimelineUpdate();
-    TimelineAsserts.assertPeriodCounts(timeline, 8, 1, 2, 9);
-    TimelineAsserts.assertWindowIds(timeline, 888, 111, 222, 999);
-    TimelineAsserts.assertWindowIsDynamic(timeline, false, false, false, false);
-
-    mediaSource.releaseSource();
-    childSources[0].assertReleased();
-    childSources[1].assertReleased();
-  }
-
-  public void testIllegalArguments() {
-    DynamicConcatenatingMediaSource mediaSource = new DynamicConcatenatingMediaSource();
-    MediaSource validSource = new FakeMediaSource(createFakeTimeline(1), null);
-
-    // Null sources.
-    try {
-      mediaSource.addMediaSource(null);
-      fail("Null mediaSource not allowed.");
-    } catch (NullPointerException e) {
-      // Expected.
-    }
-
-    MediaSource[] mediaSources = { validSource, null };
-    try {
-      mediaSource.addMediaSources(Arrays.asList(mediaSources));
-      fail("Null mediaSource not allowed.");
-    } catch (NullPointerException e) {
-      // Expected.
-    }
-
-    // Duplicate sources.
-    mediaSource.addMediaSource(validSource);
-    try {
-      mediaSource.addMediaSource(validSource);
-      fail("Duplicate mediaSource not allowed.");
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-
-    mediaSources = new MediaSource[] {
-        new FakeMediaSource(createFakeTimeline(2), null), validSource };
-    try {
-      mediaSource.addMediaSources(Arrays.asList(mediaSources));
-      fail("Duplicate mediaSource not allowed.");
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-  }
-
-  private void prepareAndListenToTimelineUpdates(MediaSource mediaSource) {
-    mediaSource.prepareSource(new StubExoPlayer(), true, new Listener() {
-      @Override
-      public void onSourceInfoRefreshed(Timeline newTimeline, Object manifest) {
-        timeline = newTimeline;
-        synchronized (DynamicConcatenatingMediaSourceTest.this) {
-          timelineUpdated = true;
-          DynamicConcatenatingMediaSourceTest.this.notify();
-        }
-      }
-    });
-  }
-
-  private synchronized void waitForTimelineUpdate() throws InterruptedException {
-    long timeoutMs = System.currentTimeMillis() + TIMEOUT_MS;
-    while (!timelineUpdated) {
-      wait(TIMEOUT_MS);
-      if (System.currentTimeMillis() >= timeoutMs) {
-        fail("No timeline update occurred within timeout.");
-      }
-    }
-    timelineUpdated = false;
-  }
-
-  private static FakeMediaSource[] createMediaSources(int count) {
-    FakeMediaSource[] sources = new FakeMediaSource[count];
-    for (int i = 0; i < count; i++) {
-      sources[i] = new FakeMediaSource(createFakeTimeline(i), null);
-    }
-    return sources;
-  }
-
-  private static FakeTimeline createFakeTimeline(int index) {
-    return new FakeTimeline(new TimelineWindowDefinition(index + 1, (index + 1) * 111));
-  }
-
-  private static class LazyMediaSource implements MediaSource {
-
-    private Listener listener;
-
-    public void triggerTimelineUpdate(Timeline timeline) {
-      listener.onSourceInfoRefreshed(timeline, null);
-    }
-
-    @Override
-    public void prepareSource(ExoPlayer player, boolean isTopLevelSource, Listener listener) {
-      this.listener = listener;
-    }
-
-    @Override
-    public void maybeThrowSourceInfoRefreshError() throws IOException {
-    }
-
-    @Override
-    public MediaPeriod createPeriod(MediaPeriodId id, Allocator allocator) {
-      return null;
-    }
-
-    @Override
-    public void releasePeriod(MediaPeriod mediaPeriod) {
-    }
-
-    @Override
-    public void releaseSource() {
-    }
-
-  }
-
-  /**
-   * Stub ExoPlayer which only accepts custom messages and runs them on a separate handler thread.
-   */
-  private static class StubExoPlayer implements ExoPlayer, Handler.Callback {
-
-    private final Handler handler;
-
-    public StubExoPlayer() {
-      HandlerThread handlerThread = new HandlerThread("StubExoPlayerThread");
-      handlerThread.start();
-      handler = new Handler(handlerThread.getLooper(), this);
-    }
-
-    @Override
-    public Looper getPlaybackLooper() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void addListener(Player.EventListener listener) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void removeListener(Player.EventListener listener) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getPlaybackState() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void prepare(MediaSource mediaSource) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void prepare(MediaSource mediaSource, boolean resetPosition, boolean resetState) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void setPlayWhenReady(boolean playWhenReady) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public boolean getPlayWhenReady() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void setRepeatMode(@RepeatMode int repeatMode) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getRepeatMode() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public boolean isLoading() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void seekToDefaultPosition() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void seekToDefaultPosition(int windowIndex) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void seekTo(long positionMs) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void seekTo(int windowIndex, long positionMs) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void setPlaybackParameters(PlaybackParameters playbackParameters) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public PlaybackParameters getPlaybackParameters() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void stop() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void release() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public void sendMessages(ExoPlayerMessage... messages) {
-      handler.obtainMessage(0, messages).sendToTarget();
-    }
-
-    @Override
-    public void blockingSendMessages(ExoPlayerMessage... messages) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getRendererCount() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getRendererType(int index) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public TrackGroupArray getCurrentTrackGroups() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public TrackSelectionArray getCurrentTrackSelections() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public Object getCurrentManifest() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public Timeline getCurrentTimeline() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getCurrentPeriodIndex() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getCurrentWindowIndex() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public long getDuration() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public long getCurrentPosition() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public long getBufferedPosition() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getBufferedPercentage() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public boolean isCurrentWindowDynamic() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public boolean isCurrentWindowSeekable() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public boolean isPlayingAd() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getCurrentAdGroupIndex() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int getCurrentAdIndexInAdGroup() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public long getContentPosition() {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public boolean handleMessage(Message msg) {
-      ExoPlayerMessage[] messages = (ExoPlayerMessage[]) msg.obj;
-      for (ExoPlayerMessage message : messages) {
-        try {
-          message.target.handleMessage(message.messageType, message.message);
-        } catch (ExoPlaybackException e) {
-          fail("Unexpected ExoPlaybackException.");
-        }
-      }
-      return true;
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/LoopingMediaSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/source/LoopingMediaSourceTest.java
deleted file mode 100644
index d2045c29a5..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/LoopingMediaSourceTest.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Player;
-import com.google.android.exoplayer2.Timeline;
-import com.google.android.exoplayer2.testutil.FakeMediaSource;
-import com.google.android.exoplayer2.testutil.FakeTimeline;
-import com.google.android.exoplayer2.testutil.FakeTimeline.TimelineWindowDefinition;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.testutil.TimelineAsserts;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link LoopingMediaSource}.
- */
-public class LoopingMediaSourceTest extends TestCase {
-
-  private final Timeline multiWindowTimeline;
-
-  public LoopingMediaSourceTest() {
-    multiWindowTimeline = TestUtil.extractTimelineFromMediaSource(new FakeMediaSource(
-        new FakeTimeline(new TimelineWindowDefinition(1, 111),
-            new TimelineWindowDefinition(1, 222), new TimelineWindowDefinition(1, 333)), null));
-  }
-
-  public void testSingleLoop() {
-    Timeline timeline = getLoopingTimeline(multiWindowTimeline, 1);
-    TimelineAsserts.assertWindowIds(timeline, 111, 222, 333);
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 1, 1);
-    TimelineAsserts.assertPreviousWindowIndices(
-        timeline, Player.REPEAT_MODE_OFF, C.INDEX_UNSET, 0, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 2, 0, 1);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, 1, 2, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 1, 2, 0);
-  }
-
-  public void testMultiLoop() {
-    Timeline timeline = getLoopingTimeline(multiWindowTimeline, 3);
-    TimelineAsserts.assertWindowIds(timeline, 111, 222, 333, 111, 222, 333, 111, 222, 333);
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 1, 1, 1, 1, 1, 1, 1, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_OFF,
-        C.INDEX_UNSET, 0, 1, 2, 3, 4, 5, 6, 7, 8);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE,
-        0, 1, 2, 3, 4, 5, 6, 7, 8);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL,
-        8, 0, 1, 2, 3, 4, 5, 6, 7);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF,
-        1, 2, 3, 4, 5, 6, 7, 8, C.INDEX_UNSET);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE,
-        0, 1, 2, 3, 4, 5, 6, 7, 8);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL,
-        1, 2, 3, 4, 5, 6, 7, 8, 0);
-  }
-
-  public void testInfiniteLoop() {
-    Timeline timeline = getLoopingTimeline(multiWindowTimeline, Integer.MAX_VALUE);
-    TimelineAsserts.assertWindowIds(timeline, 111, 222, 333);
-    TimelineAsserts.assertPeriodCounts(timeline, 1, 1, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_OFF, 2, 0, 1);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertPreviousWindowIndices(timeline, Player.REPEAT_MODE_ALL, 2, 0, 1);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_OFF, 1, 2, 0);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ONE, 0, 1, 2);
-    TimelineAsserts.assertNextWindowIndices(timeline, Player.REPEAT_MODE_ALL, 1, 2, 0);
-  }
-
-  /**
-   * Wraps the specified timeline in a {@link LoopingMediaSource} and returns
-   * the looping timeline.
-   */
-  private static Timeline getLoopingTimeline(Timeline timeline, int loopCount) {
-    MediaSource mediaSource = new FakeMediaSource(timeline, null);
-    return TestUtil.extractTimelineFromMediaSource(
-        new LoopingMediaSource(mediaSource, loopCount));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/SampleQueueTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/source/SampleQueueTest.java
deleted file mode 100644
index 76ea0e34cf..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/source/SampleQueueTest.java
+++ /dev/null
@@ -1,688 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source;
-
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.FormatHolder;
-import com.google.android.exoplayer2.decoder.DecoderInputBuffer;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.upstream.Allocator;
-import com.google.android.exoplayer2.upstream.DefaultAllocator;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link SampleQueue}.
- */
-public class SampleQueueTest extends TestCase {
-
-  private static final int ALLOCATION_SIZE = 16;
-
-  private static final Format TEST_FORMAT_1 = Format.createSampleFormat("1", "mimeType", 0);
-  private static final Format TEST_FORMAT_2 = Format.createSampleFormat("2", "mimeType", 0);
-  private static final Format TEST_FORMAT_1_COPY = Format.createSampleFormat("1", "mimeType", 0);
-  private static final byte[] TEST_DATA = TestUtil.buildTestData(ALLOCATION_SIZE * 10);
-
-  /*
-   * TEST_SAMPLE_SIZES and TEST_SAMPLE_OFFSETS are intended to test various boundary cases (with
-   * respect to the allocation size). TEST_SAMPLE_OFFSETS values are defined as the backward offsets
-   * (as expected by SampleQueue.sampleMetadata) assuming that TEST_DATA has been written to the
-   * sampleQueue in full. The allocations are filled as follows, where | indicates a boundary
-   * between allocations and x indicates a byte that doesn't belong to a sample:
-   *
-   * x<s1>|x<s2>x|x<s3>|<s4>x|<s5>|<s6|s6>|x<s7|s7>x|<s8>
-   */
-  private static final int[] TEST_SAMPLE_SIZES = new int[] {
-      ALLOCATION_SIZE - 1, ALLOCATION_SIZE - 2, ALLOCATION_SIZE - 1, ALLOCATION_SIZE - 1,
-      ALLOCATION_SIZE, ALLOCATION_SIZE * 2, ALLOCATION_SIZE * 2 - 2, ALLOCATION_SIZE
-  };
-  private static final int[] TEST_SAMPLE_OFFSETS = new int[] {
-      ALLOCATION_SIZE * 9, ALLOCATION_SIZE * 8 + 1, ALLOCATION_SIZE * 7, ALLOCATION_SIZE * 6 + 1,
-      ALLOCATION_SIZE * 5, ALLOCATION_SIZE * 3, ALLOCATION_SIZE + 1, 0
-  };
-  private static final long[] TEST_SAMPLE_TIMESTAMPS = new long[] {
-      0, 1000, 2000, 3000, 4000, 5000, 6000, 7000
-  };
-  private static final long LAST_SAMPLE_TIMESTAMP =
-      TEST_SAMPLE_TIMESTAMPS[TEST_SAMPLE_TIMESTAMPS.length - 1];
-  private static final int[] TEST_SAMPLE_FLAGS = new int[] {
-      C.BUFFER_FLAG_KEY_FRAME, 0, 0, 0, C.BUFFER_FLAG_KEY_FRAME, 0, 0, 0
-  };
-  private static final Format[] TEST_SAMPLE_FORMATS = new Format[] {
-      TEST_FORMAT_1, TEST_FORMAT_1, TEST_FORMAT_1, TEST_FORMAT_1, TEST_FORMAT_2, TEST_FORMAT_2,
-      TEST_FORMAT_2, TEST_FORMAT_2
-  };
-  private static final int TEST_DATA_SECOND_KEYFRAME_INDEX = 4;
-
-  private Allocator allocator;
-  private SampleQueue sampleQueue;
-  private FormatHolder formatHolder;
-  private DecoderInputBuffer inputBuffer;
-
-  @Override
-  public void setUp() throws Exception {
-    super.setUp();
-    allocator = new DefaultAllocator(false, ALLOCATION_SIZE);
-    sampleQueue = new SampleQueue(allocator);
-    formatHolder = new FormatHolder();
-    inputBuffer = new DecoderInputBuffer(DecoderInputBuffer.BUFFER_REPLACEMENT_MODE_NORMAL);
-  }
-
-  @Override
-  public void tearDown() throws Exception {
-    super.tearDown();
-    allocator = null;
-    sampleQueue = null;
-    formatHolder = null;
-    inputBuffer = null;
-  }
-
-  public void testResetReleasesAllocations() {
-    writeTestData();
-    assertAllocationCount(10);
-    sampleQueue.reset();
-    assertAllocationCount(0);
-  }
-
-  public void testReadWithoutWrite() {
-    assertNoSamplesToRead(null);
-  }
-
-  public void testReadFormatDeduplicated() {
-    sampleQueue.format(TEST_FORMAT_1);
-    assertReadFormat(false, TEST_FORMAT_1);
-    // If the same format is input then it should be de-duplicated (i.e. not output again).
-    sampleQueue.format(TEST_FORMAT_1);
-    assertNoSamplesToRead(TEST_FORMAT_1);
-    // The same applies for a format that's equal (but a different object).
-    sampleQueue.format(TEST_FORMAT_1_COPY);
-    assertNoSamplesToRead(TEST_FORMAT_1);
-  }
-
-  public void testReadSingleSamples() {
-    sampleQueue.sampleData(new ParsableByteArray(TEST_DATA), ALLOCATION_SIZE);
-
-    assertAllocationCount(1);
-    // Nothing to read.
-    assertNoSamplesToRead(null);
-
-    sampleQueue.format(TEST_FORMAT_1);
-
-    // Read the format.
-    assertReadFormat(false, TEST_FORMAT_1);
-    // Nothing to read.
-    assertNoSamplesToRead(TEST_FORMAT_1);
-
-    sampleQueue.sampleMetadata(1000, C.BUFFER_FLAG_KEY_FRAME, ALLOCATION_SIZE, 0, null);
-
-    // If formatRequired, should read the format rather than the sample.
-    assertReadFormat(true, TEST_FORMAT_1);
-    // Otherwise should read the sample.
-    assertSampleRead(1000, true, TEST_DATA, 0, ALLOCATION_SIZE);
-    // Allocation should still be held.
-    assertAllocationCount(1);
-    sampleQueue.discardToRead();
-    // The allocation should have been released.
-    assertAllocationCount(0);
-
-    // Nothing to read.
-    assertNoSamplesToRead(TEST_FORMAT_1);
-
-    // Write a second sample followed by one byte that does not belong to it.
-    sampleQueue.sampleData(new ParsableByteArray(TEST_DATA), ALLOCATION_SIZE);
-    sampleQueue.sampleMetadata(2000, 0, ALLOCATION_SIZE - 1, 1, null);
-
-    // If formatRequired, should read the format rather than the sample.
-    assertReadFormat(true, TEST_FORMAT_1);
-    // Read the sample.
-    assertSampleRead(2000, false, TEST_DATA, 0, ALLOCATION_SIZE - 1);
-    // Allocation should still be held.
-    assertAllocationCount(1);
-    sampleQueue.discardToRead();
-    // The last byte written to the sample queue may belong to a sample whose metadata has yet to be
-    // written, so an allocation should still be held.
-    assertAllocationCount(1);
-
-    // Write metadata for a third sample containing the remaining byte.
-    sampleQueue.sampleMetadata(3000, 0, 1, 0, null);
-
-    // If formatRequired, should read the format rather than the sample.
-    assertReadFormat(true, TEST_FORMAT_1);
-    // Read the sample.
-    assertSampleRead(3000, false, TEST_DATA, ALLOCATION_SIZE - 1, 1);
-    // Allocation should still be held.
-    assertAllocationCount(1);
-    sampleQueue.discardToRead();
-    // The allocation should have been released.
-    assertAllocationCount(0);
-  }
-
-  public void testReadMultiSamples() {
-    writeTestData();
-    assertEquals(LAST_SAMPLE_TIMESTAMP, sampleQueue.getLargestQueuedTimestampUs());
-    assertAllocationCount(10);
-    assertReadTestData();
-    assertAllocationCount(10);
-    sampleQueue.discardToRead();
-    assertAllocationCount(0);
-  }
-
-  public void testReadMultiSamplesTwice() {
-    writeTestData();
-    writeTestData();
-    assertAllocationCount(20);
-    assertReadTestData(TEST_FORMAT_2);
-    assertReadTestData(TEST_FORMAT_2);
-    assertAllocationCount(20);
-    sampleQueue.discardToRead();
-    assertAllocationCount(0);
-  }
-
-  public void testReadMultiWithRewind() {
-    writeTestData();
-    assertReadTestData();
-    assertEquals(8, sampleQueue.getReadIndex());
-    assertAllocationCount(10);
-    // Rewind.
-    sampleQueue.rewind();
-    assertAllocationCount(10);
-    // Read again.
-    assertEquals(0, sampleQueue.getReadIndex());
-    assertReadTestData();
-  }
-
-  public void testRewindAfterDiscard() {
-    writeTestData();
-    assertReadTestData();
-    sampleQueue.discardToRead();
-    assertAllocationCount(0);
-    // Rewind.
-    sampleQueue.rewind();
-    assertAllocationCount(0);
-    // Can't read again.
-    assertEquals(8, sampleQueue.getReadIndex());
-    assertReadEndOfStream(false);
-  }
-
-  public void testAdvanceToEnd() {
-    writeTestData();
-    sampleQueue.advanceToEnd();
-    assertAllocationCount(10);
-    sampleQueue.discardToRead();
-    assertAllocationCount(0);
-    // Despite skipping all samples, we should still read the last format, since this is the
-    // expected format for a subsequent sample.
-    assertReadFormat(false, TEST_FORMAT_2);
-    // Once the format has been read, there's nothing else to read.
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testAdvanceToEndRetainsUnassignedData() {
-    sampleQueue.format(TEST_FORMAT_1);
-    sampleQueue.sampleData(new ParsableByteArray(TEST_DATA), ALLOCATION_SIZE);
-    sampleQueue.advanceToEnd();
-    assertAllocationCount(1);
-    sampleQueue.discardToRead();
-    // Skipping shouldn't discard data that may belong to a sample whose metadata has yet to be
-    // written.
-    assertAllocationCount(1);
-    // We should be able to read the format.
-    assertReadFormat(false, TEST_FORMAT_1);
-    // Once the format has been read, there's nothing else to read.
-    assertNoSamplesToRead(TEST_FORMAT_1);
-
-    sampleQueue.sampleMetadata(0, C.BUFFER_FLAG_KEY_FRAME, ALLOCATION_SIZE, 0, null);
-    // Once the metadata has been written, check the sample can be read as expected.
-    assertSampleRead(0, true, TEST_DATA, 0, ALLOCATION_SIZE);
-    assertNoSamplesToRead(TEST_FORMAT_1);
-    assertAllocationCount(1);
-    sampleQueue.discardToRead();
-    assertAllocationCount(0);
-  }
-
-  public void testAdvanceToBeforeBuffer() {
-    writeTestData();
-    boolean result = sampleQueue.advanceTo(TEST_SAMPLE_TIMESTAMPS[0] - 1, true, false);
-    // Should fail and have no effect.
-    assertFalse(result);
-    assertReadTestData();
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testAdvanceToStartOfBuffer() {
-    writeTestData();
-    boolean result = sampleQueue.advanceTo(TEST_SAMPLE_TIMESTAMPS[0], true, false);
-    // Should succeed but have no effect (we're already at the first frame).
-    assertTrue(result);
-    assertReadTestData();
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testAdvanceToEndOfBuffer() {
-    writeTestData();
-    boolean result = sampleQueue.advanceTo(LAST_SAMPLE_TIMESTAMP, true, false);
-    // Should succeed and skip to 2nd keyframe.
-    assertTrue(result);
-    assertReadTestData(null, TEST_DATA_SECOND_KEYFRAME_INDEX);
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testAdvanceToAfterBuffer() {
-    writeTestData();
-    boolean result = sampleQueue.advanceTo(LAST_SAMPLE_TIMESTAMP + 1, true, false);
-    // Should fail and have no effect.
-    assertFalse(result);
-    assertReadTestData();
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testAdvanceToAfterBufferAllowed() {
-    writeTestData();
-    boolean result = sampleQueue.advanceTo(LAST_SAMPLE_TIMESTAMP + 1, true, true);
-    // Should succeed and skip to 2nd keyframe.
-    assertTrue(result);
-    assertReadTestData(null, TEST_DATA_SECOND_KEYFRAME_INDEX);
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testDiscardToEnd() {
-    writeTestData();
-    // Should discard everything.
-    sampleQueue.discardToEnd();
-    assertEquals(8, sampleQueue.getReadIndex());
-    assertAllocationCount(0);
-    // We should still be able to read the upstream format.
-    assertReadFormat(false, TEST_FORMAT_2);
-    // We should be able to write and read subsequent samples.
-    writeTestData();
-    assertReadTestData(TEST_FORMAT_2);
-  }
-
-  public void testDiscardToStopAtReadPosition() {
-    writeTestData();
-    // Shouldn't discard anything.
-    sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP, false, true);
-    assertEquals(0, sampleQueue.getReadIndex());
-    assertAllocationCount(10);
-    // Read the first sample.
-    assertReadTestData(null, 0, 1);
-    // Shouldn't discard anything.
-    sampleQueue.discardTo(TEST_SAMPLE_TIMESTAMPS[1] - 1, false, true);
-    assertEquals(1, sampleQueue.getReadIndex());
-    assertAllocationCount(10);
-    // Should discard the read sample.
-    sampleQueue.discardTo(TEST_SAMPLE_TIMESTAMPS[1], false, true);
-    assertAllocationCount(9);
-    // Shouldn't discard anything.
-    sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP, false, true);
-    assertAllocationCount(9);
-    // Should be able to read the remaining samples.
-    assertReadTestData(TEST_FORMAT_1, 1, 7);
-    assertEquals(8, sampleQueue.getReadIndex());
-    // Should discard up to the second last sample
-    sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP - 1, false, true);
-    assertAllocationCount(3);
-    // Should discard up the last sample
-    sampleQueue.discardTo(LAST_SAMPLE_TIMESTAMP, false, true);
-    assertAllocationCount(1);
-  }
-
-  public void testDiscardToDontStopAtReadPosition() {
-    writeTestData();
-    // Shouldn't discard anything.
-    sampleQueue.discardTo(TEST_SAMPLE_TIMESTAMPS[1] - 1, false, false);
-    assertEquals(0, sampleQueue.getReadIndex());
-    assertAllocationCount(10);
-    // Should discard the first sample.
-    sampleQueue.discardTo(TEST_SAMPLE_TIMESTAMPS[1], false, false);
-    assertEquals(1, sampleQueue.getReadIndex());
-    assertAllocationCount(9);
-    // Should be able to read the remaining samples.
-    assertReadTestData(TEST_FORMAT_1, 1, 7);
-  }
-
-  public void testDiscardUpstream() {
-    writeTestData();
-    sampleQueue.discardUpstreamSamples(8);
-    assertAllocationCount(10);
-    sampleQueue.discardUpstreamSamples(7);
-    assertAllocationCount(9);
-    sampleQueue.discardUpstreamSamples(6);
-    assertAllocationCount(7);
-    sampleQueue.discardUpstreamSamples(5);
-    assertAllocationCount(5);
-    sampleQueue.discardUpstreamSamples(4);
-    assertAllocationCount(4);
-    sampleQueue.discardUpstreamSamples(3);
-    assertAllocationCount(3);
-    sampleQueue.discardUpstreamSamples(2);
-    assertAllocationCount(2);
-    sampleQueue.discardUpstreamSamples(1);
-    assertAllocationCount(1);
-    sampleQueue.discardUpstreamSamples(0);
-    assertAllocationCount(0);
-    assertReadFormat(false, TEST_FORMAT_2);
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testDiscardUpstreamMulti() {
-    writeTestData();
-    sampleQueue.discardUpstreamSamples(4);
-    assertAllocationCount(4);
-    sampleQueue.discardUpstreamSamples(0);
-    assertAllocationCount(0);
-    assertReadFormat(false, TEST_FORMAT_2);
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testDiscardUpstreamBeforeRead() {
-    writeTestData();
-    sampleQueue.discardUpstreamSamples(4);
-    assertAllocationCount(4);
-    assertReadTestData(null, 0, 4);
-    assertReadFormat(false, TEST_FORMAT_2);
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testDiscardUpstreamAfterRead() {
-    writeTestData();
-    assertReadTestData(null, 0, 3);
-    sampleQueue.discardUpstreamSamples(8);
-    assertAllocationCount(10);
-    sampleQueue.discardToRead();
-    assertAllocationCount(7);
-    sampleQueue.discardUpstreamSamples(7);
-    assertAllocationCount(6);
-    sampleQueue.discardUpstreamSamples(6);
-    assertAllocationCount(4);
-    sampleQueue.discardUpstreamSamples(5);
-    assertAllocationCount(2);
-    sampleQueue.discardUpstreamSamples(4);
-    assertAllocationCount(1);
-    sampleQueue.discardUpstreamSamples(3);
-    assertAllocationCount(0);
-    assertReadFormat(false, TEST_FORMAT_2);
-    assertNoSamplesToRead(TEST_FORMAT_2);
-  }
-
-  public void testLargestQueuedTimestampWithDiscardUpstream() {
-    writeTestData();
-    assertEquals(LAST_SAMPLE_TIMESTAMP, sampleQueue.getLargestQueuedTimestampUs());
-    sampleQueue.discardUpstreamSamples(TEST_SAMPLE_TIMESTAMPS.length - 1);
-    // Discarding from upstream should reduce the largest timestamp.
-    assertEquals(TEST_SAMPLE_TIMESTAMPS[TEST_SAMPLE_TIMESTAMPS.length - 2],
-        sampleQueue.getLargestQueuedTimestampUs());
-    sampleQueue.discardUpstreamSamples(0);
-    // Discarding everything from upstream without reading should unset the largest timestamp.
-    assertEquals(Long.MIN_VALUE, sampleQueue.getLargestQueuedTimestampUs());
-  }
-
-  public void testLargestQueuedTimestampWithDiscardUpstreamDecodeOrder() {
-    long[] decodeOrderTimestamps = new long[] {0, 3000, 2000, 1000, 4000, 7000, 6000, 5000};
-    writeTestData(TEST_DATA, TEST_SAMPLE_SIZES, TEST_SAMPLE_OFFSETS, decodeOrderTimestamps,
-        TEST_SAMPLE_FORMATS, TEST_SAMPLE_FLAGS);
-    assertEquals(7000, sampleQueue.getLargestQueuedTimestampUs());
-    sampleQueue.discardUpstreamSamples(TEST_SAMPLE_TIMESTAMPS.length - 2);
-    // Discarding the last two samples should not change the largest timestamp, due to the decode
-    // ordering of the timestamps.
-    assertEquals(7000, sampleQueue.getLargestQueuedTimestampUs());
-    sampleQueue.discardUpstreamSamples(TEST_SAMPLE_TIMESTAMPS.length - 3);
-    // Once a third sample is discarded, the largest timestamp should have changed.
-    assertEquals(4000, sampleQueue.getLargestQueuedTimestampUs());
-    sampleQueue.discardUpstreamSamples(0);
-    // Discarding everything from upstream without reading should unset the largest timestamp.
-    assertEquals(Long.MIN_VALUE, sampleQueue.getLargestQueuedTimestampUs());
-  }
-
-  public void testLargestQueuedTimestampWithRead() {
-    writeTestData();
-    assertEquals(LAST_SAMPLE_TIMESTAMP, sampleQueue.getLargestQueuedTimestampUs());
-    assertReadTestData();
-    // Reading everything should not reduce the largest timestamp.
-    assertEquals(LAST_SAMPLE_TIMESTAMP, sampleQueue.getLargestQueuedTimestampUs());
-  }
-
-  // Internal methods.
-
-  /**
-   * Writes standard test data to {@code sampleQueue}.
-   */
-  @SuppressWarnings("ReferenceEquality")
-  private void writeTestData() {
-    writeTestData(TEST_DATA, TEST_SAMPLE_SIZES, TEST_SAMPLE_OFFSETS, TEST_SAMPLE_TIMESTAMPS,
-        TEST_SAMPLE_FORMATS, TEST_SAMPLE_FLAGS);
-  }
-
-  /**
-   * Writes the specified test data to {@code sampleQueue}.
-   *
-   *
-   */
-  @SuppressWarnings("ReferenceEquality")
-  private void writeTestData(byte[] data, int[] sampleSizes, int[] sampleOffsets,
-      long[] sampleTimestamps, Format[] sampleFormats, int[] sampleFlags) {
-    sampleQueue.sampleData(new ParsableByteArray(data), data.length);
-    Format format = null;
-    for (int i = 0; i < sampleTimestamps.length; i++) {
-      if (sampleFormats[i] != format) {
-        sampleQueue.format(sampleFormats[i]);
-        format = sampleFormats[i];
-      }
-      sampleQueue.sampleMetadata(sampleTimestamps[i], sampleFlags[i], sampleSizes[i],
-          sampleOffsets[i], null);
-    }
-  }
-
-  /**
-   * Asserts correct reading of standard test data from {@code sampleQueue}.
-   */
-  private void assertReadTestData() {
-    assertReadTestData(null, 0);
-  }
-
-  /**
-   * Asserts correct reading of standard test data from {@code sampleQueue}.
-   *
-   * @param startFormat The format of the last sample previously read from {@code sampleQueue}.
-   */
-  private void assertReadTestData(Format startFormat) {
-    assertReadTestData(startFormat, 0);
-  }
-
-  /**
-   * Asserts correct reading of standard test data from {@code sampleQueue}.
-   *
-   * @param startFormat The format of the last sample previously read from {@code sampleQueue}.
-   * @param firstSampleIndex The index of the first sample that's expected to be read.
-   */
-  private void assertReadTestData(Format startFormat, int firstSampleIndex) {
-    assertReadTestData(startFormat, firstSampleIndex,
-        TEST_SAMPLE_TIMESTAMPS.length - firstSampleIndex);
-  }
-
-  /**
-   * Asserts correct reading of standard test data from {@code sampleQueue}.
-   *
-   * @param startFormat The format of the last sample previously read from {@code sampleQueue}.
-   * @param firstSampleIndex The index of the first sample that's expected to be read.
-   * @param sampleCount The number of samples to read.
-   */
-  private void assertReadTestData(Format startFormat, int firstSampleIndex, int sampleCount) {
-    Format format = startFormat;
-    for (int i = firstSampleIndex; i < firstSampleIndex + sampleCount; i++) {
-      // Use equals() on the read side despite using referential equality on the write side, since
-      // sampleQueue de-duplicates written formats using equals().
-      if (!TEST_SAMPLE_FORMATS[i].equals(format)) {
-        // If the format has changed, we should read it.
-        assertReadFormat(false, TEST_SAMPLE_FORMATS[i]);
-        format = TEST_SAMPLE_FORMATS[i];
-      }
-      // If we require the format, we should always read it.
-      assertReadFormat(true, TEST_SAMPLE_FORMATS[i]);
-      // Assert the sample is as expected.
-      assertSampleRead(TEST_SAMPLE_TIMESTAMPS[i],
-          (TEST_SAMPLE_FLAGS[i] & C.BUFFER_FLAG_KEY_FRAME) != 0,
-          TEST_DATA,
-          TEST_DATA.length - TEST_SAMPLE_OFFSETS[i] - TEST_SAMPLE_SIZES[i],
-          TEST_SAMPLE_SIZES[i]);
-    }
-  }
-
-  /**
-   * Asserts {@link SampleQueue#read} is behaving correctly, given there are no samples to read and
-   * the last format to be written to the sample queue is {@code endFormat}.
-   *
-   * @param endFormat The last format to be written to the sample queue, or null of no format has
-   *     been written.
-   */
-  private void assertNoSamplesToRead(Format endFormat) {
-    // If not formatRequired or loadingFinished, should read nothing.
-    assertReadNothing(false);
-    // If formatRequired, should read the end format if set, else read nothing.
-    if (endFormat == null) {
-      assertReadNothing(true);
-    } else {
-      assertReadFormat(true, endFormat);
-    }
-    // If loadingFinished, should read end of stream.
-    assertReadEndOfStream(false);
-    assertReadEndOfStream(true);
-    // Having read end of stream should not affect other cases.
-    assertReadNothing(false);
-    if (endFormat == null) {
-      assertReadNothing(true);
-    } else {
-      assertReadFormat(true, endFormat);
-    }
-  }
-
-  /**
-   * Asserts {@link SampleQueue#read} returns {@link C#RESULT_NOTHING_READ}.
-   *
-   * @param formatRequired The value of {@code formatRequired} passed to readData.
-   */
-  private void assertReadNothing(boolean formatRequired) {
-    clearFormatHolderAndInputBuffer();
-    int result = sampleQueue.read(formatHolder, inputBuffer, formatRequired, false, 0);
-    assertEquals(C.RESULT_NOTHING_READ, result);
-    // formatHolder should not be populated.
-    assertNull(formatHolder.format);
-    // inputBuffer should not be populated.
-    assertInputBufferContainsNoSampleData();
-    assertInputBufferHasNoDefaultFlagsSet();
-  }
-
-  /**
-   * Asserts {@link SampleQueue#read} returns {@link C#RESULT_BUFFER_READ} and that the
-   * {@link DecoderInputBuffer#isEndOfStream()} is set.
-   *
-   * @param formatRequired The value of {@code formatRequired} passed to readData.
-   */
-  private void assertReadEndOfStream(boolean formatRequired) {
-    clearFormatHolderAndInputBuffer();
-    int result = sampleQueue.read(formatHolder, inputBuffer, formatRequired, true, 0);
-    assertEquals(C.RESULT_BUFFER_READ, result);
-    // formatHolder should not be populated.
-    assertNull(formatHolder.format);
-    // inputBuffer should not contain sample data, but end of stream flag should be set.
-    assertInputBufferContainsNoSampleData();
-    assertTrue(inputBuffer.isEndOfStream());
-    assertFalse(inputBuffer.isDecodeOnly());
-    assertFalse(inputBuffer.isEncrypted());
-  }
-
-  /**
-   * Asserts {@link SampleQueue#read} returns {@link C#RESULT_FORMAT_READ} and that the format
-   * holder is filled with a {@link Format} that equals {@code format}.
-   *
-   * @param formatRequired The value of {@code formatRequired} passed to readData.
-   * @param format The expected format.
-   */
-  private void assertReadFormat(boolean formatRequired, Format format) {
-    clearFormatHolderAndInputBuffer();
-    int result = sampleQueue.read(formatHolder, inputBuffer, formatRequired, false, 0);
-    assertEquals(C.RESULT_FORMAT_READ, result);
-    // formatHolder should be populated.
-    assertEquals(format, formatHolder.format);
-    // inputBuffer should not be populated.
-    assertInputBufferContainsNoSampleData();
-    assertInputBufferHasNoDefaultFlagsSet();
-  }
-
-  /**
-   * Asserts {@link SampleQueue#read} returns {@link C#RESULT_BUFFER_READ} and that the buffer is
-   * filled with the specified sample data.
-   *
-   * @param timeUs The expected buffer timestamp.
-   * @param isKeyframe The expected keyframe flag.
-   * @param sampleData An array containing the expected sample data.
-   * @param offset The offset in {@code sampleData} of the expected sample data.
-   * @param length The length of the expected sample data.
-   */
-  private void assertSampleRead(long timeUs, boolean isKeyframe, byte[] sampleData, int offset,
-      int length) {
-    clearFormatHolderAndInputBuffer();
-    int result = sampleQueue.read(formatHolder, inputBuffer, false, false, 0);
-    assertEquals(C.RESULT_BUFFER_READ, result);
-    // formatHolder should not be populated.
-    assertNull(formatHolder.format);
-    // inputBuffer should be populated.
-    assertEquals(timeUs, inputBuffer.timeUs);
-    assertEquals(isKeyframe, inputBuffer.isKeyFrame());
-    assertFalse(inputBuffer.isDecodeOnly());
-    assertFalse(inputBuffer.isEncrypted());
-    inputBuffer.flip();
-    assertEquals(length, inputBuffer.data.limit());
-    byte[] readData = new byte[length];
-    inputBuffer.data.get(readData);
-    MoreAsserts.assertEquals(Arrays.copyOfRange(sampleData, offset, offset + length), readData);
-  }
-
-  /**
-   * Asserts the number of allocations currently in use by {@code sampleQueue}.
-   *
-   * @param count The expected number of allocations.
-   */
-  private void assertAllocationCount(int count) {
-    assertEquals(ALLOCATION_SIZE * count, allocator.getTotalBytesAllocated());
-  }
-
-  /**
-   * Asserts {@code inputBuffer} does not contain any sample data.
-   */
-  private void assertInputBufferContainsNoSampleData() {
-    if (inputBuffer.data == null) {
-      return;
-    }
-    inputBuffer.flip();
-    assertEquals(0, inputBuffer.data.limit());
-  }
-
-  private void assertInputBufferHasNoDefaultFlagsSet() {
-    assertFalse(inputBuffer.isEndOfStream());
-    assertFalse(inputBuffer.isDecodeOnly());
-    assertFalse(inputBuffer.isEncrypted());
-  }
-
-  private void clearFormatHolderAndInputBuffer() {
-    formatHolder.format = null;
-    inputBuffer.clear();
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ssa/SsaDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ssa/SsaDecoderTest.java
deleted file mode 100644
index 9ed4d79307..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ssa/SsaDecoderTest.java
+++ /dev/null
@@ -1,123 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.ssa;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-import java.util.ArrayList;
-
-/**
- * Unit test for {@link SsaDecoder}.
- */
-public final class SsaDecoderTest extends InstrumentationTestCase {
-
-  private static final String EMPTY = "ssa/empty";
-  private static final String TYPICAL = "ssa/typical";
-  private static final String TYPICAL_HEADER_ONLY = "ssa/typical_header";
-  private static final String TYPICAL_DIALOGUE_ONLY = "ssa/typical_dialogue";
-  private static final String TYPICAL_FORMAT_ONLY = "ssa/typical_format";
-  private static final String INVALID_TIMECODES = "ssa/invalid_timecodes";
-  private static final String NO_END_TIMECODES = "ssa/no_end_timecodes";
-
-  public void testDecodeEmpty() throws IOException {
-    SsaDecoder decoder = new SsaDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), EMPTY);
-    SsaSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(0, subtitle.getEventTimeCount());
-    assertTrue(subtitle.getCues(0).isEmpty());
-  }
-
-  public void testDecodeTypical() throws IOException {
-    SsaDecoder decoder = new SsaDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL);
-    SsaSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(6, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue2(subtitle, 2);
-    assertTypicalCue3(subtitle, 4);
-  }
-
-  public void testDecodeTypicalWithInitializationData() throws IOException {
-    byte[] headerBytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_HEADER_ONLY);
-    byte[] formatBytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_FORMAT_ONLY);
-    ArrayList<byte[]> initializationData = new ArrayList<>();
-    initializationData.add(formatBytes);
-    initializationData.add(headerBytes);
-    SsaDecoder decoder = new SsaDecoder(initializationData);
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_DIALOGUE_ONLY);
-    SsaSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(6, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue2(subtitle, 2);
-    assertTypicalCue3(subtitle, 4);
-  }
-
-  public void testDecodeInvalidTimecodes() throws IOException {
-    // Parsing should succeed, parsing the third cue only.
-    SsaDecoder decoder = new SsaDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), INVALID_TIMECODES);
-    SsaSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(2, subtitle.getEventTimeCount());
-    assertTypicalCue3(subtitle, 0);
-  }
-
-  public void testDecodeNoEndTimecodes() throws IOException {
-    SsaDecoder decoder = new SsaDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), NO_END_TIMECODES);
-    SsaSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(3, subtitle.getEventTimeCount());
-
-    assertEquals(0, subtitle.getEventTime(0));
-    assertEquals("This is the first subtitle.",
-        subtitle.getCues(subtitle.getEventTime(0)).get(0).text.toString());
-
-    assertEquals(2340000, subtitle.getEventTime(1));
-    assertEquals("This is the second subtitle \nwith a newline \nand another.",
-        subtitle.getCues(subtitle.getEventTime(1)).get(0).text.toString());
-
-    assertEquals(4560000, subtitle.getEventTime(2));
-    assertEquals("This is the third subtitle, with a comma.",
-        subtitle.getCues(subtitle.getEventTime(2)).get(0).text.toString());
-  }
-
-  private static void assertTypicalCue1(SsaSubtitle subtitle, int eventIndex) {
-    assertEquals(0, subtitle.getEventTime(eventIndex));
-    assertEquals("This is the first subtitle.",
-        subtitle.getCues(subtitle.getEventTime(eventIndex)).get(0).text.toString());
-    assertEquals(1230000, subtitle.getEventTime(eventIndex + 1));
-  }
-
-  private static void assertTypicalCue2(SsaSubtitle subtitle, int eventIndex) {
-    assertEquals(2340000, subtitle.getEventTime(eventIndex));
-    assertEquals("This is the second subtitle \nwith a newline \nand another.",
-        subtitle.getCues(subtitle.getEventTime(eventIndex)).get(0).text.toString());
-    assertEquals(3450000, subtitle.getEventTime(eventIndex + 1));
-  }
-
-  private static void assertTypicalCue3(SsaSubtitle subtitle, int eventIndex) {
-    assertEquals(4560000, subtitle.getEventTime(eventIndex));
-    assertEquals("This is the third subtitle, with a comma.",
-        subtitle.getCues(subtitle.getEventTime(eventIndex)).get(0).text.toString());
-    assertEquals(8900000, subtitle.getEventTime(eventIndex + 1));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/subrip/SubripDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/subrip/SubripDecoderTest.java
deleted file mode 100644
index 744634edda..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/subrip/SubripDecoderTest.java
+++ /dev/null
@@ -1,163 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.subrip;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-
-/**
- * Unit test for {@link SubripDecoder}.
- */
-public final class SubripDecoderTest extends InstrumentationTestCase {
-
-  private static final String EMPTY_FILE = "subrip/empty";
-  private static final String TYPICAL_FILE = "subrip/typical";
-  private static final String TYPICAL_WITH_BYTE_ORDER_MARK = "subrip/typical_with_byte_order_mark";
-  private static final String TYPICAL_EXTRA_BLANK_LINE = "subrip/typical_extra_blank_line";
-  private static final String TYPICAL_MISSING_TIMECODE = "subrip/typical_missing_timecode";
-  private static final String TYPICAL_MISSING_SEQUENCE = "subrip/typical_missing_sequence";
-  private static final String TYPICAL_NEGATIVE_TIMESTAMPS = "subrip/typical_negative_timestamps";
-  private static final String TYPICAL_UNEXPECTED_END = "subrip/typical_unexpected_end";
-  private static final String NO_END_TIMECODES_FILE = "subrip/no_end_timecodes";
-
-  public void testDecodeEmpty() throws IOException {
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), EMPTY_FILE);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(0, subtitle.getEventTimeCount());
-    assertTrue(subtitle.getCues(0).isEmpty());
-  }
-
-  public void testDecodeTypical() throws IOException {
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_FILE);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(6, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue2(subtitle, 2);
-    assertTypicalCue3(subtitle, 4);
-  }
-
-  public void testDecodeTypicalWithByteOrderMark() throws IOException {
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_WITH_BYTE_ORDER_MARK);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(6, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue2(subtitle, 2);
-    assertTypicalCue3(subtitle, 4);
-  }
-
-  public void testDecodeTypicalExtraBlankLine() throws IOException {
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_EXTRA_BLANK_LINE);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(6, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue2(subtitle, 2);
-    assertTypicalCue3(subtitle, 4);
-  }
-
-  public void testDecodeTypicalMissingTimecode() throws IOException {
-    // Parsing should succeed, parsing the first and third cues only.
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_MISSING_TIMECODE);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(4, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue3(subtitle, 2);
-  }
-
-  public void testDecodeTypicalMissingSequence() throws IOException {
-    // Parsing should succeed, parsing the first and third cues only.
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_MISSING_SEQUENCE);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(4, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue3(subtitle, 2);
-  }
-
-  public void testDecodeTypicalNegativeTimestamps() throws IOException {
-    // Parsing should succeed, parsing the third cue only.
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_NEGATIVE_TIMESTAMPS);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(2, subtitle.getEventTimeCount());
-    assertTypicalCue3(subtitle, 0);
-  }
-
-  public void testDecodeTypicalUnexpectedEnd() throws IOException {
-    // Parsing should succeed, parsing the first and second cues only.
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), TYPICAL_UNEXPECTED_END);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(4, subtitle.getEventTimeCount());
-    assertTypicalCue1(subtitle, 0);
-    assertTypicalCue2(subtitle, 2);
-  }
-
-  public void testDecodeNoEndTimecodes() throws IOException {
-    SubripDecoder decoder = new SubripDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), NO_END_TIMECODES_FILE);
-    SubripSubtitle subtitle = decoder.decode(bytes, bytes.length, false);
-
-    assertEquals(3, subtitle.getEventTimeCount());
-
-    assertEquals(0, subtitle.getEventTime(0));
-    assertEquals("SubRip doesn't technically allow missing end timecodes.",
-        subtitle.getCues(subtitle.getEventTime(0)).get(0).text.toString());
-
-    assertEquals(2345000, subtitle.getEventTime(1));
-    assertEquals("We interpret it to mean that a subtitle extends to the start of the next one.",
-        subtitle.getCues(subtitle.getEventTime(1)).get(0).text.toString());
-
-    assertEquals(3456000, subtitle.getEventTime(2));
-    assertEquals("Or to the end of the media.",
-        subtitle.getCues(subtitle.getEventTime(2)).get(0).text.toString());
-  }
-
-  private static void assertTypicalCue1(SubripSubtitle subtitle, int eventIndex) {
-    assertEquals(0, subtitle.getEventTime(eventIndex));
-    assertEquals("This is the first subtitle.",
-        subtitle.getCues(subtitle.getEventTime(eventIndex)).get(0).text.toString());
-    assertEquals(1234000, subtitle.getEventTime(eventIndex + 1));
-  }
-
-  private static void assertTypicalCue2(SubripSubtitle subtitle, int eventIndex) {
-    assertEquals(2345000, subtitle.getEventTime(eventIndex));
-    assertEquals("This is the second subtitle.\nSecond subtitle with second line.",
-        subtitle.getCues(subtitle.getEventTime(eventIndex)).get(0).text.toString());
-    assertEquals(3456000, subtitle.getEventTime(eventIndex + 1));
-  }
-
-  private static void assertTypicalCue3(SubripSubtitle subtitle, int eventIndex) {
-    assertEquals(4567000, subtitle.getEventTime(eventIndex));
-    assertEquals("This is the third subtitle.",
-        subtitle.getCues(subtitle.getEventTime(eventIndex)).get(0).text.toString());
-    assertEquals(8901000, subtitle.getEventTime(eventIndex + 1));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlDecoderTest.java
deleted file mode 100644
index 492cf036b4..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlDecoderTest.java
+++ /dev/null
@@ -1,492 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.ttml;
-
-import android.test.InstrumentationTestCase;
-import android.text.Layout;
-import android.text.Spannable;
-import android.text.SpannableStringBuilder;
-import android.text.style.AbsoluteSizeSpan;
-import android.text.style.AlignmentSpan;
-import android.text.style.BackgroundColorSpan;
-import android.text.style.ForegroundColorSpan;
-import android.text.style.RelativeSizeSpan;
-import android.text.style.StrikethroughSpan;
-import android.text.style.StyleSpan;
-import android.text.style.TypefaceSpan;
-import android.text.style.UnderlineSpan;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.text.Cue;
-import com.google.android.exoplayer2.text.SubtitleDecoderException;
-import com.google.android.exoplayer2.util.ColorParser;
-import java.io.IOException;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Unit test for {@link TtmlDecoder}.
- */
-public final class TtmlDecoderTest extends InstrumentationTestCase {
-
-  private static final String INLINE_ATTRIBUTES_TTML_FILE = "ttml/inline_style_attributes.xml";
-  private static final String INHERIT_STYLE_TTML_FILE = "ttml/inherit_style.xml";
-  private static final String INHERIT_STYLE_OVERRIDE_TTML_FILE =
-      "ttml/inherit_and_override_style.xml";
-  private static final String INHERIT_GLOBAL_AND_PARENT_TTML_FILE =
-      "ttml/inherit_global_and_parent.xml";
-  private static final String INHERIT_MULTIPLE_STYLES_TTML_FILE =
-      "ttml/inherit_multiple_styles.xml";
-  private static final String CHAIN_MULTIPLE_STYLES_TTML_FILE = "ttml/chain_multiple_styles.xml";
-  private static final String MULTIPLE_REGIONS_TTML_FILE = "ttml/multiple_regions.xml";
-  private static final String NO_UNDERLINE_LINETHROUGH_TTML_FILE =
-      "ttml/no_underline_linethrough.xml";
-  private static final String FONT_SIZE_TTML_FILE = "ttml/font_size.xml";
-  private static final String FONT_SIZE_MISSING_UNIT_TTML_FILE = "ttml/font_size_no_unit.xml";
-  private static final String FONT_SIZE_INVALID_TTML_FILE = "ttml/font_size_invalid.xml";
-  private static final String FONT_SIZE_EMPTY_TTML_FILE = "ttml/font_size_empty.xml";
-  private static final String FRAME_RATE_TTML_FILE = "ttml/frame_rate.xml";
-
-  public void testInlineAttributes() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INLINE_ATTRIBUTES_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    TtmlNode root = subtitle.getRoot();
-
-    TtmlNode body = queryChildrenForTag(root, TtmlNode.TAG_BODY, 0);
-    TtmlNode firstDiv = queryChildrenForTag(body, TtmlNode.TAG_DIV, 0);
-    TtmlStyle firstPStyle = queryChildrenForTag(firstDiv, TtmlNode.TAG_P, 0).style;
-    assertEquals(ColorParser.parseTtmlColor("yellow"), firstPStyle.getFontColor());
-    assertEquals(ColorParser.parseTtmlColor("blue"), firstPStyle.getBackgroundColor());
-    assertEquals("serif", firstPStyle.getFontFamily());
-    assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, firstPStyle.getStyle());
-    assertTrue(firstPStyle.isUnderline());
-  }
-
-  public void testInheritInlineAttributes() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INLINE_ATTRIBUTES_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-    assertSpans(subtitle, 20, "text 2", "sansSerif", TtmlStyle.STYLE_ITALIC,
-        0xFF00FFFF, ColorParser.parseTtmlColor("lime"), false, true, null);
-  }
-
-  /**
-   * Regression test for devices on JellyBean where some named colors are not correctly defined
-   * on framework level. Tests that <i>lime</i> resolves to <code>#FF00FF00</code> not
-   * <code>#00FF00</code>.
-   *
-   * @see <a href="https://github.com/android/platform_frameworks_base/blob/jb-mr2-release/graphics/java/android/graphics/Color.java#L414">
-   *     JellyBean Color</a>
-   *     <a href="https://github.com/android/platform_frameworks_base/blob/kitkat-mr2.2-release/graphics/java/android/graphics/Color.java#L414">
-   *     Kitkat Color</a>
-   * @throws IOException thrown if reading subtitle file fails.
-   */
-  public void testLime() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INLINE_ATTRIBUTES_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-    assertSpans(subtitle, 20, "text 2", "sansSerif", TtmlStyle.STYLE_ITALIC, 0xFF00FFFF, 0xFF00FF00,
-        false, true, null);
-  }
-
-  public void testInheritGlobalStyle() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_STYLE_TTML_FILE);
-    assertEquals(2, subtitle.getEventTimeCount());
-    assertSpans(subtitle, 10, "text 1", "serif", TtmlStyle.STYLE_BOLD_ITALIC, 0xFF0000FF,
-        0xFFFFFF00, true, false, null);
-  }
-
-  public void testInheritGlobalStyleOverriddenByInlineAttributes() throws IOException,
-      SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_STYLE_OVERRIDE_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    assertSpans(subtitle, 10, "text 1", "serif", TtmlStyle.STYLE_BOLD_ITALIC, 0xFF0000FF,
-        0xFFFFFF00, true, false, null);
-    assertSpans(subtitle, 20, "text 2", "sansSerif", TtmlStyle.STYLE_ITALIC, 0xFFFF0000, 0xFFFFFF00,
-        true, false, null);
-  }
-
-  public void testInheritGlobalAndParent() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_GLOBAL_AND_PARENT_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    assertSpans(subtitle, 10, "text 1", "sansSerif", TtmlStyle.STYLE_NORMAL, 0xFFFF0000,
-        ColorParser.parseTtmlColor("lime"), false, true, Layout.Alignment.ALIGN_CENTER);
-    assertSpans(subtitle, 20, "text 2", "serif", TtmlStyle.STYLE_BOLD_ITALIC, 0xFF0000FF,
-        0xFFFFFF00, true, true, Layout.Alignment.ALIGN_CENTER);
-  }
-
-  public void testInheritMultipleStyles() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_MULTIPLE_STYLES_TTML_FILE);
-    assertEquals(12, subtitle.getEventTimeCount());
-    assertSpans(subtitle, 10, "text 1", "sansSerif", TtmlStyle.STYLE_BOLD_ITALIC, 0xFF0000FF,
-        0xFFFFFF00, false, true, null);
-  }
-
-  public void testInheritMultipleStylesWithoutLocalAttributes() throws IOException,
-      SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_MULTIPLE_STYLES_TTML_FILE);
-    assertEquals(12, subtitle.getEventTimeCount());
-    assertSpans(subtitle, 20, "text 2", "sansSerif", TtmlStyle.STYLE_BOLD_ITALIC, 0xFF0000FF,
-        0xFF000000, false, true, null);
-  }
-
-  public void testMergeMultipleStylesWithParentStyle() throws IOException,
-      SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_MULTIPLE_STYLES_TTML_FILE);
-    assertEquals(12, subtitle.getEventTimeCount());
-    assertSpans(subtitle, 30, "text 2.5", "sansSerifInline", TtmlStyle.STYLE_ITALIC, 0xFFFF0000,
-        0xFFFFFF00, true, true, null);
-  }
-
-  public void testMultipleRegions() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(MULTIPLE_REGIONS_TTML_FILE);
-    List<Cue> output = subtitle.getCues(1000000);
-    assertEquals(2, output.size());
-    Cue ttmlCue = output.get(0);
-    assertEquals("lorem", ttmlCue.text.toString());
-    assertEquals(10f / 100f, ttmlCue.position);
-    assertEquals(10f / 100f, ttmlCue.line);
-    assertEquals(20f / 100f, ttmlCue.size);
-
-    ttmlCue = output.get(1);
-    assertEquals("amet", ttmlCue.text.toString());
-    assertEquals(60f / 100f, ttmlCue.position);
-    assertEquals(10f / 100f, ttmlCue.line);
-    assertEquals(20f / 100f, ttmlCue.size);
-
-    output = subtitle.getCues(5000000);
-    assertEquals(1, output.size());
-    ttmlCue = output.get(0);
-    assertEquals("ipsum", ttmlCue.text.toString());
-    assertEquals(40f / 100f, ttmlCue.position);
-    assertEquals(40f / 100f, ttmlCue.line);
-    assertEquals(20f / 100f, ttmlCue.size);
-
-    output = subtitle.getCues(9000000);
-    assertEquals(1, output.size());
-    ttmlCue = output.get(0);
-    assertEquals("dolor", ttmlCue.text.toString());
-    assertEquals(Cue.DIMEN_UNSET, ttmlCue.position);
-    assertEquals(Cue.DIMEN_UNSET, ttmlCue.line);
-    assertEquals(Cue.DIMEN_UNSET, ttmlCue.size);
-    // TODO: Should be as below, once https://github.com/google/ExoPlayer/issues/2953 is fixed.
-    // assertEquals(10f / 100f, ttmlCue.position);
-    // assertEquals(80f / 100f, ttmlCue.line);
-    // assertEquals(1f, ttmlCue.size);
-
-    output = subtitle.getCues(21000000);
-    assertEquals(1, output.size());
-    ttmlCue = output.get(0);
-    assertEquals("She first said this", ttmlCue.text.toString());
-    assertEquals(45f / 100f, ttmlCue.position);
-    assertEquals(45f / 100f, ttmlCue.line);
-    assertEquals(35f / 100f, ttmlCue.size);
-    output = subtitle.getCues(25000000);
-    ttmlCue = output.get(0);
-    assertEquals("She first said this\nThen this", ttmlCue.text.toString());
-    output = subtitle.getCues(29000000);
-    assertEquals(1, output.size());
-    ttmlCue = output.get(0);
-    assertEquals("She first said this\nThen this\nFinally this", ttmlCue.text.toString());
-    assertEquals(45f / 100f, ttmlCue.position);
-    assertEquals(45f / 100f, ttmlCue.line);
-  }
-
-  public void testEmptyStyleAttribute() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_MULTIPLE_STYLES_TTML_FILE);
-    assertEquals(12, subtitle.getEventTimeCount());
-
-    TtmlNode root = subtitle.getRoot();
-    TtmlNode body = queryChildrenForTag(root, TtmlNode.TAG_BODY, 0);
-    TtmlNode fourthDiv = queryChildrenForTag(body, TtmlNode.TAG_DIV, 3);
-
-    assertNull(queryChildrenForTag(fourthDiv, TtmlNode.TAG_P, 0).getStyleIds());
-  }
-
-  public void testNonexistingStyleId() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_MULTIPLE_STYLES_TTML_FILE);
-    assertEquals(12, subtitle.getEventTimeCount());
-
-    TtmlNode root = subtitle.getRoot();
-    TtmlNode body = queryChildrenForTag(root, TtmlNode.TAG_BODY, 0);
-    TtmlNode fifthDiv = queryChildrenForTag(body, TtmlNode.TAG_DIV, 4);
-
-    assertEquals(1, queryChildrenForTag(fifthDiv, TtmlNode.TAG_P, 0).getStyleIds().length);
-  }
-
-  public void testNonExistingAndExistingStyleIdWithRedundantSpaces() throws IOException,
-      SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(INHERIT_MULTIPLE_STYLES_TTML_FILE);
-    assertEquals(12, subtitle.getEventTimeCount());
-
-    TtmlNode root = subtitle.getRoot();
-    TtmlNode body = queryChildrenForTag(root, TtmlNode.TAG_BODY, 0);
-    TtmlNode sixthDiv = queryChildrenForTag(body, TtmlNode.TAG_DIV, 5);
-
-    String[] styleIds = queryChildrenForTag(sixthDiv, TtmlNode.TAG_P, 0).getStyleIds();
-    assertEquals(2, styleIds.length);
-  }
-
-  public void testMultipleChaining() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(CHAIN_MULTIPLE_STYLES_TTML_FILE);
-    assertEquals(2, subtitle.getEventTimeCount());
-
-    Map<String, TtmlStyle> globalStyles = subtitle.getGlobalStyles();
-
-    TtmlStyle style = globalStyles.get("s2");
-    assertEquals("serif", style.getFontFamily());
-    assertEquals(0xFFFF0000, style.getBackgroundColor());
-    assertEquals(0xFF000000, style.getFontColor());
-    assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, style.getStyle());
-    assertTrue(style.isLinethrough());
-
-    style = globalStyles.get("s3");
-    // only difference: color must be RED
-    assertEquals(0xFFFF0000, style.getFontColor());
-    assertEquals("serif", style.getFontFamily());
-    assertEquals(0xFFFF0000, style.getBackgroundColor());
-    assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, style.getStyle());
-    assertTrue(style.isLinethrough());
-  }
-
-  public void testNoUnderline() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(NO_UNDERLINE_LINETHROUGH_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    TtmlNode root = subtitle.getRoot();
-    TtmlNode body = queryChildrenForTag(root, TtmlNode.TAG_BODY, 0);
-    TtmlNode div = queryChildrenForTag(body, TtmlNode.TAG_DIV, 0);
-
-    TtmlStyle style = queryChildrenForTag(div, TtmlNode.TAG_P, 0).style;
-    assertFalse("noUnderline from inline attribute expected", style.isUnderline());
-  }
-
-  public void testNoLinethrough() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(NO_UNDERLINE_LINETHROUGH_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    TtmlNode root = subtitle.getRoot();
-    TtmlNode body = queryChildrenForTag(root, TtmlNode.TAG_BODY, 0);
-    TtmlNode div = queryChildrenForTag(body, TtmlNode.TAG_DIV, 1);
-
-    TtmlStyle style = queryChildrenForTag(div, TtmlNode.TAG_P, 0).style;
-    assertFalse("noLineThrough from inline attribute expected in second pNode",
-        style.isLinethrough());
-  }
-
-  public void testFontSizeSpans() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(FONT_SIZE_TTML_FILE);
-    assertEquals(10, subtitle.getEventTimeCount());
-
-    List<Cue> cues = subtitle.getCues(10 * 1000000);
-    assertEquals(1, cues.size());
-    SpannableStringBuilder spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("text 1", String.valueOf(spannable));
-    assertAbsoluteFontSize(spannable, 32);
-
-    cues = subtitle.getCues(20 * 1000000);
-    assertEquals(1, cues.size());
-    spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("text 2", String.valueOf(cues.get(0).text));
-    assertRelativeFontSize(spannable, 2.2f);
-
-    cues = subtitle.getCues(30 * 1000000);
-    assertEquals(1, cues.size());
-    spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("text 3", String.valueOf(cues.get(0).text));
-    assertRelativeFontSize(spannable, 1.5f);
-
-    cues = subtitle.getCues(40 * 1000000);
-    assertEquals(1, cues.size());
-    spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("two values", String.valueOf(cues.get(0).text));
-    assertAbsoluteFontSize(spannable, 16);
-
-    cues = subtitle.getCues(50 * 1000000);
-    assertEquals(1, cues.size());
-    spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("leading dot", String.valueOf(cues.get(0).text));
-    assertRelativeFontSize(spannable, 0.5f);
-  }
-
-  public void testFontSizeWithMissingUnitIsIgnored() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(FONT_SIZE_MISSING_UNIT_TTML_FILE);
-    assertEquals(2, subtitle.getEventTimeCount());
-    List<Cue> cues = subtitle.getCues(10 * 1000000);
-    assertEquals(1, cues.size());
-    SpannableStringBuilder spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("no unit", String.valueOf(spannable));
-    assertEquals(0, spannable.getSpans(0, spannable.length(), RelativeSizeSpan.class).length);
-    assertEquals(0, spannable.getSpans(0, spannable.length(), AbsoluteSizeSpan.class).length);
-  }
-
-  public void testFontSizeWithInvalidValueIsIgnored() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(FONT_SIZE_INVALID_TTML_FILE);
-    assertEquals(6, subtitle.getEventTimeCount());
-
-    List<Cue> cues = subtitle.getCues(10 * 1000000);
-    assertEquals(1, cues.size());
-    SpannableStringBuilder spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("invalid", String.valueOf(spannable));
-    assertEquals(0, spannable.getSpans(0, spannable.length(), RelativeSizeSpan.class).length);
-    assertEquals(0, spannable.getSpans(0, spannable.length(), AbsoluteSizeSpan.class).length);
-
-
-    cues = subtitle.getCues(20 * 1000000);
-    assertEquals(1, cues.size());
-    spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("invalid", String.valueOf(spannable));
-    assertEquals(0, spannable.getSpans(0, spannable.length(), RelativeSizeSpan.class).length);
-    assertEquals(0, spannable.getSpans(0, spannable.length(), AbsoluteSizeSpan.class).length);
-
-
-    cues = subtitle.getCues(30 * 1000000);
-    assertEquals(1, cues.size());
-    spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("invalid dot", String.valueOf(spannable));
-    assertEquals(0, spannable.getSpans(0, spannable.length(), RelativeSizeSpan.class).length);
-    assertEquals(0, spannable.getSpans(0, spannable.length(), AbsoluteSizeSpan.class).length);
-  }
-
-  public void testFontSizeWithEmptyValueIsIgnored() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(FONT_SIZE_EMPTY_TTML_FILE);
-    assertEquals(2, subtitle.getEventTimeCount());
-    List<Cue> cues = subtitle.getCues(10 * 1000000);
-    assertEquals(1, cues.size());
-    SpannableStringBuilder spannable = (SpannableStringBuilder) cues.get(0).text;
-    assertEquals("empty", String.valueOf(spannable));
-    assertEquals(0, spannable.getSpans(0, spannable.length(), RelativeSizeSpan.class).length);
-    assertEquals(0, spannable.getSpans(0, spannable.length(), AbsoluteSizeSpan.class).length);
-  }
-
-  public void testFrameRate() throws IOException, SubtitleDecoderException {
-    TtmlSubtitle subtitle = getSubtitle(FRAME_RATE_TTML_FILE);
-    assertEquals(4, subtitle.getEventTimeCount());
-    assertEquals(1_000_000, subtitle.getEventTime(0));
-    assertEquals(1_010_000, subtitle.getEventTime(1));
-    assertEquals(1_001_000_000, subtitle.getEventTime(2), 1000);
-    assertEquals(2_002_000_000, subtitle.getEventTime(3), 2000);
-  }
-
-  private void assertSpans(TtmlSubtitle subtitle, int second,
-      String text, String font, int fontStyle,
-      int backgroundColor, int color, boolean isUnderline,
-      boolean isLinethrough, Layout.Alignment alignment) {
-
-    long timeUs = second * 1000000;
-    List<Cue> cues = subtitle.getCues(timeUs);
-
-    assertEquals(1, cues.size());
-    assertEquals(text, String.valueOf(cues.get(0).text));
-    assertEquals("single cue expected for timeUs: " + timeUs, 1, cues.size());
-    SpannableStringBuilder spannable = (SpannableStringBuilder) cues.get(0).text;
-
-    assertFont(spannable, font);
-    assertStyle(spannable, fontStyle);
-    assertUnderline(spannable, isUnderline);
-    assertStrikethrough(spannable, isLinethrough);
-    assertUnderline(spannable, isUnderline);
-    assertBackground(spannable, backgroundColor);
-    assertForeground(spannable, color);
-    assertAlignment(spannable, alignment);
-  }
-
-  private void assertAbsoluteFontSize(Spannable spannable, int absoluteFontSize) {
-    AbsoluteSizeSpan[] absoluteSizeSpans = spannable.getSpans(0, spannable.length(),
-        AbsoluteSizeSpan.class);
-    assertEquals(1, absoluteSizeSpans.length);
-    assertEquals(absoluteFontSize, absoluteSizeSpans[0].getSize());
-  }
-
-  private void assertRelativeFontSize(Spannable spannable, float relativeFontSize) {
-    RelativeSizeSpan[] relativeSizeSpans = spannable.getSpans(0, spannable.length(),
-        RelativeSizeSpan.class);
-    assertEquals(1, relativeSizeSpans.length);
-    assertEquals(relativeFontSize, relativeSizeSpans[0].getSizeChange());
-  }
-
-  private void assertFont(Spannable spannable, String font) {
-    TypefaceSpan[] typefaceSpans = spannable.getSpans(0, spannable.length(), TypefaceSpan.class);
-    assertEquals(font, typefaceSpans[typefaceSpans.length - 1].getFamily());
-  }
-
-  private void assertStyle(Spannable spannable, int fontStyle) {
-    StyleSpan[] styleSpans = spannable.getSpans(0, spannable.length(), StyleSpan.class);
-    assertEquals(fontStyle, styleSpans[styleSpans.length - 1].getStyle());
-  }
-
-  private void assertUnderline(Spannable spannable, boolean isUnderline) {
-    UnderlineSpan[] underlineSpans = spannable.getSpans(0, spannable.length(), UnderlineSpan.class);
-    assertEquals(isUnderline ? "must be underlined" : "must not be underlined",
-        isUnderline ? 1 : 0, underlineSpans.length);
-  }
-
-  private void assertStrikethrough(Spannable spannable, boolean isStrikethrough) {
-    StrikethroughSpan[] striketroughSpans = spannable.getSpans(0, spannable.length(),
-        StrikethroughSpan.class);
-    assertEquals(isStrikethrough ? "must be strikethrough" : "must not be strikethrough",
-        isStrikethrough ? 1 : 0, striketroughSpans.length);
-  }
-
-  private void assertBackground(Spannable spannable, int backgroundColor) {
-    BackgroundColorSpan[] backgroundColorSpans =
-        spannable.getSpans(0, spannable.length(), BackgroundColorSpan.class);
-    if (backgroundColor != 0) {
-      assertEquals(backgroundColor, backgroundColorSpans[backgroundColorSpans.length - 1]
-          .getBackgroundColor());
-    } else {
-      assertEquals(0, backgroundColorSpans.length);
-    }
-  }
-
-  private void assertForeground(Spannable spannable, int foregroundColor) {
-    ForegroundColorSpan[] foregroundColorSpans =
-        spannable.getSpans(0, spannable.length(), ForegroundColorSpan.class);
-    assertEquals(foregroundColor,
-        foregroundColorSpans[foregroundColorSpans.length - 1].getForegroundColor());
-  }
-
-  private void assertAlignment(Spannable spannable, Layout.Alignment alignment) {
-    if (alignment != null) {
-      AlignmentSpan.Standard[] alignmentSpans =
-          spannable.getSpans(0, spannable.length(), AlignmentSpan.Standard.class);
-      assertEquals(1, alignmentSpans.length);
-      assertEquals(alignment, alignmentSpans[0].getAlignment());
-    } else {
-      assertEquals(0, spannable.getSpans
-          (0, spannable.length(), AlignmentSpan.Standard.class).length);
-    }
-  }
-
-  private TtmlNode queryChildrenForTag(TtmlNode node, String tag, int pos) {
-    int count = 0;
-    for (int i = 0; i < node.getChildCount(); i++) {
-      if (tag.equals(node.getChild(i).tag)) {
-        if (pos == count++) {
-          return node.getChild(i);
-        }
-      }
-    }
-    throw new IllegalStateException("tag not found");
-  }
-
-  private TtmlSubtitle getSubtitle(String file) throws IOException, SubtitleDecoderException {
-    TtmlDecoder ttmlDecoder = new TtmlDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), file);
-    return ttmlDecoder.decode(bytes, bytes.length, false);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlRenderUtilTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlRenderUtilTest.java
deleted file mode 100644
index 82dc6b4ad5..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlRenderUtilTest.java
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.ttml;
-
-import android.graphics.Color;
-import android.test.InstrumentationTestCase;
-import java.util.HashMap;
-import java.util.Map;
-
-/**
- * Unit test for <code>TtmlRenderUtil</code>
- */
-public class TtmlRenderUtilTest extends InstrumentationTestCase {
-
-  public void testResolveStyleNoStyleAtAll() {
-    assertNull(TtmlRenderUtil.resolveStyle(null, null, null));
-  }
-  public void testResolveStyleSingleReferentialStyle() {
-    Map<String, TtmlStyle> globalStyles = getGlobalStyles();
-    String[] styleIds = {"s0"};
-
-    assertSame(globalStyles.get("s0"),
-        TtmlRenderUtil.resolveStyle(null, styleIds, globalStyles));
-  }
-  public void testResolveStyleMultipleReferentialStyles() {
-    Map<String, TtmlStyle> globalStyles = getGlobalStyles();
-    String[] styleIds = {"s0", "s1"};
-
-    TtmlStyle resolved = TtmlRenderUtil.resolveStyle(null, styleIds, globalStyles);
-    assertNotSame(globalStyles.get("s0"), resolved);
-    assertNotSame(globalStyles.get("s1"), resolved);
-    assertNull(resolved.getId());
-
-    // inherited from s0
-    assertEquals(Color.BLACK, resolved.getBackgroundColor());
-    // inherited from s1
-    assertEquals(Color.RED, resolved.getFontColor());
-    // merged from s0 and s1
-    assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, resolved.getStyle());
-  }
-
-  public void testResolveMergeSingleReferentialStyleIntoInlineStyle() {
-    Map<String, TtmlStyle> globalStyles = getGlobalStyles();
-    String[] styleIds = {"s0"};
-    TtmlStyle style = new TtmlStyle();
-    style.setBackgroundColor(Color.YELLOW);
-
-    TtmlStyle resolved = TtmlRenderUtil.resolveStyle(style, styleIds, globalStyles);
-    assertSame(style, resolved);
-
-    // inline attribute not overridden
-    assertEquals(Color.YELLOW, resolved.getBackgroundColor());
-    // inherited from referential style
-    assertEquals(TtmlStyle.STYLE_BOLD, resolved.getStyle());
-  }
-
-
-  public void testResolveMergeMultipleReferentialStylesIntoInlineStyle() {
-    Map<String, TtmlStyle> globalStyles = getGlobalStyles();
-    String[] styleIds = {"s0", "s1"};
-    TtmlStyle style = new TtmlStyle();
-    style.setBackgroundColor(Color.YELLOW);
-
-    TtmlStyle resolved = TtmlRenderUtil.resolveStyle(style, styleIds, globalStyles);
-    assertSame(style, resolved);
-
-    // inline attribute not overridden
-    assertEquals(Color.YELLOW, resolved.getBackgroundColor());
-    // inherited from both referential style
-    assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, resolved.getStyle());
-  }
-
-  public void testResolveStyleOnlyInlineStyle() {
-    TtmlStyle inlineStyle = new TtmlStyle();
-    assertSame(inlineStyle, TtmlRenderUtil.resolveStyle(inlineStyle, null, null));
-  }
-
-  private Map<String, TtmlStyle> getGlobalStyles() {
-    Map<String, TtmlStyle> globalStyles = new HashMap<>();
-
-    TtmlStyle s0 = new TtmlStyle();
-    s0.setId("s0");
-    s0.setBackgroundColor(Color.BLACK);
-    s0.setBold(true);
-    globalStyles.put(s0.getId(), s0);
-
-    TtmlStyle s1 = new TtmlStyle();
-    s1.setId("s1");
-    s1.setBackgroundColor(Color.RED);
-    s1.setFontColor(Color.RED);
-    s1.setItalic(true);
-    globalStyles.put(s1.getId(), s1);
-
-    return globalStyles;
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlStyleTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlStyleTest.java
deleted file mode 100644
index 1690371a47..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/ttml/TtmlStyleTest.java
+++ /dev/null
@@ -1,132 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.ttml;
-
-import android.graphics.Color;
-import android.test.InstrumentationTestCase;
-
-/**
- * Unit test for {@link TtmlStyle}.
- */
-public final class TtmlStyleTest extends InstrumentationTestCase {
-
-    private static final String FONT_FAMILY = "serif";
-    private static final String ID = "id";
-    public static final int FOREGROUND_COLOR = Color.WHITE;
-    public static final int BACKGROUND_COLOR = Color.BLACK;
-    private TtmlStyle style;
-
-    @Override
-    public void setUp() throws Exception {
-        super.setUp();
-        style = new TtmlStyle();
-    }
-
-    public void testInheritStyle() {
-        style.inherit(createAncestorStyle());
-        assertNull("id must not be inherited", style.getId());
-        assertTrue(style.isUnderline());
-        assertTrue(style.isLinethrough());
-        assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, style.getStyle());
-        assertEquals(FONT_FAMILY, style.getFontFamily());
-        assertEquals(Color.WHITE, style.getFontColor());
-        assertFalse("do not inherit backgroundColor", style.hasBackgroundColor());
-    }
-
-    public void testChainStyle() {
-        style.chain(createAncestorStyle());
-        assertNull("id must not be inherited", style.getId());
-        assertTrue(style.isUnderline());
-        assertTrue(style.isLinethrough());
-        assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, style.getStyle());
-        assertEquals(FONT_FAMILY, style.getFontFamily());
-        assertEquals(FOREGROUND_COLOR, style.getFontColor());
-        // do inherit backgroundColor when chaining
-        assertEquals("do not inherit backgroundColor when chaining",
-            BACKGROUND_COLOR, style.getBackgroundColor());
-    }
-
-    private TtmlStyle createAncestorStyle() {
-        TtmlStyle ancestor = new TtmlStyle();
-        ancestor.setId(ID);
-        ancestor.setItalic(true);
-        ancestor.setBold(true);
-        ancestor.setBackgroundColor(BACKGROUND_COLOR);
-        ancestor.setFontColor(FOREGROUND_COLOR);
-        ancestor.setLinethrough(true);
-        ancestor.setUnderline(true);
-        ancestor.setFontFamily(FONT_FAMILY);
-        return ancestor;
-    }
-
-    public void testStyle() {
-        assertEquals(TtmlStyle.UNSPECIFIED, style.getStyle());
-        style.setItalic(true);
-        assertEquals(TtmlStyle.STYLE_ITALIC, style.getStyle());
-        style.setBold(true);
-        assertEquals(TtmlStyle.STYLE_BOLD_ITALIC, style.getStyle());
-        style.setItalic(false);
-        assertEquals(TtmlStyle.STYLE_BOLD, style.getStyle());
-        style.setBold(false);
-        assertEquals(TtmlStyle.STYLE_NORMAL, style.getStyle());
-    }
-
-    public void testLinethrough() {
-        assertFalse(style.isLinethrough());
-        style.setLinethrough(true);
-        assertTrue(style.isLinethrough());
-        style.setLinethrough(false);
-        assertFalse(style.isLinethrough());
-    }
-
-    public void testUnderline() {
-        assertFalse(style.isUnderline());
-        style.setUnderline(true);
-        assertTrue(style.isUnderline());
-        style.setUnderline(false);
-        assertFalse(style.isUnderline());
-    }
-
-    public void testFontFamily() {
-        assertNull(style.getFontFamily());
-        style.setFontFamily(FONT_FAMILY);
-        assertEquals(FONT_FAMILY, style.getFontFamily());
-        style.setFontFamily(null);
-        assertNull(style.getFontFamily());
-    }
-
-    public void testColor() {
-        assertFalse(style.hasFontColor());
-        style.setFontColor(Color.BLACK);
-        assertEquals(Color.BLACK, style.getFontColor());
-        assertTrue(style.hasFontColor());
-    }
-
-    public void testBackgroundColor() {
-        assertFalse(style.hasBackgroundColor());
-        style.setBackgroundColor(Color.BLACK);
-        assertEquals(Color.BLACK, style.getBackgroundColor());
-        assertTrue(style.hasBackgroundColor());
-    }
-
-    public void testId() {
-        assertNull(style.getId());
-        style.setId(ID);
-        assertEquals(ID, style.getId());
-        style.setId(null);
-        assertNull(style.getId());
-    }
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/tx3g/Tx3gDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/tx3g/Tx3gDecoderTest.java
deleted file mode 100644
index 0b24d0f275..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/tx3g/Tx3gDecoderTest.java
+++ /dev/null
@@ -1,218 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.tx3g;
-
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.test.InstrumentationTestCase;
-import android.text.SpannedString;
-import android.text.style.ForegroundColorSpan;
-import android.text.style.StyleSpan;
-import android.text.style.TypefaceSpan;
-import android.text.style.UnderlineSpan;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.text.Cue;
-import com.google.android.exoplayer2.text.Subtitle;
-import com.google.android.exoplayer2.text.SubtitleDecoderException;
-import java.io.IOException;
-import java.util.Collections;
-
-/**
- * Unit test for {@link Tx3gDecoder}.
- */
-public final class Tx3gDecoderTest extends InstrumentationTestCase {
-
-  private static final String NO_SUBTITLE = "tx3g/no_subtitle";
-  private static final String SAMPLE_JUST_TEXT = "tx3g/sample_just_text";
-  private static final String SAMPLE_WITH_STYL = "tx3g/sample_with_styl";
-  private static final String SAMPLE_WITH_STYL_ALL_DEFAULTS = "tx3g/sample_with_styl_all_defaults";
-  private static final String SAMPLE_UTF16_BE_NO_STYL = "tx3g/sample_utf16_be_no_styl";
-  private static final String SAMPLE_UTF16_LE_NO_STYL = "tx3g/sample_utf16_le_no_styl";
-  private static final String SAMPLE_WITH_MULTIPLE_STYL = "tx3g/sample_with_multiple_styl";
-  private static final String SAMPLE_WITH_OTHER_EXTENSION = "tx3g/sample_with_other_extension";
-  private static final String SAMPLE_WITH_TBOX = "tx3g/sample_with_tbox";
-  private static final String INITIALIZATION = "tx3g/initialization";
-  private static final String INITIALIZATION_ALL_DEFAULTS = "tx3g/initialization_all_defaults";
-
-  public void testDecodeNoSubtitle() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), NO_SUBTITLE);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    assertTrue(subtitle.getCues(0).isEmpty());
-  }
-
-  public void testDecodeJustText() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_JUST_TEXT);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("CC Test", text.toString());
-    assertEquals(0, text.getSpans(0, text.length(), Object.class).length);
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  public void testDecodeWithStyl() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_WITH_STYL);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("CC Test", text.toString());
-    assertEquals(3, text.getSpans(0, text.length(), Object.class).length);
-    StyleSpan styleSpan = findSpan(text, 0, 6, StyleSpan.class);
-    assertEquals(Typeface.BOLD_ITALIC, styleSpan.getStyle());
-    findSpan(text, 0, 6, UnderlineSpan.class);
-    ForegroundColorSpan colorSpan = findSpan(text, 0, 6, ForegroundColorSpan.class);
-    assertEquals(Color.GREEN, colorSpan.getForegroundColor());
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  public void testDecodeWithStylAllDefaults() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_WITH_STYL_ALL_DEFAULTS);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("CC Test", text.toString());
-    assertEquals(0, text.getSpans(0, text.length(), Object.class).length);
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  public void testDecodeUtf16BeNoStyl() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_UTF16_BE_NO_STYL);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("你好", text.toString());
-    assertEquals(0, text.getSpans(0, text.length(), Object.class).length);
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  public void testDecodeUtf16LeNoStyl() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_UTF16_LE_NO_STYL);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("你好", text.toString());
-    assertEquals(0, text.getSpans(0, text.length(), Object.class).length);
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  public void testDecodeWithMultipleStyl() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_WITH_MULTIPLE_STYL);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("Line 2\nLine 3", text.toString());
-    assertEquals(4, text.getSpans(0, text.length(), Object.class).length);
-    StyleSpan styleSpan = findSpan(text, 0, 5, StyleSpan.class);
-    assertEquals(Typeface.ITALIC, styleSpan.getStyle());
-    findSpan(text, 7, 12, UnderlineSpan.class);
-    ForegroundColorSpan colorSpan = findSpan(text, 0, 5, ForegroundColorSpan.class);
-    assertEquals(Color.GREEN, colorSpan.getForegroundColor());
-    colorSpan = findSpan(text, 7, 12, ForegroundColorSpan.class);
-    assertEquals(Color.GREEN, colorSpan.getForegroundColor());
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  public void testDecodeWithOtherExtension() throws IOException, SubtitleDecoderException {
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.<byte[]>emptyList());
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_WITH_OTHER_EXTENSION);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("CC Test", text.toString());
-    assertEquals(2, text.getSpans(0, text.length(), Object.class).length);
-    StyleSpan styleSpan = findSpan(text, 0, 6, StyleSpan.class);
-    assertEquals(Typeface.BOLD, styleSpan.getStyle());
-    ForegroundColorSpan colorSpan = findSpan(text, 0, 6, ForegroundColorSpan.class);
-    assertEquals(Color.GREEN, colorSpan.getForegroundColor());
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  public void testInitializationDecodeWithStyl() throws IOException, SubtitleDecoderException {
-    byte[] initBytes = TestUtil.getByteArray(getInstrumentation(), INITIALIZATION);
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.singletonList(initBytes));
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_WITH_STYL);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("CC Test", text.toString());
-    assertEquals(5, text.getSpans(0, text.length(), Object.class).length);
-    StyleSpan styleSpan = findSpan(text, 0, text.length(), StyleSpan.class);
-    assertEquals(Typeface.BOLD_ITALIC, styleSpan.getStyle());
-    findSpan(text, 0, text.length(), UnderlineSpan.class);
-    TypefaceSpan typefaceSpan = findSpan(text, 0, text.length(), TypefaceSpan.class);
-    assertEquals(C.SERIF_NAME, typefaceSpan.getFamily());
-    ForegroundColorSpan colorSpan = findSpan(text, 0, text.length(), ForegroundColorSpan.class);
-    assertEquals(Color.RED, colorSpan.getForegroundColor());
-    colorSpan = findSpan(text, 0, 6, ForegroundColorSpan.class);
-    assertEquals(Color.GREEN, colorSpan.getForegroundColor());
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.1f);
-  }
-
-  public void testInitializationDecodeWithTbox() throws IOException, SubtitleDecoderException {
-    byte[] initBytes = TestUtil.getByteArray(getInstrumentation(), INITIALIZATION);
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.singletonList(initBytes));
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_WITH_TBOX);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("CC Test", text.toString());
-    assertEquals(4, text.getSpans(0, text.length(), Object.class).length);
-    StyleSpan styleSpan = findSpan(text, 0, text.length(), StyleSpan.class);
-    assertEquals(Typeface.BOLD_ITALIC, styleSpan.getStyle());
-    findSpan(text, 0, text.length(), UnderlineSpan.class);
-    TypefaceSpan typefaceSpan = findSpan(text, 0, text.length(), TypefaceSpan.class);
-    assertEquals(C.SERIF_NAME, typefaceSpan.getFamily());
-    ForegroundColorSpan colorSpan = findSpan(text, 0, text.length(), ForegroundColorSpan.class);
-    assertEquals(Color.RED, colorSpan.getForegroundColor());
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.1875f);
-  }
-
-  public void testInitializationAllDefaultsDecodeWithStyl() throws IOException,
-      SubtitleDecoderException {
-    byte[] initBytes = TestUtil.getByteArray(getInstrumentation(), INITIALIZATION_ALL_DEFAULTS);
-    Tx3gDecoder decoder = new Tx3gDecoder(Collections.singletonList(initBytes));
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), SAMPLE_WITH_STYL);
-    Subtitle subtitle = decoder.decode(bytes, bytes.length, false);
-    SpannedString text = new SpannedString(subtitle.getCues(0).get(0).text);
-    assertEquals("CC Test", text.toString());
-    assertEquals(3, text.getSpans(0, text.length(), Object.class).length);
-    StyleSpan styleSpan = findSpan(text, 0, 6, StyleSpan.class);
-    assertEquals(Typeface.BOLD_ITALIC, styleSpan.getStyle());
-    findSpan(text, 0, 6, UnderlineSpan.class);
-    ForegroundColorSpan colorSpan = findSpan(text, 0, 6, ForegroundColorSpan.class);
-    assertEquals(Color.GREEN, colorSpan.getForegroundColor());
-    assertFractionalLinePosition(subtitle.getCues(0).get(0), 0.85f);
-  }
-
-  private static <T> T findSpan(SpannedString testObject, int expectedStart, int expectedEnd,
-      Class<T> expectedType) {
-    T[] spans = testObject.getSpans(0, testObject.length(), expectedType);
-    for (T span : spans) {
-      if (testObject.getSpanStart(span) == expectedStart
-          && testObject.getSpanEnd(span) == expectedEnd) {
-        return span;
-      }
-    }
-    fail("Span not found.");
-    return null;
-  }
-
-  private static void assertFractionalLinePosition(Cue cue, float expectedFraction) {
-    assertEquals(Cue.LINE_TYPE_FRACTION, cue.lineType);
-    assertEquals(Cue.ANCHOR_TYPE_START, cue.lineAnchor);
-    assertTrue(Math.abs(expectedFraction - cue.line) < 1e-6);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/CssParserTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/CssParserTest.java
deleted file mode 100644
index d6be100877..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/CssParserTest.java
+++ /dev/null
@@ -1,214 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.webvtt;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.util.ParsableByteArray;
-import com.google.android.exoplayer2.util.Util;
-
-/**
- * Unit test for {@link CssParser}.
- */
-public final class CssParserTest extends InstrumentationTestCase {
-
-  private CssParser parser;
-
-  @Override
-  public void setUp() {
-    parser = new CssParser();
-  }
-
-  public void testSkipWhitespacesAndComments() {
-    // Skip only whitespaces
-    String skipOnlyWhitespaces = " \t\r\n\f End of skip\n /*  */";
-    assertSkipsToEndOfSkip("End of skip", skipOnlyWhitespaces);
-
-    // Skip only comments.
-    String skipOnlyComments = "/*A comment***//*/It even has spaces in it*/End of skip";
-    assertSkipsToEndOfSkip("End of skip", skipOnlyComments);
-
-    // Skip interleaved.
-    String skipInterleaved = " /* We have comments and */\t\n/* whitespaces*/ End of skip";
-    assertSkipsToEndOfSkip("End of skip", skipInterleaved);
-
-    // Skip nothing.
-    String skipNothing = "End of skip\n \t \r";
-    assertSkipsToEndOfSkip("End of skip", skipNothing);
-
-    // Skip everything.
-    String skipEverything = "\t/* Comment */\n\r/* And another */";
-    assertSkipsToEndOfSkip(null, skipEverything);
-  }
-
-  public void testGetInputLimit() {
-    // \r After 3 lines.
-    String threeLinesThen3Cr = "One Line\nThen other\rAnd finally\r\r\r";
-    assertInputLimit("", threeLinesThen3Cr);
-
-    // \r\r After 3 lines
-    String threeLinesThen2Cr = "One Line\nThen other\r\nAnd finally\r\r";
-    assertInputLimit(null, threeLinesThen2Cr);
-
-    // \n\n After 3 lines.
-    String threeLinesThen2Lf = "One Line\nThen other\r\nAnd finally\n\nFinal\n\n\nLine";
-    assertInputLimit("Final", threeLinesThen2Lf);
-
-    // \r\n\n After 3 lines.
-    String threeLinesThenCr2Lf = " \n \r\n \r\n\nFinal\n\n\nLine";
-    assertInputLimit("Final", threeLinesThenCr2Lf);
-
-    // Limit immediately.
-    String immediateEmptyLine = "\nLine\nEnd";
-    assertInputLimit("Line", immediateEmptyLine);
-
-    // Empty string.
-    assertInputLimit(null, "");
-  }
-
-  public void testParseMethodSimpleInput() {
-    String styleBlock1 = " ::cue { color : black; background-color: PapayaWhip }";
-    WebvttCssStyle expectedStyle = new WebvttCssStyle();
-    expectedStyle.setFontColor(0xFF000000);
-    expectedStyle.setBackgroundColor(0xFFFFEFD5);
-    assertParserProduces(expectedStyle, styleBlock1);
-
-    String styleBlock2 = " ::cue { color : black }\n\n::cue { color : invalid }";
-    expectedStyle = new WebvttCssStyle();
-    expectedStyle.setFontColor(0xFF000000);
-    assertParserProduces(expectedStyle, styleBlock2);
-
-    String styleBlock3 = " \n::cue {\n background-color\n:#00fFFe}";
-    expectedStyle = new WebvttCssStyle();
-    expectedStyle.setBackgroundColor(0xFF00FFFE);
-    assertParserProduces(expectedStyle, styleBlock3);
-  }
-
-  public void testMultiplePropertiesInBlock() {
-    String styleBlock = "::cue(#id){text-decoration:underline; background-color:green;"
-        + "color:red; font-family:Courier; font-weight:bold}";
-    WebvttCssStyle expectedStyle = new WebvttCssStyle();
-    expectedStyle.setTargetId("id");
-    expectedStyle.setUnderline(true);
-    expectedStyle.setBackgroundColor(0xFF008000);
-    expectedStyle.setFontColor(0xFFFF0000);
-    expectedStyle.setFontFamily("courier");
-    expectedStyle.setBold(true);
-
-    assertParserProduces(expectedStyle, styleBlock);
-  }
-
-  public void testRgbaColorExpression() {
-    String styleBlock = "::cue(#rgb){background-color: rgba(\n10/* Ugly color */,11\t, 12\n,.1);"
-        + "color:rgb(1,1,\n1)}";
-    WebvttCssStyle expectedStyle = new WebvttCssStyle();
-    expectedStyle.setTargetId("rgb");
-    expectedStyle.setBackgroundColor(0x190A0B0C);
-    expectedStyle.setFontColor(0xFF010101);
-
-    assertParserProduces(expectedStyle, styleBlock);
-  }
-
-  public void testGetNextToken() {
-    String stringInput = " lorem:ipsum\n{dolor}#sit,amet;lorem:ipsum\r\t\f\ndolor(())\n";
-    ParsableByteArray input = new ParsableByteArray(Util.getUtf8Bytes(stringInput));
-    StringBuilder builder = new StringBuilder();
-    assertEquals("lorem", CssParser.parseNextToken(input, builder));
-    assertEquals(":", CssParser.parseNextToken(input, builder));
-    assertEquals("ipsum", CssParser.parseNextToken(input, builder));
-    assertEquals("{", CssParser.parseNextToken(input, builder));
-    assertEquals("dolor", CssParser.parseNextToken(input, builder));
-    assertEquals("}", CssParser.parseNextToken(input, builder));
-    assertEquals("#sit", CssParser.parseNextToken(input, builder));
-    assertEquals(",", CssParser.parseNextToken(input, builder));
-    assertEquals("amet", CssParser.parseNextToken(input, builder));
-    assertEquals(";", CssParser.parseNextToken(input, builder));
-    assertEquals("lorem", CssParser.parseNextToken(input, builder));
-    assertEquals(":", CssParser.parseNextToken(input, builder));
-    assertEquals("ipsum", CssParser.parseNextToken(input, builder));
-    assertEquals("dolor", CssParser.parseNextToken(input, builder));
-    assertEquals("(", CssParser.parseNextToken(input, builder));
-    assertEquals("(", CssParser.parseNextToken(input, builder));
-    assertEquals(")", CssParser.parseNextToken(input, builder));
-    assertEquals(")", CssParser.parseNextToken(input, builder));
-    assertEquals(null, CssParser.parseNextToken(input, builder));
-  }
-
-  public void testStyleScoreSystem() {
-    WebvttCssStyle style = new WebvttCssStyle();
-    // Universal selector.
-    assertEquals(1, style.getSpecificityScore("", "", new String[0], ""));
-    // Class match without tag match.
-    style.setTargetClasses(new String[] { "class1", "class2"});
-    assertEquals(8, style.getSpecificityScore("", "", new String[] { "class1", "class2", "class3" },
-        ""));
-    // Class and tag match
-    style.setTargetTagName("b");
-    assertEquals(10, style.getSpecificityScore("", "b",
-        new String[] { "class1", "class2", "class3" }, ""));
-    // Class insufficiency.
-    assertEquals(0, style.getSpecificityScore("", "b", new String[] { "class1", "class" }, ""));
-    // Voice, classes and tag match.
-    style.setTargetVoice("Manuel Cráneo");
-    assertEquals(14, style.getSpecificityScore("", "b",
-        new String[] { "class1", "class2", "class3" }, "Manuel Cráneo"));
-    // Voice mismatch.
-    assertEquals(0, style.getSpecificityScore(null, "b",
-        new String[] { "class1", "class2", "class3" }, "Manuel Craneo"));
-    // Id, voice, classes and tag match.
-    style.setTargetId("id");
-    assertEquals(0x40000000 + 14, style.getSpecificityScore("id", "b",
-        new String[] { "class1", "class2", "class3" }, "Manuel Cráneo"));
-    // Id mismatch.
-    assertEquals(0, style.getSpecificityScore("id1", "b",
-        new String[] { "class1", "class2", "class3" }, ""));
-  }
-
-  // Utility methods.
-
-  private void assertSkipsToEndOfSkip(String expectedLine, String s) {
-    ParsableByteArray input = new ParsableByteArray(Util.getUtf8Bytes(s));
-    CssParser.skipWhitespaceAndComments(input);
-    assertEquals(expectedLine, input.readLine());
-  }
-
-  private void assertInputLimit(String expectedLine, String s) {
-    ParsableByteArray input = new ParsableByteArray(Util.getUtf8Bytes(s));
-    CssParser.skipStyleBlock(input);
-    assertEquals(expectedLine, input.readLine());
-  }
-
-  private void assertParserProduces(WebvttCssStyle expected,
-      String styleBlock){
-    ParsableByteArray input = new ParsableByteArray(Util.getUtf8Bytes(styleBlock));
-    WebvttCssStyle actualElem = parser.parseBlock(input);
-    assertEquals(expected.hasBackgroundColor(), actualElem.hasBackgroundColor());
-    if (expected.hasBackgroundColor()) {
-      assertEquals(expected.getBackgroundColor(), actualElem.getBackgroundColor());
-    }
-    assertEquals(expected.hasFontColor(), actualElem.hasFontColor());
-    if (expected.hasFontColor()) {
-      assertEquals(expected.getFontColor(), actualElem.getFontColor());
-    }
-    assertEquals(expected.getFontFamily(), actualElem.getFontFamily());
-    assertEquals(expected.getFontSize(), actualElem.getFontSize());
-    assertEquals(expected.getFontSizeUnit(), actualElem.getFontSizeUnit());
-    assertEquals(expected.getStyle(), actualElem.getStyle());
-    assertEquals(expected.isLinethrough(), actualElem.isLinethrough());
-    assertEquals(expected.isUnderline(), actualElem.isUnderline());
-    assertEquals(expected.getTextAlign(), actualElem.getTextAlign());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/Mp4WebvttDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/Mp4WebvttDecoderTest.java
deleted file mode 100644
index 2cdad081c5..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/Mp4WebvttDecoderTest.java
+++ /dev/null
@@ -1,148 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.webvtt;
-
-import com.google.android.exoplayer2.text.Cue;
-import com.google.android.exoplayer2.text.Subtitle;
-import com.google.android.exoplayer2.text.SubtitleDecoderException;
-import java.util.List;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link Mp4WebvttDecoder}.
- */
-public final class Mp4WebvttDecoderTest extends TestCase {
-
-  private static final byte[] SINGLE_CUE_SAMPLE = {
-      0x00, 0x00, 0x00, 0x1C,  // Size
-      0x76, 0x74, 0x74, 0x63,  // "vttc" Box type. VTT Cue box begins:
-
-      0x00, 0x00, 0x00, 0x14,  // Contained payload box's size
-      0x70, 0x61, 0x79, 0x6c,  // Contained payload box's type (payl), Cue Payload Box begins:
-
-      0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x0a // Hello World\n
-  };
-
-  private static final byte[] DOUBLE_CUE_SAMPLE = {
-      0x00, 0x00, 0x00, 0x1B,  // Size
-      0x76, 0x74, 0x74, 0x63,  // "vttc" Box type. First VTT Cue box begins:
-
-      0x00, 0x00, 0x00, 0x13,  // First contained payload box's size
-      0x70, 0x61, 0x79, 0x6c,  // First contained payload box's type (payl), Cue Payload Box begins:
-
-      0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64, // Hello World
-
-      0x00, 0x00, 0x00, 0x17,  // Size
-      0x76, 0x74, 0x74, 0x63,  // "vttc" Box type. Second VTT Cue box begins:
-
-      0x00, 0x00, 0x00, 0x0F,  // Contained payload box's size
-      0x70, 0x61, 0x79, 0x6c,  // Contained payload box's type (payl), Payload begins:
-
-      0x42, 0x79, 0x65, 0x20, 0x42, 0x79, 0x65  // Bye Bye
-  };
-
-  private static final byte[] NO_CUE_SAMPLE = {
-      0x00, 0x00, 0x00, 0x1B,  // Size
-      0x74, 0x74, 0x74, 0x63,  // "tttc" Box type, which is not a Cue. Should be skipped:
-
-      0x00, 0x00, 0x00, 0x13,  // Contained payload box's size
-      0x70, 0x61, 0x79, 0x6c,  // Contained payload box's type (payl), Cue Payload Box begins:
-
-      0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64 // Hello World
-  };
-
-  private static final byte[] INCOMPLETE_HEADER_SAMPLE = {
-      0x00, 0x00, 0x00, 0x23,  // Size
-      0x76, 0x74, 0x74, 0x63,  // "vttc" Box type. VTT Cue box begins:
-
-      0x00, 0x00, 0x00, 0x14,  // Contained payload box's size
-      0x70, 0x61, 0x79, 0x6c,  // Contained payload box's type (payl), Cue Payload Box begins:
-
-      0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x0a, // Hello World\n
-
-      0x00, 0x00, 0x00, 0x07, // Size of an incomplete header, which belongs to the first vttc box.
-      0x76, 0x74, 0x74
-  };
-
-  // Positive tests.
-
-  public void testSingleCueSample() throws SubtitleDecoderException {
-    Mp4WebvttDecoder decoder = new Mp4WebvttDecoder();
-    Subtitle result = decoder.decode(SINGLE_CUE_SAMPLE, SINGLE_CUE_SAMPLE.length, false);
-    Cue expectedCue = new Cue("Hello World"); // Line feed must be trimmed by the decoder
-    assertMp4WebvttSubtitleEquals(result, expectedCue);
-  }
-
-  public void testTwoCuesSample() throws SubtitleDecoderException {
-    Mp4WebvttDecoder decoder = new Mp4WebvttDecoder();
-    Subtitle result = decoder.decode(DOUBLE_CUE_SAMPLE, DOUBLE_CUE_SAMPLE.length, false);
-    Cue firstExpectedCue = new Cue("Hello World");
-    Cue secondExpectedCue = new Cue("Bye Bye");
-    assertMp4WebvttSubtitleEquals(result, firstExpectedCue, secondExpectedCue);
-  }
-
-  public void testNoCueSample() throws SubtitleDecoderException {
-    Mp4WebvttDecoder decoder = new Mp4WebvttDecoder();
-    Subtitle result = decoder.decode(NO_CUE_SAMPLE, NO_CUE_SAMPLE.length, false);
-    assertMp4WebvttSubtitleEquals(result);
-  }
-
-  // Negative tests.
-
-  public void testSampleWithIncompleteHeader() {
-    Mp4WebvttDecoder decoder = new Mp4WebvttDecoder();
-    try {
-      decoder.decode(INCOMPLETE_HEADER_SAMPLE, INCOMPLETE_HEADER_SAMPLE.length, false);
-    } catch (SubtitleDecoderException e) {
-      return;
-    }
-    fail();
-  }
-
-  // Util methods
-
-  /**
-   * Asserts that the Subtitle's cues (which are all part of the event at t=0) are equal to the
-   * expected Cues.
-   *
-   * @param subtitle The {@link Subtitle} to check.
-   * @param expectedCues The expected {@link Cue}s.
-   */
-  private static void assertMp4WebvttSubtitleEquals(Subtitle subtitle, Cue... expectedCues) {
-    assertEquals(1, subtitle.getEventTimeCount());
-    assertEquals(0, subtitle.getEventTime(0));
-    List<Cue> subtitleCues = subtitle.getCues(0);
-    assertEquals(expectedCues.length, subtitleCues.size());
-    for (int i = 0; i < subtitleCues.size(); i++) {
-      assertCueEquals(expectedCues[i], subtitleCues.get(i));
-    }
-  }
-
-  /**
-   * Asserts that two cues are equal.
-   */
-  private static void assertCueEquals(Cue expected, Cue actual) {
-    assertEquals(expected.line, actual.line);
-    assertEquals(expected.lineAnchor, actual.lineAnchor);
-    assertEquals(expected.lineType, actual.lineType);
-    assertEquals(expected.position, actual.position);
-    assertEquals(expected.positionAnchor, actual.positionAnchor);
-    assertEquals(expected.size, actual.size);
-    assertEquals(expected.text.toString(), actual.text.toString());
-    assertEquals(expected.textAlignment, actual.textAlignment);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttCueParserTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttCueParserTest.java
deleted file mode 100644
index 1ee8976a7e..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttCueParserTest.java
+++ /dev/null
@@ -1,233 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.webvtt;
-
-import android.graphics.Typeface;
-import android.test.InstrumentationTestCase;
-import android.text.Spanned;
-import android.text.style.StyleSpan;
-import android.text.style.UnderlineSpan;
-import java.util.Collections;
-
-/**
- * Unit test for {@link WebvttCueParser}.
- */
-public final class WebvttCueParserTest extends InstrumentationTestCase {
-
-  public void testParseStrictValidClassesAndTrailingTokens() throws Exception {
-    Spanned text = parseCueText("<v.first.loud Esme>"
-        + "This <u.style1.style2 some stuff>is</u> text with <b.foo><i.bar>html</i></b> tags");
-
-    assertEquals("This is text with html tags", text.toString());
-
-    UnderlineSpan[] underlineSpans = getSpans(text, UnderlineSpan.class);
-    StyleSpan[] styleSpans = getSpans(text, StyleSpan.class);
-    assertEquals(1, underlineSpans.length);
-    assertEquals(2, styleSpans.length);
-    assertEquals(Typeface.ITALIC, styleSpans[0].getStyle());
-    assertEquals(Typeface.BOLD, styleSpans[1].getStyle());
-
-    assertEquals(5, text.getSpanStart(underlineSpans[0]));
-    assertEquals(7, text.getSpanEnd(underlineSpans[0]));
-    assertEquals(18, text.getSpanStart(styleSpans[0]));
-    assertEquals(18, text.getSpanStart(styleSpans[1]));
-    assertEquals(22, text.getSpanEnd(styleSpans[0]));
-    assertEquals(22, text.getSpanEnd(styleSpans[1]));
-  }
-
-  public void testParseStrictValidUnsupportedTagsStrippedOut() throws Exception {
-    Spanned text = parseCueText("<v.first.loud Esme>This <unsupported>is</unsupported> text with "
-        + "<notsupp><invalid>html</invalid></notsupp> tags");
-    assertEquals("This is text with html tags", text.toString());
-    assertEquals(0, getSpans(text, UnderlineSpan.class).length);
-    assertEquals(0, getSpans(text, StyleSpan.class).length);
-  }
-
-  public void testParseWellFormedUnclosedEndAtCueEnd() throws Exception {
-    Spanned text = parseCueText("An <u some trailing stuff>unclosed u tag with "
-        + "<i>italic</i> inside");
-
-    assertEquals("An unclosed u tag with italic inside", text.toString());
-
-    UnderlineSpan[] underlineSpans = getSpans(text, UnderlineSpan.class);
-    StyleSpan[] styleSpans = getSpans(text, StyleSpan.class);
-    assertEquals(1, underlineSpans.length);
-    assertEquals(1, styleSpans.length);
-    assertEquals(Typeface.ITALIC, styleSpans[0].getStyle());
-
-    assertEquals(3, text.getSpanStart(underlineSpans[0]));
-    assertEquals(23, text.getSpanStart(styleSpans[0]));
-    assertEquals(29, text.getSpanEnd(styleSpans[0]));
-    assertEquals(36, text.getSpanEnd(underlineSpans[0]));
-  }
-
-  public void testParseWellFormedUnclosedEndAtParent() throws Exception {
-    Spanned text = parseCueText("An unclosed u tag with <i><u>underline and italic</i> inside");
-
-    assertEquals("An unclosed u tag with underline and italic inside", text.toString());
-
-    UnderlineSpan[] underlineSpans = getSpans(text, UnderlineSpan.class);
-    StyleSpan[] styleSpans = getSpans(text, StyleSpan.class);
-    assertEquals(1, underlineSpans.length);
-    assertEquals(1, styleSpans.length);
-
-    assertEquals(23, text.getSpanStart(underlineSpans[0]));
-    assertEquals(23, text.getSpanStart(styleSpans[0]));
-    assertEquals(43, text.getSpanEnd(underlineSpans[0]));
-    assertEquals(43, text.getSpanEnd(styleSpans[0]));
-
-    assertEquals(Typeface.ITALIC, styleSpans[0].getStyle());
-  }
-
-  public void testParseMalformedNestedElements() throws Exception {
-    Spanned text = parseCueText("<b><u>An unclosed u tag with <i>italic</u> inside</i></b>");
-    assertEquals("An unclosed u tag with italic inside", text.toString());
-
-    UnderlineSpan[] underlineSpans = getSpans(text, UnderlineSpan.class);
-    StyleSpan[] styleSpans = getSpans(text, StyleSpan.class);
-    assertEquals(1, underlineSpans.length);
-    assertEquals(2, styleSpans.length);
-
-    // all tags applied until matching start tag found
-    assertEquals(0, text.getSpanStart(underlineSpans[0]));
-    assertEquals(29, text.getSpanEnd(underlineSpans[0]));
-    if (styleSpans[0].getStyle() == Typeface.BOLD) {
-      assertEquals(0, text.getSpanStart(styleSpans[0]));
-      assertEquals(23, text.getSpanStart(styleSpans[1]));
-      assertEquals(29, text.getSpanEnd(styleSpans[1]));
-      assertEquals(36, text.getSpanEnd(styleSpans[0]));
-    } else {
-      assertEquals(0, text.getSpanStart(styleSpans[1]));
-      assertEquals(23, text.getSpanStart(styleSpans[0]));
-      assertEquals(29, text.getSpanEnd(styleSpans[0]));
-      assertEquals(36, text.getSpanEnd(styleSpans[1]));
-    }
-  }
-
-  public void testParseCloseNonExistingTag() throws Exception {
-    Spanned text = parseCueText("blah<b>blah</i>blah</b>blah");
-    assertEquals("blahblahblahblah", text.toString());
-
-    StyleSpan[] spans = getSpans(text, StyleSpan.class);
-    assertEquals(1, spans.length);
-    assertEquals(Typeface.BOLD, spans[0].getStyle());
-    assertEquals(4, text.getSpanStart(spans[0]));
-    assertEquals(8, text.getSpanEnd(spans[0])); // should be 12 when valid
-  }
-
-  public void testParseEmptyTagName() throws Exception {
-    Spanned text = parseCueText("An unclosed u tag with <>italic inside");
-    assertEquals("An unclosed u tag with italic inside", text.toString());
-  }
-
-  public void testParseEntities() throws Exception {
-    Spanned text = parseCueText("&amp; &gt; &lt; &nbsp;");
-    assertEquals("& > <  ", text.toString());
-  }
-
-  public void testParseEntitiesUnsupported() throws Exception {
-    Spanned text = parseCueText("&noway; &sure;");
-    assertEquals(" ", text.toString());
-  }
-
-  public void testParseEntitiesNotTerminated() throws Exception {
-    Spanned text = parseCueText("&amp here comes text");
-    assertEquals("& here comes text", text.toString());
-  }
-
-  public void testParseEntitiesNotTerminatedUnsupported() throws Exception {
-    Spanned text = parseCueText("&surenot here comes text");
-    assertEquals(" here comes text", text.toString());
-  }
-
-  public void testParseEntitiesNotTerminatedNoSpace() throws Exception {
-    Spanned text = parseCueText("&surenot");
-    assertEquals("&surenot", text.toString());
-  }
-
-  public void testParseVoidTag() throws Exception {
-    Spanned text = parseCueText("here comes<br/> text<br/>");
-    assertEquals("here comes text", text.toString());
-  }
-
-  public void testParseMultipleTagsOfSameKind() {
-    Spanned text = parseCueText("blah <b>blah</b> blah <b>foo</b>");
-
-    assertEquals("blah blah blah foo", text.toString());
-    StyleSpan[] spans = getSpans(text, StyleSpan.class);
-    assertEquals(2, spans.length);
-    assertEquals(5, text.getSpanStart(spans[0]));
-    assertEquals(9, text.getSpanEnd(spans[0]));
-    assertEquals(15, text.getSpanStart(spans[1]));
-    assertEquals(18, text.getSpanEnd(spans[1]));
-    assertEquals(Typeface.BOLD, spans[0].getStyle());
-    assertEquals(Typeface.BOLD, spans[1].getStyle());
-  }
-
-  public void testParseInvalidVoidSlash() {
-    Spanned text = parseCueText("blah <b/.st1.st2 trailing stuff> blah");
-
-    assertEquals("blah  blah", text.toString());
-    StyleSpan[] spans = getSpans(text, StyleSpan.class);
-    assertEquals(0, spans.length);
-  }
-
-  public void testParseMonkey() throws Exception {
-    Spanned text = parseCueText("< u>An unclosed u tag with <<<<< i>italic</u></u></u></u    >"
-        + "</i><u><u> inside");
-    assertEquals("An unclosed u tag with italic inside", text.toString());
-    text = parseCueText(">>>>>>>>>An unclosed u tag with <<<<< italic</u></u></u>"
-        + "</u  ></i><u><u> inside");
-    assertEquals(">>>>>>>>>An unclosed u tag with  inside", text.toString());
-  }
-
-  public void testParseCornerCases() throws Exception {
-    Spanned text = parseCueText(">");
-    assertEquals(">", text.toString());
-
-    text = parseCueText("<");
-    assertEquals("", text.toString());
-
-    text = parseCueText("<b.st1.st2 annotation");
-    assertEquals("", text.toString());
-
-    text = parseCueText("<<<<<<<<<<<<<<<<");
-    assertEquals("", text.toString());
-
-    text = parseCueText("<<<<<<>><<<<<<<<<<");
-    assertEquals(">", text.toString());
-
-    text = parseCueText("<>");
-    assertEquals("", text.toString());
-
-    text = parseCueText("&");
-    assertEquals("&", text.toString());
-
-    text = parseCueText("&&&&&&&");
-    assertEquals("&&&&&&&", text.toString());
-  }
-
-  private static Spanned parseCueText(String string) {
-    WebvttCue.Builder builder = new WebvttCue.Builder();
-    WebvttCueParser.parseCueText(null, string, builder, Collections.<WebvttCssStyle>emptyList());
-    return (Spanned) builder.build().text;
-  }
-
-  private static <T> T[] getSpans(Spanned text, Class<T> spanType) {
-    return text.getSpans(0, text.length(), spanType);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttDecoderTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttDecoderTest.java
deleted file mode 100644
index e48a2b8b03..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttDecoderTest.java
+++ /dev/null
@@ -1,229 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.webvtt;
-
-import android.graphics.Typeface;
-import android.test.InstrumentationTestCase;
-import android.text.Layout.Alignment;
-import android.text.Spanned;
-import android.text.style.BackgroundColorSpan;
-import android.text.style.ForegroundColorSpan;
-import android.text.style.StyleSpan;
-import android.text.style.TypefaceSpan;
-import android.text.style.UnderlineSpan;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.text.Cue;
-import com.google.android.exoplayer2.text.SubtitleDecoderException;
-import java.io.IOException;
-import java.util.List;
-
-/**
- * Unit test for {@link WebvttDecoder}.
- */
-public class WebvttDecoderTest extends InstrumentationTestCase {
-
-  private static final String TYPICAL_FILE = "webvtt/typical";
-  private static final String TYPICAL_WITH_IDS_FILE = "webvtt/typical_with_identifiers";
-  private static final String TYPICAL_WITH_COMMENTS_FILE = "webvtt/typical_with_comments";
-  private static final String WITH_POSITIONING_FILE = "webvtt/with_positioning";
-  private static final String WITH_BAD_CUE_HEADER_FILE = "webvtt/with_bad_cue_header";
-  private static final String WITH_TAGS_FILE = "webvtt/with_tags";
-  private static final String WITH_CSS_STYLES = "webvtt/with_css_styles";
-  private static final String WITH_CSS_COMPLEX_SELECTORS = "webvtt/with_css_complex_selectors";
-  private static final String EMPTY_FILE = "webvtt/empty";
-
-  public void testDecodeEmpty() throws IOException {
-    WebvttDecoder decoder = new WebvttDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), EMPTY_FILE);
-    try {
-      decoder.decode(bytes, bytes.length, false);
-      fail();
-    } catch (SubtitleDecoderException expected) {
-      // Do nothing.
-    }
-  }
-
-  public void testDecodeTypical() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(TYPICAL_FILE);
-
-    // Test event count.
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    // Test cues.
-    assertCue(subtitle, 0, 0, 1234000, "This is the first subtitle.");
-    assertCue(subtitle, 2, 2345000, 3456000, "This is the second subtitle.");
-  }
-
-  public void testDecodeTypicalWithIds() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(TYPICAL_WITH_IDS_FILE);
-
-    // Test event count.
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    // Test cues.
-    assertCue(subtitle, 0, 0, 1234000, "This is the first subtitle.");
-    assertCue(subtitle, 2, 2345000, 3456000, "This is the second subtitle.");
-  }
-
-  public void testDecodeTypicalWithComments() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(TYPICAL_WITH_COMMENTS_FILE);
-
-    // test event count
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    // test cues
-    assertCue(subtitle, 0, 0, 1234000, "This is the first subtitle.");
-    assertCue(subtitle, 2, 2345000, 3456000, "This is the second subtitle.");
-  }
-
-  public void testDecodeWithTags() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(WITH_TAGS_FILE);
-
-    // Test event count.
-    assertEquals(8, subtitle.getEventTimeCount());
-
-    // Test cues.
-    assertCue(subtitle, 0, 0, 1234000, "This is the first subtitle.");
-    assertCue(subtitle, 2, 2345000, 3456000, "This is the second subtitle.");
-    assertCue(subtitle, 4, 4000000, 5000000, "This is the third subtitle.");
-    assertCue(subtitle, 6, 6000000, 7000000, "This is the <fourth> &subtitle.");
-  }
-
-  public void testDecodeWithPositioning() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(WITH_POSITIONING_FILE);
-    // Test event count.
-    assertEquals(12, subtitle.getEventTimeCount());
-    // Test cues.
-    assertCue(subtitle, 0, 0, 1234000, "This is the first subtitle.", Alignment.ALIGN_NORMAL,
-        Cue.DIMEN_UNSET, Cue.TYPE_UNSET, Cue.TYPE_UNSET, 0.1f, Cue.ANCHOR_TYPE_START, 0.35f);
-    assertCue(subtitle, 2, 2345000, 3456000, "This is the second subtitle.",
-        Alignment.ALIGN_OPPOSITE, Cue.DIMEN_UNSET, Cue.TYPE_UNSET, Cue.TYPE_UNSET, Cue.DIMEN_UNSET,
-        Cue.TYPE_UNSET, 0.35f);
-    assertCue(subtitle, 4, 4000000, 5000000, "This is the third subtitle.",
-        Alignment.ALIGN_CENTER, 0.45f, Cue.LINE_TYPE_FRACTION, Cue.ANCHOR_TYPE_END, Cue.DIMEN_UNSET,
-        Cue.TYPE_UNSET, 0.35f);
-    assertCue(subtitle, 6, 6000000, 7000000, "This is the fourth subtitle.",
-        Alignment.ALIGN_CENTER, -11f, Cue.LINE_TYPE_NUMBER, Cue.TYPE_UNSET, Cue.DIMEN_UNSET,
-        Cue.TYPE_UNSET, Cue.DIMEN_UNSET);
-    assertCue(subtitle, 8, 7000000, 8000000, "This is the fifth subtitle.",
-        Alignment.ALIGN_OPPOSITE, Cue.DIMEN_UNSET, Cue.TYPE_UNSET, Cue.TYPE_UNSET, 0.1f,
-        Cue.ANCHOR_TYPE_END, 0.1f);
-    assertCue(subtitle, 10, 10000000, 11000000, "This is the sixth subtitle.",
-        Alignment.ALIGN_CENTER, 0.45f, Cue.LINE_TYPE_FRACTION, Cue.ANCHOR_TYPE_END, Cue.DIMEN_UNSET,
-        Cue.TYPE_UNSET, 0.35f);
-  }
-
-  public void testDecodeWithBadCueHeader() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(WITH_BAD_CUE_HEADER_FILE);
-
-    // Test event count.
-    assertEquals(4, subtitle.getEventTimeCount());
-
-    // Test cues.
-    assertCue(subtitle, 0, 0, 1234000, "This is the first subtitle.");
-    assertCue(subtitle, 2, 4000000, 5000000, "This is the third subtitle.");
-  }
-
-  public void testWebvttWithCssStyle() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(WITH_CSS_STYLES);
-
-    // Test event count.
-    assertEquals(8, subtitle.getEventTimeCount());
-
-    // Test cues.
-    assertCue(subtitle, 0, 0, 1234000, "This is the first subtitle.");
-    assertCue(subtitle, 2, 2345000, 3456000, "This is the second subtitle.");
-
-    Spanned s1 = getUniqueSpanTextAt(subtitle, 0);
-    Spanned s2 = getUniqueSpanTextAt(subtitle, 2345000);
-    Spanned s3 = getUniqueSpanTextAt(subtitle, 20000000);
-    Spanned s4 = getUniqueSpanTextAt(subtitle, 25000000);
-    assertEquals(1, s1.getSpans(0, s1.length(), ForegroundColorSpan.class).length);
-    assertEquals(1, s1.getSpans(0, s1.length(), BackgroundColorSpan.class).length);
-    assertEquals(2, s2.getSpans(0, s2.length(), ForegroundColorSpan.class).length);
-    assertEquals(1, s3.getSpans(10, s3.length(), UnderlineSpan.class).length);
-    assertEquals(2, s4.getSpans(0, 16, BackgroundColorSpan.class).length);
-    assertEquals(1, s4.getSpans(17, s4.length(), StyleSpan.class).length);
-    assertEquals(Typeface.BOLD, s4.getSpans(17, s4.length(), StyleSpan.class)[0].getStyle());
-  }
-
-  public void testWithComplexCssSelectors() throws IOException, SubtitleDecoderException {
-    WebvttSubtitle subtitle = getSubtitleForTestAsset(WITH_CSS_COMPLEX_SELECTORS);
-    Spanned text = getUniqueSpanTextAt(subtitle, 0);
-    assertEquals(1, text.getSpans(30, text.length(), ForegroundColorSpan.class).length);
-    assertEquals(0xFFEE82EE,
-        text.getSpans(30, text.length(), ForegroundColorSpan.class)[0].getForegroundColor());
-    assertEquals(1, text.getSpans(30, text.length(), TypefaceSpan.class).length);
-    assertEquals("courier", text.getSpans(30, text.length(), TypefaceSpan.class)[0].getFamily());
-
-    text = getUniqueSpanTextAt(subtitle, 2000000);
-    assertEquals(1, text.getSpans(5, text.length(), TypefaceSpan.class).length);
-    assertEquals("courier", text.getSpans(5, text.length(), TypefaceSpan.class)[0].getFamily());
-
-    text = getUniqueSpanTextAt(subtitle, 2500000);
-    assertEquals(1, text.getSpans(5, text.length(), StyleSpan.class).length);
-    assertEquals(Typeface.BOLD, text.getSpans(5, text.length(), StyleSpan.class)[0].getStyle());
-    assertEquals(1, text.getSpans(5, text.length(), TypefaceSpan.class).length);
-    assertEquals("courier", text.getSpans(5, text.length(), TypefaceSpan.class)[0].getFamily());
-
-    text = getUniqueSpanTextAt(subtitle, 4000000);
-    assertEquals(0, text.getSpans(6, 22, StyleSpan.class).length);
-    assertEquals(1, text.getSpans(30, text.length(), StyleSpan.class).length);
-    assertEquals(Typeface.BOLD, text.getSpans(30, text.length(), StyleSpan.class)[0].getStyle());
-
-    text = getUniqueSpanTextAt(subtitle, 5000000);
-    assertEquals(0, text.getSpans(9, 17, StyleSpan.class).length);
-    assertEquals(1, text.getSpans(19, text.length(), StyleSpan.class).length);
-    assertEquals(Typeface.ITALIC, text.getSpans(19, text.length(), StyleSpan.class)[0].getStyle());
-  }
-
-  private WebvttSubtitle getSubtitleForTestAsset(String asset) throws IOException,
-      SubtitleDecoderException {
-    WebvttDecoder decoder = new WebvttDecoder();
-    byte[] bytes = TestUtil.getByteArray(getInstrumentation(), asset);
-    return decoder.decode(bytes, bytes.length, false);
-  }
-
-  private Spanned getUniqueSpanTextAt(WebvttSubtitle sub, long timeUs) {
-    return (Spanned) sub.getCues(timeUs).get(0).text;
-  }
-
-  private static void assertCue(WebvttSubtitle subtitle, int eventTimeIndex, long startTimeUs,
-      int endTimeUs, String text) {
-    assertCue(subtitle, eventTimeIndex, startTimeUs, endTimeUs, text, null, Cue.DIMEN_UNSET,
-        Cue.TYPE_UNSET, Cue.TYPE_UNSET, Cue.DIMEN_UNSET, Cue.TYPE_UNSET, Cue.DIMEN_UNSET);
-  }
-
-  private static void assertCue(WebvttSubtitle subtitle, int eventTimeIndex, long startTimeUs,
-      int endTimeUs, String text, Alignment textAlignment, float line, int lineType, int lineAnchor,
-      float position, int positionAnchor, float size) {
-    assertEquals(startTimeUs, subtitle.getEventTime(eventTimeIndex));
-    assertEquals(endTimeUs, subtitle.getEventTime(eventTimeIndex + 1));
-    List<Cue> cues = subtitle.getCues(subtitle.getEventTime(eventTimeIndex));
-    assertEquals(1, cues.size());
-    // Assert cue properties.
-    Cue cue = cues.get(0);
-    assertEquals(text, cue.text.toString());
-    assertEquals(textAlignment, cue.textAlignment);
-    assertEquals(line, cue.line);
-    assertEquals(lineType, cue.lineType);
-    assertEquals(lineAnchor, cue.lineAnchor);
-    assertEquals(position, cue.position);
-    assertEquals(positionAnchor, cue.positionAnchor);
-    assertEquals(size, cue.size);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttSubtitleTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttSubtitleTest.java
deleted file mode 100644
index 164c6c149a..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/text/webvtt/WebvttSubtitleTest.java
+++ /dev/null
@@ -1,226 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.text.webvtt;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.text.Cue;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link WebvttSubtitle}.
- */
-public class WebvttSubtitleTest extends TestCase {
-
-  private static final String FIRST_SUBTITLE_STRING = "This is the first subtitle.";
-  private static final String SECOND_SUBTITLE_STRING = "This is the second subtitle.";
-  private static final String FIRST_AND_SECOND_SUBTITLE_STRING =
-      FIRST_SUBTITLE_STRING + "\n" + SECOND_SUBTITLE_STRING;
-
-  private static final WebvttSubtitle emptySubtitle = new WebvttSubtitle(
-      Collections.<WebvttCue>emptyList());
-
-  private static final WebvttSubtitle simpleSubtitle;
-  static {
-    ArrayList<WebvttCue> simpleSubtitleCues = new ArrayList<>();
-    WebvttCue firstCue = new WebvttCue(1000000, 2000000, FIRST_SUBTITLE_STRING);
-    simpleSubtitleCues.add(firstCue);
-    WebvttCue secondCue = new WebvttCue(3000000, 4000000, SECOND_SUBTITLE_STRING);
-    simpleSubtitleCues.add(secondCue);
-    simpleSubtitle = new WebvttSubtitle(simpleSubtitleCues);
-  }
-
-  private static final WebvttSubtitle overlappingSubtitle;
-  static {
-    ArrayList<WebvttCue> overlappingSubtitleCues = new ArrayList<>();
-    WebvttCue firstCue = new WebvttCue(1000000, 3000000, FIRST_SUBTITLE_STRING);
-    overlappingSubtitleCues.add(firstCue);
-    WebvttCue secondCue = new WebvttCue(2000000, 4000000, SECOND_SUBTITLE_STRING);
-    overlappingSubtitleCues.add(secondCue);
-    overlappingSubtitle = new WebvttSubtitle(overlappingSubtitleCues);
-  }
-
-  private static final WebvttSubtitle nestedSubtitle;
-  static {
-    ArrayList<WebvttCue> nestedSubtitleCues = new ArrayList<>();
-    WebvttCue firstCue = new WebvttCue(1000000, 4000000, FIRST_SUBTITLE_STRING);
-    nestedSubtitleCues.add(firstCue);
-    WebvttCue secondCue = new WebvttCue(2000000, 3000000, SECOND_SUBTITLE_STRING);
-    nestedSubtitleCues.add(secondCue);
-    nestedSubtitle = new WebvttSubtitle(nestedSubtitleCues);
-  }
-
-  public void testEventCount() {
-    assertEquals(0, emptySubtitle.getEventTimeCount());
-    assertEquals(4, simpleSubtitle.getEventTimeCount());
-    assertEquals(4, overlappingSubtitle.getEventTimeCount());
-    assertEquals(4, nestedSubtitle.getEventTimeCount());
-  }
-
-  public void testSimpleSubtitleEventTimes() {
-    testSubtitleEventTimesHelper(simpleSubtitle);
-  }
-
-  public void testSimpleSubtitleEventIndices() {
-    testSubtitleEventIndicesHelper(simpleSubtitle);
-  }
-
-  public void testSimpleSubtitleText() {
-    // Test before first subtitle
-    assertSingleCueEmpty(simpleSubtitle.getCues(0));
-    assertSingleCueEmpty(simpleSubtitle.getCues(500000));
-    assertSingleCueEmpty(simpleSubtitle.getCues(999999));
-
-    // Test first subtitle
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, simpleSubtitle.getCues(1000000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, simpleSubtitle.getCues(1500000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, simpleSubtitle.getCues(1999999));
-
-    // Test after first subtitle, before second subtitle
-    assertSingleCueEmpty(simpleSubtitle.getCues(2000000));
-    assertSingleCueEmpty(simpleSubtitle.getCues(2500000));
-    assertSingleCueEmpty(simpleSubtitle.getCues(2999999));
-
-    // Test second subtitle
-    assertSingleCueTextEquals(SECOND_SUBTITLE_STRING, simpleSubtitle.getCues(3000000));
-    assertSingleCueTextEquals(SECOND_SUBTITLE_STRING, simpleSubtitle.getCues(3500000));
-    assertSingleCueTextEquals(SECOND_SUBTITLE_STRING, simpleSubtitle.getCues(3999999));
-
-    // Test after second subtitle
-    assertSingleCueEmpty(simpleSubtitle.getCues(4000000));
-    assertSingleCueEmpty(simpleSubtitle.getCues(4500000));
-    assertSingleCueEmpty(simpleSubtitle.getCues(Long.MAX_VALUE));
-  }
-
-  public void testOverlappingSubtitleEventTimes() {
-    testSubtitleEventTimesHelper(overlappingSubtitle);
-  }
-
-  public void testOverlappingSubtitleEventIndices() {
-    testSubtitleEventIndicesHelper(overlappingSubtitle);
-  }
-
-  public void testOverlappingSubtitleText() {
-    // Test before first subtitle
-    assertSingleCueEmpty(overlappingSubtitle.getCues(0));
-    assertSingleCueEmpty(overlappingSubtitle.getCues(500000));
-    assertSingleCueEmpty(overlappingSubtitle.getCues(999999));
-
-    // Test first subtitle
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, overlappingSubtitle.getCues(1000000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, overlappingSubtitle.getCues(1500000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, overlappingSubtitle.getCues(1999999));
-
-    // Test after first and second subtitle
-    assertSingleCueTextEquals(FIRST_AND_SECOND_SUBTITLE_STRING,
-        overlappingSubtitle.getCues(2000000));
-    assertSingleCueTextEquals(FIRST_AND_SECOND_SUBTITLE_STRING,
-        overlappingSubtitle.getCues(2500000));
-    assertSingleCueTextEquals(FIRST_AND_SECOND_SUBTITLE_STRING,
-        overlappingSubtitle.getCues(2999999));
-
-    // Test second subtitle
-    assertSingleCueTextEquals(SECOND_SUBTITLE_STRING, overlappingSubtitle.getCues(3000000));
-    assertSingleCueTextEquals(SECOND_SUBTITLE_STRING, overlappingSubtitle.getCues(3500000));
-    assertSingleCueTextEquals(SECOND_SUBTITLE_STRING, overlappingSubtitle.getCues(3999999));
-
-    // Test after second subtitle
-    assertSingleCueEmpty(overlappingSubtitle.getCues(4000000));
-    assertSingleCueEmpty(overlappingSubtitle.getCues(4500000));
-    assertSingleCueEmpty(overlappingSubtitle.getCues(Long.MAX_VALUE));
-  }
-
-  public void testNestedSubtitleEventTimes() {
-    testSubtitleEventTimesHelper(nestedSubtitle);
-  }
-
-  public void testNestedSubtitleEventIndices() {
-    testSubtitleEventIndicesHelper(nestedSubtitle);
-  }
-
-  public void testNestedSubtitleText() {
-    // Test before first subtitle
-    assertSingleCueEmpty(nestedSubtitle.getCues(0));
-    assertSingleCueEmpty(nestedSubtitle.getCues(500000));
-    assertSingleCueEmpty(nestedSubtitle.getCues(999999));
-
-    // Test first subtitle
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, nestedSubtitle.getCues(1000000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, nestedSubtitle.getCues(1500000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, nestedSubtitle.getCues(1999999));
-
-    // Test after first and second subtitle
-    assertSingleCueTextEquals(FIRST_AND_SECOND_SUBTITLE_STRING, nestedSubtitle.getCues(2000000));
-    assertSingleCueTextEquals(FIRST_AND_SECOND_SUBTITLE_STRING, nestedSubtitle.getCues(2500000));
-    assertSingleCueTextEquals(FIRST_AND_SECOND_SUBTITLE_STRING, nestedSubtitle.getCues(2999999));
-
-    // Test first subtitle
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, nestedSubtitle.getCues(3000000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, nestedSubtitle.getCues(3500000));
-    assertSingleCueTextEquals(FIRST_SUBTITLE_STRING, nestedSubtitle.getCues(3999999));
-
-    // Test after second subtitle
-    assertSingleCueEmpty(nestedSubtitle.getCues(4000000));
-    assertSingleCueEmpty(nestedSubtitle.getCues(4500000));
-    assertSingleCueEmpty(nestedSubtitle.getCues(Long.MAX_VALUE));
-  }
-
-  private void testSubtitleEventTimesHelper(WebvttSubtitle subtitle) {
-    assertEquals(1000000, subtitle.getEventTime(0));
-    assertEquals(2000000, subtitle.getEventTime(1));
-    assertEquals(3000000, subtitle.getEventTime(2));
-    assertEquals(4000000, subtitle.getEventTime(3));
-  }
-
-  private void testSubtitleEventIndicesHelper(WebvttSubtitle subtitle) {
-    // Test first event
-    assertEquals(0, subtitle.getNextEventTimeIndex(0));
-    assertEquals(0, subtitle.getNextEventTimeIndex(500000));
-    assertEquals(0, subtitle.getNextEventTimeIndex(999999));
-
-    // Test second event
-    assertEquals(1, subtitle.getNextEventTimeIndex(1000000));
-    assertEquals(1, subtitle.getNextEventTimeIndex(1500000));
-    assertEquals(1, subtitle.getNextEventTimeIndex(1999999));
-
-    // Test third event
-    assertEquals(2, subtitle.getNextEventTimeIndex(2000000));
-    assertEquals(2, subtitle.getNextEventTimeIndex(2500000));
-    assertEquals(2, subtitle.getNextEventTimeIndex(2999999));
-
-    // Test fourth event
-    assertEquals(3, subtitle.getNextEventTimeIndex(3000000));
-    assertEquals(3, subtitle.getNextEventTimeIndex(3500000));
-    assertEquals(3, subtitle.getNextEventTimeIndex(3999999));
-
-    // Test null event (i.e. look for events after the last event)
-    assertEquals(C.INDEX_UNSET, subtitle.getNextEventTimeIndex(4000000));
-    assertEquals(C.INDEX_UNSET, subtitle.getNextEventTimeIndex(4500000));
-    assertEquals(C.INDEX_UNSET, subtitle.getNextEventTimeIndex(Long.MAX_VALUE));
-  }
-
-  private void assertSingleCueEmpty(List<Cue> cues) {
-    assertTrue(cues.size() == 0);
-  }
-
-  private void assertSingleCueTextEquals(String expected, List<Cue> cues) {
-    assertTrue(cues.size() == 1);
-    assertEquals(expected, cues.get(0).text.toString());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/trackselection/MappingTrackSelectorTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/trackselection/MappingTrackSelectorTest.java
deleted file mode 100644
index c31c651384..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/trackselection/MappingTrackSelectorTest.java
+++ /dev/null
@@ -1,196 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.trackselection;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.ExoPlaybackException;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.RendererCapabilities;
-import com.google.android.exoplayer2.source.TrackGroup;
-import com.google.android.exoplayer2.source.TrackGroupArray;
-import com.google.android.exoplayer2.util.MimeTypes;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link MappingTrackSelector}.
- */
-public final class MappingTrackSelectorTest extends TestCase {
-
-  private static final RendererCapabilities VIDEO_CAPABILITIES =
-      new FakeRendererCapabilities(C.TRACK_TYPE_VIDEO);
-  private static final RendererCapabilities AUDIO_CAPABILITIES =
-      new FakeRendererCapabilities(C.TRACK_TYPE_AUDIO);
-  private static final RendererCapabilities[] RENDERER_CAPABILITIES = new RendererCapabilities[] {
-      VIDEO_CAPABILITIES, AUDIO_CAPABILITIES
-  };
-
-  private static final TrackGroup VIDEO_TRACK_GROUP = new TrackGroup(
-      Format.createVideoSampleFormat("video", MimeTypes.VIDEO_H264, null, Format.NO_VALUE,
-          Format.NO_VALUE, 1024, 768, Format.NO_VALUE, null, null));
-  private static final TrackGroup AUDIO_TRACK_GROUP = new TrackGroup(
-      Format.createAudioSampleFormat("audio", MimeTypes.AUDIO_AAC, null, Format.NO_VALUE,
-          Format.NO_VALUE, 2, 44100, null, null, 0, null));
-  private static final TrackGroupArray TRACK_GROUPS = new TrackGroupArray(
-      VIDEO_TRACK_GROUP, AUDIO_TRACK_GROUP);
-
-  private static final TrackSelection[] TRACK_SELECTIONS = new TrackSelection[] {
-      new FixedTrackSelection(VIDEO_TRACK_GROUP, 0),
-      new FixedTrackSelection(AUDIO_TRACK_GROUP, 0)
-  };
-
-  /**
-   * Tests that the video and audio track groups are mapped onto the correct renderers.
-   */
-  public void testMapping() throws ExoPlaybackException {
-    FakeMappingTrackSelector trackSelector = new FakeMappingTrackSelector();
-    trackSelector.selectTracks(RENDERER_CAPABILITIES, TRACK_GROUPS);
-    trackSelector.assertMappedTrackGroups(0, VIDEO_TRACK_GROUP);
-    trackSelector.assertMappedTrackGroups(1, AUDIO_TRACK_GROUP);
-  }
-
-  /**
-   * Tests that the video and audio track groups are mapped onto the correct renderers when the
-   * renderer ordering is reversed.
-   */
-  public void testMappingReverseOrder() throws ExoPlaybackException {
-    FakeMappingTrackSelector trackSelector = new FakeMappingTrackSelector();
-    RendererCapabilities[] reverseOrderRendererCapabilities = new RendererCapabilities[] {
-        AUDIO_CAPABILITIES, VIDEO_CAPABILITIES};
-    trackSelector.selectTracks(reverseOrderRendererCapabilities, TRACK_GROUPS);
-    trackSelector.assertMappedTrackGroups(0, AUDIO_TRACK_GROUP);
-    trackSelector.assertMappedTrackGroups(1, VIDEO_TRACK_GROUP);
-  }
-
-  /**
-   * Tests video and audio track groups are mapped onto the correct renderers when there are
-   * multiple track groups of the same type.
-   */
-  public void testMappingMulti() throws ExoPlaybackException {
-    FakeMappingTrackSelector trackSelector = new FakeMappingTrackSelector();
-    TrackGroupArray multiTrackGroups = new TrackGroupArray(VIDEO_TRACK_GROUP, AUDIO_TRACK_GROUP,
-        VIDEO_TRACK_GROUP);
-    trackSelector.selectTracks(RENDERER_CAPABILITIES, multiTrackGroups);
-    trackSelector.assertMappedTrackGroups(0, VIDEO_TRACK_GROUP, VIDEO_TRACK_GROUP);
-    trackSelector.assertMappedTrackGroups(1, AUDIO_TRACK_GROUP);
-  }
-
-  /**
-   * Tests the result of {@link MappingTrackSelector#selectTracks(RendererCapabilities[],
-   * TrackGroupArray[], int[][][])} is propagated correctly to the result of
-   * {@link MappingTrackSelector#selectTracks(RendererCapabilities[], TrackGroupArray)}.
-   */
-  public void testSelectTracks() throws ExoPlaybackException {
-    FakeMappingTrackSelector trackSelector = new FakeMappingTrackSelector(TRACK_SELECTIONS);
-    TrackSelectorResult result = trackSelector.selectTracks(RENDERER_CAPABILITIES, TRACK_GROUPS);
-    assertEquals(TRACK_SELECTIONS[0], result.selections.get(0));
-    assertEquals(TRACK_SELECTIONS[1], result.selections.get(1));
-  }
-
-  /**
-   * Tests that a null override clears a track selection.
-   */
-  public void testSelectTracksWithNullOverride() throws ExoPlaybackException {
-    FakeMappingTrackSelector trackSelector = new FakeMappingTrackSelector(TRACK_SELECTIONS);
-    trackSelector.setSelectionOverride(0, new TrackGroupArray(VIDEO_TRACK_GROUP), null);
-    TrackSelectorResult result = trackSelector.selectTracks(RENDERER_CAPABILITIES, TRACK_GROUPS);
-    assertNull(result.selections.get(0));
-    assertEquals(TRACK_SELECTIONS[1], result.selections.get(1));
-  }
-
-  /**
-   * Tests that a null override can be cleared.
-   */
-  public void testSelectTracksWithClearedNullOverride() throws ExoPlaybackException {
-    FakeMappingTrackSelector trackSelector = new FakeMappingTrackSelector(TRACK_SELECTIONS);
-    trackSelector.setSelectionOverride(0, new TrackGroupArray(VIDEO_TRACK_GROUP), null);
-    trackSelector.clearSelectionOverride(0, new TrackGroupArray(VIDEO_TRACK_GROUP));
-    TrackSelectorResult result = trackSelector.selectTracks(RENDERER_CAPABILITIES, TRACK_GROUPS);
-    assertEquals(TRACK_SELECTIONS[0], result.selections.get(0));
-    assertEquals(TRACK_SELECTIONS[1], result.selections.get(1));
-  }
-
-  /**
-   * Tests that an override is not applied for a different set of available track groups.
-   */
-  public void testSelectTracksWithNullOverrideForDifferentTracks() throws ExoPlaybackException {
-    FakeMappingTrackSelector trackSelector = new FakeMappingTrackSelector(TRACK_SELECTIONS);
-    trackSelector.setSelectionOverride(0, new TrackGroupArray(VIDEO_TRACK_GROUP), null);
-    TrackSelectorResult result = trackSelector.selectTracks(RENDERER_CAPABILITIES,
-        new TrackGroupArray(VIDEO_TRACK_GROUP, AUDIO_TRACK_GROUP, VIDEO_TRACK_GROUP));
-    assertEquals(TRACK_SELECTIONS[0], result.selections.get(0));
-    assertEquals(TRACK_SELECTIONS[1], result.selections.get(1));
-  }
-
-  /**
-   * A {@link MappingTrackSelector} that returns a fixed result from
-   * {@link #selectTracks(RendererCapabilities[], TrackGroupArray[], int[][][])}.
-   */
-  private static final class FakeMappingTrackSelector extends MappingTrackSelector {
-
-    private final TrackSelection[] result;
-    private TrackGroupArray[] lastRendererTrackGroupArrays;
-
-    public FakeMappingTrackSelector(TrackSelection... result) {
-      this.result = result.length == 0 ? null : result;
-    }
-
-    @Override
-    protected TrackSelection[] selectTracks(RendererCapabilities[] rendererCapabilities,
-        TrackGroupArray[] rendererTrackGroupArrays, int[][][] rendererFormatSupports)
-        throws ExoPlaybackException {
-      lastRendererTrackGroupArrays = rendererTrackGroupArrays;
-      return result == null ? new TrackSelection[rendererCapabilities.length] : result;
-    }
-
-    public void assertMappedTrackGroups(int rendererIndex, TrackGroup... expected) {
-      assertEquals(expected.length, lastRendererTrackGroupArrays[rendererIndex].length);
-      for (int i = 0; i < expected.length; i++) {
-        assertEquals(expected[i], lastRendererTrackGroupArrays[rendererIndex].get(i));
-      }
-    }
-
-  }
-
-  /**
-   * A {@link RendererCapabilities} that advertises adaptive support for all tracks of a given type.
-   */
-  private static final class FakeRendererCapabilities implements RendererCapabilities {
-
-    private final int trackType;
-
-    public FakeRendererCapabilities(int trackType) {
-      this.trackType = trackType;
-    }
-
-    @Override
-    public int getTrackType() {
-      return trackType;
-    }
-
-    @Override
-    public int supportsFormat(Format format) throws ExoPlaybackException {
-      return MimeTypes.getTrackType(format.sampleMimeType) == trackType
-          ? (FORMAT_HANDLED | ADAPTIVE_SEAMLESS) : FORMAT_UNSUPPORTED_TYPE;
-    }
-
-    @Override
-    public int supportsMixedMimeTypeAdaptation() throws ExoPlaybackException {
-      return ADAPTIVE_SEAMLESS;
-    }
-
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/AssetDataSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/AssetDataSourceTest.java
deleted file mode 100644
index 102c89ec2b..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/AssetDataSourceTest.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream;
-
-import android.net.Uri;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.testutil.TestUtil;
-
-/**
- * Unit tests for {@link AssetDataSource}.
- */
-public final class AssetDataSourceTest extends InstrumentationTestCase {
-
-  private static final String DATA_PATH = "binary/1024_incrementing_bytes.mp3";
-
-  public void testReadFileUri() throws Exception {
-    AssetDataSource dataSource = new AssetDataSource(getInstrumentation().getContext());
-    DataSpec dataSpec = new DataSpec(Uri.parse("file:///android_asset/" + DATA_PATH));
-    TestUtil.assertDataSourceContent(dataSource, dataSpec,
-        TestUtil.getByteArray(getInstrumentation(), DATA_PATH));
-  }
-
-  public void testReadAssetUri() throws Exception {
-    AssetDataSource dataSource = new AssetDataSource(getInstrumentation().getContext());
-    DataSpec dataSpec = new DataSpec(Uri.parse("asset:///" + DATA_PATH));
-    TestUtil.assertDataSourceContent(dataSource, dataSpec,
-        TestUtil.getByteArray(getInstrumentation(), DATA_PATH));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/ByteArrayDataSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/ByteArrayDataSourceTest.java
deleted file mode 100644
index b805ccbdd5..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/ByteArrayDataSourceTest.java
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream;
-
-import com.google.android.exoplayer2.C;
-import java.io.IOException;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link ByteArrayDataSource}.
- */
-public class ByteArrayDataSourceTest extends TestCase {
-
-  private static final byte[] TEST_DATA = new byte[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
-  private static final byte[] TEST_DATA_ODD = new byte[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
-
-  public void testFullReadSingleBytes() {
-    readTestData(TEST_DATA, 0, C.LENGTH_UNSET, 1, 0, 1, false);
-  }
-
-  public void testFullReadAllBytes() {
-    readTestData(TEST_DATA, 0, C.LENGTH_UNSET, 100, 0, 100, false);
-  }
-
-  public void testLimitReadSingleBytes() {
-    // Limit set to the length of the data.
-    readTestData(TEST_DATA, 0, TEST_DATA.length, 1, 0, 1, false);
-    // And less.
-    readTestData(TEST_DATA, 0, 6, 1, 0, 1, false);
-  }
-
-  public void testFullReadTwoBytes() {
-    // Try with the total data length an exact multiple of the size of each individual read.
-    readTestData(TEST_DATA, 0, C.LENGTH_UNSET, 2, 0, 2, false);
-    // And not.
-    readTestData(TEST_DATA_ODD, 0, C.LENGTH_UNSET, 2, 0, 2, false);
-  }
-
-  public void testLimitReadTwoBytes() {
-    // Try with the limit an exact multiple of the size of each individual read.
-    readTestData(TEST_DATA, 0, 6, 2, 0, 2, false);
-    // And not.
-    readTestData(TEST_DATA, 0, 7, 2, 0, 2, false);
-  }
-
-  public void testReadFromValidOffsets() {
-    // Read from an offset without bound.
-    readTestData(TEST_DATA, 1, C.LENGTH_UNSET, 1, 0, 1, false);
-    // And with bound.
-    readTestData(TEST_DATA, 1, 6, 1, 0, 1, false);
-    // Read from the last possible offset without bound.
-    readTestData(TEST_DATA, TEST_DATA.length - 1, C.LENGTH_UNSET, 1, 0, 1, false);
-    // And with bound.
-    readTestData(TEST_DATA, TEST_DATA.length - 1, 1, 1, 0, 1, false);
-  }
-
-  public void testReadFromInvalidOffsets() {
-    // Read from first invalid offset and check failure without bound.
-    readTestData(TEST_DATA, TEST_DATA.length, C.LENGTH_UNSET, 1, 0, 1, true);
-    // And with bound.
-    readTestData(TEST_DATA, TEST_DATA.length, 1, 1, 0, 1, true);
-  }
-
-  public void testReadWithInvalidLength() {
-    // Read more data than is available.
-    readTestData(TEST_DATA, 0, TEST_DATA.length + 1, 1, 0, 1, true);
-    // And with bound.
-    readTestData(TEST_DATA, 1, TEST_DATA.length, 1, 0, 1, true);
-  }
-
-  /**
-   * Tests reading from a {@link ByteArrayDataSource} with various parameters.
-   *
-   * @param testData The data that the {@link ByteArrayDataSource} will wrap.
-   * @param dataOffset The offset from which to read data.
-   * @param dataLength The total length of data to read.
-   * @param outputBufferLength The length of the target buffer for each read.
-   * @param writeOffset The offset into {@code outputBufferLength} for each read.
-   * @param maxReadLength The maximum length of each read.
-   * @param expectFailOnOpen Whether it is expected that opening the source will fail.
-   */
-  private void readTestData(byte[] testData, int dataOffset, int dataLength, int outputBufferLength,
-      int writeOffset, int maxReadLength, boolean expectFailOnOpen) {
-    int expectedFinalBytesRead =
-        dataLength == C.LENGTH_UNSET ? (testData.length - dataOffset) : dataLength;
-    ByteArrayDataSource dataSource = new ByteArrayDataSource(testData);
-    boolean opened = false;
-    try {
-      // Open the source.
-      long length = dataSource.open(new DataSpec(null, dataOffset, dataLength, null));
-      opened = true;
-      assertFalse(expectFailOnOpen);
-
-      // Verify the resolved length is as we expect.
-      assertEquals(expectedFinalBytesRead, length);
-
-      byte[] outputBuffer = new byte[outputBufferLength];
-      int accumulatedBytesRead = 0;
-      while (true) {
-        // Calculate a valid length for the next read, constraining by the specified output buffer
-        // length, write offset and maximum write length input parameters.
-        int requestedReadLength = Math.min(maxReadLength, outputBufferLength - writeOffset);
-        assertTrue(requestedReadLength > 0);
-
-        int bytesRead = dataSource.read(outputBuffer, writeOffset, requestedReadLength);
-        if (bytesRead != C.RESULT_END_OF_INPUT) {
-          assertTrue(bytesRead > 0);
-          assertTrue(bytesRead <= requestedReadLength);
-          // Check the data read was correct.
-          for (int i = 0; i < bytesRead; i++) {
-            assertEquals(testData[dataOffset + accumulatedBytesRead + i],
-                outputBuffer[writeOffset + i]);
-          }
-          // Check that we haven't read more data than we were expecting.
-          accumulatedBytesRead += bytesRead;
-          assertTrue(accumulatedBytesRead <= expectedFinalBytesRead);
-          // If we haven't read all of the bytes the request should have been satisfied in full.
-          assertTrue(accumulatedBytesRead == expectedFinalBytesRead
-              || bytesRead == requestedReadLength);
-        } else {
-          // We're done. Check we read the expected number of bytes.
-          assertEquals(expectedFinalBytesRead, accumulatedBytesRead);
-          return;
-        }
-      }
-    } catch (IOException e) {
-      if (expectFailOnOpen && !opened) {
-        // Expected.
-        return;
-      }
-      // Unexpected failure.
-      fail();
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/ContentDataSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/ContentDataSourceTest.java
deleted file mode 100644
index 2b70c83ca5..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/ContentDataSourceTest.java
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream;
-
-import android.content.ContentProvider;
-import android.content.ContentResolver;
-import android.content.ContentValues;
-import android.content.res.AssetFileDescriptor;
-import android.database.Cursor;
-import android.net.Uri;
-import android.support.annotation.NonNull;
-import android.test.InstrumentationTestCase;
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.util.Arrays;
-
-/**
- * Unit tests for {@link ContentDataSource}.
- */
-public final class ContentDataSourceTest extends InstrumentationTestCase {
-
-  private static final String AUTHORITY = "com.google.android.exoplayer2.core.test";
-  private static final String DATA_PATH = "binary/1024_incrementing_bytes.mp3";
-
-  private static final int TEST_DATA_OFFSET = 1;
-  private static final int TEST_DATA_LENGTH = 1023;
-
-  public void testReadValidUri() throws Exception {
-    ContentDataSource dataSource = new ContentDataSource(getInstrumentation().getContext());
-    Uri contentUri = new Uri.Builder()
-        .scheme(ContentResolver.SCHEME_CONTENT)
-        .authority(AUTHORITY)
-        .path(DATA_PATH).build();
-    DataSpec dataSpec = new DataSpec(contentUri);
-    TestUtil.assertDataSourceContent(dataSource, dataSpec,
-        TestUtil.getByteArray(getInstrumentation(), DATA_PATH));
-  }
-
-  public void testReadInvalidUri() throws Exception {
-    ContentDataSource dataSource = new ContentDataSource(getInstrumentation().getContext());
-    Uri contentUri = new Uri.Builder()
-        .scheme(ContentResolver.SCHEME_CONTENT)
-        .authority(AUTHORITY)
-        .build();
-    DataSpec dataSpec = new DataSpec(contentUri);
-    try {
-      dataSource.open(dataSpec);
-      fail();
-    } catch (ContentDataSource.ContentDataSourceException e) {
-      // Expected.
-      assertTrue(e.getCause() instanceof FileNotFoundException);
-    } finally {
-      dataSource.close();
-    }
-  }
-
-  public void testReadFromOffsetToEndOfInput() throws Exception {
-    ContentDataSource dataSource = new ContentDataSource(getInstrumentation().getContext());
-    Uri contentUri = new Uri.Builder()
-        .scheme(ContentResolver.SCHEME_CONTENT)
-        .authority(AUTHORITY)
-        .path(DATA_PATH).build();
-    try {
-      DataSpec dataSpec = new DataSpec(contentUri, TEST_DATA_OFFSET, C.LENGTH_UNSET, null);
-      long length = dataSource.open(dataSpec);
-      assertEquals(TEST_DATA_LENGTH, length);
-      byte[] expectedData = Arrays.copyOfRange(
-          TestUtil.getByteArray(getInstrumentation(), DATA_PATH), TEST_DATA_OFFSET,
-          TEST_DATA_OFFSET + TEST_DATA_LENGTH);
-      byte[] readData = TestUtil.readToEnd(dataSource);
-      MoreAsserts.assertEquals(expectedData, readData);
-      assertEquals(C.RESULT_END_OF_INPUT, dataSource.read(new byte[1], 0, 1));
-    } finally {
-      dataSource.close();
-    }
-  }
-
-  /**
-   * A {@link ContentProvider} for the test.
-   */
-  public static final class TestContentProvider extends ContentProvider {
-
-    @Override
-    public boolean onCreate() {
-      return true;
-    }
-
-    @Override
-    public Cursor query(@NonNull Uri uri, String[] projection, String selection,
-        String[] selectionArgs, String sortOrder) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public AssetFileDescriptor openAssetFile(@NonNull Uri uri, @NonNull String mode)
-        throws FileNotFoundException {
-      if (uri.getPath() == null) {
-        return null;
-      }
-      try {
-        return getContext().getAssets().openFd(uri.getPath().replaceFirst("/", ""));
-      } catch (IOException e) {
-        FileNotFoundException exception = new FileNotFoundException(e.getMessage());
-        exception.initCause(e);
-        throw exception;
-      }
-    }
-
-    @Override
-    public String getType(@NonNull Uri uri) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public Uri insert(@NonNull Uri uri, ContentValues values) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int delete(@NonNull Uri uri, String selection,
-        String[] selectionArgs) {
-      throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public int update(@NonNull Uri uri, ContentValues values,
-        String selection, String[] selectionArgs) {
-      throw new UnsupportedOperationException();
-    }
-
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/DataSourceInputStreamTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/DataSourceInputStreamTest.java
deleted file mode 100644
index 38797ede66..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/DataSourceInputStreamTest.java
+++ /dev/null
@@ -1,101 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream;
-
-import android.net.Uri;
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.testutil.FakeDataSource;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link DataSourceInputStream}.
- */
-public class DataSourceInputStreamTest extends TestCase {
-
-  private static final byte[] TEST_DATA = TestUtil.buildTestData(16);
-
-  public void testReadSingleBytes() throws IOException {
-    DataSourceInputStream inputStream = buildTestInputStream();
-    // No bytes read yet.
-    assertEquals(0, inputStream.bytesRead());
-    // Read bytes.
-    for (int i = 0; i < TEST_DATA.length; i++) {
-      int readByte = inputStream.read();
-      assertTrue(0 <= readByte && readByte < 256);
-      assertEquals(TEST_DATA[i] & 0xFF, readByte);
-      assertEquals(i + 1, inputStream.bytesRead());
-    }
-    // Check end of stream.
-    assertEquals(-1, inputStream.read());
-    assertEquals(TEST_DATA.length, inputStream.bytesRead());
-    // Check close succeeds.
-    inputStream.close();
-  }
-
-  public void testRead() throws IOException {
-    DataSourceInputStream inputStream = buildTestInputStream();
-    // Read bytes.
-    byte[] readBytes = new byte[TEST_DATA.length];
-    int totalBytesRead = 0;
-    while (totalBytesRead < TEST_DATA.length) {
-      long bytesRead = inputStream.read(readBytes, totalBytesRead,
-          TEST_DATA.length - totalBytesRead);
-      assertTrue(bytesRead > 0);
-      totalBytesRead += bytesRead;
-      assertEquals(totalBytesRead, inputStream.bytesRead());
-    }
-    // Check the read data.
-    MoreAsserts.assertEquals(TEST_DATA, readBytes);
-    // Check end of stream.
-    assertEquals(TEST_DATA.length, inputStream.bytesRead());
-    assertEquals(TEST_DATA.length, totalBytesRead);
-    assertEquals(-1, inputStream.read());
-    // Check close succeeds.
-    inputStream.close();
-  }
-
-  public void testSkip() throws IOException {
-    DataSourceInputStream inputStream = buildTestInputStream();
-    // Skip bytes.
-    long totalBytesSkipped = 0;
-    while (totalBytesSkipped < TEST_DATA.length) {
-      long bytesSkipped = inputStream.skip(Long.MAX_VALUE);
-      assertTrue(bytesSkipped > 0);
-      totalBytesSkipped += bytesSkipped;
-      assertEquals(totalBytesSkipped, inputStream.bytesRead());
-    }
-    // Check end of stream.
-    assertEquals(TEST_DATA.length, inputStream.bytesRead());
-    assertEquals(TEST_DATA.length, totalBytesSkipped);
-    assertEquals(-1, inputStream.read());
-    // Check close succeeds.
-    inputStream.close();
-  }
-
-  private static DataSourceInputStream buildTestInputStream() {
-    FakeDataSource fakeDataSource = new FakeDataSource();
-    fakeDataSource.getDataSet().newDefaultData()
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 0, 5))
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 5, 10))
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 10, 15))
-        .appendReadData(Arrays.copyOfRange(TEST_DATA, 15, TEST_DATA.length));
-    return new DataSourceInputStream(fakeDataSource, new DataSpec(Uri.EMPTY));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheDataSourceTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheDataSourceTest.java
deleted file mode 100644
index e7ff2a6811..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheDataSourceTest.java
+++ /dev/null
@@ -1,215 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream.cache;
-
-import static com.google.android.exoplayer2.testutil.CacheAsserts.assertCacheEmpty;
-
-import android.net.Uri;
-import android.test.InstrumentationTestCase;
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.testutil.FakeDataSet.FakeData;
-import com.google.android.exoplayer2.testutil.FakeDataSource;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import com.google.android.exoplayer2.upstream.FileDataSource;
-import com.google.android.exoplayer2.util.Util;
-import java.io.File;
-import java.io.IOException;
-import java.util.Arrays;
-
-/**
- * Unit tests for {@link CacheDataSource}.
- */
-public class CacheDataSourceTest extends InstrumentationTestCase {
-
-  private static final byte[] TEST_DATA = new byte[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
-  private static final int MAX_CACHE_FILE_SIZE = 3;
-  private static final String KEY_1 = "key 1";
-  private static final String KEY_2 = "key 2";
-
-  private File tempFolder;
-  private SimpleCache cache;
-
-  @Override
-  public void setUp() throws Exception {
-    super.setUp();
-    tempFolder = Util.createTempDirectory(getInstrumentation().getContext(), "ExoPlayerTest");
-    cache = new SimpleCache(tempFolder, new NoOpCacheEvictor());
-  }
-
-  @Override
-  public void tearDown() throws Exception {
-    Util.recursiveDelete(tempFolder);
-    super.tearDown();
-  }
-
-  public void testMaxCacheFileSize() throws Exception {
-    CacheDataSource cacheDataSource = createCacheDataSource(false, false);
-    assertReadDataContentLength(cacheDataSource, false, false);
-    for (String key : cache.getKeys()) {
-      for (CacheSpan cacheSpan : cache.getCachedSpans(key)) {
-        assertTrue(cacheSpan.length <= MAX_CACHE_FILE_SIZE);
-        assertTrue(cacheSpan.file.length() <= MAX_CACHE_FILE_SIZE);
-      }
-    }
-  }
-
-  public void testCacheAndRead() throws Exception {
-    assertCacheAndRead(false, false);
-  }
-
-  public void testCacheAndReadUnboundedRequest() throws Exception {
-    assertCacheAndRead(true, false);
-  }
-
-  public void testCacheAndReadUnknownLength() throws Exception {
-    assertCacheAndRead(false, true);
-  }
-
-  // Disabled test as we don't support caching of definitely unknown length content
-  public void disabledTestCacheAndReadUnboundedRequestUnknownLength() throws Exception {
-    assertCacheAndRead(true, true);
-  }
-
-  public void testUnsatisfiableRange() throws Exception {
-    // Bounded request but the content length is unknown. This forces all data to be cached but not
-    // the length
-    assertCacheAndRead(false, true);
-
-    // Now do an unbounded request. This will read all of the data from cache and then try to read
-    // more from upstream which will cause to a 416 so CDS will store the length.
-    CacheDataSource cacheDataSource = createCacheDataSource(true, true);
-    assertReadDataContentLength(cacheDataSource, true, true);
-
-    // If the user try to access off range then it should throw an IOException
-    try {
-      cacheDataSource = createCacheDataSource(false, false);
-      cacheDataSource.open(new DataSpec(Uri.EMPTY, TEST_DATA.length, 5, KEY_1));
-      fail();
-    } catch (IOException e) {
-      // success
-    }
-  }
-
-  public void testContentLengthEdgeCases() throws Exception {
-    // Read partial at EOS but don't cross it so length is unknown
-    CacheDataSource cacheDataSource = createCacheDataSource(false, true);
-    assertReadData(cacheDataSource, true, TEST_DATA.length - 2, 2);
-    assertEquals(C.LENGTH_UNSET, cache.getContentLength(KEY_1));
-
-    // Now do an unbounded request for whole data. This will cause a bounded request from upstream.
-    // End of data from upstream shouldn't be mixed up with EOS and cause length set wrong.
-    cacheDataSource = createCacheDataSource(false, true);
-    assertReadDataContentLength(cacheDataSource, true, true);
-
-    // Now the length set correctly do an unbounded request with offset
-    assertEquals(2, cacheDataSource.open(new DataSpec(Uri.EMPTY, TEST_DATA.length - 2,
-        C.LENGTH_UNSET, KEY_1)));
-
-    // An unbounded request with offset for not cached content
-    assertEquals(C.LENGTH_UNSET, cacheDataSource.open(new DataSpec(Uri.EMPTY, TEST_DATA.length - 2,
-        C.LENGTH_UNSET, KEY_2)));
-  }
-
-  public void testIgnoreCacheForUnsetLengthRequests() throws Exception {
-    CacheDataSource cacheDataSource = createCacheDataSource(false, true,
-        CacheDataSource.FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS);
-    assertReadData(cacheDataSource, true, 0, C.LENGTH_UNSET);
-    MoreAsserts.assertEmpty(cache.getKeys());
-  }
-
-  public void testReadOnlyCache() throws Exception {
-    CacheDataSource cacheDataSource = createCacheDataSource(false, false, 0, null);
-    assertReadDataContentLength(cacheDataSource, false, false);
-    assertCacheEmpty(cache);
-  }
-
-  private void assertCacheAndRead(boolean unboundedRequest, boolean simulateUnknownLength)
-      throws IOException {
-    // Read all data from upstream and write to cache
-    CacheDataSource cacheDataSource = createCacheDataSource(false, simulateUnknownLength);
-    assertReadDataContentLength(cacheDataSource, unboundedRequest, simulateUnknownLength);
-
-    // Just read from cache
-    cacheDataSource = createCacheDataSource(true, simulateUnknownLength);
-    assertReadDataContentLength(cacheDataSource, unboundedRequest,
-        false /*length is already cached*/);
-  }
-
-  /**
-   * Reads data until EOI and compares it to {@link #TEST_DATA}. Also checks content length returned
-   * from open() call and the cached content length.
-   */
-  private void assertReadDataContentLength(CacheDataSource cacheDataSource,
-      boolean unboundedRequest, boolean unknownLength) throws IOException {
-    int length = unboundedRequest ? C.LENGTH_UNSET : TEST_DATA.length;
-    assertReadData(cacheDataSource, unknownLength, 0, length);
-    assertEquals("When the range specified, CacheDataSource doesn't reach EOS so shouldn't cache "
-        + "content length", !unboundedRequest ? C.LENGTH_UNSET : TEST_DATA.length,
-        cache.getContentLength(KEY_1));
-  }
-
-  private void assertReadData(CacheDataSource cacheDataSource, boolean unknownLength, int position,
-      int length) throws IOException {
-    int testDataLength = TEST_DATA.length - position;
-    if (length != C.LENGTH_UNSET) {
-      testDataLength = Math.min(testDataLength, length);
-    }
-    assertEquals(unknownLength ? length : testDataLength,
-        cacheDataSource.open(new DataSpec(Uri.EMPTY, position, length, KEY_1)));
-
-    byte[] buffer = new byte[100];
-    int totalBytesRead = 0;
-    while (true) {
-      int read = cacheDataSource.read(buffer, totalBytesRead, buffer.length - totalBytesRead);
-      if (read == C.RESULT_END_OF_INPUT) {
-        break;
-      }
-      totalBytesRead += read;
-    }
-    assertEquals(testDataLength, totalBytesRead);
-    MoreAsserts.assertEquals(Arrays.copyOfRange(TEST_DATA, position, position + testDataLength),
-        Arrays.copyOf(buffer, totalBytesRead));
-
-    cacheDataSource.close();
-  }
-
-  private CacheDataSource createCacheDataSource(boolean setReadException,
-      boolean simulateUnknownLength) {
-    return createCacheDataSource(setReadException, simulateUnknownLength,
-        CacheDataSource.FLAG_BLOCK_ON_CACHE);
-  }
-
-  private CacheDataSource createCacheDataSource(boolean setReadException,
-      boolean simulateUnknownLength, @CacheDataSource.Flags int flags) {
-    return createCacheDataSource(setReadException, simulateUnknownLength, flags,
-        new CacheDataSink(cache, MAX_CACHE_FILE_SIZE));
-  }
-
-  private CacheDataSource createCacheDataSource(boolean setReadException,
-      boolean simulateUnknownLength, @CacheDataSource.Flags int flags,
-      CacheDataSink cacheWriteDataSink) {
-    FakeDataSource upstream = new FakeDataSource();
-    FakeData fakeData = upstream.getDataSet().newDefaultData()
-        .setSimulateUnknownLength(simulateUnknownLength).appendReadData(TEST_DATA);
-    if (setReadException) {
-      fakeData.appendReadError(new IOException("Shouldn't read from upstream"));
-    }
-    return new CacheDataSource(cache, upstream, new FileDataSource(), cacheWriteDataSink,
-        flags, null);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheDataSourceTest2.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheDataSourceTest2.java
deleted file mode 100644
index 7e8088f3be..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheDataSourceTest2.java
+++ /dev/null
@@ -1,183 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream.cache;
-
-import android.content.Context;
-import android.net.Uri;
-import android.test.AndroidTestCase;
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.testutil.FakeDataSource;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.upstream.DataSink;
-import com.google.android.exoplayer2.upstream.DataSource;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import com.google.android.exoplayer2.upstream.FileDataSource;
-import com.google.android.exoplayer2.upstream.cache.Cache.CacheException;
-import com.google.android.exoplayer2.upstream.crypto.AesCipherDataSink;
-import com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource;
-import com.google.android.exoplayer2.util.Util;
-import java.io.File;
-import java.io.IOException;
-import java.util.Arrays;
-import java.util.Random;
-
-/**
- * Additional tests for {@link CacheDataSource}.
- */
-public class CacheDataSourceTest2 extends AndroidTestCase {
-
-  private static final String EXO_CACHE_DIR = "exo";
-  private static final int EXO_CACHE_MAX_FILESIZE = 128;
-
-  private static final Uri URI = Uri.parse("http://test.com/content");
-  private static final String KEY = "key";
-  private static final byte[] DATA = TestUtil.buildTestData(8 * EXO_CACHE_MAX_FILESIZE + 1);
-
-  // A DataSpec that covers the full file.
-  private static final DataSpec FULL = new DataSpec(URI, 0, DATA.length, KEY);
-
-  private static final int OFFSET_ON_BOUNDARY = EXO_CACHE_MAX_FILESIZE;
-  // A DataSpec that starts at 0 and extends to a cache file boundary.
-  private static final DataSpec END_ON_BOUNDARY = new DataSpec(URI, 0, OFFSET_ON_BOUNDARY, KEY);
-  // A DataSpec that starts on the same boundary and extends to the end of the file.
-  private static final DataSpec START_ON_BOUNDARY = new DataSpec(URI, OFFSET_ON_BOUNDARY,
-      DATA.length - OFFSET_ON_BOUNDARY, KEY);
-
-  private static final int OFFSET_OFF_BOUNDARY = EXO_CACHE_MAX_FILESIZE * 2 + 1;
-  // A DataSpec that starts at 0 and extends to just past a cache file boundary.
-  private static final DataSpec END_OFF_BOUNDARY = new DataSpec(URI, 0, OFFSET_OFF_BOUNDARY, KEY);
-  // A DataSpec that starts on the same boundary and extends to the end of the file.
-  private static final DataSpec START_OFF_BOUNDARY = new DataSpec(URI, OFFSET_OFF_BOUNDARY,
-      DATA.length - OFFSET_OFF_BOUNDARY, KEY);
-
-  public void testWithoutEncryption() throws IOException {
-    testReads(false);
-  }
-
-  public void testWithEncryption() throws IOException {
-    testReads(true);
-  }
-
-  private void testReads(boolean useEncryption) throws IOException {
-    FakeDataSource upstreamSource = buildFakeUpstreamSource();
-    CacheDataSource source = buildCacheDataSource(getContext(), upstreamSource, useEncryption);
-    // First read, should arrive from upstream.
-    testRead(END_ON_BOUNDARY, source);
-    assertSingleOpen(upstreamSource, 0, OFFSET_ON_BOUNDARY);
-    // Second read, should arrive from upstream.
-    testRead(START_OFF_BOUNDARY, source);
-    assertSingleOpen(upstreamSource, OFFSET_OFF_BOUNDARY, DATA.length);
-    // Second read, should arrive part from cache and part from upstream.
-    testRead(END_OFF_BOUNDARY, source);
-    assertSingleOpen(upstreamSource, OFFSET_ON_BOUNDARY, OFFSET_OFF_BOUNDARY);
-    // Third read, should arrive from cache.
-    testRead(FULL, source);
-    assertNoOpen(upstreamSource);
-    // Various reads, should all arrive from cache.
-    testRead(FULL, source);
-    assertNoOpen(upstreamSource);
-    testRead(START_ON_BOUNDARY, source);
-    assertNoOpen(upstreamSource);
-    testRead(END_ON_BOUNDARY, source);
-    assertNoOpen(upstreamSource);
-    testRead(START_OFF_BOUNDARY, source);
-    assertNoOpen(upstreamSource);
-    testRead(END_OFF_BOUNDARY, source);
-    assertNoOpen(upstreamSource);
-  }
-
-  private void testRead(DataSpec dataSpec, CacheDataSource source) throws IOException {
-    byte[] scratch = new byte[4096];
-    Random random = new Random(0);
-    source.open(dataSpec);
-    int position = (int) dataSpec.absoluteStreamPosition;
-    int bytesRead = 0;
-    while (bytesRead != C.RESULT_END_OF_INPUT) {
-      int maxBytesToRead = random.nextInt(scratch.length) + 1;
-      bytesRead = source.read(scratch, 0, maxBytesToRead);
-      if (bytesRead != C.RESULT_END_OF_INPUT) {
-        MoreAsserts.assertEquals(Arrays.copyOfRange(DATA, position, position + bytesRead),
-            Arrays.copyOf(scratch, bytesRead));
-        position += bytesRead;
-      }
-    }
-    source.close();
-  }
-
-  /**
-   * Asserts that a single {@link DataSource#open(DataSpec)} call has been made to the upstream
-   * source, with the specified start (inclusive) and end (exclusive) positions.
-   */
-  private void assertSingleOpen(FakeDataSource upstreamSource, int start, int end) {
-    DataSpec[] openedDataSpecs = upstreamSource.getAndClearOpenedDataSpecs();
-    assertEquals(1, openedDataSpecs.length);
-    assertEquals(start, openedDataSpecs[0].position);
-    assertEquals(start, openedDataSpecs[0].absoluteStreamPosition);
-    assertEquals(end - start, openedDataSpecs[0].length);
-  }
-
-  /**
-   * Asserts that the upstream source was not opened.
-   */
-  private void assertNoOpen(FakeDataSource upstreamSource) {
-    DataSpec[] openedDataSpecs = upstreamSource.getAndClearOpenedDataSpecs();
-    assertEquals(0, openedDataSpecs.length);
-  }
-
-  private static FakeDataSource buildFakeUpstreamSource() {
-    FakeDataSource fakeDataSource = new FakeDataSource();
-    fakeDataSource.getDataSet().newDefaultData().appendReadData(DATA);
-    return fakeDataSource;
-  }
-
-  private static CacheDataSource buildCacheDataSource(Context context, DataSource upstreamSource,
-      boolean useAesEncryption) throws CacheException {
-    File cacheDir = context.getExternalCacheDir();
-    Cache cache = new SimpleCache(new File(cacheDir, EXO_CACHE_DIR), new NoOpCacheEvictor());
-    emptyCache(cache);
-
-    // Source and cipher
-    final String secretKey = "testKey:12345678";
-    DataSource file = new FileDataSource();
-    DataSource cacheReadDataSource = useAesEncryption
-        ? new AesCipherDataSource(Util.getUtf8Bytes(secretKey), file) : file;
-
-    // Sink and cipher
-    CacheDataSink cacheSink = new CacheDataSink(cache, EXO_CACHE_MAX_FILESIZE);
-    byte[] scratch = new byte[3897];
-    DataSink cacheWriteDataSink = useAesEncryption
-        ? new AesCipherDataSink(Util.getUtf8Bytes(secretKey), cacheSink, scratch) : cacheSink;
-
-    return new CacheDataSource(cache,
-        upstreamSource,
-        cacheReadDataSource,
-        cacheWriteDataSink,
-        CacheDataSource.FLAG_BLOCK_ON_CACHE,
-        null); // eventListener
-  }
-
-  private static void emptyCache(Cache cache) throws CacheException {
-    for (String key : cache.getKeys()) {
-      for (CacheSpan span : cache.getCachedSpans(key)) {
-        cache.removeSpan(span);
-      }
-    }
-    // Sanity check that the cache really is empty now.
-    assertTrue(cache.getKeys().isEmpty());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheUtilTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheUtilTest.java
deleted file mode 100644
index df9975d43b..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CacheUtilTest.java
+++ /dev/null
@@ -1,291 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream.cache;
-
-import static com.google.android.exoplayer2.testutil.CacheAsserts.assertCacheEmpty;
-import static com.google.android.exoplayer2.testutil.CacheAsserts.assertCachedData;
-
-import android.net.Uri;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.testutil.FakeDataSet;
-import com.google.android.exoplayer2.testutil.FakeDataSource;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.upstream.DataSpec;
-import com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters;
-import com.google.android.exoplayer2.util.Util;
-import java.io.EOFException;
-import java.io.File;
-import org.mockito.Answers;
-import org.mockito.Mock;
-
-/**
- * Tests {@link CacheUtil}.
- */
-public class CacheUtilTest extends InstrumentationTestCase {
-
-  /**
-   * Abstract fake Cache implementation used by the test. This class must be public so Mockito can
-   * create a proxy for it.
-   */
-  public abstract static class AbstractFakeCache implements Cache {
-
-    // This array is set to alternating length of cached and not cached regions in tests:
-    // spansAndGaps = {<length of 1st cached region>, <length of 1st not cached region>,
-    //    <length of 2nd cached region>, <length of 2nd not cached region>, ... }
-    // Ideally it should end with a cached region but it shouldn't matter for any code.
-    private int[] spansAndGaps;
-    private long contentLength;
-
-    private void init() {
-      spansAndGaps = new int[] {};
-      contentLength = C.LENGTH_UNSET;
-    }
-
-    @Override
-    public long getCachedBytes(String key, long position, long length) {
-      for (int i = 0; i < spansAndGaps.length; i++) {
-        int spanOrGap = spansAndGaps[i];
-        if (position < spanOrGap) {
-          long left = Math.min(spanOrGap - position, length);
-          return (i & 1) == 1 ? -left : left;
-        }
-        position -= spanOrGap;
-      }
-      return -length;
-    }
-
-    @Override
-    public long getContentLength(String key) {
-      return contentLength;
-    }
-  }
-
-  @Mock(answer = Answers.CALLS_REAL_METHODS) private AbstractFakeCache mockCache;
-  private File tempFolder;
-  private SimpleCache cache;
-
-  @Override
-  public void setUp() throws Exception {
-    super.setUp();
-    TestUtil.setUpMockito(this);
-    mockCache.init();
-    tempFolder = Util.createTempDirectory(getInstrumentation().getContext(), "ExoPlayerTest");
-    cache = new SimpleCache(tempFolder, new NoOpCacheEvictor());
-  }
-
-  @Override
-  public void tearDown() throws Exception {
-    Util.recursiveDelete(tempFolder);
-    super.tearDown();
-  }
-
-  public void testGenerateKey() throws Exception {
-    assertNotNull(CacheUtil.generateKey(Uri.EMPTY));
-
-    Uri testUri = Uri.parse("test");
-    String key = CacheUtil.generateKey(testUri);
-    assertNotNull(key);
-
-    // Should generate the same key for the same input
-    assertEquals(key, CacheUtil.generateKey(testUri));
-
-    // Should generate different key for different input
-    assertFalse(key.equals(CacheUtil.generateKey(Uri.parse("test2"))));
-  }
-
-  public void testGetKey() throws Exception {
-    Uri testUri = Uri.parse("test");
-    String key = "key";
-    // If DataSpec.key is present, returns it
-    assertEquals(key, CacheUtil.getKey(new DataSpec(testUri, 0, C.LENGTH_UNSET, key)));
-    // If not generates a new one using DataSpec.uri
-    assertEquals(CacheUtil.generateKey(testUri),
-        CacheUtil.getKey(new DataSpec(testUri, 0, C.LENGTH_UNSET, null)));
-  }
-
-  public void testGetCachedNoData() throws Exception {
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.getCached(new DataSpec(Uri.parse("test")), mockCache, counters);
-
-    assertCounters(counters, 0, 0, C.LENGTH_UNSET);
-  }
-
-  public void testGetCachedDataUnknownLength() throws Exception {
-    // Mock there is 100 bytes cached at the beginning
-    mockCache.spansAndGaps = new int[] {100};
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.getCached(new DataSpec(Uri.parse("test")), mockCache, counters);
-
-    assertCounters(counters, 100, 0, C.LENGTH_UNSET);
-  }
-
-  public void testGetCachedNoDataKnownLength() throws Exception {
-    mockCache.contentLength = 1000;
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.getCached(new DataSpec(Uri.parse("test")), mockCache, counters);
-
-    assertCounters(counters, 0, 0, 1000);
-  }
-
-  public void testGetCached() throws Exception {
-    mockCache.contentLength = 1000;
-    mockCache.spansAndGaps = new int[] {100, 100, 200};
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.getCached(new DataSpec(Uri.parse("test")), mockCache, counters);
-
-    assertCounters(counters, 300, 0, 1000);
-  }
-
-  public void testCache() throws Exception {
-    FakeDataSet fakeDataSet = new FakeDataSet().setRandomData("test_data", 100);
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.cache(new DataSpec(Uri.parse("test_data")), cache, dataSource, counters);
-
-    assertCounters(counters, 0, 100, 100);
-    assertCachedData(cache, fakeDataSet);
-  }
-
-  public void testCacheSetOffsetAndLength() throws Exception {
-    FakeDataSet fakeDataSet = new FakeDataSet().setRandomData("test_data", 100);
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    Uri testUri = Uri.parse("test_data");
-    DataSpec dataSpec = new DataSpec(testUri, 10, 20, null);
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.cache(dataSpec, cache, dataSource, counters);
-
-    assertCounters(counters, 0, 20, 20);
-
-    CacheUtil.cache(new DataSpec(testUri), cache, dataSource, counters);
-
-    assertCounters(counters, 20, 80, 100);
-    assertCachedData(cache, fakeDataSet);
-  }
-
-  public void testCacheUnknownLength() throws Exception {
-    FakeDataSet fakeDataSet = new FakeDataSet().newData("test_data")
-        .setSimulateUnknownLength(true)
-        .appendReadData(TestUtil.buildTestData(100)).endData();
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    DataSpec dataSpec = new DataSpec(Uri.parse("test_data"));
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.cache(dataSpec, cache, dataSource, counters);
-
-    assertCounters(counters, 0, 100, 100);
-    assertCachedData(cache, fakeDataSet);
-  }
-
-  public void testCacheUnknownLengthPartialCaching() throws Exception {
-    FakeDataSet fakeDataSet = new FakeDataSet().newData("test_data")
-        .setSimulateUnknownLength(true)
-        .appendReadData(TestUtil.buildTestData(100)).endData();
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    Uri testUri = Uri.parse("test_data");
-    DataSpec dataSpec = new DataSpec(testUri, 10, 20, null);
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.cache(dataSpec, cache, dataSource, counters);
-
-    assertCounters(counters, 0, 20, 20);
-
-    CacheUtil.cache(new DataSpec(testUri), cache, dataSource, counters);
-
-    assertCounters(counters, 20, 80, 100);
-    assertCachedData(cache, fakeDataSet);
-  }
-
-  public void testCacheLengthExceedsActualDataLength() throws Exception {
-    FakeDataSet fakeDataSet = new FakeDataSet().setRandomData("test_data", 100);
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    Uri testUri = Uri.parse("test_data");
-    DataSpec dataSpec = new DataSpec(testUri, 0, 1000, null);
-    CachingCounters counters = new CachingCounters();
-    CacheUtil.cache(dataSpec, cache, dataSource, counters);
-
-    assertCounters(counters, 0, 100, 1000);
-    assertCachedData(cache, fakeDataSet);
-  }
-
-  public void testCacheThrowEOFException() throws Exception {
-    FakeDataSet fakeDataSet = new FakeDataSet().setRandomData("test_data", 100);
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    Uri testUri = Uri.parse("test_data");
-    DataSpec dataSpec = new DataSpec(testUri, 0, 1000, null);
-
-    try {
-      CacheUtil.cache(dataSpec, cache, new CacheDataSource(cache, dataSource),
-          new byte[CacheUtil.DEFAULT_BUFFER_SIZE_BYTES], null, 0, null,
-          /*enableEOFException*/ true);
-      fail();
-    } catch (EOFException e) {
-      // Do nothing.
-    }
-  }
-
-  public void testCachePolling() throws Exception {
-    final CachingCounters counters = new CachingCounters();
-    FakeDataSet fakeDataSet = new FakeDataSet().newData("test_data")
-        .appendReadData(TestUtil.buildTestData(100))
-        .appendReadAction(new Runnable() {
-          @Override
-          public void run() {
-            assertCounters(counters, 0, 100, 300);
-          }
-        })
-        .appendReadData(TestUtil.buildTestData(100))
-        .appendReadAction(new Runnable() {
-          @Override
-          public void run() {
-            assertCounters(counters, 0, 200, 300);
-          }
-        })
-        .appendReadData(TestUtil.buildTestData(100)).endData();
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    CacheUtil.cache(new DataSpec(Uri.parse("test_data")), cache, dataSource, counters);
-
-    assertCounters(counters, 0, 300, 300);
-    assertCachedData(cache, fakeDataSet);
-  }
-
-  public void testRemove() throws Exception {
-    FakeDataSet fakeDataSet = new FakeDataSet().setRandomData("test_data", 100);
-    FakeDataSource dataSource = new FakeDataSource(fakeDataSet);
-
-    Uri uri = Uri.parse("test_data");
-    CacheUtil.cache(new DataSpec(uri), cache,
-        // set maxCacheFileSize to 10 to make sure there are multiple spans
-        new CacheDataSource(cache, dataSource, 0, 10),
-        new byte[CacheUtil.DEFAULT_BUFFER_SIZE_BYTES], null, 0, null, true);
-    CacheUtil.remove(cache, CacheUtil.generateKey(uri));
-
-    assertCacheEmpty(cache);
-  }
-
-  private static void assertCounters(CachingCounters counters, int alreadyCachedBytes,
-      int newlyCachedBytes, int contentLength) {
-    assertEquals(alreadyCachedBytes, counters.alreadyCachedBytes);
-    assertEquals(newlyCachedBytes, counters.newlyCachedBytes);
-    assertEquals(contentLength, counters.contentLength);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CachedContentIndexTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CachedContentIndexTest.java
deleted file mode 100644
index 7f6e203c20..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CachedContentIndexTest.java
+++ /dev/null
@@ -1,232 +0,0 @@
-package com.google.android.exoplayer2.upstream.cache;
-
-import android.test.InstrumentationTestCase;
-import android.test.MoreAsserts;
-import android.util.SparseArray;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.util.Util;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.Set;
-import junit.framework.AssertionFailedError;
-
-/**
- * Tests {@link CachedContentIndex}.
- */
-public class CachedContentIndexTest extends InstrumentationTestCase {
-
-  private final byte[] testIndexV1File = {
-      0, 0, 0, 1, // version
-      0, 0, 0, 0, // flags
-      0, 0, 0, 2, // number_of_CachedContent
-      0, 0, 0, 5, // cache_id
-      0, 5, 65, 66, 67, 68, 69, // cache_key
-      0, 0, 0, 0, 0, 0, 0, 10, // original_content_length
-      0, 0, 0, 2, // cache_id
-      0, 5, 75, 76, 77, 78, 79, // cache_key
-      0, 0, 0, 0, 0, 0, 10, 0, // original_content_length
-      (byte) 0xF6, (byte) 0xFB, 0x50, 0x41 // hashcode_of_CachedContent_array
-  };
-  private CachedContentIndex index;
-  private File cacheDir;
-
-  @Override
-  public void setUp() throws Exception {
-    cacheDir = Util.createTempDirectory(getInstrumentation().getContext(), "ExoPlayerTest");
-    index = new CachedContentIndex(cacheDir);
-  }
-
-  @Override
-  protected void tearDown() throws Exception {
-    Util.recursiveDelete(cacheDir);
-  }
-
-  public void testAddGetRemove() throws Exception {
-    final String key1 = "key1";
-    final String key2 = "key2";
-    final String key3 = "key3";
-
-    // Add two CachedContents with add methods
-    CachedContent cachedContent1 = new CachedContent(5, key1, 10);
-    index.addNew(cachedContent1);
-    CachedContent cachedContent2 = index.add(key2);
-    assertTrue(cachedContent1.id != cachedContent2.id);
-
-    // add a span
-    File cacheSpanFile = SimpleCacheSpanTest
-        .createCacheSpanFile(cacheDir, cachedContent1.id, 10, 20, 30);
-    SimpleCacheSpan span = SimpleCacheSpan.createCacheEntry(cacheSpanFile, index);
-    assertNotNull(span);
-    cachedContent1.addSpan(span);
-
-    // Check if they are added and get method returns null if the key isn't found
-    assertEquals(cachedContent1, index.get(key1));
-    assertEquals(cachedContent2, index.get(key2));
-    assertNull(index.get(key3));
-
-    // test getAll()
-    Collection<CachedContent> cachedContents = index.getAll();
-    assertEquals(2, cachedContents.size());
-    assertTrue(Arrays.asList(cachedContent1, cachedContent2).containsAll(cachedContents));
-
-    // test getKeys()
-    Set<String> keys = index.getKeys();
-    assertEquals(2, keys.size());
-    assertTrue(Arrays.asList(key1, key2).containsAll(keys));
-
-    // test getKeyForId()
-    assertEquals(key1, index.getKeyForId(cachedContent1.id));
-    assertEquals(key2, index.getKeyForId(cachedContent2.id));
-
-    // test remove()
-    index.removeEmpty(key2);
-    index.removeEmpty(key3);
-    assertEquals(cachedContent1, index.get(key1));
-    assertNull(index.get(key2));
-    assertTrue(cacheSpanFile.exists());
-
-    // test removeEmpty()
-    index.addNew(cachedContent2);
-    index.removeEmpty();
-    assertEquals(cachedContent1, index.get(key1));
-    assertNull(index.get(key2));
-    assertTrue(cacheSpanFile.exists());
-  }
-
-  public void testStoreAndLoad() throws Exception {
-    assertStoredAndLoadedEqual(index, new CachedContentIndex(cacheDir));
-  }
-
-  public void testLoadV1() throws Exception {
-    FileOutputStream fos = new FileOutputStream(new File(cacheDir, CachedContentIndex.FILE_NAME));
-    fos.write(testIndexV1File);
-    fos.close();
-
-    index.load();
-    assertEquals(2, index.getAll().size());
-    assertEquals(5, index.assignIdForKey("ABCDE"));
-    assertEquals(10, index.getContentLength("ABCDE"));
-    assertEquals(2, index.assignIdForKey("KLMNO"));
-    assertEquals(2560, index.getContentLength("KLMNO"));
-  }
-
-  public void testStoreV1() throws Exception {
-    index.addNew(new CachedContent(2, "KLMNO", 2560));
-    index.addNew(new CachedContent(5, "ABCDE", 10));
-
-    index.store();
-
-    byte[] buffer = new byte[testIndexV1File.length];
-    FileInputStream fos = new FileInputStream(new File(cacheDir, CachedContentIndex.FILE_NAME));
-    assertEquals(testIndexV1File.length, fos.read(buffer));
-    assertEquals(-1, fos.read());
-    fos.close();
-
-    // TODO: The order of the CachedContent stored in index file isn't defined so this test may fail
-    // on a different implementation of the underlying set
-    MoreAsserts.assertEquals(testIndexV1File, buffer);
-  }
-
-  public void testAssignIdForKeyAndGetKeyForId() throws Exception {
-    final String key1 = "key1";
-    final String key2 = "key2";
-    int id1 = index.assignIdForKey(key1);
-    int id2 = index.assignIdForKey(key2);
-    assertEquals(key1, index.getKeyForId(id1));
-    assertEquals(key2, index.getKeyForId(id2));
-    assertTrue(id1 != id2);
-    assertEquals(id1, index.assignIdForKey(key1));
-    assertEquals(id2, index.assignIdForKey(key2));
-  }
-
-  public void testSetGetContentLength() throws Exception {
-    final String key1 = "key1";
-    assertEquals(C.LENGTH_UNSET, index.getContentLength(key1));
-    index.setContentLength(key1, 10);
-    assertEquals(10, index.getContentLength(key1));
-  }
-
-  public void testGetNewId() throws Exception {
-    SparseArray<String> idToKey = new SparseArray<>();
-    assertEquals(0, CachedContentIndex.getNewId(idToKey));
-    idToKey.put(10, "");
-    assertEquals(11, CachedContentIndex.getNewId(idToKey));
-    idToKey.put(Integer.MAX_VALUE, "");
-    assertEquals(0, CachedContentIndex.getNewId(idToKey));
-    idToKey.put(0, "");
-    assertEquals(1, CachedContentIndex.getNewId(idToKey));
-  }
-
-  public void testEncryption() throws Exception {
-    byte[] key = "Bar12345Bar12345".getBytes(C.UTF8_NAME); // 128 bit key
-    byte[] key2 = "Foo12345Foo12345".getBytes(C.UTF8_NAME); // 128 bit key
-
-    assertStoredAndLoadedEqual(new CachedContentIndex(cacheDir, key),
-        new CachedContentIndex(cacheDir, key));
-
-    // Rename the index file from the test above
-    File file1 = new File(cacheDir, CachedContentIndex.FILE_NAME);
-    File file2 = new File(cacheDir, "file2compare");
-    assertTrue(file1.renameTo(file2));
-
-    // Write a new index file
-    assertStoredAndLoadedEqual(new CachedContentIndex(cacheDir, key),
-        new CachedContentIndex(cacheDir, key));
-
-    assertEquals(file2.length(), file1.length());
-    // Assert file content is different
-    FileInputStream fis1 = new FileInputStream(file1);
-    FileInputStream fis2 = new FileInputStream(file2);
-    for (int b; (b = fis1.read()) == fis2.read(); ) {
-      assertTrue(b != -1);
-    }
-
-    boolean threw = false;
-    try {
-      assertStoredAndLoadedEqual(new CachedContentIndex(cacheDir, key),
-          new CachedContentIndex(cacheDir, key2));
-    } catch (AssertionFailedError e) {
-      threw = true;
-    }
-    assertTrue("Encrypted index file can not be read with different encryption key", threw);
-
-    try {
-      assertStoredAndLoadedEqual(new CachedContentIndex(cacheDir, key),
-          new CachedContentIndex(cacheDir));
-    } catch (AssertionFailedError e) {
-      threw = true;
-    }
-    assertTrue("Encrypted index file can not be read without encryption key", threw);
-
-    // Non encrypted index file can be read even when encryption key provided.
-    assertStoredAndLoadedEqual(new CachedContentIndex(cacheDir),
-        new CachedContentIndex(cacheDir, key));
-
-    // Test multiple store() calls
-    CachedContentIndex index = new CachedContentIndex(cacheDir, key);
-    index.addNew(new CachedContent(15, "key3", 110));
-    index.store();
-    assertStoredAndLoadedEqual(index, new CachedContentIndex(cacheDir, key));
-  }
-
-  private void assertStoredAndLoadedEqual(CachedContentIndex index, CachedContentIndex index2)
-      throws IOException {
-    index.addNew(new CachedContent(5, "key1", 10));
-    index.add("key2");
-    index.store();
-
-    index2.load();
-    Set<String> keys = index.getKeys();
-    Set<String> keys2 = index2.getKeys();
-    assertEquals(keys, keys2);
-    for (String key : keys) {
-      assertEquals(index.getContentLength(key), index2.getContentLength(key));
-      assertEquals(index.get(key).getSpans(), index2.get(key).getSpans());
-    }
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CachedRegionTrackerTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CachedRegionTrackerTest.java
deleted file mode 100644
index f2e199578c..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/CachedRegionTrackerTest.java
+++ /dev/null
@@ -1,127 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream.cache;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.extractor.ChunkIndex;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.util.Util;
-import java.io.File;
-import java.io.IOException;
-import org.mockito.Mock;
-
-/**
- * Tests for {@link CachedRegionTracker}.
- */
-public final class CachedRegionTrackerTest extends InstrumentationTestCase {
-
-  private static final String CACHE_KEY = "abc";
-  private static final long MS_IN_US = 1000;
-
-  // 5 chunks, each 20 bytes long and 100 ms long.
-  private static final ChunkIndex CHUNK_INDEX = new ChunkIndex(
-      new int[] {20, 20, 20, 20, 20},
-      new long[] {100, 120, 140, 160, 180},
-      new long[] {100 * MS_IN_US, 100 * MS_IN_US, 100 * MS_IN_US, 100 * MS_IN_US, 100 * MS_IN_US},
-      new long[] {0, 100 * MS_IN_US, 200 * MS_IN_US, 300 * MS_IN_US, 400 * MS_IN_US});
-
-  @Mock private Cache cache;
-  private CachedRegionTracker tracker;
-
-  private CachedContentIndex index;
-  private File cacheDir;
-
-  @Override
-  protected void setUp() throws Exception {
-    TestUtil.setUpMockito(this);
-
-    tracker = new CachedRegionTracker(cache, CACHE_KEY, CHUNK_INDEX);
-
-    cacheDir = Util.createTempDirectory(getInstrumentation().getContext(), "ExoPlayerTest");
-    index = new CachedContentIndex(cacheDir);
-  }
-
-  @Override
-  protected void tearDown() throws Exception {
-    Util.recursiveDelete(cacheDir);
-  }
-
-  public void testGetRegion_noSpansInCache() {
-    assertEquals(CachedRegionTracker.NOT_CACHED, tracker.getRegionEndTimeMs(100));
-    assertEquals(CachedRegionTracker.NOT_CACHED, tracker.getRegionEndTimeMs(150));
-  }
-
-  public void testGetRegion_fullyCached() throws Exception {
-    tracker.onSpanAdded(
-        cache,
-        newCacheSpan(100, 100));
-
-    assertEquals(CachedRegionTracker.CACHED_TO_END, tracker.getRegionEndTimeMs(101));
-    assertEquals(CachedRegionTracker.CACHED_TO_END, tracker.getRegionEndTimeMs(121));
-  }
-
-  public void testGetRegion_partiallyCached() throws Exception {
-    tracker.onSpanAdded(
-        cache,
-        newCacheSpan(100, 40));
-
-    assertEquals(200, tracker.getRegionEndTimeMs(101));
-    assertEquals(200, tracker.getRegionEndTimeMs(121));
-  }
-
-  public void testGetRegion_multipleSpanAddsJoinedCorrectly() throws Exception {
-    tracker.onSpanAdded(
-        cache,
-        newCacheSpan(100, 20));
-    tracker.onSpanAdded(
-        cache,
-        newCacheSpan(120, 20));
-
-    assertEquals(200, tracker.getRegionEndTimeMs(101));
-    assertEquals(200, tracker.getRegionEndTimeMs(121));
-  }
-
-  public void testGetRegion_fullyCachedThenPartiallyRemoved() throws Exception {
-    // Start with the full stream in cache.
-    tracker.onSpanAdded(
-        cache,
-        newCacheSpan(100, 100));
-
-    // Remove the middle bit.
-    tracker.onSpanRemoved(
-        cache,
-        newCacheSpan(140, 40));
-
-    assertEquals(200, tracker.getRegionEndTimeMs(101));
-    assertEquals(200, tracker.getRegionEndTimeMs(121));
-
-    assertEquals(CachedRegionTracker.CACHED_TO_END, tracker.getRegionEndTimeMs(181));
-  }
-
-  public void testGetRegion_subchunkEstimation() throws Exception {
-    tracker.onSpanAdded(
-        cache,
-        newCacheSpan(100, 10));
-
-    assertEquals(50, tracker.getRegionEndTimeMs(101));
-    assertEquals(CachedRegionTracker.NOT_CACHED, tracker.getRegionEndTimeMs(111));
-  }
-
-  private CacheSpan newCacheSpan(int position, int length) throws IOException {
-    return SimpleCacheSpanTest.createCacheSpan(index, cacheDir, CACHE_KEY, position, length, 0);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/SimpleCacheSpanTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/SimpleCacheSpanTest.java
deleted file mode 100644
index 8c684b1cb3..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/SimpleCacheSpanTest.java
+++ /dev/null
@@ -1,162 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream.cache;
-
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.util.Util;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.util.HashMap;
-import java.util.Set;
-import java.util.TreeSet;
-
-/**
- * Unit tests for {@link SimpleCacheSpan}.
- */
-public class SimpleCacheSpanTest extends InstrumentationTestCase {
-
-  private CachedContentIndex index;
-  private File cacheDir;
-
-  public static File createCacheSpanFile(File cacheDir, int id, long offset, int length,
-      long lastAccessTimestamp) throws IOException {
-    File cacheFile = SimpleCacheSpan.getCacheFile(cacheDir, id, offset, lastAccessTimestamp);
-    createTestFile(cacheFile, length);
-    return cacheFile;
-  }
-
-  public static CacheSpan createCacheSpan(CachedContentIndex index, File cacheDir, String key,
-      long offset, int length, long lastAccessTimestamp) throws IOException {
-    int id = index.assignIdForKey(key);
-    File cacheFile = createCacheSpanFile(cacheDir, id, offset, length, lastAccessTimestamp);
-    return SimpleCacheSpan.createCacheEntry(cacheFile, index);
-  }
-
-  @Override
-  protected void setUp() throws Exception {
-    cacheDir = Util.createTempDirectory(getInstrumentation().getContext(), "ExoPlayerTest");
-    index = new CachedContentIndex(cacheDir);
-  }
-
-  @Override
-  protected void tearDown() throws Exception {
-    Util.recursiveDelete(cacheDir);
-  }
-
-  public void testCacheFile() throws Exception {
-    assertCacheSpan("key1", 0, 0);
-    assertCacheSpan("key2", 1, 2);
-    assertCacheSpan("<>:\"/\\|?*%", 1, 2);
-    assertCacheSpan("key3", 1, 2);
-
-    assertNullCacheSpan(new File("parent"), "key4", -1, 2);
-    assertNullCacheSpan(new File("parent"), "key5", 1, -2);
-
-    assertCacheSpan(
-        "A newline (line feed) character \n"
-            + "A carriage-return character followed immediately by a newline character \r\n"
-            + "A standalone carriage-return character \r"
-            + "A next-line character \u0085"
-            + "A line-separator character \u2028"
-            + "A paragraph-separator character \u2029", 1, 2);
-  }
-
-  public void testUpgradeFileName() throws Exception {
-    String key = "asd\u00aa";
-    int id = index.assignIdForKey(key);
-    File v3file = createTestFile(id + ".0.1.v3.exo");
-    File v2file = createTestFile("asd%aa.1.2.v2.exo");
-    File wrongEscapedV2file = createTestFile("asd%za.3.4.v2.exo");
-    File v1File = createTestFile("asd\u00aa.5.6.v1.exo");
-
-    for (File file : cacheDir.listFiles()) {
-      SimpleCacheSpan cacheEntry = SimpleCacheSpan.createCacheEntry(file, index);
-      if (file.equals(wrongEscapedV2file)) {
-        assertNull(cacheEntry);
-      } else {
-        assertNotNull(cacheEntry);
-      }
-    }
-
-    assertTrue(v3file.exists());
-    assertFalse(v2file.exists());
-    assertTrue(wrongEscapedV2file.exists());
-    assertFalse(v1File.exists());
-
-    File[] files = cacheDir.listFiles();
-    assertEquals(4, files.length);
-
-    Set<String> keys = index.getKeys();
-    assertEquals("There should be only one key for all files.", 1, keys.size());
-    assertTrue(keys.contains(key));
-
-    TreeSet<SimpleCacheSpan> spans = index.get(key).getSpans();
-    assertTrue("upgradeOldFiles() shouldn't add any spans.", spans.isEmpty());
-
-    HashMap<Long, Long> cachedPositions = new HashMap<>();
-    for (File file : files) {
-      SimpleCacheSpan cacheSpan = SimpleCacheSpan.createCacheEntry(file, index);
-      if (cacheSpan != null) {
-        assertEquals(key, cacheSpan.key);
-        cachedPositions.put(cacheSpan.position, cacheSpan.lastAccessTimestamp);
-      }
-    }
-
-    assertEquals(1, (long) cachedPositions.get((long) 0));
-    assertEquals(2, (long) cachedPositions.get((long) 1));
-    assertEquals(6, (long) cachedPositions.get((long) 5));
-  }
-
-  private static void createTestFile(File file, int length) throws IOException {
-    FileOutputStream output = new FileOutputStream(file);
-    for (int i = 0; i < length; i++) {
-      output.write(i);
-    }
-    output.close();
-  }
-
-  private File createTestFile(String name) throws IOException {
-    File file = new File(cacheDir, name);
-    createTestFile(file, 1);
-    return file;
-  }
-
-  private void assertCacheSpan(String key, long offset, long lastAccessTimestamp)
-      throws IOException {
-    int id = index.assignIdForKey(key);
-    File cacheFile = createCacheSpanFile(cacheDir, id, offset, 1, lastAccessTimestamp);
-    SimpleCacheSpan cacheSpan = SimpleCacheSpan.createCacheEntry(cacheFile, index);
-    String message = cacheFile.toString();
-    assertNotNull(message, cacheSpan);
-    assertEquals(message, cacheDir, cacheFile.getParentFile());
-    assertEquals(message, key, cacheSpan.key);
-    assertEquals(message, offset, cacheSpan.position);
-    assertEquals(message, 1, cacheSpan.length);
-    assertTrue(message, cacheSpan.isCached);
-    assertEquals(message, cacheFile, cacheSpan.file);
-    assertEquals(message, lastAccessTimestamp, cacheSpan.lastAccessTimestamp);
-  }
-
-  private void assertNullCacheSpan(File parent, String key, long offset,
-      long lastAccessTimestamp) {
-    File cacheFile = SimpleCacheSpan.getCacheFile(parent, index.assignIdForKey(key), offset,
-        lastAccessTimestamp);
-    CacheSpan cacheSpan = SimpleCacheSpan.createCacheEntry(cacheFile, index);
-    assertNull(cacheFile.toString(), cacheSpan);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/SimpleCacheTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/SimpleCacheTest.java
deleted file mode 100644
index 1a6beeb6ba..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/cache/SimpleCacheTest.java
+++ /dev/null
@@ -1,266 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream.cache;
-
-import android.test.InstrumentationTestCase;
-import android.test.MoreAsserts;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.util.Util;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.util.NavigableSet;
-import java.util.Random;
-import java.util.Set;
-
-/**
- * Unit tests for {@link SimpleCache}.
- */
-public class SimpleCacheTest extends InstrumentationTestCase {
-
-  private static final String KEY_1 = "key1";
-
-  private File cacheDir;
-
-  @Override
-  protected void setUp() throws Exception {
-    cacheDir = Util.createTempDirectory(getInstrumentation().getContext(), "ExoPlayerTest");
-  }
-
-  @Override
-  protected void tearDown() throws Exception {
-    Util.recursiveDelete(cacheDir);
-  }
-
-  public void testCommittingOneFile() throws Exception {
-    SimpleCache simpleCache = getSimpleCache();
-
-    CacheSpan cacheSpan1 = simpleCache.startReadWrite(KEY_1, 0);
-    assertFalse(cacheSpan1.isCached);
-    assertTrue(cacheSpan1.isOpenEnded());
-
-    assertNull(simpleCache.startReadWriteNonBlocking(KEY_1, 0));
-
-    assertEquals(0, simpleCache.getKeys().size());
-    NavigableSet<CacheSpan> cachedSpans = simpleCache.getCachedSpans(KEY_1);
-    assertTrue(cachedSpans == null || cachedSpans.size() == 0);
-    assertEquals(0, simpleCache.getCacheSpace());
-    assertEquals(0, cacheDir.listFiles().length);
-
-    addCache(simpleCache, KEY_1, 0, 15);
-
-    Set<String> cachedKeys = simpleCache.getKeys();
-    assertEquals(1, cachedKeys.size());
-    assertTrue(cachedKeys.contains(KEY_1));
-    cachedSpans = simpleCache.getCachedSpans(KEY_1);
-    assertEquals(1, cachedSpans.size());
-    assertTrue(cachedSpans.contains(cacheSpan1));
-    assertEquals(15, simpleCache.getCacheSpace());
-
-    simpleCache.releaseHoleSpan(cacheSpan1);
-
-    CacheSpan cacheSpan2 = simpleCache.startReadWrite(KEY_1, 0);
-    assertTrue(cacheSpan2.isCached);
-    assertFalse(cacheSpan2.isOpenEnded());
-    assertEquals(15, cacheSpan2.length);
-    assertCachedDataReadCorrect(cacheSpan2);
-  }
-
-  public void testReadCacheWithoutReleasingWriteCacheSpan() throws Exception {
-    SimpleCache simpleCache = getSimpleCache();
-
-    CacheSpan cacheSpan1 = simpleCache.startReadWrite(KEY_1, 0);
-    addCache(simpleCache, KEY_1, 0, 15);
-    CacheSpan cacheSpan2 = simpleCache.startReadWrite(KEY_1, 0);
-    assertCachedDataReadCorrect(cacheSpan2);
-    simpleCache.releaseHoleSpan(cacheSpan1);
-  }
-
-  public void testSetGetLength() throws Exception {
-    SimpleCache simpleCache = getSimpleCache();
-
-    assertEquals(C.LENGTH_UNSET, simpleCache.getContentLength(KEY_1));
-    simpleCache.setContentLength(KEY_1, 15);
-    assertEquals(15, simpleCache.getContentLength(KEY_1));
-
-    simpleCache.startReadWrite(KEY_1, 0);
-
-    addCache(simpleCache, KEY_1, 0, 15);
-
-    simpleCache.setContentLength(KEY_1, 150);
-    assertEquals(150, simpleCache.getContentLength(KEY_1));
-
-    addCache(simpleCache, KEY_1, 140, 10);
-
-    // Check if values are kept after cache is reloaded.
-    SimpleCache simpleCache2 = getSimpleCache();
-    Set<String> keys = simpleCache.getKeys();
-    Set<String> keys2 = simpleCache2.getKeys();
-    assertEquals(keys, keys2);
-    for (String key : keys) {
-      assertEquals(simpleCache.getContentLength(key), simpleCache2.getContentLength(key));
-      assertEquals(simpleCache.getCachedSpans(key), simpleCache2.getCachedSpans(key));
-    }
-
-    // Removing the last span shouldn't cause the length be change next time cache loaded
-    SimpleCacheSpan lastSpan = simpleCache2.startReadWrite(KEY_1, 145);
-    simpleCache2.removeSpan(lastSpan);
-    simpleCache2 = getSimpleCache();
-    assertEquals(150, simpleCache2.getContentLength(KEY_1));
-  }
-
-  public void testReloadCache() throws Exception {
-    SimpleCache simpleCache = getSimpleCache();
-
-    // write data
-    CacheSpan cacheSpan1 = simpleCache.startReadWrite(KEY_1, 0);
-    addCache(simpleCache, KEY_1, 0, 15);
-    simpleCache.releaseHoleSpan(cacheSpan1);
-
-    // Reload cache
-    simpleCache = getSimpleCache();
-
-    // read data back
-    CacheSpan cacheSpan2 = simpleCache.startReadWrite(KEY_1, 0);
-    assertCachedDataReadCorrect(cacheSpan2);
-  }
-
-  public void testEncryptedIndex() throws Exception {
-    byte[] key = "Bar12345Bar12345".getBytes(C.UTF8_NAME); // 128 bit key
-    SimpleCache simpleCache = getEncryptedSimpleCache(key);
-
-    // write data
-    CacheSpan cacheSpan1 = simpleCache.startReadWrite(KEY_1, 0);
-    addCache(simpleCache, KEY_1, 0, 15);
-    simpleCache.releaseHoleSpan(cacheSpan1);
-
-    // Reload cache
-    simpleCache = getEncryptedSimpleCache(key);
-
-    // read data back
-    CacheSpan cacheSpan2 = simpleCache.startReadWrite(KEY_1, 0);
-    assertCachedDataReadCorrect(cacheSpan2);
-  }
-
-  public void testEncryptedIndexWrongKey() throws Exception {
-    byte[] key = "Bar12345Bar12345".getBytes(C.UTF8_NAME); // 128 bit key
-    SimpleCache simpleCache = getEncryptedSimpleCache(key);
-
-    // write data
-    CacheSpan cacheSpan1 = simpleCache.startReadWrite(KEY_1, 0);
-    addCache(simpleCache, KEY_1, 0, 15);
-    simpleCache.releaseHoleSpan(cacheSpan1);
-
-    // Reload cache
-    byte[] key2 = "Foo12345Foo12345".getBytes(C.UTF8_NAME); // 128 bit key
-    simpleCache = getEncryptedSimpleCache(key2);
-
-    // Cache should be cleared
-    assertEquals(0, simpleCache.getKeys().size());
-    assertEquals(0, cacheDir.listFiles().length);
-  }
-
-  public void testEncryptedIndexLostKey() throws Exception {
-    byte[] key = "Bar12345Bar12345".getBytes(C.UTF8_NAME); // 128 bit key
-    SimpleCache simpleCache = getEncryptedSimpleCache(key);
-
-    // write data
-    CacheSpan cacheSpan1 = simpleCache.startReadWrite(KEY_1, 0);
-    addCache(simpleCache, KEY_1, 0, 15);
-    simpleCache.releaseHoleSpan(cacheSpan1);
-
-    // Reload cache
-    simpleCache = getSimpleCache();
-
-    // Cache should be cleared
-    assertEquals(0, simpleCache.getKeys().size());
-    assertEquals(0, cacheDir.listFiles().length);
-  }
-
-
-  public void testGetCachedBytes() throws Exception {
-    SimpleCache simpleCache = getSimpleCache();
-    CacheSpan cacheSpan = simpleCache.startReadWrite(KEY_1, 0);
-
-    // No cached bytes, returns -'length'
-    assertEquals(-100, simpleCache.getCachedBytes(KEY_1, 0, 100));
-
-    // Position value doesn't affect the return value
-    assertEquals(-100, simpleCache.getCachedBytes(KEY_1, 20, 100));
-
-    addCache(simpleCache, KEY_1, 0, 15);
-
-    // Returns the length of a single span
-    assertEquals(15, simpleCache.getCachedBytes(KEY_1, 0, 100));
-
-    // Value is capped by the 'length'
-    assertEquals(10, simpleCache.getCachedBytes(KEY_1, 0, 10));
-
-    addCache(simpleCache, KEY_1, 15, 35);
-
-    // Returns the length of two adjacent spans
-    assertEquals(50, simpleCache.getCachedBytes(KEY_1, 0, 100));
-
-    addCache(simpleCache, KEY_1, 60, 10);
-
-    // Not adjacent span doesn't affect return value
-    assertEquals(50, simpleCache.getCachedBytes(KEY_1, 0, 100));
-
-    // Returns length of hole up to the next cached span
-    assertEquals(-5, simpleCache.getCachedBytes(KEY_1, 55, 100));
-
-    simpleCache.releaseHoleSpan(cacheSpan);
-  }
-
-  private SimpleCache getSimpleCache() {
-    return new SimpleCache(cacheDir, new NoOpCacheEvictor());
-  }
-
-  private SimpleCache getEncryptedSimpleCache(byte[] secretKey) {
-    return new SimpleCache(cacheDir, new NoOpCacheEvictor(), secretKey);
-  }
-
-  private static void addCache(SimpleCache simpleCache, String key, int position, int length)
-      throws IOException {
-    File file = simpleCache.startFile(key, position, length);
-    FileOutputStream fos = new FileOutputStream(file);
-    try {
-      fos.write(generateData(key, position, length));
-    } finally {
-      fos.close();
-    }
-    simpleCache.commitFile(file);
-  }
-
-  private static void assertCachedDataReadCorrect(CacheSpan cacheSpan) throws IOException {
-    assertTrue(cacheSpan.isCached);
-    byte[] expected = generateData(cacheSpan.key, (int) cacheSpan.position, (int) cacheSpan.length);
-    FileInputStream inputStream = new FileInputStream(cacheSpan.file);
-    try {
-      MoreAsserts.assertEquals(expected, Util.toByteArray(inputStream));
-    } finally {
-      inputStream.close();
-    }
-  }
-
-  private static byte[] generateData(String key, int position, int length) {
-    byte[] bytes = new byte[length];
-    new Random((long) (key.hashCode() ^ position)).nextBytes(bytes);
-    return bytes;
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/crypto/AesFlushingCipherTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/crypto/AesFlushingCipherTest.java
deleted file mode 100644
index b4e7e6e7f6..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/upstream/crypto/AesFlushingCipherTest.java
+++ /dev/null
@@ -1,186 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.upstream.crypto;
-
-import com.google.android.exoplayer2.testutil.TestUtil;
-import com.google.android.exoplayer2.util.Util;
-import java.util.Random;
-import javax.crypto.Cipher;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link AesFlushingCipher}.
- */
-public class AesFlushingCipherTest extends TestCase {
-
-  private static final int DATA_LENGTH = 65536;
-  private static final byte[] KEY = Util.getUtf8Bytes("testKey:12345678");
-  private static final long NONCE = 0;
-  private static final long START_OFFSET = 11;
-  private static final long RANDOM_SEED = 0x12345678;
-
-  private AesFlushingCipher encryptCipher;
-  private AesFlushingCipher decryptCipher;
-
-  @Override
-  protected void setUp() {
-    encryptCipher = new AesFlushingCipher(Cipher.ENCRYPT_MODE, KEY, NONCE, START_OFFSET);
-    decryptCipher = new AesFlushingCipher(Cipher.DECRYPT_MODE, KEY, NONCE, START_OFFSET);
-  }
-
-  @Override
-  protected void tearDown() {
-    encryptCipher = null;
-    decryptCipher = null;
-  }
-
-  private long getMaxUnchangedBytesAllowedPostEncryption(long length) {
-    // Assuming that not more than 10% of the resultant bytes should be identical.
-    // The value of 10% is arbitrary, ciphers standards do not name a value.
-    return length / 10;
-  }
-
-  // Count the number of bytes that do not match.
-  private int getDifferingByteCount(byte[] data1, byte[] data2, int startOffset) {
-    int count = 0;
-    for (int i = startOffset; i < data1.length; i++) {
-      if (data1[i] != data2[i]) {
-        count++;
-      }
-    }
-    return count;
-  }
-
-  // Count the number of bytes that do not match.
-  private int getDifferingByteCount(byte[] data1, byte[] data2) {
-    return getDifferingByteCount(data1, data2, 0);
-  }
-
-  // Test a single encrypt and decrypt call
-  public void testSingle() {
-    byte[] reference = TestUtil.buildTestData(DATA_LENGTH);
-    byte[] data = reference.clone();
-
-    encryptCipher.updateInPlace(data, 0, data.length);
-    int unchangedByteCount = data.length - getDifferingByteCount(reference, data);
-    assertTrue(unchangedByteCount <= getMaxUnchangedBytesAllowedPostEncryption(data.length));
-
-    decryptCipher.updateInPlace(data, 0, data.length);
-    int differingByteCount = getDifferingByteCount(reference, data);
-    assertEquals(0, differingByteCount);
-  }
-
-  // Test several encrypt and decrypt calls, each aligned on a 16 byte block size
-  public void testAligned() {
-    byte[] reference = TestUtil.buildTestData(DATA_LENGTH);
-    byte[] data = reference.clone();
-    Random random = new Random(RANDOM_SEED);
-
-    int offset = 0;
-    while (offset < data.length) {
-      int bytes = (1 + random.nextInt(50)) * 16;
-      bytes = Math.min(bytes, data.length - offset);
-      assertEquals(0, bytes % 16);
-      encryptCipher.updateInPlace(data, offset, bytes);
-      offset += bytes;
-    }
-
-    int unchangedByteCount = data.length - getDifferingByteCount(reference, data);
-    assertTrue(unchangedByteCount <= getMaxUnchangedBytesAllowedPostEncryption(data.length));
-
-    offset = 0;
-    while (offset < data.length) {
-      int bytes = (1 + random.nextInt(50)) * 16;
-      bytes = Math.min(bytes, data.length - offset);
-      assertEquals(0, bytes % 16);
-      decryptCipher.updateInPlace(data, offset, bytes);
-      offset += bytes;
-    }
-
-    int differingByteCount = getDifferingByteCount(reference, data);
-    assertEquals(0, differingByteCount);
-  }
-
-  // Test several encrypt and decrypt calls, not aligned on block boundary
-  public void testUnAligned() {
-    byte[] reference = TestUtil.buildTestData(DATA_LENGTH);
-    byte[] data = reference.clone();
-    Random random = new Random(RANDOM_SEED);
-
-    // Encrypt
-    int offset = 0;
-    while (offset < data.length) {
-      int bytes = 1 + random.nextInt(4095);
-      bytes = Math.min(bytes, data.length - offset);
-      encryptCipher.updateInPlace(data, offset, bytes);
-      offset += bytes;
-    }
-
-    int unchangedByteCount = data.length - getDifferingByteCount(reference, data);
-    assertTrue(unchangedByteCount <= getMaxUnchangedBytesAllowedPostEncryption(data.length));
-
-    offset = 0;
-    while (offset < data.length) {
-      int bytes = 1 + random.nextInt(4095);
-      bytes = Math.min(bytes, data.length - offset);
-      decryptCipher.updateInPlace(data, offset, bytes);
-      offset += bytes;
-    }
-
-    int differingByteCount = getDifferingByteCount(reference, data);
-    assertEquals(0, differingByteCount);
-  }
-
-  // Test decryption starting from the middle of an encrypted block
-  public void testMidJoin() {
-    byte[] reference = TestUtil.buildTestData(DATA_LENGTH);
-    byte[] data = reference.clone();
-    Random random = new Random(RANDOM_SEED);
-
-    // Encrypt
-    int offset = 0;
-    while (offset < data.length) {
-      int bytes = 1 + random.nextInt(4095);
-      bytes = Math.min(bytes, data.length - offset);
-      encryptCipher.updateInPlace(data, offset, bytes);
-      offset += bytes;
-    }
-
-    // Verify
-    int unchangedByteCount = data.length - getDifferingByteCount(reference, data);
-    assertTrue(unchangedByteCount <= getMaxUnchangedBytesAllowedPostEncryption(data.length));
-
-    // Setup decryption from random location
-    offset = random.nextInt(4096);
-    decryptCipher = new AesFlushingCipher(Cipher.DECRYPT_MODE, KEY, NONCE, offset + START_OFFSET);
-    int remainingLength = data.length - offset;
-    int originalOffset = offset;
-
-    // Decrypt
-    while (remainingLength > 0) {
-      int bytes = 1 + random.nextInt(4095);
-      bytes = Math.min(bytes, remainingLength);
-      decryptCipher.updateInPlace(data, offset, bytes);
-      offset += bytes;
-      remainingLength -= bytes;
-    }
-
-    // Verify
-    int differingByteCount = getDifferingByteCount(reference, data, originalOffset);
-    assertEquals(0, differingByteCount);
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/AtomicFileTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/AtomicFileTest.java
deleted file mode 100644
index 6c5d7c76f7..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/AtomicFileTest.java
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.google.android.exoplayer2.util;
-
-import android.test.InstrumentationTestCase;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-
-/**
- * Tests {@link AtomicFile}.
- */
-public class AtomicFileTest extends InstrumentationTestCase {
-
-  private File tempFolder;
-  private File file;
-  private AtomicFile atomicFile;
-
-  @Override
-  public void setUp() throws Exception {
-    tempFolder = Util.createTempDirectory(getInstrumentation().getContext(), "ExoPlayerTest");
-    file = new File(tempFolder, "atomicFile");
-    atomicFile = new AtomicFile(file);
-  }
-
-  @Override
-  protected void tearDown() throws Exception {
-    Util.recursiveDelete(tempFolder);
-  }
-
-  public void testDelete() throws Exception {
-    assertTrue(file.createNewFile());
-    atomicFile.delete();
-    assertFalse(file.exists());
-  }
-
-  public void testWriteRead() throws Exception {
-    OutputStream output = atomicFile.startWrite();
-    output.write(5);
-    atomicFile.endWrite(output);
-    output.close();
-
-    assertRead();
-
-    output = atomicFile.startWrite();
-    output.write(5);
-    output.write(6);
-    output.close();
-
-    assertRead();
-
-    output = atomicFile.startWrite();
-    output.write(6);
-
-    assertRead();
-    output.close();
-
-    output = atomicFile.startWrite();
-
-    assertRead();
-    output.close();
-  }
-
-  private void assertRead() throws IOException {
-    InputStream input = atomicFile.openRead();
-    assertEquals(5, input.read());
-    assertEquals(-1, input.read());
-    input.close();
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ColorParserTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ColorParserTest.java
deleted file mode 100644
index 641b58b0ce..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ColorParserTest.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import android.graphics.Color;
-import android.test.InstrumentationTestCase;
-
-/**
- * Unit test for <code>ColorParser</code>.
- */
-public class ColorParserTest extends InstrumentationTestCase {
-
-  // Negative tests.
-
-  public void testParseUnknownColor() {
-    try {
-      ColorParser.parseTtmlColor("colorOfAnElectron");
-      fail();
-    } catch (IllegalArgumentException e) {
-      // expected
-    }
-  }
-
-  public void testParseNull() {
-    try {
-      ColorParser.parseTtmlColor(null);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // expected
-    }
-  }
-
-  public void testParseEmpty() {
-    try {
-      ColorParser.parseTtmlColor("");
-      fail();
-    } catch (IllegalArgumentException e) {
-      // expected
-    }
-  }
-
-  public void testRgbColorParsingRgbValuesNegative() {
-    try {
-      ColorParser.parseTtmlColor("rgb(-4, 55, 209)");
-      fail();
-    } catch (IllegalArgumentException e) {
-      // expected
-    }
-  }
-
-  // Positive tests.
-
-  public void testHexCodeParsing() {
-    assertEquals(Color.WHITE, ColorParser.parseTtmlColor("#FFFFFF"));
-    assertEquals(Color.WHITE, ColorParser.parseTtmlColor("#FFFFFFFF"));
-    assertEquals(Color.parseColor("#FF123456"), ColorParser.parseTtmlColor("#123456"));
-    // Hex colors in ColorParser are RGBA, where-as {@link Color#parseColor} takes ARGB.
-    assertEquals(Color.parseColor("#00FFFFFF"), ColorParser.parseTtmlColor("#FFFFFF00"));
-    assertEquals(Color.parseColor("#78123456"), ColorParser.parseTtmlColor("#12345678"));
-  }
-
-  public void testRgbColorParsing() {
-    assertEquals(Color.WHITE, ColorParser.parseTtmlColor("rgb(255,255,255)"));
-    // Spaces are ignored.
-    assertEquals(Color.WHITE, ColorParser.parseTtmlColor("   rgb (      255, 255, 255)"));
-  }
-
-  public void testRgbColorParsingRgbValuesOutOfBounds() {
-    int outOfBounds = ColorParser.parseTtmlColor("rgb(999, 999, 999)");
-    int color = Color.rgb(999, 999, 999);
-    // Behave like the framework does.
-    assertEquals(color, outOfBounds);
-  }
-
-  public void testRgbaColorParsing() {
-    assertEquals(Color.WHITE, ColorParser.parseTtmlColor("rgba(255,255,255,255)"));
-    assertEquals(Color.argb(255, 255, 255, 255),
-        ColorParser.parseTtmlColor("rgba(255,255,255,255)"));
-    assertEquals(Color.BLACK, ColorParser.parseTtmlColor("rgba(0, 0, 0, 255)"));
-    assertEquals(Color.argb(0, 0, 0, 255), ColorParser.parseTtmlColor("rgba(0, 0, 255, 0)"));
-    assertEquals(Color.RED, ColorParser.parseTtmlColor("rgba(255, 0, 0, 255)"));
-    assertEquals(Color.argb(0, 255, 0, 255), ColorParser.parseTtmlColor("rgba(255, 0, 255, 0)"));
-    assertEquals(Color.argb(205, 255, 0, 0), ColorParser.parseTtmlColor("rgba(255, 0, 0, 205)"));
-  }
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/NalUnitUtilTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/NalUnitUtilTest.java
deleted file mode 100644
index 286013e83a..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/NalUnitUtilTest.java
+++ /dev/null
@@ -1,206 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import static com.google.android.exoplayer2.testutil.TestUtil.createByteArray;
-
-import java.nio.ByteBuffer;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Tests for {@link NalUnitUtil}.
- */
-public class NalUnitUtilTest extends TestCase {
-
-  private static final int TEST_PARTIAL_NAL_POSITION = 4;
-  private static final int TEST_NAL_POSITION = 10;
-  private static final byte[] SPS_TEST_DATA = createByteArray(0x00, 0x00, 0x01, 0x67, 0x4D, 0x40,
-      0x16, 0xEC, 0xA0, 0x50, 0x17, 0xFC, 0xB8, 0x08, 0x80, 0x00, 0x00, 0x03, 0x00, 0x80, 0x00,
-      0x00, 0x0F, 0x47, 0x8B, 0x16, 0xCB);
-  private static final int SPS_TEST_DATA_OFFSET = 3;
-
-  public void testFindNalUnit() {
-    byte[] data = buildTestData();
-
-    // Should find NAL unit.
-    int result = NalUnitUtil.findNalUnit(data, 0, data.length, null);
-    assertEquals(TEST_NAL_POSITION, result);
-    // Should find NAL unit whose prefix ends one byte before the limit.
-    result = NalUnitUtil.findNalUnit(data, 0, TEST_NAL_POSITION + 4, null);
-    assertEquals(TEST_NAL_POSITION, result);
-    // Shouldn't find NAL unit whose prefix ends at the limit (since the limit is exclusive).
-    result = NalUnitUtil.findNalUnit(data, 0, TEST_NAL_POSITION + 3, null);
-    assertEquals(TEST_NAL_POSITION + 3, result);
-    // Should find NAL unit whose prefix starts at the offset.
-    result = NalUnitUtil.findNalUnit(data, TEST_NAL_POSITION, data.length, null);
-    assertEquals(TEST_NAL_POSITION, result);
-    // Shouldn't find NAL unit whose prefix starts one byte past the offset.
-    result = NalUnitUtil.findNalUnit(data, TEST_NAL_POSITION + 1, data.length, null);
-    assertEquals(data.length, result);
-  }
-
-  public void testFindNalUnitWithPrefix() {
-    byte[] data = buildTestData();
-
-    // First byte of NAL unit in data1, rest in data2.
-    boolean[] prefixFlags = new boolean[3];
-    byte[] data1 = Arrays.copyOfRange(data, 0, TEST_NAL_POSITION + 1);
-    byte[] data2 = Arrays.copyOfRange(data, TEST_NAL_POSITION + 1, data.length);
-    int result = NalUnitUtil.findNalUnit(data1, 0, data1.length, prefixFlags);
-    assertEquals(data1.length, result);
-    result = NalUnitUtil.findNalUnit(data2, 0, data2.length, prefixFlags);
-    assertEquals(-1, result);
-    assertPrefixFlagsCleared(prefixFlags);
-
-    // First three bytes of NAL unit in data1, rest in data2.
-    prefixFlags = new boolean[3];
-    data1 = Arrays.copyOfRange(data, 0, TEST_NAL_POSITION + 3);
-    data2 = Arrays.copyOfRange(data, TEST_NAL_POSITION + 3, data.length);
-    result = NalUnitUtil.findNalUnit(data1, 0, data1.length, prefixFlags);
-    assertEquals(data1.length, result);
-    result = NalUnitUtil.findNalUnit(data2, 0, data2.length, prefixFlags);
-    assertEquals(-3, result);
-    assertPrefixFlagsCleared(prefixFlags);
-
-    // First byte of NAL unit in data1, second byte in data2, rest in data3.
-    prefixFlags = new boolean[3];
-    data1 = Arrays.copyOfRange(data, 0, TEST_NAL_POSITION + 1);
-    data2 = Arrays.copyOfRange(data, TEST_NAL_POSITION + 1, TEST_NAL_POSITION + 2);
-    byte[] data3 = Arrays.copyOfRange(data, TEST_NAL_POSITION + 2, data.length);
-    result = NalUnitUtil.findNalUnit(data1, 0, data1.length, prefixFlags);
-    assertEquals(data1.length, result);
-    result = NalUnitUtil.findNalUnit(data2, 0, data2.length, prefixFlags);
-    assertEquals(data2.length, result);
-    result = NalUnitUtil.findNalUnit(data3, 0, data3.length, prefixFlags);
-    assertEquals(-2, result);
-    assertPrefixFlagsCleared(prefixFlags);
-
-    // NAL unit split with one byte in four arrays.
-    prefixFlags = new boolean[3];
-    data1 = Arrays.copyOfRange(data, 0, TEST_NAL_POSITION + 1);
-    data2 = Arrays.copyOfRange(data, TEST_NAL_POSITION + 1, TEST_NAL_POSITION + 2);
-    data3 = Arrays.copyOfRange(data, TEST_NAL_POSITION + 2, TEST_NAL_POSITION + 3);
-    byte[] data4 = Arrays.copyOfRange(data, TEST_NAL_POSITION + 2, data.length);
-    result = NalUnitUtil.findNalUnit(data1, 0, data1.length, prefixFlags);
-    assertEquals(data1.length, result);
-    result = NalUnitUtil.findNalUnit(data2, 0, data2.length, prefixFlags);
-    assertEquals(data2.length, result);
-    result = NalUnitUtil.findNalUnit(data3, 0, data3.length, prefixFlags);
-    assertEquals(data3.length, result);
-    result = NalUnitUtil.findNalUnit(data4, 0, data4.length, prefixFlags);
-    assertEquals(-3, result);
-    assertPrefixFlagsCleared(prefixFlags);
-
-    // NAL unit entirely in data2. data1 ends with partial prefix.
-    prefixFlags = new boolean[3];
-    data1 = Arrays.copyOfRange(data, 0, TEST_PARTIAL_NAL_POSITION + 2);
-    data2 = Arrays.copyOfRange(data, TEST_PARTIAL_NAL_POSITION + 2, data.length);
-    result = NalUnitUtil.findNalUnit(data1, 0, data1.length, prefixFlags);
-    assertEquals(data1.length, result);
-    result = NalUnitUtil.findNalUnit(data2, 0, data2.length, prefixFlags);
-    assertEquals(4, result);
-    assertPrefixFlagsCleared(prefixFlags);
-  }
-
-  public void testParseSpsNalUnit() {
-    NalUnitUtil.SpsData data = NalUnitUtil.parseSpsNalUnit(SPS_TEST_DATA, SPS_TEST_DATA_OFFSET,
-        SPS_TEST_DATA.length);
-    assertEquals(640, data.width);
-    assertEquals(360, data.height);
-    assertFalse(data.deltaPicOrderAlwaysZeroFlag);
-    assertTrue(data.frameMbsOnlyFlag);
-    assertEquals(4, data.frameNumLength);
-    assertEquals(6, data.picOrderCntLsbLength);
-    assertEquals(0, data.seqParameterSetId);
-    assertEquals(1.0f, data.pixelWidthAspectRatio);
-    assertEquals(0, data.picOrderCountType);
-    assertFalse(data.separateColorPlaneFlag);
-  }
-
-  public void testUnescapeDoesNotModifyBuffersWithoutStartCodes() {
-    assertUnescapeDoesNotModify("");
-    assertUnescapeDoesNotModify("0000");
-    assertUnescapeDoesNotModify("172BF38A3C");
-    assertUnescapeDoesNotModify("000004");
-  }
-
-  public void testUnescapeModifiesBuffersWithStartCodes() {
-    assertUnescapeMatchesExpected("00000301", "000001");
-    assertUnescapeMatchesExpected("0000030200000300", "000002000000");
-  }
-
-  public void testDiscardToSps() {
-    assertDiscardToSpsMatchesExpected("", "");
-    assertDiscardToSpsMatchesExpected("00", "");
-    assertDiscardToSpsMatchesExpected("FFFF000001", "");
-    assertDiscardToSpsMatchesExpected("00000001", "");
-    assertDiscardToSpsMatchesExpected("00000001FF67", "");
-    assertDiscardToSpsMatchesExpected("00000001000167", "");
-    assertDiscardToSpsMatchesExpected("0000000167", "0000000167");
-    assertDiscardToSpsMatchesExpected("0000000167FF", "0000000167FF");
-    assertDiscardToSpsMatchesExpected("0000000167FF", "0000000167FF");
-    assertDiscardToSpsMatchesExpected("0000000167FF000000016700", "0000000167FF000000016700");
-    assertDiscardToSpsMatchesExpected("000000000167FF", "0000000167FF");
-    assertDiscardToSpsMatchesExpected("0001670000000167FF", "0000000167FF");
-    assertDiscardToSpsMatchesExpected("FF00000001660000000167FF", "0000000167FF");
-  }
-
-  private static byte[] buildTestData() {
-    byte[] data = new byte[20];
-    for (int i = 0; i < data.length; i++) {
-      data[i] = (byte) 0xFF;
-    }
-    // Insert an incomplete NAL unit start code.
-    data[TEST_PARTIAL_NAL_POSITION] = 0;
-    data[TEST_PARTIAL_NAL_POSITION + 1] = 0;
-    // Insert a complete NAL unit start code.
-    data[TEST_NAL_POSITION] = 0;
-    data[TEST_NAL_POSITION + 1] = 0;
-    data[TEST_NAL_POSITION + 2] = 1;
-    data[TEST_NAL_POSITION + 3] = 5;
-    return data;
-  }
-
-  private static void assertPrefixFlagsCleared(boolean[] flags) {
-    assertEquals(false, flags[0] || flags[1] || flags[2]);
-  }
-
-  private static void assertUnescapeDoesNotModify(String input) {
-    assertUnescapeMatchesExpected(input, input);
-  }
-
-  private static void assertUnescapeMatchesExpected(String input, String expectedOutput) {
-    byte[] bitstream = Util.getBytesFromHexString(input);
-    byte[] expectedOutputBitstream = Util.getBytesFromHexString(expectedOutput);
-    int count = NalUnitUtil.unescapeStream(bitstream, bitstream.length);
-    assertEquals(expectedOutputBitstream.length, count);
-    byte[] outputBitstream = new byte[count];
-    System.arraycopy(bitstream, 0, outputBitstream, 0, count);
-    assertTrue(Arrays.equals(expectedOutputBitstream, outputBitstream));
-  }
-
-  private static void assertDiscardToSpsMatchesExpected(String input, String expectedOutput) {
-    byte[] bitstream = Util.getBytesFromHexString(input);
-    byte[] expectedOutputBitstream = Util.getBytesFromHexString(expectedOutput);
-    ByteBuffer buffer = ByteBuffer.wrap(bitstream);
-    buffer.position(buffer.limit());
-    NalUnitUtil.discardToSps(buffer);
-    assertTrue(Arrays.equals(expectedOutputBitstream,
-        Arrays.copyOf(buffer.array(), buffer.position())));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableBitArrayTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableBitArrayTest.java
deleted file mode 100644
index cfb9cd78be..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableBitArrayTest.java
+++ /dev/null
@@ -1,139 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import android.test.MoreAsserts;
-
-import junit.framework.TestCase;
-
-/**
- * Tests for {@link ParsableBitArray}.
- */
-public final class ParsableBitArrayTest extends TestCase {
-
-  private static final byte[] TEST_DATA = new byte[] {0x3C, (byte) 0xD2, (byte) 0x5F, (byte) 0x01,
-      (byte) 0xFF, (byte) 0x14, (byte) 0x60, (byte) 0x99};
-
-  public void testReadAllBytes() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    byte[] bytesRead = new byte[TEST_DATA.length];
-    testArray.readBytes(bytesRead, 0, TEST_DATA.length);
-    MoreAsserts.assertEquals(TEST_DATA, bytesRead);
-    assertEquals(TEST_DATA.length * 8, testArray.getPosition());
-    assertEquals(TEST_DATA.length, testArray.getBytePosition());
-  }
-
-  public void testReadBit() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    assertReadBitsToEnd(0, testArray);
-  }
-
-  public void testReadBits() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    assertEquals(getTestDataBits(0, 5), testArray.readBits(5));
-    assertEquals(getTestDataBits(5, 3), testArray.readBits(3));
-    assertEquals(getTestDataBits(8, 16), testArray.readBits(16));
-    assertEquals(getTestDataBits(24, 3), testArray.readBits(3));
-    assertEquals(getTestDataBits(27, 18), testArray.readBits(18));
-    assertEquals(getTestDataBits(45, 5), testArray.readBits(5));
-    assertEquals(getTestDataBits(50, 14), testArray.readBits(14));
-  }
-
-  public void testRead32BitsByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    assertEquals(getTestDataBits(0, 32), testArray.readBits(32));
-    assertEquals(getTestDataBits(32, 32), testArray.readBits(32));
-  }
-
-  public void testRead32BitsNonByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    assertEquals(getTestDataBits(0, 5), testArray.readBits(5));
-    assertEquals(getTestDataBits(5, 32), testArray.readBits(32));
-  }
-
-  public void testSkipBytes() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    testArray.skipBytes(2);
-    assertReadBitsToEnd(16, testArray);
-  }
-
-  public void testSkipBitsByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    testArray.skipBits(16);
-    assertReadBitsToEnd(16, testArray);
-  }
-
-  public void testSkipBitsNonByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    testArray.skipBits(5);
-    assertReadBitsToEnd(5, testArray);
-  }
-
-  public void testSetPositionByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    testArray.setPosition(16);
-    assertReadBitsToEnd(16, testArray);
-  }
-
-  public void testSetPositionNonByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    testArray.setPosition(5);
-    assertReadBitsToEnd(5, testArray);
-  }
-
-  public void testByteAlignFromNonByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    testArray.setPosition(11);
-    testArray.byteAlign();
-    assertEquals(2, testArray.getBytePosition());
-    assertEquals(16, testArray.getPosition());
-    assertReadBitsToEnd(16, testArray);
-  }
-
-  public void testByteAlignFromByteAligned() {
-    ParsableBitArray testArray = new ParsableBitArray(TEST_DATA);
-    testArray.setPosition(16);
-    testArray.byteAlign(); // Should be a no-op.
-    assertEquals(2, testArray.getBytePosition());
-    assertEquals(16, testArray.getPosition());
-    assertReadBitsToEnd(16, testArray);
-  }
-
-  private static void assertReadBitsToEnd(int expectedStartPosition, ParsableBitArray testArray) {
-    int position = testArray.getPosition();
-    assertEquals(expectedStartPosition, position);
-    for (int i = position; i < TEST_DATA.length * 8; i++) {
-      assertEquals(getTestDataBit(i), testArray.readBit());
-      assertEquals(i + 1, testArray.getPosition());
-    }
-  }
-
-  private static int getTestDataBits(int bitPosition, int length) {
-    int result = 0;
-    for (int i = 0; i < length; i++) {
-      result = result << 1;
-      if (getTestDataBit(bitPosition++)) {
-        result |= 0x1;
-      }
-    }
-    return result;
-  }
-
-  private static boolean getTestDataBit(int bitPosition) {
-    return (TEST_DATA[bitPosition / 8] & (0x80 >>> (bitPosition % 8))) != 0;
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableByteArrayTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableByteArrayTest.java
deleted file mode 100644
index 49719b95f7..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableByteArrayTest.java
+++ /dev/null
@@ -1,492 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import java.nio.ByteBuffer;
-import java.nio.charset.Charset;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Tests for {@link ParsableByteArray}.
- */
-public class ParsableByteArrayTest extends TestCase {
-
-  private static final byte[] TEST_DATA =
-      new byte[] {0x0F, (byte) 0xFF, (byte) 0x42, (byte) 0x0F, 0x00, 0x00, 0x00, 0x00};
-
-  private static ParsableByteArray getTestDataArray() {
-    ParsableByteArray testArray = new ParsableByteArray(TEST_DATA.length);
-    System.arraycopy(TEST_DATA, 0, testArray.data, 0, TEST_DATA.length);
-    return testArray;
-  }
-
-  public void testReadShort() {
-    testReadShort((short) -1);
-    testReadShort((short) 0);
-    testReadShort((short) 1);
-    testReadShort(Short.MIN_VALUE);
-    testReadShort(Short.MAX_VALUE);
-  }
-
-  private static void testReadShort(short testValue) {
-    ParsableByteArray testArray = new ParsableByteArray(
-        ByteBuffer.allocate(4).putShort(testValue).array());
-    int readValue = testArray.readShort();
-
-    // Assert that the value we read was the value we wrote.
-    assertEquals(testValue, readValue);
-    // And that the position advanced as expected.
-    assertEquals(2, testArray.getPosition());
-
-    // And that skipping back and reading gives the same results.
-    testArray.skipBytes(-2);
-    readValue = testArray.readShort();
-    assertEquals(testValue, readValue);
-    assertEquals(2, testArray.getPosition());
-  }
-
-  public void testReadInt() {
-    testReadInt(0);
-    testReadInt(1);
-    testReadInt(-1);
-    testReadInt(Integer.MIN_VALUE);
-    testReadInt(Integer.MAX_VALUE);
-  }
-
-  private static void testReadInt(int testValue) {
-    ParsableByteArray testArray = new ParsableByteArray(
-        ByteBuffer.allocate(4).putInt(testValue).array());
-    int readValue = testArray.readInt();
-
-    // Assert that the value we read was the value we wrote.
-    assertEquals(testValue, readValue);
-    // And that the position advanced as expected.
-    assertEquals(4, testArray.getPosition());
-
-    // And that skipping back and reading gives the same results.
-    testArray.skipBytes(-4);
-    readValue = testArray.readInt();
-    assertEquals(testValue, readValue);
-    assertEquals(4, testArray.getPosition());
-  }
-
-  public void testReadUnsignedInt() {
-    testReadUnsignedInt(0);
-    testReadUnsignedInt(1);
-    testReadUnsignedInt(Integer.MAX_VALUE);
-    testReadUnsignedInt(Integer.MAX_VALUE + 1L);
-    testReadUnsignedInt(0xFFFFFFFFL);
-  }
-
-  private static void testReadUnsignedInt(long testValue) {
-    ParsableByteArray testArray = new ParsableByteArray(
-        Arrays.copyOfRange(ByteBuffer.allocate(8).putLong(testValue).array(), 4, 8));
-    long readValue = testArray.readUnsignedInt();
-
-    // Assert that the value we read was the value we wrote.
-    assertEquals(testValue, readValue);
-    // And that the position advanced as expected.
-    assertEquals(4, testArray.getPosition());
-
-    // And that skipping back and reading gives the same results.
-    testArray.skipBytes(-4);
-    readValue = testArray.readUnsignedInt();
-    assertEquals(testValue, readValue);
-    assertEquals(4, testArray.getPosition());
-  }
-
-  public void testReadUnsignedIntToInt() {
-    testReadUnsignedIntToInt(0);
-    testReadUnsignedIntToInt(1);
-    testReadUnsignedIntToInt(Integer.MAX_VALUE);
-    try {
-      testReadUnsignedIntToInt(-1);
-      fail();
-    } catch (IllegalStateException e) {
-      // Expected.
-    }
-    try {
-      testReadUnsignedIntToInt(Integer.MIN_VALUE);
-      fail();
-    } catch (IllegalStateException e) {
-      // Expected.
-    }
-  }
-
-  private static void testReadUnsignedIntToInt(int testValue) {
-    ParsableByteArray testArray = new ParsableByteArray(
-        ByteBuffer.allocate(4).putInt(testValue).array());
-    int readValue = testArray.readUnsignedIntToInt();
-
-    // Assert that the value we read was the value we wrote.
-    assertEquals(testValue, readValue);
-    // And that the position advanced as expected.
-    assertEquals(4, testArray.getPosition());
-
-    // And that skipping back and reading gives the same results.
-    testArray.skipBytes(-4);
-    readValue = testArray.readUnsignedIntToInt();
-    assertEquals(testValue, readValue);
-    assertEquals(4, testArray.getPosition());
-  }
-
-  public void testReadUnsignedLongToLong() {
-    testReadUnsignedLongToLong(0);
-    testReadUnsignedLongToLong(1);
-    testReadUnsignedLongToLong(Long.MAX_VALUE);
-    try {
-      testReadUnsignedLongToLong(-1);
-      fail();
-    } catch (IllegalStateException e) {
-      // Expected.
-    }
-    try {
-      testReadUnsignedLongToLong(Long.MIN_VALUE);
-      fail();
-    } catch (IllegalStateException e) {
-      // Expected.
-    }
-  }
-
-  private static void testReadUnsignedLongToLong(long testValue) {
-    ParsableByteArray testArray = new ParsableByteArray(
-        ByteBuffer.allocate(8).putLong(testValue).array());
-    long readValue = testArray.readUnsignedLongToLong();
-
-    // Assert that the value we read was the value we wrote.
-    assertEquals(testValue, readValue);
-    // And that the position advanced as expected.
-    assertEquals(8, testArray.getPosition());
-
-    // And that skipping back and reading gives the same results.
-    testArray.skipBytes(-8);
-    readValue = testArray.readUnsignedLongToLong();
-    assertEquals(testValue, readValue);
-    assertEquals(8, testArray.getPosition());
-  }
-
-  public void testReadLong() {
-    testReadLong(0);
-    testReadLong(1);
-    testReadLong(-1);
-    testReadLong(Long.MIN_VALUE);
-    testReadLong(Long.MAX_VALUE);
-  }
-
-  private static void testReadLong(long testValue) {
-    ParsableByteArray testArray = new ParsableByteArray(
-        ByteBuffer.allocate(8).putLong(testValue).array());
-    long readValue = testArray.readLong();
-
-    // Assert that the value we read was the value we wrote.
-    assertEquals(testValue, readValue);
-    // And that the position advanced as expected.
-    assertEquals(8, testArray.getPosition());
-
-    // And that skipping back and reading gives the same results.
-    testArray.skipBytes(-8);
-    readValue = testArray.readLong();
-    assertEquals(testValue, readValue);
-    assertEquals(8, testArray.getPosition());
-  }
-
-  public void testReadingMovesPosition() {
-    ParsableByteArray parsableByteArray = getTestDataArray();
-
-    // Given an array at the start
-    assertEquals(0, parsableByteArray.getPosition());
-    // When reading an integer, the position advances
-    parsableByteArray.readUnsignedInt();
-    assertEquals(4, parsableByteArray.getPosition());
-  }
-
-  public void testOutOfBoundsThrows() {
-    ParsableByteArray parsableByteArray = getTestDataArray();
-
-    // Given an array at the end
-    parsableByteArray.readUnsignedLongToLong();
-    assertEquals(TEST_DATA.length, parsableByteArray.getPosition());
-    // Then reading more data throws.
-    try {
-      parsableByteArray.readUnsignedInt();
-      fail();
-    } catch (Exception e) {
-      // Expected.
-    }
-  }
-
-  public void testModificationsAffectParsableArray() {
-    ParsableByteArray parsableByteArray = getTestDataArray();
-
-    // When modifying the wrapped byte array
-    byte[] data = parsableByteArray.data;
-    long readValue = parsableByteArray.readUnsignedInt();
-    data[0] = (byte) (TEST_DATA[0] + 1);
-    parsableByteArray.setPosition(0);
-    // Then the parsed value changes.
-    assertFalse(parsableByteArray.readUnsignedInt() == readValue);
-  }
-
-  public void testReadingUnsignedLongWithMsbSetThrows() {
-    ParsableByteArray parsableByteArray = getTestDataArray();
-
-    // Given an array with the most-significant bit set on the top byte
-    byte[] data = parsableByteArray.data;
-    data[0] = (byte) 0x80;
-    // Then reading an unsigned long throws.
-    try {
-      parsableByteArray.readUnsignedLongToLong();
-      fail();
-    } catch (Exception e) {
-      // Expected.
-    }
-  }
-
-  public void testReadUnsignedFixedPoint1616() {
-    ParsableByteArray parsableByteArray = getTestDataArray();
-
-    // When reading the integer part of a 16.16 fixed point value
-    int value = parsableByteArray.readUnsignedFixedPoint1616();
-    // Then the read value is equal to the array elements interpreted as a short.
-    assertEquals((0xFF & TEST_DATA[0]) << 8 | (TEST_DATA[1] & 0xFF), value);
-    assertEquals(4, parsableByteArray.getPosition());
-  }
-
-  public void testReadingBytesReturnsCopy() {
-    ParsableByteArray parsableByteArray = getTestDataArray();
-
-    // When reading all the bytes back
-    int length = parsableByteArray.limit();
-    assertEquals(TEST_DATA.length, length);
-    byte[] copy = new byte[length];
-    parsableByteArray.readBytes(copy, 0, length);
-    // Then the array elements are the same.
-    assertTrue(Arrays.equals(parsableByteArray.data, copy));
-  }
-
-  public void testReadLittleEndianLong() {
-    ParsableByteArray byteArray = new ParsableByteArray(new byte[]{
-        0x01, 0x00, 0x00, 0x00,
-        0x00, 0x00, 0x00, (byte) 0xFF
-    });
-    assertEquals(0xFF00000000000001L, byteArray.readLittleEndianLong());
-    assertEquals(8, byteArray.getPosition());
-  }
-
-  public void testReadLittleEndianUnsignedInt() {
-    ParsableByteArray byteArray = new ParsableByteArray(new byte[] {
-        0x10, 0x00, 0x00, (byte) 0xFF
-    });
-    assertEquals(0xFF000010L, byteArray.readLittleEndianUnsignedInt());
-    assertEquals(4, byteArray.getPosition());
-  }
-
-  public void testReadLittleEndianInt() {
-    ParsableByteArray byteArray = new ParsableByteArray(new byte[]{
-        0x01, 0x00, 0x00, (byte) 0xFF
-    });
-    assertEquals(0xFF000001, byteArray.readLittleEndianInt());
-    assertEquals(4, byteArray.getPosition());
-  }
-
-  public void testReadLittleEndianUnsignedInt24() {
-    byte[] data = { 0x01, 0x02, (byte) 0xFF };
-    ParsableByteArray byteArray = new ParsableByteArray(data);
-    assertEquals(0xFF0201, byteArray.readLittleEndianUnsignedInt24());
-    assertEquals(3, byteArray.getPosition());
-  }
-
-  public void testReadLittleEndianUnsignedShort() {
-    ParsableByteArray byteArray = new ParsableByteArray(new byte[]{
-        0x01, (byte) 0xFF, 0x02, (byte) 0xFF
-    });
-    assertEquals(0xFF01, byteArray.readLittleEndianUnsignedShort());
-    assertEquals(2, byteArray.getPosition());
-    assertEquals(0xFF02, byteArray.readLittleEndianUnsignedShort());
-    assertEquals(4, byteArray.getPosition());
-  }
-
-  public void testReadLittleEndianShort() {
-    ParsableByteArray byteArray = new ParsableByteArray(new byte[]{
-        0x01, (byte) 0xFF, 0x02, (byte) 0xFF
-    });
-    assertEquals((short) 0xFF01, byteArray.readLittleEndianShort());
-    assertEquals(2, byteArray.getPosition());
-    assertEquals((short) 0xFF02, byteArray.readLittleEndianShort());
-    assertEquals(4, byteArray.getPosition());
-  }
-
-  public void testReadString() {
-    byte[] data = {
-        (byte) 0xC3, (byte) 0xA4, (byte) 0x20,
-        (byte) 0xC3, (byte) 0xB6, (byte) 0x20,
-        (byte) 0xC2, (byte) 0xAE, (byte) 0x20,
-        (byte) 0xCF, (byte) 0x80, (byte) 0x20,
-        (byte) 0xE2, (byte) 0x88, (byte) 0x9A, (byte) 0x20,
-        (byte) 0xC2, (byte) 0xB1, (byte) 0x20,
-        (byte) 0xE8, (byte) 0xB0, (byte) 0xA2, (byte) 0x20,
-    };
-    ParsableByteArray byteArray = new ParsableByteArray(data);
-    assertEquals("ä ö ® π √ ± 谢 ", byteArray.readString(data.length));
-    assertEquals(data.length, byteArray.getPosition());
-  }
-
-  public void testReadAsciiString() {
-    byte[] data = new byte[] {'t', 'e', 's', 't'};
-    ParsableByteArray testArray = new ParsableByteArray(data);
-    assertEquals("test", testArray.readString(data.length, Charset.forName("US-ASCII")));
-    assertEquals(data.length, testArray.getPosition());
-  }
-
-  public void testReadStringOutOfBoundsDoesNotMovePosition() {
-    byte[] data = {
-        (byte) 0xC3, (byte) 0xA4, (byte) 0x20
-    };
-    ParsableByteArray byteArray = new ParsableByteArray(data);
-    try {
-      byteArray.readString(data.length + 1);
-      fail();
-    } catch (StringIndexOutOfBoundsException e) {
-      assertEquals(0, byteArray.getPosition());
-    }
-  }
-
-  public void testReadEmptyString() {
-    byte[] bytes = new byte[0];
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertNull(parser.readLine());
-  }
-
-  public void testReadNullTerminatedStringWithLengths() {
-    byte[] bytes = new byte[] {
-        'f', 'o', 'o', 0, 'b', 'a', 'r', 0
-    };
-    // Test with lengths that match NUL byte positions.
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readNullTerminatedString(4));
-    assertEquals(4, parser.getPosition());
-    assertEquals("bar", parser.readNullTerminatedString(4));
-    assertEquals(8, parser.getPosition());
-    assertNull(parser.readNullTerminatedString());
-    // Test with lengths that do not match NUL byte positions.
-    parser = new ParsableByteArray(bytes);
-    assertEquals("fo", parser.readNullTerminatedString(2));
-    assertEquals(2, parser.getPosition());
-    assertEquals("o", parser.readNullTerminatedString(2));
-    assertEquals(4, parser.getPosition());
-    assertEquals("bar", parser.readNullTerminatedString(3));
-    assertEquals(7, parser.getPosition());
-    assertEquals("", parser.readNullTerminatedString(1));
-    assertEquals(8, parser.getPosition());
-    assertNull(parser.readNullTerminatedString());
-    // Test with limit at NUL
-    parser = new ParsableByteArray(bytes, 4);
-    assertEquals("foo", parser.readNullTerminatedString(4));
-    assertEquals(4, parser.getPosition());
-    assertNull(parser.readNullTerminatedString());
-    // Test with limit before NUL
-    parser = new ParsableByteArray(bytes, 3);
-    assertEquals("foo", parser.readNullTerminatedString(3));
-    assertEquals(3, parser.getPosition());
-    assertNull(parser.readNullTerminatedString());
-  }
-
-  public void testReadNullTerminatedString() {
-    byte[] bytes = new byte[] {
-        'f', 'o', 'o', 0, 'b', 'a', 'r', 0
-    };
-    // Test normal case.
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readNullTerminatedString());
-    assertEquals(4, parser.getPosition());
-    assertEquals("bar", parser.readNullTerminatedString());
-    assertEquals(8, parser.getPosition());
-    assertNull(parser.readNullTerminatedString());
-    // Test with limit at NUL.
-    parser = new ParsableByteArray(bytes, 4);
-    assertEquals("foo", parser.readNullTerminatedString());
-    assertEquals(4, parser.getPosition());
-    assertNull(parser.readNullTerminatedString());
-    // Test with limit before NUL.
-    parser = new ParsableByteArray(bytes, 3);
-    assertEquals("foo", parser.readNullTerminatedString());
-    assertEquals(3, parser.getPosition());
-    assertNull(parser.readNullTerminatedString());
-  }
-
-  public void testReadNullTerminatedStringWithoutEndingNull() {
-    byte[] bytes = new byte[] {
-        'f', 'o', 'o', 0, 'b', 'a', 'r'
-    };
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readNullTerminatedString());
-    assertEquals("bar", parser.readNullTerminatedString());
-    assertNull(parser.readNullTerminatedString());
-  }
-
-  public void testReadSingleLineWithoutEndingTrail() {
-    byte[] bytes = new byte[] {
-      'f', 'o', 'o'
-    };
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readLine());
-    assertNull(parser.readLine());
-  }
-
-  public void testReadSingleLineWithEndingLf() {
-    byte[] bytes = new byte[] {
-      'f', 'o', 'o', '\n'
-    };
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readLine());
-    assertNull(parser.readLine());
-  }
-
-  public void testReadTwoLinesWithCrFollowedByLf() {
-    byte[] bytes = new byte[] {
-      'f', 'o', 'o', '\r', '\n', 'b', 'a', 'r'
-    };
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readLine());
-    assertEquals("bar", parser.readLine());
-    assertNull(parser.readLine());
-  }
-
-  public void testReadThreeLinesWithEmptyLine() {
-    byte[] bytes = new byte[] {
-      'f', 'o', 'o', '\r', '\n', '\r', 'b', 'a', 'r'
-    };
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readLine());
-    assertEquals("", parser.readLine());
-    assertEquals("bar", parser.readLine());
-    assertNull(parser.readLine());
-  }
-
-  public void testReadFourLinesWithLfFollowedByCr() {
-    byte[] bytes = new byte[] {
-      'f', 'o', 'o', '\n', '\r', '\r', 'b', 'a', 'r', '\r', '\n'
-    };
-    ParsableByteArray parser = new ParsableByteArray(bytes);
-    assertEquals("foo", parser.readLine());
-    assertEquals("", parser.readLine());
-    assertEquals("", parser.readLine());
-    assertEquals("bar", parser.readLine());
-    assertNull(parser.readLine());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableNalUnitBitArrayTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableNalUnitBitArrayTest.java
deleted file mode 100644
index 294d3d352a..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ParsableNalUnitBitArrayTest.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import static com.google.android.exoplayer2.testutil.TestUtil.createByteArray;
-
-import junit.framework.TestCase;
-
-/**
- * Tests for {@link ParsableNalUnitBitArray}.
- */
-public final class ParsableNalUnitBitArrayTest extends TestCase {
-
-  private static final byte[] NO_ESCAPING_TEST_DATA = createByteArray(0, 3, 0, 1, 3, 0, 0);
-  private static final byte[] ALL_ESCAPING_TEST_DATA = createByteArray(0, 0, 3, 0, 0, 3, 0, 0, 3);
-  private static final byte[] MIX_TEST_DATA = createByteArray(255, 0, 0, 3, 255, 0, 0, 127);
-
-  public void testReadNoEscaping() {
-    ParsableNalUnitBitArray array =
-        new ParsableNalUnitBitArray(NO_ESCAPING_TEST_DATA, 0, NO_ESCAPING_TEST_DATA.length);
-    assertEquals(0x000300, array.readBits(24));
-    assertEquals(0, array.readBits(7));
-    assertTrue(array.readBit());
-    assertEquals(0x030000, array.readBits(24));
-    assertFalse(array.canReadBits(1));
-    assertFalse(array.canReadBits(8));
-  }
-
-  public void testReadNoEscapingTruncated() {
-    ParsableNalUnitBitArray array = new ParsableNalUnitBitArray(NO_ESCAPING_TEST_DATA, 0, 4);
-    assertTrue(array.canReadBits(32));
-    array.skipBits(32);
-    assertFalse(array.canReadBits(1));
-    try {
-      array.readBit();
-      fail();
-    } catch (Exception e) {
-      // Expected.
-    }
-  }
-
-  public void testReadAllEscaping() {
-    ParsableNalUnitBitArray array =
-        new ParsableNalUnitBitArray(ALL_ESCAPING_TEST_DATA, 0, ALL_ESCAPING_TEST_DATA.length);
-    assertTrue(array.canReadBits(48));
-    assertFalse(array.canReadBits(49));
-    assertEquals(0, array.readBits(15));
-    assertFalse(array.readBit());
-    assertEquals(0, array.readBits(17));
-    assertEquals(0, array.readBits(15));
-  }
-
-  public void testReadMix() {
-    ParsableNalUnitBitArray array =
-        new ParsableNalUnitBitArray(MIX_TEST_DATA, 0, MIX_TEST_DATA.length);
-    assertTrue(array.canReadBits(56));
-    assertFalse(array.canReadBits(57));
-    assertEquals(127, array.readBits(7));
-    assertEquals(2, array.readBits(2));
-    assertEquals(3, array.readBits(17));
-    assertEquals(126, array.readBits(7));
-    assertEquals(127, array.readBits(23));
-    assertFalse(array.canReadBits(1));
-  }
-
-  public void testReadExpGolomb() {
-    ParsableNalUnitBitArray array = new ParsableNalUnitBitArray(createByteArray(0x9E), 0, 1);
-    assertTrue(array.canReadExpGolombCodedNum());
-    assertEquals(0, array.readUnsignedExpGolombCodedInt());
-    assertEquals(6, array.readUnsignedExpGolombCodedInt());
-    assertEquals(0, array.readUnsignedExpGolombCodedInt());
-    assertFalse(array.canReadExpGolombCodedNum());
-    try {
-      array.readUnsignedExpGolombCodedInt();
-      fail();
-    } catch (Exception e) {
-      // Expected.
-    }
-  }
-
-  public void testReadExpGolombWithEscaping() {
-    ParsableNalUnitBitArray array =
-        new ParsableNalUnitBitArray(createByteArray(0, 0, 3, 128, 0), 0, 5);
-    assertFalse(array.canReadExpGolombCodedNum());
-    array.skipBit();
-    assertTrue(array.canReadExpGolombCodedNum());
-    assertEquals(32767, array.readUnsignedExpGolombCodedInt());
-    assertFalse(array.canReadBits(1));
-  }
-
-  public void testReset() {
-    ParsableNalUnitBitArray array = new ParsableNalUnitBitArray(createByteArray(0, 0), 0, 2);
-    assertFalse(array.canReadExpGolombCodedNum());
-    assertTrue(array.canReadBits(16));
-    assertFalse(array.canReadBits(17));
-    array.reset(createByteArray(0, 0, 3, 0), 0, 4);
-    assertTrue(array.canReadBits(24));
-    assertFalse(array.canReadBits(25));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ReusableBufferedOutputStreamTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ReusableBufferedOutputStreamTest.java
deleted file mode 100644
index beb9e44853..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/ReusableBufferedOutputStreamTest.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import android.test.MoreAsserts;
-import java.io.ByteArrayOutputStream;
-import junit.framework.TestCase;
-
-/**
- * Tests {@link ReusableBufferedOutputStream}.
- */
-public class ReusableBufferedOutputStreamTest extends TestCase {
-
-  private static final byte[] TEST_DATA_1 = "test data 1".getBytes();
-  private static final byte[] TEST_DATA_2 = "2 test data".getBytes();
-
-  public void testReset() throws Exception {
-    ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream(1000);
-    ReusableBufferedOutputStream outputStream = new ReusableBufferedOutputStream(
-        byteArrayOutputStream1, 1000);
-    outputStream.write(TEST_DATA_1);
-    outputStream.close();
-
-    ByteArrayOutputStream byteArrayOutputStream2 = new ByteArrayOutputStream(1000);
-    outputStream.reset(byteArrayOutputStream2);
-    outputStream.write(TEST_DATA_2);
-    outputStream.close();
-
-    MoreAsserts.assertEquals(TEST_DATA_1, byteArrayOutputStream1.toByteArray());
-    MoreAsserts.assertEquals(TEST_DATA_2, byteArrayOutputStream2.toByteArray());
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/UriUtilTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/UriUtilTest.java
deleted file mode 100644
index 1755c6f70d..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/UriUtilTest.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link UriUtil}.
- */
-public class UriUtilTest extends TestCase {
-
-  /**
-   * Tests normal usage of {@link UriUtil#resolve(String, String)}.
-   * <p>
-   * The test cases are taken from RFC-3986 5.4.1.
-   */
-  public void testResolveNormal() {
-    String base = "http://a/b/c/d;p?q";
-
-    assertEquals("g:h", UriUtil.resolve(base, "g:h"));
-    assertEquals("http://a/b/c/g", UriUtil.resolve(base, "g"));
-    assertEquals("http://a/b/c/g/", UriUtil.resolve(base, "g/"));
-    assertEquals("http://a/g", UriUtil.resolve(base, "/g"));
-    assertEquals("http://g", UriUtil.resolve(base, "//g"));
-    assertEquals("http://a/b/c/d;p?y", UriUtil.resolve(base, "?y"));
-    assertEquals("http://a/b/c/g?y", UriUtil.resolve(base, "g?y"));
-    assertEquals("http://a/b/c/d;p?q#s", UriUtil.resolve(base, "#s"));
-    assertEquals("http://a/b/c/g#s", UriUtil.resolve(base, "g#s"));
-    assertEquals("http://a/b/c/g?y#s", UriUtil.resolve(base, "g?y#s"));
-    assertEquals("http://a/b/c/;x", UriUtil.resolve(base, ";x"));
-    assertEquals("http://a/b/c/g;x", UriUtil.resolve(base, "g;x"));
-    assertEquals("http://a/b/c/g;x?y#s", UriUtil.resolve(base, "g;x?y#s"));
-    assertEquals("http://a/b/c/d;p?q", UriUtil.resolve(base, ""));
-    assertEquals("http://a/b/c/", UriUtil.resolve(base, "."));
-    assertEquals("http://a/b/c/", UriUtil.resolve(base, "./"));
-    assertEquals("http://a/b/", UriUtil.resolve(base, ".."));
-    assertEquals("http://a/b/", UriUtil.resolve(base, "../"));
-    assertEquals("http://a/b/g", UriUtil.resolve(base, "../g"));
-    assertEquals("http://a/", UriUtil.resolve(base, "../.."));
-    assertEquals("http://a/", UriUtil.resolve(base, "../../"));
-    assertEquals("http://a/g", UriUtil.resolve(base, "../../g"));
-  }
-
-  /**
-   * Tests abnormal usage of {@link UriUtil#resolve(String, String)}.
-   * <p>
-   * The test cases are taken from RFC-3986 5.4.2.
-   */
-  public void testResolveAbnormal() {
-    String base = "http://a/b/c/d;p?q";
-
-    assertEquals("http://a/g", UriUtil.resolve(base, "../../../g"));
-    assertEquals("http://a/g", UriUtil.resolve(base, "../../../../g"));
-
-    assertEquals("http://a/g", UriUtil.resolve(base, "/./g"));
-    assertEquals("http://a/g", UriUtil.resolve(base, "/../g"));
-    assertEquals("http://a/b/c/g.", UriUtil.resolve(base, "g."));
-    assertEquals("http://a/b/c/.g", UriUtil.resolve(base, ".g"));
-    assertEquals("http://a/b/c/g..", UriUtil.resolve(base, "g.."));
-    assertEquals("http://a/b/c/..g", UriUtil.resolve(base, "..g"));
-
-    assertEquals("http://a/b/g", UriUtil.resolve(base, "./../g"));
-    assertEquals("http://a/b/c/g/", UriUtil.resolve(base, "./g/."));
-    assertEquals("http://a/b/c/g/h", UriUtil.resolve(base, "g/./h"));
-    assertEquals("http://a/b/c/h", UriUtil.resolve(base, "g/../h"));
-    assertEquals("http://a/b/c/g;x=1/y", UriUtil.resolve(base, "g;x=1/./y"));
-    assertEquals("http://a/b/c/y", UriUtil.resolve(base, "g;x=1/../y"));
-
-    assertEquals("http://a/b/c/g?y/./x", UriUtil.resolve(base, "g?y/./x"));
-    assertEquals("http://a/b/c/g?y/../x", UriUtil.resolve(base, "g?y/../x"));
-    assertEquals("http://a/b/c/g#s/./x", UriUtil.resolve(base, "g#s/./x"));
-    assertEquals("http://a/b/c/g#s/../x", UriUtil.resolve(base, "g#s/../x"));
-
-    assertEquals("http:g", UriUtil.resolve(base, "http:g"));
-  }
-
-  /**
-   * Tests additional abnormal usage of {@link UriUtil#resolve(String, String)}.
-   */
-  public void testResolveAbnormalAdditional() {
-    assertEquals("c:e", UriUtil.resolve("http://a/b", "c:d/../e"));
-    assertEquals("a:c", UriUtil.resolve("a:b", "../c"));
-  }
-
-}
diff --git a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/UtilTest.java b/library/core/src/androidTest/java/com/google/android/exoplayer2/util/UtilTest.java
deleted file mode 100644
index 1d9aff0723..0000000000
--- a/library/core/src/androidTest/java/com/google/android/exoplayer2/util/UtilTest.java
+++ /dev/null
@@ -1,179 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.util;
-
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Random;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link Util}.
- */
-public class UtilTest extends TestCase {
-
-  public void testArrayBinarySearchFloor() {
-    long[] values = new long[0];
-    assertEquals(-1, Util.binarySearchFloor(values, 0, false, false));
-    assertEquals(0, Util.binarySearchFloor(values, 0, false, true));
-
-    values = new long[] {1, 3, 5};
-    assertEquals(-1, Util.binarySearchFloor(values, 0, false, false));
-    assertEquals(-1, Util.binarySearchFloor(values, 0, true, false));
-    assertEquals(0, Util.binarySearchFloor(values, 0, false, true));
-    assertEquals(0, Util.binarySearchFloor(values, 0, true, true));
-
-    assertEquals(-1, Util.binarySearchFloor(values, 1, false, false));
-    assertEquals(0, Util.binarySearchFloor(values, 1, true, false));
-    assertEquals(0, Util.binarySearchFloor(values, 1, false, true));
-    assertEquals(0, Util.binarySearchFloor(values, 1, true, true));
-
-    assertEquals(1, Util.binarySearchFloor(values, 4, false, false));
-    assertEquals(1, Util.binarySearchFloor(values, 4, true, false));
-
-    assertEquals(1, Util.binarySearchFloor(values, 5, false, false));
-    assertEquals(2, Util.binarySearchFloor(values, 5, true, false));
-
-    assertEquals(2, Util.binarySearchFloor(values, 6, false, false));
-    assertEquals(2, Util.binarySearchFloor(values, 6, true, false));
-  }
-
-  public void testListBinarySearchFloor() {
-    List<Integer> values = new ArrayList<>();
-    assertEquals(-1, Util.binarySearchFloor(values, 0, false, false));
-    assertEquals(0, Util.binarySearchFloor(values, 0, false, true));
-
-    values.add(1);
-    values.add(3);
-    values.add(5);
-    assertEquals(-1, Util.binarySearchFloor(values, 0, false, false));
-    assertEquals(-1, Util.binarySearchFloor(values, 0, true, false));
-    assertEquals(0, Util.binarySearchFloor(values, 0, false, true));
-    assertEquals(0, Util.binarySearchFloor(values, 0, true, true));
-
-    assertEquals(-1, Util.binarySearchFloor(values, 1, false, false));
-    assertEquals(0, Util.binarySearchFloor(values, 1, true, false));
-    assertEquals(0, Util.binarySearchFloor(values, 1, false, true));
-    assertEquals(0, Util.binarySearchFloor(values, 1, true, true));
-
-    assertEquals(1, Util.binarySearchFloor(values, 4, false, false));
-    assertEquals(1, Util.binarySearchFloor(values, 4, true, false));
-
-    assertEquals(1, Util.binarySearchFloor(values, 5, false, false));
-    assertEquals(2, Util.binarySearchFloor(values, 5, true, false));
-
-    assertEquals(2, Util.binarySearchFloor(values, 6, false, false));
-    assertEquals(2, Util.binarySearchFloor(values, 6, true, false));
-  }
-
-  public void testArrayBinarySearchCeil() {
-    long[] values = new long[0];
-    assertEquals(0, Util.binarySearchCeil(values, 0, false, false));
-    assertEquals(-1, Util.binarySearchCeil(values, 0, false, true));
-
-    values = new long[] {1, 3, 5};
-    assertEquals(0, Util.binarySearchCeil(values, 0, false, false));
-    assertEquals(0, Util.binarySearchCeil(values, 0, true, false));
-
-    assertEquals(1, Util.binarySearchCeil(values, 1, false, false));
-    assertEquals(0, Util.binarySearchCeil(values, 1, true, false));
-
-    assertEquals(1, Util.binarySearchCeil(values, 2, false, false));
-    assertEquals(1, Util.binarySearchCeil(values, 2, true, false));
-
-    assertEquals(3, Util.binarySearchCeil(values, 5, false, false));
-    assertEquals(2, Util.binarySearchCeil(values, 5, true, false));
-    assertEquals(2, Util.binarySearchCeil(values, 5, false, true));
-    assertEquals(2, Util.binarySearchCeil(values, 5, true, true));
-
-    assertEquals(3, Util.binarySearchCeil(values, 6, false, false));
-    assertEquals(3, Util.binarySearchCeil(values, 6, true, false));
-    assertEquals(2, Util.binarySearchCeil(values, 6, false, true));
-    assertEquals(2, Util.binarySearchCeil(values, 6, true, true));
-  }
-
-  public void testListBinarySearchCeil() {
-    List<Integer> values = new ArrayList<>();
-    assertEquals(0, Util.binarySearchCeil(values, 0, false, false));
-    assertEquals(-1, Util.binarySearchCeil(values, 0, false, true));
-
-    values.add(1);
-    values.add(3);
-    values.add(5);
-    assertEquals(0, Util.binarySearchCeil(values, 0, false, false));
-    assertEquals(0, Util.binarySearchCeil(values, 0, true, false));
-
-    assertEquals(1, Util.binarySearchCeil(values, 1, false, false));
-    assertEquals(0, Util.binarySearchCeil(values, 1, true, false));
-
-    assertEquals(1, Util.binarySearchCeil(values, 2, false, false));
-    assertEquals(1, Util.binarySearchCeil(values, 2, true, false));
-
-    assertEquals(3, Util.binarySearchCeil(values, 5, false, false));
-    assertEquals(2, Util.binarySearchCeil(values, 5, true, false));
-    assertEquals(2, Util.binarySearchCeil(values, 5, false, true));
-    assertEquals(2, Util.binarySearchCeil(values, 5, true, true));
-
-    assertEquals(3, Util.binarySearchCeil(values, 6, false, false));
-    assertEquals(3, Util.binarySearchCeil(values, 6, true, false));
-    assertEquals(2, Util.binarySearchCeil(values, 6, false, true));
-    assertEquals(2, Util.binarySearchCeil(values, 6, true, true));
-  }
-
-  public void testParseXsDuration() {
-    assertEquals(150279L, Util.parseXsDuration("PT150.279S"));
-    assertEquals(1500L, Util.parseXsDuration("PT1.500S"));
-  }
-
-  public void testParseXsDateTime() throws Exception {
-    assertEquals(1403219262000L, Util.parseXsDateTime("2014-06-19T23:07:42"));
-    assertEquals(1407322800000L, Util.parseXsDateTime("2014-08-06T11:00:00Z"));
-    assertEquals(1407322800000L, Util.parseXsDateTime("2014-08-06T11:00:00,000Z"));
-    assertEquals(1411161535000L, Util.parseXsDateTime("2014-09-19T13:18:55-08:00"));
-    assertEquals(1411161535000L, Util.parseXsDateTime("2014-09-19T13:18:55-0800"));
-    assertEquals(1411161535000L, Util.parseXsDateTime("2014-09-19T13:18:55.000-0800"));
-    assertEquals(1411161535000L, Util.parseXsDateTime("2014-09-19T13:18:55.000-800"));
-  }
-
-  public void testUnescapeInvalidFileName() {
-    assertNull(Util.unescapeFileName("%a"));
-    assertNull(Util.unescapeFileName("%xyz"));
-  }
-
-  public void testEscapeUnescapeFileName() {
-    assertEscapeUnescapeFileName("just+a regular+fileName", "just+a regular+fileName");
-    assertEscapeUnescapeFileName("key:value", "key%3avalue");
-    assertEscapeUnescapeFileName("<>:\"/\\|?*%", "%3c%3e%3a%22%2f%5c%7c%3f%2a%25");
-
-    Random random = new Random(0);
-    for (int i = 0; i < 1000; i++) {
-      String string = TestUtil.buildTestString(1000, random);
-      assertEscapeUnescapeFileName(string);
-    }
-  }
-
-  private static void assertEscapeUnescapeFileName(String fileName, String escapedFileName) {
-    assertEquals(escapedFileName, Util.escapeFileName(fileName));
-    assertEquals(fileName, Util.unescapeFileName(escapedFileName));
-  }
-
-  private static void assertEscapeUnescapeFileName(String fileName) {
-    String escapedFileName = Util.escapeFileName(fileName);
-    assertEquals(fileName, Util.unescapeFileName(escapedFileName));
-  }
-
-}
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/exoplayer-threading-model.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/exoplayer-threading-model.svg
deleted file mode 100644
index ec591c7516..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/exoplayer-threading-model.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="39 1249 524 240" width="524pt" height="20pc" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker_2" viewBox="-9 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M -8 0 L 0 3 L 0 -3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><path d="M 70 1260 L 274 1260 C 285.0457 1260 294 1268.9543 294 1280 L 294 1426 C 294 1437.0457 285.0457 1446 274 1446 L 70 1446 C 58.954305 1446 50 1437.0457 50 1426 L 50 1280 C 50 1268.9543 58.954305 1260 70 1260 Z" fill="white" fill-opacity="0"/><path d="M 70 1260 L 274 1260 C 285.0457 1260 294 1268.9543 294 1280 L 294 1426 C 294 1437.0457 285.0457 1446 274 1446 L 70 1446 C 58.954305 1446 50 1437.0457 50 1426 L 50 1280 C 50 1268.9543 58.954305 1260 70 1260 Z" stroke="black" stroke-opacity=".3" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" stroke-dasharray="4,4"/><path d="M 332 1260 L 448 1260 C 459.0457 1260 468 1268.9543 468 1280 L 468 1426 C 468 1437.0457 459.0457 1446 448 1446 L 332 1446 C 320.9543 1446 312 1437.0457 312 1426 L 312 1280 C 312 1268.9543 320.9543 1260 332 1260 Z" fill="white" fill-opacity="0"/><path d="M 332 1260 L 448 1260 C 459.0457 1260 468 1268.9543 468 1280 L 468 1426 C 468 1437.0457 459.0457 1446 448 1446 L 332 1446 C 320.9543 1446 312 1437.0457 312 1426 L 312 1280 C 312 1268.9543 320.9543 1260 332 1260 Z" stroke="black" stroke-opacity=".3" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" stroke-dasharray="4,4"/><path d="M 506 1260 L 532 1260 C 543.0457 1260 552 1268.9543 552 1280 L 552 1426 C 552 1437.0457 543.0457 1446 532 1446 L 506 1446 C 494.9543 1446 486 1437.0457 486 1426 L 486 1280 C 486 1268.9543 494.9543 1260 506 1260 Z" fill="white" fill-opacity="0"/><path d="M 506 1260 L 532 1260 C 543.0457 1260 552 1268.9543 552 1280 L 552 1426 C 552 1437.0457 543.0457 1446 532 1446 L 506 1446 C 494.9543 1446 486 1437.0457 486 1426 L 486 1280 C 486 1268.9543 494.9543 1260 506 1260 Z" stroke="black" stroke-opacity=".3" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" stroke-dasharray="4,4"/><path d="M 420 1322 L 512 1322 C 519.732 1322 526 1328.268 526 1336 L 526 1336 C 526 1343.732 519.732 1350 512 1350 L 420 1350 C 412.26801 1350 406 1343.732 406 1336 L 406 1336 C 406 1328.268 412.26801 1322 420 1322 Z" fill="white"/><path d="M 420 1322 L 512 1322 C 519.732 1322 526 1328.268 526 1336 L 526 1336 C 526 1343.732 519.732 1350 512 1350 L 420 1350 C 412.26801 1350 406 1343.732 406 1336 L 406 1336 C 406 1328.268 412.26801 1322 420 1322 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 213 1287 L 373 1287 C 381.28427 1287 388 1293.7157 388 1302 L 388 1422 C 388 1430.2843 381.28427 1437 373 1437 L 213 1437 C 204.71573 1437 198 1430.2843 198 1422 L 198 1302 C 198 1293.7157 204.71573 1287 213 1287 Z" fill="white"/><path d="M 213 1287 L 373 1287 C 381.28427 1287 388 1293.7157 388 1302 L 388 1422 C 388 1430.2843 381.28427 1437 373 1437 L 213 1437 C 204.71573 1437 198 1430.2843 198 1422 L 198 1302 C 198 1293.7157 204.71573 1287 213 1287 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(203 1356)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="67.211914" y="10" textLength="45.576172">ExoPlayer</tspan></text><path d="M 75 1287 L 111 1287 C 119.28427 1287 126 1293.7157 126 1302 L 126 1422 C 126 1430.2843 119.28427 1437 111 1437 L 75 1437 C 66.71573 1437 60 1430.2843 60 1422 L 60 1302 C 60 1293.7157 66.71573 1287 75 1287 Z" fill="white"/><path d="M 75 1287 L 111 1287 C 119.28427 1287 126 1293.7157 126 1302 L 126 1422 C 126 1430.2843 119.28427 1437 111 1437 L 75 1437 C 66.71573 1437 60 1430.2843 60 1422 L 60 1302 C 60 1293.7157 66.71573 1287 75 1287 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(65 1350)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="3.5395508" y="10" textLength="51.69922">Application </tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="17.157715" y="22" textLength="21.68457">code</tspan></text><path d="M 420 1369.75 L 512 1369.75 C 519.732 1369.75 526 1376.018 526 1383.75 L 526 1383.75 C 526 1391.482 519.732 1397.75 512 1397.75 L 420 1397.75 C 412.26801 1397.75 406 1391.482 406 1383.75 L 406 1383.75 C 406 1376.018 412.26801 1369.75 420 1369.75 Z" fill="white"/><path d="M 420 1369.75 L 512 1369.75 C 519.732 1369.75 526 1376.018 526 1383.75 L 526 1383.75 C 526 1391.482 519.732 1397.75 512 1397.75 L 420 1397.75 C 412.26801 1397.75 406 1391.482 406 1383.75 L 406 1383.75 C 406 1376.018 412.26801 1369.75 420 1369.75 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(411 1377.75)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="27.758789" y="10" textLength="54.482422">LoadControl</tspan></text><path d="M 420 1408.125 L 512 1408.125 C 519.732 1408.125 526 1414.393 526 1422.125 L 526 1422.125 C 526 1429.857 519.732 1436.125 512 1436.125 L 420 1436.125 C 412.26801 1436.125 406 1429.857 406 1422.125 L 406 1422.125 C 406 1414.393 412.26801 1408.125 420 1408.125 Z" fill="white"/><path d="M 420 1408.125 L 512 1408.125 C 519.732 1408.125 526 1414.393 526 1422.125 L 526 1422.125 C 526 1429.857 519.732 1436.125 512 1436.125 L 420 1436.125 C 412.26801 1436.125 406 1429.857 406 1422.125 L 406 1422.125 C 406 1414.393 412.26801 1408.125 420 1408.125 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(411 1416.125)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="24.34082" y="10" textLength="6.1083984">T</tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="30.083008" y="10" textLength="55.576172">rackSelector</tspan></text><path d="M 420 1287 L 512 1287 C 519.732 1287 526 1293.268 526 1301 L 526 1301 C 526 1308.732 519.732 1315 512 1315 L 420 1315 C 412.26801 1315 406 1308.732 406 1301 L 406 1301 C 406 1293.268 412.26801 1287 420 1287 Z" fill="white"/><path d="M 420 1287 L 512 1287 C 519.732 1287 526 1293.268 526 1301 L 526 1301 C 526 1308.732 519.732 1315 512 1315 L 420 1315 C 412.26801 1315 406 1308.732 406 1301 L 406 1301 C 406 1293.268 412.26801 1287 420 1287 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(411 1295)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="25.539551" y="10" textLength="58.9209">MediaSource</tspan></text><path d="M 428.4375 1328 L 519.5625 1328 C 527.5361 1328 534 1334.4639 534 1342.4375 L 534 1342.4375 C 534 1350.4111 527.5361 1356.875 519.5625 1356.875 L 428.4375 1356.875 C 420.4639 1356.875 414 1350.4111 414 1342.4375 L 414 1342.4375 C 414 1334.4639 420.4639 1328 428.4375 1328 Z" fill="white"/><path d="M 428.4375 1328 L 519.5625 1328 C 527.5361 1328 534 1334.4639 534 1342.4375 L 534 1342.4375 C 534 1350.4111 527.5361 1356.875 519.5625 1356.875 L 428.4375 1356.875 C 420.4639 1356.875 414 1350.4111 414 1342.4375 L 414 1342.4375 C 414 1334.4639 420.4639 1328 428.4375 1328 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 436 1334 L 528 1334 C 535.732 1334 542 1340.268 542 1348 L 542 1348 C 542 1355.732 535.732 1362 528 1362 L 436 1362 C 428.26801 1362 422 1355.732 422 1348 L 422 1348 C 422 1340.268 428.26801 1334 436 1334 Z" fill="white"/><path d="M 436 1334 L 528 1334 C 535.732 1334 542 1340.268 542 1348 L 542 1348 C 542 1355.732 535.732 1362 528 1362 L 436 1362 C 428.26801 1362 422 1355.732 422 1348 L 422 1348 C 422 1340.268 428.26801 1334 436 1334 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(427 1342)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="31.655273" y="10" textLength="46.689453">Renderers</tspan></text><path d="M 212 1389 L 212 1335 C 212 1332.2386 214.23858 1330 217 1330 L 251 1330 C 253.76142 1330 256 1332.2386 256 1335 L 256 1389 C 256 1391.7614 253.76142 1394 251 1394 L 217 1394 C 214.23858 1394 212 1391.7614 212 1389 Z" fill="#f0f0f0"/><path d="M 212 1389 L 212 1335 C 212 1332.2386 214.23858 1330 217 1330 L 251 1330 C 253.76142 1330 256 1332.2386 256 1335 L 256 1389 C 256 1391.7614 253.76142 1394 251 1394 L 217 1394 C 214.23858 1394 212 1391.7614 212 1389 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(222 1389) rotate(-90)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="2.5395508" y="10" textLength="51.69922">Application </tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".8769531" y="22" textLength="52.246094">visible state</tspan></text><path d="M 257 1297 L 329 1297 C 331.76142 1297 334 1299.2386 334 1302 L 334 1312 C 334 1314.7614 331.76142 1317 329 1317 L 257 1317 C 254.23858 1317 252 1314.7614 252 1312 L 252 1302 C 252 1299.2386 254.23858 1297 257 1297 Z" fill="#f0f0f0"/><path d="M 257 1297 L 329 1297 C 331.76142 1297 334 1299.2386 334 1302 L 334 1312 C 334 1314.7614 331.76142 1317 329 1317 L 257 1317 C 254.23858 1317 252 1314.7614 252 1312 L 252 1302 C 252 1299.2386 254.23858 1297 257 1297 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(257 1301)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".41894531" y="10" textLength="71.16211">Message queue</tspan></text><path d="M 257 1407 L 329 1407 C 331.76142 1407 334 1409.2386 334 1412 L 334 1422 C 334 1424.7614 331.76142 1427 329 1427 L 257 1427 C 254.23858 1427 252 1424.7614 252 1422 L 252 1412 C 252 1409.2386 254.23858 1407 257 1407 Z" fill="#f0f0f0"/><path d="M 257 1407 L 329 1407 C 331.76142 1407 334 1409.2386 334 1412 L 334 1422 C 334 1424.7614 331.76142 1427 329 1427 L 257 1427 C 254.23858 1427 252 1424.7614 252 1422 L 252 1412 C 252 1409.2386 254.23858 1407 257 1407 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(257 1411)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".41894531" y="10" textLength="71.16211">Message queue</tspan></text><text transform="translate(55 1451)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="77.527344" y="10" textLength="78.945312">application thread</tspan></text><text transform="translate(317 1451)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="19.911621" y="10" textLength="106.17676">internal playback thread</tspan></text><text transform="translate(491 1451)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="1.8696289" y="10" textLength="55.039062">background </tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" x="7.992676" y="22" textLength="40.014648">thread(s)</tspan></text><line x1="379.00036" y1="1332.99964" x2="399.49425" y2="1312.50575" marker-end="url(#FilledArrow_Marker)" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="381.32324" y1="1350.8131" x2="397.86349" y2="1344.9059" marker-end="url(#FilledArrow_Marker)" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="381.42508" y1="1372.1009" x2="397.03726" y2="1377.1191" marker-end="url(#FilledArrow_Marker)" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="379.1903" y1="1389.6265" x2="399.9221" y2="1409.2477" marker-end="url(#FilledArrow_Marker)" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 328 1389 L 328 1335 C 328 1332.2386 330.23858 1330 333 1330 L 367 1330 C 369.76142 1330 372 1332.2386 372 1335 L 372 1389 C 372 1391.7614 369.76142 1394 367 1394 L 333 1394 C 330.23858 1394 328 1391.7614 328 1389 Z" fill="#f0f0f0"/><path d="M 328 1389 L 328 1335 C 328 1332.2386 330.23858 1330 333 1330 L 367 1330 C 369.76142 1330 372 1332.2386 372 1335 L 372 1389 C 372 1391.7614 369.76142 1394 367 1394 L 333 1394 C 330.23858 1394 328 1391.7614 328 1389 Z" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(338 1389) rotate(-90)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="7.2661133" y="10" textLength="42.246094">playback </tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x="17.546875" y="22" textLength="18.90625">loop</tspan></text><path d="M 350 1394 L 350 1418 L 346 1418 L 343.9 1418" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 334 1307 L 350 1307 L 350 1312 L 350 1320.1" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="252" y1="1417" x2="135.9" y2="1417" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="126" y1="1307" x2="242.1" y2="1307" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="234.25" y1="1307" x2="234.19045" y2="1320.1001" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="234.25" y1="1417" x2="234.19045" y2="1403.8999" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="135.9" y1="1362" x2="202.1" y2="1362" marker-end="url(#FilledArrow_Marker)" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="144.5" y="1338" width="35" height="22" fill="white" fill-opacity="0"/><text transform="translate(149.5 1343)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x=".2734375" y="10" textLength="24.453125">get*()</tspan></text><rect x="136" y="1260" width="52" height="46" fill="white" fill-opacity="0"/><text transform="translate(141 1265)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".43603516" y="10" textLength="41.12793">prepare()</tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" x="1.8276367" y="22" textLength="27.231445">seekT</tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" x="27.950684" y="22" textLength="12.22168">o()</tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" x="9.330078" y="34" textLength="23.339844">etc…</tspan></text><rect x="127.5" y="1393" width="69" height="22" fill="white" fill-opacity="0"/><text transform="translate(132.5 1398)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".3203125" y="10" textLength="58.359375">Listener calls</tspan></text></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/renderer-states.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/renderer-states.svg
deleted file mode 100644
index 3882ca28bd..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/renderer-states.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="76 50 469 149" width="469pt" height="149pt" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6 <dc:date>2016-08-19 23:45:45 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker_2" viewBox="-9 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M -8 0 L 0 3 L 0 -3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="1e3"/><g><title>Layer 1</title><path d="M 105.42796 107.802954 L 186.75844 107.802954 C 196.37867 107.802954 204.1864 115.13864 204.1864 124.17725 C 204.1864 133.215865 196.37867 140.55155 186.75844 140.55155 L 105.42796 140.55155 C 95.807726 140.55155 88 133.215865 88 124.17725 C 88 115.13864 95.807726 107.802954 105.42796 107.802954" fill="white"/><path d="M 105.42796 107.802954 L 186.75844 107.802954 C 196.37867 107.802954 204.1864 115.13864 204.1864 124.17725 C 204.1864 133.215865 196.37867 140.55155 186.75844 140.55155 L 105.42796 140.55155 C 95.807726 140.55155 88 133.215865 88 124.17725 C 88 115.13864 95.807726 107.802954 105.42796 107.802954" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(104.61864 118.17725)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="22.018994" y="10" textLength="38.911133">Disabled</tspan></text><path d="M 270.08476 107.802954 L 351.41524 107.802954 C 361.03547 107.802954 368.8432 115.13864 368.8432 124.17725 C 368.8432 133.215865 361.03547 140.55155 351.41524 140.55155 L 270.08476 140.55155 C 260.46453 140.55155 252.6568 133.215865 252.6568 124.17725 C 252.6568 115.13864 260.46453 107.802954 270.08476 107.802954" fill="white"/><path d="M 270.08476 107.802954 L 351.41524 107.802954 C 361.03547 107.802954 368.8432 115.13864 368.8432 124.17725 C 368.8432 133.215865 361.03547 140.55155 351.41524 140.55155 L 270.08476 140.55155 C 260.46453 140.55155 252.6568 133.215865 252.6568 124.17725 C 252.6568 115.13864 260.46453 107.802954 270.08476 107.802954" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(269.27544 118.17725)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="23.12495" y="10" textLength="36.699219">Enabled</tspan></text><path d="M 434.74156 107.802954 L 516.07204 107.802954 C 525.69227 107.802954 533.5 115.13864 533.5 124.17725 C 533.5 133.215865 525.69227 140.55155 516.07204 140.55155 L 434.74156 140.55155 C 425.12133 140.55155 417.3136 133.215865 417.3136 124.17725 C 417.3136 115.13864 425.12133 107.802954 434.74156 107.802954" fill="white"/><path d="M 434.74156 107.802954 L 516.07204 107.802954 C 525.69227 107.802954 533.5 115.13864 533.5 124.17725 C 533.5 133.215865 525.69227 140.55155 516.07204 140.55155 L 434.74156 140.55155 C 425.12133 140.55155 417.3136 133.215865 417.3136 124.17725 C 417.3136 115.13864 425.12133 107.802954 434.74156 107.802954" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(433.93224 118.17725)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="25.353955" y="10" textLength="32.24121">Started</tspan></text><path d="M 162.26839 107.80295 C 176.23115 95.948754 198.36057 82 225.18697 82 C 247.77722 82 268.5539 91.891277 283.97575 102.093746" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 327.9848 107.80295 C 342.4642 96.22723 365.02566 82.75991 391.62577 82.75991 C 413.90596 82.75991 434.01552 92.20818 448.9453 102.0793" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 170.59629 146.55037 C 184.3631 156.23277 203.19701 165.39131 225.18697 165.39131 C 251.72524 165.39131 275.76067 152.052325 291.55185 140.55155" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 336.04516 146.43053 C 350.2473 156.15705 369.5451 165.39131 391.62577 165.39131 C 418.16404 165.39131 441.62272 152.052325 456.91664 140.55155" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="204.5238" y="59.24335" width="41" height="22" fill="white" fill-opacity="0"/><text transform="translate(209.5238 64.24335)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".48535156" y="10" textLength="30.029297">enable</tspan></text><rect x="375.43315" y="60.010955" width="30" height="22" fill="white" fill-opacity="0"/><text transform="translate(380.43315 65.010955)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".2758789" y="10" textLength="19.448242">start</tspan></text><rect x="380.333" y="167.29073" width="29" height="22" fill="white" fill-opacity="0"/><text transform="translate(385.333 172.29073)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".049316406" y="10" textLength="18.901367">stop</tspan></text><rect x="203.9995" y="167.34611" width="42" height="22" fill="white" fill-opacity="0"/><text transform="translate(208.9995 172.34611)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".15527344" y="10" textLength="31.689453">disable</tspan></text><path d="M 299.91552 140.55155 C 298.44827 143.94036 297.47889 147.48797 297.61673 150.80519 C 298.10895 162.65028 305.18498 166.24068 312.48739 165.98766 C 319.7356 165.73652 323.82378 161.81603 323.40274 150.17454" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 464.60307 140.55155 C 463.23672 143.79583 462.35394 147.18246 462.5055 150.36634 C 463.06342 162.08711 470.07374 165.80183 477.37615 165.54882 C 484.5288 165.30099 488.66725 161.36064 488.30968 150.18478" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="269.9804" y="167.72773" width="76" height="22" fill="white" fill-opacity="0"/><text transform="translate(274.9804 172.72773)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".48535156" y="10" textLength="65.029297">replaceStream</tspan></text><rect x="436.50835" y="167.44093" width="76" height="22" fill="white" fill-opacity="0"/><text transform="translate(441.50835 172.44093)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".48535156" y="10" textLength="65.029297">replaceStream</tspan></text></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-advanced.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-advanced.svg
deleted file mode 100644
index e7a9960acc..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-advanced.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="34 687 478 108" width="478pt" height="9pc" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><linearGradient x1="0" x2="1" id="Gradient" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="white"/><stop offset="1" stop-color="white" stop-opacity="0"/></linearGradient><linearGradient id="Obj_Gradient" xl:href="#Gradient" gradientTransform="translate(502.75467 712.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_2" xl:href="#Gradient" gradientTransform="translate(502.75467 712.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_3" xl:href="#Gradient" gradientTransform="translate(502.75467 712.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_4" xl:href="#Gradient" gradientTransform="translate(502.75467 712.5) rotate(180) scale(57.75467)"/></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="198.47753" y="700" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="198.47753" y="700" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(203.47753 706.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.541713" y="10" textLength="33.359375">period2</tspan></text><rect x="347.1864" y="700" width="147.8136" height="25" fill="black" fill-opacity="0"/><rect x="347.1864" y="700" width="147.8136" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(352.1864 706.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.227112" y="10" textLength="33.359375">period3</tspan></text><rect x="254" y="730" width="195" height="25" fill="black" fill-opacity="0"/><rect x="254" y="730" width="195" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(259 736.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="73.044434" y="10" textLength="38.911133">window2</tspan></text><circle cx="405" cy="742.5" r="5.000008" fill="black"/><circle cx="405" cy="742.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="50" y1="765" x2="485.1" y2="765" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="453.41325" y="763.4195" width="29" height="22" fill="white" fill-opacity="0"/><text transform="translate(458.41325 768.4195)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".05419922" y="10" textLength="18.891602">time</tspan></text><rect x="445" y="696.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient)"/><rect x="445" y="696.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_2)"/><rect x="445" y="696.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_3)"/><rect x="445" y="696.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_4)"/><rect x="50" y="700" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="50" y="700" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 706.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.541713" y="10" textLength="33.359375">period1</tspan></text><rect x="50" y="730" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="50" y="730" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 736.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="49.765834" y="10" textLength="38.911133">window1</tspan></text><circle cx="50" cy="742.5" r="5.000008" fill="black"/><circle cx="50" cy="742.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-indefinite.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-indefinite.svg
deleted file mode 100644
index d15b27b552..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-indefinite.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="38 487 474 108" width="474pt" height="9pc" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><linearGradient x1="0" x2="1" id="Gradient" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="white"/><stop offset="1" stop-color="white" stop-opacity="0"/></linearGradient><linearGradient id="Obj_Gradient" xl:href="#Gradient" gradientTransform="translate(502.75467 512.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_2" xl:href="#Gradient" gradientTransform="translate(502.75467 512.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_3" xl:href="#Gradient" gradientTransform="translate(502.75467 512.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_4" xl:href="#Gradient" gradientTransform="translate(502.75467 512.5) rotate(180) scale(57.75467)"/><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="50" y="500" width="445" height="25" fill="black" fill-opacity="0"/><rect x="50" y="500" width="445" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 506.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="200.82031" y="10" textLength="33.359375">period1</tspan></text><rect x="445" y="496.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient)"/><rect x="445" y="496.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_2)"/><rect x="445" y="496.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_3)"/><rect x="445" y="496.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_4)"/><rect x="50" y="530" width="399" height="25" fill="black" fill-opacity="0"/><rect x="50" y="530" width="399" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 536.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="175.04443" y="10" textLength="38.911133">window1</tspan></text><circle cx="405" cy="542.5" r="5.000008" fill="black"/><circle cx="405" cy="542.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="50" y1="565" x2="485.1" y2="565" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="453.41325" y="563.4195" width="29" height="22" fill="white" fill-opacity="0"/><text transform="translate(458.41325 568.4195)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".05419922" y="10" textLength="18.891602">time</tspan></text></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-limited.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-limited.svg
deleted file mode 100644
index 24c457424d..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-limited.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="38 387 474 108" width="474pt" height="9pc" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><linearGradient x1="0" x2="1" id="Gradient" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="white"/><stop offset="1" stop-color="white" stop-opacity="0"/></linearGradient><linearGradient id="Obj_Gradient" xl:href="#Gradient" gradientTransform="translate(502.75467 412.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_2" xl:href="#Gradient" gradientTransform="translate(502.75467 412.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_3" xl:href="#Gradient" gradientTransform="translate(502.75467 412.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_4" xl:href="#Gradient" gradientTransform="translate(502.75467 412.5) rotate(180) scale(57.75467)"/></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="50" y="400" width="445" height="25" fill="black" fill-opacity="0"/><rect x="50" y="400" width="445" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 406.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="200.82031" y="10" textLength="33.359375">period1</tspan></text><rect x="214.6568" y="430" width="234.3432" height="25" fill="black" fill-opacity="0"/><rect x="214.6568" y="430" width="234.3432" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(219.6568 436.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="92.716034" y="10" textLength="38.911133">window1</tspan></text><circle cx="405" cy="442.5" r="5.000008" fill="black"/><circle cx="405" cy="442.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="50" y1="465" x2="485.1" y2="465" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="453.41325" y="463.4195" width="29" height="22" fill="black" fill-opacity="0"/><text transform="translate(458.41325 468.4195)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".05419922" y="10" textLength="18.891602">time</tspan></text><rect x="445" y="396.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient)"/><rect x="445" y="396.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_2)"/><rect x="445" y="396.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_3)"/><rect x="445" y="396.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_4)"/></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-multi-period.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-multi-period.svg
deleted file mode 100644
index e9528193f6..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-live-multi-period.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="38 587 474 108" width="474pt" height="9pc" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><linearGradient x1="0" x2="1" id="Gradient" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="white"/><stop offset="1" stop-color="white" stop-opacity="0"/></linearGradient><linearGradient id="Obj_Gradient" xl:href="#Gradient" gradientTransform="translate(502.75467 612.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_2" xl:href="#Gradient" gradientTransform="translate(502.75467 612.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_3" xl:href="#Gradient" gradientTransform="translate(502.75467 612.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_4" xl:href="#Gradient" gradientTransform="translate(502.75467 612.5) rotate(180) scale(57.75467)"/></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="50" y="600" width="296.92033" height="25" fill="black" fill-opacity="0"/><rect x="50" y="600" width="296.92033" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 606.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="126.78048" y="10" textLength="33.359375">period1</tspan></text><rect x="347.1864" y="600" width="147.8136" height="25" fill="black" fill-opacity="0"/><rect x="347.1864" y="600" width="147.8136" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(352.1864 606.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.227112" y="10" textLength="33.359375">period2</tspan></text><rect x="214.33803" y="630" width="234.66197" height="25" fill="black" fill-opacity="0"/><rect x="214.33803" y="630" width="234.66197" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(219.33803 636.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="92.87542" y="10" textLength="38.911133">window1</tspan></text><circle cx="405" cy="642.5" r="5.000008" fill="black"/><circle cx="405" cy="642.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="50" y1="665" x2="485.1" y2="665" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="453.41325" y="663.4195" width="29" height="22" fill="black" fill-opacity="0"/><text transform="translate(458.41325 668.4195)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".05419922" y="10" textLength="18.891602">time</tspan></text><rect x="445" y="596.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient)"/><rect x="445" y="596.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_2)"/><rect x="445" y="596.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_3)"/><rect x="445" y="596.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_4)"/></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-period.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-period.svg
deleted file mode 100644
index 05a5b259ee..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-period.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="38 1e3 474 204" width="474pt" height="17pc" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker_2" viewBox="-9 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M -8 0 L 0 3 L 0 -3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><linearGradient x1="0" x2="1" id="Gradient" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="white"/><stop offset="1" stop-color="white" stop-opacity="0"/></linearGradient><linearGradient id="Obj_Gradient" xl:href="#Gradient" gradientTransform="translate(502.75467 1062.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_2" xl:href="#Gradient" gradientTransform="translate(502.75467 1062.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_3" xl:href="#Gradient" gradientTransform="translate(502.75467 1062.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_4" xl:href="#Gradient" gradientTransform="translate(502.75467 1062.5) rotate(180) scale(57.75467)"/></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="50" y="1050" width="296.92029" height="25" fill="black" fill-opacity="0"/><rect x="50" y="1050" width="296.92029" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 1056.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="126.78046" y="10" textLength="33.359375">period1</tspan></text><rect x="347.1864" y="1050" width="147.3136" height="25" fill="black" fill-opacity="0"/><rect x="347.1864" y="1050" width="147.3136" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(352.1864 1056.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="51.977112" y="10" textLength="33.359375">period2</tspan></text><line x1="205.33803" y1="1170.82475" x2="337.02033" y2="1170.82475" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="205.5" y1="1161.32475" x2="205.5" y2="1192.7024" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="347.1864" y1="1161.32475" x2="347.1864" y2="1192.82475" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="204.83803" y="1125" width="234.66197" height="25" fill="black" fill-opacity="0"/><rect x="204.83803" y="1125" width="234.66197" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(209.83803 1131.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="92.87542" y="10" textLength="38.911133">window1</tspan></text><line x1="59.9" y1="1170.82475" x2="205.33803" y2="1170.82475" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="50" y1="1083.82475" x2="50" y2="1192.82475" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(66.789836 1175.82475)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".24414062" y="10" textLength="114.51172">period1.positionInWindow</tspan></text><text transform="translate(218.62918 1175.82475)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".24414062" y="10" textLength="114.51172">period2.positionInWindow</tspan></text><circle cx="405.5" cy="1137.5" r="5.000008" fill="black"/><circle cx="405.5" cy="1137.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><path d="M 277.848 1075 C 283.47152 1077.74604 289.55567 1081.7543 297 1088 C 307.39228 1096.719 313.49444 1106.8151 317.07717 1115.6064" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="198.47753" y="1086.68713" width="104" height="22" fill="white" fill-opacity="0"/><text transform="translate(203.47753 1091.68713)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".024902344" y="10" textLength="93.950195">period1.windowIndex</tspan></text><path d="M 367.49306 1075 C 364.88125 1076.66384 361.57643 1079.39495 357 1083.82475 C 347.66134 1092.8642 339.2789 1105.5559 333.07861 1116.3285" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="348.1864" y="1086.68713" width="104" height="22" fill="white" fill-opacity="0"/><text transform="translate(353.1864 1091.68713)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".024902344" y="10" textLength="93.950195">period2.windowIndex</tspan></text><line x1="50" y1="1019.17525" x2="50" y2="1041.17525" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="347.1864" y1="1019.17525" x2="347.1864" y2="1041.17525" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="59.9" y1="1032.4929" x2="355" y2="1032.4929" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="348.1864" y1="1032.4929" x2="481.2864" y2="1032.4929" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(176.19198 1014.95836)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".36230469" y="10" textLength="72.27539">period1.duration</tspan></text><text transform="translate(367.71016 1015.4929)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".4116211" y="10" textLength="106.17676">period2.duration (unset)</tspan></text><rect x="445" y="1046.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient)"/><rect x="445" y="1046.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_2)"/><rect x="445" y="1046.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_3)"/><rect x="445" y="1046.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_4)"/></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-playlist.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-playlist.svg
deleted file mode 100644
index 5b775de6a5..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-playlist.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="34 289 473 106" width="473pt" height="106pt" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="50" y="300" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="50" y="300" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 306.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.541713" y="10" textLength="33.359375">period1</tspan></text><rect x="50" y="330" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="50" y="330" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 336.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="49.765834" y="10" textLength="38.911133">window1</tspan></text><rect x="198.4428" y="300" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="198.4428" y="300" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(203.4428 306.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.541713" y="10" textLength="33.359375">period2</tspan></text><rect x="346.8856" y="300" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="346.8856" y="300" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(351.8856 306.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.541713" y="10" textLength="33.359375">period3</tspan></text><rect x="198.4428" y="330" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="198.4428" y="330" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(203.4428 336.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="49.765834" y="10" textLength="38.911133">window2</tspan></text><rect x="346.8856" y="330" width="148.4428" height="25" fill="black" fill-opacity="0"/><rect x="346.8856" y="330" width="148.4428" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(351.8856 336.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="49.765834" y="10" textLength="38.911133">window3</tspan></text><line x1="50" y1="365" x2="485.1" y2="365" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="453.41325" y="363.4195" width="29" height="22" fill="white" fill-opacity="0"/><text transform="translate(458.41325 368.4195)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" fill="black" x=".05419922" y="10" textLength="18.891602">time</tspan></text><circle cx="50" cy="342.5" r="5.000008" fill="black"/><circle cx="50" cy="342.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><circle cx="198.4428" cy="342.5" r="5.000008" fill="black"/><circle cx="198.4428" cy="342.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><circle cx="346.88559" cy="342.5" r="5.000008" fill="black"/><circle cx="346.88559" cy="342.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-single-file-midrolls.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-single-file-midrolls.svg
deleted file mode 100644
index a364587320..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-single-file-midrolls.svg
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="44 825 466 88" width="466pt" height="88pt" xmlns:dc="http://purl.org/dc/elements/1.1/">
-  <metadata> Produced by OmniGraffle 7.4 
-    <dc:date>2017-07-19 14:26:00 +0000</dc:date>
-  </metadata>
-  <defs>
-    <font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.68359" underline-thickness="49.316406" slope="0" x-height="522.9492" cap-height="717.28516" ascent="770.0195" descent="-229.98047" font-weight="500">
-      <font-face-src>
-        <font-face-name name="Helvetica"/>
-      </font-face-src>
-    </font-face>
-    <marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black">
-      <g>
-        <path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/>
-      </g>
-    </marker>
-  </defs>
-  <g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1">
-    <title>Canvas 1</title>
-    <rect fill="white" width="836" height="2e3"/>
-    <g>
-      <title>Layer 1</title>
-      <rect x="50" y="826" width="445" height="25" fill="black" fill-opacity="0"/>
-      <rect x="50" y="826" width="445" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/>
-      <text transform="translate(55 832.5)" fill="black">
-        <tspan font-family="Helvetica" font-size="10" font-weight="500" x="200.82031" y="10" textLength="33.359375">period1</tspan>
-      </text>
-      <rect x="50" y="856" width="445" height="25" fill="black" fill-opacity="0"/>
-      <rect x="50" y="856" width="445" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/>
-      <text transform="translate(55 862.5)" fill="black">
-        <tspan font-family="Helvetica" font-size="10" font-weight="500" x="198.04443" y="10" textLength="38.911133">window1</tspan>
-      </text>
-      <circle cx="50" cy="868.5" r="5.000008" fill="black"/>
-      <circle cx="50" cy="868.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/>
-      <line x1="51" y1="892" x2="486.1" y2="892" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/>
-      <rect x="454.41325" y="890.4195" width="29" height="22" fill="white" fill-opacity="0"/>
-      <text transform="translate(459.41325 895.4195)" fill="black">
-        <tspan font-family="Helvetica" font-size="10" font-weight="500" x=".05419922" y="10" textLength="18.891602">time</tspan>
-      </text>
-      <rect x="139.5" y="826" width="6" height="25" fill="#ccc"/>
-      <rect x="139.5" y="826" width="6" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/>
-      <rect x="226.16667" y="826" width="6" height="25" fill="#ccc"/>
-      <rect x="226.16667" y="826" width="6" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/>
-      <rect x="312.83333" y="826" width="6" height="25" fill="#ccc"/>
-      <rect x="312.83333" y="826" width="6" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/>
-      <rect x="399.5" y="826" width="6" height="25" fill="#ccc"/>
-      <rect x="399.5" y="826" width="6" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/>
-    </g>
-  </g>
-</svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-single-file.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-single-file.svg
deleted file mode 100644
index b9435ed95f..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-single-file.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="34 189 484 107" width="484pt" height="107pt" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="50" y="200" width="445" height="25" fill="black" fill-opacity="0"/><rect x="50" y="200" width="445" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 206.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="200.82031" y="10" textLength="33.359375">period1</tspan></text><rect x="50" y="230" width="445" height="25" fill="black" fill-opacity="0"/><rect x="50" y="230" width="445" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 236.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="198.04443" y="10" textLength="38.911133">window1</tspan></text><circle cx="50" cy="242.5" r="5.000008" fill="black"/><circle cx="50" cy="242.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="51" y1="266" x2="486.1" y2="266" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="454.41325" y="264.4195" width="29" height="22" fill="white" fill-opacity="0"/><text transform="translate(459.41325 269.4195)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".05419922" y="10" textLength="18.891602">time</tspan></text></g></g></svg>
diff --git a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-window.svg b/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-window.svg
deleted file mode 100644
index aaa4b7738b..0000000000
--- a/library/core/src/main/javadoc/com/google/android/exoplayer2/doc-files/timeline-window.svg
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xl="http://www.w3.org/1999/xlink" version="1.1" viewBox="39 787 473 199" width="473pt" height="199pt" xmlns:dc="http://purl.org/dc/elements/1.1/"><metadata> Produced by OmniGraffle 6.6.1 <dc:date>2016-08-30 16:05:23 +0000</dc:date></metadata><defs><font-face font-family="Helvetica" font-size="10" units-per-em="1000" underline-position="-75.683594" underline-thickness="49.316406" slope="0" x-height="522.94922" cap-height="717.28516" ascent="770.01953" descent="-229.98047" font-weight="500"><font-face-src><font-face-name name="Helvetica"/></font-face-src></font-face><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker_2" viewBox="-9 -4 10 8" markerWidth="10" markerHeight="8" color="black"><g><path d="M -8 0 L 0 3 L 0 -3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"/></g></marker><linearGradient x1="0" x2="1" id="Gradient" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="white"/><stop offset="1" stop-color="white" stop-opacity="0"/></linearGradient><linearGradient id="Obj_Gradient" xl:href="#Gradient" gradientTransform="translate(502.75467 812.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_2" xl:href="#Gradient" gradientTransform="translate(502.75467 812.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_3" xl:href="#Gradient" gradientTransform="translate(502.75467 812.5) rotate(180) scale(57.75467)"/><linearGradient id="Obj_Gradient_4" xl:href="#Gradient" gradientTransform="translate(502.75467 812.5) rotate(180) scale(57.75467)"/></defs><g stroke="none" stroke-opacity="1" stroke-dasharray="none" fill="none" fill-opacity="1"><title>Canvas 1</title><rect fill="white" width="836" height="2e3"/><g><title>Layer 1</title><rect x="50" y="800" width="296.92033" height="25" fill="black" fill-opacity="0"/><rect x="50" y="800" width="296.92033" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(55 806.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="126.78048" y="10" textLength="33.359375">period1</tspan></text><rect x="347.1864" y="800" width="147.8136" height="25" fill="black" fill-opacity="0"/><rect x="347.1864" y="800" width="147.8136" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(352.1864 806.5)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="52.227112" y="10" textLength="33.359375">period2</tspan></text><line x1="215.23803" y1="920" x2="429.26197" y2="920" marker-end="url(#FilledArrow_Marker)" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="205.5" y1="909.98415" x2="205.5" y2="974.3898" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="439.16197" y1="909.98415" x2="439.16197" y2="974.64095" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="205.33803" y="875.00003" width="234.66197" height="25" fill="black" fill-opacity="0"/><rect x="205.33803" y="875.00003" width="234.66197" height="25" stroke="black" stroke-linecap="round" stroke-linejoin="miter" stroke-width="1"/><text transform="translate(210.33803 881.50003)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="92.87542" y="10" textLength="38.911133">window1</tspan></text><line x1="50" y1="920" x2="195.43803" y2="920" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(57.789836 924.48415)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".079101562" y="10" textLength="132.8418">window1.positionInFirstPeriod</tspan></text><text transform="translate(281.1883 924.48415)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="2.148123" y="10" textLength="77.82715">window1.duration</tspan></text><circle cx="405.956" cy="887.5" r="5.000008" fill="black"/><circle cx="405.956" cy="887.5" r="5.000008" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="205.5" y1="953.48415" x2="396.6" y2="953.48415" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><line x1="405.6276" y1="928.63515" x2="405.6276" y2="974.3898" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><text transform="translate(239.5638 958.48415)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x="2.2958984" y="10" textLength="128.4082">window1.defaultStartPosition</tspan></text><path d="M 294.17111 830.14747 C 298.4618 833.37285 302.96775 837.6977 308.92033 844 C 319.23498 854.92063 322.46793 866.5256 323.23382 875.00003" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="181.5" y="839" width="122" height="22" fill="white" fill-opacity="0"/><text transform="translate(186.5 844)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".4165039" y="10" textLength="46.689453">window1.fi</tspan><tspan font-family="Helvetica" font-size="10" font-weight="500" x="47.105957" y="10" textLength="64.47754">rstPeriodIndex</tspan></text><path d="M 359.39088 830.24503 C 353.18753 834.7477 347.70308 840.4071 339 850.3771 C 330.87957 859.67967 326.78076 868.3698 324.71894 875.00003" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/><rect x="348.1864" y="839" width="121" height="22" fill="white" fill-opacity="0"/><text transform="translate(353.1864 844)" fill="black"><tspan font-family="Helvetica" font-size="10" font-weight="500" x=".18994141" y="10" textLength="110.62012">window1.lastPeriodIndex</tspan></text><rect x="445" y="796.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient)"/><rect x="445" y="796.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_2)"/><rect x="445" y="796.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_3)"/><rect x="445" y="796.1257" width="57.75467" height="32.748597" fill="url(#Obj_Gradient_4)"/><line x1="50" y1="832.48415" x2="50" y2="941.48415" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"/></g></g></svg>
diff --git a/library/dash/build.gradle b/library/dash/build.gradle
index f5592c7f64..9b54b22343 100644
--- a/library/dash/build.gradle
+++ b/library/dash/build.gradle
@@ -36,8 +36,4 @@ dependencies {
     compile project(modulePrefix + 'library-core')
     compile 'com.android.support:support-annotations:' + supportLibraryVersion
     compile 'com.android.support:support-core-utils:' + supportLibraryVersion
-    androidTestCompile project(modulePrefix + 'testutils')
-    androidTestCompile 'com.google.dexmaker:dexmaker:' + dexmakerVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:' + dexmakerVersion
-    androidTestCompile 'org.mockito:mockito-core:' + mockitoVersion
 }
\ No newline at end of file
diff --git a/library/dash/src/androidTest/AndroidManifest.xml b/library/dash/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index a9b143253f..0000000000
--- a/library/dash/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer2.source.dash.test">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner"/>
-  </application>
-
-  <instrumentation
-      android:targetPackage="com.google.android.exoplayer2.source.dash.test"
-      android:name="android.test.InstrumentationTestRunner"/>
-
-</manifest>
diff --git a/library/dash/src/androidTest/assets/sample_mpd_1 b/library/dash/src/androidTest/assets/sample_mpd_1
deleted file mode 100644
index 07bcdd4f50..0000000000
--- a/library/dash/src/androidTest/assets/sample_mpd_1
+++ /dev/null
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<MPD xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    availabilityStartTime="2014-06-19T23:07:42"
-    minBufferTime="PT1.500S"
-    minimumUpdatePeriod="PT5.000S"
-    profiles="urn:mpeg:dash:profile:isoff-main:2011"
-    timeShiftBufferDepth="PT129600.000S"
-    type="dynamic"
-    xmlns="urn:mpeg:DASH:schema:MPD:2011"
-    xsi:schemaLocation="urn:mpeg:DASH:schema:MPD:2011 DASH-MPD.xsd"
-    yt:earliestMediaSequence="1266404" >
-    <Period start="PT6462826.784S" >
-        <SegmentList
-            presentationTimeOffset="34740095"
-            startNumber="1292317"
-            timescale="1000" >
-            <SegmentTimeline>
-                <S d="4804" />
-                <S d="5338" />
-                <S d="4938" />
-            </SegmentTimeline>
-        </SegmentList>
-        <AdaptationSet
-            mimeType="audio/mp4"
-            subsegmentAlignment="true" >
-            <Role
-                schemeIdUri="urn:mpeg:DASH:role:2011"
-                value="main" />
-            <Representation
-                id="141"
-                audioSamplingRate="48000"
-                bandwidth="272000"
-                codecs="mp4a.40.2"
-                startWithSAP="1" >
-                <AudioChannelConfiguration
-                    schemeIdUri="urn:mpeg:dash:23003:3:audio_channel_configuration:2011"
-                    value="2" />
-                <BaseURL>
-http://www.test.com/141
-                </BaseURL>
-                <SegmentList>
-                    <Initialization
-                        range="0-591"
-                        sourceURL="sq/0/clen/79480/lmt/1403219262956762/dur/4.805" />
-                    <SegmentURL media="sq/1292317/clen/77447/lmt/1409671169987621/dur/4.805" />
-                    <SegmentURL media="sq/1292318/clen/86958/lmt/1409671174832549/dur/5.339" />
-                    <SegmentURL media="sq/1292319/clen/85018/lmt/1409671179719956/dur/4.938" />
-                </SegmentList>
-            </Representation>
-        </AdaptationSet>
-        <AdaptationSet
-            mimeType="video/mp4"
-            subsegmentAlignment="true" >
-            <Role
-                schemeIdUri="urn:mpeg:DASH:role:2011"
-                value="main" />
-            <Representation
-                id="135"
-                bandwidth="1116000"
-                codecs="avc1.42c01f"
-                height="480"
-                startWithSAP="1"
-                width="854" >
-                <BaseURL>
-http://www.test.com/135
-                </BaseURL>
-                <SegmentList>
-                    <Initialization
-                        range="0-671"
-                        sourceURL="sq/0/clen/1221137/lmt/1403219262956762/dur/4.805" />
-                    <SegmentURL media="sq/1292317/clen/1279915/lmt/1409671169987621/dur/4.805" />
-                    <SegmentURL media="sq/1292318/clen/1310650/lmt/1409671174832549/dur/5.339" />
-                    <SegmentURL media="sq/1292319/clen/1486558/lmt/1409671179719956/dur/4.938" />
-                </SegmentList>
-            </Representation>
-        </AdaptationSet>
-        <AdaptationSet
-            lang="en"
-            mimeType="text/vtt" >
-            <Role
-                schemeIdUri="urn:mpeg:DASH:role:2011"
-                value="caption" />
-            <Representation
-                id="en"
-                bandwidth="0"
-                codecs="" >
-                <BaseURL>
-http://www.test.com/vtt
-                </BaseURL>
-                <SegmentList>
-                    <SegmentURL media="sq/1292317" />
-                    <SegmentURL media="sq/1292318" />
-                    <SegmentURL media="sq/1292319" />
-                </SegmentList>
-            </Representation>
-        </AdaptationSet>
-    </Period>
-</MPD>
-
diff --git a/library/dash/src/androidTest/assets/sample_mpd_2_unknown_mime_type b/library/dash/src/androidTest/assets/sample_mpd_2_unknown_mime_type
deleted file mode 100644
index c6f00965e3..0000000000
--- a/library/dash/src/androidTest/assets/sample_mpd_2_unknown_mime_type
+++ /dev/null
@@ -1,118 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<MPD xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    availabilityStartTime="2014-06-19T23:07:42"
-    minBufferTime="PT1.500S"
-    minimumUpdatePeriod="PT5.000S"
-    profiles="urn:mpeg:dash:profile:isoff-main:2011"
-    timeShiftBufferDepth="PT129600.000S"
-    type="dynamic"
-    xmlns="urn:mpeg:DASH:schema:MPD:2011"
-    xsi:schemaLocation="urn:mpeg:DASH:schema:MPD:2011 DASH-MPD.xsd"
-    yt:earliestMediaSequence="1266404" >
-    <Period start="PT6462826.784S" >
-        <SegmentList
-            presentationTimeOffset="34740095"
-            startNumber="1292317"
-            timescale="1000" >
-            <SegmentTimeline>
-                <S d="4804" />
-                <S d="5338" />
-                <S d="4938" />
-            </SegmentTimeline>
-        </SegmentList>
-        <AdaptationSet
-            mimeType="audio/mp4"
-            subsegmentAlignment="true" >
-            <Role
-                schemeIdUri="urn:mpeg:DASH:role:2011"
-                value="main" />
-            <Representation
-                id="141"
-                audioSamplingRate="48000"
-                bandwidth="272000"
-                codecs="mp4a.40.2"
-                startWithSAP="1" >
-                <AudioChannelConfiguration
-                    schemeIdUri="urn:mpeg:dash:23003:3:audio_channel_configuration:2011"
-                    value="2" />
-                <BaseURL>
-http://www.test.com/141
-                </BaseURL>
-                <SegmentList>
-                    <Initialization
-                        range="0-591"
-                        sourceURL="sq/0/clen/79480/lmt/1403219262956762/dur/4.805" />
-                    <SegmentURL media="sq/1292317/clen/77447/lmt/1409671169987621/dur/4.805" />
-                    <SegmentURL media="sq/1292318/clen/86958/lmt/1409671174832549/dur/5.339" />
-                    <SegmentURL media="sq/1292319/clen/85018/lmt/1409671179719956/dur/4.938" />
-                </SegmentList>
-            </Representation>
-        </AdaptationSet>
-        <AdaptationSet
-            mimeType="video/mp4"
-            subsegmentAlignment="true" >
-            <Role
-                schemeIdUri="urn:mpeg:DASH:role:2011"
-                value="main" />
-            <Representation
-                id="135"
-                bandwidth="1116000"
-                codecs="avc1.42c01f"
-                height="480"
-                startWithSAP="1"
-                width="854" >
-                <BaseURL>
-http://www.test.com/135
-                </BaseURL>
-                <SegmentList>
-                    <Initialization
-                        range="0-671"
-                        sourceURL="sq/0/clen/1221137/lmt/1403219262956762/dur/4.805" />
-                    <SegmentURL media="sq/1292317/clen/1279915/lmt/1409671169987621/dur/4.805" />
-                    <SegmentURL media="sq/1292318/clen/1310650/lmt/1409671174832549/dur/5.339" />
-                    <SegmentURL media="sq/1292319/clen/1486558/lmt/1409671179719956/dur/4.938" />
-                </SegmentList>
-            </Representation>
-        </AdaptationSet>
-        <AdaptationSet
-            lang="en"
-            mimeType="text/vtt" >
-            <Role
-                schemeIdUri="urn:mpeg:DASH:role:2011"
-                value="caption" />
-            <Representation
-                id="en"
-                bandwidth="0"
-                codecs="" >
-                <BaseURL>
-http://www.test.com/vtt
-                </BaseURL>
-                <SegmentList>
-                    <SegmentURL media="sq/1292317" />
-                    <SegmentURL media="sq/1292318" />
-                    <SegmentURL media="sq/1292319" />
-                </SegmentList>
-            </Representation>
-        </AdaptationSet>
-        <AdaptationSet
-                    mimeType="application/octet-stream" >
-                    <Role
-                        schemeIdUri="urn:mpeg:DASH:role:2011"
-                        value="caption" />
-                    <Representation
-                        id="608"
-                        bandwidth="0"
-                        codecs="" >
-                        <BaseURL>
-        http://www.test.com/608
-                        </BaseURL>
-                        <SegmentList>
-                            <SegmentURL media="sq/1292317" />
-                            <SegmentURL media="sq/1292318" />
-                            <SegmentURL media="sq/1292319" />
-                        </SegmentList>
-                    </Representation>
-                </AdaptationSet>
-    </Period>
-</MPD>
-
diff --git a/library/dash/src/androidTest/assets/sample_mpd_3_segment_template b/library/dash/src/androidTest/assets/sample_mpd_3_segment_template
deleted file mode 100644
index a9147b54df..0000000000
--- a/library/dash/src/androidTest/assets/sample_mpd_3_segment_template
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<MPD xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:mpeg:DASH:schema:MPD:2011" xmlns:yt="http://youtube.com/yt/2012/10/10" xsi:schemaLocation="urn:mpeg:DASH:schema:MPD:2011 DASH-MPD.xsd" minBufferTime="PT1.500S" profiles="urn:mpeg:dash:profile:isoff-main:2011" type="dynamic" availabilityStartTime="2016-10-14T17:00:17" timeShiftBufferDepth="PT7200.000S" minimumUpdatePeriod="PT2.000S" yt:earliestMediaSequence="0" yt:mpdRequestTime="2016-10-14T18:29:17.082" yt:mpdResponseTime="2016-10-14T18:29:17.194">
- <Period start="PT0.000S" yt:segmentIngestTime="2016-10-14T17:00:14.257">
-  <SegmentTemplate startNumber="0" timescale="1000" media="sq/$Number$">
-   <SegmentTimeline>
-    <S d="2002" t="6009" r="2"/>
-    <S d="1985"/>
-    <S d="2000"/>
-   </SegmentTimeline>
-  </SegmentTemplate>
-  <AdaptationSet id="0" mimeType="audio/mp4" subsegmentAlignment="true">
-   <Role schemeIdUri="urn:mpeg:DASH:role:2011" value="main"/>
-   <Representation id="140" codecs="mp4a.40.2" audioSamplingRate="48000" startWithSAP="1" bandwidth="144000">
-    <AudioChannelConfiguration schemeIdUri="urn:mpeg:dash:23003:3:audio_channel_configuration:2011" value="2"/>
-    <BaseURL>http://redirector.googlevideo.com/videoplayback/id/BktsoMO3OMs.0/itag/140/source/yt_live_broadcast/ratebypass/yes/cmbypass/yes/mime/audio%2Fmp4/live/1/gir/yes/noclen/1/signature/B5137EA0CC278C07DD056D204E863CC81EDEB39E.1AD5D242EBC94922EDA7165353A89A5E08A4103A/key/dg_test0/mpd_version/5/ip/0.0.0.0/ipbits/0/expire/1476490914/sparams/ip,ipbits,expire,id,itag,source,ratebypass,cmbypass,mime,live,gir,noclen/</BaseURL>
-   </Representation>
-  </AdaptationSet>
-  <AdaptationSet id="1" mimeType="video/mp4" subsegmentAlignment="true">
-   <Role schemeIdUri="urn:mpeg:DASH:role:2011" value="main"/>
-   <Representation id="133" codecs="avc1.4d4015" width="426" height="240" startWithSAP="1" maxPlayoutRate="1" bandwidth="258000" frameRate="30">
-    <BaseURL>http://redirector.googlevideo.com/videoplayback/id/BktsoMO3OMs.0/itag/133/source/yt_live_broadcast/ratebypass/yes/cmbypass/yes/mime/video%2Fmp4/live/1/gir/yes/noclen/1/signature/90154AE9C5C9D9D519CBF2E43AB0A1778375992D.40E2E855ADFB38FA7E95E168FEEEA6796B080BD7/key/dg_test0/mpd_version/5/ip/0.0.0.0/ipbits/0/expire/1476490914/sparams/ip,ipbits,expire,id,itag,source,ratebypass,cmbypass,mime,live,gir,noclen/</BaseURL>
-   </Representation>
-   <Representation id="134" codecs="avc1.4d401e" width="640" height="360" startWithSAP="1" maxPlayoutRate="1" bandwidth="646000" frameRate="30">
-    <BaseURL>http://redirector.googlevideo.com/videoplayback/id/BktsoMO3OMs.0/itag/134/source/yt_live_broadcast/ratebypass/yes/cmbypass/yes/mime/video%2Fmp4/live/1/gir/yes/noclen/1/signature/5C094AEFDCEB1A4D2F3C05F8BD095C336EF0E1C3.7AE6B9951B0237AAE6F031927AACAC4974BAFFAA/key/dg_test0/mpd_version/5/ip/0.0.0.0/ipbits/0/expire/1476490914/sparams/ip,ipbits,expire,id,itag,source,ratebypass,cmbypass,mime,live,gir,noclen/</BaseURL>
-   </Representation>
-   <Representation id="135" codecs="avc1.4d401f" width="854" height="480" startWithSAP="1" maxPlayoutRate="1" bandwidth="1171000" frameRate="30">
-    <BaseURL>http://redirector.googlevideo.com/videoplayback/id/BktsoMO3OMs.0/itag/135/source/yt_live_broadcast/ratebypass/yes/cmbypass/yes/mime/video%2Fmp4/live/1/gir/yes/noclen/1/signature/1F7660CA4E5B4AE4D60E18795680E34CDD2EF3C9.800B0A1D5F490DE142CCF4C88C64FD21D42129/key/dg_test0/mpd_version/5/ip/0.0.0.0/ipbits/0/expire/1476490914/sparams/ip,ipbits,expire,id,itag,source,ratebypass,cmbypass,mime,live,gir,noclen/</BaseURL>
-   </Representation>
-   <Representation id="160" codecs="avc1.42c00b" width="256" height="144" startWithSAP="1" maxPlayoutRate="1" bandwidth="124000" frameRate="30">
-    <BaseURL>http://redirector.googlevideo.com/videoplayback/id/BktsoMO3OMs.0/itag/160/source/yt_live_broadcast/ratebypass/yes/cmbypass/yes/mime/video%2Fmp4/live/1/gir/yes/noclen/1/signature/94EB61673784DF0C4237A1A866F2E171C8A64ADB.AEC00AA06C2278FEA8702FB62693B70D8977F46C/key/dg_test0/mpd_version/5/ip/0.0.0.0/ipbits/0/expire/1476490914/sparams/ip,ipbits,expire,id,itag,source,ratebypass,cmbypass,mime,live,gir,noclen/</BaseURL>
-   </Representation>
-   <Representation id="136" codecs="avc1.4d401f" width="1280" height="720" startWithSAP="1" maxPlayoutRate="1" bandwidth="2326000" frameRate="30">
-    <BaseURL>http://redirector.googlevideo.com/videoplayback/id/BktsoMO3OMs.0/itag/136/source/yt_live_broadcast/ratebypass/yes/cmbypass/yes/mime/video%2Fmp4/live/1/gir/yes/noclen/1/signature/6D8C34FC30A1F1A4F700B61180D1C4CCF6274844.29EBCB4A837DE626C52C66CF650519E61C2FF0BF/key/dg_test0/mpd_version/5/ip/0.0.0.0/ipbits/0/expire/1476490914/sparams/ip,ipbits,expire,id,itag,source,ratebypass,cmbypass,mime,live,gir,noclen/</BaseURL>
-   </Representation>
-  </AdaptationSet>
- </Period>
-</MPD>
-
diff --git a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/DashUtilTest.java b/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/DashUtilTest.java
deleted file mode 100644
index bac1c272e8..0000000000
--- a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/DashUtilTest.java
+++ /dev/null
@@ -1,82 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.dash;
-
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.drm.DrmInitData;
-import com.google.android.exoplayer2.drm.DrmInitData.SchemeData;
-import com.google.android.exoplayer2.source.dash.manifest.AdaptationSet;
-import com.google.android.exoplayer2.source.dash.manifest.Period;
-import com.google.android.exoplayer2.source.dash.manifest.Representation;
-import com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase;
-import com.google.android.exoplayer2.upstream.DummyDataSource;
-import com.google.android.exoplayer2.util.MimeTypes;
-import java.util.Arrays;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link DashUtil}.
- */
-public final class DashUtilTest extends TestCase {
-
-  public void testLoadDrmInitDataFromManifest() throws Exception {
-    Period period = newPeriod(newAdaptationSets(newRepresentations(newDrmInitData())));
-    DrmInitData drmInitData = DashUtil.loadDrmInitData(DummyDataSource.INSTANCE, period);
-    assertEquals(newDrmInitData(), drmInitData);
-  }
-
-  public void testLoadDrmInitDataMissing() throws Exception {
-    Period period = newPeriod(newAdaptationSets(newRepresentations(null /* no init data */)));
-    DrmInitData drmInitData = DashUtil.loadDrmInitData(DummyDataSource.INSTANCE, period);
-    assertNull(drmInitData);
-  }
-
-  public void testLoadDrmInitDataNoRepresentations() throws Exception {
-    Period period = newPeriod(newAdaptationSets(/* no representation */));
-    DrmInitData drmInitData = DashUtil.loadDrmInitData(DummyDataSource.INSTANCE, period);
-    assertNull(drmInitData);
-  }
-
-  public void testLoadDrmInitDataNoAdaptationSets() throws Exception {
-    Period period = newPeriod(/* no adaptation set */);
-    DrmInitData drmInitData = DashUtil.loadDrmInitData(DummyDataSource.INSTANCE, period);
-    assertNull(drmInitData);
-  }
-
-  private static Period newPeriod(AdaptationSet... adaptationSets) {
-    return new Period("", 0, Arrays.asList(adaptationSets));
-  }
-
-  private static AdaptationSet newAdaptationSets(Representation... representations) {
-    return new AdaptationSet(0, C.TRACK_TYPE_VIDEO, Arrays.asList(representations), null, null);
-  }
-
-  private static Representation newRepresentations(DrmInitData drmInitData) {
-    Format format = Format.createVideoContainerFormat("id", MimeTypes.VIDEO_MP4,
-        MimeTypes.VIDEO_H264, "", Format.NO_VALUE, 1024, 768, Format.NO_VALUE, null, 0);
-    if (drmInitData != null) {
-      format = format.copyWithDrmInitData(drmInitData);
-    }
-    return Representation.newInstance("", 0, format, "", new SingleSegmentBase());
-  }
-
-  private static DrmInitData newDrmInitData() {
-    return new DrmInitData(new SchemeData(C.WIDEVINE_UUID, null, "mimeType",
-        new byte[]{1, 4, 7, 0, 3, 6}));
-  }
-
-}
diff --git a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParserTest.java b/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParserTest.java
deleted file mode 100644
index 3ce4b37ec6..0000000000
--- a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParserTest.java
+++ /dev/null
@@ -1,126 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.dash.manifest;
-
-import android.net.Uri;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-import java.util.Collections;
-import java.util.List;
-
-/**
- * Unit tests for {@link DashManifestParser}.
- */
-public class DashManifestParserTest extends InstrumentationTestCase {
-
-  private static final String SAMPLE_MPD_1 = "sample_mpd_1";
-  private static final String SAMPLE_MPD_2_UNKNOWN_MIME_TYPE = "sample_mpd_2_unknown_mime_type";
-  private static final String SAMPLE_MPD_3_SEGMENT_TEMPLATE = "sample_mpd_3_segment_template";
-
-  /**
-   * Simple test to ensure the sample manifests parse without any exceptions being thrown.
-   */
-  public void testParseMediaPresentationDescription() throws IOException {
-    DashManifestParser parser = new DashManifestParser();
-    parser.parse(Uri.parse("https://example.com/test.mpd"),
-        TestUtil.getInputStream(getInstrumentation(), SAMPLE_MPD_1));
-    parser.parse(Uri.parse("https://example.com/test.mpd"),
-        TestUtil.getInputStream(getInstrumentation(), SAMPLE_MPD_2_UNKNOWN_MIME_TYPE));
-  }
-
-  public void testParseMediaPresentationDescriptionWithSegmentTemplate() throws IOException {
-    DashManifestParser parser = new DashManifestParser();
-    DashManifest mpd = parser.parse(Uri.parse("https://example.com/test.mpd"),
-        TestUtil.getInputStream(getInstrumentation(), SAMPLE_MPD_3_SEGMENT_TEMPLATE));
-
-    assertEquals(1, mpd.getPeriodCount());
-
-    Period period = mpd.getPeriod(0);
-    assertNotNull(period);
-    assertEquals(2, period.adaptationSets.size());
-
-    for (AdaptationSet adaptationSet : period.adaptationSets) {
-      assertNotNull(adaptationSet);
-      for (Representation representation : adaptationSet.representations) {
-        if (representation instanceof Representation.MultiSegmentRepresentation) {
-          Representation.MultiSegmentRepresentation multiSegmentRepresentation =
-              (Representation.MultiSegmentRepresentation) representation;
-          int firstSegmentIndex = multiSegmentRepresentation.getFirstSegmentNum();
-          RangedUri uri = multiSegmentRepresentation.getSegmentUrl(firstSegmentIndex);
-          assertTrue(uri.resolveUriString(representation.baseUrl).contains(
-              "redirector.googlevideo.com"));
-        }
-      }
-    }
-  }
-
-  public void testParseCea608AccessibilityChannel() {
-    assertEquals(1, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("CC1=eng")));
-    assertEquals(2, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("CC2=eng")));
-    assertEquals(3, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("CC3=eng")));
-    assertEquals(4, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("CC4=eng")));
-
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors(null)));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("")));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("CC0=eng")));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("CC5=eng")));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea608AccessibilityChannel(
-        buildCea608AccessibilityDescriptors("Wrong format")));
-  }
-
-  public void testParseCea708AccessibilityChannel() {
-    assertEquals(1, DashManifestParser.parseCea708AccessibilityChannel(
-        buildCea708AccessibilityDescriptors("1=lang:eng")));
-    assertEquals(2, DashManifestParser.parseCea708AccessibilityChannel(
-        buildCea708AccessibilityDescriptors("2=lang:eng")));
-    assertEquals(3, DashManifestParser.parseCea708AccessibilityChannel(
-        buildCea708AccessibilityDescriptors("3=lang:eng")));
-    assertEquals(62, DashManifestParser.parseCea708AccessibilityChannel(
-        buildCea708AccessibilityDescriptors("62=lang:eng")));
-    assertEquals(63, DashManifestParser.parseCea708AccessibilityChannel(
-        buildCea708AccessibilityDescriptors("63=lang:eng")));
-
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea708AccessibilityChannel(
-        buildCea708AccessibilityDescriptors(null)));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea708AccessibilityChannel(
-        buildCea708AccessibilityDescriptors("")));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea708AccessibilityChannel(
-            buildCea708AccessibilityDescriptors("0=lang:eng")));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea708AccessibilityChannel(
-            buildCea708AccessibilityDescriptors("64=lang:eng")));
-    assertEquals(Format.NO_VALUE, DashManifestParser.parseCea708AccessibilityChannel(
-            buildCea708AccessibilityDescriptors("Wrong format")));
-  }
-
-  private static List<Descriptor> buildCea608AccessibilityDescriptors(String value) {
-    return Collections.singletonList(new Descriptor("urn:scte:dash:cc:cea-608:2015", value, null));
-  }
-
-  private static List<Descriptor> buildCea708AccessibilityDescriptors(String value) {
-    return Collections.singletonList(new Descriptor("urn:scte:dash:cc:cea-708:2015", value, null));
-  }
-
-}
diff --git a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestTest.java b/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestTest.java
deleted file mode 100644
index 7d77ae82d9..0000000000
--- a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestTest.java
+++ /dev/null
@@ -1,194 +0,0 @@
-/*
- * Copyright (C) 2017 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.dash.manifest;
-
-import android.net.Uri;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-import java.util.Random;
-import junit.framework.TestCase;
-
-/**
- * Unit tests for {@link DashManifest}.
- */
-public class DashManifestTest extends TestCase {
-
-  private static final UtcTimingElement DUMMY_UTC_TIMING = new UtcTimingElement("", "");
-  private static final SingleSegmentBase DUMMY_SEGMENT_BASE = new SingleSegmentBase();
-  private static final Format DUMMY_FORMAT = Format.createSampleFormat("", "", 0);
-
-  public void testCopy() throws Exception {
-    Representation[][][] representations = newRepresentations(3, 2, 3);
-    DashManifest sourceManifest = newDashManifest(10,
-        newPeriod("1", 1,
-            newAdaptationSet(2, representations[0][0]),
-            newAdaptationSet(3, representations[0][1])),
-        newPeriod("4", 4,
-            newAdaptationSet(5, representations[1][0]),
-            newAdaptationSet(6, representations[1][1])),
-        newPeriod("7", 7,
-            newAdaptationSet(8, representations[2][0]),
-            newAdaptationSet(9, representations[2][1])));
-
-    List<RepresentationKey> keys = Arrays.asList(
-        new RepresentationKey(0, 0, 0),
-        new RepresentationKey(0, 0, 1),
-        new RepresentationKey(0, 1, 2),
-
-        new RepresentationKey(1, 0, 1),
-        new RepresentationKey(1, 1, 0),
-        new RepresentationKey(1, 1, 2),
-
-        new RepresentationKey(2, 0, 1),
-        new RepresentationKey(2, 0, 2),
-        new RepresentationKey(2, 1, 0));
-    // Keys don't need to be in any particular order
-    Collections.shuffle(keys, new Random(0));
-
-    DashManifest copyManifest = sourceManifest.copy(keys);
-
-    DashManifest expectedManifest = newDashManifest(10,
-        newPeriod("1", 1,
-            newAdaptationSet(2, representations[0][0][0], representations[0][0][1]),
-            newAdaptationSet(3, representations[0][1][2])),
-        newPeriod("4", 4,
-            newAdaptationSet(5, representations[1][0][1]),
-            newAdaptationSet(6, representations[1][1][0], representations[1][1][2])),
-        newPeriod("7", 7,
-            newAdaptationSet(8, representations[2][0][1], representations[2][0][2]),
-            newAdaptationSet(9, representations[2][1][0])));
-    assertManifestEquals(expectedManifest, copyManifest);
-  }
-
-  public void testCopySameAdaptationIndexButDifferentPeriod() throws Exception {
-    Representation[][][] representations = newRepresentations(2, 1, 1);
-    DashManifest sourceManifest = newDashManifest(10,
-        newPeriod("1", 1,
-            newAdaptationSet(2, representations[0][0])),
-        newPeriod("4", 4,
-            newAdaptationSet(5, representations[1][0])));
-
-    DashManifest copyManifest = sourceManifest.copy(Arrays.asList(
-        new RepresentationKey(0, 0, 0),
-        new RepresentationKey(1, 0, 0)));
-
-    DashManifest expectedManifest = newDashManifest(10,
-        newPeriod("1", 1,
-            newAdaptationSet(2, representations[0][0])),
-        newPeriod("4", 4,
-            newAdaptationSet(5, representations[1][0])));
-    assertManifestEquals(expectedManifest, copyManifest);
-  }
-
-  public void testCopySkipPeriod() throws Exception {
-    Representation[][][] representations = newRepresentations(3, 2, 3);
-    DashManifest sourceManifest = newDashManifest(10,
-        newPeriod("1", 1,
-            newAdaptationSet(2, representations[0][0]),
-            newAdaptationSet(3, representations[0][1])),
-        newPeriod("4", 4,
-            newAdaptationSet(5, representations[1][0]),
-            newAdaptationSet(6, representations[1][1])),
-        newPeriod("7", 7,
-            newAdaptationSet(8, representations[2][0]),
-            newAdaptationSet(9, representations[2][1])));
-
-    DashManifest copyManifest = sourceManifest.copy(Arrays.asList(
-        new RepresentationKey(0, 0, 0),
-        new RepresentationKey(0, 0, 1),
-        new RepresentationKey(0, 1, 2),
-
-        new RepresentationKey(2, 0, 1),
-        new RepresentationKey(2, 0, 2),
-        new RepresentationKey(2, 1, 0)));
-
-    DashManifest expectedManifest = newDashManifest(7,
-        newPeriod("1", 1,
-            newAdaptationSet(2, representations[0][0][0], representations[0][0][1]),
-            newAdaptationSet(3, representations[0][1][2])),
-        newPeriod("7", 4,
-            newAdaptationSet(8, representations[2][0][1], representations[2][0][2]),
-            newAdaptationSet(9, representations[2][1][0])));
-    assertManifestEquals(expectedManifest, copyManifest);
-  }
-
-  private static void assertManifestEquals(DashManifest expected, DashManifest actual) {
-    assertEquals(expected.availabilityStartTime, actual.availabilityStartTime);
-    assertEquals(expected.duration, actual.duration);
-    assertEquals(expected.minBufferTime, actual.minBufferTime);
-    assertEquals(expected.dynamic, actual.dynamic);
-    assertEquals(expected.minUpdatePeriod, actual.minUpdatePeriod);
-    assertEquals(expected.timeShiftBufferDepth, actual.timeShiftBufferDepth);
-    assertEquals(expected.suggestedPresentationDelay, actual.suggestedPresentationDelay);
-    assertEquals(expected.utcTiming, actual.utcTiming);
-    assertEquals(expected.location, actual.location);
-    assertEquals(expected.getPeriodCount(), actual.getPeriodCount());
-    for (int i = 0; i < expected.getPeriodCount(); i++) {
-      Period expectedPeriod = expected.getPeriod(i);
-      Period actualPeriod = actual.getPeriod(i);
-      assertEquals(expectedPeriod.id, actualPeriod.id);
-      assertEquals(expectedPeriod.startMs, actualPeriod.startMs);
-      List<AdaptationSet> expectedAdaptationSets = expectedPeriod.adaptationSets;
-      List<AdaptationSet> actualAdaptationSets = actualPeriod.adaptationSets;
-      assertEquals(expectedAdaptationSets.size(), actualAdaptationSets.size());
-      for (int j = 0; j < expectedAdaptationSets.size(); j++) {
-        AdaptationSet expectedAdaptationSet = expectedAdaptationSets.get(j);
-        AdaptationSet actualAdaptationSet = actualAdaptationSets.get(j);
-        assertEquals(expectedAdaptationSet.id, actualAdaptationSet.id);
-        assertEquals(expectedAdaptationSet.type, actualAdaptationSet.type);
-        assertEquals(expectedAdaptationSet.accessibilityDescriptors,
-            actualAdaptationSet.accessibilityDescriptors);
-        assertEquals(expectedAdaptationSet.representations, actualAdaptationSet.representations);
-      }
-    }
-  }
-
-  private static Representation[][][] newRepresentations(int periodCount, int adaptationSetCounts,
-      int representationCounts) {
-    Representation[][][] representations = new Representation[periodCount][][];
-    for (int i = 0; i < periodCount; i++) {
-      representations[i] = new Representation[adaptationSetCounts][];
-      for (int j = 0; j < adaptationSetCounts; j++) {
-        representations[i][j] = new Representation[representationCounts];
-        for (int k = 0; k < representationCounts; k++) {
-          representations[i][j][k] = newRepresentation();
-        }
-      }
-    }
-    return representations;
-  }
-
-  private static Representation newRepresentation() {
-    return Representation.newInstance("", 0, DUMMY_FORMAT, "", DUMMY_SEGMENT_BASE);
-  }
-
-  private static DashManifest newDashManifest(int duration, Period... periods) {
-    return new DashManifest(0, duration, 1, false, 2, 3, 4, DUMMY_UTC_TIMING, Uri.EMPTY,
-        Arrays.asList(periods));
-  }
-
-  private static Period newPeriod(String id, int startMs, AdaptationSet... adaptationSets) {
-    return new Period(id, startMs, Arrays.asList(adaptationSets));
-  }
-
-  private static AdaptationSet newAdaptationSet(int seed, Representation... representations) {
-    return new AdaptationSet(++seed, ++seed, Arrays.asList(representations), null, null);
-  }
-
-}
diff --git a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/RangedUriTest.java b/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/RangedUriTest.java
deleted file mode 100644
index fd559381fa..0000000000
--- a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/RangedUriTest.java
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.dash.manifest;
-
-import com.google.android.exoplayer2.C;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link RangedUri}.
- */
-public class RangedUriTest extends TestCase {
-
-  private static final String BASE_URI = "http://www.test.com/";
-  private static final String PARTIAL_URI = "path/file.ext";
-  private static final String FULL_URI = BASE_URI + PARTIAL_URI;
-
-  public void testMerge() {
-    RangedUri rangeA = new RangedUri(FULL_URI, 0, 10);
-    RangedUri rangeB = new RangedUri(FULL_URI, 10, 10);
-    RangedUri expected = new RangedUri(FULL_URI, 0, 20);
-    assertMerge(rangeA, rangeB, expected, null);
-  }
-
-  public void testMergeUnbounded() {
-    RangedUri rangeA = new RangedUri(FULL_URI, 0, 10);
-    RangedUri rangeB = new RangedUri(FULL_URI, 10, C.LENGTH_UNSET);
-    RangedUri expected = new RangedUri(FULL_URI, 0, C.LENGTH_UNSET);
-    assertMerge(rangeA, rangeB, expected, null);
-  }
-
-  public void testNonMerge() {
-    // A and B do not overlap, so should not merge
-    RangedUri rangeA = new RangedUri(FULL_URI, 0, 10);
-    RangedUri rangeB = new RangedUri(FULL_URI, 11, 10);
-    assertNonMerge(rangeA, rangeB, null);
-
-    // A and B do not overlap, so should not merge
-    rangeA = new RangedUri(FULL_URI, 0, 10);
-    rangeB = new RangedUri(FULL_URI, 11, C.LENGTH_UNSET);
-    assertNonMerge(rangeA, rangeB, null);
-
-    // A and B are bounded but overlap, so should not merge
-    rangeA = new RangedUri(FULL_URI, 0, 11);
-    rangeB = new RangedUri(FULL_URI, 10, 10);
-    assertNonMerge(rangeA, rangeB, null);
-
-    // A and B overlap due to unboundedness, so should not merge
-    rangeA = new RangedUri(FULL_URI, 0, C.LENGTH_UNSET);
-    rangeB = new RangedUri(FULL_URI, 10, C.LENGTH_UNSET);
-    assertNonMerge(rangeA, rangeB, null);
-  }
-
-  public void testMergeWithBaseUri() {
-    RangedUri rangeA = new RangedUri(PARTIAL_URI, 0, 10);
-    RangedUri rangeB = new RangedUri(FULL_URI, 10, 10);
-    RangedUri expected = new RangedUri(FULL_URI, 0, 20);
-    assertMerge(rangeA, rangeB, expected, BASE_URI);
-  }
-
-  private void assertMerge(RangedUri rangeA, RangedUri rangeB, RangedUri expected, String baseUrl) {
-    RangedUri merged = rangeA.attemptMerge(rangeB, baseUrl);
-    assertEquals(expected, merged);
-    merged = rangeB.attemptMerge(rangeA, baseUrl);
-    assertEquals(expected, merged);
-  }
-
-  private void assertNonMerge(RangedUri rangeA, RangedUri rangeB, String baseUrl) {
-    RangedUri merged = rangeA.attemptMerge(rangeB, baseUrl);
-    assertNull(merged);
-    merged = rangeB.attemptMerge(rangeA, baseUrl);
-    assertNull(merged);
-  }
-
-}
diff --git a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/RepresentationTest.java b/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/RepresentationTest.java
deleted file mode 100644
index 5d10aba1ae..0000000000
--- a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/RepresentationTest.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.dash.manifest;
-
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase;
-import com.google.android.exoplayer2.util.MimeTypes;
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link Representation}.
- */
-public class RepresentationTest extends TestCase {
-
-  public void testGetCacheKey() {
-    String uri = "http://www.google.com";
-    SegmentBase base = new SingleSegmentBase(new RangedUri(null, 0, 1), 1, 0, 1, 1);
-    Format format = Format.createVideoContainerFormat("0", MimeTypes.APPLICATION_MP4, null,
-        MimeTypes.VIDEO_H264, 2500000, 1920, 1080, Format.NO_VALUE, null, 0);
-    Representation representation = Representation.newInstance("test_stream_1", 3, format, uri,
-        base);
-    assertEquals("test_stream_1.0.3", representation.getCacheKey());
-
-    format = Format.createVideoContainerFormat("150", MimeTypes.APPLICATION_MP4, null,
-        MimeTypes.VIDEO_H264, 2500000, 1920, 1080, Format.NO_VALUE, null, 0);
-    representation = Representation.newInstance("test_stream_1", Representation.REVISION_ID_DEFAULT,
-        format, uri, base);
-    assertEquals("test_stream_1.150.-1", representation.getCacheKey());
-  }
-
-}
diff --git a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/UrlTemplateTest.java b/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/UrlTemplateTest.java
deleted file mode 100644
index 1959d33172..0000000000
--- a/library/dash/src/androidTest/java/com/google/android/exoplayer2/source/dash/manifest/UrlTemplateTest.java
+++ /dev/null
@@ -1,66 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.dash.manifest;
-
-import junit.framework.TestCase;
-
-/**
- * Unit test for {@link UrlTemplate}.
- */
-public class UrlTemplateTest extends TestCase {
-
-  public void testRealExamples() {
-    String template = "QualityLevels($Bandwidth$)/Fragments(video=$Time$,format=mpd-time-csf)";
-    UrlTemplate urlTemplate = UrlTemplate.compile(template);
-    String url = urlTemplate.buildUri("abc1", 10, 650000, 5000);
-    assertEquals("QualityLevels(650000)/Fragments(video=5000,format=mpd-time-csf)", url);
-
-    template = "$RepresentationID$/$Number$";
-    urlTemplate = UrlTemplate.compile(template);
-    url = urlTemplate.buildUri("abc1", 10, 650000, 5000);
-    assertEquals("abc1/10", url);
-
-    template = "chunk_ctvideo_cfm4s_rid$RepresentationID$_cn$Number$_w2073857842_mpd.m4s";
-    urlTemplate = UrlTemplate.compile(template);
-    url = urlTemplate.buildUri("abc1", 10, 650000, 5000);
-    assertEquals("chunk_ctvideo_cfm4s_ridabc1_cn10_w2073857842_mpd.m4s", url);
-  }
-
-  public void testFull() {
-    String template = "$Bandwidth$_a_$RepresentationID$_b_$Time$_c_$Number$";
-    UrlTemplate urlTemplate = UrlTemplate.compile(template);
-    String url = urlTemplate.buildUri("abc1", 10, 650000, 5000);
-    assertEquals("650000_a_abc1_b_5000_c_10", url);
-  }
-
-  public void testFullWithDollarEscaping() {
-    String template = "$$$Bandwidth$$$_a$$_$RepresentationID$_b_$Time$_c_$Number$$$";
-    UrlTemplate urlTemplate = UrlTemplate.compile(template);
-    String url = urlTemplate.buildUri("abc1", 10, 650000, 5000);
-    assertEquals("$650000$_a$_abc1_b_5000_c_10$", url);
-  }
-
-  public void testInvalidSubstitution() {
-    String template = "$IllegalId$";
-    try {
-      UrlTemplate.compile(template);
-      fail();
-    } catch (IllegalArgumentException e) {
-      // Expected.
-    }
-  }
-
-}
diff --git a/library/hls/build.gradle b/library/hls/build.gradle
index 8499d3e594..a29e86060f 100644
--- a/library/hls/build.gradle
+++ b/library/hls/build.gradle
@@ -35,7 +35,4 @@ android {
 dependencies {
     compile project(modulePrefix + 'library-core')
     compile 'com.android.support:support-annotations:' + supportLibraryVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker:' + dexmakerVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:' + dexmakerVersion
-    androidTestCompile 'org.mockito:mockito-core:' + mockitoVersion
 }
\ No newline at end of file
diff --git a/library/hls/src/androidTest/AndroidManifest.xml b/library/hls/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index dcf6c2f940..0000000000
--- a/library/hls/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer2.source.hls.test">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner"/>
-  </application>
-
-  <instrumentation
-      android:targetPackage="com.google.android.exoplayer2.source.hls.test"
-      android:name="android.test.InstrumentationTestRunner"/>
-
-</manifest>
diff --git a/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMasterPlaylistParserTest.java b/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMasterPlaylistParserTest.java
deleted file mode 100644
index f835c87466..0000000000
--- a/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMasterPlaylistParserTest.java
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.hls.playlist;
-
-import android.net.Uri;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.Format;
-import com.google.android.exoplayer2.ParserException;
-import com.google.android.exoplayer2.util.MimeTypes;
-import java.io.ByteArrayInputStream;
-import java.io.IOException;
-import java.nio.charset.Charset;
-import java.util.Collections;
-import java.util.List;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link HlsMasterPlaylistParserTest}
- */
-public class HlsMasterPlaylistParserTest extends TestCase {
-
-  private static final String PLAYLIST_URI = "https://example.com/test.m3u8";
-
-  private static final String MASTER_PLAYLIST = " #EXTM3U \n"
-      + "\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=1280000,CODECS=\"mp4a.40.2,avc1.66.30\",RESOLUTION=304x128\n"
-      + "http://example.com/low.m3u8\n"
-      + "\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=1280000,CODECS=\"mp4a.40.2 , avc1.66.30 \"\n"
-      + "http://example.com/spaces_in_codecs.m3u8\n"
-      + "\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=2560000,RESOLUTION=384x160\n"
-      + "http://example.com/mid.m3u8\n"
-      + "\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=7680000\n"
-      + "http://example.com/hi.m3u8\n"
-      + "\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=65000,CODECS=\"mp4a.40.5\"\n"
-      + "http://example.com/audio-only.m3u8";
-
-  private static final String AVG_BANDWIDTH_MASTER_PLAYLIST = " #EXTM3U \n"
-      + "\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=1280000,CODECS=\"mp4a.40.2,avc1.66.30\",RESOLUTION=304x128\n"
-      + "http://example.com/low.m3u8\n"
-      + "\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=1280000,AVERAGE-BANDWIDTH=1270000,"
-      + "CODECS=\"mp4a.40.2 , avc1.66.30 \"\n"
-      + "http://example.com/spaces_in_codecs.m3u8\n";
-
-  private static final String PLAYLIST_WITH_INVALID_HEADER = "#EXTMU3\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=1280000,CODECS=\"mp4a.40.2,avc1.66.30\",RESOLUTION=304x128\n"
-      + "http://example.com/low.m3u8\n";
-
-  private static final String MASTER_PLAYLIST_WITH_CC = " #EXTM3U \n"
-      + "#EXT-X-MEDIA:TYPE=CLOSED-CAPTIONS,LANGUAGE=\"es\",NAME=\"Eng\",INSTREAM-ID=\"SERVICE4\"\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=1280000,CODECS=\"mp4a.40.2,avc1.66.30\",RESOLUTION=304x128\n"
-      + "http://example.com/low.m3u8\n";
-
-  private static final String MASTER_PLAYLIST_WITHOUT_CC = " #EXTM3U \n"
-      + "#EXT-X-MEDIA:TYPE=CLOSED-CAPTIONS,LANGUAGE=\"es\",NAME=\"Eng\",INSTREAM-ID=\"SERVICE4\"\n"
-      + "#EXT-X-STREAM-INF:BANDWIDTH=1280000,CODECS=\"mp4a.40.2,avc1.66.30\",RESOLUTION=304x128,"
-      + "CLOSED-CAPTIONS=NONE\n"
-      + "http://example.com/low.m3u8\n";
-
-  public void testParseMasterPlaylist() throws IOException{
-    HlsMasterPlaylist masterPlaylist = parseMasterPlaylist(PLAYLIST_URI, MASTER_PLAYLIST);
-
-    List<HlsMasterPlaylist.HlsUrl> variants = masterPlaylist.variants;
-    assertEquals(5, variants.size());
-    assertNull(masterPlaylist.muxedCaptionFormats);
-
-    assertEquals(1280000, variants.get(0).format.bitrate);
-    assertEquals("mp4a.40.2,avc1.66.30", variants.get(0).format.codecs);
-    assertEquals(304, variants.get(0).format.width);
-    assertEquals(128, variants.get(0).format.height);
-    assertEquals("http://example.com/low.m3u8", variants.get(0).url);
-
-    assertEquals(1280000, variants.get(1).format.bitrate);
-    assertEquals("mp4a.40.2 , avc1.66.30 ", variants.get(1).format.codecs);
-    assertEquals("http://example.com/spaces_in_codecs.m3u8", variants.get(1).url);
-
-    assertEquals(2560000, variants.get(2).format.bitrate);
-    assertNull(variants.get(2).format.codecs);
-    assertEquals(384, variants.get(2).format.width);
-    assertEquals(160, variants.get(2).format.height);
-    assertEquals("http://example.com/mid.m3u8", variants.get(2).url);
-
-    assertEquals(7680000, variants.get(3).format.bitrate);
-    assertNull(variants.get(3).format.codecs);
-    assertEquals(Format.NO_VALUE, variants.get(3).format.width);
-    assertEquals(Format.NO_VALUE, variants.get(3).format.height);
-    assertEquals("http://example.com/hi.m3u8", variants.get(3).url);
-
-    assertEquals(65000, variants.get(4).format.bitrate);
-    assertEquals("mp4a.40.5", variants.get(4).format.codecs);
-    assertEquals(Format.NO_VALUE, variants.get(4).format.width);
-    assertEquals(Format.NO_VALUE, variants.get(4).format.height);
-    assertEquals("http://example.com/audio-only.m3u8", variants.get(4).url);
-  }
-
-  public void testMasterPlaylistWithBandwdithAverage() throws IOException {
-    HlsMasterPlaylist masterPlaylist = parseMasterPlaylist(PLAYLIST_URI,
-        AVG_BANDWIDTH_MASTER_PLAYLIST);
-
-    List<HlsMasterPlaylist.HlsUrl> variants = masterPlaylist.variants;
-
-    assertEquals(1280000, variants.get(0).format.bitrate);
-    assertEquals(1270000, variants.get(1).format.bitrate);
-  }
-
-  public void testPlaylistWithInvalidHeader() throws IOException {
-    try {
-      parseMasterPlaylist(PLAYLIST_URI, PLAYLIST_WITH_INVALID_HEADER);
-      fail("Expected exception not thrown.");
-    } catch (ParserException e) {
-      // Expected due to invalid header.
-    }
-  }
-
-  public void testPlaylistWithClosedCaption() throws IOException {
-    HlsMasterPlaylist playlist = parseMasterPlaylist(PLAYLIST_URI, MASTER_PLAYLIST_WITH_CC);
-    assertEquals(1, playlist.muxedCaptionFormats.size());
-    Format closedCaptionFormat = playlist.muxedCaptionFormats.get(0);
-    assertEquals(MimeTypes.APPLICATION_CEA708, closedCaptionFormat.sampleMimeType);
-    assertEquals(4, closedCaptionFormat.accessibilityChannel);
-    assertEquals("es", closedCaptionFormat.language);
-  }
-
-  public void testPlaylistWithoutClosedCaptions() throws IOException {
-    HlsMasterPlaylist playlist = parseMasterPlaylist(PLAYLIST_URI, MASTER_PLAYLIST_WITHOUT_CC);
-    assertEquals(Collections.emptyList(), playlist.muxedCaptionFormats);
-  }
-
-  private static HlsMasterPlaylist parseMasterPlaylist(String uri, String playlistString)
-      throws IOException {
-    Uri playlistUri = Uri.parse(uri);
-    ByteArrayInputStream inputStream = new ByteArrayInputStream(
-        playlistString.getBytes(Charset.forName(C.UTF8_NAME)));
-    return (HlsMasterPlaylist) new HlsPlaylistParser().parse(playlistUri, inputStream);
-  }
-
-}
diff --git a/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylistParserTest.java b/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylistParserTest.java
deleted file mode 100644
index e2eb173df8..0000000000
--- a/library/hls/src/androidTest/java/com/google/android/exoplayer2/source/hls/playlist/HlsMediaPlaylistParserTest.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.hls.playlist;
-
-import android.net.Uri;
-import com.google.android.exoplayer2.C;
-import com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment;
-import java.io.ByteArrayInputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.nio.charset.Charset;
-import java.util.List;
-import java.util.Locale;
-import junit.framework.TestCase;
-
-/**
- * Test for {@link HlsMediaPlaylistParserTest}
- */
-public class HlsMediaPlaylistParserTest extends TestCase {
-
-  public void testParseMediaPlaylist() {
-    Uri playlistUri = Uri.parse("https://example.com/test.m3u8");
-    String playlistString = "#EXTM3U\n"
-        + "#EXT-X-VERSION:3\n"
-        + "#EXT-X-PLAYLIST-TYPE:VOD\n"
-        + "#EXT-X-START:TIME-OFFSET=-25"
-        + "#EXT-X-TARGETDURATION:8\n"
-        + "#EXT-X-MEDIA-SEQUENCE:2679\n"
-        + "#EXT-X-DISCONTINUITY-SEQUENCE:4\n"
-        + "#EXT-X-ALLOW-CACHE:YES\n"
-        + "\n"
-        + "#EXTINF:7.975,\n"
-        + "#EXT-X-BYTERANGE:51370@0\n"
-        + "https://priv.example.com/fileSequence2679.ts\n"
-        + "\n"
-        + "#EXT-X-KEY:METHOD=AES-128,URI=\"https://priv.example.com/key.php?r=2680\",IV=0x1566B\n"
-        + "#EXTINF:7.975,\n"
-        + "#EXT-X-BYTERANGE:51501@2147483648\n"
-        + "https://priv.example.com/fileSequence2680.ts\n"
-        + "\n"
-        + "#EXT-X-KEY:METHOD=NONE\n"
-        + "#EXTINF:7.941,\n"
-        + "#EXT-X-BYTERANGE:51501\n" // @2147535149
-        + "https://priv.example.com/fileSequence2681.ts\n"
-        + "\n"
-        + "#EXT-X-DISCONTINUITY\n"
-        + "#EXT-X-KEY:METHOD=AES-128,URI=\"https://priv.example.com/key.php?r=2682\"\n"
-        + "#EXTINF:7.975,\n"
-        + "#EXT-X-BYTERANGE:51740\n" // @2147586650
-        + "https://priv.example.com/fileSequence2682.ts\n"
-        + "\n"
-        + "#EXTINF:7.975,\n"
-        + "https://priv.example.com/fileSequence2683.ts\n"
-        + "#EXT-X-ENDLIST";
-    InputStream inputStream = new ByteArrayInputStream(
-        playlistString.getBytes(Charset.forName(C.UTF8_NAME)));
-    try {
-      HlsPlaylist playlist = new HlsPlaylistParser().parse(playlistUri, inputStream);
-      assertNotNull(playlist);
-
-      HlsMediaPlaylist mediaPlaylist = (HlsMediaPlaylist) playlist;
-      assertEquals(HlsMediaPlaylist.PLAYLIST_TYPE_VOD, mediaPlaylist.playlistType);
-      assertEquals(mediaPlaylist.durationUs - 25000000, mediaPlaylist.startOffsetUs);
-
-      assertEquals(2679, mediaPlaylist.mediaSequence);
-      assertEquals(3, mediaPlaylist.version);
-      assertTrue(mediaPlaylist.hasEndTag);
-      List<Segment> segments = mediaPlaylist.segments;
-      assertNotNull(segments);
-      assertEquals(5, segments.size());
-
-      Segment segment = segments.get(0);
-      assertEquals(4, mediaPlaylist.discontinuitySequence + segment.relativeDiscontinuitySequence);
-      assertEquals(7975000, segment.durationUs);
-      assertFalse(segment.isEncrypted);
-      assertEquals(null, segment.encryptionKeyUri);
-      assertEquals(null, segment.encryptionIV);
-      assertEquals(51370, segment.byterangeLength);
-      assertEquals(0, segment.byterangeOffset);
-      assertEquals("https://priv.example.com/fileSequence2679.ts", segment.url);
-
-      segment = segments.get(1);
-      assertEquals(0, segment.relativeDiscontinuitySequence);
-      assertEquals(7975000, segment.durationUs);
-      assertTrue(segment.isEncrypted);
-      assertEquals("https://priv.example.com/key.php?r=2680", segment.encryptionKeyUri);
-      assertEquals("0x1566B", segment.encryptionIV);
-      assertEquals(51501, segment.byterangeLength);
-      assertEquals(2147483648L, segment.byterangeOffset);
-      assertEquals("https://priv.example.com/fileSequence2680.ts", segment.url);
-
-      segment = segments.get(2);
-      assertEquals(0, segment.relativeDiscontinuitySequence);
-      assertEquals(7941000, segment.durationUs);
-      assertFalse(segment.isEncrypted);
-      assertEquals(null, segment.encryptionKeyUri);
-      assertEquals(null, segment.encryptionIV);
-      assertEquals(51501, segment.byterangeLength);
-      assertEquals(2147535149L, segment.byterangeOffset);
-      assertEquals("https://priv.example.com/fileSequence2681.ts", segment.url);
-
-      segment = segments.get(3);
-      assertEquals(1, segment.relativeDiscontinuitySequence);
-      assertEquals(7975000, segment.durationUs);
-      assertTrue(segment.isEncrypted);
-      assertEquals("https://priv.example.com/key.php?r=2682", segment.encryptionKeyUri);
-      // 0xA7A == 2682.
-      assertNotNull(segment.encryptionIV);
-      assertEquals("A7A", segment.encryptionIV.toUpperCase(Locale.getDefault()));
-      assertEquals(51740, segment.byterangeLength);
-      assertEquals(2147586650L, segment.byterangeOffset);
-      assertEquals("https://priv.example.com/fileSequence2682.ts", segment.url);
-
-      segment = segments.get(4);
-      assertEquals(1, segment.relativeDiscontinuitySequence);
-      assertEquals(7975000, segment.durationUs);
-      assertTrue(segment.isEncrypted);
-      assertEquals("https://priv.example.com/key.php?r=2682", segment.encryptionKeyUri);
-      // 0xA7B == 2683.
-      assertNotNull(segment.encryptionIV);
-      assertEquals("A7B", segment.encryptionIV.toUpperCase(Locale.getDefault()));
-      assertEquals(C.LENGTH_UNSET, segment.byterangeLength);
-      assertEquals(0, segment.byterangeOffset);
-      assertEquals("https://priv.example.com/fileSequence2683.ts", segment.url);
-    } catch (IOException exception) {
-      fail(exception.getMessage());
-    }
-  }
-
-}
diff --git a/library/smoothstreaming/build.gradle b/library/smoothstreaming/build.gradle
index a3c766831c..a29e86060f 100644
--- a/library/smoothstreaming/build.gradle
+++ b/library/smoothstreaming/build.gradle
@@ -35,8 +35,4 @@ android {
 dependencies {
     compile project(modulePrefix + 'library-core')
     compile 'com.android.support:support-annotations:' + supportLibraryVersion
-    androidTestCompile project(modulePrefix + 'testutils')
-    androidTestCompile 'com.google.dexmaker:dexmaker:' + dexmakerVersion
-    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:' + dexmakerVersion
-    androidTestCompile 'org.mockito:mockito-core:' + mockitoVersion
 }
\ No newline at end of file
diff --git a/library/smoothstreaming/src/androidTest/AndroidManifest.xml b/library/smoothstreaming/src/androidTest/AndroidManifest.xml
deleted file mode 100644
index ab314ce806..0000000000
--- a/library/smoothstreaming/src/androidTest/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2017 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    package="com.google.android.exoplayer2.source.smoothstreaming.test">
-
-  <uses-sdk android:minSdkVersion="9" android:targetSdkVersion="24"/>
-
-  <application android:debuggable="true"
-      android:allowBackup="false"
-      tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
-    <uses-library android:name="android.test.runner"/>
-  </application>
-
-  <instrumentation
-      android:targetPackage="com.google.android.exoplayer2.source.smoothstreaming.test"
-      android:name="android.test.InstrumentationTestRunner"/>
-
-</manifest>
diff --git a/library/smoothstreaming/src/androidTest/assets/sample_ismc_1 b/library/smoothstreaming/src/androidTest/assets/sample_ismc_1
deleted file mode 100644
index 25a37d65b4..0000000000
--- a/library/smoothstreaming/src/androidTest/assets/sample_ismc_1
+++ /dev/null
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<SmoothStreamingMedia MajorVersion="2" MinorVersion="0"
-    Duration="2300000000" TimeScale="10000000">
-    <Protection>
-        <ProtectionHeader SystemID="9A04F079-9840-4286-AB92-E65BE0885F95">
-            <!-- Base 64-Encoded data omitted for clarity -->
-        </ProtectionHeader>
-    </Protection>
-
-    <StreamIndex
-        Type = "video"
-        Chunks = "115"
-        QualityLevels = "2"
-        MaxWidth = "720"
-        MaxHeight = "480"
-        TimeScale="10000000"
-        Url =
-            "QualityLevels({bitrate},{CustomAttributes})/Fragments(video={start_time})"
-        Name = "video"
-        >
-        <QualityLevel Index="0" Bitrate="1536000" FourCC="WVC1"
-            MaxWidth="720" MaxHeight="480"
-            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840"
-            >
-            <CustomAttributes>
-                <Attribute Name = "Compatibility" Value = "Desktop" />
-            </CustomAttributes>
-        </QualityLevel>
-
-
-        <QualityLevel Index="5" Bitrate="307200" FourCC="WVC1"
-            MaxWidth="720" MaxHeight="480"
-            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840">
-            <CustomAttributes>
-                <Attribute Name = "Compatibility" Value = "Handheld" />
-            </CustomAttributes>
-        </QualityLevel>
-
-
-        <c t = "0" d = "19680000" />
-        <c n = "1" t = "19680000" d="8980000" />
-
-    </StreamIndex>
-</SmoothStreamingMedia>
-
diff --git a/library/smoothstreaming/src/androidTest/assets/sample_ismc_2 b/library/smoothstreaming/src/androidTest/assets/sample_ismc_2
deleted file mode 100644
index 5875a18183..0000000000
--- a/library/smoothstreaming/src/androidTest/assets/sample_ismc_2
+++ /dev/null
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<SmoothStreamingMedia MajorVersion="2" MinorVersion="0"
-    Duration="2300000000" TimeScale="10000000">
-    <Protection>
-        <ProtectionHeader SystemID="{9A04F079-9840-4286-AB92-E65BE0885F95}">
-            <!-- Base 64-Encoded data omitted for clarity -->
-        </ProtectionHeader>
-    </Protection>
-
-    <StreamIndex
-        Type = "video"
-        Chunks = "115"
-        QualityLevels = "2"
-        MaxWidth = "720"
-        MaxHeight = "480"
-        TimeScale="10000000"
-        Url =
-            "QualityLevels({bitrate},{CustomAttributes})/Fragments(video={start_time})"
-        Name = "video"
-        >
-        <QualityLevel Index="0" Bitrate="1536000" FourCC="WVC1"
-            MaxWidth="720" MaxHeight="480"
-            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840"
-            >
-            <CustomAttributes>
-                <Attribute Name = "Compatibility" Value = "Desktop" />
-            </CustomAttributes>
-        </QualityLevel>
-
-
-        <QualityLevel Index="5" Bitrate="307200" FourCC="WVC1"
-            MaxWidth="720" MaxHeight="480"
-            CodecPrivateData = "270000010FCBEE1670EF8A16783BF180C9089CC4AFA11C0000010E1207F840">
-            <CustomAttributes>
-                <Attribute Name = "Compatibility" Value = "Handheld" />
-            </CustomAttributes>
-        </QualityLevel>
-
-
-        <c t = "0" d = "19680000" />
-        <c n = "1" t = "19680000" d="8980000" />
-
-    </StreamIndex>
-</SmoothStreamingMedia>
-
diff --git a/library/smoothstreaming/src/androidTest/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParserTest.java b/library/smoothstreaming/src/androidTest/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParserTest.java
deleted file mode 100644
index 4663f014ff..0000000000
--- a/library/smoothstreaming/src/androidTest/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParserTest.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.google.android.exoplayer2.source.smoothstreaming.manifest;
-
-import android.net.Uri;
-import android.test.InstrumentationTestCase;
-import com.google.android.exoplayer2.testutil.TestUtil;
-import java.io.IOException;
-
-/**
- * Unit tests for {@link SsManifestParser}.
- */
-public final class SsManifestParserTest extends InstrumentationTestCase {
-
-  private static final String SAMPLE_ISMC_1 = "sample_ismc_1";
-  private static final String SAMPLE_ISMC_2 = "sample_ismc_2";
-
-  /**
-   * Simple test to ensure the sample manifests parse without any exceptions being thrown.
-   */
-  public void testParseSmoothStreamingManifest() throws IOException {
-    SsManifestParser parser = new SsManifestParser();
-    parser.parse(Uri.parse("https://example.com/test.ismc"),
-        TestUtil.getInputStream(getInstrumentation(), SAMPLE_ISMC_1));
-    parser.parse(Uri.parse("https://example.com/test.ismc"),
-        TestUtil.getInputStream(getInstrumentation(), SAMPLE_ISMC_2));
-  }
-
-}
