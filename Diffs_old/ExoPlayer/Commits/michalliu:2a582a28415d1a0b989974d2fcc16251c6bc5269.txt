diff --git a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlaybackException.java b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlaybackException.java
index ca7367f1b0..80a458538b 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlaybackException.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlaybackException.java
@@ -90,7 +90,7 @@ public static ExoPlaybackException createForSource(IOException cause) {
    * @param cause The cause of the failure.
    * @return The created instance.
    */
-  /* package */ static ExoPlaybackException createForUnexpected(RuntimeException cause) {
+  /* package */ static ExoPlaybackException createForUnexpected(Exception cause) {
     return new ExoPlaybackException(TYPE_UNEXPECTED, null, cause, C.INDEX_UNSET);
   }
 
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
index efde07b322..c67ec90f87 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
@@ -27,6 +27,7 @@
 import android.util.Pair;
 import com.google.android.exoplayer2.DefaultMediaClock.PlaybackParameterListener;
 import com.google.android.exoplayer2.Player.DiscontinuityReason;
+import com.google.android.exoplayer2.mediacodec.MediaCodecRenderer;
 import com.google.android.exoplayer2.source.ExtractorMediaSource;
 import com.google.android.exoplayer2.source.MediaPeriod;
 import com.google.android.exoplayer2.source.MediaSource;
@@ -1814,8 +1815,12 @@ public void run() {
         renderersEnded = renderer.isEnded();
         rendererReadyOrEnded = renderer.isReady() || renderer.isEnded()
                 || rendererWaitingForNextStream(renderer);
-      } catch (ExoPlaybackException ex) {
-        exceptionThrown = ex;
+      } catch (Exception cause) {
+        if (renderer instanceof MediaCodecRenderer) {
+          exceptionThrown = ExoPlaybackException.createForRenderer(cause, ((MediaCodecRenderer) renderer).getRenderIndex());
+        } else {
+          exceptionThrown = ExoPlaybackException.createForUnexpected(cause);
+        }
       } finally {
         latch.countDown();
       }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java
index c559bf853b..9048f232ea 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java
@@ -1324,4 +1324,10 @@ private static boolean codecNeedsMonoChannelCountWorkaround(String name, Format
         && "OMX.MTK.AUDIO.DECODER.MP3".equals(name);
   }
 
+  /**
+   * Returns the index of the renderer within the player.
+   */
+  public int getRenderIndex() {
+    return getIndex();
+  }
 }
