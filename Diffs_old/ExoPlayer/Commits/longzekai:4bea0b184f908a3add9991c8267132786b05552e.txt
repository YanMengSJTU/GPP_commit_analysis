diff --git a/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractorTest.java b/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractorTest.java
index cb07736aa0..a64bc54865 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractorTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractorTest.java
@@ -21,8 +21,6 @@
 
 import junit.framework.TestCase;
 
-import java.io.IOException;
-
 /**
  * Unit test for {@link OggVorbisExtractor}.
  */
@@ -62,7 +60,7 @@ public void testAppendNumberOfSamples() throws Exception {
     assertEquals(0x01, buffer.data[3]);
   }
 
-  public void testReadSetupHeadersWithIOExceptions() throws IOException, InterruptedException {
+  public void testReadSetupHeadersWithIOExceptions() {
     extractorInput.doThrowExceptionsAtRead(true);
     extractorInput.doThrowExceptionsAtPeek(true);
 
diff --git a/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/VorbisBitArrayTest.java b/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/VorbisBitArrayTest.java
index 954b7f39fc..11238f74f8 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/VorbisBitArrayTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/extractor/ogg/VorbisBitArrayTest.java
@@ -15,7 +15,6 @@
  */
 package com.google.android.exoplayer.extractor.ogg;
 
-import com.google.android.exoplayer.ParserException;
 import com.google.android.exoplayer.util.ParsableBitArray;
 
 import junit.framework.TestCase;
@@ -25,7 +24,7 @@
  */
 public final class VorbisBitArrayTest extends TestCase {
 
-  public void testReadBit() throws ParserException {
+  public void testReadBit() {
     VorbisBitArray bitArray = new VorbisBitArray(new byte[]{
         (byte) 0x5c, 0x50
     });
@@ -56,7 +55,7 @@ public void testReadBit() throws ParserException {
     } catch (IllegalStateException e) {/* ignored */}
   }
 
-  public void testSkipBits() throws ParserException {
+  public void testSkipBits() {
     VorbisBitArray bitArray = new VorbisBitArray(new byte[]{
         (byte) 0xF0, 0x0F
     });
@@ -79,7 +78,7 @@ public void testSkipBits() throws ParserException {
   }
 
 
-  public void testSkipBitsThrowsErrorIfEOB() throws ParserException {
+  public void testSkipBitsThrowsErrorIfEOB() {
     VorbisBitArray bitArray = new VorbisBitArray(new byte[]{
         (byte) 0xF0, 0x0F
     });
@@ -141,7 +140,7 @@ public void testSetPositionIllegalPositions() throws Exception {
     }
   }
 
-  public void testReadInt32() throws ParserException {
+  public void testReadInt32() {
     byte[] data = {(byte) 0xF0, 0x0F, (byte) 0xF0, 0x0F};
     VorbisBitArray lsb = new VorbisBitArray(data);
     assertEquals(0x0FF00FF0, lsb.readBits(32));
@@ -222,7 +221,7 @@ public void testReadBitsIllegalLengths() throws Exception {
     }
   }
 
-  public void testLimit() throws ParserException {
+  public void testLimit() {
     VorbisBitArray bitArray = new VorbisBitArray(new byte[]{
         (byte) 0xc0, 0x02
     }, 1);
@@ -251,7 +250,7 @@ public void testLimit() throws ParserException {
     }
   }
 
-  public void testBitsLeft() throws ParserException {
+  public void testBitsLeft() {
     VorbisBitArray bitArray = new VorbisBitArray(new byte[]{
         (byte) 0xc0, 0x02
     });
@@ -294,7 +293,7 @@ public void testBitsLeft() throws ParserException {
     }
   }
 
-  public void testReadBitCompareWithMSb() throws ParserException {
+  public void testReadBitCompareWithMSb() {
     byte[] data = {0x0F};
     VorbisBitArray lsb = new VorbisBitArray(data);
     ParsableBitArray msb = new ParsableBitArray(data);
@@ -309,7 +308,7 @@ public void testReadBitCompareWithMSb() throws ParserException {
     assertEquals(lsb.readBit(), !msb.readBit());
   }
 
-  public void testReadBitsCompareWithMSb() throws ParserException {
+  public void testReadBitsCompareWithMSb() {
     byte[] data = {0x0F};
     VorbisBitArray lsb = new VorbisBitArray(data);
     ParsableBitArray msb = new ParsableBitArray(data);
@@ -319,7 +318,7 @@ public void testReadBitsCompareWithMSb() throws ParserException {
     assertEquals(15, msb.readBits(4));
   }
 
-  public void testReadBitsCompareWithMSbBeyondByteBoundary() throws ParserException {
+  public void testReadBitsCompareWithMSbBeyondByteBoundary() {
     byte[] data = {(byte) 0xF0, 0x0F};
     VorbisBitArray lsb = new VorbisBitArray(data);
     ParsableBitArray msb = new ParsableBitArray(data);
