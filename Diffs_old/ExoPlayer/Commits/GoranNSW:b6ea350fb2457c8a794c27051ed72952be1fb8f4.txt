diff --git a/library/src/main/java/com/google/android/exoplayer2/Format.java b/library/src/main/java/com/google/android/exoplayer2/Format.java
index 9cfe019ef4..1e9dc80d84 100644
--- a/library/src/main/java/com/google/android/exoplayer2/Format.java
+++ b/library/src/main/java/com/google/android/exoplayer2/Format.java
@@ -306,9 +306,14 @@ public static Format createContainerFormat(String id, String containerMimeType,
 
   public static Format createSampleFormat(String id, String sampleMimeType, String codecs,
       int bitrate, DrmInitData drmInitData) {
+    return createSampleFormat(id, sampleMimeType, codecs, bitrate, drmInitData, null);
+  }
+
+  public static Format createSampleFormat(String id, String sampleMimeType, String codecs,
+                                          int bitrate, DrmInitData drmInitData, String language) {
     return new Format(id, null, sampleMimeType, codecs, bitrate, NO_VALUE, NO_VALUE, NO_VALUE,
-        NO_VALUE, NO_VALUE, NO_VALUE, null, NO_VALUE, NO_VALUE, NO_VALUE, NO_VALUE, NO_VALUE,
-        NO_VALUE, 0, null, OFFSET_SAMPLE_RELATIVE, null, drmInitData);
+            NO_VALUE, NO_VALUE, NO_VALUE, null, NO_VALUE, NO_VALUE, NO_VALUE, NO_VALUE, NO_VALUE,
+            NO_VALUE, 0, language, OFFSET_SAMPLE_RELATIVE, null, drmInitData);
   }
 
   /* package */ Format(String id, String containerMimeType, String sampleMimeType, String codecs,
diff --git a/library/src/main/java/com/google/android/exoplayer2/extractor/ts/DvbSubtitlesReader.java b/library/src/main/java/com/google/android/exoplayer2/extractor/ts/DvbSubtitlesReader.java
index 7e207c687a..c6d6790773 100644
--- a/library/src/main/java/com/google/android/exoplayer2/extractor/ts/DvbSubtitlesReader.java
+++ b/library/src/main/java/com/google/android/exoplayer2/extractor/ts/DvbSubtitlesReader.java
@@ -18,9 +18,13 @@
 
 
     public DvbSubtitlesReader(TrackOutput output) {
+        this(output, null);
+    }
+
+    public DvbSubtitlesReader(TrackOutput output, String language) {
         super(output);
         output.format(Format.createSampleFormat(null, MimeTypes.APPLICATION_DVBSUBS, null, Format.NO_VALUE,
-                null));
+                null, language));
     }
 
     @Override
diff --git a/library/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java b/library/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java
index d62cbc6242..855835a30f 100644
--- a/library/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java
+++ b/library/src/main/java/com/google/android/exoplayer2/extractor/ts/TsExtractor.java
@@ -64,6 +64,7 @@
 
   private static final int TS_STREAM_TYPE_MPA = 0x03;
   private static final int TS_STREAM_TYPE_MPA_LSF = 0x04;
+  private static final int TS_STREAM_TYPE_PRIVATE = 0x06;
   private static final int TS_STREAM_TYPE_AAC = 0x0F;
   private static final int TS_STREAM_TYPE_AC3 = 0x81;
   private static final int TS_STREAM_TYPE_DTS = 0x8A;
@@ -354,6 +355,7 @@ public void consume(ParsableByteArray data, boolean payloadUnitStartIndicator,
     private static final int TS_PMT_DESC_AC3 = 0x6A;
     private static final int TS_PMT_DESC_EAC3 = 0x7A;
     private static final int TS_PMT_DESC_DTS = 0x7B;
+    private static final int TS_PMT_DESC_DVBSUBS = 0x59;
 
     private final ParsableBitArray pmtScratch;
     private final ParsableByteArray sectionData;
@@ -433,7 +435,7 @@ public void consume(ParsableByteArray data, boolean payloadUnitStartIndicator,
         pmtScratch.skipBits(4); // reserved
         int esInfoLength = pmtScratch.readBits(12); // ES_info_length.
         EsInfo esInfo = readEsInfo(sectionData, esInfoLength);
-        if (streamType == 0x06) {
+        if (streamType == TS_STREAM_TYPE_PRIVATE) {
           streamType = esInfo.streamType;
         }
         remainingEntriesLength -= esInfoLength + 5;
@@ -483,7 +485,7 @@ public void consume(ParsableByteArray data, boolean payloadUnitStartIndicator,
             }
             break;
           case TS_STREAM_TYPE_DVBSUBS:
-            pesPayloadReader = new DvbSubtitlesReader(output.track(trackId));
+            pesPayloadReader = new DvbSubtitlesReader(output.track(trackId), esInfo.language);
             break;
           default:
             pesPayloadReader = null;
@@ -512,7 +514,7 @@ public void consume(ParsableByteArray data, boolean payloadUnitStartIndicator,
     private EsInfo readEsInfo(ParsableByteArray data, int length) {
       int descriptorsEndPosition = data.getPosition() + length;
       int streamType = -1;
-      int audioType = -1;
+      int streamSubType = -1;
       String language = null;
       while (data.getPosition() < descriptorsEndPosition) {
         int descriptorTag = data.readUnsignedByte();
@@ -535,26 +537,29 @@ private EsInfo readEsInfo(ParsableByteArray data, int length) {
           streamType = TS_STREAM_TYPE_DTS;
         } else if (descriptorTag == TS_PMT_DESC_ISO639_LANG) {
           language = new String(data.data, data.getPosition(), 3).trim();
-          audioType = data.data[data.getPosition() + 3];
-        } else if (descriptorTag == 0x59) {
+          streamSubType = data.data[data.getPosition() + 3];
+        } else if (descriptorTag == TS_PMT_DESC_DVBSUBS) {
           streamType = TS_STREAM_TYPE_DVBSUBS;
+          language = new String(data.data, data.getPosition(), 3).trim();
+          streamSubType = data.data[data.getPosition() + 3];
+          // We discard all the additional info as is no relevant to the library
         }
         // Skip unused bytes of current descriptor.
         data.skipBytes(positionOfNextDescriptor - data.getPosition());
       }
       data.setPosition(descriptorsEndPosition);
-      return new EsInfo(streamType, audioType, language);
+      return new EsInfo(streamType, streamSubType, language);
     }
 
     private final class EsInfo {
 
       final int streamType;
-      final int audioType;
+      final int streamSubType;
       final String language;
 
-      public EsInfo(int streamType, int audioType, String language) {
+      public EsInfo(int streamType, int streamSubType, String language) {
         this.streamType = streamType;
-        this.audioType = audioType;
+        this.streamSubType = streamSubType;
         this.language = language;
       }
 
