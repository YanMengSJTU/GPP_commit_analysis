diff --git a/extensions/okhttp/src/main/java/com/google/android/exoplayer/ext/okhttp/OkHttpDataSource.java b/extensions/okhttp/src/main/java/com/google/android/exoplayer/ext/okhttp/OkHttpDataSource.java
index 9e69804c7a..743e428b7e 100644
--- a/extensions/okhttp/src/main/java/com/google/android/exoplayer/ext/okhttp/OkHttpDataSource.java
+++ b/extensions/okhttp/src/main/java/com/google/android/exoplayer/ext/okhttp/OkHttpDataSource.java
@@ -159,7 +159,7 @@ public long open(DataSpec dataSpec) throws HttpDataSourceException {
       responseByteStream = response.body().byteStream();
     } catch (IOException e) {
       throw new HttpDataSourceException("Unable to connect to " + dataSpec.uri.toString(), e,
-          dataSpec);
+          dataSpec, HttpDataSourceException.TYPE_OPEN);
     }
 
     int responseCode = response.code();
@@ -204,7 +204,7 @@ public int read(byte[] buffer, int offset, int readLength) throws HttpDataSource
       skipInternal();
       return readInternal(buffer, offset, readLength);
     } catch (IOException e) {
-      throw new HttpDataSourceException(e, dataSpec);
+      throw new HttpDataSourceException(e, dataSpec, HttpDataSourceException.TYPE_READ);
     }
   }
 
diff --git a/library/src/main/java/com/google/android/exoplayer/upstream/DefaultHttpDataSource.java b/library/src/main/java/com/google/android/exoplayer/upstream/DefaultHttpDataSource.java
index 59d6c2bff2..6c3fe9a6e2 100644
--- a/library/src/main/java/com/google/android/exoplayer/upstream/DefaultHttpDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer/upstream/DefaultHttpDataSource.java
@@ -191,7 +191,7 @@ public long open(DataSpec dataSpec) throws HttpDataSourceException {
       connection = makeConnection(dataSpec);
     } catch (IOException e) {
       throw new HttpDataSourceException("Unable to connect to " + dataSpec.uri.toString(), e,
-          dataSpec);
+          dataSpec, HttpDataSourceException.TYPE_OPEN);
     }
 
     int responseCode;
@@ -200,7 +200,7 @@ public long open(DataSpec dataSpec) throws HttpDataSourceException {
     } catch (IOException e) {
       closeConnectionQuietly();
       throw new HttpDataSourceException("Unable to connect to " + dataSpec.uri.toString(), e,
-          dataSpec);
+          dataSpec, HttpDataSourceException.TYPE_OPEN);
     }
 
     // Check for a valid response code.
@@ -240,7 +240,7 @@ public long open(DataSpec dataSpec) throws HttpDataSourceException {
       inputStream = connection.getInputStream();
     } catch (IOException e) {
       closeConnectionQuietly();
-      throw new HttpDataSourceException(e, dataSpec);
+      throw new HttpDataSourceException(e, dataSpec, HttpDataSourceException.TYPE_OPEN);
     }
 
     opened = true;
@@ -257,7 +257,7 @@ public int read(byte[] buffer, int offset, int readLength) throws HttpDataSource
       skipInternal();
       return readInternal(buffer, offset, readLength);
     } catch (IOException e) {
-      throw new HttpDataSourceException(e, dataSpec);
+      throw new HttpDataSourceException(e, dataSpec, HttpDataSourceException.TYPE_READ);
     }
   }
 
@@ -269,7 +269,7 @@ public void close() throws HttpDataSourceException {
         try {
           inputStream.close();
         } catch (IOException e) {
-          throw new HttpDataSourceException(e, dataSpec);
+          throw new HttpDataSourceException(e, dataSpec, HttpDataSourceException.TYPE_CLOSE);
         }
       }
     } finally {
diff --git a/library/src/main/java/com/google/android/exoplayer/upstream/HttpDataSource.java b/library/src/main/java/com/google/android/exoplayer/upstream/HttpDataSource.java
index c9d977cd87..c1e2337ce6 100644
--- a/library/src/main/java/com/google/android/exoplayer/upstream/HttpDataSource.java
+++ b/library/src/main/java/com/google/android/exoplayer/upstream/HttpDataSource.java
@@ -32,7 +32,7 @@
   /**
    * A {@link Predicate} that rejects content types often used for pay-walls.
    */
-  public static final Predicate<String> REJECT_PAYWALL_TYPES = new Predicate<String>() {
+  Predicate<String> REJECT_PAYWALL_TYPES = new Predicate<String>() {
 
     @Override
     public boolean evaluate(String contentType) {
@@ -47,31 +47,41 @@ public boolean evaluate(String contentType) {
   /**
    * Thrown when an error is encountered when trying to read from a {@link HttpDataSource}.
    */
-  public static class HttpDataSourceException extends IOException {
+  class HttpDataSourceException extends IOException {
 
-    /*
+    public static final int TYPE_OPEN = 1;
+    public static final int TYPE_READ = 2;
+    public static final int TYPE_CLOSE = 3;
+
+    public final int type;
+
+    /**
      * The {@link DataSpec} associated with the current connection.
      */
     public final DataSpec dataSpec;
 
-    public HttpDataSourceException(DataSpec dataSpec) {
+    public HttpDataSourceException(DataSpec dataSpec, int type) {
       super();
       this.dataSpec = dataSpec;
+      this.type = type;
     }
 
-    public HttpDataSourceException(String message, DataSpec dataSpec) {
+    public HttpDataSourceException(String message, DataSpec dataSpec, int type) {
       super(message);
       this.dataSpec = dataSpec;
+      this.type = type;
     }
 
-    public HttpDataSourceException(IOException cause, DataSpec dataSpec) {
+    public HttpDataSourceException(IOException cause, DataSpec dataSpec, int type) {
       super(cause);
       this.dataSpec = dataSpec;
+      this.type = type;
     }
 
-    public HttpDataSourceException(String message, IOException cause, DataSpec dataSpec) {
+    public HttpDataSourceException(String message, IOException cause, DataSpec dataSpec, int type) {
       super(message, cause);
       this.dataSpec = dataSpec;
+      this.type = type;
     }
 
   }
@@ -79,12 +89,12 @@ public HttpDataSourceException(String message, IOException cause, DataSpec dataS
   /**
    * Thrown when the content type is invalid.
    */
-  public static final class InvalidContentTypeException extends HttpDataSourceException {
+  final class InvalidContentTypeException extends HttpDataSourceException {
 
     public final String contentType;
 
     public InvalidContentTypeException(String contentType, DataSpec dataSpec) {
-      super("Invalid content type: " + contentType, dataSpec);
+      super("Invalid content type: " + contentType, dataSpec, TYPE_OPEN);
       this.contentType = contentType;
     }
 
@@ -93,7 +103,7 @@ public InvalidContentTypeException(String contentType, DataSpec dataSpec) {
   /**
    * Thrown when an attempt to open a connection results in a response code not in the 2xx range.
    */
-  public static final class InvalidResponseCodeException extends HttpDataSourceException {
+  final class InvalidResponseCodeException extends HttpDataSourceException {
 
     /**
      * The response code that was outside of the 2xx range.
@@ -107,7 +117,7 @@ public InvalidContentTypeException(String contentType, DataSpec dataSpec) {
 
     public InvalidResponseCodeException(int responseCode, Map<String, List<String>> headerFields,
         DataSpec dataSpec) {
-      super("Response code: " + responseCode, dataSpec);
+      super("Response code: " + responseCode, dataSpec, TYPE_OPEN);
       this.responseCode = responseCode;
       this.headerFields = headerFields;
     }
