diff --git a/build.gradle b/build.gradle
index 3813a241e0..687f611c95 100644
--- a/build.gradle
+++ b/build.gradle
@@ -17,8 +17,9 @@ buildscript {
         google()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.1.0'
+        classpath 'com.android.tools.build:gradle:3.1.2'
         classpath 'com.novoda:bintray-release:0.8.1'
+        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
     }
     // Workaround for the following test coverage issue. Remove when fixed:
     // https://code.google.com/p/android/issues/detail?id=226070
@@ -45,4 +46,8 @@ allprojects {
     }
 }
 
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
+
 apply from: 'javadoc_combined.gradle'
diff --git a/extensions/rtmp/build.gradle b/extensions/rtmp/build.gradle
index c34e0b9999..912cf8c753 100644
--- a/extensions/rtmp/build.gradle
+++ b/extensions/rtmp/build.gradle
@@ -25,8 +25,10 @@ android {
 }
 
 dependencies {
-    implementation project(modulePrefix + 'library-core')
-    implementation 'net.butterflytv.utils:rtmp-client:3.0.1'
+//    implementation project(modulePrefix + 'library-core')
+    implementation project(':library-core')
+//    implementation 'net.butterflytv.utils:rtmp-client:3.0.1'
+    implementation project(':rtmp-client')
     implementation 'com.android.support:support-annotations:' + supportLibraryVersion
 }
 
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpCallbackListener.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpCallbackListener.java
new file mode 100644
index 0000000000..052412320a
--- /dev/null
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpCallbackListener.java
@@ -0,0 +1,32 @@
+package com.google.android.exoplayer2.ext.rtmp;
+
+import android.util.Log;
+
+import com.google.android.exoplayer2.upstream.CallbackListener;
+
+import net.butterflytv.rtmp_client.RTMPCallback;
+
+public class RtmpCallbackListener implements RTMPCallback {
+
+    private final CallbackListener<? super RtmpDataSource> cbListener;
+    private final RtmpDataSource ds;
+
+
+    public RtmpCallbackListener (CallbackListener<? super RtmpDataSource> cbListener, RtmpDataSource ds) {
+        this.cbListener = cbListener;
+        this.ds = ds;
+    }
+
+    @Override
+    public void dataCallback(byte[] buffer) {
+        Log.i ("EXOPlayerRtmpCBListener", "invoked dataCallback");
+        cbListener.dataCallback(ds, buffer);
+    }
+
+    @Override
+    public void functionCallback() {
+        Log.i ("EXOPlayerRtmpCBListener", "invoked functionCallback");
+        cbListener.functionCallback(ds);
+
+    }
+}
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
index 0601af4a2f..a4f35acfe2 100644
--- a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSource.java
@@ -19,13 +19,14 @@
 import android.support.annotation.Nullable;
 import com.google.android.exoplayer2.C;
 import com.google.android.exoplayer2.ExoPlayerLibraryInfo;
+import com.google.android.exoplayer2.upstream.CallbackListener;
 import com.google.android.exoplayer2.upstream.DataSource;
 import com.google.android.exoplayer2.upstream.DataSpec;
 import com.google.android.exoplayer2.upstream.TransferListener;
 import java.io.IOException;
 import net.butterflytv.rtmp_client.RtmpClient;
 import net.butterflytv.rtmp_client.RtmpClient.RtmpIOException;
-
+import net.butterflytv.rtmp_client.RTMPCallback;
 /**
  * A Real-Time Messaging Protocol (RTMP) {@link DataSource}.
  */
@@ -36,24 +37,37 @@
   }
 
   @Nullable private final TransferListener<? super RtmpDataSource> listener;
+  @Nullable private final CallbackListener<? super RtmpDataSource> cbListener;
+  @Nullable private RtmpCallbackListener rtmpcbListener;
 
   private RtmpClient rtmpClient;
   private Uri uri;
 
   public RtmpDataSource() {
-    this(null);
+    this(null, null);
+  }
+
+  public RtmpDataSource (@Nullable CallbackListener<? super RtmpDataSource> cbListener) {
+    this (null, cbListener);
+  }
+
+  public RtmpDataSource(@Nullable TransferListener<? super RtmpDataSource> listener) {
+    this (listener, null);
   }
 
   /**
    * @param listener An optional listener.
    */
-  public RtmpDataSource(@Nullable TransferListener<? super RtmpDataSource> listener) {
+  public RtmpDataSource(@Nullable TransferListener<? super RtmpDataSource> listener,
+                        @Nullable CallbackListener<? super RtmpDataSource> cbListener) {
     this.listener = listener;
+    this.cbListener = cbListener;
   }
 
   @Override
   public long open(DataSpec dataSpec) throws RtmpIOException {
-    rtmpClient = new RtmpClient();
+    rtmpcbListener = new RtmpCallbackListener (this.cbListener, this);
+    rtmpClient = new RtmpClient(rtmpcbListener);
     rtmpClient.open(dataSpec.uri.toString(), false);
 
     this.uri = dataSpec.uri;
diff --git a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
index 0510e9c7da..f2d96853be 100644
--- a/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
+++ b/extensions/rtmp/src/main/java/com/google/android/exoplayer2/ext/rtmp/RtmpDataSourceFactory.java
@@ -16,8 +16,10 @@
 package com.google.android.exoplayer2.ext.rtmp;
 
 import android.support.annotation.Nullable;
+import com.google.android.exoplayer2.upstream.CallbackListener;
 import com.google.android.exoplayer2.upstream.DataSource;
 import com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
+import net.butterflytv.rtmp_client.RTMPCallback;
 import com.google.android.exoplayer2.upstream.TransferListener;
 
 /**
@@ -27,21 +29,32 @@
 
   @Nullable
   private final TransferListener<? super RtmpDataSource> listener;
+  private final CallbackListener<? super RtmpDataSource> cbListener;
 
   public RtmpDataSourceFactory() {
-    this(null);
+    this(null, null);
   }
 
   /**
    * @param listener An optional listener.
    */
   public RtmpDataSourceFactory(@Nullable TransferListener<? super RtmpDataSource> listener) {
+    this (listener, null);
+  }
+
+  public RtmpDataSourceFactory(@Nullable CallbackListener<? super RtmpDataSource> cbListener) {
+    this (null, cbListener);
+  }
+
+  public RtmpDataSourceFactory(@Nullable TransferListener<? super RtmpDataSource> listener,
+                               @Nullable CallbackListener<? super RtmpDataSource> cbListener) {
     this.listener = listener;
+    this.cbListener = cbListener;
   }
 
   @Override
   public DataSource createDataSource() {
-    return new RtmpDataSource(listener);
+    return new RtmpDataSource(listener, cbListener);
   }
 
 }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/CallbackListener.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/CallbackListener.java
new file mode 100644
index 0000000000..07bec9dbcb
--- /dev/null
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/CallbackListener.java
@@ -0,0 +1,6 @@
+package com.google.android.exoplayer2.upstream;
+
+public interface CallbackListener<S> {
+    void dataCallback (S source, byte[] buffer);
+    void functionCallback (S source);
+}
diff --git a/settings.gradle b/settings.gradle
index d4530d67b7..34d4510436 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -27,4 +27,9 @@ project(modulePrefix + 'demo-cast').projectDir = new File(rootDir, 'demos/cast')
 project(modulePrefix + 'demo-ima').projectDir = new File(rootDir, 'demos/ima')
 project(modulePrefix + 'playbacktests').projectDir = new File(rootDir, 'playbacktests')
 
+include 'rtmp-client'
+project(':rtmp-client').projectDir = new File(rootDir, '../LibRtmp-Client-for-Android/rtmp-client')
+
+include 'library-core'
+project(':library-core').projectDir = new File (rootDir, 'library/core')
 apply from: 'core_settings.gradle'
