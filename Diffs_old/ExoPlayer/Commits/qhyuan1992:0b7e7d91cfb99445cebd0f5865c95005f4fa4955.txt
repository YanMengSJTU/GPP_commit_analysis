diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/ts/Id3Reader.java b/library/src/main/java/com/google/android/exoplayer/extractor/ts/Id3Reader.java
index 2ee6a54061..5cefb86633 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/ts/Id3Reader.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/ts/Id3Reader.java
@@ -15,6 +15,7 @@
  */
 package com.google.android.exoplayer.extractor.ts;
 
+import android.util.Log;
 import com.google.android.exoplayer.C;
 import com.google.android.exoplayer.MediaFormat;
 import com.google.android.exoplayer.extractor.TrackOutput;
@@ -25,6 +26,8 @@
  */
 /* package */ final class Id3Reader extends ElementaryStreamReader {
 
+  private static final String TAG = "Id3Reader";
+
   private static final int ID3_HEADER_SIZE = 10;
 
   private final ParsableByteArray id3Header;
@@ -72,7 +75,14 @@ public void consume(ParsableByteArray data) {
           headerBytesAvailable);
       if (sampleBytesRead + headerBytesAvailable == ID3_HEADER_SIZE) {
         // We've finished reading the ID3 header. Extract the sample size.
-        id3Header.setPosition(6); // 'ID3' (3) + version (2) + flags (1)
+        id3Header.setPosition(0);
+        if ('I' != id3Header.readUnsignedByte() || 'D' != id3Header.readUnsignedByte()
+            || '3' != id3Header.readUnsignedByte()) {
+          Log.w(TAG, "Discarding invalid ID3 tag");
+          writingSample = false;
+          return;
+        }
+        id3Header.skipBytes(3); // version (2) + flags (1)
         sampleSize = ID3_HEADER_SIZE + id3Header.readSynchSafeInt();
       }
     }
