diff --git a/demo/build.gradle b/demo/build.gradle
index 3ead8eb0f0..47a26c6dab 100644
--- a/demo/build.gradle
+++ b/demo/build.gradle
@@ -46,6 +46,8 @@ android {
 dependencies {
     compile 'com.android.support:appcompat-v7:24.2.1'
     compile 'com.android.support:design:24.2.1'
+    compile 'com.googlecode.mp4parser:isoparser:1.0.6'
+    compile 'com.mcxiaoke.volley:library:1.0.19'
     compile project(':library')
     demo_extCompile project(path: ':extension-ffmpeg')
     demo_extCompile project(path: ':extension-flac')
diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
index dc072b9343..c75a09c43f 100644
--- a/demo/src/main/AndroidManifest.xml
+++ b/demo/src/main/AndroidManifest.xml
@@ -25,14 +25,15 @@
     <!--<uses-sdk android:minSdkVersion="16" android:targetSdkVersion="24"/>-->
 
     <application
-        android:allowBackup="false"
-        android:icon="@drawable/vo_icon"
+        android:allowBackup="true"
+        android:icon="@drawable/blue_verona"
         android:label="@string/application_name"
         android:largeHeap="true">
 
         <!--android:label="@string/application_name"-->
+        <!--android:name="br.rnp.futebol.vocoliseu.visual.activity.InstructionsActivity"-->
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.InstructionsActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.InstructionsActivity"
             android:theme="@style/VOCoLisEU">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -41,51 +42,58 @@
         </activity>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentConfigurationControllerActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.unused.ExperimentConfigurationControllerActivity"
+            android:theme="@style/VOCoLisEU"/>
+
+        <activity android:name="br.rnp.futebol.verona.visual.activity.CodedMergeActivity"
+            android:theme="@style/VOCoLisEU"/>
+
+        <activity
+            android:name="br.rnp.futebol.verona.visual.activity.StartActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentGeneralInfoActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.unused.ExperimentGeneralInfoActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.unused.ScriptControllerActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.unused.ScriptControllerActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.script.ScriptGeneralActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.script.ScriptGeneralActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.script.ScriptMetricsActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.script.ScriptMetricsActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.experiment.ExperimentGeneralActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.experiment.ExperimentGeneralActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.MainActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.MainActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.AboutActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.AboutActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.experiment.ExperimentMetricsActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.experiment.ExperimentMetricsActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.experiment.ExperimentScriptsActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.experiment.ExperimentScriptsActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.UserActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.UserActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
-            android:name="br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentControllerActivity"
+            android:name="br.rnp.futebol.verona.visual.activity.unused.ExperimentControllerActivity"
             android:theme="@style/VOCoLisEU"/>
 
         <activity
@@ -110,6 +118,50 @@
             </intent-filter>
         </activity>
 
+        <activity
+            android:name="br.rnp.futebol.verona.codedcache.PlayerActivityWithCC"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize|uiMode"
+            android:label="@string/application_name"
+            android:launchMode="singleTop"
+            android:theme="@style/VOCoLisEU">
+            <intent-filter>
+                <action android:name="com.google.android.exoplayer.demo.action.VIEW" />
+                <category android:name="android.intent.category.DEFAULT" />
+
+                <data android:scheme="http" />
+                <data android:scheme="https" />
+                <data android:scheme="content" />
+                <data android:scheme="asset" />
+                <data android:scheme="file" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.google.android.exoplayer.demo.action.VIEW_LIST" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
+        <activity
+            android:name="br.rnp.futebol.verona.migration.PlayerActivityWithMigration"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize|uiMode"
+            android:label="@string/application_name"
+            android:launchMode="singleTop"
+            android:theme="@style/VOCoLisEU">
+            <intent-filter>
+                <action android:name="com.google.android.exoplayer.demo.action.VIEW" />
+                <category android:name="android.intent.category.DEFAULT" />
+
+                <data android:scheme="http" />
+                <data android:scheme="https" />
+                <data android:scheme="content" />
+                <data android:scheme="asset" />
+                <data android:scheme="file" />
+            </intent-filter>
+            <intent-filter>
+                <action android:name="com.google.android.exoplayer.demo.action.VIEW_LIST" />
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+
     </application>
 
 </manifest>
diff --git a/demo/src/main/blue_verona-web.png b/demo/src/main/blue_verona-web.png
new file mode 100644
index 0000000000..8ffea3ad92
Binary files /dev/null and b/demo/src/main/blue_verona-web.png differ
diff --git a/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMP.java b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMP.java
new file mode 100644
index 0000000000..68301f2826
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMP.java
@@ -0,0 +1,74 @@
+package br.rnp.futebol.verona.OWAMP;
+
+/**
+ * Created by matias on 13/01/15.
+ */
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.util.ArrayList;
+import java.util.List;
+
+public class OWAMP {
+//ping -c 2 -W iperf-2.0.5 -s 32 coliseu.inf.ufrgs.br
+
+//    public static boolean donePinging = false;
+
+    public enum Backend {
+        UNIX {
+            @Override
+            public OWAMPResult getResult(List<String> output) {
+                return new OWAMPResult(output);
+            }
+
+        };
+
+        public abstract OWAMPResult getResult(List<String> output);
+    }
+
+    public static OWAMPResult ping(OWAMPArguments ping, Backend backend, OWAMPResult result) {
+        // result = variable that will have the result of ping
+        // Feito dessa forma para que esse result possa ser usado na classe que chama
+        // e seu atributo isDonePinging possa ser alterado aqui
+        try {
+            Process p = Runtime.getRuntime().exec(ping.getCommand());
+            BufferedReader stdInput = new BufferedReader(new InputStreamReader(p.getInputStream()));
+            String s;
+            List<String> lines = new ArrayList<String>();
+            while ((s = stdInput.readLine()) != null) {
+                lines.add(s);
+                if (s.contains("Destination Host Unreachable") || s.contains("0 received, 100% packet loss")) {
+//                    Log.i("CHARRT", s);
+                    if (result != null) {
+//                        Log.i("CHARRT", "result nulou");
+                        result.setDonePinging(true);
+                    }
+                    return null;
+                }
+            }
+            try {
+                p.destroy();
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+            if(!lines.isEmpty()) {
+                result = backend.getResult(lines);
+                result.setOriginalAddress(ping.getUrl());
+                result.setDonePinging(true);
+//                Log.i("CHARRT", "result " + result.getAddress() + " retornou");
+                return result;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+        return null;
+    }
+
+    public static OWAMPResult ping(OWAMPArguments ping, Backend backend) {
+        return ping(ping, backend, null);
+    }
+
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPArguments.java b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPArguments.java
new file mode 100644
index 0000000000..9c4b66b79d
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPArguments.java
@@ -0,0 +1,93 @@
+package br.rnp.futebol.verona.OWAMP;
+
+/**
+ * Created by matias on 13/01/15.
+ */
+
+public class OWAMPArguments {
+    public String getUrl() {
+        return url;
+    }
+
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    String url;
+	int count;
+	long timeout;
+	int payload_bytes;
+	long interval;
+	int ttl;
+
+	public OWAMPArguments() {
+
+	}
+
+	// TODO make that it can be build
+
+	public static class Builder {
+
+		private OWAMPArguments arguments;
+
+		public Builder() {
+			this.arguments = new OWAMPArguments();
+		}
+
+		public Builder url(String url) {
+			arguments.url = url;
+			return this;
+		}
+
+		public Builder count(int count) {
+			arguments.count = count;
+			return this;
+		}
+
+		public Builder timeout(long timeout) {
+			arguments.timeout = timeout;
+			return this;
+		}
+
+		public Builder bytes(int bytes) {
+			arguments.payload_bytes = bytes;
+			return this;
+		}
+
+		public Builder ttl(int ttl) {
+			arguments.ttl = ttl;
+			return this;
+		}
+
+		/**
+		 * -i
+		 * 
+		 * @param interval
+		 * @return
+		 */
+		public Builder interval(long interval) {
+			arguments.interval = interval;
+			return this;
+		}
+
+		public OWAMPArguments build() {
+			return arguments;
+		}
+	}
+
+	// TODO make adaptable if certain properaties aren't set
+	public String getCommand() {
+		StringBuilder b = new StringBuilder();
+
+		b.append("ping").append(" ").append("-c").append(" ").append(count)
+				.append(" ")
+
+				.append("-W").append(" ").append(timeout).append(" ")
+
+				.append("-s").append(" ").append(payload_bytes).append(" ")
+				.append(url.replaceFirst("https://", "").split("/")[0]);
+
+//        System.out.println("Command: " + b.toString());
+		return b.toString();
+	}
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPRequest.java b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPRequest.java
new file mode 100644
index 0000000000..9e8a834509
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPRequest.java
@@ -0,0 +1,186 @@
+package br.rnp.futebol.verona.OWAMP;
+
+/**
+ * Created by Matias Schimuneck on 13/01/15 for Coliseu RNP.
+ * Used here by Joao Vitor de Camargo on 03/05/2016.
+ */
+
+public class OWAMPRequest {
+
+
+    @Override
+    public String toString() {
+        return "PingRequest [bytes=" + bytes + ", from=" + from + ", fromIP="
+                + fromIP + ", reqnr=" + reqnr + ", ttl=" + ttl + ", time="
+                + time + "]";
+    }
+
+    private long bytes;
+    private String from;
+    private String fromIP;
+    private int reqnr;
+    private int ttl;
+    private float time;
+
+    public long getId() {
+        return id;
+    }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    private long id;
+
+    public long getBytes() {
+        return bytes;
+    }
+
+    public void setBytes(long bytes) {
+        this.bytes = bytes;
+    }
+
+    public String getFrom() {
+        return from;
+    }
+
+    public void setFrom(String from) {
+        this.from = from;
+    }
+
+    public String getFromIP() {
+        return fromIP;
+    }
+
+    public void setFromIP(String fromIP) {
+        this.fromIP = fromIP;
+    }
+
+    public int getReqnr() {
+        return reqnr;
+    }
+
+    public void setReqnr(int reqnr) {
+        this.reqnr = reqnr;
+    }
+
+    public int getTtl() {
+        return ttl;
+    }
+
+    public void setTtl(int ttl) {
+        this.ttl = ttl;
+    }
+
+    public float getTime() {
+        return time;
+    }
+
+    public void setTime(float time) {
+        this.time = time;
+    }
+
+    public long bytes() {
+        return bytes;
+    }
+
+    public String from() {
+        return from;
+    }
+
+    public String fromIP() {
+        return fromIP;
+    }
+
+    public int reqNr() {
+        return reqnr;
+    }
+
+    public int ttl() {
+        return ttl;
+    }
+
+    public float time() {
+        return time;
+    }
+
+    public OWAMPRequest() {
+    }
+
+    public OWAMPRequest(long id, long bytes, String from, String fromIP, int reqnr,
+                        int ttl, float time) {
+        super();
+        this.id = id;
+        this.bytes = bytes;
+        this.from = from;
+        this.fromIP = fromIP;
+        this.reqnr = reqnr;
+        this.ttl = ttl;
+        this.time = time;
+    }
+
+
+    public OWAMPRequest(long bytes, String from, String fromIP, int reqnr,
+                        int ttl, float time) {
+        super();
+        this.bytes = bytes;
+        this.from = from;
+        this.fromIP = fromIP;
+        this.reqnr = reqnr;
+        this.ttl = ttl;
+        this.time = time;
+    }
+
+    public static PingRequestBuilder builder() {
+        return new PingRequestBuilder();
+    }
+
+    protected static class PingRequestBuilder {
+        private long bytes;
+        private String from;
+        private String fromIP;
+        private int reqnr;
+        private int ttl;
+        private float time;
+
+        public PingRequestBuilder() {
+
+        }
+
+        public PingRequestBuilder bytes(long bytes) {
+            this.bytes = bytes;
+            return this;
+        }
+
+        public PingRequestBuilder from(String from) {
+            this.from = from;
+            return this;
+        }
+
+        public PingRequestBuilder fromIP(String fromIP) {
+            this.fromIP = fromIP;
+            return this;
+        }
+
+        public PingRequestBuilder reqNr(int reqnr) {
+            this.reqnr = reqnr;
+            return this;
+        }
+
+        public PingRequestBuilder ttl(int ttl) {
+            this.ttl = ttl;
+            return this;
+        }
+
+        public PingRequestBuilder time(float time) {
+            this.time = time;
+            return this;
+        }
+
+        public OWAMPRequest build() {
+            return new OWAMPRequest(bytes, from, fromIP, reqnr, ttl, time);
+        }
+
+    }
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPResult.java b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPResult.java
new file mode 100644
index 0000000000..4150ff8457
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/OWAMPResult.java
@@ -0,0 +1,417 @@
+package br.rnp.futebol.verona.OWAMP;
+
+/**
+ * Created by Matias Schimuneck on 13/01/15 for Coliseu RNP.
+ * Used here by Joao Vitor de Camargo on 03/05/2016.
+ */
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.regex.MatchResult;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+@SuppressWarnings("unused")
+public class OWAMPResult {
+
+    private List<String> lines;
+
+    private String address = "";
+    private long id = 0;
+
+    public String getOriginalAddress() {
+        return originalAddress;
+    }
+
+    public void setOriginalAddress(String originalAddress) {
+        this.originalAddress = originalAddress;
+    }
+
+    private String originalAddress = "";
+    private int transmitted = 0;
+    private int ttl = 0;
+    private long time = 0;
+    private int received = 0;
+    private int payload = 0;
+    private boolean donePinging = false;
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+
+    public int getTransmitted() {
+        return transmitted;
+    }
+
+    public void setTransmitted(int transmitted) {
+        this.transmitted = transmitted;
+    }
+
+    public int getTtl() {
+        return ttl;
+    }
+
+    public void setTtl(int ttl) {
+        this.ttl = ttl;
+    }
+
+    public long getTime() {
+        return time;
+    }
+
+    public void setTime(long time) {
+        this.time = time;
+    }
+
+    public int getReceived() {
+        return received;
+    }
+
+    public void setReceived(int received) {
+        this.received = received;
+    }
+
+    public int getPayload() {
+        return payload;
+    }
+
+    public void setPayload(int payload) {
+        this.payload = payload;
+    }
+
+    public float getRtt_min() {
+        return rtt_min;
+    }
+
+    public void setRtt_min(float rtt_min) {
+        this.rtt_min = rtt_min;
+    }
+
+    public float getRtt_avg() {
+        return rtt_avg;
+    }
+
+    public void setRtt_avg(float rtt_avg) {
+        this.rtt_avg = rtt_avg;
+    }
+
+    public float getRtt_max() {
+        return rtt_max;
+    }
+
+    public void setRtt_max(float rtt_max) {
+        this.rtt_max = rtt_max;
+    }
+
+    public float getRtt_mdev() {
+        return rtt_mdev;
+    }
+
+    public void setRtt_mdev(float rtt_mdev) {
+        this.rtt_mdev = rtt_mdev;
+    }
+
+    public void setListRequest(List<OWAMPRequest> listRequest) {
+        this.listRequest = listRequest;
+    }
+
+    public boolean isDonePinging() {
+        return donePinging;
+    }
+
+    public void setDonePinging(boolean donePinging) {
+        this.donePinging = donePinging;
+    }
+
+    public List<OWAMPRequest> getListRequest() {
+        return listRequest;
+    }
+
+    private List<OWAMPRequest> listRequest;
+    private float rtt_min;
+    private float rtt_avg;
+    private float rtt_max;
+    private float rtt_mdev;
+
+    public String address() {
+        return address;
+    }
+
+    public int transmitted() {
+        return transmitted;
+    }
+
+    public int ttl() {
+        return ttl;
+    }
+
+    public long time() {
+        return time;
+    }
+
+    public int received() {
+        return received;
+    }
+
+    public int payload() {
+        return payload;
+    }
+
+    public float rtt_min() {
+        return rtt_min;
+    }
+
+    public float rtt_avg() {
+        return rtt_avg;
+    }
+
+    public float rtt_max() {
+        return rtt_max;
+    }
+
+    public float rtt_mdev() {
+        return rtt_mdev;
+    }
+
+    public OWAMPResult(List<String> pingOutput) {
+
+        this.lines = pingOutput;
+        transmitted = matchTransmitted(pingOutput);
+        received = matchReceived(pingOutput);
+        time = matchTime(pingOutput);
+
+        rtt_min = matchRttMin(pingOutput);
+        rtt_avg = matchRttAvg(pingOutput);
+        rtt_max = matchRttMax(pingOutput);
+        rtt_mdev = matchRttMdev(pingOutput);
+
+        ttl = matchTTL(pingOutput);
+
+        address = matchIP(pingOutput);
+
+        payload = parsePayload(pingOutput);
+
+        listRequest = matchRequests();
+
+    }
+
+    public OWAMPResult() {
+    }
+
+    public List<String> getLines() {
+        return lines;
+    }
+
+
+    @Override
+    public String toString() {
+        return "PingResult [address=" + address + ", transmitted="
+                + transmitted + ", ttl=" + ttl + ", time=" + time
+                + ", received=" + received + ", payload=" + payload
+                + ", rtt_min=" + rtt_min + ", rtt_avg=" + rtt_avg
+                + ", rtt_max=" + rtt_max + ", rtt_mdev=" + rtt_mdev + "]";
+    }
+
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    public long getId() {
+        return id;
+    }
+
+    private String[] pack;
+
+    private void generatePackageArray(List<String> lines) {
+        if (pack == null) {
+            String packages = lines.get(lines.size() - 2);
+            pack = packages.split(",");
+        }
+    }
+
+
+    public int matchTransmitted(List<String> lines) {
+        generatePackageArray(lines);
+        return Integer.parseInt(pack[0].replaceAll("\\D+", ""));
+
+    }
+
+
+    public int matchReceived(List<String> lines) {
+        generatePackageArray(lines);
+        return Integer.parseInt(pack[1].replaceAll("\\D+", ""));
+
+    }
+
+
+    public int matchTime(List<String> lines) {
+        generatePackageArray(lines);
+        return Integer.parseInt(pack[3].replaceAll("\\D+", ""));
+
+    }
+
+    private void generateRttArray(List<String> lines) {
+        if (rtt == null) {
+            // rtt
+            String rtts = lines.get(lines.size() - 1);
+            String[] rtt_equals = rtts.split("=");
+            rtt = rtt_equals[1].split("/");
+        }
+    }
+
+    private String[] rtt;
+
+
+    public float matchRttMin(List<String> lines) {
+        generateRttArray(lines);
+        return Float.parseFloat(rtt[0]);
+
+    }
+
+
+    public float matchRttAvg(List<String> lines) {
+        generateRttArray(lines);
+        return Float.parseFloat(rtt[1]);
+    }
+
+
+    public float matchRttMax(List<String> lines) {
+        generateRttArray(lines);
+        return Float.parseFloat(rtt[2]);
+    }
+
+
+    public float matchRttMdev(List<String> lines) {
+        generateRttArray(lines);
+        return Float.parseFloat(rtt[3].replaceAll("\\D+", ""));
+    }
+
+//    @SuppressWarnings("ignored")
+    public String matchIP(List<String> lines) {
+        String str = lines.toString();
+        String pattern = "\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b";
+        Pattern p = Pattern.compile(pattern);
+        Matcher m = p.matcher(str);
+        m.find();
+
+        return m.toMatchResult().group(0);
+    }
+
+    public int matchTTL(List<String> lines) {
+        String str = lines.toString();
+        Pattern pattern = Pattern.compile("ttl=([0-9\\.]+)"); // match
+        // ttl=decimal
+
+        Matcher matcher = pattern.matcher(str.toString());
+
+        matcher.find();
+        MatchResult result = matcher.toMatchResult();
+
+        return Integer.parseInt(result.group(1).replaceAll("ttl=", ""));
+    }
+
+    protected int parsePayload(List<String> lines) {
+        // TODO Auto-generated method stub
+
+        return Integer.parseInt(lines.get(1).split("bytes")[0].trim());
+    }
+
+    public List<OWAMPRequest> matchRequests() {
+        try {
+            List<OWAMPRequest> requests = new ArrayList<OWAMPRequest>();
+
+            for (String line : getLines()) {
+                if (isPingRequest(line)) {
+                    OWAMPRequest request = createPingRequest(line);
+                    requests.add(request);
+                }
+            }
+            return requests;
+        } catch (Exception e) {
+            return null;
+        }
+
+
+    }
+
+    private OWAMPRequest createPingRequest(String line) {
+        String[] split = line.split(" ");
+        OWAMPRequest.PingRequestBuilder builder = OWAMPRequest.builder();
+
+        int bytes = Integer.parseInt(split[0]);
+        String from = split[3];
+        String fromIP;
+        int reqnr;
+        int ttl;
+        float time;
+        if (split[4].contains("(") && split[4].contains(")")) {
+            fromIP = split[4].replace("(", "").replace(")", "")
+                    .replace(":", "");
+            reqnr = Integer.parseInt(split[5].split("=")[1]);
+            ttl = Integer.parseInt(split[6].split("=")[1]);
+            time = Float.parseFloat(split[7].split("=")[1]);
+        } else {
+            fromIP = from;
+            reqnr = Integer.parseInt(split[4].split("=")[1]);
+            ttl = Integer.parseInt(split[5].split("=")[1]);
+            time = Float.parseFloat(split[6].split("=")[1]);
+        }
+        builder = builder.bytes(bytes).from(from).fromIP(fromIP).reqNr(reqnr)
+                .ttl(ttl).time(time);
+
+        return builder.build();
+
+    }
+
+    private boolean isPingRequest(String line) {
+        return line.contains("bytes from");
+    }
+
+//    public JSONObject toJSon() {
+//        JSONObject json = new JSONObject();
+//        try {
+//            json.put("server_ip", MJsonUtil.prepareString(this.address()));
+//            json.put("transmitted", MJsonUtil.prepareString(this.transmitted()));
+//            json.put("ttl", MJsonUtil.prepareString(this.ttl()));
+//            json.put("time", MJsonUtil.prepareString(this.time()));
+//            json.put("received", MJsonUtil.prepareString(this.received()));
+//            json.put("payload", MJsonUtil.prepareString(this.payload()));
+//            json.put("rtt_min", MJsonUtil.prepareString(this.rtt_min()));
+//            json.put("rtt_avg", MJsonUtil.prepareString(this.rtt_max()));
+//            json.put("rtt_max", MJsonUtil.prepareString(this.rtt_avg()));
+//            json.put("list_requests", toJSonOWAMPRequest(this.matchRequests()));
+//            return json;
+//        } catch (JSONException e) {
+//            e.printStackTrace();
+//            return null;
+//        }
+//    }
+//
+//    private JSONArray toJSonOWAMPRequest(List<OWAMPRequest> requests) {
+//        JSONArray array = new JSONArray();
+//        if (requests != null) {
+//            for (OWAMPRequest request : requests) {
+//                JSONObject json = new JSONObject();
+//                try {
+//                    json.put("bytes", MJsonUtil.prepareString(request.bytes()));
+//                    json.put("from", MJsonUtil.prepareString(request.from()));
+//                    json.put("from_ip", MJsonUtil.prepareString(request.fromIP()));
+//                    json.put("icmp_seq", MJsonUtil.prepareString(request.reqNr()));
+//                    json.put("ttl", MJsonUtil.prepareString(request.ttl()));
+//                    json.put("time", MJsonUtil.prepareString(request.time()));
+//                    array.put(json);
+//                } catch (JSONException e) {
+//                    e.printStackTrace();
+//                }
+//            }
+//        }
+//        return array;
+//    }
+
+
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/verona/OWAMP/UnixOWAMPResult.java b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/UnixOWAMPResult.java
new file mode 100644
index 0000000000..f72aed2816
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/OWAMP/UnixOWAMPResult.java
@@ -0,0 +1,164 @@
+package br.rnp.futebol.verona.OWAMP;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.regex.MatchResult;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+
+public class UnixOWAMPResult extends OWAMPResult {
+
+	public UnixOWAMPResult(List<String> pingOutput) {
+		super(pingOutput);
+
+	}
+
+	private String[] pack;
+
+	private void generatePackageArray(List<String> lines) {
+		if (pack == null) {
+			String packages = lines.get(lines.size() - 2);
+			pack = packages.split(",");
+		}
+	}
+
+	@Override
+	public int matchTransmitted(List<String> lines) {
+		generatePackageArray(lines);
+		return Integer.parseInt(pack[0].replaceAll("\\D+", ""));
+
+	}
+
+	@Override
+	public int matchReceived(List<String> lines) {
+		generatePackageArray(lines);
+		return Integer.parseInt(pack[1].replaceAll("\\D+", ""));
+
+	}
+
+	@Override
+	public int matchTime(List<String> lines) {
+		generatePackageArray(lines);
+		return Integer.parseInt(pack[3].replaceAll("\\D+", ""));
+
+	}
+
+	private void generateRttArray(List<String> lines) {
+		if (rtt == null) {
+			// rtt
+			String rtts = lines.get(lines.size() - 1);
+			String[] rtt_equals = rtts.split("=");
+			rtt = rtt_equals[1].split("/");
+		}
+	}
+
+	private String[] rtt;
+
+	@Override
+	public float matchRttMin(List<String> lines) {
+		generateRttArray(lines);
+		return Float.parseFloat(rtt[0]);
+
+	}
+
+	@Override
+	public float matchRttAvg(List<String> lines) {
+		generateRttArray(lines);
+		return Float.parseFloat(rtt[1]);
+	}
+
+	@Override
+	public float matchRttMax(List<String> lines) {
+		generateRttArray(lines);
+		return Float.parseFloat(rtt[2]);
+	}
+
+	@Override
+	public float matchRttMdev(List<String> lines) {
+		generateRttArray(lines);
+		return Float.parseFloat(rtt[3].replaceAll("\\D+", ""));
+	}
+
+	@Override
+	public String matchIP(List<String> lines) {
+		String str = lines.toString();
+		String pattern = "\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b";
+		Pattern p = Pattern.compile(pattern);
+		Matcher m = p.matcher(str);
+		m.find();
+
+		return m.toMatchResult().group(0);
+	}
+
+	@Override
+	public int matchTTL(List<String> lines) {
+		String str = lines.toString();
+		Pattern pattern = Pattern.compile("ttl=([0-9\\.]+)"); // match
+		// ttl=decimal
+
+		Matcher matcher = pattern.matcher(str.toString());
+
+		matcher.find();
+		MatchResult result = matcher.toMatchResult();
+
+		return Integer.parseInt(result.group(1).replaceAll("ttl=", ""));
+	}
+
+	
+
+	@Override
+	protected int parsePayload(List<String> lines) {
+		// TODO Auto-generated method stub
+
+		return Integer.parseInt(lines.get(1).split("bytes")[0].trim());
+	}
+
+	//@Override
+	public List<OWAMPRequest> getRequests() {
+
+		List<OWAMPRequest> requests = new ArrayList<OWAMPRequest>();
+		for (String line : getLines()) {
+			if (isPingRequest(line)) {
+				OWAMPRequest request = createPingRequest(line);
+				requests.add(request);
+			}
+		}
+		return requests;
+
+	}
+
+	private OWAMPRequest createPingRequest(String line) {
+		String[] split = line.split(" ");
+		OWAMPRequest.PingRequestBuilder builder = OWAMPRequest.builder();
+
+		int bytes = Integer.parseInt(split[0]);
+		String from = split[3];
+        String fromIP;
+        int reqnr;
+        int ttl;
+        float time;
+        if(split[4].contains("(") && split[4].contains(")")) {
+            fromIP = split[4].replace("(", "").replace(")", "")
+                    .replace(":", "");
+            reqnr = Integer.parseInt(split[5].split("=")[1]);
+            ttl = Integer.parseInt(split[6].split("=")[1]);
+            time = Float.parseFloat(split[7].split("=")[1]);
+        } else {
+            fromIP = from;
+            reqnr = Integer.parseInt(split[4].split("=")[1]);
+            ttl = Integer.parseInt(split[5].split("=")[1]);
+            time = Float.parseFloat(split[6].split("=")[1]);
+        }
+		builder = builder.bytes(bytes).from(from).fromIP(fromIP).reqNr(reqnr)
+				.ttl(ttl).time(time);
+
+		return builder.build();
+
+	}
+
+	private boolean isPingRequest(String line) {
+		return line.contains("bytes from");
+	}
+
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/verona/codedcache/FileCC.java b/demo/src/main/java/br/rnp/futebol/verona/codedcache/FileCC.java
new file mode 100644
index 0000000000..ba33ad26c6
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/codedcache/FileCC.java
@@ -0,0 +1,57 @@
+package br.rnp.futebol.verona.codedcache;
+
+import java.io.Serializable;
+
+public class FileCC implements Serializable {
+
+    private String name, provider, extension;
+    private int chunkDuration, parts;
+
+    public FileCC(String name, String provider, String extension, int chunkDuration, int parts) {
+        this.name = name;
+        this.provider = provider;
+        this.extension = extension;
+        this.chunkDuration = chunkDuration;
+        this.parts = parts;
+    }
+
+    public int getParts() {
+        return parts;
+    }
+
+//    public void setParts(int parts) {
+//        this.parts = parts;
+//    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getProvider() {
+        return provider;
+    }
+
+    public void setProvider(String provider) {
+        this.provider = provider;
+    }
+
+    public String getExtension() {
+        return extension;
+    }
+
+//    public void setExtension(String extension) {
+//        this.extension = extension;
+//    }
+
+    public int getChunkDuration() {
+        return chunkDuration;
+    }
+
+//    public void setChunkDuration(int chunkDuration) {
+//        this.chunkDuration = chunkDuration;
+//    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/verona/codedcache/MergeVideos.java b/demo/src/main/java/br/rnp/futebol/verona/codedcache/MergeVideos.java
new file mode 100644
index 0000000000..4d68d404a4
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/codedcache/MergeVideos.java
@@ -0,0 +1,214 @@
+package br.rnp.futebol.verona.codedcache;
+
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.os.Environment;
+import android.util.Log;
+import android.widget.Toast;
+
+import com.coremedia.iso.boxes.Container;
+import com.google.android.exoplayer2.demo.PlayerActivity;
+import com.googlecode.mp4parser.authoring.Movie;
+import com.googlecode.mp4parser.authoring.Track;
+import com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;
+import com.googlecode.mp4parser.authoring.container.mp4.MovieCreator;
+import com.googlecode.mp4parser.authoring.tracks.AppendTrack;
+
+import java.io.File;
+import java.io.RandomAccessFile;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.nio.channels.FileChannel;
+import java.util.ArrayList;
+import java.util.LinkedList;
+import java.util.List;
+
+public class MergeVideos extends AsyncTask<String, Integer, String> {
+    // The working path where the video files are located
+//    private String workingPath;
+    // The files name to merge
+    private ArrayList<String> videosToMerge;
+    private String video;
+    private int parts;
+    private Context ctx;
+    private String ext, dest, path;
+
+    public MergeVideos(ArrayList<String> videosToMerge) {
+//        this.workingPath = workingPath;
+        this.videosToMerge = videosToMerge;
+    }
+
+    public MergeVideos(String video, int parts, String ext, String dest, Context ctx) {
+//        this.workingPath = workingPath;
+        this.video = video;
+        this.parts = parts;
+        this.ext = ext;
+        this.dest = dest;
+        this.ctx = ctx;
+        path = Environment.getExternalStorageDirectory().getAbsolutePath().concat("/").concat(dest);
+        Log.i("path", Environment.getExternalStorageDirectory().getAbsolutePath().concat("/").concat(dest));
+    }
+
+    @Override
+    protected void onPreExecute() {
+    }
+
+    private void try1() {
+
+    }
+
+    private void merge() {
+        try {
+            Movie[] inMovies = new Movie[parts];
+            for (int i = 0; i < parts; i++) {
+                String internal = Environment.getExternalStorageDirectory().getAbsolutePath().concat("/");
+                String svr = "http://143.54.12.47/";
+                String filename = video.concat("" + (i + 1)).concat(ext);
+                File file = new File(internal.concat(filename));
+                if (file.exists())
+                    inMovies[i] = MovieCreator.build(internal.concat(filename));
+                else {
+                    String svrAux = svr.concat(filename);
+                    try {
+                        HttpURLConnection.setFollowRedirects(false);
+                        // note : you may also need
+                        //        HttpURLConnection.setInstanceFollowRedirects(false)
+                        HttpURLConnection con = (HttpURLConnection) new URL(svrAux).openConnection();
+                        con.setRequestMethod("HEAD");
+                        if ((con.getResponseCode() == HttpURLConnection.HTTP_OK)) {
+                            inMovies[i] = MovieCreator.build(svrAux);
+                        }
+                    }
+                    catch (Exception e) {
+                        Log.i("error_cc", e.getMessage());
+                    }
+                }
+            }
+            if (inMovies.length > 0) {
+
+                List<Track> videoTracks = new LinkedList<>();
+                List<Track> audioTracks = new LinkedList<>();
+
+                for (Movie m : inMovies) {
+                    for (Track t : m.getTracks()) {
+                        if (t.getHandler().equals("soun")) {
+                            audioTracks.add(t);
+                        }
+                        if (t.getHandler().equals("vide")) {
+                            videoTracks.add(t);
+                        }
+                    }
+                }
+
+                Movie result = new Movie();
+
+                if (audioTracks.size() > 0) {
+                    result.addTrack(new AppendTrack(audioTracks.toArray(new Track[audioTracks.size()])));
+                }
+                if (videoTracks.size() > 0) {
+                    result.addTrack(new AppendTrack(videoTracks.toArray(new Track[videoTracks.size()])));
+                }
+
+                Container out = new DefaultMp4Builder().build(result);
+
+                Log.i("path", Environment.getExternalStorageDirectory().getAbsolutePath().concat("/").concat(dest));
+                FileChannel fc = new RandomAccessFile(Environment.getExternalStorageDirectory().getAbsolutePath().concat("/").concat(dest), "rw").getChannel();
+                out.writeContainer(fc);
+                fc.close();
+                Log.i("path", "closed");
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+    }
+
+    @Override
+    protected String doInBackground(String... params) {
+//        merge();
+        return "";
+    }
+
+//    @Override
+//    protected String doInBackground(String... params) {
+//        int count = videosToMerge.size();
+//        try {
+//            Movie[] inMovies = new Movie[count];
+//            for (int i = 0; i < count; i++) {
+//                File file = new File(videosToMerge.get(i));
+//                if (file.exists()) {
+////                    FileInputStream fis = new FileInputStream(file);
+////                    FileChannel fc = fis.getChannel();
+//                    inMovies[i] = MovieCreator.build(videosToMerge.get(i));
+////                    fis.close();
+////                    fc.close();
+//                }
+//            }
+//            if (inMovies.length > 0) {
+//
+//                List<Track> videoTracks = new LinkedList<>();
+//                List<Track> audioTracks = new LinkedList<>();
+//
+//                for (Movie m : inMovies) {
+//                    for (Track t : m.getTracks()) {
+//                        if (t.getHandler().equals("soun")) {
+//                            audioTracks.add(t);
+//                        }
+//                        if (t.getHandler().equals("vide")) {
+//                            videoTracks.add(t);
+//                        }
+////                        if (t.getHandler().equals("")) {
+////
+////                        }
+//                    }
+//                }
+//
+//                Movie result = new Movie();
+//
+//                if (audioTracks.size() > 0) {
+//                    result.addTrack(new AppendTrack(audioTracks.toArray(new Track[audioTracks.size()])));
+//                }
+//                if (videoTracks.size() > 0) {
+//                    result.addTrack(new AppendTrack(videoTracks.toArray(new Track[videoTracks.size()])));
+//                }
+//
+//                Container out = new DefaultMp4Builder().build(result);
+//
+//                FileChannel fc = new RandomAccessFile(String.format(Environment.getExternalStorageDirectory().getAbsolutePath() + "/outputbtls.mp4"), "rw").getChannel();
+//                out.writeContainer(fc);
+//                fc.close();
+//
+////                IsoFile out = (IsoFile) new DefaultMp4Builder().build(result);
+////
+////                long timestamp = new Date().getTime();
+////                String timestampS = "" + timestamp;
+////
+////                File storagePath = new File(Environment.getExternalStorageDirectory() + "");
+////                storagePath.mkdirs();
+////
+////                File myMovie = new File(storagePath, String.format("output-%s.mp4", timestampS));
+////
+////                FileOutputStream fos = new FileOutputStream(myMovie);
+////                FileChannel fco = fos.getChannel();
+////                fco.position(0);
+////                out.getBox(fco);
+////                fco.close();
+////                fos.close();
+//            }
+//        } catch (Exception e) {
+//            e.printStackTrace();
+//        }
+//
+//        String mFileName = Environment.getExternalStorageDirectory().getAbsolutePath();
+//        mFileName += "/output.mp4";
+//        return mFileName;
+//    }
+
+    @Override
+    protected void onPostExecute(String value) {
+        super.onPostExecute(value);
+    }
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/verona/codedcache/PlayerActivityWithCC.java b/demo/src/main/java/br/rnp/futebol/verona/codedcache/PlayerActivityWithCC.java
new file mode 100644
index 0000000000..1899c6b503
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/codedcache/PlayerActivityWithCC.java
@@ -0,0 +1,526 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.verona.codedcache;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Handler;
+import android.support.annotation.NonNull;
+import android.text.TextUtils;
+import android.util.Log;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.C;
+import com.google.android.exoplayer2.DefaultLoadControl;
+import com.google.android.exoplayer2.ExoPlaybackException;
+import com.google.android.exoplayer2.ExoPlayer;
+import com.google.android.exoplayer2.ExoPlayerFactory;
+import com.google.android.exoplayer2.SimpleExoPlayer;
+import com.google.android.exoplayer2.Timeline;
+import com.google.android.exoplayer2.demo.EventLogger;
+import com.google.android.exoplayer2.demo.R;
+import com.google.android.exoplayer2.drm.DrmSessionManager;
+import com.google.android.exoplayer2.drm.FrameworkMediaDrm;
+import com.google.android.exoplayer2.drm.HttpMediaDrmCallback;
+import com.google.android.exoplayer2.drm.StreamingDrmSessionManager;
+import com.google.android.exoplayer2.drm.UnsupportedDrmException;
+import com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
+import com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException;
+import com.google.android.exoplayer2.mediacodec.MediaCodecUtil.DecoderQueryException;
+import com.google.android.exoplayer2.source.ConcatenatingMediaSource;
+import com.google.android.exoplayer2.source.ExtractorMediaSource;
+import com.google.android.exoplayer2.source.MediaSource;
+import com.google.android.exoplayer2.source.TrackGroupArray;
+import com.google.android.exoplayer2.source.dash.DashMediaSource;
+import com.google.android.exoplayer2.source.dash.DefaultDashChunkSource;
+import com.google.android.exoplayer2.source.hls.HlsMediaSource;
+import com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource;
+import com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
+import com.google.android.exoplayer2.trackselection.AdaptiveVideoTrackSelection;
+import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
+import com.google.android.exoplayer2.trackselection.MappingTrackSelector;
+import com.google.android.exoplayer2.trackselection.MappingTrackSelector.TrackInfo;
+import com.google.android.exoplayer2.trackselection.TrackSelection;
+import com.google.android.exoplayer2.ui.PlaybackControlView;
+import com.google.android.exoplayer2.ui.SimpleExoPlayerView;
+import com.google.android.exoplayer2.upstream.DataSource;
+import com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
+import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
+import com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory;
+import com.google.android.exoplayer2.upstream.HttpDataSource;
+import com.google.android.exoplayer2.util.Util;
+
+import java.net.CookieHandler;
+import java.net.CookieManager;
+import java.net.CookiePolicy;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.UUID;
+
+public class PlayerActivityWithCC extends Activity implements OnClickListener, ExoPlayer.EventListener,
+        MappingTrackSelector.EventListener, PlaybackControlView.VisibilityListener {
+
+    public static final String DRM_SCHEME_UUID_EXTRA = "drm_scheme_uuid";
+    public static final String DRM_LICENSE_URL = "drm_license_url";
+    public static final String DRM_KEY_REQUEST_PROPERTIES = "drm_key_request_properties";
+    public static final String PREFER_EXTENSION_DECODERS = "prefer_extension_decoders";
+
+    public static final String ACTION_VIEW = "com.google.android.exoplayer.demo.action.VIEW";
+    public static final String EXTENSION_EXTRA = "extension";
+
+    public static final String ACTION_VIEW_LIST = "com.google.android.exoplayer.demo.action.VIEW_LIST";
+    public static final String URI_LIST_EXTRA = "uri_list";
+    public static final String EXTENSION_LIST_EXTRA = "extension_list";
+
+    private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();
+    private static final CookieManager DEFAULT_COOKIE_MANAGER;
+
+    static {
+        DEFAULT_COOKIE_MANAGER = new CookieManager();
+        DEFAULT_COOKIE_MANAGER.setCookiePolicy(CookiePolicy.ACCEPT_ORIGINAL_SERVER);
+    }
+
+    private Handler mainHandler;
+    private EventLogger eventLogger;
+    private SimpleExoPlayerView simpleExoPlayerView;
+    //    private LinearLayout debugRootView;
+    private TextView debugTextView;
+//    private Button retryButton;
+
+    private String userAgent;
+    private DataSource.Factory mediaDataSourceFactory;
+    private SimpleExoPlayer player;
+    private MappingTrackSelector trackSelector;
+    //    private TrackSelectionHelper trackSelectionHelper;
+    private VOPlayerHelperWithCC debugViewHelper;
+    private boolean playerNeedsSource;
+
+    private boolean shouldAutoPlay;
+    private boolean shouldRestorePosition;
+    private int playerWindow;
+    public static int cont = 0;
+    private long playerPosition;
+
+    // Activity lifecycle
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        BANDWIDTH_METER.setBitrateEstimate(-1);
+        shouldAutoPlay = true;
+        userAgent = Util.getUserAgent(this, "ExoPlayerDemo");
+        mediaDataSourceFactory = buildDataSourceFactory(true);
+        mainHandler = new Handler();
+        if (CookieHandler.getDefault() != DEFAULT_COOKIE_MANAGER) {
+            CookieHandler.setDefault(DEFAULT_COOKIE_MANAGER);
+        }
+
+        setContentView(R.layout.player_activity);
+        View rootView = findViewById(R.id.root);
+        rootView.setOnClickListener(this);
+//        debugRootView = (LinearLayout) findViewById(R.id.controls_root);
+        debugTextView = (TextView) findViewById(R.id.debug_text_view);
+//        retryButton = (Button) findViewById(R.id.retry_button);
+//        retryButton.setOnClickListener(this);
+
+        simpleExoPlayerView = (SimpleExoPlayerView) findViewById(R.id.player_view);
+        simpleExoPlayerView.setControllerVisibilityListener(this);
+        simpleExoPlayerView.requestFocus();
+    }
+
+    @Override
+    public void onNewIntent(Intent intent) {
+        releasePlayer();
+        shouldRestorePosition = false;
+        setIntent(intent);
+    }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+        if (Util.SDK_INT > 23) {
+            initializePlayer();
+        }
+    }
+
+    @Override
+    public void onResume() {
+        BANDWIDTH_METER.setBitrateEstimate(-1);
+        super.onResume();
+        if ((Util.SDK_INT <= 23 || player == null)) {
+            initializePlayer();
+        }
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        if (Util.SDK_INT <= 23) {
+            releasePlayer();
+        }
+    }
+
+    @Override
+    public void onStop() {
+        super.onStop();
+        if (Util.SDK_INT > 23) {
+            releasePlayer();
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            initializePlayer();
+        } else {
+            showToast(R.string.storage_permission_denied);
+            finish();
+        }
+    }
+
+    // OnClickListener methods
+
+    @Override
+    public void onClick(View view) {
+//        if (view == retryButton) {
+//            initializePlayer();
+//        } else if (view.getParent() == debugRootView) {
+//            trackSelectionHelper.showSelectionDialog(this, ((Button) view).getText(),
+//                    trackSelector.getTrackInfo(), (int) view.getTag());
+//        }
+    }
+
+    // PlaybackControlView.VisibilityListener implementation
+
+    @Override
+    public void onVisibilityChange(int visibility) {
+//        debugRootView.setVisibility(visibility);
+    }
+
+    // Internal methods
+
+    private void initializePlayer() {
+        Intent intent = getIntent();
+        Bundle extras = intent.getExtras();
+        ArrayList<String> uriStrings = extras.getStringArrayList(URI_LIST_EXTRA);
+        FileCC filecc = (FileCC) extras.getSerializable("filecc");
+        if (uriStrings != null && filecc != null) {
+            if (player == null) {
+                boolean preferExtensionDecoders = intent.getBooleanExtra(PREFER_EXTENSION_DECODERS, false);
+                UUID drmSchemeUuid = intent.hasExtra(DRM_SCHEME_UUID_EXTRA) ? UUID.fromString(intent.getStringExtra(DRM_SCHEME_UUID_EXTRA)) : null;
+                DrmSessionManager drmSessionManager = null;
+                if (drmSchemeUuid != null) {
+                    String drmLicenseUrl = intent.getStringExtra(DRM_LICENSE_URL);
+                    String[] keyRequestPropertiesArray = intent.getStringArrayExtra(DRM_KEY_REQUEST_PROPERTIES);
+                    Map<String, String> keyRequestProperties;
+                    if (keyRequestPropertiesArray == null || keyRequestPropertiesArray.length < 2) {
+                        keyRequestProperties = null;
+                    } else {
+                        keyRequestProperties = new HashMap<>();
+                        for (int i = 0; i < keyRequestPropertiesArray.length - 1; i += 2)
+                            keyRequestProperties.put(keyRequestPropertiesArray[i], keyRequestPropertiesArray[i + 1]);
+                    }
+                    try {
+                        drmSessionManager = buildDrmSessionManager(drmSchemeUuid, drmLicenseUrl, keyRequestProperties);
+                    } catch (UnsupportedDrmException e) {
+                        int errorStringId = Util.SDK_INT < 18 ? R.string.error_drm_not_supported
+                                : (e.reason == UnsupportedDrmException.REASON_UNSUPPORTED_SCHEME
+                                ? R.string.error_drm_unsupported_scheme : R.string.error_drm_unknown);
+                        showToast(errorStringId);
+                        return;
+                    }
+                }
+
+                eventLogger = new EventLogger();
+                TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveVideoTrackSelection.Factory(BANDWIDTH_METER);
+                trackSelector = new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);
+                trackSelector.addListener(this);
+                trackSelector.addListener(eventLogger);
+                player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, new DefaultLoadControl(), drmSessionManager, preferExtensionDecoders);
+                player.addListener(this);
+                player.addListener(eventLogger);
+                player.setAudioDebugListener(eventLogger);
+                player.setVideoDebugListener(eventLogger);
+                player.setId3Output(eventLogger);
+                simpleExoPlayerView.setPlayer(player);
+                if (shouldRestorePosition) {
+                    if (playerPosition == C.TIME_UNSET)
+                        player.seekToDefaultPosition(playerWindow);
+                    else
+                        player.seekTo(playerWindow, playerPosition);
+                }
+                player.setPlayWhenReady(shouldAutoPlay);
+                debugViewHelper = new VOPlayerHelperWithCC(player, debugTextView, getBaseContext(), 30, uriStrings, filecc);
+                debugViewHelper.start();
+                playerNeedsSource = true;
+            }
+            if (playerNeedsSource) {
+                String action = intent.getAction();
+                Uri[] uris;
+                String[] extensions;
+                if (ACTION_VIEW.equals(action)) {
+                    uris = new Uri[]{intent.getData()};
+                    extensions = new String[]{intent.getStringExtra(EXTENSION_EXTRA)};
+                } else if (ACTION_VIEW_LIST.equals(action)) {
+                    uris = new Uri[uriStrings.size()];
+                    for (int i = 0; i < uriStrings.size(); i++) {
+                        uris[i] = Uri.parse(uriStrings.get(i));
+                    }
+                    simpleExoPlayerView.getPlaybackController().setTotalDuration(uris.length * filecc.getChunkDuration());
+                    simpleExoPlayerView.getPlaybackController().useCC(true);
+                    extensions = intent.getStringArrayExtra(EXTENSION_LIST_EXTRA);
+                    if (extensions == null) {
+                        extensions = new String[uriStrings.size()];
+                    }
+                } else {
+                    showToast(getString(R.string.unexpected_intent_action, action));
+                    return;
+                }
+                if (Util.maybeRequestReadExternalStoragePermission(this, uris)) {
+                    // The player will be reinitialized if the permission is granted.
+                    return;
+                }
+                MediaSource[] mediaSources = new MediaSource[uris.length];
+                for (int i = 0; i < uris.length; i++) {
+                    mediaSources[i] = buildMediaSource(uris[i], extensions[i]);
+                }
+                MediaSource mediaSource = mediaSources.length == 1 ? mediaSources[0]
+                        : new ConcatenatingMediaSource(mediaSources);
+                player.prepare(mediaSource, !shouldRestorePosition);
+                playerNeedsSource = false;
+                updateButtonVisibilities();
+            }
+        }
+    }
+
+    private MediaSource buildMediaSource(Uri uri, String overrideExtension) {
+        int type = Util.inferContentType(!TextUtils.isEmpty(overrideExtension) ? "." + overrideExtension
+                : uri.getLastPathSegment());
+        switch (type) {
+            case Util.TYPE_SS:
+                return new SsMediaSource(uri, buildDataSourceFactory(false),
+                        new DefaultSsChunkSource.Factory(mediaDataSourceFactory), mainHandler, eventLogger);
+            case Util.TYPE_DASH:
+                return new DashMediaSource(uri, buildDataSourceFactory(false),
+                        new DefaultDashChunkSource.Factory(mediaDataSourceFactory), mainHandler, eventLogger);
+            case Util.TYPE_HLS:
+                return new HlsMediaSource(uri, mediaDataSourceFactory, mainHandler, eventLogger);
+            case Util.TYPE_OTHER:
+                return new ExtractorMediaSource(uri, mediaDataSourceFactory, new DefaultExtractorsFactory(),
+                        mainHandler, eventLogger);
+            default: {
+                throw new IllegalStateException("Unsupported type: " + type);
+            }
+        }
+    }
+
+    private DrmSessionManager buildDrmSessionManager(UUID uuid, String licenseUrl,
+                                                     Map<String, String> keyRequestProperties)
+            throws UnsupportedDrmException {
+        if (Util.SDK_INT < 18) {
+            return null;
+        }
+        HttpMediaDrmCallback drmCallback = new HttpMediaDrmCallback(licenseUrl,
+                buildHttpDataSourceFactory(false), keyRequestProperties);
+        return new StreamingDrmSessionManager<>(uuid,
+                FrameworkMediaDrm.newInstance(uuid), drmCallback, null, mainHandler, eventLogger);
+    }
+
+    public void releasePlayer() {
+        if (player != null) {
+            debugViewHelper.stop();
+            debugViewHelper = null;
+            shouldAutoPlay = player.getPlayWhenReady();
+            shouldRestorePosition = false;
+            Timeline timeline = player.getCurrentTimeline();
+            if (timeline != null) {
+                playerWindow = player.getCurrentWindowIndex();
+                Timeline.Window window = timeline.getWindow(playerWindow, new Timeline.Window());
+                if (!window.isDynamic) {
+                    shouldRestorePosition = true;
+                    playerPosition = window.isSeekable ? player.getCurrentPosition() : C.TIME_UNSET;
+                }
+            }
+            player.release();
+            player = null;
+            trackSelector = null;
+//            trackSelectionHelper = null;
+            eventLogger = null;
+        }
+    }
+
+    /**
+     * Returns a new DataSource factory.
+     *
+     * @param useBandwidthMeter Whether to set {@link #BANDWIDTH_METER} as a listener to the new
+     *                          DataSource factory.
+     * @return A new DataSource factory.
+     */
+    private DataSource.Factory buildDataSourceFactory(boolean useBandwidthMeter) {
+//        Log.i("BNDWTH3", BANDWIDTH_METER.toLog() + " " + useBandwidthMeter);
+        return new DefaultDataSourceFactory(this, useBandwidthMeter ? BANDWIDTH_METER : null,
+                buildHttpDataSourceFactory(useBandwidthMeter));
+    }
+
+    /**
+     * Returns a new HttpDataSource factory.
+     *
+     * @param useBandwidthMeter Whether to set {@link #BANDWIDTH_METER} as a listener to the new
+     *                          DataSource factory.
+     * @return A new HttpDataSource factory.
+     */
+    private HttpDataSource.Factory buildHttpDataSourceFactory(boolean useBandwidthMeter) {
+//        Log.i("BNDWTH3", BANDWIDTH_METER.toLog() + " " + useBandwidthMeter);
+        return new DefaultHttpDataSourceFactory(userAgent, useBandwidthMeter ? BANDWIDTH_METER : null);
+    }
+
+    // ExoPlayer.EventListener implementation
+
+    @Override
+    public void onLoadingChanged(boolean isLoading) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
+        if (playbackState == ExoPlayer.STATE_ENDED) {
+            showControls();
+        }
+        updateButtonVisibilities();
+    }
+
+    @Override
+    public void onPositionDiscontinuity() {
+        // Do nothing.
+    }
+
+    @Override
+    public void onTimelineChanged(Timeline timeline, Object manifest) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerError(ExoPlaybackException e) {
+        String errorString = null;
+        if (e.type == ExoPlaybackException.TYPE_RENDERER) {
+            Exception cause = e.getRendererException();
+            if (cause instanceof DecoderInitializationException) {
+                // Special case for decoder initialization failures.
+                DecoderInitializationException decoderInitializationException =
+                        (DecoderInitializationException) cause;
+                if (decoderInitializationException.decoderName == null) {
+                    if (decoderInitializationException.getCause() instanceof DecoderQueryException) {
+                        errorString = getString(R.string.error_querying_decoders);
+                    } else if (decoderInitializationException.secureDecoderRequired) {
+                        errorString = getString(R.string.error_no_secure_decoder,
+                                decoderInitializationException.mimeType);
+                    } else {
+                        errorString = getString(R.string.error_no_decoder,
+                                decoderInitializationException.mimeType);
+                    }
+                } else {
+                    errorString = getString(R.string.error_instantiating_decoder,
+                            decoderInitializationException.decoderName);
+                }
+            }
+        }
+        if (errorString != null) {
+            showToast(errorString);
+        }
+        playerNeedsSource = true;
+        updateButtonVisibilities();
+        showControls();
+    }
+
+    // MappingTrackSelector.EventListener implementation
+
+    @Override
+    public void onTracksChanged(TrackInfo trackInfo) {
+        Log.i("PLAYER_CC", "track: " + ++cont);
+        updateButtonVisibilities();
+        if (trackInfo.hasOnlyUnplayableTracks(C.TRACK_TYPE_VIDEO)) {
+            showToast(R.string.error_unsupported_video);
+        }
+        if (trackInfo.hasOnlyUnplayableTracks(C.TRACK_TYPE_AUDIO)) {
+            showToast(R.string.error_unsupported_audio);
+        }
+    }
+
+    // User controls
+
+    private void updateButtonVisibilities() {
+//        debugRootView.removeAllViews();
+
+//        retryButton.setVisibility(playerNeedsSource ? View.VISIBLE : View.GONE);
+//        debugRootView.addView(retryButton);
+
+        if (player == null) {
+            return;
+        }
+
+        TrackInfo trackInfo = trackSelector.getTrackInfo();
+        if (trackInfo == null) {
+            return;
+        }
+
+        int rendererCount = trackInfo.rendererCount;
+        for (int i = 0; i < rendererCount; i++) {
+            TrackGroupArray trackGroups = trackInfo.getTrackGroups(i);
+            if (trackGroups.length != 0) {
+                Button button = new Button(this);
+                int label;
+                switch (player.getRendererType(i)) {
+                    case C.TRACK_TYPE_AUDIO:
+                        label = R.string.audio;
+                        break;
+                    case C.TRACK_TYPE_VIDEO:
+                        label = R.string.video;
+                        break;
+                    case C.TRACK_TYPE_TEXT:
+                        label = R.string.text;
+                        break;
+                    default:
+                        continue;
+                }
+                button.setText(label);
+                button.setTag(i);
+                button.setOnClickListener(this);
+//                debugRootView.addView(button);
+            }
+        }
+    }
+
+    private void showControls() {
+//        debugRootView.setVisibility(View.VISIBLE);
+    }
+
+    private void showToast(int messageId) {
+        showToast(getString(messageId));
+    }
+
+    private void showToast(String message) {
+        Toast.makeText(getApplicationContext(), message, Toast.LENGTH_LONG).show();
+    }
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/verona/codedcache/VOPlayerHelperWithCC.java b/demo/src/main/java/br/rnp/futebol/verona/codedcache/VOPlayerHelperWithCC.java
new file mode 100644
index 0000000000..29dbf37c96
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/codedcache/VOPlayerHelperWithCC.java
@@ -0,0 +1,431 @@
+package br.rnp.futebol.verona.codedcache;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Environment;
+import android.util.Log;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.ExoPlaybackException;
+import com.google.android.exoplayer2.ExoPlayer;
+import com.google.android.exoplayer2.Format;
+import com.google.android.exoplayer2.SimpleExoPlayer;
+import com.google.android.exoplayer2.Timeline;
+import com.google.android.exoplayer2.decoder.DecoderCounters;
+import com.google.android.exoplayer2.demo.PlayerActivity;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Locale;
+
+import br.rnp.futebol.verona.OWAMP.OWAMP;
+import br.rnp.futebol.verona.OWAMP.OWAMPArguments;
+import br.rnp.futebol.verona.OWAMP.OWAMPResult;
+import br.rnp.futebol.verona.visual.activity.MainActivity;
+
+
+/**
+ * A helper class for periodically updating a {@link TextView} with debug information obtained from
+ * a {@link SimpleExoPlayer}.
+ */
+public final class VOPlayerHelperWithCC implements Runnable, ExoPlayer.EventListener {
+
+    private static final int REFRESH_INTERVAL_MS = 50;
+    private int PARTS;
+    private int CHUNK_DURATION_MS;
+//    private static final String LOG_CC = "LOG_VIDEO_CC";
+    public static boolean EXPERIMENT_UP = true;
+
+    private final String[] PARAMETERS = {"loop"};
+    private final SimpleExoPlayer player;
+    private final TextView textView;
+
+    private long playbackStartTime, bufferingStartAux;
+    private boolean started, isPstFilled;//, checkedChunk;
+    private Context ctx;
+    private int loop, contAux, indexAux; //, counter = 0;
+    private ArrayList<String> uris;
+    private String prov;
+    private FileCC filecc;
+    private ArrayList<Long> freezes = new ArrayList<>();
+//    @SuppressWarnings("unused")
+//    private PlaybackControlView playbackControl;
+
+    /**
+     * @param player   The {@link SimpleExoPlayer} from which debug information should be obtained.
+     * @param textView The {@link TextView} that should be updated to display the information.
+     */
+    public VOPlayerHelperWithCC(SimpleExoPlayer player, TextView textView, Context ctx, int loop, ArrayList<String> uris, FileCC filecc) {
+        this.player = player;
+        this.textView = textView;
+        this.ctx = ctx;
+        this.loop = loop;
+        this.uris = uris;
+        this.filecc = filecc;
+        this.PARTS = filecc.getParts();
+        this.prov = uris.get(0);
+        this.indexAux = player.getCurrentWindowIndex();
+        this.CHUNK_DURATION_MS = filecc.getChunkDuration();
+        write("\n", "praia_full");
+    }
+
+    /**
+     * Starts periodic updates of the {@link TextView}. Must be called from the application's main
+     * thread.
+     */
+    public void start() {
+        if (started) {
+            return;
+        }
+        started = true;
+        player.addListener(this);
+        updateAndPost();
+    }
+
+    /**
+     * Stops periodic updates of the {@link TextView}. Must be called from the application's main
+     * thread.
+     */
+    public void stop() {
+        if (!started) {
+            return;
+        }
+        started = false;
+        player.removeListener(this);
+        textView.removeCallbacks(this);
+    }
+
+
+    // ExoPlayer.EventListener implementation.
+
+    @Override
+    public void onLoadingChanged(boolean isLoading) {
+        // Do nothing.
+    }
+
+//    private void log(String msg) {
+//        Log.i(LOG_CC, msg);
+//    }
+
+    @Override
+    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
+//        log("STATE: " + playbackState);
+        if (playbackState == ExoPlayer.STATE_BUFFERING && playWhenReady) {
+            bufferingStartAux = Calendar.getInstance().getTimeInMillis();
+            if (isPstFilled)
+                player.increaseStalls();
+        } else if (playbackState == ExoPlayer.STATE_READY) {
+            long bufferingEndAux = Calendar.getInstance().getTimeInMillis();
+            if (isPstFilled) {
+                player.setStallsDuration(bufferingEndAux - bufferingStartAux);
+                freezes.add(bufferingEndAux - bufferingStartAux);
+            }
+            else {
+                playbackStartTime = bufferingEndAux - bufferingStartAux;
+                isPstFilled = true;
+            }
+        }
+        updateAndPost();
+    }
+
+    @Override
+    public void onPositionDiscontinuity() {
+//        if (!checkedChunk && counter <= PARTS) {
+//            log("stall");
+//        writeFull();
+//        }
+    }
+
+    private void writeFull() {
+        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss", Locale.US);
+        write((player.getCurrentWindowIndex()) + ","
+                + sdf.format(new Date()) + ","
+                + prov + ","
+                + playbackStartTime + ","
+                + player.getBufferedPercentage() + ","
+                + player.getStalls() + ","
+                + strFreezes() + ","
+                + player.getStallsDuration(), filecc.getName() + "_full");
+//        if (contAux < PARTS)
+//            prov = uris.get(contAux);
+    }
+
+    private void writeSbs() {
+        write("", "praia_sbs");
+    }
+
+    private String strFreezes() {
+        String f = "[";
+        if (!freezes.isEmpty()) {
+            for (int i = 0; i < (freezes.size() - 1); i++) {
+                f += freezes.get(i) + "; ";
+            }
+            f += freezes.get(freezes.size() - 1) + "]";
+        }
+        return f;
+    }
+
+
+    @Override
+    public void onTimelineChanged(Timeline timeline, Object manifest) {
+    }
+
+    @Override
+    public void onPlayerError(ExoPlaybackException error) {
+    }
+
+    @Override
+    public void run() {
+        updateAndPost();
+    }
+
+    private void updateAndPost() {
+        if (!(player.getPlaybackState() == ExoPlayer.STATE_ENDED)) {
+            prov = uris.get(player.getCurrentWindowIndex());
+            if (indexAux != player.getCurrentWindowIndex()) {
+                writeFull();
+                indexAux = player.getCurrentWindowIndex();
+            }
+//            playbackControl.setVideoIndex();
+//            if (contAux != PlayerActivityWithCC.cont) {
+//                log("ca: " + contAux);
+//            contAux = PlayerActivityWithCC.cont;
+//                playbackControl.setVideoIndex(contAux);
+//            }
+//            if (player.getCurrentPosition() > 0 && player.getCurrentPosition() < REFRESH_INTERVAL_MS + 1 && !checkedChunk) {
+//                counter++;
+//                log("Chunk n: " + counter);
+//                checkedChunk = true;
+//            } else if (player.getCurrentPosition() > CHUNK_DURATION_MS - (REFRESH_INTERVAL_MS * 2)) {
+//                checkedChunk = false;
+//            }
+            textView.setText(getLogString());
+            textView.removeCallbacks(this);
+            textView.postDelayed(this, REFRESH_INTERVAL_MS);
+        } else {
+            writeFull();
+            if ((loop - 1) == 0)
+                EXPERIMENT_UP = false;
+            else
+                stop();
+        }
+
+    }
+
+
+    @SuppressWarnings("unused")
+    private void goToPlayer() {
+        if (30 - loop > 0) {
+            loop++;
+        } else {
+            makeOverDialog();
+            return;
+        }
+        Toast.makeText(ctx, "Starting next video", Toast.LENGTH_SHORT).show();
+        Bundle extras = new Bundle();
+        extras.putInt(PARAMETERS[0], loop);
+        ArrayList<String> vids = new ArrayList<>();
+        String internal = Environment.getExternalStorageDirectory().getAbsolutePath().concat("/");
+        String svr = "http://143.54.12.47:8081/";
+        for (int i = 0; i < 16; i++) {
+            String filename = "bbb_sunflower".concat("" + (i + 1)).concat(".mp4");
+            File file = new File(internal.concat(filename));
+            if (file.exists())
+                vids.add(internal.concat(filename));
+            else
+                vids.add(svr.concat(filename));
+        }
+        extras.putStringArrayList(PlayerActivityWithCC.URI_LIST_EXTRA, vids);
+        Intent intent = new Intent(ctx, PlayerActivityWithCC.class);
+        intent.setAction(PlayerActivityWithCC.ACTION_VIEW_LIST);
+        intent.putExtras(extras);
+        ctx.startActivity(intent);
+    }
+
+    @SuppressWarnings("unused")
+    private String buildCsvText() {
+        Format format = player.getVideoFormat();
+        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy-HH:mm:ss", Locale.US);
+        String txt = sdf.format(new Date());
+        txt += "," + player.getStalls();
+        txt += "," + player.getStallsDuration();
+        txt += "," + playbackStartTime;
+//        txt += "," + (rttTotal / rttCont);
+//        txt += "," + (100 - ((received * 100) / sent)) + "%";
+        txt += "";
+        return txt;
+    }
+
+    private String getLogString() {
+        String text = "";
+        text += "Chunk position: " + ((int) player.getCurrentPosition()/1000) + " / (" + ((int) ((((PlayerActivityWithCC.cont - 1) * CHUNK_DURATION_MS)  + player.getCurrentPosition())/1000)) + "/ " + (CHUNK_DURATION_MS * PARTS)/1000 + ")";
+        text += getStatusString();
+        text += getPlayerStateString();
+        text += getBufferProgress();
+        text += getVideoString();
+        text += getAudioString();
+        text += getStallsString();
+//        text += "\nLoop: " + loop;
+        text += getDecoderCountersBufferCountString("video", player.getVideoDecoderCounters());
+        text += "\nSource: " + prov;
+        if (prov.startsWith("http://"))
+            text += " (EXTERNAL)";
+        else
+            text += " (CACHE)";
+        text += "\nChunk: " + player.getCurrentWindowIndex();
+        return text;
+    }
+
+    private String getPlayerStateString() {
+        String text = " / Playback State: ";
+        switch (player.getPlaybackState()) {
+            case ExoPlayer.STATE_BUFFERING:
+                text += "buffering";
+                break;
+            case ExoPlayer.STATE_ENDED:
+                text += "ended";
+                break;
+            case ExoPlayer.STATE_IDLE:
+                text += "idle";
+                break;
+            case ExoPlayer.STATE_READY:
+                text += "ready";
+                break;
+            default:
+                text += "unknown";
+                break;
+        }
+        return text;
+    }
+
+    @SuppressWarnings("unused")
+    private String getHeader() {
+        String txt = "Timestamp";
+        txt += ",Freezes";
+        txt += ",Freezes Duration";
+        txt += ",Playback Start Time";
+        return txt;
+    }
+
+    @SuppressWarnings("unused")
+    public AlertDialog makeCompleteDialog(String title, String message, String okt, String cancelt, Context ctx,
+                                          DialogInterface.OnClickListener ok, DialogInterface.OnClickListener cancel) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);
+        builder.setMessage(message);
+        builder.setTitle(title);
+        builder.setCancelable(false);
+        builder.setPositiveButton(okt, ok);
+        builder.setNegativeButton(cancelt, cancel);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    @SuppressWarnings("unused")
+    private OWAMPResult measureRTT(String ip) {
+        OWAMPArguments args = new OWAMPArguments.Builder().url(ip).timeout(5).count(1).bytes(32).build();
+        return OWAMP.ping(args, OWAMP.Backend.UNIX);
+    }
+
+    public AlertDialog makeOverDialog() {
+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);
+        builder.setMessage("Thanks for participating.");
+        builder.setCancelable(false);
+        builder.setTitle("That's it!");
+        builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                ctx.startActivity(new Intent(ctx, MainActivity.class));
+                ((PlayerActivity) ctx).finish();
+            }
+        });
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    private String getStallsString() {
+        String text = "\nFreezes: " + player.getStalls();
+        text += " (" + player.getStallsDuration() + " ms)";
+        text += "\nPlayback Start Time: " + playbackStartTime + "ms";
+        return text;
+    }
+
+    private String getStatusString() {
+        String status = ("\nReady to Play: ");
+        status += (player.getPlayWhenReady());
+        status += (" / Is Loading Content: ");
+        status += (player.isLoading());
+        return status;
+    }
+
+    private void write(String msg, String name) {
+        try {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(name.concat(".csv"));
+            BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i("teste", e.getMessage());
+        }
+    }
+
+    private String getBufferProgress() {
+        String text = ("\nBuffer Progress: ");
+        text += ((player.getBufferedPosition()) / 1000) + ("s/");
+        text += (player.getDuration() / 1000) + ("s (");
+        text += (player.getBufferedPercentage()) + ("%)");
+        return text;
+    }
+
+    @SuppressWarnings("unused")
+    private String getPlayerWindowIndexString() {
+        String index = ("\nPeriod Index: ");
+        index += (player.getCurrentPeriodIndex());
+        return (index.concat("\nWindow Index: ").concat(player.getCurrentWindowIndex() + ""));
+    }
+
+    private String getVideoString() {
+        Format video = player.getVideoFormat();
+        if (video == null)
+            return "";
+        String builder = "\nVideo Resolution: ";
+        builder += (video.width);
+        builder += ("x");
+        builder += (video.height);
+        return builder;
+    }
+
+    private String getAudioString() {
+        Format format = player.getAudioFormat();
+        if (format == null) {
+            return "";
+        }
+        return "\nAudio samplerate: ".concat(format.sampleRate + "");
+    }
+
+    @SuppressWarnings("unused")
+    private String getDecoderCountersBufferCountString(String type, DecoderCounters counters) {
+        if (counters == null) {
+            return "";
+        }
+        counters.ensureUpdated();
+        return "\n" + type + " counters: "
+                + "rob:" + counters.renderedOutputBufferCount
+                + " sob:" + counters.skippedOutputBufferCount
+                + " dob:" + counters.droppedOutputBufferCount
+                + " mcdb:" + counters.maxConsecutiveDroppedOutputBufferCount;
+    }
+
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExpForListDAO.java b/demo/src/main/java/br/rnp/futebol/verona/dao/TExpForListDAO.java
similarity index 97%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExpForListDAO.java
rename to demo/src/main/java/br/rnp/futebol/verona/dao/TExpForListDAO.java
index 03b6eff310..263ef24ef3 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExpForListDAO.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/dao/TExpForListDAO.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.dao;
+package br.rnp.futebol.verona.dao;
 
 import android.content.ContentValues;
 import android.content.Context;
@@ -15,10 +15,10 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TExperiment;
 
 /**
- * [UFRGS] VO-CoLisEU
+ * [UFRGS] VERONA
  * Created by camargo on 25/10/2016
  * Data Access Object (DAO) class to manage the experiments saved in
  * the device internal memory
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExperimentDAO.java b/demo/src/main/java/br/rnp/futebol/verona/dao/TExperimentDAO.java
similarity index 97%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExperimentDAO.java
rename to demo/src/main/java/br/rnp/futebol/verona/dao/TExperimentDAO.java
index 89a552d3c5..7f37872deb 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TExperimentDAO.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/dao/TExperimentDAO.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.dao;
+package br.rnp.futebol.verona.dao;
 
 import android.content.Context;
 import android.database.Cursor;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TScriptDAO.java b/demo/src/main/java/br/rnp/futebol/verona/dao/TScriptDAO.java
similarity index 89%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TScriptDAO.java
rename to demo/src/main/java/br/rnp/futebol/verona/dao/TScriptDAO.java
index 06c59f9d4f..9db99ca40a 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/TScriptDAO.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/dao/TScriptDAO.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.dao;
+package br.rnp.futebol.verona.dao;
 
 import android.content.ContentValues;
 import android.content.Context;
@@ -10,12 +10,11 @@
 import org.json.JSONObject;
 
 import java.util.ArrayList;
-import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.verona.pojo.TScript;
 
 /**
- * [UFRGS] VO-CoLisEU
+ * [UFRGS] VERONA
  * Created by camargo on 25/10/2016
  * Data Access Object (DAO) class to manage the experiments saved in
  * the device internal memory
@@ -127,6 +126,20 @@ public void delete(Integer id) {
         }
     }
 
+    public ArrayList<String> getScriptsName() {
+        try {
+            ArrayList<String> exps = new ArrayList<>();
+            Cursor c = getWritableDatabase().query(TABLE_NAME, COLUMNS, null, null, null, null, null);
+            while (c.moveToNext()) {
+                exps.add(c.getString(2));
+            }
+            c.close();
+            return exps;
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
     public int getScriptsCount() {
         int count = 0;
         Cursor c = getWritableDatabase().query(TABLE_NAME, COLUMNS, null, null, null, null, null);
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/unused/ExperimentDAO.java b/demo/src/main/java/br/rnp/futebol/verona/dao/unused/ExperimentDAO.java
similarity index 95%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/dao/unused/ExperimentDAO.java
rename to demo/src/main/java/br/rnp/futebol/verona/dao/unused/ExperimentDAO.java
index c5b13e53f2..a8ebee4dd9 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/unused/ExperimentDAO.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/dao/unused/ExperimentDAO.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.dao.unused;
+package br.rnp.futebol.verona.dao.unused;
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/unused/ScriptDAO.java b/demo/src/main/java/br/rnp/futebol/verona/dao/unused/ScriptDAO.java
similarity index 96%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/dao/unused/ScriptDAO.java
rename to demo/src/main/java/br/rnp/futebol/verona/dao/unused/ScriptDAO.java
index 284b0ee45f..6530581a47 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/dao/unused/ScriptDAO.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/dao/unused/ScriptDAO.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.dao.unused;
+package br.rnp.futebol.verona.dao.unused;
 
 import android.content.ContentValues;
 import android.content.Context;
@@ -6,13 +6,13 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
-import br.rnp.futebol.vocoliseu.pojo.unused.Script;
+import br.rnp.futebol.verona.pojo.unused.Script;
 
 import java.util.ArrayList;
 import java.util.List;
 
 /**
- * [UFRGS] VO-CoLisEU
+ * [UFRGS] VERONA
  * Created by camargo on 25/10/2016
  * Data Access Object (DAO) class to manage the experiments saved in
  *  the device internal memory
diff --git a/demo/src/main/java/br/rnp/futebol/verona/migration/PlayerActivityWithMigration.java b/demo/src/main/java/br/rnp/futebol/verona/migration/PlayerActivityWithMigration.java
new file mode 100644
index 0000000000..b6ca85990e
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/migration/PlayerActivityWithMigration.java
@@ -0,0 +1,561 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.verona.migration;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Handler;
+import android.support.annotation.NonNull;
+import android.text.TextUtils;
+import android.util.Log;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.C;
+import com.google.android.exoplayer2.DefaultLoadControl;
+import com.google.android.exoplayer2.ExoPlaybackException;
+import com.google.android.exoplayer2.ExoPlayer;
+import com.google.android.exoplayer2.ExoPlayerFactory;
+import com.google.android.exoplayer2.SimpleExoPlayer;
+import com.google.android.exoplayer2.Timeline;
+import com.google.android.exoplayer2.demo.EventLogger;
+import com.google.android.exoplayer2.demo.R;
+import com.google.android.exoplayer2.drm.DrmSessionManager;
+import com.google.android.exoplayer2.drm.FrameworkMediaDrm;
+import com.google.android.exoplayer2.drm.HttpMediaDrmCallback;
+import com.google.android.exoplayer2.drm.StreamingDrmSessionManager;
+import com.google.android.exoplayer2.drm.UnsupportedDrmException;
+import com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
+import com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException;
+import com.google.android.exoplayer2.mediacodec.MediaCodecUtil.DecoderQueryException;
+import com.google.android.exoplayer2.source.ConcatenatingMediaSource;
+import com.google.android.exoplayer2.source.ExtractorMediaSource;
+import com.google.android.exoplayer2.source.MediaSource;
+import com.google.android.exoplayer2.source.TrackGroupArray;
+import com.google.android.exoplayer2.source.dash.DashMediaSource;
+import com.google.android.exoplayer2.source.dash.DefaultDashChunkSource;
+import com.google.android.exoplayer2.source.hls.HlsMediaSource;
+import com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource;
+import com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
+import com.google.android.exoplayer2.trackselection.AdaptiveVideoTrackSelection;
+import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
+import com.google.android.exoplayer2.trackselection.MappingTrackSelector;
+import com.google.android.exoplayer2.trackselection.MappingTrackSelector.TrackInfo;
+import com.google.android.exoplayer2.trackselection.TrackSelection;
+import com.google.android.exoplayer2.ui.PlaybackControlView;
+import com.google.android.exoplayer2.ui.SimpleExoPlayerView;
+import com.google.android.exoplayer2.upstream.DataSource;
+import com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
+import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
+import com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory;
+import com.google.android.exoplayer2.upstream.HttpDataSource;
+import com.google.android.exoplayer2.util.Util;
+
+import java.net.CookieHandler;
+import java.net.CookieManager;
+import java.net.CookiePolicy;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.UUID;
+
+import br.rnp.futebol.verona.pojo.TExperiment;
+
+/**
+ * An activity that plays media using {@link SimpleExoPlayer}.
+ */
+public class PlayerActivityWithMigration extends Activity implements OnClickListener, ExoPlayer.EventListener,
+        MappingTrackSelector.EventListener, PlaybackControlView.VisibilityListener {
+
+    public static final String DRM_SCHEME_UUID_EXTRA = "drm_scheme_uuid";
+    public static final String DRM_LICENSE_URL = "drm_license_url";
+    public static final String DRM_KEY_REQUEST_PROPERTIES = "drm_key_request_properties";
+    public static final String PREFER_EXTENSION_DECODERS = "prefer_extension_decoders";
+
+    public static final String ACTION_VIEW = "com.google.android.exoplayer.demo.action.VIEW";
+    public static final String EXTENSION_EXTRA = "extension";
+
+    public static final String ACTION_VIEW_LIST =
+            "com.google.android.exoplayer.demo.action.VIEW_LIST";
+    public static final String URI_LIST_EXTRA = "uri_list";
+    public static final String EXTENSION_LIST_EXTRA = "extension_list";
+    private static final String LOG_MIG = "LOG_VIDEO_MIG";
+
+    private static final DefaultBandwidthMeter BANDWIDTH_METER = new DefaultBandwidthMeter();
+    private static final CookieManager DEFAULT_COOKIE_MANAGER;
+
+    static {
+        DEFAULT_COOKIE_MANAGER = new CookieManager();
+        DEFAULT_COOKIE_MANAGER.setCookiePolicy(CookiePolicy.ACCEPT_ORIGINAL_SERVER);
+    }
+
+    private Handler mainHandler;
+    private EventLogger eventLogger;
+    private SimpleExoPlayerView simpleExoPlayerView;
+    //    private LinearLayout debugRootView;
+    private TextView debugTextView;
+//    private Button retryButton;
+
+    private String userAgent;
+    private DataSource.Factory mediaDataSourceFactory;
+    private SimpleExoPlayer player;
+    private MappingTrackSelector trackSelector;
+    //    private TrackSelectionHelper trackSelectionHelper;
+    private VOPlayerHelperForMigration debugViewHelper;
+    private boolean playerNeedsSource;
+
+    private boolean shouldAutoPlay;
+    private boolean shouldRestorePosition;
+    private int playerWindow;
+    private long playerPosition;
+
+    // Activity lifecycle
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        Log.i("passed", "PASSOUNOONCREATE");
+        Log.i("BNDWTH1", BANDWIDTH_METER.toLog());
+        BANDWIDTH_METER.setBitrateEstimate(-1);
+        Log.i("BNDWTH11", BANDWIDTH_METER.toLog());
+        shouldAutoPlay = true;
+        userAgent = Util.getUserAgent(this, "ExoPlayerDemo");
+        mediaDataSourceFactory = buildDataSourceFactory(true);
+        mainHandler = new Handler();
+        if (CookieHandler.getDefault() != DEFAULT_COOKIE_MANAGER) {
+            CookieHandler.setDefault(DEFAULT_COOKIE_MANAGER);
+        }
+
+        setContentView(R.layout.player_activity);
+        View rootView = findViewById(R.id.root);
+        rootView.setOnClickListener(this);
+//        debugRootView = (LinearLayout) findViewById(R.id.controls_root);
+        debugTextView = (TextView) findViewById(R.id.debug_text_view);
+//        retryButton = (Button) findViewById(R.id.retry_button);
+//        retryButton.setOnClickListener(this);
+
+        simpleExoPlayerView = (SimpleExoPlayerView) findViewById(R.id.player_view);
+        simpleExoPlayerView.setControllerVisibilityListener(this);
+        simpleExoPlayerView.requestFocus();
+    }
+
+    @Override
+    public void onNewIntent(Intent intent) {
+        Log.i("passed", "PASSOUNOONNEWINTENT");
+        releasePlayer();
+        shouldRestorePosition = false;
+        setIntent(intent);
+    }
+
+    @Override
+    public void onStart() {
+        Log.i("passed", "PASSOUNOONSTART");
+        super.onStart();
+        if (Util.SDK_INT > 23) {
+            initializePlayer();
+        }
+    }
+
+    @Override
+    public void onResume() {
+        Log.i("passed", "PASSOUNOONRESUME");
+        BANDWIDTH_METER.setBitrateEstimate(-1);
+        super.onResume();
+        if ((Util.SDK_INT <= 23 || player == null)) {
+            initializePlayer();
+        }
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        if (Util.SDK_INT <= 23) {
+            releasePlayer();
+        }
+    }
+
+    @Override
+    public void onStop() {
+        super.onStop();
+        if (Util.SDK_INT > 23) {
+            releasePlayer();
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
+                                           @NonNull int[] grantResults) {
+        if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            initializePlayer();
+        } else {
+            showToast(R.string.storage_permission_denied);
+            finish();
+        }
+    }
+
+    // OnClickListener methods
+
+    @Override
+    public void onClick(View view) {
+//        if (view == retryButton) {
+//            initializePlayer();
+//        } else if (view.getParent() == debugRootView) {
+//            trackSelectionHelper.showSelectionDialog(this, ((Button) view).getText(),
+//                    trackSelector.getTrackInfo(), (int) view.getTag());
+//        }
+    }
+
+    // PlaybackControlView.VisibilityListener implementation
+
+    @Override
+    public void onVisibilityChange(int visibility) {
+//        debugRootView.setVisibility(visibility);
+    }
+
+    // Internal methods
+
+    private void initializePlayer() {
+        Intent intent = getIntent();
+        TExperiment experiment = null;
+        int index = -1, loop = -1;
+        boolean migDuringVideo = false, downStream = true;
+        if (intent.getExtras() != null) {
+            experiment = (TExperiment) intent.getExtras().getSerializable("experiment");
+            index = intent.getExtras().getInt("index");
+            loop = intent.getExtras().getInt("loop", 1);
+            migDuringVideo = intent.getExtras().getBoolean("mig", false);
+            downStream = intent.getExtras().getBoolean("downstream", true);
+        }
+        if (experiment != null && index != -1 && loop != -1) {
+            if (player == null) {
+                boolean preferExtensionDecoders = intent.getBooleanExtra(PREFER_EXTENSION_DECODERS, false);
+                UUID drmSchemeUuid = intent.hasExtra(DRM_SCHEME_UUID_EXTRA)
+                        ? UUID.fromString(intent.getStringExtra(DRM_SCHEME_UUID_EXTRA)) : null;
+                DrmSessionManager drmSessionManager = null;
+                if (drmSchemeUuid != null) {
+                    String drmLicenseUrl = intent.getStringExtra(DRM_LICENSE_URL);
+                    String[] keyRequestPropertiesArray = intent.getStringArrayExtra(DRM_KEY_REQUEST_PROPERTIES);
+                    Map<String, String> keyRequestProperties;
+                    if (keyRequestPropertiesArray == null || keyRequestPropertiesArray.length < 2) {
+                        keyRequestProperties = null;
+                    } else {
+                        keyRequestProperties = new HashMap<>();
+                        for (int i = 0; i < keyRequestPropertiesArray.length - 1; i += 2) {
+                            keyRequestProperties.put(keyRequestPropertiesArray[i],
+                                    keyRequestPropertiesArray[i + 1]);
+                        }
+                    }
+                    try {
+                        drmSessionManager = buildDrmSessionManager(drmSchemeUuid, drmLicenseUrl,
+                                keyRequestProperties);
+                    } catch (UnsupportedDrmException e) {
+                        int errorStringId = Util.SDK_INT < 18 ? R.string.error_drm_not_supported
+                                : (e.reason == UnsupportedDrmException.REASON_UNSUPPORTED_SCHEME
+                                ? R.string.error_drm_unsupported_scheme : R.string.error_drm_unknown);
+                        showToast(errorStringId);
+                        return;
+                    }
+                }
+
+                eventLogger = new EventLogger();
+                Log.i("BNDWTH2", BANDWIDTH_METER.toLog());
+                TrackSelection.Factory videoTrackSelectionFactory =
+                        new AdaptiveVideoTrackSelection.Factory(BANDWIDTH_METER);
+                trackSelector = new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);
+                trackSelector.addListener(this);
+                trackSelector.addListener(eventLogger);
+//                trackSelectionHelper = new TrackSelectionHelper(trackSelector, videoTrackSelectionFactory);
+                player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, new DefaultLoadControl(),
+                        drmSessionManager, preferExtensionDecoders);
+                player.addListener(this);
+                player.addListener(eventLogger);
+                player.setAudioDebugListener(eventLogger);
+                player.setVideoDebugListener(eventLogger);
+                player.setId3Output(eventLogger);
+                simpleExoPlayerView.setPlayer(player);
+                if (shouldRestorePosition) {
+                    if (playerPosition == C.TIME_UNSET) {
+                        player.seekToDefaultPosition(playerWindow);
+                    } else {
+                        player.seekTo(playerWindow, playerPosition);
+                    }
+                }
+                player.setPlayWhenReady(shouldAutoPlay);
+                debugViewHelper = new VOPlayerHelperForMigration(player, debugTextView, experiment, this, loop, migDuringVideo, downStream);
+                debugViewHelper.start();
+                playerNeedsSource = true;
+            }
+            if (playerNeedsSource) {
+                String action = intent.getAction();
+                Uri[] uris;
+                String[] extensions;
+                if (ACTION_VIEW.equals(action)) {
+                    uris = new Uri[]{intent.getData()};
+                    extensions = new String[]{intent.getStringExtra(EXTENSION_EXTRA)};
+                } else if (ACTION_VIEW_LIST.equals(action)) {
+                    String[] uriStrings = intent.getStringArrayExtra(URI_LIST_EXTRA);
+                    uris = new Uri[uriStrings.length];
+                    for (int i = 0; i < uriStrings.length; i++) {
+                        uris[i] = Uri.parse(uriStrings[i]);
+                    }
+                    simpleExoPlayerView.getPlaybackController().useCC(false);
+                    extensions = intent.getStringArrayExtra(EXTENSION_LIST_EXTRA);
+                    if (extensions == null) {
+                        extensions = new String[uriStrings.length];
+                    }
+                } else {
+                    showToast(getString(R.string.unexpected_intent_action, action));
+                    return;
+                }
+                if (Util.maybeRequestReadExternalStoragePermission(this, uris)) {
+                    // The player will be reinitialized if the permission is granted.
+                    return;
+                }
+                MediaSource[] mediaSources = new MediaSource[uris.length];
+                for (int i = 0; i < uris.length; i++) {
+                    mediaSources[i] = buildMediaSource(uris[i], extensions[i]);
+                }
+                MediaSource mediaSource = mediaSources.length == 1 ? mediaSources[0]
+                        : new ConcatenatingMediaSource(mediaSources);
+                player.prepare(mediaSource, !shouldRestorePosition);
+                playerNeedsSource = false;
+                updateButtonVisibilities();
+            }
+        } else {
+            Toast.makeText(getBaseContext(), "Couldn't display video", Toast.LENGTH_SHORT).show();
+            finish();
+        }
+    }
+
+    @SuppressWarnings("unused")
+    private void log(String msg) {
+        Log.i(LOG_MIG, msg);
+    }
+
+    private MediaSource buildMediaSource(Uri uri, String overrideExtension) {
+        int type = Util.inferContentType(!TextUtils.isEmpty(overrideExtension) ? "." + overrideExtension
+                : uri.getLastPathSegment());
+        switch (type) {
+            case Util.TYPE_SS:
+                return new SsMediaSource(uri, buildDataSourceFactory(false),
+                        new DefaultSsChunkSource.Factory(mediaDataSourceFactory), mainHandler, eventLogger);
+            case Util.TYPE_DASH:
+                return new DashMediaSource(uri, buildDataSourceFactory(false),
+                        new DefaultDashChunkSource.Factory(mediaDataSourceFactory), mainHandler, eventLogger);
+            case Util.TYPE_HLS:
+                return new HlsMediaSource(uri, mediaDataSourceFactory, mainHandler, eventLogger);
+            case Util.TYPE_OTHER:
+                return new ExtractorMediaSource(uri, mediaDataSourceFactory, new DefaultExtractorsFactory(),
+                        mainHandler, eventLogger);
+            default: {
+                throw new IllegalStateException("Unsupported type: " + type);
+            }
+        }
+    }
+
+    private DrmSessionManager buildDrmSessionManager(UUID uuid, String licenseUrl,
+                                                     Map<String, String> keyRequestProperties)
+            throws UnsupportedDrmException {
+        if (Util.SDK_INT < 18) {
+            return null;
+        }
+        HttpMediaDrmCallback drmCallback = new HttpMediaDrmCallback(licenseUrl,
+                buildHttpDataSourceFactory(false), keyRequestProperties);
+        return new StreamingDrmSessionManager<>(uuid,
+                FrameworkMediaDrm.newInstance(uuid), drmCallback, null, mainHandler, eventLogger);
+    }
+
+    public void releasePlayer() {
+        if (player != null) {
+            debugViewHelper.stop();
+            debugViewHelper = null;
+            shouldAutoPlay = player.getPlayWhenReady();
+            shouldRestorePosition = false;
+            Timeline timeline = player.getCurrentTimeline();
+            if (timeline != null) {
+                playerWindow = player.getCurrentWindowIndex();
+                Timeline.Window window = timeline.getWindow(playerWindow, new Timeline.Window());
+                if (!window.isDynamic) {
+                    shouldRestorePosition = true;
+                    playerPosition = window.isSeekable ? player.getCurrentPosition() : C.TIME_UNSET;
+                }
+            }
+            player.release();
+            player = null;
+            trackSelector = null;
+//            trackSelectionHelper = null;
+            eventLogger = null;
+        }
+    }
+
+    /**
+     * Returns a new DataSource factory.
+     *
+     * @param useBandwidthMeter Whether to set {@link #BANDWIDTH_METER} as a listener to the new
+     *                          DataSource factory.
+     * @return A new DataSource factory.
+     */
+    private DataSource.Factory buildDataSourceFactory(boolean useBandwidthMeter) {
+        Log.i("BNDWTH3", BANDWIDTH_METER.toLog() + " " + useBandwidthMeter);
+        return new DefaultDataSourceFactory(this, useBandwidthMeter ? BANDWIDTH_METER : null,
+                buildHttpDataSourceFactory(useBandwidthMeter));
+    }
+
+    /**
+     * Returns a new HttpDataSource factory.
+     *
+     * @param useBandwidthMeter Whether to set {@link #BANDWIDTH_METER} as a listener to the new
+     *                          DataSource factory.
+     * @return A new HttpDataSource factory.
+     */
+    private HttpDataSource.Factory buildHttpDataSourceFactory(boolean useBandwidthMeter) {
+        Log.i("BNDWTH3", BANDWIDTH_METER.toLog() + " " + useBandwidthMeter);
+        return new DefaultHttpDataSourceFactory(userAgent, useBandwidthMeter ? BANDWIDTH_METER : null);
+    }
+
+    // ExoPlayer.EventListener implementation
+
+    @Override
+    public void onLoadingChanged(boolean isLoading) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
+        if (playbackState == ExoPlayer.STATE_ENDED) {
+            showControls();
+        }
+        updateButtonVisibilities();
+    }
+
+    @Override
+    public void onPositionDiscontinuity() {
+        // Do nothing.
+    }
+
+    @Override
+    public void onTimelineChanged(Timeline timeline, Object manifest) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerError(ExoPlaybackException e) {
+        String errorString = null;
+        if (e.type == ExoPlaybackException.TYPE_RENDERER) {
+            Exception cause = e.getRendererException();
+            if (cause instanceof DecoderInitializationException) {
+                // Special case for decoder initialization failures.
+                DecoderInitializationException decoderInitializationException =
+                        (DecoderInitializationException) cause;
+                if (decoderInitializationException.decoderName == null) {
+                    if (decoderInitializationException.getCause() instanceof DecoderQueryException) {
+                        errorString = getString(R.string.error_querying_decoders);
+                    } else if (decoderInitializationException.secureDecoderRequired) {
+                        errorString = getString(R.string.error_no_secure_decoder,
+                                decoderInitializationException.mimeType);
+                    } else {
+                        errorString = getString(R.string.error_no_decoder,
+                                decoderInitializationException.mimeType);
+                    }
+                } else {
+                    errorString = getString(R.string.error_instantiating_decoder,
+                            decoderInitializationException.decoderName);
+                }
+            }
+        }
+        if (errorString != null) {
+            showToast(errorString);
+        }
+        playerNeedsSource = true;
+        updateButtonVisibilities();
+        showControls();
+    }
+
+    // MappingTrackSelector.EventListener implementation
+
+    @Override
+    public void onTracksChanged(TrackInfo trackInfo) {
+        updateButtonVisibilities();
+        if (trackInfo.hasOnlyUnplayableTracks(C.TRACK_TYPE_VIDEO)) {
+            showToast(R.string.error_unsupported_video);
+        }
+        if (trackInfo.hasOnlyUnplayableTracks(C.TRACK_TYPE_AUDIO)) {
+            showToast(R.string.error_unsupported_audio);
+        }
+    }
+
+    // User controls
+
+    private void updateButtonVisibilities() {
+//        debugRootView.removeAllViews();
+
+//        retryButton.setVisibility(playerNeedsSource ? View.VISIBLE : View.GONE);
+//        debugRootView.addView(retryButton);
+
+        if (player == null) {
+            return;
+        }
+
+        TrackInfo trackInfo = trackSelector.getTrackInfo();
+        if (trackInfo == null) {
+            return;
+        }
+
+        int rendererCount = trackInfo.rendererCount;
+        for (int i = 0; i < rendererCount; i++) {
+            TrackGroupArray trackGroups = trackInfo.getTrackGroups(i);
+            if (trackGroups.length != 0) {
+                Button button = new Button(this);
+                int label;
+                switch (player.getRendererType(i)) {
+                    case C.TRACK_TYPE_AUDIO:
+                        label = R.string.audio;
+                        break;
+                    case C.TRACK_TYPE_VIDEO:
+                        label = R.string.video;
+                        break;
+                    case C.TRACK_TYPE_TEXT:
+                        label = R.string.text;
+                        break;
+                    default:
+                        continue;
+                }
+                button.setText(label);
+                button.setTag(i);
+                button.setOnClickListener(this);
+//                debugRootView.addView(button);
+            }
+        }
+    }
+
+    private void showControls() {
+//        debugRootView.setVisibility(View.VISIBLE);
+    }
+
+    private void showToast(int messageId) {
+        showToast(getString(messageId));
+    }
+
+    private void showToast(String message) {
+        Toast.makeText(getApplicationContext(), message, Toast.LENGTH_LONG).show();
+    }
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/verona/migration/VOPlayerHelperForMigration.java b/demo/src/main/java/br/rnp/futebol/verona/migration/VOPlayerHelperForMigration.java
new file mode 100644
index 0000000000..b869bdadd8
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/migration/VOPlayerHelperForMigration.java
@@ -0,0 +1,752 @@
+package br.rnp.futebol.verona.migration;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Environment;
+import android.util.Log;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.android.volley.Response;
+import com.google.android.exoplayer2.ExoPlaybackException;
+import com.google.android.exoplayer2.ExoPlayer;
+import com.google.android.exoplayer2.Format;
+import com.google.android.exoplayer2.SimpleExoPlayer;
+import com.google.android.exoplayer2.Timeline;
+import com.google.android.exoplayer2.decoder.DecoderCounters;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.math.BigDecimal;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Locale;
+import java.util.concurrent.TimeUnit;
+
+import br.rnp.futebol.verona.OWAMP.OWAMP;
+import br.rnp.futebol.verona.OWAMP.OWAMPArguments;
+import br.rnp.futebol.verona.OWAMP.OWAMPResult;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.VolleyRequest;
+import br.rnp.futebol.verona.visual.activity.MainActivity;
+
+
+/**
+ * A helper class for periodically updating a {@link TextView} with debug information obtained from
+ * a {@link SimpleExoPlayer}.
+ */
+public final class VOPlayerHelperForMigration implements Runnable, ExoPlayer.EventListener {
+
+    private int rttCont = 0, received = 0, sent = 0, isFrozen = 0, stallAux, prov;
+    private final String[] PARAMETERS = {"loop", "index", "experiment", "userInfo"};
+    private boolean started, isPstFilled, mig3to2, mig2to1;
+    private boolean first = true, showedQuestion = false;
+    private static final int REFRESH_INTERVAL_MS = 1000;
+    private long playbackStartTime, bufferingStartAux;
+    private int bitrateAux = 0, bseCont = 0, loop;
+    private final SimpleExoPlayer player;
+    private String initialRes, initialBR;
+    private final TextView textView;
+    private TExperiment experiment;
+    private float rttTotal = 0;
+    private Context ctx;
+
+    private int LOOP_PER_TIER = 1;
+    private long TIME_TO_MIG[] = {0, 0};
+    private boolean migDuringVideo, bugged, isMigrating, downStream, submisse;
+    private static final int CLOUD = 3, FOG = 2, AP = 1;
+
+    /**
+     * @param player   The {@link SimpleExoPlayer} from which debug information should be obtained.
+     * @param textView The {@link TextView} that should be updated to display the information.
+     */
+    public VOPlayerHelperForMigration(SimpleExoPlayer player, TextView textView, TExperiment experiment, Context ctx, int loop, boolean migDuringVideo, boolean downStream) {
+        this.player = player;
+        this.textView = textView;
+        this.experiment = experiment;
+        this.ctx = ctx;
+        this.loop = loop;
+        this.bugged = false;
+        this.migDuringVideo = migDuringVideo;
+        this.downStream = downStream;
+        this.submisse = true;
+        if (experiment != null && experiment.getScripts() != null
+                && !experiment.getScripts().isEmpty())
+            this.LOOP_PER_TIER = experiment.getScripts().get(0).getLoop();
+
+        if (!migDuringVideo)
+            getProvName();
+        else
+            prov = downStream ? CLOUD : AP;
+        if (downStream) {
+            TIME_TO_MIG[0] = 15000;
+            TIME_TO_MIG[1] = 360000;
+        } else {
+            TIME_TO_MIG[0] = 85000;
+            TIME_TO_MIG[1] = 290000;
+        }
+    }
+
+//    private void setProvNum() {
+//        if (loop > LOOP_PER_TIER)
+//            prov = FOG;
+//        if (loop > (LOOP_PER_TIER * 2))
+//            prov = AP;
+//    }
+
+    /**
+     * Starts periodic updates of the {@link TextView}. Must be called from the application's main
+     * thread.
+     */
+    public void start() {
+        if (started) {
+            return;
+        }
+        started = true;
+        player.addListener(this);
+        updateAndPost();
+    }
+
+    /**
+     * Stops periodic updates of the {@link TextView}. Must be called from the application's main
+     * thread.
+     */
+    public void stop() {
+        if (!started) {
+            return;
+        }
+        started = false;
+        player.removeListener(this);
+        textView.removeCallbacks(this);
+    }
+
+    // ExoPlayer.EventListener implementation.
+
+    @Override
+    public void onLoadingChanged(boolean isLoading) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
+        if (playbackState == ExoPlayer.STATE_BUFFERING && playWhenReady) {
+            bufferingStartAux = Calendar.getInstance().getTimeInMillis();
+//            stallAux = player.getStalls();
+            if (isPstFilled) {
+                isFrozen = 1;
+                player.increaseStalls();
+            }
+        } else if (playbackState == ExoPlayer.STATE_READY && playWhenReady) {
+            long bufferingEndAux = Calendar.getInstance().getTimeInMillis();
+            if (isPstFilled) {
+                if (stallAux != playbackState) {
+                    isFrozen = 0;
+                    player.setStallsDuration(bufferingEndAux - bufferingStartAux);
+                }
+            } else {
+                playbackStartTime = bufferingEndAux - bufferingStartAux;
+                isPstFilled = true;
+            }
+        }
+        stallAux = playbackState;
+        updateAndPost();
+    }
+
+    @Override
+    public void onPositionDiscontinuity() {
+        updateAndPost();
+    }
+
+    @Override
+    public void onTimelineChanged(Timeline timeline, Object manifest) {
+        // Do nothing.
+    }
+
+    @Override
+    public void onPlayerError(ExoPlaybackException error) {
+        // Do nothing.
+    }
+
+    // Runnable implementation.
+
+    @Override
+    public void run() {
+        updateAndPost();
+    }
+
+    private String getProvName() {
+        return getProvName(prov);
+    }
+
+    private String getProvName(int prov) {
+        whereis();
+        switch (prov) {
+            case AP:
+                return "AP";
+            case FOG:
+                return "Fog";
+            case CLOUD:
+                return "Cloud";
+        }
+        return "None";
+    }
+
+    private void updateAndPost() {
+        final TScript script = experiment.getScripts().get(0);
+
+        if (migDuringVideo)
+            if (player.getCurrentPosition() > TIME_TO_MIG[0] && !mig3to2) {
+                if (downStream)
+                    migrate(CLOUD, FOG, true);
+                else
+                    migrate(AP, FOG, true);
+                mig3to2 = true;
+            } else if (player.getCurrentPosition() > TIME_TO_MIG[1] && !mig2to1) {
+                if (downStream)
+                    migrate(FOG, AP, true);
+                else
+                    migrate(FOG, CLOUD, true);
+                mig2to1 = true;
+            }
+
+        if (player.getCurrentPosition() > (player.getDuration() - 1500))
+            bugged = true;
+
+        if (!(player.getPlaybackState() == ExoPlayer.STATE_ENDED) && !bugged) {
+            Log.i("PHS", "running");
+            textView.setText(getLogString());
+            String provAux = script.getAddress();
+            OWAMPResult rtt = null;
+            if (provAux != null) {
+                rtt = measureRTT(provAux);
+                if (rtt == null) {
+                    provAux = provAux.substring(provAux.indexOf("//") + 2, provAux.length());
+                    rtt = measureRTT(provAux);
+                    if (rtt == null) {
+                        if (provAux.contains("/"))
+                            provAux = provAux.substring(0, provAux.indexOf("/"));
+                        if (provAux.contains(":"))
+                            provAux = provAux.substring(0, provAux.indexOf(":"));
+                        rtt = measureRTT(provAux);
+                    }
+                }
+            }
+
+            writeHeader(3);
+            writeHeader(2);
+            Format format = player.getVideoFormat();
+
+            if (rtt != null) {
+                Log.i("RTTX", rtt.getRtt_avg() + "");
+                rttTotal += round(rtt.getRtt_avg(), 2);
+                rttCont++;
+                received += rtt.getReceived();
+                sent += rtt.getTransmitted();
+                if (format != null) {
+                    String txt = loop + "," + (player.getCurrentPosition() / 1000) + "," + round(rtt.getRtt_avg(), 2)
+                            + "," + (100 - (100 * rtt.getReceived() / rtt.getTransmitted())) + "," + isFrozen + ","
+                            + format.bitrate + "," + format.width + "x" + format.height + "," + getProvName()
+                            + "," + isMigrating;
+                    Log.i("txtxt", txt);
+                    writePerSecond(txt);
+                }
+            } else {
+                if (format != null) {
+                    String txt = loop + "," + player.getCurrentPosition() / 1000 + ",,," + isFrozen + ","
+                            + format.bitrate + "," + format.width + "x" + format.height + "," + getProvName()
+                            + "," + isMigrating;
+                    Log.i("txtxt", txt);
+                    writePerSecond(txt);
+                }
+            }
+
+            textView.removeCallbacks(this);
+            textView.postDelayed(this, REFRESH_INTERVAL_MS);
+
+        } else {
+            writeHeader(1);
+            Log.i("PHS", "finished");
+            if (!showedQuestion) {
+                showedQuestion = true;
+                write(buildCsvText().concat(appendDot(3)));
+                if (!migDuringVideo) {
+                    if (loop == LOOP_PER_TIER || loop == LOOP_PER_TIER * 2) {
+                        if (loop == LOOP_PER_TIER)
+                            if (!submisse)
+                                migrate(CLOUD, FOG, true, script);
+                            else
+                                while (prov != FOG) {
+                                    try {
+                                        whereis();
+                                        TimeUnit.SECONDS.sleep(3);
+                                        Log.i("esperando", getProvName() + " / " + prov);
+                                    } catch (Exception e) {
+                                        Log.i("esperando", e.getMessage());
+                                    }
+                                }
+                        else {
+                            if (!submisse)
+                                migrate(FOG, AP, true, script);
+                            else
+                                while (prov != AP) {
+                                    try {
+                                        TimeUnit.SECONDS.sleep(3);
+                                        Log.i("esperando", getProvName());
+                                    } catch (Exception e) {
+                                        Log.i("esperando", e.getMessage());
+                                    }
+                                }
+                        }
+                    } else
+                        nextLoop(script);
+                } else {
+                    if (downStream)
+                        migrate(AP, CLOUD, true, script);
+                    else
+                        migrate(CLOUD, AP, true, script);
+                }
+            }
+        }
+    }
+
+    private float round(float d, int decimalPlace) {
+        BigDecimal bd = new BigDecimal(Float.toString(d));
+        bd = bd.setScale(decimalPlace, BigDecimal.ROUND_DOWN);
+        return bd.floatValue();
+    }
+
+    public void deleteCache(Context context) {
+        try {
+            File dir = context.getCacheDir();
+            if (dir != null && dir.isDirectory()) {
+                deleteDir(dir);
+            }
+        } catch (Exception e) {
+            Log.i("error", e.getMessage());
+        }
+    }
+
+    @SuppressWarnings("unused")
+    private void writeHeader(int code) {
+        String sufix = "", header = "";
+        switch (code) {
+            case 1:
+                sufix = ".csv";
+//                header = getHeader();
+                break;
+            case 2:
+                sufix = "_mig.csv";
+//                header = getMigHeader();
+                break;
+            case 3:
+                sufix = "_sbs.csv";
+//                header = getHeaderSBS();
+                break;
+        }
+        String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat(sufix));
+        File fHeader = new File(csv);
+//        if (!fHeader.exists() && !header.equals(""))
+//            write(header);
+    }
+
+    public boolean deleteDir(File dir) {
+        if (dir != null && dir.isDirectory()) {
+            String[] children = dir.list();
+            for (String s : children) {
+                boolean success = deleteDir(new File(dir, s));
+                if (!success)
+                    return false;
+            }
+        }
+        return dir != null && dir.delete();
+    }
+
+    private String appendDot(int num) {
+        String s = "";
+        for (int i = 0; i < num; i++)
+            s = s.concat(", ");
+        return s;
+    }
+
+    private void nextLoop(TScript script) {
+        if ((!migDuringVideo ? script.getLoop() * 3 : script.getLoop()) - loop > 0) {
+            loop++;
+        } else {
+//            migrate(AP, CLOUD, true, script);
+            makeOverDialog();
+            return;
+        }
+        Toast.makeText(ctx, "Starting next video", Toast.LENGTH_SHORT).show();
+        try {
+            deleteCache(ctx);
+        } catch (Exception e) {
+            Log.i("error", e.getMessage());
+        }
+
+        Bundle extras = new Bundle();
+        extras.putInt(PARAMETERS[0], loop);
+        extras.putSerializable(PARAMETERS[2], experiment);
+        extras.putBoolean("mig", migDuringVideo);
+        extras.putBoolean("downstream", downStream);
+
+        Intent intent = new Intent(ctx, PlayerActivityWithMigration.class);
+        intent.putExtras(extras);
+        String provider = experiment.getScripts().get(0).getProvider();
+        intent.setData(Uri.parse(provider));
+        intent.setAction(PlayerActivityWithMigration.ACTION_VIEW);
+
+        ctx.startActivity(intent);
+    }
+
+    private void migrate(final int src, final int dest, final boolean write) {
+        migrate(src, dest, write, null);
+    }
+
+    private void migrate(final int src, final int dest, final boolean write, final TScript script) {
+        isMigrating = true;
+        VolleyRequest request = new VolleyRequest(ctx);
+        final long begin = player.getCurrentPosition();
+        request.getJSON("http://192.168.0.1:8080/migrate/" + src + "/" + dest, new Response.Listener<String>() {
+            @Override
+            public void onResponse(String response) {
+                try {
+                    isMigrating = false;
+                    prov = dest;
+                    JSONObject json = new JSONObject(response);
+                    if (json.has("success") && json.has("duration") && write)
+                        writePerMigration(json.getString("success").concat(",")
+                                .concat(begin + "").concat(",").concat(json.getString("duration"))
+                                .concat(",").concat(getProvName(src)).concat(",").concat(getProvName(dest)));
+                    if (script != null)
+                        nextLoop(script);
+                } catch (JSONException e) {
+                    Log.i("Migrate", e.getMessage());
+                }
+            }
+        });
+    }
+
+    private void whereis() {
+        VolleyRequest request = new VolleyRequest(ctx);
+        request.getJSON("http://192.168.0.1:8080/whereis", new Response.Listener<String>() {
+            @Override
+            public void onResponse(String response) {
+                try {
+                    if (response != null) {
+                        JSONObject json = new JSONObject(response);
+                        prov = json.getInt("vm");
+                        Log.i("esperando", prov+"");
+                    }
+                } catch (JSONException e) {
+                    Log.i("Migrate", e.getMessage());
+                }
+            }
+        });
+    }
+
+//    private void helper() {
+//        isMigrating = true;
+//        VolleyRequest request = new VolleyRequest(ctx);
+//        request.getJSON("http://192.168.0.1:8080/whereis", new Response.Listener<String>() {
+//            @Override
+//            public void onResponse(String response) {
+//                try {
+//                    int aux = 0;
+//                    isMigrating = false;
+//                    if (response != null) {
+//                        JSONObject json = new JSONObject(response);
+//                        aux = json.getInt("vm");
+//                    }
+//                    if (aux != 0 && aux != 3)
+//                        migrate(aux, 3, false);
+//                } catch (JSONException e) {
+//                    Log.i("Migrate", e.getMessage());
+//                }
+//            }
+//        });
+//    }
+
+    private String buildCsvText() {
+        ArrayList<Integer> metrics = experiment.getObjectiveQoeMetrics();
+        Format format = player.getVideoFormat();
+        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy-HH:mm:ss", Locale.US);
+        String txt = loop + "," + sdf.format(new Date());
+        txt += "," + player.getStalls();
+        if (metrics.contains(7))
+            txt += "," + player.getStallsDuration();
+        if (metrics.contains(8))
+            txt += "," + playbackStartTime;
+        if (metrics.contains(9))
+            txt += "," + initialRes + "," + format.width + "x" + format.height;
+        if (metrics.contains(10))
+            txt += "," + initialBR + "," + format.bitrate;
+        metrics = experiment.getQosMetrics();
+        if (metrics.contains(1))
+            txt += "," + (rttTotal / rttCont);
+        if (metrics.contains(2))
+            if (sent != 0)
+                txt += "," + (100 - ((received * 100) / sent)) + "%";
+            else
+                txt += ",";
+        txt += "";
+        return txt;
+    }
+
+    private String getLogString() {
+        String text = "";
+        text += "Player pos: " + player.getCurrentPosition() + "/" + player.getDuration() + "\n";
+        text += getStatusString();
+        text += getPlayerStateString();
+        text += getBufferProgress();
+        text += getVideoString();
+        text += getAudioString();
+        text += getStallsString();
+        text += "\nLoop: " + loop + "/" + (!migDuringVideo ? (experiment.getScripts().get(0).getLoop() * 3)
+                : experiment.getScripts().get(0).getLoop()) + " (" + getProvName() + ")" + (isMigrating ? " - MIGRATING " : "");
+        return text;
+    }
+
+    private String getPlayerStateString() {
+        String text = "\nPlayback State: ";
+        switch (player.getPlaybackState()) {
+            case ExoPlayer.STATE_BUFFERING:
+                text += "buffering";
+                break;
+            case ExoPlayer.STATE_ENDED:
+                text += "ended";
+                break;
+            case ExoPlayer.STATE_IDLE:
+                text += "idle";
+                break;
+            case ExoPlayer.STATE_READY:
+                text += "ready";
+                break;
+            default:
+                text += "unknown";
+                break;
+        }
+        return text;
+    }
+
+    @SuppressWarnings("unused")
+    private String getHeader() {
+        ArrayList<Integer> metrics = experiment.getObjectiveQoeMetrics();
+        String txt = "Repetition,Timestamp";
+        if (metrics.contains(6))
+            txt += ",Freezes";
+        if (metrics.contains(7))
+            txt += ",Freezes Duration";
+        if (metrics.contains(8))
+            txt += ",Playback Start Time";
+        if (metrics.contains(9))
+            txt += ",Initial Res,Final Res";
+        if (metrics.contains(10))
+            txt += ",Initial Bitrate,Final Bitrate";
+        metrics = experiment.getQosMetrics();
+        if (metrics.contains(1))
+            txt += ",Average RTT";
+        if (metrics.contains(2))
+            txt += ",Packet Loss";
+        return txt;
+    }
+
+    @SuppressWarnings("unused")
+    private String getHeaderSBS() {
+        return "Repetition,Position,RTT,Packet Loss,is Frozen,Bitrate,Resolution,Provider";
+    }
+
+    @SuppressWarnings("unused")
+    private String getMigHeader() {
+        return "Success,Position,Duration,From,To";
+    }
+
+    @SuppressWarnings("unused")
+    public AlertDialog makeCompleteDialog(String title, String message, String okt, String cancelt, Context ctx,
+                                          DialogInterface.OnClickListener ok, DialogInterface.OnClickListener cancel) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);
+        builder.setMessage(message);
+        builder.setTitle(title);
+        builder.setCancelable(false);
+        builder.setPositiveButton(okt, ok);
+        builder.setNegativeButton(cancelt, cancel);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    private OWAMPResult measureRTT(String ip) {
+        OWAMPArguments args = new OWAMPArguments.Builder().url(ip).timeout(5).count(1).bytes(32).build();
+        return OWAMP.ping(args, OWAMP.Backend.UNIX);
+    }
+
+    @SuppressWarnings("unused")
+    public AlertDialog makeDialog(String title, String message, Context myContext, DialogInterface.OnClickListener listener) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(myContext);
+        builder.setMessage(message);
+        builder.setCancelable(false);
+        builder.setTitle(title);
+        builder.setPositiveButton("OK", listener);
+        builder.setNegativeButton("Cancel", listener);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    public AlertDialog makeOverDialog() {
+        AlertDialog.Builder builder = new AlertDialog.Builder(ctx);
+        builder.setMessage("Thanks for participating.");
+        builder.setCancelable(false);
+        builder.setTitle("That's it!");
+        builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                ctx.startActivity(new Intent(ctx, MainActivity.class));
+//                ((PlayerActivity) ctx).finish();
+            }
+        });
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    private String getStallsString() {
+        String text = "\nFreezes: " + player.getStalls();
+        text += "\nFreezes Duration: " + player.getStallsDuration() + "ms";
+        text += "\nPlayback Start Time: " + playbackStartTime + "ms";
+        return text;
+    }
+
+    private String getStatusString() {
+        String status = ("Ready to Play: ");
+        status += (player.getPlayWhenReady());
+        status += ("\nIs Loading Content: ");
+        status += (player.isLoading());
+        return status;
+    }
+
+    private void write(String msg) {
+        try {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat(".csv"));
+            BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i("Error", e.getMessage());
+        }
+    }
+
+    private void writePerSecond(String msg) {
+        try {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat("_sbs.csv"));
+            BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i("Error", e.getMessage());
+        }
+    }
+
+    private void writePerMigration(String msg) {
+        try {
+//            this.writenBsb = written;
+
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat("_mig.csv"));
+            BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i("Error", e.getMessage());
+        }
+    }
+
+    private String getBufferProgress() {
+        String text = ("\nBuffer Progress: ");
+        text += ((player.getBufferedPosition()) / 1000) + ("s/");
+        text += (player.getDuration() / 1000) + ("s (");
+        text += (player.getBufferedPercentage()) + ("%)");
+        return text;
+    }
+
+    @SuppressWarnings("unused")
+    private String getPlayerWindowIndexString() {
+        String index = ("\nPeriod Index: ");
+        index += (player.getCurrentPeriodIndex());
+        return (index.concat("\nWindow Index: ").concat(player.getCurrentWindowIndex() + ""));
+    }
+
+    private String getVideoString() {
+        Format video = player.getVideoFormat();
+        if (video == null) {
+            return "";
+        }
+        if (first) {
+            initialBR = video.bitrate + "";
+            initialRes = video.width + "x" + video.height;
+            first = false;
+        }
+        if (bitrateAux == 0)
+            bitrateAux = video.bitrate;
+        if (bitrateAux != video.bitrate) {
+            bseCont++;
+            bitrateAux = video.bitrate;
+        }
+        String builder = "\nVideo Resolution: ";
+        builder += (video.width);
+        builder += ("x");
+        builder += (video.height);
+        builder += ("\nVideo bitrate: ");
+        builder += (video.bitrate);
+        builder += (" bits/s");
+        builder += ("\nVideo codecs: ");
+        builder += (video.codecs);
+        builder += ("\nBitrate switchs: ");
+        builder += (bseCont);
+//        builder += ("\nVideo framerate: ");
+//        builder += (video.frameRate);
+        return builder;
+
+//        return "\n" + format.sampleMimeType + "(id:" + format.id + " r:" + format.width + "x"
+//                + format.height + getDecoderCountersBufferCountString(player.getVideoDecoderCounters())
+//                + ")";
+    }
+
+    private String getAudioString() {
+        Format format = player.getAudioFormat();
+        if (format == null) {
+            return "";
+        }
+        return "\nAudio samplerate: ".concat(format.sampleRate + "");
+//        return "\n" + format.sampleMimeType + "(id:" + format.id + " hz:" + format.sampleRate + " ch:"
+//                + format.channelCount
+//                + getDecoderCountersBufferCountString(player.getAudioDecoderCounters()) + ")";
+    }
+
+    @SuppressWarnings("unused")
+    private String getDecoderCountersBufferCountString(String type, DecoderCounters counters) {
+        if (counters == null) {
+            return "";
+        }
+        counters.ensureUpdated();
+        return "\n" + type + " counters:\n"
+                + "rob:" + counters.renderedOutputBufferCount
+                + " sob:" + counters.skippedOutputBufferCount
+                + " dob:" + counters.droppedOutputBufferCount
+                + " mcdb:" + counters.maxConsecutiveDroppedOutputBufferCount;
+    }
+
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/BinaryQuestion.java b/demo/src/main/java/br/rnp/futebol/verona/pojo/BinaryQuestion.java
similarity index 95%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/BinaryQuestion.java
rename to demo/src/main/java/br/rnp/futebol/verona/pojo/BinaryQuestion.java
index a58409f23b..1af1678728 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/BinaryQuestion.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/pojo/BinaryQuestion.java
@@ -1,6 +1,5 @@
-package br.rnp.futebol.vocoliseu.pojo;
+package br.rnp.futebol.verona.pojo;
 
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
diff --git a/demo/src/main/java/br/rnp/futebol/verona/pojo/InfoHelper.java b/demo/src/main/java/br/rnp/futebol/verona/pojo/InfoHelper.java
new file mode 100644
index 0000000000..1b25dd19ab
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/pojo/InfoHelper.java
@@ -0,0 +1,89 @@
+package br.rnp.futebol.verona.pojo;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.Serializable;
+
+/**
+ * Created by camargo on 18/10/16.
+ */
+public class InfoHelper implements Serializable {
+
+    private boolean askAge, askGender, askCons, askFam;
+    private final String ATTRIBUTES[] = {"askAge", "askGender", "askCons", "askFam"};
+
+    public InfoHelper(boolean askAge, boolean askGender, boolean askCons, boolean askFam) {
+        this.askAge = askAge;
+        this.askGender = askGender;
+        this.askCons = askCons;
+        this.askFam = askFam;
+    }
+
+    public boolean hasInfo() {
+        return askAge || askGender || askCons || askFam;
+    }
+
+    public InfoHelper(){}
+
+    public boolean askAge() {
+        return askAge;
+    }
+
+    public void setAskAge(boolean askAge) {
+        this.askAge = askAge;
+    }
+
+    public boolean askGender() {
+        return askGender;
+    }
+
+    public void setAskGender(boolean askGender) {
+        this.askGender = askGender;
+    }
+
+    public boolean askCons() {
+        return askCons;
+    }
+
+    public void setAskCons(boolean askCons) {
+        this.askCons = askCons;
+    }
+
+    public boolean askFam() {
+        return askFam;
+    }
+
+    public void setAskFam(boolean askFam) {
+        this.askFam = askFam;
+    }
+
+    public JSONObject toJson() {
+        int cont = 0;
+        JSONObject json = new JSONObject();
+        try {
+            json.put(ATTRIBUTES[cont++], this.askAge);
+            json.put(ATTRIBUTES[cont++], this.askGender);
+            json.put(ATTRIBUTES[cont++], this.askCons);
+            json.put(ATTRIBUTES[cont], this.askFam);
+        } catch (JSONException e) {
+            json = null;
+        }
+        return json;
+    }
+
+    public InfoHelper fromJson(JSONObject json) {
+        int cont = 0;
+        try {
+            this.askAge = json.getBoolean(ATTRIBUTES[cont++]);
+            this.askGender = json.getBoolean(ATTRIBUTES[cont++]);
+            this.askCons = json.getBoolean(ATTRIBUTES[cont++]);
+            this.askFam = json.getBoolean(ATTRIBUTES[cont]);
+        } catch (JSONException e) {
+            return null;
+        }
+        return this;
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/Metric.java b/demo/src/main/java/br/rnp/futebol/verona/pojo/Metric.java
similarity index 73%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/Metric.java
rename to demo/src/main/java/br/rnp/futebol/verona/pojo/Metric.java
index 811254b96a..50079c8f16 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/Metric.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/pojo/Metric.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.pojo;
+package br.rnp.futebol.verona.pojo;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -9,18 +9,26 @@
 public class Metric {
 
     public static final int QOS = 1, S_QOE = 2, O_QOE = 3;
-    private String name;
+    private String name, description;
     private int id, type;
     private boolean used;
-    private final String ATTRIBUTES[] = {"id", "name", "type", "used"};
+    private final String ATTRIBUTES[] = {"id", "name", "type", "used", "description"};
 
     public Metric() {
     }
 
+    public Metric(int id, String name, int type, String description) {
+        this.name = name;
+        this.id = id;
+        this.type = type;
+        this.description = description;
+    }
+
     public Metric(int id, String name, int type) {
         this.name = name;
         this.id = id;
         this.type = type;
+        this.description = null;
     }
 
     public String getName() {
@@ -55,6 +63,14 @@ public void setUsed(boolean used) {
         this.used = used;
     }
 
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
     public JSONObject toJson() {
         int cont = 0;
         JSONObject json = new JSONObject();
@@ -62,7 +78,8 @@ public JSONObject toJson() {
             json.put(ATTRIBUTES[cont++], this.id);
             json.put(ATTRIBUTES[cont++], this.name);
             json.put(ATTRIBUTES[cont++], this.type);
-            json.put(ATTRIBUTES[cont], this.used);
+            json.put(ATTRIBUTES[cont++], this.used);
+            json.put(ATTRIBUTES[cont], this.description);
         } catch (JSONException e) {
             json = null;
         }
@@ -75,7 +92,8 @@ public Metric fromJson(JSONObject json) {
             this.id = json.getInt(ATTRIBUTES[cont++]);
             this.name = json.getString(ATTRIBUTES[cont++]);
             this.type = json.getInt(ATTRIBUTES[cont++]);
-            this.used = json.getBoolean(ATTRIBUTES[cont]);
+            this.used = json.getBoolean(ATTRIBUTES[cont++]);
+            this.description = json.getString(ATTRIBUTES[cont]);
         } catch (JSONException e) {
             return null;
         }
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java b/demo/src/main/java/br/rnp/futebol/verona/pojo/TExperiment.java
similarity index 93%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java
rename to demo/src/main/java/br/rnp/futebol/verona/pojo/TExperiment.java
index 552844109c..7d3bb7c181 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TExperiment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/pojo/TExperiment.java
@@ -1,6 +1,4 @@
-package br.rnp.futebol.vocoliseu.pojo;
-
-import android.content.Intent;
+package br.rnp.futebol.verona.pojo;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -16,7 +14,7 @@
 
     private String name;
     private String filename;
-    private boolean askInfo;
+    private InfoHelper askInfo;
     private boolean usedAux;
     private String instruction;
     private ArrayList<Integer> qosMetrics;
@@ -40,11 +38,11 @@ public void setFilename(String filename) {
         this.filename = filename;
     }
 
-    public boolean isAskInfo() {
+    public InfoHelper getAskInfo() {
         return askInfo;
     }
 
-    public void setAskInfo(boolean askInfo) {
+    public void setAskInfo(InfoHelper askInfo) {
         this.askInfo = askInfo;
     }
 
@@ -93,7 +91,7 @@ public TExperiment fromJson(JSONObject json) {
         try {
             this.name = json.getString(ATTRIBUTES[cont++]);
             this.filename = json.getString(ATTRIBUTES[cont++]);
-            this.askInfo = json.getBoolean(ATTRIBUTES[cont++]);
+            this.askInfo = new InfoHelper().fromJson(json.getJSONObject(ATTRIBUTES[cont++]));
             this.instruction = json.getString(ATTRIBUTES[cont++]);
 
             JSONArray qos = json.getJSONArray(ATTRIBUTES[cont++]);
@@ -126,7 +124,7 @@ public JSONObject toJson() {
         try {
             json.put(ATTRIBUTES[cont++], this.getName());
             json.put(ATTRIBUTES[cont++], this.getFilename());
-            json.put(ATTRIBUTES[cont++], this.isAskInfo());
+            json.put(ATTRIBUTES[cont++], this.getAskInfo().toJson());
             json.put(ATTRIBUTES[cont++], this.getInstruction());
             if (checkList(this.getQosMetrics()))
                 for (Integer i : this.getQosMetrics())
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java b/demo/src/main/java/br/rnp/futebol/verona/pojo/TScript.java
similarity index 97%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java
rename to demo/src/main/java/br/rnp/futebol/verona/pojo/TScript.java
index 29dcc55825..1646ae7e3b 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/TScript.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/pojo/TScript.java
@@ -1,6 +1,4 @@
-package br.rnp.futebol.vocoliseu.pojo;
-
-import android.util.Log;
+package br.rnp.futebol.verona.pojo;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -126,6 +124,7 @@ public JSONObject toSimpleJson() {
         int cont = 3;
         try {
             json.put(ATTRIBUTES[cont++], this.isUseDash());
+            if (this.getSubjectiveQoeMetrics() != null && !this.getSubjectiveQoeMetrics().isEmpty())
             for (Integer i : this.getSubjectiveQoeMetrics())
                 array.put(i);
             json.put(ATTRIBUTES[cont++], array);
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/unused/Experiment.java b/demo/src/main/java/br/rnp/futebol/verona/pojo/unused/Experiment.java
similarity index 94%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/unused/Experiment.java
rename to demo/src/main/java/br/rnp/futebol/verona/pojo/unused/Experiment.java
index dc124d0dbf..e86b7ab8ba 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/unused/Experiment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/pojo/unused/Experiment.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.pojo.unused;
+package br.rnp.futebol.verona.pojo.unused;
 
 import java.util.ArrayList;
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/unused/Script.java b/demo/src/main/java/br/rnp/futebol/verona/pojo/unused/Script.java
similarity index 96%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/unused/Script.java
rename to demo/src/main/java/br/rnp/futebol/verona/pojo/unused/Script.java
index 5bc134385c..0895dff877 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/pojo/unused/Script.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/pojo/unused/Script.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.pojo.unused;
+package br.rnp.futebol.verona.pojo.unused;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -7,10 +7,10 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.verona.pojo.Metric;
 
 /**
- * [UFRGS] VO-CoLisEU
+ * [UFRGS] VERONA
  * Created by camargo on 19/10/2016
  * Script bean
  */
diff --git a/demo/src/main/java/br/rnp/futebol/verona/util/ReadyMetrics.java b/demo/src/main/java/br/rnp/futebol/verona/util/ReadyMetrics.java
new file mode 100644
index 0000000000..a9ae9680f2
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/ReadyMetrics.java
@@ -0,0 +1,42 @@
+package br.rnp.futebol.verona.util;
+
+import java.util.ArrayList;
+
+import br.rnp.futebol.verona.pojo.Metric;
+
+/**
+ * Created by camargo on 18/10/16.
+ */
+public class ReadyMetrics {
+
+    public static ArrayList<Metric> QOS_METRICS, S_QOE_METRICS, O_QOE_METRICS;
+    public static int BINARY_QUESTION_ID, ACR_ID, DCR_ID;
+
+    public static void init() {
+        int id = 0;
+
+        QOS_METRICS = new ArrayList<>();
+        S_QOE_METRICS = new ArrayList<>();
+        O_QOE_METRICS = new ArrayList<>();
+
+        QOS_METRICS.add(new Metric(++id, "RTT", Metric.QOS, "The delay of packet transmission between the mobile device and the video provider."));
+        QOS_METRICS.add(new Metric(++id, "Packet Loss", Metric.QOS, "The percentage of how many of the transmitted packets were lost."));
+
+        S_QOE_METRICS.add(new Metric(++id, "ACR scale", Metric.S_QOE, "A scale from 1 to 5 that measures how good was the user experience about the video."));
+        ACR_ID = id;
+        S_QOE_METRICS.add(new Metric(++id, "DCR scale", Metric.S_QOE, "A scale from 1 to 5 that measures how degradated was the user experience comparing the current video to a previous displayed one."));
+        DCR_ID = id;
+        S_QOE_METRICS.add(new Metric(++id, "Binary Question", Metric.S_QOE, "A question with two possibilities of answer."));
+        BINARY_QUESTION_ID = id;
+
+        O_QOE_METRICS.add(new Metric(++id, "Number of Freezes", Metric.O_QOE, "Number of stalls/freezes during the exhibition. (Do not count pauses)"));
+        O_QOE_METRICS.add(new Metric(++id, "Duration of Freezes", Metric.O_QOE, "Total amount of time that the video was frozen. (Do not count pauses)"));
+        O_QOE_METRICS.add(new Metric(++id, "Playback start time", Metric.O_QOE, "Amount of time that the player took to start the video after it was requested."));
+        O_QOE_METRICS.add(new Metric(++id, "Initial and Final Resolution (DASH)", Metric.O_QOE, "Video bitrate of the beginning and the final of the exhibition."));
+        O_QOE_METRICS.add(new Metric(++id, "Initial and Final Bitrate (DASH)", Metric.O_QOE, "Video resolution of the beginning and the final of the exhibition."));
+        O_QOE_METRICS.add(new Metric(++id, "Bitrate switches (DASH)", Metric.O_QOE, "Number of times where the resolution changed."));
+
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/verona/util/VolleyRequest.java b/demo/src/main/java/br/rnp/futebol/verona/util/VolleyRequest.java
new file mode 100644
index 0000000000..812d9cc1b3
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/VolleyRequest.java
@@ -0,0 +1,123 @@
+package br.rnp.futebol.verona.util;
+
+import android.content.Context;
+import android.util.Log;
+
+import com.android.volley.AuthFailureError;
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.NetworkError;
+import com.android.volley.NoConnectionError;
+import com.android.volley.ParseError;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.ServerError;
+import com.android.volley.TimeoutError;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.StringRequest;
+import com.android.volley.toolbox.Volley;
+
+import org.json.JSONObject;
+
+import java.io.Serializable;
+import java.util.HashMap;
+import java.util.Map;
+
+
+/**
+ * Criado por Joao em 12/04/16.
+ */
+
+public class VolleyRequest implements Serializable {
+
+
+    private Context ctx;
+
+    public VolleyRequest(Context ctx) {
+        this.ctx = ctx;
+    }
+
+    public void getJSON(String URL, Response.Listener<String> listener) {
+        RequestQueue queue = Volley.newRequestQueue(ctx);
+        StringRequest getRequest = new StringRequest(URL, listener,
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        Log.i("volleyError", error.toString());
+                    }
+                });
+        queue.add(getRequest);
+        getRequest.setRetryPolicy(new DefaultRetryPolicy(
+                60000*10,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+    }
+
+    @SuppressWarnings("unused")
+    public void getJsonArray(String URL, Response.Listener<JSONObject> listener) {
+        JsonObjectRequest getRequest = new JsonObjectRequest(URL, listener,
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        Log.i("volleyError", error.toString());
+                    }
+                });
+        Volley.newRequestQueue(ctx).add(getRequest);
+    }
+
+    public void postJsonArray(String URL, JSONObject json, Response.Listener<JSONObject> listener) {
+        try {
+            JsonObjectRequest postRequest = new JsonObjectRequest(Request.Method.POST, URL,
+                    json, listener,
+                    new Response.ErrorListener() {
+                        @Override
+                        public void onErrorResponse(VolleyError error) {
+//                        Bloco de condições para testar qual foi exatamente o erro
+                            if (error instanceof TimeoutError) {
+                                Log.i("Volley", "TimeoutError");
+                            } else if (error instanceof NoConnectionError) {
+                                Log.i("Volley", "NoConnectionError");
+                            } else if (error instanceof AuthFailureError) {
+                                Log.i("Volley", "AuthFailureError");
+                            } else if (error instanceof ServerError) {
+                                Log.i("Volley", "ServerError");
+                            } else if (error instanceof NetworkError) {
+                                Log.i("Volley", "NetworkError");
+                            } else if (error instanceof ParseError) {
+                                Log.i("Volley", "ParseError");
+                            }
+                        Log.i("volleyError", error.toString());
+                        }
+                    }
+            ) {
+            };
+            Volley.newRequestQueue(ctx).add(postRequest);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    public void postJsonURL(String URL, Response.Listener<String> listener, final Map<String, String> urlParams) {
+        StringRequest postRequest = new StringRequest(Request.Method.POST, URL, listener, new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+                Log.i("volleyError", error.toString());
+            }
+        }) {
+            @Override
+            protected Map<String, String> getParams() throws AuthFailureError {
+                return urlParams;
+            }
+
+            @Override
+            public Map<String, String> getHeaders() throws AuthFailureError {
+                Map<String,String> params = new HashMap<String, String>();
+                params.put("Content-Type","application/x-www-form-urlencoded");
+                return params;
+            }
+        };
+        Volley.newRequestQueue(ctx).add(postRequest);
+
+    }
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/DashboardFragmentAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/DashboardFragmentAdapter.java
similarity index 72%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/DashboardFragmentAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/DashboardFragmentAdapter.java
index 5840428eb5..247ca77cff 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/DashboardFragmentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/DashboardFragmentAdapter.java
@@ -1,16 +1,13 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
 
-import br.rnp.futebol.vocoliseu.visual.fragment.ExpListFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.InstructionsFragment1;
-import br.rnp.futebol.vocoliseu.visual.fragment.InstructionsFragment2;
-import br.rnp.futebol.vocoliseu.visual.fragment.InstructionsFragment3;
-import br.rnp.futebol.vocoliseu.visual.fragment.NoExpsFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.VideoListFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.DashboardLastVideoFragment;
+import br.rnp.futebol.verona.visual.fragment.ExpListFragment;
+import br.rnp.futebol.verona.visual.fragment.NoExpsFragment;
+import br.rnp.futebol.verona.visual.fragment.VideoListFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.DashboardLastVideoFragment;
 
 public class DashboardFragmentAdapter extends FragmentStatePagerAdapter {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExpFragmentAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ExpFragmentAdapter.java
similarity index 74%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExpFragmentAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/ExpFragmentAdapter.java
index c88b75ea4b..3eb0eb0e9c 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExpFragmentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ExpFragmentAdapter.java
@@ -1,12 +1,12 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
 
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentGeneralFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentMetricsFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentScriptsFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.ExperimentGeneralFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.ExperimentMetricsFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.ExperimentScriptsFragment;
 
 public class ExpFragmentAdapter extends FragmentStatePagerAdapter {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExperimentAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ExperimentAdapter.java
similarity index 82%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExperimentAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/ExperimentAdapter.java
index ac8949355b..b11460d27c 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ExperimentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ExperimentAdapter.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.content.Context;
 import android.view.LayoutInflater;
@@ -7,7 +7,7 @@
 import android.widget.BaseAdapter;
 import android.widget.TextView;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TExperiment;
 
 import com.google.android.exoplayer2.demo.R;
 
@@ -42,10 +42,11 @@ public View getView(int position, View convertView, ViewGroup parent) {
         tvFilename = (TextView) view.findViewById(R.id.tv_exp_item_filename);
         tvAdress = (TextView) view.findViewById(R.id.tv_exp_item_address);
 
-        tvName.setText(exp.getName());
-        tvFilename.setText(exp.getFilename().concat(".txt"));
-        tvAdress.setText(exp.getScripts().size() + " video(s)");
-
+        if (exp != null) {
+            tvName.setText(exp.getName());
+            tvFilename.setText(exp.getFilename().concat(".txt"));
+            tvAdress.setText(exp.getScripts().size() + " video(s)");
+        }
         return view;
     }
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/FragmentAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/FragmentAdapter.java
similarity index 76%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/FragmentAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/FragmentAdapter.java
index f5bca3f9c7..883903967b 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/FragmentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/FragmentAdapter.java
@@ -1,11 +1,11 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
 
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentConfigurationGeneralFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentConfigurationMetricsFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.ExperimentConfigurationGeneralFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.ExperimentConfigurationMetricsFragment;
 
 public class FragmentAdapter extends FragmentStatePagerAdapter {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/InstructionsFragmentAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/InstructionsFragmentAdapter.java
similarity index 63%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/InstructionsFragmentAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/InstructionsFragmentAdapter.java
index 3d9435bde3..8e6953ca9a 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/InstructionsFragmentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/InstructionsFragmentAdapter.java
@@ -1,15 +1,12 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
 
-import br.rnp.futebol.vocoliseu.visual.fragment.InstructionsFragment1;
-import br.rnp.futebol.vocoliseu.visual.fragment.InstructionsFragment2;
-import br.rnp.futebol.vocoliseu.visual.fragment.InstructionsFragment3;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentGeneralFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentMetricsFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ExperimentScriptsFragment;
+import br.rnp.futebol.verona.visual.fragment.InstructionsFragment1;
+import br.rnp.futebol.verona.visual.fragment.InstructionsFragment2;
+import br.rnp.futebol.verona.visual.fragment.InstructionsFragment3;
 
 public class InstructionsFragmentAdapter extends FragmentStatePagerAdapter {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/MetricAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/MetricAdapter.java
similarity index 69%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/MetricAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/MetricAdapter.java
index 0931f1bf8c..74587ad013 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/MetricAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/MetricAdapter.java
@@ -1,6 +1,7 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.content.Context;
+import android.text.Html;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -8,7 +9,8 @@
 import android.widget.CheckBox;
 import android.widget.TextView;
 
-import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.verona.pojo.Metric;
+
 import com.google.android.exoplayer2.demo.R;
 
 import java.util.List;
@@ -22,15 +24,25 @@
     private TextView tvName, tvType;
     private CheckBox cbUsed;
     private Metric metric;
+    private boolean blue;
     private List<Metric> metrics;
 
 
-    public MetricAdapter() {}
+    public MetricAdapter() {
+    }
 
     public MetricAdapter(Context context, List<Metric> metrics) {
         super();
         this.ctx = context;
         this.metrics = metrics;
+        this.blue = true;
+    }
+
+    public MetricAdapter(Context context, List<Metric> metrics, boolean blue) {
+        super();
+        this.ctx = context;
+        this.metrics = metrics;
+        this.blue = blue;
     }
 
     @Override
@@ -38,10 +50,14 @@ public View getView(int position, View convertView, ViewGroup parent) {
         View view = LayoutInflater.from(ctx).inflate(R.layout.metric_item, parent, false);
         metric = metrics.get(position);
         tvName = (TextView) view.findViewById(R.id.tv_metric_item_name);
+//        if (!blue)
+//            tvName.setTextColor(view.getResources().getColor(R.color.gray));
         tvType = (TextView) view.findViewById(R.id.tv_metric_item_type);
         cbUsed = (CheckBox) view.findViewById(R.id.cb_metric_item_used);
+//        String str = "</b> " + metric.getName() + "</b> [" + metric.getTypeName() + "]";
+//        tvName.setText(Html.fromHtml(str));
         tvName.setText(metric.getName());
-        tvType.setText(metric.getTypeName());
+        tvType.setText(metric.getDescription());
         cbUsed.setChecked(metric.isUsed());
         return view;
     }
diff --git a/demo/src/main/java/br/rnp/futebol/verona/util/adapter/MetricsHeaderLV.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/MetricsHeaderLV.java
new file mode 100644
index 0000000000..d9e03be891
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/MetricsHeaderLV.java
@@ -0,0 +1,120 @@
+package br.rnp.futebol.verona.util.adapter;
+
+import java.util.ArrayList;
+import java.util.TreeSet;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.CheckBox;
+import android.widget.TextView;
+
+import com.google.android.exoplayer2.demo.R;
+
+import br.rnp.futebol.verona.pojo.Metric;
+
+public class MetricsHeaderLV extends BaseAdapter {
+
+    private static final int TYPE_ITEM = 0;
+    private static final int TYPE_SEPARATOR = 1;
+
+    private ArrayList<Object> mData = new ArrayList<>();
+    private TreeSet<Integer> sectionHeader = new TreeSet<>();
+
+    private LayoutInflater mInflater;
+
+    public MetricsHeaderLV(Context context) {
+        mInflater = (LayoutInflater) context
+                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+    }
+
+    public void clear() {
+        mData.clear();
+    }
+
+    public void addItem(final Object item) {
+        mData.add(item);
+        notifyDataSetChanged();
+    }
+
+    public void addSectionHeaderItem(final String item) {
+        mData.add(item);
+        sectionHeader.add(mData.size() - 1);
+        notifyDataSetChanged();
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        return sectionHeader.contains(position) ? TYPE_SEPARATOR : TYPE_ITEM;
+    }
+
+    @Override
+    public void notifyDataSetChanged() {
+        super.notifyDataSetChanged();
+    }
+
+    @Override
+    public int getViewTypeCount() {
+        return 2;
+    }
+
+    @Override
+    public int getCount() {
+        return mData.size();
+    }
+
+    @Override
+    public Object getItem(int position) {
+        return mData.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
+
+    @SuppressWarnings("ConstantConditions")
+    public View getView(int position, View convertView, ViewGroup parent) {
+        ViewHolder holder;
+        FullViewHolder fHolder;
+        int rowType = getItemViewType(position);
+        if (convertView == null) {
+            switch (rowType) {
+                case TYPE_ITEM:
+                    fHolder = new FullViewHolder();
+                    convertView = mInflater.inflate(R.layout.metric_item, null);
+                    fHolder.tvName = (TextView) convertView.findViewById(R.id.tv_metric_item_name);
+                    fHolder.tvDesc = (TextView) convertView.findViewById(R.id.tv_metric_item_type);
+                    fHolder.cbUsed = (CheckBox) convertView.findViewById(R.id.cb_metric_item_used);
+                    Metric metric = (Metric) mData.get(position);
+                    fHolder.tvName.setText(metric.getName());
+                    fHolder.tvDesc.setText(metric.getDescription());
+                    fHolder.cbUsed.setChecked(metric.isUsed());
+                    break;
+                case TYPE_SEPARATOR:
+                    holder = new ViewHolder();
+                    convertView = mInflater.inflate(R.layout.lv_header_separator, null);
+                    holder.textView = (TextView) convertView.findViewById(R.id.tv_header_separator);
+                    holder.textView.setText(mData.get(position).toString());
+                    convertView.setTag(holder);
+                    break;
+            }
+//        } else {
+//            holder = (ViewHolder) convertView.getTag();
+//            holder.textView.setText(mData.get(position).toString());
+        }
+        return convertView;
+    }
+
+    public static class ViewHolder {
+        public TextView textView;
+    }
+
+    public static class FullViewHolder {
+        public TextView tvName, tvDesc;
+        public CheckBox cbUsed;
+    }
+
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ScriptAdapter.java
similarity index 77%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/ScriptAdapter.java
index bae1bbf4c3..0f8d4b28a4 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ScriptAdapter.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.content.Context;
 import android.view.LayoutInflater;
@@ -12,12 +12,12 @@
 
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.verona.pojo.TScript;
 
 public class ScriptAdapter extends BaseAdapter {
 
     private Context ctx;
-    private TextView tvVideo, tvAddress;
+    private TextView tvVideo, tvAddress, tvMetrics, tvQty;
     private CheckBox cbUsed, cbDash;
     private TScript script;
     private List<TScript> scripts;
@@ -38,10 +38,15 @@ public View getView(int position, View convertView, ViewGroup parent) {
         script = scripts.get(position);
         tvVideo = (TextView) view.findViewById(R.id.tv_script_video);
         tvAddress = (TextView) view.findViewById(R.id.tv_script_address);
+        tvMetrics = (TextView) view.findViewById(R.id.tv_script_item_metrics);
+        tvQty = (TextView) view.findViewById(R.id.tv_script_item_qty);
         cbUsed = (CheckBox) view.findViewById(R.id.cb_script_use_dash);
 //        cbDash = (CheckBox) view.findViewById(R.id.cb_use_dash_confirmation);
         tvVideo.setText(script.getVideo().concat(".").concat(script.getExtension()));
+        String str = (script.getSubjectiveQoeMetrics() != null ? script.getSubjectiveQoeMetrics().size() : 0) + " metric(s) selected";
         tvAddress.setText(script.getAddress());
+        tvMetrics.setText(str);
+        tvQty.setText(script.getLoop() + " repetition(s)");
         cbUsed.setChecked(script.isUsedAux());
 //        cbDash.setChecked(script.isUseDash());
         return view;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptFragmentAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ScriptFragmentAdapter.java
similarity index 79%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptFragmentAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/ScriptFragmentAdapter.java
index 70aaf155b5..7d6d088c7c 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/ScriptFragmentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/ScriptFragmentAdapter.java
@@ -1,11 +1,11 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentStatePagerAdapter;
 
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ScriptGeneralFragment;
-import br.rnp.futebol.vocoliseu.visual.fragment.unused.ScriptMetricsFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.ScriptGeneralFragment;
+import br.rnp.futebol.verona.visual.fragment.unused.ScriptMetricsFragment;
 
 public class ScriptFragmentAdapter extends FragmentStatePagerAdapter {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/SelectableExperimentAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/SelectableExperimentAdapter.java
similarity index 87%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/SelectableExperimentAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/SelectableExperimentAdapter.java
index 38f6cd8e83..44a555a5b9 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/SelectableExperimentAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/SelectableExperimentAdapter.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.content.Context;
 import android.view.LayoutInflater;
@@ -12,13 +12,14 @@
 
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TExperiment;
 
 public class SelectableExperimentAdapter extends BaseAdapter {
 
     private Context ctx;
     private TextView tvName, tvFilename;
     private CheckBox cbUsed;
+    private String ext;
     private TExperiment exp;
     private List<TExperiment> exps;
 
@@ -26,10 +27,11 @@
     public SelectableExperimentAdapter() {
     }
 
-    public SelectableExperimentAdapter(Context context, List<TExperiment> exps) {
+    public SelectableExperimentAdapter(Context context, List<TExperiment> exps, String ext) {
         super();
         this.ctx = context;
         this.exps = exps;
+        this.ext = ext;
     }
 
     @Override
@@ -42,7 +44,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         cbUsed = (CheckBox) view.findViewById(R.id.cb_selected);
 
         tvName.setText(exp.getName());
-        tvFilename.setText(exp.getFilename().concat(".txt"));
+        tvFilename.setText(exp.getFilename().concat(ext));
         cbUsed.setChecked(exp.isUsedAux());
 
         return view;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/VideoAdapter.java b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/VideoAdapter.java
similarity index 90%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/VideoAdapter.java
rename to demo/src/main/java/br/rnp/futebol/verona/util/adapter/VideoAdapter.java
index 380da1f7f4..13a0da7279 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/adapter/VideoAdapter.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/util/adapter/VideoAdapter.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.util.adapter;
+package br.rnp.futebol.verona.util.adapter;
 
 import android.content.Context;
 import android.view.LayoutInflater;
@@ -11,8 +11,7 @@
 
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
+import br.rnp.futebol.verona.pojo.TScript;
 
 /**
  * Created by camargo on 18/10/16.
diff --git a/demo/src/main/java/br/rnp/futebol/verona/visual/activity/AboutActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/AboutActivity.java
new file mode 100644
index 0000000000..1cae66e44a
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/AboutActivity.java
@@ -0,0 +1,28 @@
+package br.rnp.futebol.verona.visual.activity;
+
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+import android.widget.SeekBar;
+import android.widget.TextView;
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Response;
+import com.android.volley.toolbox.Volley;
+import com.google.android.exoplayer2.demo.R;
+
+import org.json.JSONObject;
+
+import br.rnp.futebol.verona.util.VolleyRequest;
+
+
+public class AboutActivity extends AppCompatActivity {
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.about_activity);
+
+    }
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/verona/visual/activity/CodedMergeActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/CodedMergeActivity.java
new file mode 100644
index 0000000000..e9804765c2
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/CodedMergeActivity.java
@@ -0,0 +1,110 @@
+package br.rnp.futebol.verona.visual.activity;
+
+import android.Manifest;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+
+import com.google.android.exoplayer2.demo.R;
+
+import java.io.File;
+import java.util.ArrayList;
+
+import br.rnp.futebol.verona.codedcache.FileCC;
+import br.rnp.futebol.verona.codedcache.MergeVideos;
+import br.rnp.futebol.verona.codedcache.PlayerActivityWithCC;
+
+public class CodedMergeActivity extends AppCompatActivity {
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.coded_merge);
+        checkPerm();
+        Toolbar toolbar = (Toolbar) findViewById(R.id.tb_cc_title);
+        toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
+        toolbar.setTitle("Coded Cache Experiment");
+        toolbar.setTitleTextAppearance(this, R.style.ToolbarTitleAppearance);
+        toolbar.setSubtitle("Provide the necessary information");
+        toolbar.setSubtitleTextAppearance(this, R.style.ToolbarSubtitleAppearance);
+        setSupportActionBar(toolbar);
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finish();
+            }
+        });
+        Button btMerge = (Button) findViewById(R.id.bt_merge_test);
+        final EditText etName = (EditText) findViewById(R.id.et_cc_name);
+        etName.setText("praia");
+        final EditText etExt = (EditText) findViewById(R.id.et_cc_ext);
+        etExt.setText("mkv");
+        final EditText etParts = (EditText) findViewById(R.id.et_cc_parts);
+        etParts.setText("6");
+        final EditText etProv = (EditText) findViewById(R.id.et_cc_provider);
+        etProv.setText("http://143.54.12.47");
+        final EditText etChunk = (EditText) findViewById(R.id.et_cc_chunk);
+        etChunk.setText("10000");
+        //http://www.androidbegin.com/tutorial/AndroidCommercial.3gp
+//        final ArrayList<String> videos = new ArrayList<>();
+//        videos.add(Environment.getExternalStorageDirectory().getAbsolutePath() + "/beatles_1.mp4");
+//        videos.add(Environment.getExternalStorageDirectory().getAbsolutePath() + "/beatles_2.mp4");
+//        videos.add(Environment.getExternalStorageDirectory().getAbsolutePath() + "/beatles_3.mp4");
+//        videos.add(Environment.getExternalStorageDirectory().getAbsolutePath() + "/beatles_4.mp4");
+        btMerge.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+//                MergeVideos mv = new MergeVideos("ride", 11, ".mp4", "ride.mp4", getBaseContext());
+//                mv.execute();
+                goToPlayer(new FileCC(etName.getText().toString(), etProv.getText().toString(),
+                        etExt.getText().toString(), Integer.parseInt(etChunk.getText().toString()),
+                        Integer.parseInt(etParts.getText().toString())));
+            }
+        });
+    }
+
+    private void goToPlayer(FileCC filecc) {
+        Bundle extras = new Bundle();
+        ArrayList<String> vids = new ArrayList<>();
+        String internal = Environment.getExternalStorageDirectory().getAbsolutePath().concat("/");
+        String svr = filecc.getProvider().concat("/");
+        for (int i = 0; i < filecc.getParts(); i++) {
+            String filename = filecc.getName().concat("" + (i + 1)).concat("." + filecc.getExtension());
+            File file = new File(internal.concat(filename));
+            if (file.exists())
+                vids.add(internal.concat(filename));
+            else
+                vids.add(svr.concat(filename));
+        }
+//        vids.add(Environment.getExternalStorageDirectory().getAbsolutePath().concat("/").concat("ride1.mp4"));
+//        vids.add("http://143.54.12.47:8081/vids/ride2.mp4");
+        extras.putStringArrayList(PlayerActivityWithCC.URI_LIST_EXTRA, vids);
+        extras.putSerializable("filecc", filecc);
+        Intent intent = new Intent(getBaseContext(), PlayerActivityWithCC.class);
+//        intent.setData(Uri.parse(Environment.getExternalStorageDirectory().getAbsolutePath().concat("/").concat("ride1.mp4")));
+        intent.setAction(PlayerActivityWithCC.ACTION_VIEW_LIST);
+        intent.putExtras(extras);
+        startActivity(intent);
+    }
+
+    private void checkPerm() {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
+            }
+            if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 1);
+            }
+        }
+    }
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/InstructionsActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/InstructionsActivity.java
similarity index 87%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/InstructionsActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/InstructionsActivity.java
index b62bfba707..326c21f1b8 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/InstructionsActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/InstructionsActivity.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.activity;
+package br.rnp.futebol.verona.visual.activity;
 
 import android.Manifest;
 import android.content.Context;
@@ -14,7 +14,7 @@
 
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.util.adapter.InstructionsFragmentAdapter;
+import br.rnp.futebol.verona.util.adapter.InstructionsFragmentAdapter;
 
 public class InstructionsActivity extends AppCompatActivity {
 
@@ -57,9 +57,9 @@ private void checkPerm() {
             if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                 requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
             }
-            if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
-                requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 1);
-            }
+//            if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+//                requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 1);
+//            }
         }
     }
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/MainActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/MainActivity.java
similarity index 51%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/MainActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/MainActivity.java
index 5321ab6fec..23511bb8dc 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/MainActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/MainActivity.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.activity;
+package br.rnp.futebol.verona.visual.activity;
 
 import android.Manifest;
 import android.app.AlertDialog;
@@ -13,6 +13,7 @@
 import android.os.Environment;
 import android.support.annotation.NonNull;
 import android.support.design.widget.NavigationView;
+import android.support.design.widget.TabLayout;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.view.ViewPager;
 import android.support.v4.widget.DrawerLayout;
@@ -27,28 +28,29 @@
 import android.widget.ListView;
 import android.widget.Toast;
 
-import com.google.android.exoplayer2.demo.PlayerActivity;
 import com.google.android.exoplayer2.demo.R;
 
 import org.json.JSONObject;
 
 import java.io.BufferedReader;
+import java.io.BufferedWriter;
 import java.io.File;
 import java.io.FileReader;
+import java.io.FileWriter;
 import java.io.IOException;
 import java.util.ArrayList;
 
-import br.rnp.futebol.vocoliseu.dao.TExpForListDAO;
-import br.rnp.futebol.vocoliseu.dao.TExperimentDAO;
-import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.adapter.DashboardFragmentAdapter;
-import br.rnp.futebol.vocoliseu.util.adapter.ExperimentAdapter;
-import br.rnp.futebol.vocoliseu.util.adapter.SelectableExperimentAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.experiment.ExperimentGeneralActivity;
-import br.rnp.futebol.vocoliseu.visual.activity.script.ScriptGeneralActivity;
-import br.rnp.futebol.vocoliseu.visual.fragment.ExpListFragment;
+import br.rnp.futebol.verona.OWAMP.OWAMP;
+import br.rnp.futebol.verona.OWAMP.OWAMPArguments;
+import br.rnp.futebol.verona.OWAMP.OWAMPResult;
+import br.rnp.futebol.verona.dao.TExpForListDAO;
+import br.rnp.futebol.verona.dao.TScriptDAO;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.util.adapter.DashboardFragmentAdapter;
+import br.rnp.futebol.verona.util.adapter.SelectableExperimentAdapter;
+import br.rnp.futebol.verona.visual.activity.experiment.ExperimentGeneralActivity;
+import br.rnp.futebol.verona.visual.activity.script.ScriptGeneralActivity;
+import br.rnp.futebol.verona.visual.fragment.ExpListFragment;
 
 public class MainActivity extends AppCompatActivity
         implements NavigationView.OnNavigationItemSelectedListener {
@@ -57,42 +59,54 @@
     private ArrayList<TExperiment> exps;
     private TExpForListDAO dao;
     private Toolbar toolbar;
+    private TabLayout tab;
     private final int SELECT_FILE_CODE = 7;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
+        checkPerm();
+
         toolbar = (Toolbar) findViewById(R.id.toolbar);
+        tab = (TabLayout) findViewById(R.id.tl_main);
+        final ViewPager vpMain = (ViewPager) findViewById(R.id.vp_dashboard);
+        boolean noExps;
+
         toolbar.setSubtitle("Swipe to manage experiments and videos");
         toolbar.setSubtitleTextAppearance(this, R.style.ToolbarSubtitleAppearance);
         setSupportActionBar(toolbar);
 
-        checkPerm();
-
-//        lvExperiments = (ListView) findViewById(R.id.lv_main_experiments);
-
-        lvAux = new ListView(this);
-
-//        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab_experiment);
-//        fab.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View view) {
-//
-//            }
-//        });
+        tab.addTab(tab.newTab().setText("Experiments"));
+        tab.addTab(tab.newTab().setText("Videos"));
+        tab.setTabGravity(TabLayout.GRAVITY_FILL);
 
         dao = new TExpForListDAO(getBaseContext());
         exps = dao.getExpsByNames(dao.getExpsNames());
+        noExps = (exps == null || exps.isEmpty());
 
-        ViewPager vpMain = (ViewPager) findViewById(R.id.vp_dashboard);
-        DashboardFragmentAdapter adapter;
-        if (exps == null || exps.isEmpty())
-            adapter = new DashboardFragmentAdapter(getSupportFragmentManager(), 1);
-        else
-            adapter = new DashboardFragmentAdapter(getSupportFragmentManager(), 2);
+        DashboardFragmentAdapter adapter = new DashboardFragmentAdapter(getSupportFragmentManager(), noExps ? 1 : 2);
         vpMain.setAdapter(adapter);
 
+        if (!noExps)
+            vpMain.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tab));
+        tab.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
+            @Override
+            public void onTabSelected(TabLayout.Tab tab) {
+                vpMain.setCurrentItem(tab.getPosition());
+            }
+
+            @Override
+            public void onTabUnselected(TabLayout.Tab tab) {
+            }
+
+            @Override
+            public void onTabReselected(TabLayout.Tab tab) {
+            }
+
+        });
+
+
 //        lvExperiments.setOnItemClickListener(new AdapterView.OnItemClickListener() {
 //            @Override
 //            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
@@ -270,9 +284,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
 //                    intent = new Intent((getBaseContext()), UserActivity.class);
 //                    extras.putString("provider", provider);
 //                } else {
-//                    intent = new Intent((getBaseContext()), PlayerActivity.class);
+//                    intent = new Intent((getBaseContext()), PlayerActivityWithMigration.class);
 //                    intent.setData(Uri.parse(provider));
-//                    intent.setAction(PlayerActivity.ACTION_VIEW);
+//                    intent.setAction(PlayerActivityWithMigration.ACTION_VIEW);
 //                }
 //                intent.putExtras(extras);
 //
@@ -310,6 +324,22 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                 intent.setType("text/plain");
                 startActivityForResult(intent, SELECT_FILE_CODE);
                 break;
+            case (R.id.navigation_item_open_results):
+                if (dao.getExpsNames() != null)
+                    if (dao.getExpsNames().size() > 0) {
+                        cleanResults();
+                        break;
+                    }
+                Toast.makeText(getBaseContext(), "No results are available", Toast.LENGTH_SHORT).show();
+                break;
+            case (R.id.navigation_item_export_results):
+                if (dao.getExpsNames() != null)
+                    if (dao.getExpsNames().size() > 0) {
+                        exportResults();
+                        break;
+                    }
+                Toast.makeText(getBaseContext(), "No results available to export", Toast.LENGTH_SHORT).show();
+                break;
             case (R.id.navigation_item_export):
                 if (dao.getExpsNames() != null)
                     if (dao.getExpsNames().size() > 0) {
@@ -324,7 +354,18 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                 startActivity(itInst);
                 break;
             case (R.id.navigation_item_about):
-                startActivity(new Intent(getBaseContext(), AboutActivity.class));
+//                for (int i = 0; i < 500; i++) {
+//                    OWAMPResult r = measureRTT("8.8.8.8");
+//                    String str = "";
+//                    if (r != null) {
+//                        if (r.getRtt_max() > 1000 || r.getRtt_avg() > 1000)
+//                            str = "AQUIIIIIIIII";
+//                        Log.i("rtt: ", r.getRtt_avg() + " / " + r.getRtt_max() + " / " + str);
+//                        write(r.getRtt_avg() + "," + r.getRtt_max());
+//                    }
+//                }
+                startActivity(new Intent(getBaseContext(), CodedMergeActivity.class));
+//                startActivity(new Intent(getBaseContext(), AboutActivity.class));
             default:
                 break;
 
@@ -335,8 +376,26 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
         return true;
     }
 
+    private void write(String msg) {
+        try {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat("filertt".concat(".csv"));
+            BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i("teste", e.getMessage());
+        }
+    }
 
-    private void refreshExportList(ArrayList<TExperiment> exps, ArrayList<TExperiment> exps2) {
+    private OWAMPResult measureRTT(String ip) {
+        OWAMPArguments args = new OWAMPArguments.Builder().url(ip).timeout(1).count(1).bytes(16).build();
+        return OWAMP.ping(args, OWAMP.Backend.UNIX);
+    }
+
+
+    private void refreshExportList(ArrayList<TExperiment> exps, ArrayList<TExperiment> exps2, String ext) {
+//        lvAux = new ListView(getBaseContext());
         for (TExperiment te : exps2)
             te.setUsedAux(false);
         for (TExperiment e : exps)
@@ -344,66 +403,176 @@ private void refreshExportList(ArrayList<TExperiment> exps, ArrayList<TExperimen
                 if (te.getFilename().equals(e.getFilename()))
                     te.setUsedAux(true);
 
-        SelectableExperimentAdapter selAdapter = new SelectableExperimentAdapter(getBaseContext(), exps2);
+        SelectableExperimentAdapter selAdapter = new SelectableExperimentAdapter(getBaseContext(), exps2, ext);
         lvAux.setAdapter(selAdapter);
     }
 
     private void exportExps() {
-        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        final ArrayList<TExperiment> experiments = new ArrayList<>();
-        final ArrayList<TExperiment> auxExps = exps;
-
-        refreshExportList(experiments, auxExps);
-        lvAux.setOnItemClickListener(new ListView.OnItemClickListener() {
-            public void onItemClick(AdapterView<?> listView, View itemView, int position, long itemId) {
-                boolean added = false;
-                int count = 0;
-                for (TExperiment e : experiments)
-                    if (e.getFilename().equals(exps.get(position).getFilename()))
-                        added = true;
-                    else
-                        count++;
-                if (!added)
-                    experiments.add(exps.get(position));
-                else
-                    experiments.remove(count);
-                refreshExportList(experiments, auxExps);
-            }
-        });
+        export(".txt", "experiments");
+    }
 
-        builder.setNegativeButton(
-                "cancel",
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        dialog.cancel();
-                        dialog.dismiss();
-                    }
-                });
+    private void exportResults() {
+        export(".csv", "results");
+    }
 
-        builder.setPositiveButton("send", new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                Intent emailIntent = new Intent(Intent.ACTION_SEND_MULTIPLE);
-                ArrayList<Uri> uris = new ArrayList<>();
-                for (TExperiment e : experiments) {
-                    File filelocation = new File(Environment.getExternalStorageDirectory().getAbsolutePath(), e.getFilename().concat(".txt"));
+    private void cleanResults() {
+        try {
+            lvAux = new ListView(this);
+            final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            final ArrayList<TExperiment> experiments = new ArrayList<>();
+            final ArrayList<TExperiment> auxExps = exps;
+
+            refreshExportList(experiments, auxExps, ".csv");
+            lvAux.setOnItemClickListener(new ListView.OnItemClickListener() {
+                public void onItemClick(AdapterView<?> listView, View itemView, int position, long itemId) {
+                    boolean added = false;
+                    int count = 0;
+                    for (TExperiment e : experiments)
+                        if (e.getFilename().equals(exps.get(position).getFilename()))
+                            added = true;
+                        else
+                            count++;
+                    if (!added)
+                        experiments.add(exps.get(position));
+                    else
+                        experiments.remove(count);
+                    refreshExportList(experiments, auxExps, ".csv");
+                }
+            });
+
+            builder.setNegativeButton(
+                    "cancel",
+                    new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            dialog.cancel();
+                            dialog.dismiss();
+                        }
+                    });
+
+            builder.setPositiveButton("clean", new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    ArrayList<Boolean> array = new ArrayList<>();
+                    for (TExperiment e : experiments) {
+                        File filelocation = new File(Environment.getExternalStorageDirectory().getAbsolutePath(), e.getFilename().concat(".csv"));
 //                    filelocation.setReadable(true, false);
-                    Uri path = Uri.fromFile(filelocation);
-                    uris.add(path);
+                        boolean fileDelete = filelocation.delete();
+                        array.add(fileDelete);
+                    }
+                    int deleted = 0;
+                    for (Boolean b : array)
+                        if (b)
+                            deleted++;
+                    Toast.makeText(getBaseContext(), deleted + " of " + array.size() + " result files were cleaned", Toast.LENGTH_SHORT).show();
+//                emailIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);
+////                emailIntent.putExtra(Intent.EXTRA_STREAM, uris.get(0));
+//                emailIntent.setType("file/*");
+//                startActivity(emailIntent);
+//                dialog.cancel();
+//                dialog.dismiss();
+                }
+            });
+
+            builder.setTitle("Select one or more result files:");
+            builder.setCancelable(false);
+            builder.setView(lvAux);
+//            builder.setView(lvAux);
+            builder.show();
+        } catch (Exception e) {
+            Log.i("ERRO", e.getMessage());
+        }
+    }
+
+    private void export(final String ext, String name) {
+        try {
+            final String sufixes[] = {"", "_sbs", "_mig"};
+            lvAux = new ListView(this);
+            final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            final ArrayList<TExperiment> experiments = new ArrayList<>();
+            final ArrayList<TExperiment> auxExps = exps;
+
+            refreshExportList(experiments, auxExps, ext);
+            lvAux.setOnItemClickListener(new ListView.OnItemClickListener() {
+                public void onItemClick(AdapterView<?> listView, View itemView, int position, long itemId) {
+                    boolean added = false;
+                    int count = 0;
+                    for (TExperiment e : experiments)
+                        if (e.getFilename().equals(exps.get(position).getFilename()))
+                            added = true;
+                        else
+                            count++;
+                    if (!added)
+                        experiments.add(exps.get(position));
+                    else
+                        experiments.remove(count);
+                    refreshExportList(experiments, auxExps, ext);
                 }
-                emailIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);
+            });
+
+            builder.setNegativeButton(
+                    "cancel",
+                    new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            dialog.cancel();
+                            dialog.dismiss();
+                        }
+                    });
+
+            builder.setPositiveButton("send", new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    Intent emailIntent = new Intent(Intent.ACTION_SEND_MULTIPLE);
+                    ArrayList<Uri> uris = new ArrayList<>();
+                    for (TExperiment e : experiments) {
+                        for (String sufix: sufixes) {
+                            File filelocation = new File(Environment.getExternalStorageDirectory().getAbsolutePath(), e.getFilename().concat(sufix + ext));
+                            Uri path = Uri.fromFile(filelocation);
+                            uris.add(path);
+                        }
+                    }
+                    emailIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, uris);
 //                emailIntent.putExtra(Intent.EXTRA_STREAM, uris.get(0));
-                emailIntent.putExtra(Intent.EXTRA_SUBJECT, "VO-CoLisEU experiment(s)");
-                emailIntent.setType("file/*");
-                startActivity(emailIntent);
-                dialog.cancel();
-                dialog.dismiss();
+                    emailIntent.putExtra(Intent.EXTRA_SUBJECT, "VERONA experiment(s)");
+                    emailIntent.setType("file/*");
+                    startActivity(emailIntent);
+                    dialog.cancel();
+                    dialog.dismiss();
+                }
+            });
+
+            builder.setTitle("Select one or more " + name + ":");
+            builder.setCancelable(false);
+            builder.setView(null);
+            builder.setView(lvAux);
+            builder.show();
+        } catch (Exception e) {
+            Log.i("ERRO", e.getMessage());
+        }
+    }
+
+    public void deleteCache(Context context) {
+        try {
+            File dir = context.getCacheDir();
+            if (dir != null && dir.isDirectory()) {
+                deleteDir(dir);
             }
-        });
+        } catch (Exception e) {
+            Log.i("error", e.getMessage());
+        }
+    }
 
-        builder.setTitle("Select one or more experiments:");
-        builder.setView(lvAux);
-        builder.show();
+    public boolean deleteDir(File dir) {
+        if (dir != null && dir.isDirectory()) {
+            String[] children = dir.list();
+            for (int i = 0; i < children.length; i++) {
+                boolean success = deleteDir(new File(dir, children[i]));
+                if (!success) {
+                    return false;
+                }
+            }
+        }
+        return dir != null && dir.delete();
     }
 }
diff --git a/demo/src/main/java/br/rnp/futebol/verona/visual/activity/StartActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/StartActivity.java
new file mode 100644
index 0000000000..22bd9df51e
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/StartActivity.java
@@ -0,0 +1,344 @@
+package br.rnp.futebol.verona.visual.activity;
+
+import android.app.AlertDialog;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.EditText;
+import android.widget.RatingBar;
+import android.widget.SeekBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.demo.PlayerActivity;
+import com.google.android.exoplayer2.demo.R;
+
+import org.json.JSONObject;
+
+import br.rnp.futebol.verona.migration.PlayerActivityWithMigration;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.pojo.unused.Experiment;
+
+public class StartActivity extends AppCompatActivity {
+
+
+    private TextView tvInstruction, tvProvide;
+    private Button btProvide, btStart;
+    private TExperiment experiment;
+    private float cons = -1, fam = -1;
+    private int age = -1;
+    private boolean isMale, filledGender;
+    private final String[] levels = {"Never", "Sometimes", "Eventually", "Frequently", "Always"};
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.start_experiment);
+        init();
+        if (getIntent() == null || getIntent().getExtras() == null)
+            finish();
+        experiment = (TExperiment) getIntent().getExtras().getSerializable("experiment");
+        if (experiment == null)
+            finish();
+        if (experiment.getAskInfo() == null || !experiment.getAskInfo().hasInfo()) {
+            tvProvide.setVisibility(View.INVISIBLE);
+            btProvide.setVisibility(View.INVISIBLE);
+        }
+        tvInstruction.setText(experiment.getInstruction() != null ? experiment.getInstruction() : "");
+        btStart.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                makeCBDialogForMig();
+            }
+        });
+        btProvide.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (!experiment.getAskInfo().hasInfo()) {
+                    goToPlayer();
+                } else {
+                    if (experiment.getAskInfo().askAge())
+                        makeETDialog();
+                    else if (experiment.getAskInfo().askGender())
+                        makeCBDialog();
+                    else if (experiment.getAskInfo().askFam())
+                        makeRBDialog(true);
+                    else if (experiment.getAskInfo().askCons())
+                        makeRBDialog(false);
+                }
+            }
+        });
+
+
+    }
+
+    public AlertDialog makeRBDialog(final boolean isFam) {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//        builder.setCon
+        View view = LayoutInflater.from(this).inflate(R.layout.rating_metric_dialog, null);
+        final RatingBar ratingBar = (RatingBar) view.findViewById(R.id.rating_bar_dialog);
+        builder.setTitle("User information");
+        builder.setMessage(isFam ? "How familiar are you with video technologies?" : "How do you categorize your level of video consumption?");
+        builder.setCancelable(false);
+        builder.setNegativeButton("Skip", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (isFam) {
+                    dialog.dismiss();
+                    if (experiment.getAskInfo().askCons())
+                        makeRBDialog(false);
+                    else
+                        goToPlayer();
+                } else {
+                    dialog.dismiss();
+                    goToPlayer();
+                }
+            }
+        });
+        builder.setPositiveButton("Next", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (isFam) {
+                    fam = ratingBar.getRating();
+                    dialog.dismiss();
+                    if (experiment.getAskInfo().askCons())
+                        makeRBDialog(false);
+                    else
+                        goToPlayer();
+                } else {
+                    cons = ratingBar.getRating();
+                    dialog.dismiss();
+                    goToPlayer();
+                }
+            }
+        });
+        builder.setView(view);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    public AlertDialog makeCBDialog() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//        builder.setCon
+        View view = LayoutInflater.from(this).inflate(R.layout.rating_checkbox_dialog, null);
+        final CheckBox cbMale = (CheckBox) view.findViewById(R.id.cb_male_dialog);
+        cbMale.setChecked(true);
+        final CheckBox cbFemale = (CheckBox) view.findViewById(R.id.cb_female_dialog);
+        cbMale.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                cbFemale.setChecked(!isChecked);
+            }
+        });
+        cbFemale.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                cbMale.setChecked(!isChecked);
+            }
+        });
+        builder.setTitle("User information");
+        builder.setMessage("Please provide your gender");
+        builder.setCancelable(false);
+        builder.setNegativeButton("Skip", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+                if (experiment.getAskInfo().askFam())
+                    makeRBDialog(true);
+                else if (experiment.getAskInfo().askCons())
+                    makeRBDialog(false);
+                else
+                    goToPlayer();
+            }
+        });
+        builder.setPositiveButton("Next", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                isMale = cbMale.isChecked();
+                filledGender = true;
+                dialog.dismiss();
+                if (experiment.getAskInfo().askFam())
+                    makeRBDialog(true);
+                else if (experiment.getAskInfo().askCons())
+                    makeRBDialog(false);
+                else
+                    goToPlayer();
+            }
+        });
+        builder.setView(view);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    public AlertDialog makeCBDialogForMig() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//        builder.setCon
+        View view = LayoutInflater.from(this).inflate(R.layout.migration_checkbox_dialog, null);
+        final CheckBox cbMig = (CheckBox) view.findViewById(R.id.cb_mig_per_tier);
+        final CheckBox cbDown = (CheckBox) view.findViewById(R.id.cb_migration_down);
+        final CheckBox cbUp = (CheckBox) view.findViewById(R.id.cb_migration_up);
+        builder.setTitle("Experiment information");
+        builder.setCancelable(false);
+        builder.setPositiveButton("Go", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                goToPlayer(cbMig.isChecked(), cbDown.isChecked(), !cbUp.isChecked());
+            }
+        });
+        builder.setView(view);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    public AlertDialog makeSKDialog() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//        builder.setCon
+        View view = LayoutInflater.from(this).inflate(R.layout.rating_seekbar_dialog, null);
+        SeekBar sk = (SeekBar) view.findViewById(R.id.sk_opinion);
+        final TextView tv = (TextView) view.findViewById(R.id.tv_opinion_status);
+        sk.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
+            @Override
+            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
+                    tv.setText(levels[progress]);
+            }
+
+            @Override
+            public void onStartTrackingTouch(SeekBar seekBar) {
+
+            }
+
+            @Override
+            public void onStopTrackingTouch(SeekBar seekBar) {
+
+            }
+        });
+        builder.setTitle("User information");
+        builder.setMessage("How do you categorize your video consumption level? (From 1 to 5)");
+        builder.setCancelable(false);
+        builder.setNegativeButton("Skip", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+                if (experiment.getAskInfo().askFam())
+                    makeRBDialog(true);
+                else if (experiment.getAskInfo().askCons())
+                    makeRBDialog(false);
+                else
+                    goToPlayer();
+            }
+        });
+        builder.setPositiveButton("Next", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+            }
+        });
+        builder.setView(view);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    public AlertDialog makeETDialog() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//        builder.setCon
+        View view = LayoutInflater.from(this).inflate(R.layout.rating_et_dialog, null);
+        final EditText etAge = (EditText) view.findViewById(R.id.et_dialog_age);
+        builder.setTitle("User information");
+        builder.setMessage("Please provide your age");
+        builder.setCancelable(false);
+        builder.setNegativeButton("Skip", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+                if (experiment.getAskInfo().askGender())
+                    makeCBDialog();
+                else if (experiment.getAskInfo().askFam())
+                    makeRBDialog(true);
+                else if (experiment.getAskInfo().askCons())
+                    makeRBDialog(false);
+                else
+                    goToPlayer();
+
+            }
+        });
+        builder.setPositiveButton("Next", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (etAge.getText() == null || etAge.getText().toString().trim().equals(""))
+                    age = -1;
+                else
+                    age = Integer.parseInt(etAge.getText().toString());
+                dialog.dismiss();
+                if (experiment.getAskInfo().askGender())
+                    makeCBDialog();
+                else if (experiment.getAskInfo().askFam())
+                    makeRBDialog(true);
+                else if (experiment.getAskInfo().askCons())
+                    makeSKDialog();
+                else
+                    goToPlayer();
+            }
+        });
+        builder.setView(view);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    private void goToPlayer() {
+        goToPlayer(false, false, false);
+    }
+
+    private void goToPlayer(boolean mig, boolean during, boolean downstream) {
+        Toast.makeText(this, "The video will start now", Toast.LENGTH_SHORT).show();
+        Intent intent = new Intent(getBaseContext(), mig ? PlayerActivityWithMigration.class : PlayerActivity.class);
+        Bundle extras = new Bundle();
+        extras.putInt("loop", 1);
+        extras.putInt("index", 0);
+        extras.putBoolean("mig", during);
+        extras.putBoolean("downstream", downstream);
+        extras.putSerializable("experiment", experiment);
+        String provider = experiment.getScripts().get(0).getProvider();
+        intent.setData(Uri.parse(provider));
+        intent.setAction(PlayerActivity.ACTION_VIEW);
+        getUserInfo(extras);
+        intent.putExtras(extras);
+        finish();
+        startActivity(intent);
+    }
+
+    private void getUserInfo(Bundle bundle) {
+        JSONObject json = new JSONObject();
+        try {
+            if (experiment.getAskInfo().askAge() && age != -1)
+                json.put("age", age);
+            if (experiment.getAskInfo().askGender() && filledGender)
+                json.put("gender", isMale ? "M" : "F");
+            if (experiment.getAskInfo().askCons() && cons != -1)
+                json.put("consumption", cons);
+            if (experiment.getAskInfo().askFam() && fam != -1)
+                json.put("familiar", fam);
+            bundle.putString("userInfo", json.toString());
+        } catch (Exception e) {
+        }
+    }
+
+    private void init() {
+        tvInstruction = (TextView) findViewById(R.id.tv_start_inst);
+        tvProvide = (TextView) findViewById(R.id.tv_provide_info);
+        btProvide = (Button) findViewById(R.id.bt_provide_info);
+        btStart = (Button) findViewById(R.id.bt_start_videos);
+    }
+}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/UserActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/UserActivity.java
similarity index 87%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/UserActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/UserActivity.java
index 5f60d25d41..6d629bf679 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/UserActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/UserActivity.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.activity;
+package br.rnp.futebol.verona.visual.activity;
 
 import android.content.Intent;
 import android.net.Uri;
@@ -11,15 +11,16 @@
 import android.widget.EditText;
 import android.widget.ImageButton;
 import android.widget.RatingBar;
-import android.widget.TextView;
 
 import com.google.android.exoplayer2.demo.PlayerActivity;
 import com.google.android.exoplayer2.demo.R;
 
 import org.json.JSONObject;
-import org.w3c.dom.Text;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import java.io.Serializable;
+
+import br.rnp.futebol.verona.pojo.InfoHelper;
+import br.rnp.futebol.verona.pojo.TExperiment;
 
 public class UserActivity extends AppCompatActivity {
 
@@ -31,12 +32,12 @@
     private String provider;
     private int index, loop;
     private boolean ok;
+    private InfoHelper askInfo;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.about_user_activity);
-        init();
         Intent intent = getIntent();
         Bundle extras = null;
         if (intent != null)
@@ -46,8 +47,10 @@ protected void onCreate(Bundle savedInstanceState) {
             provider = extras.getString("provider");
             index = extras.getInt("index");
             loop = extras.getInt("loop");
+            askInfo = (InfoHelper) extras.getSerializable("askInfo");
             experiment = (TExperiment) extras.getSerializable("experiment");
         }
+        init();
 
         final Intent newIntent = new Intent(getBaseContext(), PlayerActivity.class);
         final Bundle newExtras = new Bundle();
@@ -113,6 +116,17 @@ private void init() {
         rbCons = (RatingBar) findViewById(R.id.rating_bar_consumption);
         rbFamiliar = (RatingBar) findViewById(R.id.rating_bar_familiar);
 
+        if (askInfo.askAge())
+            etAge.setVisibility(View.INVISIBLE);
+        if (askInfo.askGender()) {
+            cbMale.setVisibility(View.INVISIBLE);
+            cbFemale.setVisibility(View.INVISIBLE);
+        }
+        if (askInfo.askFam())
+            rbFamiliar.setVisibility(View.INVISIBLE);
+        if (askInfo.askCons())
+            rbCons.setVisibility(View.INVISIBLE);
+
         Toolbar toolbar = (Toolbar) findViewById(R.id.tb_about_user);
 //        toolbar.setNavigationIcon(R.drawable.ic_temp_icon_color_2);
         toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentGeneralActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentGeneralActivity.java
similarity index 56%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentGeneralActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentGeneralActivity.java
index 6ab6536820..8b6a846f28 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentGeneralActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentGeneralActivity.java
@@ -13,8 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.experiment;
+package br.rnp.futebol.verona.visual.activity.experiment;
 
+import android.app.AlertDialog;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v7.app.AppCompatActivity;
@@ -23,19 +25,22 @@
 import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.ImageButton;
+import android.widget.ImageView;
 import android.widget.Toast;
 
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.InfoHelper;
+import br.rnp.futebol.verona.pojo.TExperiment;
 
 public class ExperimentGeneralActivity extends AppCompatActivity {
 
     private static final String TAG = "ExperimentMetrics";
     private TExperiment experiment;
     private EditText etName, etFilename, etInstructions;
-    private CheckBox cbAskInfo;
+    private CheckBox cbAskAge, cbAskGender, cbAskCons, cbAskFam;
     private ImageButton ibPt2;
+    private ImageView ibFnHelp, ibInfoHelp;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -48,6 +53,49 @@ public void onClick(View v) {
                 goToPart2();
             }
         });
+        ibFnHelp.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                makeHelpDialog();
+            }
+        });
+        ibInfoHelp.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                makeInfoDialog();
+            }
+        });
+    }
+
+    public AlertDialog makeHelpDialog() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setMessage("This will be the name of the files related to this experiment.\nA .txt will be saved in your device as a script containing the experiment information.\nAlso, a .csv will be saved with the experiment results.\nYou can export both files!");
+        builder.setTitle("File help");
+        builder.setPositiveButton("I got it!", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+            }
+        });
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    public AlertDialog makeInfoDialog() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setMessage("Checking these boxes, you can select which information you will ask to the volunteer before he/she watches the video." +
+                "\nYou can select none, some or all of them. Also, the volunteer will be able to answer or not. These information will be saved in the results document.");
+        builder.setTitle("Personal information help");
+        builder.setPositiveButton("I got it!", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+            }
+        });
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
     }
 
     @Override
@@ -61,7 +109,10 @@ public void onResume() {
             etFilename.setText(experiment.getFilename());
             etName.setText(experiment.getName());
             etInstructions.setText(experiment.getInstruction());
-            cbAskInfo.setChecked(experiment.isAskInfo());
+            cbAskAge.setChecked(experiment.getAskInfo().askAge());
+            cbAskGender.setChecked(experiment.getAskInfo().askGender());
+            cbAskCons.setChecked(experiment.getAskInfo().askCons());
+            cbAskFam.setChecked(experiment.getAskInfo().askFam());
         } else
             experiment = new TExperiment();
     }
@@ -72,7 +123,7 @@ private void goToPart2() {
             experiment.setName(etName.getText().toString());
             if (etInstructions.getText() != null)
                 experiment.setInstruction(etInstructions.getText().toString());
-            experiment.setAskInfo(cbAskInfo.isChecked());
+            experiment.setAskInfo(new InfoHelper(cbAskAge.isChecked(), cbAskGender.isChecked(), cbAskCons.isChecked(), cbAskFam.isChecked()));
             Bundle extras = new Bundle();
             extras.putSerializable("experiment", experiment);
             Intent intent = new Intent(this, ExperimentMetricsActivity.class);
@@ -109,8 +160,13 @@ public void onClick(View v) {
         etName = (EditText) findViewById(R.id.et_exp_name_ac);
         etFilename = (EditText) findViewById(R.id.et_file_name_ac);
         etInstructions = (EditText) findViewById(R.id.et_instructions_ac);
-        cbAskInfo = (CheckBox) findViewById(R.id.cb_ask_info_ac);
+        cbAskAge = (CheckBox) findViewById(R.id.cb_ask_age_ac);
+        cbAskGender = (CheckBox) findViewById(R.id.cb_ask_gender_ac);
+        cbAskCons = (CheckBox) findViewById(R.id.cb_ask_cons_ac);
+        cbAskFam = (CheckBox) findViewById(R.id.cb_ask_fam_ac);
         ibPt2 = (ImageButton) findViewById(R.id.ib_experiment_pt2);
+        ibFnHelp = (ImageView) findViewById(R.id.im_filename_help);
+        ibInfoHelp = (ImageView) findViewById(R.id.im_info_help);
     }
 
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentMetricsActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentMetricsActivity.java
similarity index 52%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentMetricsActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentMetricsActivity.java
index 681e71d1a4..5166a1aa6c 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentMetricsActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentMetricsActivity.java
@@ -13,27 +13,32 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.experiment;
+package br.rnp.futebol.verona.visual.activity.experiment;
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.View;
 import android.widget.AdapterView;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
 import android.widget.ImageButton;
 import android.widget.ListView;
+import android.widget.TextView;
 
 import com.google.android.exoplayer2.demo.R;
 
+import org.w3c.dom.Text;
+
 import java.util.ArrayList;
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.Metric;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
-import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
+import br.rnp.futebol.verona.pojo.Metric;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.util.ReadyMetrics;
+import br.rnp.futebol.verona.util.adapter.MetricAdapter;
+import br.rnp.futebol.verona.util.adapter.MetricsHeaderLV;
 
 /**
  * An activity for selecting from a list of samples.
@@ -45,6 +50,11 @@
     private List<Metric> metrics;
     private MetricAdapter adapter;
     private ImageButton ibPt3;
+    private CheckBox cbSelectAll;
+    private MetricsHeaderLV lvAdapter;
+    private TextView tvQty;
+    private int cont = 0;
+    private int qosHeaderPos, qoeHeaderPos;
     private TExperiment experiment;
 
     @Override
@@ -55,18 +65,21 @@ public void onCreate(Bundle savedInstanceState) {
         lvMetrics.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                if (metrics.get(position).getType() == Metric.O_QOE) {
-                    if (experiment.getObjectiveQoeMetrics() == null)
-                        experiment.setObjectiveQoeMetrics(new ArrayList<Integer>());
-                    operateMetricsList(experiment.getObjectiveQoeMetrics(), position);
-                } else {
-                    if (experiment.getQosMetrics() == null)
-                        experiment.setQosMetrics(new ArrayList<Integer>());
-                    operateMetricsList(experiment.getQosMetrics(), position);
+                if (position != qoeHeaderPos && position != qosHeaderPos) {
+                    if (metrics.size() > position - 1 && metrics.get(position - 1).getType() == Metric.O_QOE) {
+                        if (experiment.getObjectiveQoeMetrics() == null)
+                            experiment.setObjectiveQoeMetrics(new ArrayList<Integer>());
+                        operateMetricsList(experiment.getObjectiveQoeMetrics(), position - 1);
+                    } else {
+                        if (experiment.getQosMetrics() == null)
+                            experiment.setQosMetrics(new ArrayList<Integer>());
+                        operateMetricsList(experiment.getQosMetrics(), position - 2);
+                    }
+                    refreshList();
                 }
-                refreshList();
             }
         });
+
         ibPt3.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -77,6 +90,33 @@ public void onClick(View v) {
                 startActivity(intent);
             }
         });
+
+
+        cbSelectAll.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                operateAll(isChecked);
+                refreshList();
+            }
+        });
+
+    }
+
+    private void operateAll(boolean readd) {
+        if (experiment.getObjectiveQoeMetrics() != null)
+            experiment.getObjectiveQoeMetrics().clear();
+        else
+            experiment.setObjectiveQoeMetrics(new ArrayList<Integer>());
+        if (experiment.getQosMetrics() != null)
+            experiment.getQosMetrics().clear();
+        else
+            experiment.setQosMetrics(new ArrayList<Integer>());
+        if (readd) {
+            for (Metric m : ReadyMetrics.O_QOE_METRICS)
+                experiment.getObjectiveQoeMetrics().add(m.getId());
+            for (Metric m : ReadyMetrics.QOS_METRICS)
+                experiment.getQosMetrics().add(m.getId());
+        }
     }
 
     private void operateMetricsList(ArrayList<Integer> metricsIds, int position) {
@@ -89,6 +129,8 @@ private void operateMetricsList(ArrayList<Integer> metricsIds, int position) {
     }
 
     private void init() {
+        ReadyMetrics.init();
+        lvAdapter = new MetricsHeaderLV(getBaseContext());
         Toolbar toolbar = (Toolbar) findViewById(R.id.tb_exp_metrics_ac);
         toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
         toolbar.setTitle("New experiment");
@@ -105,29 +147,56 @@ public void onClick(View v) {
         ibPt3 = (ImageButton) findViewById(R.id.ib_exp_pt3);
         lvMetrics = (ListView) findViewById(R.id.lv_exp_metrics_ac);
         metrics = new ArrayList<>();
+        cbSelectAll = (CheckBox) findViewById(R.id.cb_select_all_metrics);
+        tvQty = (TextView) findViewById(R.id.tv_selected_metrics_qty);
     }
 
     private void refreshList() {
-        ReadyMetrics.init();
+        cont++;
         ArrayList<Integer> ids = new ArrayList<>();
         metrics.clear();
         if (experiment.getObjectiveQoeMetrics() != null)
             ids.addAll(experiment.getObjectiveQoeMetrics());
         if (experiment.getQosMetrics() != null)
             ids.addAll(experiment.getQosMetrics());
-        if (ReadyMetrics.O_QOE_METRICS != null)
+        int currentPosition = lvMetrics.getFirstVisiblePosition();
+        lvAdapter.clear();
+        if (ReadyMetrics.O_QOE_METRICS != null) {
             metrics.addAll(ReadyMetrics.O_QOE_METRICS);
-        if (ReadyMetrics.QOS_METRICS != null)
+            qoeHeaderPos = lvAdapter.getCount();
+            lvAdapter.addSectionHeaderItem("Objective QoE");
+            for (Metric m : ReadyMetrics.O_QOE_METRICS) {
+                m.setUsed(ids.contains(m.getId()));
+                lvAdapter.addItem(m);
+            }
+        }
+        if (ReadyMetrics.QOS_METRICS != null) {
             metrics.addAll(ReadyMetrics.QOS_METRICS);
-        if (!ids.isEmpty())
-            for (Metric m : metrics)
-                for (Integer id : ids)
-                    if (id == m.getId())
-                        m.setUsed(true);
-        if (metrics != null) {
-            adapter = new MetricAdapter(this, metrics);
-            lvMetrics.setAdapter(adapter);
+            qosHeaderPos = lvAdapter.getCount();
+            lvAdapter.addSectionHeaderItem("QoS");
+            for (Metric m : ReadyMetrics.QOS_METRICS) {
+                m.setUsed(ids.contains(m.getId()));
+                lvAdapter.addItem(m);
+            }
         }
+
+//        if (!ids.isEmpty())
+//            for (Metric m : metrics)
+//                for (Integer id : ids)
+//                    if (id == m.getId())
+//                        m.setUsed(true);
+//        if (metrics != null) {
+//        if (lvMetrics.getAdapter() == null)
+        lvMetrics.setAdapter(lvAdapter);
+        lvMetrics.setSelection(currentPosition);
+//        else
+//            lvMetrics.getAdapter().notify();
+//            lvAdapter.notifyDataSetChanged();
+//            else
+//                lvMetrics.setAdapter(lvAdapter);
+//        }
+
+        tvQty.setText(ids.size() + " metric(s) selected");
     }
 
     @Override
diff --git a/demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentScriptsActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentScriptsActivity.java
new file mode 100644
index 0000000000..e28aca998c
--- /dev/null
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/experiment/ExperimentScriptsActivity.java
@@ -0,0 +1,414 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package br.rnp.futebol.verona.visual.activity.experiment;
+
+import android.app.AlertDialog;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Environment;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.CheckBox;
+import android.widget.CompoundButton;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.ListView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.exoplayer2.demo.R;
+import com.googlecode.mp4parser.authoring.Edit;
+
+import org.w3c.dom.Text;
+
+import java.io.BufferedWriter;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.zip.Inflater;
+
+import br.rnp.futebol.verona.dao.TExpForListDAO;
+import br.rnp.futebol.verona.dao.TScriptDAO;
+import br.rnp.futebol.verona.pojo.BinaryQuestion;
+import br.rnp.futebol.verona.pojo.Metric;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.ReadyMetrics;
+import br.rnp.futebol.verona.util.adapter.MetricAdapter;
+import br.rnp.futebol.verona.util.adapter.ScriptAdapter;
+import br.rnp.futebol.verona.visual.activity.MainActivity;
+import br.rnp.futebol.verona.visual.activity.script.ScriptMetricsActivity;
+
+/**
+ * An activity for selecting from a list of samples.
+ */
+public class ExperimentScriptsActivity extends AppCompatActivity {
+
+    private static final String TAG = "ExperimentMetrics";
+    private ListView lvScripts;
+    private TScriptDAO dao;
+    private Toolbar toolbar;
+    private ScriptAdapter adapter;
+    private boolean useACR, useDCR;
+    private int repetition = 0;
+    private BinaryQuestion question = null;
+    private TExperiment experiment;
+    private ImageButton ibFinal;
+    private TScript script;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.experiment_scripts_activity);
+        init();
+        refreshList();
+        lvScripts.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (experiment.getScripts() == null)
+                    experiment.setScripts(new ArrayList<TScript>());
+                List<TScript> scripts = dao.getScripts();
+                script = scripts.get(position);
+                if (experiment.getScripts().isEmpty())
+                    makeETDialog();
+//                    addScript(scripts.get(position), position);
+//                    experiment.getScripts().add(scripts.get(position));
+                else {
+                    boolean aux = false;
+                    int cont = 0, pos = -1;
+                    for (TScript s : experiment.getScripts()) {
+                        if (compareScripts(s, scripts.get(position))) {
+                            pos = cont;
+                            aux = true;
+                        }
+                        cont++;
+                    }
+                    if (!aux)
+                        makeETDialog();
+//                        addScript(scripts.get(position), position);
+                    else
+                        experiment.getScripts().remove(pos);
+                }
+                refreshList();
+            }
+        });
+        ibFinal.setOnClickListener(new View.OnClickListener() {
+            String msg;
+
+            @Override
+            public void onClick(View v) {
+                if (experiment.getScripts() != null && !experiment.getScripts().isEmpty()) {
+                    write(experiment.getFilename(), experiment.toJson().toString());
+                    TExpForListDAO dao = new TExpForListDAO(getBaseContext());
+                    dao.insert(experiment);
+                    dao.close();
+                    msg = "Experiment configured!";
+                    Intent intent = new Intent(getApplicationContext(), MainActivity.class);
+                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                    startActivity(intent);
+                    finish();
+                } else
+                    msg = "At least one video should be selected";
+                Toast.makeText(getBaseContext(), msg, Toast.LENGTH_SHORT).show();
+            }
+        });
+    }
+
+    public AlertDialog makeCBDialog() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//        builder.setCon
+        View view = LayoutInflater.from(this).inflate(R.layout.rating_checkbox_dialog, null);
+        final CheckBox cbMale = (CheckBox) view.findViewById(R.id.cb_male_dialog);
+        final CheckBox cbFemale = (CheckBox) view.findViewById(R.id.cb_female_dialog);
+        final TextView tvInfo = (TextView) view.findViewById(R.id.tv_text_info);
+        cbMale.setText("ACR");
+        cbFemale.setText("DCR");
+        builder.setTitle("Video Information - 2/3");
+        builder.setMessage("Please select the metrics");
+        tvInfo.setText("ACR is a scale from 1 to 5 that measures how good was the user experience about the video. DCR is a scale from 1 to 5 that measures how degradated was the user experience comparing the current video to a previous displayed one.");
+        builder.setPositiveButton("Next", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                useACR = cbMale.isChecked();
+                useDCR = cbFemale.isChecked();
+                dialog.dismiss();
+                insertBinaryQuestion();
+            }
+        });
+        builder.setView(view);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    public AlertDialog makeETDialog() {
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//        builder.setCon
+        View view = LayoutInflater.from(this).inflate(R.layout.rating_et_dialog, null);
+        final EditText etRep = (EditText) view.findViewById(R.id.et_dialog_age);
+        etRep.setHint("5, for example");
+        builder.setTitle("Video Information - 1/3");
+        builder.setMessage("Please provide the number of times which the video will be repeated. If empty, the value will be 1.");
+        builder.setCancelable(false);
+        builder.setPositiveButton("Next", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (etRep.getText() == null || etRep.getText().toString().trim().equals(""))
+                    repetition = 1;
+                else
+                    repetition = Integer.parseInt(etRep.getText().toString());
+                dialog.dismiss();
+                makeCBDialog();
+            }
+        });
+        builder.setView(view);
+        AlertDialog dialog = builder.create();
+        dialog.show();
+        return dialog;
+    }
+
+    private void insertBinaryQuestion() {
+        AlertDialog.Builder alert = new AlertDialog.Builder(this);
+        LayoutInflater inflater = getLayoutInflater();
+        View view = inflater.inflate(R.layout.binary_question_form, null);
+        final EditText etQuestion = (EditText) view.findViewById(R.id.et_binary_question);
+        final EditText etAnswer1 = (EditText) view.findViewById(R.id.et_binary_answer_1);
+        final EditText etAnswer2 = (EditText) view.findViewById(R.id.et_binary_answer_2);
+
+        alert.setView(view);
+        alert.setCancelable(false);
+        alert.setTitle("Binary Question");
+        alert.setMessage("The question will be saved only if all three fields are not empty.");
+        alert.setPositiveButton("save", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (etQuestion.getText() != null && !etQuestion.getText().toString().trim().equals("")
+                        && etAnswer1.getText() != null && !etAnswer1.getText().toString().trim().equals("")
+                        && etAnswer2.getText() != null && !etAnswer2.getText().toString().trim().equals("")) {
+                    question = new BinaryQuestion();
+                    question.setQuestion(etQuestion.getText().toString());
+                    question.setAnswer1(etAnswer1.getText().toString());
+                    question.setAnswer2(etAnswer2.getText().toString());
+                    script.setQuestion(question);
+                    if (script.getSubjectiveQoeMetrics() == null)
+                        script.setSubjectiveQoeMetrics(new ArrayList<Integer>());
+                    script.getSubjectiveQoeMetrics().add(ReadyMetrics.BINARY_QUESTION_ID);
+                    if (useACR)
+                        script.getSubjectiveQoeMetrics().add(ReadyMetrics.ACR_ID);
+                    if (useDCR)
+                        script.getSubjectiveQoeMetrics().add(ReadyMetrics.DCR_ID);
+                    script.setLoop(repetition > 0 ? repetition : 1);
+                    experiment.getScripts().add(script);
+                    script = null;
+                    useACR = false;
+                    useDCR = false;
+                    question = null;
+                    repetition = 0;
+                    dialog.dismiss();
+                    refreshList();
+                } else
+                    Toast.makeText(getBaseContext(), "Please provide the question or click in 'Skip'", Toast.LENGTH_SHORT).show();
+            }
+        });
+        alert.setNegativeButton("Skip", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (script.getSubjectiveQoeMetrics() == null)
+                    script.setSubjectiveQoeMetrics(new ArrayList<Integer>());
+                if (useACR)
+                    script.getSubjectiveQoeMetrics().add(ReadyMetrics.ACR_ID);
+                if (useDCR)
+                    script.getSubjectiveQoeMetrics().add(ReadyMetrics.DCR_ID);
+                script.setLoop(repetition > 0 ? repetition : 1);
+                experiment.getScripts().add(script);
+                script = null;
+                useACR = false;
+                useDCR = false;
+                question = null;
+                repetition = 0;
+                dialog.dismiss();
+                refreshList();
+            }
+        });
+        alert.show();
+
+    }
+
+//    private void addScript(TScript script, int pos) {
+//        Intent intent = new Intent(this, ScriptMetricsActivity.class);
+//        Bundle extras = new Bundle();
+//        extras.putSerializable("script", script);
+//        extras.putInt("pos", pos);
+//        intent.putExtras(extras);
+//        startActivityForResult(intent, 1);
+//    }
+
+//    @Override
+//    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+//        super.onActivityResult(requestCode, resultCode, data);
+//        if (requestCode == 1 && resultCode == RESULT_OK) {
+//            if (data != null && data.getExtras() != null) {
+//                TScript temp = (TScript) data.getExtras().get("modScript");
+//                int pos = data.getIntExtra("pos", -1);
+//                if (temp != null) {
+//                    experiment.getScripts().get(pos).setSubjectiveQoeMetrics(temp.getSubjectiveQoeMetrics());
+//                    experiment.getScripts().get(pos).setLoop(temp.getLoop());
+//                    experiment.getScripts().add(temp);
+//                    refreshList();
+//                }
+//            }
+//        }
+//    }
+
+    //    private void addScript(final ArrayList<TScript> myScripts, final TScript selectedScript) {
+//
+//        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+//
+//        builder.setTitle("Set the video for this experiment");
+//        View view = getLayoutInflater().inflate(R.layout.subjective_metric_selection_popup, null);
+//        builder.setView(view);
+//        builder.setCancelable(false);
+////        AlertDialog dialog = builder.create();
+//
+//        final EditText etRep = (EditText) view.findViewById(R.id.et_popup_rep);
+//
+//        ArrayList<Metric> metrics = new ArrayList<>();
+//        ArrayList<Intent> ids = new ArrayList<>();
+//        ListView lvMetrics = (ListView) view.findViewById(R.id.sm_popup_list);
+//
+//        if (ReadyMetrics.S_QOE_METRICS == null)
+//            ReadyMetrics.init();
+//        metrics.addAll(ReadyMetrics.S_QOE_METRICS);
+//
+//        MetricAdapter adapter = new MetricAdapter(this, metrics);
+//        lvMetrics.setAdapter(adapter);
+//        lvMetrics.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+//            @Override
+//            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+//
+//            }
+//        });
+//
+//        builder.setNegativeButton("cancel", new DialogInterface.OnClickListener() {
+//            @Override
+//            public void onClick(DialogInterface dialog, int which) {
+//                dialog.cancel();
+//                dialog.dismiss();
+//            }
+//        });
+//        builder.setPositiveButton("confirm", new DialogInterface.OnClickListener() {
+//            @Override
+//            public void onClick(DialogInterface dialog, int which) {
+//                if (etRep != null && etRep.getText() != null && !etRep.getText().toString().trim().equals(""))
+//                    selectedScript.setLoop(Integer.parseInt(etRep.getText().toString()));
+//                else
+//                    selectedScript.setLoop(1);
+//                myScripts.add(selectedScript);
+//                refreshList();
+//            }
+//        });
+//        builder.show();
+//    }
+
+    private void write(String file, String msg) {
+        try {
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(file.concat(".txt"));
+            BufferedWriter output;
+            output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i(TAG, e.getMessage());
+        }
+    }
+
+    private void init() {
+        Bundle extras = null;
+        if (getIntent() != null)
+            extras = getIntent().getExtras();
+        experiment = (extras != null) ? (TExperiment) extras.getSerializable("experiment") : null;
+        lvScripts = (ListView) findViewById(R.id.lv_exp_scripts_ac);
+        ibFinal = (ImageButton) findViewById(R.id.ib_exp_final);
+        dao = new TScriptDAO(getBaseContext());
+        toolbar = (Toolbar) findViewById(R.id.tb_exp_scripts_ac);
+        toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
+        toolbar.setTitle("New experiment");
+        toolbar.setTitleTextAppearance(this, R.style.ToolbarTitleAppearance);
+        toolbar.setSubtitle("Select which videos will be displayed");
+        toolbar.setSubtitleTextAppearance(this, R.style.ToolbarSubtitleAppearance);
+        setSupportActionBar(toolbar);
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finish();
+            }
+        });
+    }
+
+    private void refreshList() {
+        List<TScript> aux = null;
+        List<TScript> scripts = new TScriptDAO(this).getScripts();
+        if (scripts != null) {
+            aux = scripts;
+            if (experiment.getScripts() != null)
+                if (!experiment.getScripts().isEmpty()) {
+                    for (TScript s : experiment.getScripts()) {
+                        for (TScript sc : aux) {
+                            if (compareScripts(s, sc)) {
+                                sc.setUsedAux(true);
+                                sc.setLoop(s.getLoop());
+                                sc.setSubjectiveQoeMetrics(s.getSubjectiveQoeMetrics());
+                            }
+                        }
+                    }
+                }
+        }
+        if (aux != null && !aux.isEmpty()) {
+            adapter = new ScriptAdapter(this, aux);
+            lvScripts.setAdapter(adapter);
+        }
+    }
+
+    private boolean compareScripts(TScript sc1, TScript sc2) {
+        return (sc1.getAddress().compareTo(sc2.getAddress()) == 0
+                && sc1.getVideo().compareTo(sc2.getVideo()) == 0
+                && sc1.getExtension().compareTo(sc2.getExtension()) == 0);
+    }
+
+//    public static TExperiment getExperiment() {
+//        return experiment;
+//    }
+
+//    public static void setExperiment(TExperiment experiment) {
+//        this.experiment = experiment;
+//    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        if (experiment == null)
+            finish();
+    }
+
+
+}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/script/ScriptGeneralActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/script/ScriptGeneralActivity.java
similarity index 64%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/script/ScriptGeneralActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/script/ScriptGeneralActivity.java
index 62541c9186..e870491803 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/script/ScriptGeneralActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/script/ScriptGeneralActivity.java
@@ -13,13 +13,15 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.script;
+package br.rnp.futebol.verona.visual.activity.script;
 
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.View;
+import android.widget.ArrayAdapter;
+import android.widget.AutoCompleteTextView;
 import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.ImageButton;
@@ -27,20 +29,25 @@
 
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.pojo.TScript;
+import java.util.ArrayList;
+
+import br.rnp.futebol.verona.dao.TScriptDAO;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.visual.activity.MainActivity;
 
 public class ScriptGeneralActivity extends AppCompatActivity {
 
     //    private static final String TAG = "ExperimentMetrics";
     private TScript script;
-    private EditText etAddress, etVideo, etExtension, etLoop;
+    private EditText etVideo, etExtension;
+    private AutoCompleteTextView actvAddress;
     private CheckBox cbUseDash;
     private ImageButton ibPt2;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.script_general_activity);
+        setContentView(R.layout.script_general_activity_simple);
         init();
         ibPt2.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -58,7 +65,7 @@ public void onResume() {
             extras = getIntent().getExtras();
         script = (extras != null) ? (TScript) extras.getSerializable("script") : null;
         if (script != null) {
-            etAddress.setText(script.getAddress());
+            actvAddress.setText(script.getAddress());
             etExtension.setText(script.getExtension());
             etVideo.setText(script.getVideo());
             cbUseDash.setChecked(script.isUseDash());
@@ -67,17 +74,27 @@ public void onResume() {
     }
 
     private void goToPart2() {
-        if (checkField(etAddress) && checkField(etExtension) && checkField(etVideo)) {
-            script.setAddress(etAddress.getText().toString());
+        if (checkField(actvAddress) && checkField(etExtension) && checkField(etVideo)) {
+            script.setAddress(actvAddress.getText().toString());
             script.setExtension(etExtension.getText().toString());
             script.setVideo(etVideo.getText().toString());
             script.setUseDash(cbUseDash.isChecked());
-            script.setLoop(checkField(etLoop) ? Integer.parseInt(etLoop.getText().toString()) : 1);
-            Bundle extras = new Bundle();
-            extras.putSerializable("script", script);
-            Intent intent = new Intent(this, ScriptMetricsActivity.class);
-            intent.putExtras(extras);
+            try {
+                TScriptDAO dao = new TScriptDAO(getBaseContext());
+                dao.insert(script);
+                Toast.makeText(getBaseContext(), "Video registered! Now you can use it on new experiments.", Toast.LENGTH_SHORT).show();
+            } catch (Exception e) {
+                Toast.makeText(getBaseContext(), "Couldn't register video.", Toast.LENGTH_SHORT).show();
+            }
+            Intent intent = new Intent(getApplicationContext(), MainActivity.class);
+            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
             startActivity(intent);
+            finish();
+//            Bundle extras = new Bundle();
+//            extras.putSerializable("script", script);
+//            Intent intent = new Intent(this, ScriptMetricsActivity.class);
+//            intent.putExtras(extras);
+//            startActivity(intent);
         } else {
             Toast.makeText(getBaseContext(), "All fields should be filled", Toast.LENGTH_SHORT).show();
         }
@@ -92,7 +109,7 @@ private boolean checkField(EditText et) {
     }
 
     private void init() {
-        Toolbar toolbar = (Toolbar) findViewById(R.id.tb_script_general_ac);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.tb_script_general_acs);
         toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
         toolbar.setTitle("New Video");
         toolbar.setTitleTextAppearance(this, R.style.ToolbarTitleAppearance);
@@ -105,12 +122,15 @@ public void onClick(View v) {
                 finish();
             }
         });
-        etAddress = (EditText) findViewById(R.id.et_provider_address_ac);
-        etVideo = (EditText) findViewById(R.id.et_video_name_ac);
-        etExtension = (EditText) findViewById(R.id.et_video_extension_ac);
-        cbUseDash = (CheckBox) findViewById(R.id.cb_use_dash_flag_ac);
-        etLoop = (EditText) findViewById(R.id.et_video_loop_ac);
-        ibPt2 = (ImageButton) findViewById(R.id.ib_script_pt2);
+        actvAddress = (AutoCompleteTextView) findViewById(R.id.et_provider_address_acs);
+        TScriptDAO dao = new TScriptDAO(this);
+        ArrayList<String> names = dao.getScriptsName();
+        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_dropdown_item_1line, names);
+        actvAddress.setAdapter(adapter);
+        etVideo = (EditText) findViewById(R.id.et_video_name_acs);
+        etExtension = (EditText) findViewById(R.id.et_video_extension_acs);
+        cbUseDash = (CheckBox) findViewById(R.id.cb_use_dash_flag_acs);
+        ibPt2 = (ImageButton) findViewById(R.id.ib_script_pt2s);
     }
 
 //    private void updateInfo() {
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/script/ScriptMetricsActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/script/ScriptMetricsActivity.java
similarity index 87%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/script/ScriptMetricsActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/script/ScriptMetricsActivity.java
index 858c46b656..4be608bb89 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/script/ScriptMetricsActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/script/ScriptMetricsActivity.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.script;
+package br.rnp.futebol.verona.visual.activity.script;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -34,13 +34,13 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.BinaryQuestion;
-import br.rnp.futebol.vocoliseu.pojo.Metric;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
-import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.MainActivity;
+import br.rnp.futebol.verona.dao.TScriptDAO;
+import br.rnp.futebol.verona.pojo.BinaryQuestion;
+import br.rnp.futebol.verona.pojo.Metric;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.ReadyMetrics;
+import br.rnp.futebol.verona.util.adapter.MetricAdapter;
+import br.rnp.futebol.verona.visual.activity.MainActivity;
 
 /**
  * An activity for selecting from a list of samples.
@@ -52,14 +52,16 @@
     private ListView lvMetrics;
     private List<Metric> metrics;
     private TScript script;
+    private int pos;
     private ImageButton ibSave;
     private BinaryQuestion question = null;
+    private EditText etRep;
     boolean deleted;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.script_metrics_activity);
+        setContentView(R.layout.subjective_metric_selection_popup);
         init();
         lvMetrics.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
@@ -74,12 +76,13 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         ibSave.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                TScriptDAO dao = new TScriptDAO(getBaseContext());
-                dao.insert(script);
-                Toast.makeText(getBaseContext(), "Video registered! Now you can use it on new experiments.", Toast.LENGTH_SHORT).show();
-                Intent intent = new Intent(getApplicationContext(), MainActivity.class);
-                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-                startActivity(intent);
+                int rep = (etRep.getText() != null && !etRep.getText().toString().trim().equals("")) ?
+                        Integer.parseInt(etRep.getText().toString()) : 1;
+                script.setLoop(rep);
+                Intent intent = new Intent();
+                intent.putExtra("modScript", script);
+                intent.putExtra("pos", pos);
+                setResult(RESULT_OK, intent);
                 finish();
             }
         });
@@ -168,7 +171,7 @@ public void onClick(DialogInterface dialog, int which) {
     }
 
     private void init() {
-        Toolbar toolbar = (Toolbar) findViewById(R.id.tb_script_metrics_ac);
+        Toolbar toolbar = (Toolbar) findViewById(R.id.tb_script_metrics_popup);
         toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
         toolbar.setTitle("New video");
         toolbar.setTitleTextAppearance(this, R.style.ToolbarTitleAppearance);
@@ -181,8 +184,9 @@ public void onClick(View v) {
                 finish();
             }
         });
-        lvMetrics = (ListView) findViewById(R.id.lv_script_metrics_ac);
-        ibSave = (ImageButton) findViewById(R.id.ib_script_final);
+        etRep = (EditText) findViewById(R.id.et_popup_rep);
+        lvMetrics = (ListView) findViewById(R.id.sm_popup_list);
+        ibSave = (ImageButton) findViewById(R.id.ib_script_final_popup);
         metrics = new ArrayList<>();
     }
 
@@ -200,7 +204,7 @@ private void refreshList() {
                     if (id == m.getId())
                         m.setUsed(true);
         if (metrics != null) {
-            MetricAdapter adapter = new MetricAdapter(this, metrics);
+            MetricAdapter adapter = new MetricAdapter(this, metrics, false);
             lvMetrics.setAdapter(adapter);
         }
     }
@@ -212,6 +216,7 @@ public void onResume() {
         if (getIntent() != null)
             extras = getIntent().getExtras();
         script = (extras != null) ? (TScript) extras.getSerializable("script") : null;
+        pos = (extras != null) ? extras.getInt("pos") : -1;
         if (script == null)
             finish();
         else
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/DashboardActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/DashboardActivity.java
similarity index 96%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/DashboardActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/DashboardActivity.java
index 7fc1fc2b1a..82dbbb9fa4 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/DashboardActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/DashboardActivity.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.activity.unused;
+package br.rnp.futebol.verona.visual.activity.unused;
 
 import android.Manifest;
 import android.app.AlertDialog;
@@ -18,9 +18,9 @@
 import android.widget.ListView;
 import android.widget.Toast;
 
-import br.rnp.futebol.vocoliseu.dao.unused.ScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.unused.Script;
-import br.rnp.futebol.vocoliseu.util.adapter.ExperimentAdapter;
+import br.rnp.futebol.verona.dao.unused.ScriptDAO;
+import br.rnp.futebol.verona.pojo.unused.Script;
+import br.rnp.futebol.verona.util.adapter.ExperimentAdapter;
 
 import com.google.android.exoplayer2.demo.PlayerActivity;
 import com.google.android.exoplayer2.demo.R;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentConfiguration.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentConfiguration.java
similarity index 95%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentConfiguration.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentConfiguration.java
index 6357005b96..59d0fdce0b 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentConfiguration.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentConfiguration.java
@@ -13,12 +13,8 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.unused;
+package br.rnp.futebol.verona.visual.activity.unused;
 
-import android.Manifest;
-import android.app.Activity;
-import android.content.pm.PackageManager;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Environment;
 import android.support.v4.app.Fragment;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentConfigurationControllerActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentConfigurationControllerActivity.java
similarity index 94%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentConfigurationControllerActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentConfigurationControllerActivity.java
index 591f29c3df..c1a830176a 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentConfigurationControllerActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentConfigurationControllerActivity.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.unused;
+package br.rnp.futebol.verona.visual.activity.unused;
 
 import android.os.Bundle;
 import android.os.Environment;
@@ -26,12 +26,12 @@
 import android.view.MenuItem;
 import android.widget.Toast;
 
-import br.rnp.futebol.vocoliseu.dao.unused.ScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.unused.Script;
-import br.rnp.futebol.vocoliseu.util.adapter.FragmentAdapter;
-import br.rnp.futebol.vocoliseu.pojo.Metric;
+import br.rnp.futebol.verona.dao.unused.ScriptDAO;
+import br.rnp.futebol.verona.pojo.unused.Script;
+import br.rnp.futebol.verona.util.adapter.FragmentAdapter;
+import br.rnp.futebol.verona.pojo.Metric;
 import com.google.android.exoplayer2.demo.R;
-import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
+import br.rnp.futebol.verona.util.ReadyMetrics;
 
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentControllerActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentControllerActivity.java
similarity index 95%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentControllerActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentControllerActivity.java
index f568b8a421..e2d682e2dc 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentControllerActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentControllerActivity.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.unused;
+package br.rnp.futebol.verona.visual.activity.unused;
 
 import android.os.Bundle;
 import android.os.Environment;
@@ -32,9 +32,9 @@
 import java.io.FileWriter;
 import java.io.IOException;
 
-import br.rnp.futebol.vocoliseu.dao.TExpForListDAO;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.util.adapter.ExpFragmentAdapter;
+import br.rnp.futebol.verona.dao.TExpForListDAO;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.util.adapter.ExpFragmentAdapter;
 
 public class ExperimentControllerActivity extends AppCompatActivity {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentGeneralInfoActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentGeneralInfoActivity.java
similarity index 93%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentGeneralInfoActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentGeneralInfoActivity.java
index f82acf4841..92bb1cd1b0 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ExperimentGeneralInfoActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ExperimentGeneralInfoActivity.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.activity.unused;
+package br.rnp.futebol.verona.visual.activity.unused;
 
 import android.os.Bundle;
 import android.os.PersistableBundle;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/InitialActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/InitialActivity.java
similarity index 98%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/InitialActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/InitialActivity.java
index a9e57c992e..e33986fabd 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/InitialActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/InitialActivity.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.activity.unused;
+package br.rnp.futebol.verona.visual.activity.unused;
 
 import android.Manifest;
 import android.content.Intent;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ScriptControllerActivity.java b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ScriptControllerActivity.java
similarity index 94%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ScriptControllerActivity.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ScriptControllerActivity.java
index 966f4cdd3b..b5a2c2f8e0 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/unused/ScriptControllerActivity.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/activity/unused/ScriptControllerActivity.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.activity.unused;
+package br.rnp.futebol.verona.visual.activity.unused;
 
 import android.os.Bundle;
 import android.support.design.widget.TabLayout;
@@ -25,9 +25,9 @@
 
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.adapter.ScriptFragmentAdapter;
+import br.rnp.futebol.verona.dao.TScriptDAO;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.adapter.ScriptFragmentAdapter;
 
 public class ScriptControllerActivity extends AppCompatActivity {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExpListFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/ExpListFragment.java
similarity index 83%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExpListFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/ExpListFragment.java
index e6835fc6e2..605c884f3a 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/ExpListFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/ExpListFragment.java
@@ -1,7 +1,6 @@
-package br.rnp.futebol.vocoliseu.visual.fragment;
+package br.rnp.futebol.verona.visual.fragment;
 
 import android.app.AlertDialog;
-import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.net.Uri;
@@ -20,12 +19,12 @@
 
 import java.util.ArrayList;
 
-import br.rnp.futebol.vocoliseu.dao.TExpForListDAO;
-import br.rnp.futebol.vocoliseu.dao.TExperimentDAO;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.adapter.ExperimentAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.UserActivity;
+import br.rnp.futebol.verona.dao.TExpForListDAO;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.adapter.ExperimentAdapter;
+import br.rnp.futebol.verona.visual.activity.StartActivity;
+import br.rnp.futebol.verona.visual.activity.UserActivity;
 
 public class ExpListFragment extends Fragment {
 
@@ -47,8 +46,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 TExperiment exp = exps.get(position);
-                makeDialog(exp);
-
+//                makeDialog(exp);0
+                Bundle extras = new Bundle();
+                Intent intent = new Intent(getActivity(), StartActivity.class);
+                extras.putSerializable("experiment", exp);
+                intent.putExtras(extras);
+                startActivity(intent);
             }
         });
 
@@ -89,9 +92,11 @@ public void onClick(DialogInterface dialog, int which) {
                 extras.putSerializable("experiment", exp);
 
                 Intent intent;
-                if (exp.isAskInfo()) {
+                if (exp.getAskInfo() != null && (exp.getAskInfo().askAge() || exp.getAskInfo().askFam()
+                        || exp.getAskInfo().askGender() || exp.getAskInfo().askCons())) {
                     intent = new Intent((getActivity().getBaseContext()), UserActivity.class);
                     extras.putString("provider", provider);
+                    extras.putSerializable("askInfo", exp.getAskInfo());
                 } else {
                     intent = new Intent((getActivity().getBaseContext()), PlayerActivity.class);
                     intent.setData(Uri.parse(provider));
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment1.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment1.java
similarity index 69%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment1.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment1.java
index 3f3d33eab3..d4b5e90574 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment1.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment1.java
@@ -1,17 +1,11 @@
-package br.rnp.futebol.vocoliseu.visual.fragment;
+package br.rnp.futebol.verona.visual.fragment;
 
-import android.Manifest;
-import android.content.pm.PackageManager;
-import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
-import android.support.v4.view.ViewPager;
-import android.support.v7.app.AppCompatActivity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.Button;
 
 import com.google.android.exoplayer2.demo.R;
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment2.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment2.java
similarity index 85%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment2.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment2.java
index 7d43b40b19..faf0eba213 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment2.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment2.java
@@ -1,9 +1,8 @@
-package br.rnp.futebol.vocoliseu.visual.fragment;
+package br.rnp.futebol.verona.visual.fragment;
 
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment3.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment3.java
similarity index 85%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment3.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment3.java
index b8599b957a..93fc061298 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/InstructionsFragment3.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/InstructionsFragment3.java
@@ -1,9 +1,8 @@
-package br.rnp.futebol.vocoliseu.visual.fragment;
+package br.rnp.futebol.verona.visual.fragment;
 
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/NoExpsFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/NoExpsFragment.java
similarity index 92%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/NoExpsFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/NoExpsFragment.java
index 23a0f336ce..0d1992ce80 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/NoExpsFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/NoExpsFragment.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.fragment;
+package br.rnp.futebol.verona.visual.fragment;
 
 import android.os.Bundle;
 import android.support.annotation.Nullable;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/VideoListFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/VideoListFragment.java
similarity index 72%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/VideoListFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/VideoListFragment.java
index 2a0c9d4316..0a04a72dc7 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/VideoListFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/VideoListFragment.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.fragment;
+package br.rnp.futebol.verona.visual.fragment;
 
 import android.os.Bundle;
 import android.support.annotation.Nullable;
@@ -12,13 +12,9 @@
 
 import java.util.ArrayList;
 
-import br.rnp.futebol.vocoliseu.dao.TExpForListDAO;
-import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.adapter.ExperimentAdapter;
-import br.rnp.futebol.vocoliseu.util.adapter.VideoAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.MainActivity;
+import br.rnp.futebol.verona.dao.TScriptDAO;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.adapter.VideoAdapter;
 
 public class VideoListFragment extends Fragment {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/DashboardLastVideoFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/DashboardLastVideoFragment.java
similarity index 91%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/DashboardLastVideoFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/DashboardLastVideoFragment.java
index 1c6f7b93d9..940674a9e9 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/DashboardLastVideoFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/DashboardLastVideoFragment.java
@@ -1,4 +1,4 @@
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.os.Bundle;
 import android.support.annotation.Nullable;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentConfigurationGeneralFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentConfigurationGeneralFragment.java
similarity index 96%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentConfigurationGeneralFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentConfigurationGeneralFragment.java
index 466ff9aee6..d8b38b34c8 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentConfigurationGeneralFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentConfigurationGeneralFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.os.Bundle;
 import android.os.Environment;
@@ -26,10 +26,10 @@
 import android.widget.CompoundButton;
 import android.widget.EditText;
 
-import br.rnp.futebol.vocoliseu.pojo.unused.Script;
+import br.rnp.futebol.verona.pojo.unused.Script;
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentConfigurationControllerActivity;
+import br.rnp.futebol.verona.visual.activity.unused.ExperimentConfigurationControllerActivity;
 
 import org.json.JSONException;
 import org.json.JSONObject;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentConfigurationMetricsFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentConfigurationMetricsFragment.java
similarity index 94%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentConfigurationMetricsFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentConfigurationMetricsFragment.java
index 17eb13395d..73defd3e52 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentConfigurationMetricsFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentConfigurationMetricsFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.os.Bundle;
 import android.os.Environment;
@@ -25,12 +25,12 @@
 import android.widget.AdapterView;
 import android.widget.ListView;
 
-import br.rnp.futebol.vocoliseu.pojo.unused.Script;
-import br.rnp.futebol.vocoliseu.pojo.Metric;
-import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
+import br.rnp.futebol.verona.pojo.unused.Script;
+import br.rnp.futebol.verona.pojo.Metric;
+import br.rnp.futebol.verona.util.adapter.MetricAdapter;
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentConfigurationControllerActivity;
+import br.rnp.futebol.verona.visual.activity.unused.ExperimentConfigurationControllerActivity;
 
 import org.json.JSONException;
 import org.json.JSONObject;
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentGeneralFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentGeneralFragment.java
similarity index 92%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentGeneralFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentGeneralFragment.java
index 04158283af..dafb7a20e6 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentGeneralFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentGeneralFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -26,8 +26,8 @@
 
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentControllerActivity;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.visual.activity.unused.ExperimentControllerActivity;
 
 public class ExperimentGeneralFragment extends Fragment {
 
@@ -46,7 +46,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         cbAskInfo.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             @Override
             public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                experiment.setAskInfo(isChecked);
+                experiment.setAskInfo(null);
             }
         });
         etName.setOnFocusChangeListener(new View.OnFocusChangeListener() {
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentMetricsFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentMetricsFragment.java
similarity index 92%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentMetricsFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentMetricsFragment.java
index 94120666b6..4bbace0354 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentMetricsFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentMetricsFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -28,11 +28,11 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.Metric;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
-import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentControllerActivity;
+import br.rnp.futebol.verona.pojo.Metric;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.util.ReadyMetrics;
+import br.rnp.futebol.verona.util.adapter.MetricAdapter;
+import br.rnp.futebol.verona.visual.activity.unused.ExperimentControllerActivity;
 
 /**
  * An activity for selecting from a list of samples.
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentScriptsFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentScriptsFragment.java
similarity index 93%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentScriptsFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentScriptsFragment.java
index 5658cdd5c3..c3591bd08f 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ExperimentScriptsFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ExperimentScriptsFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -28,11 +28,11 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.adapter.ScriptAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.unused.ExperimentControllerActivity;
+import br.rnp.futebol.verona.dao.TScriptDAO;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.adapter.ScriptAdapter;
+import br.rnp.futebol.verona.visual.activity.unused.ExperimentControllerActivity;
 
 /**
  * An activity for selecting from a list of samples.
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ScriptGeneralFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ScriptGeneralFragment.java
similarity index 94%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ScriptGeneralFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ScriptGeneralFragment.java
index b578c56364..9e70a4484c 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ScriptGeneralFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ScriptGeneralFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -26,8 +26,8 @@
 
 import com.google.android.exoplayer2.demo.R;
 
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.visual.activity.unused.ScriptControllerActivity;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.visual.activity.unused.ScriptControllerActivity;
 
 public class ScriptGeneralFragment extends Fragment {
 
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ScriptMetricsFragment.java b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ScriptMetricsFragment.java
similarity index 94%
rename from demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ScriptMetricsFragment.java
rename to demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ScriptMetricsFragment.java
index 8088e62c9f..305074028b 100644
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/fragment/unused/ScriptMetricsFragment.java
+++ b/demo/src/main/java/br/rnp/futebol/verona/visual/fragment/unused/ScriptMetricsFragment.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package br.rnp.futebol.vocoliseu.visual.fragment.unused;
+package br.rnp.futebol.verona.visual.fragment.unused;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -31,12 +31,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import br.rnp.futebol.vocoliseu.pojo.BinaryQuestion;
-import br.rnp.futebol.vocoliseu.pojo.Metric;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
-import br.rnp.futebol.vocoliseu.util.adapter.MetricAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.unused.ScriptControllerActivity;
+import br.rnp.futebol.verona.pojo.BinaryQuestion;
+import br.rnp.futebol.verona.pojo.Metric;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.ReadyMetrics;
+import br.rnp.futebol.verona.util.adapter.MetricAdapter;
+import br.rnp.futebol.verona.visual.activity.unused.ScriptControllerActivity;
 
 /**
  * An activity for selecting from a list of samples.
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/ReadyMetrics.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/util/ReadyMetrics.java
deleted file mode 100644
index 84c213c0b2..0000000000
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/util/ReadyMetrics.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package br.rnp.futebol.vocoliseu.util;
-
-import java.util.ArrayList;
-
-import br.rnp.futebol.vocoliseu.pojo.Metric;
-
-/**
- * Created by camargo on 18/10/16.
- */
-public class ReadyMetrics {
-
-    public static ArrayList<Metric> QOS_METRICS, S_QOE_METRICS, O_QOE_METRICS;
-    public static int BINARY_QUESTION_ID, ACR_ID, DCR_ID;
-
-    public static void init() {
-        int id = 0;
-
-        QOS_METRICS = new ArrayList<>();
-        S_QOE_METRICS = new ArrayList<>();
-        O_QOE_METRICS = new ArrayList<>();
-
-        QOS_METRICS.add(new Metric(++id, "RTT", Metric.QOS));
-        QOS_METRICS.add(new Metric(++id, "Packet Loss", Metric.QOS));
-
-        S_QOE_METRICS.add(new Metric(++id, "ACR scale", Metric.S_QOE));
-        ACR_ID = id;
-        S_QOE_METRICS.add(new Metric(++id, "DCR scale", Metric.S_QOE));
-        DCR_ID = id;
-        S_QOE_METRICS.add(new Metric(++id, "Binary Question", Metric.S_QOE));
-        BINARY_QUESTION_ID = id;
-
-        O_QOE_METRICS.add(new Metric(++id, "Number of Freezes", Metric.O_QOE));
-        O_QOE_METRICS.add(new Metric(++id, "Duration of Freezes", Metric.O_QOE));
-        O_QOE_METRICS.add(new Metric(++id, "Playback start time", Metric.O_QOE));
-        O_QOE_METRICS.add(new Metric(++id, "Initial and Final Resolution (DASH)", Metric.O_QOE));
-        O_QOE_METRICS.add(new Metric(++id, "Initial and Final Bitrate (DASH)", Metric.O_QOE));
-        O_QOE_METRICS.add(new Metric(++id, "Bitrate switches (DASH)", Metric.O_QOE));
-
-    }
-
-
-}
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/AboutActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/AboutActivity.java
deleted file mode 100644
index 01e49d17a1..0000000000
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/AboutActivity.java
+++ /dev/null
@@ -1,27 +0,0 @@
-package br.rnp.futebol.vocoliseu.visual.activity;
-
-import android.Manifest;
-import android.content.Context;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.content.pm.PackageManager;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.v4.view.ViewPager;
-import android.support.v7.app.AppCompatActivity;
-import android.view.View;
-import android.widget.Button;
-
-import com.google.android.exoplayer2.demo.R;
-
-import br.rnp.futebol.vocoliseu.util.adapter.InstructionsFragmentAdapter;
-
-public class AboutActivity extends AppCompatActivity {
-
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.about_activity);
-    }
-}
\ No newline at end of file
diff --git a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentScriptsActivity.java b/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentScriptsActivity.java
deleted file mode 100644
index 13e8afb1cd..0000000000
--- a/demo/src/main/java/br/rnp/futebol/vocoliseu/visual/activity/experiment/ExperimentScriptsActivity.java
+++ /dev/null
@@ -1,193 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package br.rnp.futebol.vocoliseu.visual.activity.experiment;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.os.Environment;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.ImageButton;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.google.android.exoplayer2.demo.R;
-
-import java.io.BufferedWriter;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
-import br.rnp.futebol.vocoliseu.dao.TExpForListDAO;
-import br.rnp.futebol.vocoliseu.dao.TScriptDAO;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.adapter.ScriptAdapter;
-import br.rnp.futebol.vocoliseu.visual.activity.MainActivity;
-
-/**
- * An activity for selecting from a list of samples.
- */
-public class ExperimentScriptsActivity extends AppCompatActivity {
-
-    private static final String TAG = "ExperimentMetrics";
-    private ListView lvScripts;
-    private Toolbar toolbar;
-    private ScriptAdapter adapter;
-    private TExperiment experiment;
-    private ImageButton ibFinal;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.experiment_scripts_activity);
-        init();
-        lvScripts.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-            @Override
-            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                if (experiment.getScripts() == null)
-                    experiment.setScripts(new ArrayList<TScript>());
-                List<TScript> scripts = new TScriptDAO(getBaseContext()).getScripts();
-                if (experiment.getScripts().isEmpty())
-                    experiment.getScripts().add(scripts.get(position));
-                else {
-                    boolean aux = false;
-                    int cont = 0, pos = -1;
-                    for (TScript s : experiment.getScripts()) {
-                        if (compareScripts(s, scripts.get(position))) {
-                            pos = cont;
-                            aux = true;
-                        }
-                        cont++;
-                    }
-                    if (!aux)
-                        experiment.getScripts().add(scripts.get(position));
-                    else
-                        experiment.getScripts().remove(pos);
-                }
-                refreshList();
-            }
-        });
-        ibFinal.setOnClickListener(new View.OnClickListener() {
-            String msg;
-
-            @Override
-            public void onClick(View v) {
-                if (experiment.getScripts() != null && !experiment.getScripts().isEmpty()) {
-                    write(experiment.getFilename(), experiment.toJson().toString());
-                    TExpForListDAO dao = new TExpForListDAO(getBaseContext());
-                    dao.insert(experiment);
-                    dao.close();
-                    msg = "Experiment configured!";
-                    Intent intent = new Intent(getApplicationContext(), MainActivity.class);
-                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-                    startActivity(intent);
-                    finish();
-                } else
-                    msg = "At least one video should be selected";
-                    Toast.makeText(getBaseContext(), msg, Toast.LENGTH_SHORT).show();
-            }
-        });
-    }
-
-    private void write(String file, String msg) {
-        try {
-            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(file.concat(".txt"));
-            BufferedWriter output;
-            output = new BufferedWriter(new FileWriter(csv, true));
-            output.append(msg);
-            output.newLine();
-            output.close();
-        } catch (IOException e) {
-            Log.i(TAG, e.getMessage());
-        }
-    }
-
-    private void init() {
-        lvScripts = (ListView) findViewById(R.id.lv_exp_scripts_ac);
-        ibFinal = (ImageButton) findViewById(R.id.ib_exp_final);
-        toolbar = (Toolbar) findViewById(R.id.tb_exp_scripts_ac);
-        toolbar.setNavigationIcon(R.drawable.ic_arrow_back);
-        toolbar.setTitle("New experiment");
-        toolbar.setTitleTextAppearance(this, R.style.ToolbarTitleAppearance);
-        toolbar.setSubtitle("Select which videos will be displayed");
-        toolbar.setSubtitleTextAppearance(this, R.style.ToolbarSubtitleAppearance);
-        setSupportActionBar(toolbar);
-        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                finish();
-            }
-        });
-    }
-
-    private void refreshList() {
-        List<TScript> aux = null;
-        List<TScript> scripts = new TScriptDAO(this).getScripts();
-        if (scripts != null) {
-            aux = scripts;
-            if (experiment.getScripts() != null)
-                if (!experiment.getScripts().isEmpty()) {
-                    for (TScript s : experiment.getScripts()) {
-                        for (TScript sc : aux) {
-                            if (compareScripts(s, sc))
-                                sc.setUsedAux(true);
-                        }
-                    }
-                }
-        }
-        if (aux != null && !aux.isEmpty()) {
-            adapter = new ScriptAdapter(this, aux);
-            lvScripts.setAdapter(adapter);
-        }
-    }
-
-    private boolean compareScripts(TScript sc1, TScript sc2) {
-        return (sc1.getAddress().compareTo(sc2.getAddress()) == 0
-                && sc1.getVideo().compareTo(sc2.getVideo()) == 0
-                && sc1.getExtension().compareTo(sc2.getExtension()) == 0);
-    }
-
-//    public static TExperiment getExperiment() {
-//        return experiment;
-//    }
-
-//    public static void setExperiment(TExperiment experiment) {
-//        this.experiment = experiment;
-//    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        Bundle extras = null;
-        if (getIntent() != null)
-            extras = getIntent().getExtras();
-        experiment = (extras != null) ? (TExperiment) extras.getSerializable("experiment") : null;
-        if (experiment == null)
-            finish();
-        else
-            refreshList();
-    }
-
-
-}
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java b/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java
index 7fd32ddbe1..603b453c56 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/EventLogger.java
@@ -51,7 +51,7 @@
 /**
  * Logs player events using {@link Log}.
  */
-/* package */ final class EventLogger implements ExoPlayer.EventListener,
+/* package */ public final class EventLogger implements ExoPlayer.EventListener,
     AudioRendererEventListener, VideoRendererEventListener, AdaptiveMediaSourceEventListener,
     ExtractorMediaSource.EventListener, StreamingDrmSessionManager.EventListener,
     MappingTrackSelector.EventListener, MetadataRenderer.Output<List<Id3Frame>> {
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index ea763377ac..3af601942d 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -21,7 +21,9 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
+import android.support.annotation.NonNull;
 import android.text.TextUtils;
+import android.util.Log;
 import android.view.View;
 import android.view.View.OnClickListener;
 import android.widget.Button;
@@ -73,7 +75,7 @@
 import java.util.Map;
 import java.util.UUID;
 
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TExperiment;
 
 /**
  * An activity that plays media using {@link SimpleExoPlayer}.
@@ -113,7 +115,7 @@
     private DataSource.Factory mediaDataSourceFactory;
     private SimpleExoPlayer player;
     private MappingTrackSelector trackSelector;
-    private TrackSelectionHelper trackSelectionHelper;
+    //    private TrackSelectionHelper trackSelectionHelper;
     private VOPlayerHelper debugViewHelper;
     private boolean playerNeedsSource;
 
@@ -127,6 +129,10 @@
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        Log.i("passed", "PASSOUNOONCREATE");
+        Log.i("BNDWTH1", BANDWIDTH_METER.toLog());
+        BANDWIDTH_METER.setBitrateEstimate(-1);
+        Log.i("BNDWTH11", BANDWIDTH_METER.toLog());
         shouldAutoPlay = true;
         userAgent = Util.getUserAgent(this, "ExoPlayerDemo");
         mediaDataSourceFactory = buildDataSourceFactory(true);
@@ -150,6 +156,7 @@ public void onCreate(Bundle savedInstanceState) {
 
     @Override
     public void onNewIntent(Intent intent) {
+        Log.i("passed", "PASSOUNOONNEWINTENT");
         releasePlayer();
         shouldRestorePosition = false;
         setIntent(intent);
@@ -157,6 +164,7 @@ public void onNewIntent(Intent intent) {
 
     @Override
     public void onStart() {
+        Log.i("passed", "PASSOUNOONSTART");
         super.onStart();
         if (Util.SDK_INT > 23) {
             initializePlayer();
@@ -165,6 +173,8 @@ public void onStart() {
 
     @Override
     public void onResume() {
+        Log.i("passed", "PASSOUNOONRESUME");
+        BANDWIDTH_METER.setBitrateEstimate(-1);
         super.onResume();
         if ((Util.SDK_INT <= 23 || player == null)) {
             initializePlayer();
@@ -188,8 +198,8 @@ public void onStop() {
     }
 
     @Override
-    public void onRequestPermissionsResult(int requestCode, String[] permissions,
-                                           int[] grantResults) {
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
+                                           @NonNull int[] grantResults) {
         if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
             initializePlayer();
         } else {
@@ -262,12 +272,15 @@ private void initializePlayer() {
                 }
 
                 eventLogger = new EventLogger();
+                Log.i("BNDWTH2", BANDWIDTH_METER.toLog());
                 TrackSelection.Factory videoTrackSelectionFactory =
                         new AdaptiveVideoTrackSelection.Factory(BANDWIDTH_METER);
                 trackSelector = new DefaultTrackSelector(mainHandler, videoTrackSelectionFactory);
                 trackSelector.addListener(this);
                 trackSelector.addListener(eventLogger);
-                trackSelectionHelper = new TrackSelectionHelper(trackSelector, videoTrackSelectionFactory);
+                if (simpleExoPlayerView.getPlaybackController() != null)
+                    simpleExoPlayerView.getPlaybackController().useCC(false);
+//                trackSelectionHelper = new TrackSelectionHelper(trackSelector, videoTrackSelectionFactory);
                 player = ExoPlayerFactory.newSimpleInstance(this, trackSelector, new DefaultLoadControl(),
                         drmSessionManager, preferExtensionDecoders);
                 player.addListener(this);
@@ -362,7 +375,7 @@ private DrmSessionManager buildDrmSessionManager(UUID uuid, String licenseUrl,
                 FrameworkMediaDrm.newInstance(uuid), drmCallback, null, mainHandler, eventLogger);
     }
 
-    private void releasePlayer() {
+    public void releasePlayer() {
         if (player != null) {
             debugViewHelper.stop();
             debugViewHelper = null;
@@ -380,7 +393,7 @@ private void releasePlayer() {
             player.release();
             player = null;
             trackSelector = null;
-            trackSelectionHelper = null;
+//            trackSelectionHelper = null;
             eventLogger = null;
         }
     }
@@ -393,6 +406,7 @@ private void releasePlayer() {
      * @return A new DataSource factory.
      */
     private DataSource.Factory buildDataSourceFactory(boolean useBandwidthMeter) {
+        Log.i("BNDWTH3", BANDWIDTH_METER.toLog() + " " + useBandwidthMeter);
         return new DefaultDataSourceFactory(this, useBandwidthMeter ? BANDWIDTH_METER : null,
                 buildHttpDataSourceFactory(useBandwidthMeter));
     }
@@ -405,6 +419,7 @@ private void releasePlayer() {
      * @return A new HttpDataSource factory.
      */
     private HttpDataSource.Factory buildHttpDataSourceFactory(boolean useBandwidthMeter) {
+        Log.i("BNDWTH3", BANDWIDTH_METER.toLog() + " " + useBandwidthMeter);
         return new DefaultHttpDataSourceFactory(userAgent, useBandwidthMeter ? BANDWIDTH_METER : null);
     }
 
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/VOPlayerHelper.java b/demo/src/main/java/com/google/android/exoplayer2/demo/VOPlayerHelper.java
index 1895491d81..824138f922 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/VOPlayerHelper.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/VOPlayerHelper.java
@@ -1,7 +1,6 @@
 package com.google.android.exoplayer2.demo;
 
 import android.app.AlertDialog;
-import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -32,17 +31,18 @@
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Calendar;
-import java.util.Collection;
-import java.util.Collections;
 import java.util.Date;
 import java.util.Locale;
 
-import br.rnp.futebol.vocoliseu.pojo.BinaryQuestion;
-import br.rnp.futebol.vocoliseu.pojo.Metric;
-import br.rnp.futebol.vocoliseu.pojo.TExperiment;
-import br.rnp.futebol.vocoliseu.pojo.TScript;
-import br.rnp.futebol.vocoliseu.util.ReadyMetrics;
-import br.rnp.futebol.vocoliseu.visual.activity.MainActivity;
+import br.rnp.futebol.verona.OWAMP.OWAMP;
+import br.rnp.futebol.verona.OWAMP.OWAMPArguments;
+import br.rnp.futebol.verona.OWAMP.OWAMPResult;
+import br.rnp.futebol.verona.pojo.BinaryQuestion;
+import br.rnp.futebol.verona.pojo.Metric;
+import br.rnp.futebol.verona.pojo.TExperiment;
+import br.rnp.futebol.verona.pojo.TScript;
+import br.rnp.futebol.verona.util.ReadyMetrics;
+import br.rnp.futebol.verona.visual.activity.MainActivity;
 
 
 /**
@@ -51,13 +51,13 @@
  */
 public final class VOPlayerHelper implements Runnable, ExoPlayer.EventListener {
 
-    private boolean first = true, written = false, showedQuestion = false;
+    private boolean first = true, showedQuestion = false;
     private final String[] PARAMETERS = {"loop", "index", "experiment", "userInfo"};
     private boolean openedBq, openedACR, openedDCR, finished;
     private int bitrateAux = 0, bseCont = 0, index, loop;
     private static final int REFRESH_INTERVAL_MS = 1000;
     private long playbackStartTime, bufferingStartAux;
-    private boolean readyBq, readyACR, readyDCR;
+    private boolean readyBq, readyACR, readyDCR, mig3to2, mig2to1;
     private double value1 = -1, value2 = -1;
     private final SimpleExoPlayer player;
     private boolean started, isPstFilled;
@@ -66,9 +66,11 @@
     private Runnable mStatusChecker;
     private TExperiment experiment;
     private Handler mHandler;
-    private int mCount = 0;
+    private int mCount = 0, stallAux;
     private Context ctx;
-    private int choose;
+    private boolean bugged;
+    private int choose, rttCont = 0, received = 0, sent = 0, isFrozen = 0;
+    private float rttTotal = 0;
 
     /**
      * @param player   The {@link SimpleExoPlayer} from which debug information should be obtained.
@@ -92,7 +94,7 @@ public void start() {
         if (started) {
             return;
         }
-        written = false;
+//        written = false;
         started = true;
         player.addListener(this);
         updateAndPost();
@@ -122,17 +124,24 @@ public void onLoadingChanged(boolean isLoading) {
     public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
         if (playbackState == ExoPlayer.STATE_BUFFERING && playWhenReady) {
             bufferingStartAux = Calendar.getInstance().getTimeInMillis();
-            if (isPstFilled)
+//            stallAux = player.getStalls();
+            if (isPstFilled) {
+                isFrozen = 1;
                 player.increaseStalls();
-        } else if (playbackState == ExoPlayer.STATE_READY) {
+            }
+        } else if (playbackState == ExoPlayer.STATE_READY && playWhenReady) {
             long bufferingEndAux = Calendar.getInstance().getTimeInMillis();
-            if (isPstFilled)
-                player.setStallsDuration(bufferingEndAux - bufferingStartAux);
-            else {
+            if (isPstFilled) {
+                if (stallAux != playbackState) {
+                    isFrozen = 0;
+                    player.setStallsDuration(bufferingEndAux - bufferingStartAux);
+                }
+            } else {
                 playbackStartTime = bufferingEndAux - bufferingStartAux;
                 isPstFilled = true;
             }
         }
+        stallAux = playbackState;
         updateAndPost();
     }
 
@@ -158,17 +167,69 @@ public void run() {
         updateAndPost();
     }
 
-
     // Private methods.
 
     private void updateAndPost() {
+//        setProvNum();
+        final TScript script = experiment.getScripts().get(index);
+//        AsyncTask.execute(new Runnable() {
+//            @Override
+//            public void run() {
+        if (player.getCurrentPosition() > 10000 && !mig3to2) {
+//            migrate(3, 2, true);
+            mig3to2 = true;
+        } else if (player.getCurrentPosition() > 100000 && !mig2to1) {
+//            migrate(2, 1, true);
+            mig2to1 = true;
+        }
+
+        if (player.getCurrentPosition() > (player.getDuration() - 1500))
+            bugged = true;
+//            }
+//        });
+
 //    textView.setText(getPlayerStateString() + getPlayerWindowIndexString() + getVideoString() + getAudioString());
 //    textView.setText(getPlayerStateString() + "Buffer Percentage: " + player.getBufferedPercentage() + "%\n" +
 //                     "Buffer Position: " + player.getBufferedPosition() + "\n");
 //        Log.i("PLAYBACKSTATE", player.getPlaybackState() + "");
 //        Toast.makeText(ctx, "" + player.getPlaybackState(), Toast.LENGTH_SHORT).show();
-        if (!(player.getPlaybackState() == ExoPlayer.STATE_ENDED)) {
-//            textView.setText(getLogString());
+        if (!(player.getPlaybackState() == ExoPlayer.STATE_ENDED) && !bugged) {
+            textView.setText(getLogString());
+//            if (experiment.getQosMetrics().contains(1) || experiment.getQosMetrics().contains(2)) {
+            String provAux = script.getAddress();
+            OWAMPResult rtt = null;
+            if (provAux != null) {
+                rtt = measureRTT(provAux);
+                if (rtt == null) {
+                    provAux = provAux.substring(provAux.indexOf("//") + 2, provAux.length());
+                    rtt = measureRTT(provAux);
+                    if (rtt == null) {
+                        if (provAux.contains("/"))
+                            provAux = provAux.substring(0, provAux.indexOf("/"));
+                        if (provAux.contains(":"))
+                            provAux = provAux.substring(0, provAux.indexOf(":"));
+                        rtt = measureRTT(provAux);
+                    }
+                }
+            }
+            String bsbCsv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat("_sbs.csv"));
+            File header = new File(bsbCsv);
+            if (!header.exists())
+                writePerSecond(getHeaderBsb());
+            Format format = player.getVideoFormat();
+            if (rtt != null) {
+                rttTotal += rtt.getRtt_avg();
+                rttCont++;
+                received += rtt.getReceived();
+                sent += rtt.getTransmitted();
+                if (format != null)
+                    writePerSecond(loop + "," + player.getCurrentPosition() / 1000 + "," + rtt.getRtt_avg() + "," + (100 - (100 * rtt.getReceived() / rtt.getTransmitted())) + "," + isFrozen + "," + format.bitrate + "," + format.width + "x" + format.height);
+            } else {
+                if (format != null)
+                    writePerSecond(loop + "," + player.getCurrentPosition() / 1000 + ",,," + isFrozen + "," + format.bitrate + "," + format.width + "x" + format.height);
+            }
+
+//            }
             textView.removeCallbacks(this);
             textView.postDelayed(this, REFRESH_INTERVAL_MS);
         } else {
@@ -179,9 +240,8 @@ private void updateAndPost() {
 //            DialogInterface.OnClickListener listener;
             File header = new File(csv);
             if (!header.exists())
-                write(getHeader(), false);
+                write(getHeader());
             if (!showedQuestion) {
-                final TScript script = experiment.getScripts().get(index);
                 ArrayList<Metric> metricsAux = checkMetrics(script.getSubjectiveQoeMetrics());
                 if (metricsAux != null) {
                     final ArrayList<Metric> metrics = orderMetrics(metricsAux);
@@ -216,7 +276,7 @@ public void onClick(DialogInterface dialog, int which) {
                                     finished = true;
                                     stopRepeatingTask();
                                     write(buildCsvText().concat(dot()).concat(star(value1)).concat(dot()).concat(star(value2))
-                                            .concat(dot()).concat(questionToCsv(script.getQuestion(), choose)), true);
+                                            .concat(dot()).concat(questionToCsv(script.getQuestion(), choose)));
                                     nextLoop(script);
                                 }
                             }
@@ -224,12 +284,39 @@ public void onClick(DialogInterface dialog, int which) {
                     };
                     mHandler = new Handler();
                     startRepeatingTask();
+                } else {
+                    showedQuestion = true;
+                    write(buildCsvText().concat(appendDot(3)));
+                    nextLoop(script);
                 }
             }
 
         }
     }
 
+    public void deleteCache(Context context) {
+        try {
+            File dir = context.getCacheDir();
+            if (dir != null && dir.isDirectory()) {
+                deleteDir(dir);
+            }
+        } catch (Exception e) {
+            Log.i("error", e.getMessage());
+        }
+    }
+
+    public boolean deleteDir(File dir) {
+        if (dir != null && dir.isDirectory()) {
+            String[] children = dir.list();
+            for (String s : children) {
+                boolean success = deleteDir(new File(dir, s));
+                if (!success)
+                    return false;
+            }
+        }
+        return dir != null && dir.delete();
+    }
+
     private boolean allReady() {
         return readyBq && readyACR && readyDCR;
     }
@@ -298,14 +385,28 @@ private String title(int i, int t) {
         return "Evaluation " + i + " of " + t;
     }
 
+    @SuppressWarnings("unused")
     private boolean isACR(int mId) {
         return (mId == ReadyMetrics.ACR_ID);
     }
 
     private void nextLoop(TScript script) {
+//        ((PlayerActivityWithMigration) ctx).releasePlayer();
+//        AsyncTask.execute(new Runnable() {
+//            @Override
+//            public void run() {
+//        migrate(1, 3, false);
+//            }
+//        });
+//        mig2to1 = true;
+//        mig3to2 = true;
         if (script.getLoop() - loop > 0) {
             loop++;
         } else if (experiment.getScripts().size() > index + 1) {
+//            if (index == 0)
+//                migrate(3, 2, true);
+//            else if (index == 1)
+//                migrate(2, 1, true);
             index++;
             loop = 1;
         } else {
@@ -314,8 +415,9 @@ private void nextLoop(TScript script) {
         }
         Toast.makeText(ctx, "Starting next video", Toast.LENGTH_SHORT).show();
         try {
-            wait(2000L);
+            deleteCache(ctx);
         } catch (Exception e) {
+            Log.i("error", e.getMessage());
         }
 //        mHandler.postDelayed(mStatusChecker, 500);
         Bundle extras = new Bundle();
@@ -326,8 +428,8 @@ private void nextLoop(TScript script) {
 
         Intent intent = new Intent(ctx, PlayerActivity.class);
         intent.putExtras(extras);
-
-        intent.setData(Uri.parse(script.getProvider()));
+        String provider = experiment.getScripts().get(index).getProvider();
+        intent.setData(Uri.parse(provider));
         intent.setAction(PlayerActivity.ACTION_VIEW);
 
         ctx.startActivity(intent);
@@ -353,7 +455,7 @@ private String buildCsvText() {
         ArrayList<Integer> metrics = experiment.getObjectiveQoeMetrics();
         Format format = player.getVideoFormat();
         SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy-HH:mm:ss", Locale.US);
-        String txt = sdf.format(new Date());
+        String txt = loop + "," + sdf.format(new Date());
         if (metrics.contains(6))
             txt += "," + player.getStalls();
         if (metrics.contains(7))
@@ -364,35 +466,50 @@ private String buildCsvText() {
             txt += "," + initialRes + "," + format.width + "x" + format.height;
         if (metrics.contains(10))
             txt += "," + initialBR + "," + format.bitrate;
-        if (userInfo != null) {
+        metrics = experiment.getQosMetrics();
+        if (metrics.contains(1))
+            txt += "," + (rttTotal / rttCont);
+        if (metrics.contains(2))
+            if (sent != 0)
+                txt += "," + (100 - ((received * 100) / sent)) + "%";
+            else
+                txt += ",";
+        if (userInfo != null)
             try {
                 JSONObject json = new JSONObject(userInfo);
-                txt += "," + json.getString("age") + "," + json.getString("gender")
-                        + "," + json.getString("consumption") + "," + json.getString("familiar");
+                if (json.has("age"))
+                    txt += "," + json.getString("age");
+                else
+                    txt += ",";
+                if (json.has("gender"))
+                    txt += "," + json.getString("gender");
+                else
+                    txt += ",";
+                if (json.has("consumption"))
+                    txt += "," + json.getString("consumption");
+                else
+                    txt += ",";
+                if (json.has("familiar"))
+                    txt += "," + json.getString("familiar");
+                else
+                    txt += ",";
             } catch (Exception e) {
-                txt += ",,,,";
+                Log.i("error", "Error reading personal info");
             }
-        } else {
-            txt += ",,,,";
-        }
         txt += "";
         return txt;
     }
 
     private String getLogString() {
-        StringBuilder builder = new StringBuilder();
-        builder.append(getStatusString());
-//    builder.append(getPlayerWindowIndexString());
-        builder.append(getPlayerStateString());
-        builder.append(getBufferProgress());
-        builder.append(getVideoString());
-        builder.append(getAudioString());
-//    builder.append(getDecoderCountersBufferCountString("Video", player.getVideoDecoderCounters()));
-//    builder.append(getDecoderCountersBufferCountString("Audio", player.getAudioDecoderCounters()));
-        builder.append(getStallsString());
-        builder.append("\nLoop: " + loop);
-        builder.append("\nIndex: " + index);
-        return builder.toString();
+        String txt = "";
+        txt += getStatusString();
+        txt += getPlayerStateString();
+        txt += getBufferProgress();
+        txt += getVideoString();
+        txt += getAudioString();
+        txt += getStallsString();
+        txt += "\nLoop: " + loop + "/" + experiment.getScripts().get(index).getLoop();
+        return txt;
     }
 
     private String getPlayerStateString() {
@@ -419,7 +536,7 @@ private String getPlayerStateString() {
 
     private String getHeader() {
         ArrayList<Integer> metrics = experiment.getObjectiveQoeMetrics();
-        String txt = "Timestamp";
+        String txt = "Repetition,Timestamp";
         if (metrics.contains(6))
             txt += ",Freezes";
         if (metrics.contains(7))
@@ -430,10 +547,21 @@ private String getHeader() {
             txt += ",Initial Res,Final Res";
         if (metrics.contains(10))
             txt += ",Initial Bitrate,Final Bitrate";
-        txt += ",Age,Gender,Consumption Level,Familiarity,ACR,DCR,Binary Question,Answer";
+        metrics = experiment.getQosMetrics();
+        if (metrics.contains(1))
+            txt += ",Average RTT";
+        if (metrics.contains(2))
+            txt += ",Packet Loss";
+        if (userInfo != null)
+            txt += ",Age,Gender,Consumption Level,Familiarity";
+        txt += ",ACR,DCR,Binary Question,Answer";
         return txt;
     }
 
+    private String getHeaderBsb() {
+        return "Repetition,Position,RTT,Packet Loss,is Frozen,Bitrate,Resolution";
+    }
+
     public AlertDialog makeCompleteDialog(String title, String message, String okt, String cancelt, Context ctx,
                                           DialogInterface.OnClickListener ok, DialogInterface.OnClickListener cancel) {
         AlertDialog.Builder builder = new AlertDialog.Builder(ctx);
@@ -447,6 +575,11 @@ public AlertDialog makeCompleteDialog(String title, String message, String okt,
         return dialog;
     }
 
+    private OWAMPResult measureRTT(String ip) {
+        OWAMPArguments args = new OWAMPArguments.Builder().url(ip).timeout(5).count(1).bytes(32).build();
+        return OWAMP.ping(args, OWAMP.Backend.UNIX);
+    }
+
     public AlertDialog makeAcrDcrDialog(String title, final boolean isAcr) {
         AlertDialog.Builder builder = new AlertDialog.Builder(ctx);
 //        builder.setCon
@@ -480,6 +613,7 @@ public AlertDialog makeQuestion(String title, BinaryQuestion bq, DialogInterface
         return makeCompleteDialog(title, bq.getQuestion(), bq.getAnswer1(), bq.getAnswer2(), ctx, ok, cancel);
     }
 
+    @SuppressWarnings("unused")
     public AlertDialog makeDialog(String title, String message, Context myContext, DialogInterface.OnClickListener listener) {
         AlertDialog.Builder builder = new AlertDialog.Builder(myContext);
         builder.setMessage(message);
@@ -516,6 +650,7 @@ private String getStallsString() {
         return text;
     }
 
+    @SuppressWarnings("unused")
     private String getStatusString() {
         String status = ("Ready to Play: ");
         status += (player.getPlayWhenReady());
@@ -524,16 +659,31 @@ private String getStatusString() {
         return status;
     }
 
-    private void write(String msg, boolean written) {
+    private void write(String msg) {
+//    }, boolean written) {
         try {
-            this.written = written;
+//            this.written = written;
             String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat(".csv"));
             BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
             output.append(msg);
             output.newLine();
             output.close();
         } catch (IOException e) {
-            Log.i("teste", e.getMessage());
+            Log.i("Error", e.getMessage());
+        }
+    }
+
+    private void writePerSecond(String msg) {
+//        , boolean written) {
+        try {
+//            this.writenBsb = written;
+            String csv = Environment.getExternalStorageDirectory().getAbsolutePath() + "/".concat(experiment.getFilename().concat("_sbs.csv"));
+            BufferedWriter output = new BufferedWriter(new FileWriter(csv, true));
+            output.append(msg);
+            output.newLine();
+            output.close();
+        } catch (IOException e) {
+            Log.i("Error", e.getMessage());
         }
     }
 
@@ -545,6 +695,7 @@ private String getBufferProgress() {
         return text;
     }
 
+    @SuppressWarnings("unused")
     private String getPlayerWindowIndexString() {
         String index = ("\nPeriod Index: ");
         index += (player.getCurrentPeriodIndex());
@@ -598,6 +749,7 @@ private String getAudioString() {
 //                + getDecoderCountersBufferCountString(player.getAudioDecoderCounters()) + ")";
     }
 
+    @SuppressWarnings("unused")
     private String getDecoderCountersBufferCountString(String type, DecoderCounters counters) {
         if (counters == null) {
             return "";
diff --git a/demo/src/main/res/drawable-hdpi/blue_verona.png b/demo/src/main/res/drawable-hdpi/blue_verona.png
new file mode 100644
index 0000000000..1ac542c8f3
Binary files /dev/null and b/demo/src/main/res/drawable-hdpi/blue_verona.png differ
diff --git a/demo/src/main/res/drawable-hdpi/experiment_blue.png b/demo/src/main/res/drawable-hdpi/experiment_blue.png
new file mode 100644
index 0000000000..0908028a4f
Binary files /dev/null and b/demo/src/main/res/drawable-hdpi/experiment_blue.png differ
diff --git a/demo/src/main/res/drawable-hdpi/ic_clean.png b/demo/src/main/res/drawable-hdpi/ic_clean.png
new file mode 100644
index 0000000000..02b8d030d5
Binary files /dev/null and b/demo/src/main/res/drawable-hdpi/ic_clean.png differ
diff --git a/demo/src/main/res/drawable-hdpi/ic_info_aux.png b/demo/src/main/res/drawable-hdpi/ic_info_aux.png
new file mode 100644
index 0000000000..a2a3b2644b
Binary files /dev/null and b/demo/src/main/res/drawable-hdpi/ic_info_aux.png differ
diff --git a/demo/src/main/res/drawable-hdpi/ic_open.png b/demo/src/main/res/drawable-hdpi/ic_open.png
new file mode 100644
index 0000000000..f50e6aaa44
Binary files /dev/null and b/demo/src/main/res/drawable-hdpi/ic_open.png differ
diff --git a/demo/src/main/res/drawable-hdpi/white_verona.png b/demo/src/main/res/drawable-hdpi/white_verona.png
new file mode 100644
index 0000000000..4dd024aeff
Binary files /dev/null and b/demo/src/main/res/drawable-hdpi/white_verona.png differ
diff --git a/demo/src/main/res/drawable-mdpi/experiment_blue.png b/demo/src/main/res/drawable-mdpi/experiment_blue.png
new file mode 100644
index 0000000000..725cf720bc
Binary files /dev/null and b/demo/src/main/res/drawable-mdpi/experiment_blue.png differ
diff --git a/demo/src/main/res/drawable-mdpi/ic_clean.png b/demo/src/main/res/drawable-mdpi/ic_clean.png
new file mode 100644
index 0000000000..22191fb284
Binary files /dev/null and b/demo/src/main/res/drawable-mdpi/ic_clean.png differ
diff --git a/demo/src/main/res/drawable-mdpi/ic_info_aux.png b/demo/src/main/res/drawable-mdpi/ic_info_aux.png
new file mode 100644
index 0000000000..a4155754e3
Binary files /dev/null and b/demo/src/main/res/drawable-mdpi/ic_info_aux.png differ
diff --git a/demo/src/main/res/drawable-mdpi/ic_open.png b/demo/src/main/res/drawable-mdpi/ic_open.png
new file mode 100644
index 0000000000..0924be3cd3
Binary files /dev/null and b/demo/src/main/res/drawable-mdpi/ic_open.png differ
diff --git a/demo/src/main/res/drawable-xhdpi/experiment_blue.png b/demo/src/main/res/drawable-xhdpi/experiment_blue.png
new file mode 100644
index 0000000000..45b1e6b061
Binary files /dev/null and b/demo/src/main/res/drawable-xhdpi/experiment_blue.png differ
diff --git a/demo/src/main/res/drawable-xhdpi/ic_clean.png b/demo/src/main/res/drawable-xhdpi/ic_clean.png
new file mode 100644
index 0000000000..2c595c5b32
Binary files /dev/null and b/demo/src/main/res/drawable-xhdpi/ic_clean.png differ
diff --git a/demo/src/main/res/drawable-xhdpi/ic_info_aux.png b/demo/src/main/res/drawable-xhdpi/ic_info_aux.png
new file mode 100644
index 0000000000..a1192d261d
Binary files /dev/null and b/demo/src/main/res/drawable-xhdpi/ic_info_aux.png differ
diff --git a/demo/src/main/res/drawable-xhdpi/ic_open.png b/demo/src/main/res/drawable-xhdpi/ic_open.png
new file mode 100644
index 0000000000..81ba236664
Binary files /dev/null and b/demo/src/main/res/drawable-xhdpi/ic_open.png differ
diff --git a/demo/src/main/res/drawable-xxhdpi/experiment_blue.png b/demo/src/main/res/drawable-xxhdpi/experiment_blue.png
new file mode 100644
index 0000000000..a2406a57c8
Binary files /dev/null and b/demo/src/main/res/drawable-xxhdpi/experiment_blue.png differ
diff --git a/demo/src/main/res/drawable-xxhdpi/ic_clean.png b/demo/src/main/res/drawable-xxhdpi/ic_clean.png
new file mode 100644
index 0000000000..84a14f3ffe
Binary files /dev/null and b/demo/src/main/res/drawable-xxhdpi/ic_clean.png differ
diff --git a/demo/src/main/res/drawable-xxhdpi/ic_info_aux.png b/demo/src/main/res/drawable-xxhdpi/ic_info_aux.png
new file mode 100644
index 0000000000..2e92a3566b
Binary files /dev/null and b/demo/src/main/res/drawable-xxhdpi/ic_info_aux.png differ
diff --git a/demo/src/main/res/drawable-xxhdpi/ic_open.png b/demo/src/main/res/drawable-xxhdpi/ic_open.png
new file mode 100644
index 0000000000..e7b679bb78
Binary files /dev/null and b/demo/src/main/res/drawable-xxhdpi/ic_open.png differ
diff --git a/demo/src/main/res/layout/about_activity.xml b/demo/src/main/res/layout/about_activity.xml
index 2501af4b8d..232b75f73f 100644
--- a/demo/src/main/res/layout/about_activity.xml
+++ b/demo/src/main/res/layout/about_activity.xml
@@ -1,71 +1,73 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:background="@color/def"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    android:background="@color/wht">
 
 
     <ImageView
+        android:id="@+id/img_about"
         android:layout_width="150dp"
         android:layout_height="150dp"
-        android:id="@+id/img_about"
-        android:background="@drawable/vo_icon_white"
+        android:layout_centerHorizontal="true"
         android:layout_centerVertical="true"
-        android:layout_centerHorizontal="true" />
+        android:background="@drawable/white_verona" />
 
     <TextView
+        android:id="@+id/tv_about_1"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
+        android:layout_above="@+id/tv_about_2"
+        android:layout_centerHorizontal="true"
         android:text="@string/application_name"
         android:textColor="@color/wht"
-        android:textStyle="bold"
         android:textSize="24sp"
-        android:id="@+id/tv_about_1"
-        android:layout_above="@+id/tv_about_2"
-        android:layout_centerHorizontal="true" />
+        android:textStyle="bold" />
 
     <TextView
+        android:id="@+id/tv_about_2"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/version"
-        android:id="@+id/tv_about_2"
-        android:textColor="@color/wht"
+        android:layout_above="@+id/img_about"
+        android:layout_centerHorizontal="true"
         android:layout_marginBottom="20dp"
         android:layout_marginTop="5dp"
-        android:layout_above="@+id/img_about"
-        android:layout_centerHorizontal="true" />
+        android:text="@string/version"
+        android:textColor="@color/wht" />
 
     <TextView
+        android:id="@+id/tv_about_3"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/developed"
-        android:textColor="@color/wht"
-        android:id="@+id/tv_about_3"
-        android:gravity="center"
-        android:layout_marginTop="20dp"
         android:layout_below="@+id/img_about"
-        android:layout_centerHorizontal="true" />
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="20dp"
+        android:gravity="center"
+        android:text="@string/developed"
+        android:textColor="@color/wht" />
 
     <TextView
+        android:id="@+id/tv_about_4"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/futebol"
-        android:textColor="@color/wht"
-        android:id="@+id/tv_about_4"
-        android:layout_marginTop="5dp"
         android:layout_below="@+id/tv_about_3"
-        android:layout_centerHorizontal="true" />
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="5dp"
+        android:text="@string/futebol"
+        android:textColor="@color/wht" />
 
     <!--<RelativeLayout-->
-        <!--android:id="@+id/rel_border_left"-->
-        <!--android:layout_width="50dp"-->
-        <!--android:layout_height="match_parent"-->
-        <!--android:layout_alignParentStart="true"/>-->
-<!---->
+    <!--android:id="@+id/rel_border_left"-->
+    <!--android:layout_width="50dp"-->
+    <!--android:layout_height="match_parent"-->
+    <!--android:layout_alignParentStart="true"/>-->
+    <!---->
     <!--<RelativeLayout-->
-        <!--android:layout_width="50dp"-->
-        <!--android:id="@+id/rel_border_right"-->
-        <!--android:layout_height="match_parent"-->
-        <!--android:layout_alignParentEnd="true"/>-->
+    <!--android:layout_width="50dp"-->
+    <!--android:id="@+id/rel_border_right"-->
+    <!--android:layout_height="match_parent"-->
+    <!--android:layout_alignParentEnd="true"/>-->
+
+
 
 </RelativeLayout>
diff --git a/demo/src/main/res/layout/app_bar_main.xml b/demo/src/main/res/layout/app_bar_main.xml
index 076614e0e6..33a2bbea30 100644
--- a/demo/src/main/res/layout/app_bar_main.xml
+++ b/demo/src/main/res/layout/app_bar_main.xml
@@ -6,7 +6,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:fitsSystemWindows="true"
-    tools:context="br.rnp.futebol.vocoliseu.visual.activity.MainActivity">
+    tools:context="br.rnp.futebol.verona.visual.activity.MainActivity">
 
     <android.support.design.widget.AppBarLayout
         android:layout_height="wrap_content"
@@ -20,6 +20,16 @@
             android:background="?attr/colorPrimary"
             app:popupTheme="@style/AppTheme.PopupOverlay" />
 
+        <android.support.design.widget.TabLayout
+            android:id="@+id/tl_main"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/toolbar"
+            android:background="?attr/colorPrimary"
+            android:elevation="6dp"
+            android:minHeight="?attr/actionBarSize"
+            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+
     </android.support.design.widget.AppBarLayout>
 
     <include layout="@layout/content_main"/>
diff --git a/demo/src/main/res/layout/app_bar_script_gen.xml b/demo/src/main/res/layout/app_bar_script_gen.xml
index d06de78314..c45339924f 100644
--- a/demo/src/main/res/layout/app_bar_script_gen.xml
+++ b/demo/src/main/res/layout/app_bar_script_gen.xml
@@ -6,7 +6,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:fitsSystemWindows="true"
-    tools:context="br.rnp.futebol.vocoliseu.visual.activity.MainActivity">
+    tools:context="br.rnp.futebol.verona.visual.activity.MainActivity">
 
     <android.support.design.widget.AppBarLayout
         android:layout_height="wrap_content"
diff --git a/demo/src/main/res/layout/coded_merge.xml b/demo/src/main/res/layout/coded_merge.xml
new file mode 100644
index 0000000000..87e59f9c66
--- /dev/null
+++ b/demo/src/main/res/layout/coded_merge.xml
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/tb_cc_title"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:background="?attr/colorPrimary"
+        android:elevation="6dp"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="START"
+        android:gravity="center"
+        android:ems="15"
+        android:background="@drawable/bt_dark_style"
+        android:id="@+id/bt_merge_test"
+        android:textColor="@color/wht"
+        android:layout_marginTop="30dp"
+        android:layout_below="@+id/et_cc_chunk"
+        android:layout_centerHorizontal="true" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/et_cc_name"
+        android:gravity="center"
+        android:layout_marginTop="30dp"
+        android:ems="12"
+        android:hint="Video name"
+        android:layout_below="@+id/tb_cc_title"
+        android:layout_centerHorizontal="true" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/et_cc_provider"
+        android:hint="Provider"
+        android:layout_below="@+id/et_cc_name"
+        android:gravity="center"
+        android:ems="12"
+        android:layout_centerHorizontal="true" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:inputType="textPersonName"
+        android:hint="Extension"
+        android:gravity="center"
+        android:layout_below="@+id/et_cc_provider"
+        android:ems="12"
+        android:id="@+id/et_cc_ext"
+        android:layout_centerHorizontal="true" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/et_cc_parts"
+        android:layout_below="@+id/et_cc_ext"
+        android:gravity="center"
+        android:ems="12"
+        android:inputType="number"
+        android:hint="Number of Parts"
+        android:layout_centerHorizontal="true" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/et_cc_chunk"
+        android:layout_below="@+id/et_cc_parts"
+        android:gravity="center"
+        android:ems="12"
+        android:inputType="number"
+        android:hint="Chunk Duration"
+        android:layout_centerHorizontal="true" />
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/content_main.xml b/demo/src/main/res/layout/content_main.xml
index 6887335a73..a28a08960b 100644
--- a/demo/src/main/res/layout/content_main.xml
+++ b/demo/src/main/res/layout/content_main.xml
@@ -5,11 +5,9 @@ xmlns:tools="http://schemas.android.com/tools"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
-android:paddingLeft="@dimen/activity_horizontal_margin"
-android:paddingRight="@dimen/activity_horizontal_margin"
 app:layout_behavior="@string/appbar_scrolling_view_behavior"
 tools:showIn="@layout/app_bar_main"
-tools:context="br.rnp.futebol.vocoliseu.visual.activity.MainActivity">
+tools:context="br.rnp.futebol.verona.visual.activity.MainActivity">
 
 <android.support.v4.view.ViewPager
     android:id="@+id/vp_dashboard"
diff --git a/demo/src/main/res/layout/exp_item.xml b/demo/src/main/res/layout/exp_item.xml
index 05df28c518..0445017067 100644
--- a/demo/src/main/res/layout/exp_item.xml
+++ b/demo/src/main/res/layout/exp_item.xml
@@ -52,7 +52,7 @@
         android:layout_height="40dp"
         android:contentDescription="@string/script"
         android:layout_marginStart="6dp"
-        android:src="@drawable/vo_icon"
+        android:src="@drawable/blue_verona"
         android:id="@+id/img_static_icon"
         android:layout_alignTop="@+id/tv_exp_item_name"
         android:layout_alignParentStart="true"
diff --git a/demo/src/main/res/layout/experiment_general_activity.xml b/demo/src/main/res/layout/experiment_general_activity.xml
index 7942001728..4d523be885 100644
--- a/demo/src/main/res/layout/experiment_general_activity.xml
+++ b/demo/src/main/res/layout/experiment_general_activity.xml
@@ -63,16 +63,46 @@
     <!--android:layout_below="@+id/et_file_name">-->
 
     <CheckBox
-        android:id="@+id/cb_ask_info_ac"
+        android:id="@+id/cb_ask_age_ac"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_alignEnd="@+id/et_file_name_ac"
         android:layout_alignStart="@+id/et_file_name_ac"
         android:layout_below="@+id/et_file_name_ac"
         android:checked="false"
-        android:gravity="center"
-        android:hint="@string/ask_info_description"
-        android:text="@string/ask_info" />
+        android:layout_marginTop="15dp"
+        android:layout_marginBottom="3dp"
+        android:text="@string/ask_age" />
+
+    <CheckBox
+        android:id="@+id/cb_ask_gender_ac"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:checked="false"
+        android:text="@string/ask_gender"
+        android:layout_below="@+id/cb_ask_age_ac"
+        android:layout_alignStart="@+id/cb_ask_age_ac" />
+
+    <CheckBox
+        android:id="@+id/cb_ask_cons_ac"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:checked="false"
+        android:text="@string/ask_cons"
+        android:layout_marginBottom="3dp"
+        android:layout_below="@+id/cb_ask_gender_ac"
+        android:layout_alignStart="@+id/cb_ask_age_ac"
+        android:layout_alignEnd="@+id/im_filename_help" />
+
+    <CheckBox
+        android:id="@+id/cb_ask_fam_ac"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:checked="false"
+        android:text="@string/ask_fam"
+        android:layout_below="@+id/cb_ask_cons_ac"
+        android:layout_alignStart="@+id/cb_ask_cons_ac"
+        android:layout_alignEnd="@+id/im_filename_help" />
 
     <!--<RelativeLayout-->
     <!--android:layout_width="match_parent"-->
@@ -85,11 +115,11 @@
         android:id="@+id/tv_how_to"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_alignEnd="@+id/cb_ask_info_ac"
-        android:layout_alignStart="@+id/cb_ask_info_ac"
-        android:layout_below="@+id/cb_ask_info_ac"
         android:gravity="center"
-        android:text="@string/instructions_desc" />
+        android:layout_marginTop="15dp"
+        android:text="@string/instructions_desc"
+        android:layout_below="@+id/cb_ask_fam_ac"
+        android:layout_alignStart="@+id/cb_ask_fam_ac" />
 
     <EditText
         android:id="@+id/et_instructions_ac"
@@ -97,10 +127,9 @@
         android:layout_height="wrap_content"
         android:layout_alignEnd="@+id/tv_how_to"
         android:layout_alignStart="@+id/tv_how_to"
-        android:layout_below="@+id/cb_ask_info_ac"
+        android:layout_below="@+id/tv_how_to"
         android:layout_centerHorizontal="true"
-        android:layout_marginTop="26dp"
-        android:gravity="center"
+        android:layout_marginTop="10dp"
         android:hint="@string/instructions_example" />
 
     <ImageButton
@@ -115,6 +144,22 @@
         android:contentDescription="@string/create_new_exp"
         android:src="@drawable/ic_arrow_right" />
 
+    <ImageView
+        android:layout_width="23dp"
+        android:layout_height="23dp"
+        android:id="@+id/im_filename_help"
+        android:src="@drawable/ic_info_aux"
+        android:layout_alignTop="@+id/et_file_name_ac"
+        android:layout_alignEnd="@+id/et_file_name_ac" />
+
+    <ImageView
+        android:layout_width="23dp"
+        android:layout_height="23dp"
+        android:id="@+id/im_info_help"
+        android:src="@drawable/ic_info_aux"
+        android:layout_alignTop="@+id/cb_ask_age_ac"
+        android:layout_alignEnd="@+id/cb_ask_age_ac" />
+
     <!--</RelativeLayout>-->
 
     <!--</RelativeLayout>-->
diff --git a/demo/src/main/res/layout/experiment_metrics_activity.xml b/demo/src/main/res/layout/experiment_metrics_activity.xml
index e4bdc27930..7d90324f74 100644
--- a/demo/src/main/res/layout/experiment_metrics_activity.xml
+++ b/demo/src/main/res/layout/experiment_metrics_activity.xml
@@ -13,8 +13,8 @@
      limitations under the License.
 -->
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
     xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
     android:layout_height="match_parent">
 
     <android.support.v7.widget.Toolbar
@@ -26,28 +26,46 @@
         android:elevation="6dp"
         android:minHeight="?attr/actionBarSize"
         android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
 
     <ListView
         android:id="@+id/lv_exp_metrics_ac"
-        android:layout_below="@id/tb_exp_metrics_ac"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:focusable="false"
-        android:layout_marginLeft="5dp"
-        android:layout_marginRight="5dp" />
+        android:layout_below="@id/tb_exp_metrics_ac"
+        android:layout_marginBottom="50dp"
+        android:focusable="false" />
 
     <ImageButton
+        android:id="@+id/ib_exp_pt3"
         android:layout_width="60dp"
         android:layout_height="60dp"
-        android:src="@drawable/ic_arrow_right"
-        android:id="@+id/ib_exp_pt3"
-        android:contentDescription="@string/create_new_exp"
         android:layout_alignParentBottom="true"
         android:layout_alignParentEnd="true"
-        android:layout_marginEnd="10dp"
         android:layout_marginBottom="10dp"
-        android:background="@drawable/circle" />
+        android:layout_marginEnd="10dp"
+        android:background="@drawable/circle"
+        android:contentDescription="@string/create_new_exp"
+        android:src="@drawable/ic_arrow_right" />
+
+    <CheckBox
+        android:id="@+id/cb_select_all_metrics"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentStart="true"
+        android:layout_marginBottom="20dp"
+        android:layout_marginStart="10dp"
+        android:text="Select All" />
 
+    <TextView
+        android:id="@+id/tv_selected_metrics_qty"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignBaseline="@+id/cb_select_all_metrics"
+        android:layout_alignBottom="@+id/cb_select_all_metrics"
+        android:layout_marginStart="14dp"
+        android:layout_toEndOf="@+id/cb_select_all_metrics"
+        android:text="" />
 
 </RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/instructions_controller.xml b/demo/src/main/res/layout/instructions_controller.xml
index 06df845182..532f91b930 100644
--- a/demo/src/main/res/layout/instructions_controller.xml
+++ b/demo/src/main/res/layout/instructions_controller.xml
@@ -9,7 +9,7 @@
         android:layout_width="80dp"
         android:layout_height="75dp"
         android:id="@+id/img_inst_icon"
-        android:background="@drawable/vo_icon_white"
+        android:background="@drawable/white_verona"
         android:layout_marginTop="20dp"
         android:layout_alignParentTop="true"
         android:layout_centerHorizontal="true" />
diff --git a/demo/src/main/res/layout/lv_header_separator.xml b/demo/src/main/res/layout/lv_header_separator.xml
new file mode 100644
index 0000000000..972303a881
--- /dev/null
+++ b/demo/src/main/res/layout/lv_header_separator.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:gravity="center_vertical" >
+
+    <TextView
+        android:id="@+id/tv_header_separator"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:textColor="@color/def"
+        android:layout_marginTop="5dp"
+        android:layout_marginBottom="5dp"
+        android:layout_marginStart="15dp"
+        android:textStyle="bold"
+        android:textSize="15sp"
+        android:visibility="visible" />
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/metric_item.xml b/demo/src/main/res/layout/metric_item.xml
index c776887a4f..4f98678783 100644
--- a/demo/src/main/res/layout/metric_item.xml
+++ b/demo/src/main/res/layout/metric_item.xml
@@ -27,8 +27,8 @@
         android:layout_alignParentTop="true"
         android:layout_alignParentStart="true"
         android:layout_marginTop="10dp"
-        android:textStyle="bold"
-        android:layout_marginStart="20dp" />
+        android:layout_marginEnd="10dp"
+        android:layout_marginStart="40dp" />
 
     <TextView
         android:layout_width="wrap_content"
@@ -37,7 +37,8 @@
         android:id="@+id/tv_metric_item_type"
         android:layout_below="@+id/tv_metric_item_name"
         android:layout_marginBottom="10dp"
-        android:layout_alignStart="@+id/tv_metric_item_name" />
+        android:layout_marginEnd="10dp"
+        android:layout_alignStart="@+id/tv_metric_item_name"/>
 
     <CheckBox
         android:layout_width="wrap_content"
@@ -45,8 +46,8 @@
         android:clickable="false"
         android:focusable="false"
         android:id="@+id/cb_metric_item_used"
-        android:layout_alignBottom="@+id/tv_metric_item_type"
-        android:layout_alignParentEnd="true"
-        android:layout_marginEnd="20dp" />
+        android:layout_alignTop="@+id/tv_metric_item_name"
+        android:layout_alignParentStart="true"
+        android:layout_marginStart="10dp" />
 
 </RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/migration_checkbox_dialog.xml b/demo/src/main/res/layout/migration_checkbox_dialog.xml
new file mode 100644
index 0000000000..b3c9d0851d
--- /dev/null
+++ b/demo/src/main/res/layout/migration_checkbox_dialog.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <CheckBox
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Migration per tier"
+        android:id="@+id/cb_mig_per_tier"
+        android:layout_alignParentTop="true"
+        android:ems="12"
+        android:gravity="center"
+        android:layout_marginTop="10dp"
+        android:layout_centerHorizontal="true"/>
+
+    <CheckBox
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Migrate during exhibition"
+        android:id="@+id/cb_migration_down"
+        android:ems="12"
+        android:gravity="center"
+        android:layout_marginTop="10dp"
+        android:layout_below="@+id/cb_mig_per_tier"
+        android:layout_centerHorizontal="true"/>
+
+    <CheckBox
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Upstream migration\n(Default = downstream)"
+        android:id="@+id/cb_migration_up"
+        android:ems="12"
+        android:gravity="center"
+        android:layout_marginTop="10dp"
+        android:layout_below="@+id/cb_migration_down"
+        android:layout_centerHorizontal="true"/>
+
+
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/nav_header_main.xml b/demo/src/main/res/layout/nav_header_main.xml
index c06fb0cb1b..824c00b2d8 100644
--- a/demo/src/main/res/layout/nav_header_main.xml
+++ b/demo/src/main/res/layout/nav_header_main.xml
@@ -1,10 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="@dimen/nav_header_height"
     android:background="@drawable/side_nav_bar"
     android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
     android:paddingRight="@dimen/activity_horizontal_margin"
     android:paddingTop="@dimen/activity_vertical_margin"
     android:theme="@style/ThemeOverlay.AppCompat.Dark"
@@ -21,17 +20,29 @@
     <TextView
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:layout_toEndOf="@+id/icon_tabside"
+        android:id="@+id/tv_name_tabside"
         android:textSize="16sp"
+        android:layout_marginTop="5dp"
         android:textStyle="bold"
         android:text="@string/application_name"
         android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
 
+    <ImageView
+        android:layout_width="50dp"
+        android:layout_height="50dp"
+        android:layout_marginLeft="5dp"
+        android:src="@drawable/white_verona"
+        android:id="@+id/icon_tabside" />
+
     <TextView
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:textSize="14sp"
+        android:textColor="@color/wht"
+        android:layout_below="@+id/tv_name_tabside"
+        android:layout_alignStart="@+id/tv_name_tabside"
         android:text="Developed by UFRGS"
         android:id="@+id/textView" />
 
-</LinearLayout>
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/player_activity.xml b/demo/src/main/res/layout/player_activity.xml
index 804fbfaf4e..89039f0d62 100644
--- a/demo/src/main/res/layout/player_activity.xml
+++ b/demo/src/main/res/layout/player_activity.xml
@@ -12,7 +12,7 @@
      See the License for the specific language governing permissions and
      limitations under the License.
 -->
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/root"
     android:background="@color/black"
@@ -27,11 +27,11 @@
         android:layout_height="match_parent"
         android:focusable="true" />
 
-    <LinearLayout
+    <RelativeLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:background="@color/wht"
-        android:orientation="vertical">
+        android:layout_alignParentTop="true"
+        android:background="@color/wht">
 
         <TextView
             android:id="@+id/debug_text_view"
@@ -43,20 +43,6 @@
             android:textSize="10sp"
             tools:ignore="SmallSp" />
 
-        <!--<LinearLayout android:id="@+id/controls_root"-->
-        <!--android:layout_width="match_parent"-->
-        <!--android:layout_height="wrap_content"-->
-        <!--android:orientation="horizontal"-->
-        <!--android:visibility="gone">-->
-        <!---->
-        <!--<Button android:id="@+id/retry_button"-->
-        <!--android:layout_width="wrap_content"-->
-        <!--android:layout_height="wrap_content"-->
-        <!--android:text="@string/retry"-->
-        <!--android:visibility="gone"/>-->
-        <!---->
-        <!--</LinearLayout>-->
-
-    </LinearLayout>
-
-</FrameLayout>
+    </RelativeLayout>
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/rating_checkbox_dialog.xml b/demo/src/main/res/layout/rating_checkbox_dialog.xml
new file mode 100644
index 0000000000..ea7a89f64b
--- /dev/null
+++ b/demo/src/main/res/layout/rating_checkbox_dialog.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <CheckBox
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/male"
+        android:id="@+id/cb_male_dialog"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentStart="true"
+        android:layout_marginStart="50dp" />
+
+    <CheckBox
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/female"
+        android:id="@+id/cb_female_dialog"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentEnd="true"
+        android:layout_marginEnd="50dp" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text=""
+        android:gravity="center"
+        android:id="@+id/tv_text_info"
+        android:layout_below="@+id/cb_male_dialog"
+        android:layout_marginStart="10dp"
+        android:layout_marginEnd="10dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentEnd="true"/>
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/rating_et_dialog.xml b/demo/src/main/res/layout/rating_et_dialog.xml
new file mode 100644
index 0000000000..340d64e5ff
--- /dev/null
+++ b/demo/src/main/res/layout/rating_et_dialog.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:hint="@string/age"
+        android:inputType="number"
+        android:ems="7"
+        android:gravity="center"
+        android:id="@+id/et_dialog_age"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true" />
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/rating_seekbar_dialog.xml b/demo/src/main/res/layout/rating_seekbar_dialog.xml
new file mode 100644
index 0000000000..64a7cd4016
--- /dev/null
+++ b/demo/src/main/res/layout/rating_seekbar_dialog.xml
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <SeekBar
+        android:id="@+id/sk_opinion"
+        android:layout_width="200dp"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:max="4" />
+
+    <TextView
+        android:id="@+id/tv_opinion_status"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/sk_opinion"
+        android:layout_centerHorizontal="true"
+        android:text="Role" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_toLeftOf="@+id/sk_opinion"
+        android:text="Never"
+        android:id="@+id/tv_v1"
+        android:layout_alignTop="@+id/sk_opinion" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_toRightOf="@+id/sk_opinion"
+        android:text="Always"
+        android:id="@+id/tv_v5"
+        android:layout_alignTop="@+id/sk_opinion" />
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/script_general_activity.xml b/demo/src/main/res/layout/script_general_activity.xml
index 5212e22a30..a85ab4f354 100644
--- a/demo/src/main/res/layout/script_general_activity.xml
+++ b/demo/src/main/res/layout/script_general_activity.xml
@@ -29,7 +29,7 @@
         android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
         app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
 
-    <EditText
+    <AutoCompleteTextView
         android:id="@+id/et_provider_address_ac"
         android:layout_below="@id/tb_script_general_ac"
         android:layout_width="wrap_content"
diff --git a/demo/src/main/res/layout/script_general_activity_simple.xml b/demo/src/main/res/layout/script_general_activity_simple.xml
new file mode 100644
index 0000000000..c93f121578
--- /dev/null
+++ b/demo/src/main/res/layout/script_general_activity_simple.xml
@@ -0,0 +1,109 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/tb_script_general_acs"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:background="?attr/colorPrimary"
+        android:elevation="6dp"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
+
+    <AutoCompleteTextView
+        android:id="@+id/et_provider_address_acs"
+        android:layout_below="@id/tb_script_general_acs"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:singleLine="true"
+        android:maxLines="1"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/address_description" />
+
+    <EditText
+        android:id="@+id/et_video_name_acs"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignStart="@+id/et_provider_address_acs"
+        android:layout_below="@+id/et_provider_address_acs"
+        android:layout_marginTop="10dp"
+        android:singleLine="true"
+        android:maxLines="1"
+        android:ems="14"
+        android:gravity="center"
+        android:hint="@string/video_name" />
+
+    <EditText
+        android:id="@+id/et_video_extension_acs"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:hint="@string/video_ext"
+        android:singleLine="true"
+        android:maxLines="1"
+        android:layout_below="@+id/et_video_name_acs"
+        android:layout_alignStart="@+id/et_video_name_acs"
+        android:layout_marginTop="10dp"
+        android:layout_alignEnd="@+id/et_video_name_acs" />
+
+    <!--<EditText-->
+        <!--android:id="@+id/et_video_loop_ac"-->
+        <!--android:layout_width="wrap_content"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:gravity="center"-->
+        <!--android:inputType="number"-->
+        <!--android:hint="@string/video_loop"-->
+        <!--android:singleLine="true"-->
+        <!--android:maxLines="1"-->
+        <!--android:layout_below="@+id/et_video_extension_ac"-->
+        <!--android:layout_alignStart="@+id/et_video_extension_ac"-->
+        <!--android:layout_marginTop="10dp"-->
+        <!--android:layout_alignEnd="@+id/et_video_name_ac" />-->
+
+    <CheckBox
+        android:id="@+id/cb_use_dash_flag_acs"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:checked="false"
+        android:gravity="center"
+        android:text="@string/use_dash"
+        android:layout_below="@+id/et_video_extension_acs"
+        android:layout_alignStart="@+id/et_video_extension_acs"
+        android:layout_marginTop="10dp"
+        android:layout_alignEnd="@+id/et_video_extension_acs" />
+
+    <ImageButton
+        android:layout_width="60dp"
+        android:layout_height="60dp"
+        android:src="@drawable/ic_check"
+        android:id="@+id/ib_script_pt2s"
+        android:contentDescription="@string/create_new_exp"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentEnd="true"
+        android:layout_marginEnd="10dp"
+        android:layout_marginBottom="10dp"
+        android:background="@drawable/circle" />
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/script_item.xml b/demo/src/main/res/layout/script_item.xml
index 5d6134158c..42feb3bf15 100644
--- a/demo/src/main/res/layout/script_item.xml
+++ b/demo/src/main/res/layout/script_item.xml
@@ -26,9 +26,9 @@
         android:id="@+id/tv_script_video"
         android:layout_alignParentTop="true"
         android:layout_alignParentStart="true"
-        android:layout_marginTop="5dp"
-        android:textStyle="bold"
-        android:layout_marginStart="25dp" />
+        android:layout_marginTop="10dp"
+        android:layout_marginEnd="10dp"
+        android:layout_marginStart="40dp"  />
 
     <TextView
         android:layout_width="wrap_content"
@@ -36,7 +36,8 @@
         android:text="@string/address"
         android:id="@+id/tv_script_address"
         android:layout_below="@+id/tv_script_video"
-        android:layout_marginBottom="5dp"
+        android:layout_marginBottom="10dp"
+        android:layout_marginEnd="70dp"
         android:layout_alignStart="@+id/tv_script_video" />
 
     <CheckBox
@@ -44,9 +45,27 @@
         android:layout_height="wrap_content"
         android:clickable="false"
         android:focusable="false"
+        android:layout_marginStart="10dp"
         android:id="@+id/cb_script_use_dash"
+        android:layout_alignTop="@+id/tv_script_video"
+        android:layout_alignParentStart="true" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text=""
+        android:id="@+id/tv_script_item_metrics"
+        android:layout_below="@+id/cb_script_use_dash"
+        android:layout_marginTop="5dp"
+        android:layout_alignStart="@+id/tv_script_video" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text=""
+        android:id="@+id/tv_script_item_qty"
         android:layout_alignBottom="@+id/tv_script_address"
         android:layout_alignParentEnd="true"
-        android:layout_marginEnd="30dp" />
+        android:layout_marginEnd="20dp" />
 
 </RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/start_experiment.xml b/demo/src/main/res/layout/start_experiment.xml
new file mode 100644
index 0000000000..ae86dd1895
--- /dev/null
+++ b/demo/src/main/res/layout/start_experiment.xml
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:background="@color/def"
+    android:layout_height="match_parent">
+
+
+    <ImageView
+        android:layout_width="150dp"
+        android:layout_height="150dp"
+        android:id="@+id/img_start"
+        android:background="@drawable/white_verona"
+        android:layout_centerHorizontal="true"
+        android:layout_below="@+id/tv_about_1" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/application_name"
+        android:textColor="@color/wht"
+        android:textStyle="bold"
+        android:textSize="24sp"
+        android:id="@+id/tv_about_1"
+        android:layout_marginTop="27dp"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Thanks for participating as a volunteer\nfor this experiment."
+        android:textColor="@color/wht"
+        android:id="@+id/tv_about_3"
+        android:gravity="center"
+        android:layout_marginTop="20dp"
+        android:layout_below="@+id/img_start"
+        android:layout_centerHorizontal="true" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/futebol"
+        android:gravity="center"
+        android:textColor="@color/wht"
+        android:layout_alignParentStart="true"
+        android:layout_marginStart="20dp"
+        android:layout_alignParentEnd="true"
+        android:layout_marginEnd="20dp"
+        android:id="@+id/tv_start_inst"
+        android:layout_marginTop="10dp"
+        android:layout_below="@+id/tv_about_3"
+        android:layout_centerHorizontal="true" />
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Start Video(s)"
+        android:id="@+id/bt_start_videos"
+        android:background="@drawable/bt_style"
+        android:textColor="@color/def"
+        android:textStyle="bold"
+        android:layout_alignStart="@+id/img_start"
+        android:layout_alignEnd="@+id/img_start"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginBottom="20dp" />
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Provide Information"
+        android:id="@+id/bt_provide_info"
+        android:background="@drawable/bt_style"
+        android:textColor="@color/def"
+        android:textStyle="bold"
+        android:layout_above="@+id/bt_start_videos"
+        android:layout_marginBottom="15dp"
+        android:layout_alignStart="@+id/bt_start_videos"
+        android:layout_alignEnd="@+id/bt_start_videos" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Could you provide us some information?\nIf you don't want to, just click in Start Video(s)"
+        android:gravity="center"
+        android:textColor="@color/wht"
+        android:id="@+id/tv_provide_info"
+        android:layout_marginBottom="10dp"
+        android:layout_above="@+id/bt_provide_info"
+        android:layout_centerHorizontal="true" />
+
+    <!--<RelativeLayout-->
+        <!--android:id="@+id/rel_border_left"-->
+        <!--android:layout_width="50dp"-->
+        <!--android:layout_height="match_parent"-->
+        <!--android:layout_alignParentStart="true"/>-->
+<!---->
+    <!--<RelativeLayout-->
+        <!--android:layout_width="50dp"-->
+        <!--android:id="@+id/rel_border_right"-->
+        <!--android:layout_height="match_parent"-->
+        <!--android:layout_alignParentEnd="true"/>-->
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/subjective_metric_selection_popup.xml b/demo/src/main/res/layout/subjective_metric_selection_popup.xml
new file mode 100644
index 0000000000..b25deb534d
--- /dev/null
+++ b/demo/src/main/res/layout/subjective_metric_selection_popup.xml
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="UTF-8"?><!-- Copyright (C) 2016 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/tb_script_metrics_popup"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:background="?attr/colorPrimary"
+        android:elevation="6dp"
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <ListView
+        android:id="@+id/sm_popup_list"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/tv_popup_metrics"
+        android:layout_marginBottom="15dp"
+        android:layout_marginEnd="10dp"
+        android:layout_marginStart="10dp"
+        android:layout_marginTop="10dp" />
+
+    <EditText
+        android:id="@+id/et_popup_rep"
+        android:layout_width="wrap_content"
+        android:layout_below="@+id/tb_script_metrics_popup"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:ems="10"
+        android:gravity="center"
+        android:hint="@string/video_loop"
+        android:inputType="number" />
+
+    <TextView
+        android:id="@+id/tv_popup_metrics"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/et_popup_rep"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:text="@string/select_metrics" />
+
+    <ImageButton
+        android:layout_width="60dp"
+        android:layout_height="60dp"
+        android:src="@drawable/ic_check"
+        android:id="@+id/ib_script_final_popup"
+        android:contentDescription="@string/create_new_exp"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentEnd="true"
+        android:layout_marginEnd="10dp"
+        android:layout_marginBottom="10dp"
+        android:background="@drawable/circle" />
+
+</RelativeLayout>
diff --git a/demo/src/main/res/layout/video_item.xml b/demo/src/main/res/layout/video_item.xml
index b30e2f8655..56dec15bb6 100644
--- a/demo/src/main/res/layout/video_item.xml
+++ b/demo/src/main/res/layout/video_item.xml
@@ -43,11 +43,12 @@
         android:layout_height="40dp"
         android:contentDescription="@string/script"
         android:layout_marginStart="6dp"
-        android:src="@drawable/vo_icon"
+        android:src="@drawable/blue_verona"
         android:id="@+id/img_static_icon"
         android:layout_alignParentStart="true"
         android:layout_marginTop="7dp" />
 
+
     <!--<CheckBox-->
         <!--android:layout_width="wrap_content"-->
         <!--android:layout_height="wrap_content"-->
diff --git a/demo/src/main/res/menu/nav_drawer_menu.xml b/demo/src/main/res/menu/nav_drawer_menu.xml
index 171677a875..e118d4a497 100644
--- a/demo/src/main/res/menu/nav_drawer_menu.xml
+++ b/demo/src/main/res/menu/nav_drawer_menu.xml
@@ -2,6 +2,14 @@
     xmlns:tools="http://schemas.android.com/tools"
     tools:context="nkdroid.tutorial.navigationview.MainActivity">
 
+    <group android:id="@+id/grp_video"
+        android:checkableBehavior="single">
+        <item
+            android:id="@+id/navigation_item_video"
+            android:icon="@drawable/ic_temp_icon_white"
+            android:title="@string/new_video" />
+    </group>
+
     <group android:id="@+id/grp_exp"
         android:checkableBehavior="single">
         <item
@@ -18,12 +26,16 @@
             android:title="@string/export_experiment" />
     </group>
 
-    <group android:id="@+id/grp_video"
+    <group android:id="@+id/grp_results"
         android:checkableBehavior="single">
         <item
-            android:id="@+id/navigation_item_video"
-            android:icon="@drawable/ic_temp_icon_white"
-            android:title="@string/new_video" />
+            android:id="@+id/navigation_item_export_results"
+            android:icon="@drawable/ic_arrow_right"
+            android:title="Export results" />
+        <item
+            android:id="@+id/navigation_item_open_results"
+            android:icon="@drawable/ic_clean"
+            android:title="Clean results" />
     </group>
 
     <group android:id="@+id/grp_others"
@@ -35,6 +47,8 @@
         <item
             android:id="@+id/navigation_item_about"
             android:icon="@drawable/ic_about"
-            android:title="@string/about" />
+            android:title="CC Experiment" />
     </group>
+
+
 </menu>
\ No newline at end of file
diff --git a/demo/src/main/res/mipmap-hdpi/blue_verona.png b/demo/src/main/res/mipmap-hdpi/blue_verona.png
new file mode 100644
index 0000000000..994994b41e
Binary files /dev/null and b/demo/src/main/res/mipmap-hdpi/blue_verona.png differ
diff --git a/demo/src/main/res/mipmap-mdpi/blue_verona.png b/demo/src/main/res/mipmap-mdpi/blue_verona.png
new file mode 100644
index 0000000000..3df67929c2
Binary files /dev/null and b/demo/src/main/res/mipmap-mdpi/blue_verona.png differ
diff --git a/demo/src/main/res/mipmap-xhdpi/blue_verona.png b/demo/src/main/res/mipmap-xhdpi/blue_verona.png
new file mode 100644
index 0000000000..81cb6da59d
Binary files /dev/null and b/demo/src/main/res/mipmap-xhdpi/blue_verona.png differ
diff --git a/demo/src/main/res/mipmap-xxhdpi/blue_verona.png b/demo/src/main/res/mipmap-xxhdpi/blue_verona.png
new file mode 100644
index 0000000000..b6bdee3c4d
Binary files /dev/null and b/demo/src/main/res/mipmap-xxhdpi/blue_verona.png differ
diff --git a/demo/src/main/res/mipmap-xxxhdpi/blue_verona.png b/demo/src/main/res/mipmap-xxxhdpi/blue_verona.png
new file mode 100644
index 0000000000..72d962f3d0
Binary files /dev/null and b/demo/src/main/res/mipmap-xxxhdpi/blue_verona.png differ
diff --git a/demo/src/main/res/values/strings.xml b/demo/src/main/res/values/strings.xml
index 06a96448ba..d543f8386a 100644
--- a/demo/src/main/res/values/strings.xml
+++ b/demo/src/main/res/values/strings.xml
@@ -16,7 +16,7 @@
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
 
     <!-- The user visible name of the application. [CHAR LIMIT=20] -->
-    <string name="application_name">VO-CoLisEU</string>
+    <string name="application_name">VERONA</string>
 
     <string name="video">Video</string>
 
@@ -60,7 +60,7 @@
 
 
     <!--
-    [UFRGS] VO-CoLisEU colors and strings
+    [UFRGS] VERONA colors and strings
     -->
 
     <!--colors-->
@@ -103,12 +103,16 @@
     <string name="exp_name_title">Experiment name</string>
     <string name="my_exps">My Experiments</string>
     <string name="my_videos">My videos</string>
-    <string name="file_name_title">File name</string>
+    <string name="file_name_title">Name of file to save results</string>
     <string name="provider_title">Provider address</string>
     <string name="ask_info">Ask for user personal information</string>
+    <string name="ask_age">Ask for age?</string>
+    <string name="ask_gender">Ask for gender?</string>
+    <string name="ask_cons">Ask for consumption level?</string>
+    <string name="ask_fam">Ask for familiarity level?</string>
     <string name="ask_info_description">If checked, the script will ask some volunteer information, such as age, gender and levels of video streaming consumption and mobile streaming knowledge</string>
     <string name="instructions_desc">Write here a description about your experiment</string>
-    <string name="instructions_example">Describe your script</string>
+    <string name="instructions_example">\t\t\t\t\t\t\tDescribe your script</string>
     <string name="address_example">143.54.12.21:8081/manifest</string>
     <string name="file_example">myfile (no extension)</string>
 
@@ -135,9 +139,9 @@
     <string name="close">Close</string>
     <string name="no_video_found">No video was found to add to this experiment.\nCreate a new video through the navigation tab!\nYou will be able to add it to any experiment.</string>
 
-    <string name="inst_1">With <b>VO-CoLisEU</b>, you\'re able to create any type of video experiment.\n\nTo start, go in the side menu and select <b>\'New Video\'</b> to register a new video.\n\nYou will be able to use this videos for one or more experiments.\n\nFor each video, you can select different <b>subjective QoE metrics</b>.\n\nAlso, you can use videos from different providers and it\'s all saved in your device!</string>
+    <string name="inst_1">With <b>VERONA</b>, you\'re able to create any type of video experiment.\n\nTo start, go in the side menu and select <b>\'New Video\'</b> to register a new video.\n\nYou will be able to use this videos for one or more experiments.\n\nFor each video, you can select different <b>subjective QoE metrics</b>.\n\nAlso, you can use videos from different providers and it\'s all saved in your device!</string>
     <string name="inst_2">After registering your videos, you\'re able to <b>create your experiments</b>, with one more of the previously created videos.\n\nTo create an experiment, you have to provide some information, such as the <b>experiment name</b>, the <b>name of the file</b> where it will be saved and some <b>instructions</b> .\n\nAll the video information will be saved in the <b>file with the provided name</b>. In this way, you\'re able to share an experiment to other device!\n\nFor each experiment, you can select QoS and objective QoE metrics.</string>
-    <string name="inst_3">After each video exhibition, a new line is added to a log file <b>containing the results</b>.\n\nThe saved metrics are the ones selected during the video and the experiment creation. The file with the results will also be the one provided when you created your experiment.\n\nIf you want to see this tutorial again, just go to <b>\'Tutorial\'</b> in the side menu.\n\nThat\'s it, thanks for using <b>VO-CoLisEU</b>!</string>
+    <string name="inst_3">After each video exhibition, a new line is added to a log file <b>containing the results</b>.\n\nThe saved metrics are the ones selected during the video and the experiment creation. The file with the results will also be the one provided when you created your experiment.\n\nIf you want to see this tutorial again, just go to <b>\'Tutorial\'</b> in the side menu.\n\nThat\'s it, thanks for using <b>VERONA</b>!</string>
 
     <string name="new_experiment">New Experiment</string>
     <string name="import_experiment">Import Experiment</string>
@@ -152,9 +156,10 @@
     <string name="familiar_aux">1 is unfarmilar and 5 is very familiar</string>
     <string name="consumption">What is your video streaming consumption level?</string>
     <string name="consumption_aux">1 is \'I don\'t use video streaming services\' and 5 is \'I use it everyday\'</string>
-    <string name="no_exps"><b>Welcome to VO-CoLiseU!</b>\nTo start, use the menu in the left to register your videos and create your experiments!</string>
+    <string name="no_exps"><b>Welcome to VERONA!</b>\nTo start, use the menu in the left to register your videos and create your experiments!</string>
 
     <string name="go_ahead">Start exhibition</string>
     <string name="skip">I don\'t want to answer</string>
+    <string name="select_metrics">Select the metrics for this video</string>
 
 </resources>
diff --git a/demo/src/main/res/values/styles.xml b/demo/src/main/res/values/styles.xml
index 974f1bfb5b..51365fb276 100644
--- a/demo/src/main/res/values/styles.xml
+++ b/demo/src/main/res/values/styles.xml
@@ -18,7 +18,7 @@
     <style name="VOCoLisEU" parent="Theme.AppCompat.Light.NoActionBar">
         <item name="colorPrimary">#3F51B5</item>
         <item name="colorPrimaryDark">#303F9F</item>
-        <item name="colorAccent">#3333FF</item>
+        <item name="colorAccent">#6495ED</item>
         <item name="android:label">@string/application_name</item>
         <item name="android:windowNoTitle">true</item>
         <!--<item name="android:icon">@drawable/ic_launcher</item>-->
