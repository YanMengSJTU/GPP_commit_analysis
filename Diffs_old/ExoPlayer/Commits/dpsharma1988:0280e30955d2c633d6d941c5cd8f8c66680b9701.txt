diff --git a/demos/main/build.gradle b/demos/main/build.gradle
index ce0992eb7a..53d6892214 100644
--- a/demos/main/build.gradle
+++ b/demos/main/build.gradle
@@ -63,6 +63,7 @@ dependencies {
     implementation project(modulePrefix + 'library-hls')
     implementation project(modulePrefix + 'library-smoothstreaming')
     implementation project(modulePrefix + 'library-ui')
+    implementation project(':protocol')
     withExtensionsImplementation project(path: modulePrefix + 'extension-ffmpeg')
     withExtensionsImplementation project(path: modulePrefix + 'extension-flac')
     withExtensionsImplementation project(path: modulePrefix + 'extension-ima')
diff --git a/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java b/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java
index 697a5b68d8..cb1b40a035 100644
--- a/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java
+++ b/demos/main/src/main/java/com/google/android/exoplayer2/demo/DemoApplication.java
@@ -35,7 +35,8 @@
 import com.google.android.exoplayer2.upstream.cache.SimpleCache;
 import com.google.android.exoplayer2.upstream.vocabimate_stream.CustomDataSourceFactory;
 import com.google.android.exoplayer2.util.Util;
-import com.google.android.exoplayer2.vocab.KeyHelperModel;
+import com.vocabimate.protocol.KeyHelperModel;
+
 import java.io.File;
 
 /**
diff --git a/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index 5d16dca645..3036bfc89b 100644
--- a/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demos/main/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -56,17 +56,9 @@
 import com.google.android.exoplayer2.source.TrackGroupArray;
 import com.google.android.exoplayer2.source.ads.AdsLoader;
 import com.google.android.exoplayer2.source.ads.AdsMediaSource;
-import com.google.android.exoplayer2.source.dash.DashMediaSource;
-import com.google.android.exoplayer2.source.dash.DefaultDashChunkSource;
-import com.google.android.exoplayer2.source.dash.manifest.DashManifestParser;
-import com.google.android.exoplayer2.source.dash.manifest.RepresentationKey;
 import com.google.android.exoplayer2.source.hls.HlsMediaSource;
 import com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser;
 import com.google.android.exoplayer2.source.hls.playlist.RenditionKey;
-import com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource;
-import com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
-import com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser;
-import com.google.android.exoplayer2.source.smoothstreaming.manifest.StreamKey;
 import com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;
 import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
 import com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo;
@@ -83,8 +75,8 @@
 import com.google.android.exoplayer2.util.ErrorMessageProvider;
 import com.google.android.exoplayer2.util.EventLogger;
 import com.google.android.exoplayer2.util.Util;
-import com.google.android.exoplayer2.vocab.KeyHelperModel;
-import java.io.Serializable;
+import com.vocabimate.protocol.KeyHelperModel;
+
 import java.lang.reflect.Constructor;
 import java.net.CookieHandler;
 import java.net.CookieManager;
diff --git a/demos/main/src/main/java/com/google/android/exoplayer2/demo/SampleChooserActivity.java b/demos/main/src/main/java/com/google/android/exoplayer2/demo/SampleChooserActivity.java
index c7df24df3a..cf519736cc 100644
--- a/demos/main/src/main/java/com/google/android/exoplayer2/demo/SampleChooserActivity.java
+++ b/demos/main/src/main/java/com/google/android/exoplayer2/demo/SampleChooserActivity.java
@@ -39,10 +39,10 @@
 import com.google.android.exoplayer2.upstream.DataSourceInputStream;
 import com.google.android.exoplayer2.upstream.DataSpec;
 import com.google.android.exoplayer2.upstream.DefaultDataSource;
-import com.google.android.exoplayer2.upstream.TransferListener;
 import com.google.android.exoplayer2.util.Assertions;
 import com.google.android.exoplayer2.util.Util;
-import com.google.android.exoplayer2.vocab.KeyHelperModel;
+import com.vocabimate.protocol.KeyHelperModel;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
@@ -161,6 +161,13 @@ public KeyHelperModel getKeyHelper(long videoId, UriSample sample) {
 //        .setKeyPath(key)
 //        .setM3u8Path(sample.uri.toString());
 //
+    if(sample.uri.toString().contains("https://voca2hosting.firebaseapp.com/small_files/encrypted_without_key/index.m3u8")) {
+      return new KeyHelperModel().setVideoId("videoId: " + videoId)
+              .setM3u8Path("https://voca2hosting.firebaseapp.com/small_files/encrypted_without_key/index.m3u8")
+              .setLicecnceUrl("https://vocatest-a40ab.firebaseapp.com/small_files/enc.key")
+              .setToken(null);
+    }
+
     if(sample.uri.toString().contains("vid30")) {
       return new KeyHelperModel().setVideoId("videoId: " + videoId)
               .setM3u8Path("https://voca2hosting.firebaseapp.com/vid30/playlist.m3u8")
@@ -168,6 +175,8 @@ public KeyHelperModel getKeyHelper(long videoId, UriSample sample) {
               .setToken("rmaC0c9VqdoDDCku3MsXLJw_LL2IM_62zw8lOwfJsLU=");
     }
 
+
+
     return new KeyHelperModel().setVideoId("videoId: " + videoId)
         .setM3u8Path("http://54.152.186.92:60801/drm/static/video/inayat/sample_category/vid5/playlist.m3u8")
         .setLicecnceUrl("http://54.152.186.92:60801/drm/get_key_for_a_video/20")
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
index 872933cbda..5c0fd71dc6 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
@@ -24,7 +24,8 @@
 import com.google.android.exoplayer2.util.Assertions;
 import com.google.android.exoplayer2.util.Predicate;
 import com.google.android.exoplayer2.util.Util;
-import com.google.android.exoplayer2.vocab.KeyHelperModel;
+import com.vocabimate.protocol.KeyHelperModel;
+import com.vocabimate.protocol.VocabimateHttpUrlConnection;
 
 import java.io.EOFException;
 import java.io.IOException;
@@ -406,6 +407,9 @@ private HttpURLConnection makeConnection(URL url, byte[] postBody, long position
 
       if(this instanceof CustomDataSource){
         KeyHelperModel keyHelperModel = ((CustomDataSource) this).getKeyHelperModel();
+        if(connection instanceof VocabimateHttpUrlConnection){
+          ((VocabimateHttpUrlConnection)connection).setKeyHelper(keyHelperModel);
+        }
         if(keyHelperModel != null) {
           String token = keyHelperModel.getToken();
           if(token != null && token.length() > 0) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSource.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSource.java
index 0d46791118..52950f416f 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSource.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSource.java
@@ -4,7 +4,7 @@
 import com.google.android.exoplayer2.upstream.DefaultHttpDataSource;
 import com.google.android.exoplayer2.upstream.TransferListener;
 import com.google.android.exoplayer2.util.Predicate;
-import com.google.android.exoplayer2.vocab.KeyHelperModel;
+import com.vocabimate.protocol.KeyHelperModel;
 import com.google.gson.Gson;
 import com.vocabimate.protocol.LicenceModel;
 import com.vocabimate.protocol.TokenDecryptionHelper;
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSourceFactory.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSourceFactory.java
index 1b7dcb86da..fccbbeac02 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSourceFactory.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/vocabimate_stream/CustomDataSourceFactory.java
@@ -21,7 +21,7 @@
 import com.google.android.exoplayer2.upstream.HttpDataSource.BaseFactory;
 import com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
 import com.google.android.exoplayer2.upstream.TransferListener;
-import com.google.android.exoplayer2.vocab.KeyHelperModel;
+import com.vocabimate.protocol.KeyHelperModel;
 
 /**
  * A {@link Factory} that produces {@link DefaultHttpDataSource} instances.
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/vocab/KeyHelperModel.java b/protocol/src/main/java/com/vocabimate/protocol/KeyHelperModel.java
similarity index 96%
rename from library/core/src/main/java/com/google/android/exoplayer2/vocab/KeyHelperModel.java
rename to protocol/src/main/java/com/vocabimate/protocol/KeyHelperModel.java
index d7a4e873a5..70a9ab7cbf 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/vocab/KeyHelperModel.java
+++ b/protocol/src/main/java/com/vocabimate/protocol/KeyHelperModel.java
@@ -1,4 +1,4 @@
-package com.google.android.exoplayer2.vocab;
+package com.vocabimate.protocol;
 
 import java.io.Serializable;
 
diff --git a/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java b/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java
index 1cd350ca3e..3a3cc70a0b 100644
--- a/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java
+++ b/protocol/src/main/java/com/vocabimate/protocol/VocabimateHttpUrlConnection.java
@@ -13,9 +13,10 @@
 /**
  * Created by Hisham on 15/Oct/2018 - 16:58
  */
-class VocabimateHttpUrlConnection extends HttpURLConnection {
+public class VocabimateHttpUrlConnection extends HttpURLConnection {
 
     protected VocAbsInputStream vocAbsInputStream;
+    private KeyHelperModel keyHelper;
 
     public VocabimateHttpUrlConnection(URL url) throws IOException {
         super(url);
@@ -31,30 +32,34 @@ public VocabimateHttpUrlConnection(URL url) throws IOException {
     public void connect() throws IOException {
 
         // todo Need to fix things here, not getting token and licence url on older phones.
-        String licence_url = getRequestProperty("licence_url");
-        String token = getRequestProperty("access_token");
-        if (licence_url == null) {
-            throw new Error("Licence url is not provided in header, please set 'licence_url' just like access_token");
-        }
-        if (token == null) {
-            throw new Error("Access Token is null, please set access_token in header");
-        }
+        String licence_url = keyHelper.getLicecnceUrl();//getRequestProperty("licence_url");
+        String token = keyHelper.getToken();//getRequestProperty("access_token");
+//        if (licence_url == null) {
+//            throw new Error("Licence url is not provided in header, please set 'licence_url' just like access_token");
+//        }
+//        if (token == null) {
+//            throw new Error("Access Token is null, please set access_token in header");
+//        }
         URL url = new URL(licence_url);
         HttpURLConnection connection = (HttpURLConnection) url.openConnection();
 
-        String result = readStream(connection.getInputStream());
-        LicenceModel licenceModel = new Gson().fromJson(result, LicenceModel.class);
-        InputStream stream = null;
-        if (licenceModel != null && licenceModel.getLicenseFile() != null && licenceModel.getLicenseFile().getDecryptionKey() != null) {
-            TokenDecryptionHelper tokenDecryptionHelper = new TokenDecryptionHelper(token, licenceModel.getLicenseFile().getDecryptionKey());
-            byte[] decrypt = tokenDecryptionHelper.decrypt();
-            stream = new ByteArrayInputStream(decrypt);
+        if(token == null){
+            vocAbsInputStream.setInputStream(connection.getInputStream());
+        }
+        if(token != null) {
+            String result = readStream(connection.getInputStream());
+            LicenceModel licenceModel = new Gson().fromJson(result, LicenceModel.class);
+            InputStream stream = null;
+            if (licenceModel != null && licenceModel.getLicenseFile() != null && licenceModel.getLicenseFile().getDecryptionKey() != null) {
+                TokenDecryptionHelper tokenDecryptionHelper = new TokenDecryptionHelper(token, licenceModel.getLicenseFile().getDecryptionKey());
+                byte[] decrypt = tokenDecryptionHelper.decrypt();
+                stream = new ByteArrayInputStream(decrypt);
 //            for (int i = 0; i < decrypt.length; i++) {
 //                buffer[i] = decrypt[i];
 //            }
+            vocAbsInputStream.setInputStream(stream);
+            }
         }
-
-        vocAbsInputStream.setInputStream(stream);
         connected = true;
         responseCode = 200;
     }
@@ -104,4 +109,12 @@ public InputStream getInputStream() throws IOException {
         }
         return vocAbsInputStream;
     }
+
+    public void setKeyHelper(KeyHelperModel keyHelper) {
+        this.keyHelper = keyHelper;
+    }
+
+    public KeyHelperModel getKeyHelper() {
+        return keyHelper;
+    }
 }
