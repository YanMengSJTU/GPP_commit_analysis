diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorInput.java b/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorInput.java
index 6e03e932a6..31391dfd84 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorInput.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorInput.java
@@ -26,7 +26,7 @@
 public interface ExtractorInput {
 
   /**
-   * Reads up to {@code length} bytes from the input.
+   * Reads up to {@code length} bytes from the input and resets the peek position.
    * <p>
    * This method blocks until at least one byte of data can be read, the end of the input is
    * detected, or an exception is thrown.
@@ -153,7 +153,7 @@ boolean peekFully(byte[] target, int offset, int length, boolean allowEndOfInput
    * {@code offset}. The current read position is left unchanged.
    * <p>
    * Calling {@link #resetPeekPosition()} resets the peek position to equal the current read
-   * position, so the caller can peek the same data again. Reading and skipping also reset the peek
+   * position, so the caller can peek the same data again. Reading or skipping also resets the peek
    * position.
    *
    * @param target A target array into which data should be written.
diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java b/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java
index 77da26c008..eafd6b68df 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/ExtractorSampleSource.java
@@ -877,8 +877,9 @@ public Extractor selectExtractor(ExtractorInput input)
           }
         } catch (EOFException e) {
           // Do nothing.
+        } finally {
+          input.resetPeekPosition();
         }
-        input.resetPeekPosition();
       }
       if (extractor == null) {
         throw new UnrecognizedInputFormatException(extractors);
diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractor.java b/library/src/main/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractor.java
index 762c74822b..85ce6aec75 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractor.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/ogg/OggVorbisExtractor.java
@@ -72,7 +72,6 @@ public boolean sniff(ExtractorInput input) throws IOException, InterruptedExcept
     } catch (ParserException e) {
       // does not happen
     } finally {
-      input.resetPeekPosition();
       scratch.reset();
     }
     return false;
diff --git a/library/src/main/java/com/google/android/exoplayer/extractor/webm/DefaultEbmlReader.java b/library/src/main/java/com/google/android/exoplayer/extractor/webm/DefaultEbmlReader.java
index 1f036f8d27..fd1de76aaa 100644
--- a/library/src/main/java/com/google/android/exoplayer/extractor/webm/DefaultEbmlReader.java
+++ b/library/src/main/java/com/google/android/exoplayer/extractor/webm/DefaultEbmlReader.java
@@ -147,15 +147,14 @@ public boolean read(ExtractorInput input) throws IOException, InterruptedExcepti
    */
   private long maybeResyncToNextLevel1Element(ExtractorInput input) throws EOFException,
       IOException, InterruptedException {
+    input.resetPeekPosition();
     while (true) {
-      input.resetPeekPosition();
       input.peekFully(scratch, 0, MAX_ID_BYTES);
       int varintLength = VarintReader.parseUnsignedVarintLength(scratch[0]);
       if (varintLength != -1 && varintLength <= MAX_ID_BYTES) {
         int potentialId = (int) VarintReader.assembleVarint(scratch, varintLength, false);
         if (output.isLevel1Element(potentialId)) {
           input.skipFully(varintLength);
-          input.resetPeekPosition();
           return potentialId;
         }
       }
