diff --git a/build.gradle b/build.gradle
index 258b11d2e6..a3363a9313 100644
--- a/build.gradle
+++ b/build.gradle
@@ -16,7 +16,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.1'
+        classpath 'com.android.tools.build:gradle:2.3.3'
         classpath 'com.novoda:bintray-release:0.4.0'
     }
     // Workaround for the following test coverage issue. Remove when fixed:
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index b99d715967..13eb857e4b 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -296,8 +296,8 @@ private void initializePlayer() {
       trackSelector = new DefaultTrackSelector(adaptiveTrackSelectionFactory);
       trackSelectionHelper = new TrackSelectionHelper(trackSelector, adaptiveTrackSelectionFactory);
       lastSeenTrackGroupArray = null;
-      int minBufferMs = 2000;
-      int maxBufferMs = 5000;
+      int minBufferMs = 150000;
+      int maxBufferMs = 300000;
       long playbackBufferMs = 1;
       long reInitBufferMs = 1;
       LoadControl loadControl = new DefaultLoadControl(new DefaultAllocator(true, C.DEFAULT_BUFFER_SEGMENT_SIZE),
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java b/library/core/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java
index 976f1ac3ac..9f750324e9 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java
@@ -99,7 +99,7 @@
   private final String TAG = "ExtractorMediaPeriod";
   private final boolean makeSureConstantLatency = false;
   private final int framesize = 10;
-  private final int fps = 30;
+  private final int fps = 25;
 
   /**
    * @param uri The {@link Uri} of the media stream.
@@ -658,7 +658,7 @@ private void limitLatency(int frameSize, int fps) {
         // Skip frames to under frame size defined in frameSize.
         int track = sampleQueues.size();
         for(int index = 0; index < track; index++) {
-          long nextPositionUs = largestQueuedTimestampUs - (100000 / fps * frameSize);
+          long nextPositionUs = largestQueuedTimestampUs - (10000 / fps * frameSize);
           String logMessage= "extractor.load[SKIP, queuedFrameSize=" + currentQueuedFrameSize +", largestQueuedTimestampUs=" + largestQueuedTimestampUs + ", nextPositionUs=" +nextPositionUs+ "]";
           Log.d(TAG, logMessage);
           if(trackIsAudioVideoFlags[index] && trackEnabledStates[index]) {
