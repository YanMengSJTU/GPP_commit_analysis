diff --git a/library/src/androidTest/assets/ttml/multiple_regions.xml b/library/src/androidTest/assets/ttml/multiple_regions.xml
index edc704d8b1..3bde2c99b5 100644
--- a/library/src/androidTest/assets/ttml/multiple_regions.xml
+++ b/library/src/androidTest/assets/ttml/multiple_regions.xml
@@ -8,7 +8,7 @@
         <layout>
             <region xml:id="region1" ttm:origin="10% 10%" extent="20% 20%"/>
             <region xml:id="region2" ttm:origin="40% 40%" extent="20% 20%"/>
-            <region xml:id="region3" ttm:origin="10% 80%" extent="10% 10%"/>
+            <region xml:id="region3" ttm:origin="10% 80%"/>
             <region xml:id="region4" ttm:origin="60% 10%" extent="20% 20%"/>
             <region xml:id="ultimate" ttm:origin="45% 45%" extent="35% 35%"/>
         </layout>
diff --git a/library/src/androidTest/java/com/google/android/exoplayer/text/ttml/TtmlParserTest.java b/library/src/androidTest/java/com/google/android/exoplayer/text/ttml/TtmlParserTest.java
index e516138eaf..63b5852a2b 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/text/ttml/TtmlParserTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/text/ttml/TtmlParserTest.java
@@ -157,10 +157,13 @@ public void testMultipleRegions() throws IOException {
     assertEquals("lorem", ttmlCue.text.toString());
     assertEquals(10.f / 100.f, ttmlCue.position);
     assertEquals(10.f / 100.f, ttmlCue.line);
+    assertEquals(20.f / 100.f, ttmlCue.size);
+
     ttmlCue = output.get(1);
     assertEquals("amet", ttmlCue.text.toString());
     assertEquals(60.f / 100.f, ttmlCue.position);
     assertEquals(10.f / 100.f, ttmlCue.line);
+    assertEquals(20.f / 100.f, ttmlCue.size);
 
     output = subtitle.getCues(5000000);
     assertEquals(1, output.size());
@@ -168,6 +171,7 @@ public void testMultipleRegions() throws IOException {
     assertEquals("ipsum", ttmlCue.text.toString());
     assertEquals(40.f / 100.f, ttmlCue.position);
     assertEquals(40.f / 100.f, ttmlCue.line);
+    assertEquals(20.f / 100.f, ttmlCue.size);
 
     output = subtitle.getCues(9000000);
     assertEquals(1, output.size());
@@ -175,6 +179,7 @@ public void testMultipleRegions() throws IOException {
     assertEquals("dolor", ttmlCue.text.toString());
     assertEquals(10.f / 100.f, ttmlCue.position);
     assertEquals(80.f / 100.f, ttmlCue.line);
+    assertEquals(Cue.DIMEN_UNSET, ttmlCue.size);
 
     output = subtitle.getCues(21000000);
     assertEquals(1, output.size());
@@ -182,6 +187,7 @@ public void testMultipleRegions() throws IOException {
     assertEquals("She first said this", ttmlCue.text.toString());
     assertEquals(45.f / 100.f, ttmlCue.position);
     assertEquals(45.f / 100.f, ttmlCue.line);
+    assertEquals(35.f / 100.f, ttmlCue.size);
     output = subtitle.getCues(25000000);
     ttmlCue = output.get(0);
     assertEquals("She first said this\nThen this", ttmlCue.text.toString());
diff --git a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlNode.java b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlNode.java
index d13fbff01f..abf9a4643c 100644
--- a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlNode.java
+++ b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlNode.java
@@ -53,6 +53,7 @@
   public static final String ANONYMOUS_REGION_ID = "";
   public static final String ATTR_ID = "id";
   public static final String ATTR_TTS_BACKGROUND_COLOR = "backgroundColor";
+  public static final String ATTR_TTS_EXTENT = "extent";
   public static final String ATTR_TTS_FONT_STYLE = "fontStyle";
   public static final String ATTR_TTS_FONT_SIZE = "fontSize";
   public static final String ATTR_TTS_FONT_FAMILY = "fontFamily";
@@ -82,12 +83,12 @@
   public final long endTimeUs;
   public final TtmlStyle style;
   public final String regionId;
-  private String[] styleIds;
 
-  private List<TtmlNode> children;
+  private final String[] styleIds;
+  private final HashMap<String, Integer> nodeStartsByRegion;
+  private final HashMap<String, Integer> nodeEndsByRegion;
 
-  private HashMap<String, Integer> nodeStartsByRegion;
-  private HashMap<String, Integer> nodeEndsByRegion;
+  private List<TtmlNode> children;
 
   public static TtmlNode buildTextNode(String text) {
     return new TtmlNode(null, TtmlRenderUtil.applyTextElementSpacePolicy(text), UNDEFINED_TIME,
@@ -180,7 +181,7 @@ private void getEventTimes(TreeSet<Long> out, boolean descendsPNode) {
     for (Entry<String, SpannableStringBuilder> entry : regionOutputs.entrySet()) {
       TtmlRegion region = regionMap.get(entry.getKey());
       cues.add(new Cue(cleanUpText(entry.getValue()), null, region.line, Cue.TYPE_UNSET,
-          Cue.TYPE_UNSET, region.position, Cue.TYPE_UNSET, Cue.DIMEN_UNSET));
+          Cue.TYPE_UNSET, region.position, Cue.TYPE_UNSET, region.width));
     }
     return cues;
   }
diff --git a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlParser.java b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlParser.java
index ff04140907..9c72753706 100644
--- a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlParser.java
+++ b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlParser.java
@@ -17,6 +17,7 @@
 
 import com.google.android.exoplayer.C;
 import com.google.android.exoplayer.ParserException;
+import com.google.android.exoplayer.text.Cue;
 import com.google.android.exoplayer.text.SubtitleParser;
 import com.google.android.exoplayer.util.MimeTypes;
 import com.google.android.exoplayer.util.ParserUtil;
@@ -74,9 +75,8 @@
           + "(?:(\\.[0-9]+)|:([0-9][0-9])(?:\\.([0-9]+))?)?$");
   private static final Pattern OFFSET_TIME =
       Pattern.compile("^([0-9]+(?:\\.[0-9]+)?)(h|m|s|ms|f|t)$");
-  private static final Pattern FONT_SIZE =
-      Pattern.compile("^(([0-9]*.)?[0-9]+)(px|em|%)$");
-  private static final Pattern ORIGIN_COORDINATES =
+  private static final Pattern FONT_SIZE = Pattern.compile("^(([0-9]*.)?[0-9]+)(px|em|%)$");
+  private static final Pattern PERCENTAGE_COORDINATES =
       Pattern.compile("^(\\d+\\.?\\d*?)% (\\d+\\.?\\d*?)%$");
 
   // TODO: read and apply the following attributes if specified.
@@ -189,23 +189,42 @@ public TtmlSubtitle parse(byte[] bytes, int offset, int length) throws ParserExc
     return globalStyles;
   }
 
+  /**
+   * Parses a region declaration. Supports origin and extent definition but only when defined in
+   * terms of percentage of the viewport. Regions that do not correctly declare origin are ignored.
+   */
   private Pair<String, TtmlRegion> parseRegionAttributes(XmlPullParser xmlParser) {
     String regionId = ParserUtil.getAttributeValue(xmlParser, TtmlNode.ATTR_ID);
     String regionOrigin = ParserUtil.getAttributeValue(xmlParser, TtmlNode.ATTR_TTS_ORIGIN);
+    String regionExtent = ParserUtil.getAttributeValue(xmlParser, TtmlNode.ATTR_TTS_EXTENT);
     if (regionOrigin == null || regionId == null) {
       return null;
     }
-    Matcher originMatcher = ORIGIN_COORDINATES.matcher(regionOrigin);
+    float position = Cue.DIMEN_UNSET;
+    float line = Cue.DIMEN_UNSET;
+    Matcher originMatcher = PERCENTAGE_COORDINATES.matcher(regionOrigin);
     if (originMatcher.matches()) {
       try {
-        float position = Float.parseFloat(originMatcher.group(1)) / 100.f;
-        float line = Float.parseFloat(originMatcher.group(2)) / 100.f;
-        return new Pair<>(regionId, new TtmlRegion(position, line));
+        position = Float.parseFloat(originMatcher.group(1)) / 100.f;
+        line = Float.parseFloat(originMatcher.group(2)) / 100.f;
       } catch (NumberFormatException e) {
-        Log.w(TAG, "Ignoring malformed region declaration: '" + regionOrigin + "'", e);
+        Log.w(TAG, "Ignoring region with malformed origin: '" + regionOrigin + "'", e);
+        position = Cue.DIMEN_UNSET;
+      }
+    }
+    float width = Cue.DIMEN_UNSET;
+    if (regionExtent != null) {
+      Matcher extentMatcher = PERCENTAGE_COORDINATES.matcher(regionExtent);
+      if (extentMatcher.matches()) {
+        try {
+          width = Float.parseFloat(extentMatcher.group(1)) / 100.f;
+        } catch (NumberFormatException e) {
+          Log.w(TAG, "Ignoring malformed region extent: '" + regionExtent + "'", e);
+        }
       }
     }
-    return null;
+    return position != Cue.DIMEN_UNSET ? new Pair<>(regionId, new TtmlRegion(position, line, width))
+        : null;
   }
 
   private String[] parseStyleIds(String parentStyleIds) {
@@ -387,10 +406,11 @@ private static void parseFontSize(String expression, TtmlStyle out) throws Parse
       matcher = FONT_SIZE.matcher(expression);
     } else if (expressions.length == 2){
       matcher = FONT_SIZE.matcher(expressions[1]);
-      Log.w(TAG, "multiple values in fontSize attribute. Picking the second "
-          + "value for vertical font size and ignoring the first.");
+      Log.w(TAG, "Multiple values in fontSize attribute. Picking the second value for vertical font"
+          + " size and ignoring the first.");
     } else {
-      throw new ParserException();
+      throw new ParserException("Invalid number of entries for fontSize: " + expressions.length
+          + ".");
     }
 
     if (matcher.matches()) {
@@ -406,11 +426,11 @@ private static void parseFontSize(String expression, TtmlStyle out) throws Parse
           out.setFontSizeUnit(TtmlStyle.FONT_SIZE_UNIT_PERCENT);
           break;
         default:
-          throw new ParserException();
+          throw new ParserException("Invalid unit for fontSize: '" + unit + "'.");
       }
       out.setFontSize(Float.valueOf(matcher.group(1)));
     } else {
-      throw new ParserException();
+      throw new ParserException("Invalid expression for fontSize: '" + expression + "'.");
     }
   }
 
diff --git a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRegion.java b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRegion.java
index 757d134ad7..135018a861 100644
--- a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRegion.java
+++ b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRegion.java
@@ -24,14 +24,16 @@
 
   public final float position;
   public final float line;
+  public final float width;
 
   public TtmlRegion() {
-    this(Cue.DIMEN_UNSET, Cue.DIMEN_UNSET);
+    this(Cue.DIMEN_UNSET, Cue.DIMEN_UNSET, Cue.DIMEN_UNSET);
   }
 
-  public TtmlRegion(float position, float line) {
+  public TtmlRegion(float position, float line, float width) {
     this.position = position;
     this.line = line;
+    this.width = width;
   }
 
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRenderUtil.java b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRenderUtil.java
index e985e7c82a..a8c69d8ac2 100644
--- a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRenderUtil.java
+++ b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlRenderUtil.java
@@ -46,8 +46,8 @@ public static TtmlStyle resolveStyle(TtmlStyle style, String[] styleIds,
     } else if (style == null && styleIds.length > 1) {
       // Only multiple referential styles present.
       TtmlStyle chainedStyle = new TtmlStyle();
-      for (int i = 0; i < styleIds.length; i++) {
-        chainedStyle.chain(globalStyles.get(styleIds[i]));
+      for (String id : styleIds) {
+        chainedStyle.chain(globalStyles.get(id));
       }
       return chainedStyle;
     } else if (style != null && styleIds != null && styleIds.length == 1) {
@@ -55,8 +55,8 @@ public static TtmlStyle resolveStyle(TtmlStyle style, String[] styleIds,
       return style.chain(globalStyles.get(styleIds[0]));
     } else if (style != null && styleIds != null && styleIds.length > 1) {
       // Merge multiple referential styles into inline style.
-      for (int i = 0; i < styleIds.length; i++) {
-        style.chain(globalStyles.get(styleIds[i]));
+      for (String id : styleIds) {
+        style.chain(globalStyles.get(id));
       }
       return style;
     }
diff --git a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlStyle.java b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlStyle.java
index f153f5e94c..c8a40f4405 100644
--- a/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlStyle.java
+++ b/library/src/main/java/com/google/android/exoplayer/text/ttml/TtmlStyle.java
@@ -37,7 +37,7 @@
   public static final int FONT_SIZE_UNIT_PERCENT = 3;
 
   private static final int OFF = 0;
-  private static final int  ON = 1;
+  private static final int ON = 1;
 
   private String fontFamily;
   private int fontColor;
@@ -113,9 +113,9 @@ public int getFontColor() {
     return fontColor;
   }
 
-  public TtmlStyle setFontColor(int color) {
+  public TtmlStyle setFontColor(int fontColor) {
     Assertions.checkState(inheritableStyle == null);
-    this.fontColor = color;
+    this.fontColor = fontColor;
     hasFontColor = true;
     return this;
   }
@@ -232,8 +232,8 @@ public TtmlStyle setFontSize(float fontSize) {
     return this;
   }
 
-  public TtmlStyle setFontSizeUnit(int unit) {
-    this.fontSizeUnit = unit;
+  public TtmlStyle setFontSizeUnit(int fontSizeUnit) {
+    this.fontSizeUnit = fontSizeUnit;
     return this;
   }
 
