diff --git a/demo/src/main/assets/media.exolist.json b/demo/src/main/assets/media.exolist.json
index fa3365a896..96ba6fd736 100644
--- a/demo/src/main/assets/media.exolist.json
+++ b/demo/src/main/assets/media.exolist.json
@@ -19,7 +19,7 @@
       },
       {
         "name":"4k test",
-        "uri":"/sdcard/Movies/International-Space-Station.mp4",
+        "uri":"/sdcard/Movies/4k.mp4",
         "extension": "mp4"
       }
     ]
diff --git a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
index ae10354e44..0dff62eb93 100644
--- a/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer2/demo/PlayerActivity.java
@@ -239,8 +239,8 @@ private void initializePlayer() {
       UUID drmSchemeUuid = intent.hasExtra(DRM_SCHEME_UUID_EXTRA)
           ? UUID.fromString(intent.getStringExtra(DRM_SCHEME_UUID_EXTRA)) : null;
       demoTest = false;
-      if(intent.hasExtra(EXTENSION_EXTRA))
-                demoTest = intent.getStringExtra(EXTENSION_EXTRA).equalsIgnoreCase("video");
+   //   if(intent.hasExtra(EXTENSION_EXTRA))
+    //            demoTest = intent.getStringExtra(EXTENSION_EXTRA).equalsIgnoreCase("video");
 
       DrmSessionManager<FrameworkMediaCrypto> drmSessionManager = null;
       if (drmSchemeUuid != null) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java
index ebd553162a..1325fbfa4c 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/FileDataSource.java
@@ -91,11 +91,12 @@ public FileDataSourceException(IOException cause) {
     public final int getfile = 1003;
     public final int byebyebye = 1004;
     public final int seekfile = 1005;
+    public final int finishfile = 1006;
 
     public static final int DEFAULT_READ_PACKET_SIZE = 1460*20;//1460*5;//1460
     public static final int MAX_QUEUE_SIZE = 50;
     public static final int CMD_LENGTH = 12;
-
+    public static  boolean remoteFinished = false;
 
     public String LOGTAG = "vivitest";
     public final listen_server listenServer = listen_server.getInstance();
@@ -122,7 +123,7 @@ public long open(DataSpec dataSpec) throws FileDataSourceException {
             remoteFile = true;
             localRemaining = C.LENGTH_UNSET;
             bytesRemaining = C.LENGTH_UNSET;
-
+            remoteFinished = false;
             if( (dataSpec.length == C.LENGTH_UNSET)
                     &&(dataSpec.position == 0)
                     && (fileTotalLength ==C.LENGTH_UNSET)) {
@@ -149,6 +150,7 @@ public long open(DataSpec dataSpec) throws FileDataSourceException {
                     }
                 }
                 seek(dataSpec.position);
+
                 opened = true;
                 if (readRemoteThread == null)
                     readRemoteThread = new Thread(new ReadRemoteThread());
@@ -456,7 +458,7 @@ public void run() {
 
                 if ((packetBufferQue.size() >= MAX_QUEUE_SIZE) ||
                         (opened == false) ||
-                        (bytesRemaining == 0)) {
+                        (bytesRemaining == 0) ) {
 
                     continue;
                 }
@@ -493,8 +495,12 @@ public void run() {
 
                 }
                 recvCmd = recvCmd.fromByteArray(cmdPacketBuffer);
+                if ((recvCmd.type == finishfile) && (recvCmd.length == 0)) {
+                    Log.d(LOGTAG, "remote send finished");
+                     //stop request remote
+                    remoteFinished = true;
 
-                if ((recvCmd.type == byebyebye) && (recvCmd.length == 0)) {
+                }else if ((recvCmd.type == byebyebye) && (recvCmd.length == 0)) {
                     Log.d(LOGTAG, "remote send byebye");
                     if (inCmdStream != null)
                         try {
@@ -520,9 +526,10 @@ public void run() {
                         } catch (IOException e) {
                             e.printStackTrace();
                         }
-                }
 
-                if ((recvCmd.type == sendfile) && (recvCmd.length > 0)) {
+                    sendLocalAll = localRemaining;
+                    //stop read
+                } else if ((recvCmd.type == sendfile) && (recvCmd.length > 0)) {
                     if (inFileStream == null) {
                         try {
                             inFileStream = new DataInputStream(listensock.getInputStream());
