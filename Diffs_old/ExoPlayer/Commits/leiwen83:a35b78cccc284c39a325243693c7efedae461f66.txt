diff --git a/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java b/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java
index 9065088b58..80a123d83f 100644
--- a/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java
+++ b/demo/src/main/java/com/google/android/exoplayer/demo/PlayerActivity.java
@@ -30,10 +30,10 @@
 import com.google.android.exoplayer.demo.player.HlsRendererBuilder;
 import com.google.android.exoplayer.demo.player.SmoothStreamingRendererBuilder;
 import com.google.android.exoplayer.drm.UnsupportedDrmException;
-import com.google.android.exoplayer.metadata.frame.GeobFrame;
-import com.google.android.exoplayer.metadata.frame.Id3Frame;
-import com.google.android.exoplayer.metadata.frame.PrivFrame;
-import com.google.android.exoplayer.metadata.frame.TxxxFrame;
+import com.google.android.exoplayer.metadata.id3.GeobFrame;
+import com.google.android.exoplayer.metadata.id3.Id3Frame;
+import com.google.android.exoplayer.metadata.id3.PrivFrame;
+import com.google.android.exoplayer.metadata.id3.TxxxFrame;
 import com.google.android.exoplayer.text.CaptionStyleCompat;
 import com.google.android.exoplayer.text.Cue;
 import com.google.android.exoplayer.text.SubtitleLayout;
@@ -610,18 +610,18 @@ public void onId3Metadata(List<Id3Frame> id3Frames) {
       if (id3Frame instanceof TxxxFrame) {
         TxxxFrame txxxFrame = (TxxxFrame) id3Frame;
         Log.i(TAG, String.format("ID3 TimedMetadata %s: description=%s, value=%s",
-            id3Frame.frameId, txxxFrame.description, txxxFrame.value));
+            txxxFrame.id, txxxFrame.description, txxxFrame.value));
       } else if (id3Frame instanceof PrivFrame) {
         PrivFrame privFrame = (PrivFrame) id3Frame;
         Log.i(TAG, String.format("ID3 TimedMetadata %s: owner=%s",
-            id3Frame.frameId, privFrame.owner));
+            privFrame.id, privFrame.owner));
       } else if (id3Frame instanceof GeobFrame) {
         GeobFrame geobFrame = (GeobFrame) id3Frame;
         Log.i(TAG, String.format("ID3 TimedMetadata %s: mimeType=%s, filename=%s, description=%s",
-            id3Frame.frameId, geobFrame.mimeType, geobFrame.filename,
+            geobFrame.id, geobFrame.mimeType, geobFrame.filename,
             geobFrame.description));
       } else {
-        Log.i(TAG, String.format("ID3 TimedMetadata %s", id3Frame.frameId));
+        Log.i(TAG, String.format("ID3 TimedMetadata %s", id3Frame.id));
       }
     }
   }
diff --git a/demo/src/main/java/com/google/android/exoplayer/demo/player/DemoPlayer.java b/demo/src/main/java/com/google/android/exoplayer/demo/player/DemoPlayer.java
index d86cbd6524..c3c37bde32 100644
--- a/demo/src/main/java/com/google/android/exoplayer/demo/player/DemoPlayer.java
+++ b/demo/src/main/java/com/google/android/exoplayer/demo/player/DemoPlayer.java
@@ -33,7 +33,7 @@
 import com.google.android.exoplayer.drm.StreamingDrmSessionManager;
 import com.google.android.exoplayer.hls.HlsSampleSource;
 import com.google.android.exoplayer.metadata.MetadataTrackRenderer.MetadataRenderer;
-import com.google.android.exoplayer.metadata.frame.Id3Frame;
+import com.google.android.exoplayer.metadata.id3.Id3Frame;
 import com.google.android.exoplayer.text.Cue;
 import com.google.android.exoplayer.text.TextRenderer;
 import com.google.android.exoplayer.upstream.BandwidthMeter;
@@ -49,7 +49,6 @@
 import java.io.IOException;
 import java.util.Collections;
 import java.util.List;
-import java.util.Map;
 import java.util.concurrent.CopyOnWriteArrayList;
 
 /**
diff --git a/demo/src/main/java/com/google/android/exoplayer/demo/player/HlsRendererBuilder.java b/demo/src/main/java/com/google/android/exoplayer/demo/player/HlsRendererBuilder.java
index 2b4268ca6a..abc3595476 100644
--- a/demo/src/main/java/com/google/android/exoplayer/demo/player/HlsRendererBuilder.java
+++ b/demo/src/main/java/com/google/android/exoplayer/demo/player/HlsRendererBuilder.java
@@ -30,9 +30,9 @@
 import com.google.android.exoplayer.hls.HlsPlaylistParser;
 import com.google.android.exoplayer.hls.HlsSampleSource;
 import com.google.android.exoplayer.hls.PtsTimestampAdjusterProvider;
-import com.google.android.exoplayer.metadata.Id3Parser;
 import com.google.android.exoplayer.metadata.MetadataTrackRenderer;
-import com.google.android.exoplayer.metadata.frame.Id3Frame;
+import com.google.android.exoplayer.metadata.id3.Id3Frame;
+import com.google.android.exoplayer.metadata.id3.Id3Parser;
 import com.google.android.exoplayer.text.TextTrackRenderer;
 import com.google.android.exoplayer.text.eia608.Eia608TrackRenderer;
 import com.google.android.exoplayer.upstream.DataSource;
@@ -49,7 +49,6 @@
 
 import java.io.IOException;
 import java.util.List;
-import java.util.Map;
 
 /**
  * A {@link RendererBuilder} for HLS.
diff --git a/library/src/androidTest/java/com/google/android/exoplayer/metadata/Id3ParserTest.java b/library/src/androidTest/java/com/google/android/exoplayer/metadata/id3/Id3ParserTest.java
similarity index 63%
rename from library/src/androidTest/java/com/google/android/exoplayer/metadata/Id3ParserTest.java
rename to library/src/androidTest/java/com/google/android/exoplayer/metadata/id3/Id3ParserTest.java
index ac95697ea1..6946ba3b07 100644
--- a/library/src/androidTest/java/com/google/android/exoplayer/metadata/Id3ParserTest.java
+++ b/library/src/androidTest/java/com/google/android/exoplayer/metadata/id3/Id3ParserTest.java
@@ -13,15 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata;
-
-import com.google.android.exoplayer.metadata.frame.Id3Frame;
-import com.google.android.exoplayer.metadata.frame.TxxxFrame;
+package com.google.android.exoplayer.metadata.id3;
 
 import junit.framework.TestCase;
 
-import java.util.ArrayList;
-import java.util.Collection;
 import java.util.List;
 
 /**
@@ -30,19 +25,15 @@
 public class Id3ParserTest extends TestCase {
 
   public void testParseTxxxFrames() {
-    byte[] rawId3 = new byte[]{73, 68, 51, 4, 0, 0, 0, 0, 0, 41, 84, 88, 88, 88, 0, 0, 0, 31,
+    byte[] rawId3 = new byte[] {73, 68, 51, 4, 0, 0, 0, 0, 0, 41, 84, 88, 88, 88, 0, 0, 0, 31,
         0, 0, 3, 0, 109, 100, 105, 97, 108, 111, 103, 95, 86, 73, 78, 68, 73, 67, 79, 49, 53, 50,
         55, 54, 54, 52, 95, 115, 116, 97, 114, 116, 0};
-
     Id3Parser parser = new Id3Parser();
     try {
       List<Id3Frame> id3Frames = parser.parse(rawId3, rawId3.length);
       assertNotNull(id3Frames);
       assertEquals(1, id3Frames.size());
-      List<TxxxFrame> txxxFrames = ofType(id3Frames, TxxxFrame.class);
-      assertEquals(1, txxxFrames.size());
-      TxxxFrame txxxFrame = txxxFrames.toArray(new TxxxFrame[1])[0];
-      assertNotNull(txxxFrame);
+      TxxxFrame txxxFrame = (TxxxFrame) id3Frames.get(0);
       assertEquals("", txxxFrame.description);
       assertEquals("mdialog_VINDICO1527664_start", txxxFrame.value);
     } catch (Exception exception) {
@@ -50,14 +41,4 @@ public void testParseTxxxFrames() {
     }
   }
 
-  private static <T> List<T> ofType(Collection<? super T> col, Class<T> type) {
-    final List<T> ret = new ArrayList<>();
-    for (Object o : col) {
-      if(type.isInstance(o)) {
-        ret.add((T) o);
-      }
-    }
-    return ret;
-  }
-
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/frame/BinaryFrame.java b/library/src/main/java/com/google/android/exoplayer/metadata/frame/BinaryFrame.java
deleted file mode 100644
index b96fe0a428..0000000000
--- a/library/src/main/java/com/google/android/exoplayer/metadata/frame/BinaryFrame.java
+++ /dev/null
@@ -1,14 +0,0 @@
-package com.google.android.exoplayer.metadata.frame;
-
-/**
- * Binary ID3 frame
- */
-public class BinaryFrame extends Id3Frame {
-
-  public final byte[] data;
-
-  public BinaryFrame(String type, byte[] data) {
-    super(type);
-    this.data = data;
-  }
-}
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/frame/Id3Frame.java b/library/src/main/java/com/google/android/exoplayer/metadata/frame/Id3Frame.java
deleted file mode 100644
index aff924d5b9..0000000000
--- a/library/src/main/java/com/google/android/exoplayer/metadata/frame/Id3Frame.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package com.google.android.exoplayer.metadata.frame;
-
-/**
- * Base abstract class for ID3 frames
- */
-public abstract class Id3Frame {
-
-  public final String frameId;
-
-  public Id3Frame(String frameId) {
-    this.frameId = frameId;
-  }
-}
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/id3/BinaryFrame.java b/library/src/main/java/com/google/android/exoplayer/metadata/id3/BinaryFrame.java
new file mode 100644
index 0000000000..65eda909c2
--- /dev/null
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/id3/BinaryFrame.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.google.android.exoplayer.metadata.id3;
+
+/**
+ * Binary ID3 frame.
+ */
+public final class BinaryFrame extends Id3Frame {
+
+  public final byte[] data;
+
+  public BinaryFrame(String type, byte[] data) {
+    super(type);
+    this.data = data;
+  }
+
+}
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/frame/GeobFrame.java b/library/src/main/java/com/google/android/exoplayer/metadata/id3/GeobFrame.java
similarity index 86%
rename from library/src/main/java/com/google/android/exoplayer/metadata/frame/GeobFrame.java
rename to library/src/main/java/com/google/android/exoplayer/metadata/id3/GeobFrame.java
index 4746610364..109b1fb4b0 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/frame/GeobFrame.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/id3/GeobFrame.java
@@ -13,11 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata.frame;
+package com.google.android.exoplayer.metadata.id3;
 
 /**
- * A metadata that contains parsed ID3 GEOB (General Encapsulated Object) frame data associated
- * with time indices.
+ * GEOB (General Encapsulated Object) ID3 frame.
  */
 public final class GeobFrame extends Id3Frame {
 
@@ -35,4 +34,5 @@ public GeobFrame(String mimeType, String filename, String description, byte[] da
     this.description = description;
     this.data = data;
   }
+
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/id3/Id3Frame.java b/library/src/main/java/com/google/android/exoplayer/metadata/id3/Id3Frame.java
new file mode 100644
index 0000000000..11e6f33f0c
--- /dev/null
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/id3/Id3Frame.java
@@ -0,0 +1,32 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.google.android.exoplayer.metadata.id3;
+
+/**
+ * Base class for ID3 frames.
+ */
+public abstract class Id3Frame {
+
+  /**
+   * The frame ID.
+   */
+  public final String id;
+
+  public Id3Frame(String id) {
+    this.id = id;
+  }
+
+}
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/Id3Parser.java b/library/src/main/java/com/google/android/exoplayer/metadata/id3/Id3Parser.java
similarity index 87%
rename from library/src/main/java/com/google/android/exoplayer/metadata/Id3Parser.java
rename to library/src/main/java/com/google/android/exoplayer/metadata/id3/Id3Parser.java
index 5aaa4e15e2..deac62d8e5 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/Id3Parser.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/id3/Id3Parser.java
@@ -13,14 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata;
+package com.google.android.exoplayer.metadata.id3;
 
 import com.google.android.exoplayer.ParserException;
-import com.google.android.exoplayer.metadata.frame.BinaryFrame;
-import com.google.android.exoplayer.metadata.frame.GeobFrame;
-import com.google.android.exoplayer.metadata.frame.Id3Frame;
-import com.google.android.exoplayer.metadata.frame.PrivFrame;
-import com.google.android.exoplayer.metadata.frame.TxxxFrame;
+import com.google.android.exoplayer.metadata.MetadataParser;
 import com.google.android.exoplayer.util.MimeTypes;
 import com.google.android.exoplayer.util.ParsableByteArray;
 
@@ -46,8 +42,8 @@ public boolean canParse(String mimeType) {
   }
 
   @Override
-  public List<Id3Frame> parse( byte[] data, int size)
-          throws UnsupportedEncodingException, ParserException {
+  public List<Id3Frame> parse(byte[] data, int size) throws UnsupportedEncodingException,
+      ParserException {
     List<Id3Frame> id3Frames = new ArrayList<>();
     ParsableByteArray id3Data = new ParsableByteArray(data, size);
     int id3Size = parseId3Header(id3Data);
@@ -75,8 +71,7 @@ public boolean canParse(String mimeType) {
         String description = new String(frame, 0, firstZeroIndex, charset);
         int valueStartIndex = firstZeroIndex + delimiterLength(encoding);
         int valueEndIndex = indexOfEOS(frame, valueStartIndex, encoding);
-        String value = new String(frame, valueStartIndex, valueEndIndex - valueStartIndex,
-                charset);
+        String value = new String(frame, valueStartIndex, valueEndIndex - valueStartIndex, charset);
         id3Frames.add(new TxxxFrame(description, value));
       } else if (frameId0 == 'P' && frameId1 == 'R' && frameId2 == 'I' && frameId3 == 'V') {
         // Check frame ID == PRIV
@@ -100,23 +95,23 @@ public boolean canParse(String mimeType) {
         int filenameStartIndex = firstZeroIndex + 1;
         int filenameEndIndex = indexOfEOS(frame, filenameStartIndex, encoding);
         String filename = new String(frame, filenameStartIndex,
-                filenameEndIndex - filenameStartIndex, charset);
+            filenameEndIndex - filenameStartIndex, charset);
         int descriptionStartIndex = filenameEndIndex + delimiterLength(encoding);
         int descriptionEndIndex = indexOfEOS(frame, descriptionStartIndex, encoding);
         String description = new String(frame, descriptionStartIndex,
-                descriptionEndIndex - descriptionStartIndex, charset);
+            descriptionEndIndex - descriptionStartIndex, charset);
 
         int objectDataSize = frameSize - 1 /* encoding byte */ - descriptionEndIndex
-                - delimiterLength(encoding);
+            - delimiterLength(encoding);
         byte[] objectData = new byte[objectDataSize];
         System.arraycopy(frame, descriptionEndIndex + delimiterLength(encoding), objectData, 0,
-                objectDataSize);
+            objectDataSize);
         id3Frames.add(new GeobFrame(mimeType, filename, description, objectData));
       } else {
         String type = String.format(Locale.US, "%c%c%c%c", frameId0, frameId1, frameId2, frameId3);
         byte[] frame = new byte[frameSize];
         id3Data.readBytes(frame, 0, frameSize);
-        id3Frames.add(new BinaryFrame(type,frame));
+        id3Frames.add(new BinaryFrame(type, frame));
       }
 
       id3Size -= frameSize + 10 /* header size */;
@@ -154,8 +149,8 @@ private static int indexOfEOS(byte[] data, int fromIndex, int encodingByte) {
   }
 
   private static int delimiterLength(int encodingByte) {
-    return (encodingByte == ID3_TEXT_ENCODING_ISO_8859_1
-            || encodingByte == ID3_TEXT_ENCODING_UTF_8) ? 1 : 2;
+    return (encodingByte == ID3_TEXT_ENCODING_ISO_8859_1 || encodingByte == ID3_TEXT_ENCODING_UTF_8)
+        ? 1 : 2;
   }
 
   /**
@@ -171,7 +166,7 @@ private static int parseId3Header(ParsableByteArray id3Buffer) throws ParserExce
     int id3 = id3Buffer.readUnsignedByte();
     if (id1 != 'I' || id2 != 'D' || id3 != '3') {
       throw new ParserException(String.format(Locale.US,
-              "Unexpected ID3 file identifier, expected \"ID3\", actual \"%c%c%c\".", id1, id2, id3));
+          "Unexpected ID3 file identifier, expected \"ID3\", actual \"%c%c%c\".", id1, id2, id3));
     }
     id3Buffer.skipBytes(2); // Skip version.
 
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/frame/PrivFrame.java b/library/src/main/java/com/google/android/exoplayer/metadata/id3/PrivFrame.java
similarity index 85%
rename from library/src/main/java/com/google/android/exoplayer/metadata/frame/PrivFrame.java
rename to library/src/main/java/com/google/android/exoplayer/metadata/id3/PrivFrame.java
index cad0ba9878..3a429b19e4 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/frame/PrivFrame.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/id3/PrivFrame.java
@@ -13,11 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata.frame;
+package com.google.android.exoplayer.metadata.id3;
 
 /**
- * A metadata that contains parsed ID3 PRIV (Private) frame data associated
- * with time indices.
+ * PRIV (Private) ID3 frame.
  */
 public final class PrivFrame extends Id3Frame {
 
@@ -31,4 +30,5 @@ public PrivFrame(String owner, byte[] privateData) {
     this.owner = owner;
     this.privateData = privateData;
   }
+
 }
diff --git a/library/src/main/java/com/google/android/exoplayer/metadata/frame/TxxxFrame.java b/library/src/main/java/com/google/android/exoplayer/metadata/id3/TxxxFrame.java
similarity index 85%
rename from library/src/main/java/com/google/android/exoplayer/metadata/frame/TxxxFrame.java
rename to library/src/main/java/com/google/android/exoplayer/metadata/id3/TxxxFrame.java
index d20b35a3b4..f31ad9d54f 100644
--- a/library/src/main/java/com/google/android/exoplayer/metadata/frame/TxxxFrame.java
+++ b/library/src/main/java/com/google/android/exoplayer/metadata/id3/TxxxFrame.java
@@ -13,11 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.android.exoplayer.metadata.frame;
+package com.google.android.exoplayer.metadata.id3;
 
 /**
- * A metadata that contains parsed ID3 PRIV (Private) frame data associated
- * with time indices.
+ * TXXX (User defined text information) ID3 frame.
  */
 public final class TxxxFrame extends Id3Frame {
 
@@ -31,4 +30,5 @@ public TxxxFrame(String description, String value) {
     this.description = description;
     this.value = value;
   }
+
 }
