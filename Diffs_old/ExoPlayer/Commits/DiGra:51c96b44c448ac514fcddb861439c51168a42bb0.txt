diff --git a/.github/ISSUE_TEMPLATE/bug.md b/.github/ISSUE_TEMPLATE/bug.md
index c0980df440..8824c9e8d8 100644
--- a/.github/ISSUE_TEMPLATE/bug.md
+++ b/.github/ISSUE_TEMPLATE/bug.md
@@ -55,8 +55,3 @@ Specify the absolute version number. Avoid using terms such as "latest".
 Specify the devices and versions of Android on which the issue can be
 reproduced, and how easily it reproduces. If possible, please test on multiple
 devices and Android versions.
-
-<!-- DO NOT DELETE
-validate_template=true
-template_path=.github/ISSUE_TEMPLATE/bug.md
--->
diff --git a/.github/ISSUE_TEMPLATE/content_not_playing.md b/.github/ISSUE_TEMPLATE/content_not_playing.md
index c8d4668a6a..91ddf725ce 100644
--- a/.github/ISSUE_TEMPLATE/content_not_playing.md
+++ b/.github/ISSUE_TEMPLATE/content_not_playing.md
@@ -51,8 +51,3 @@ log snippet is NOT sufficient. Please attach the captured bug report as a file.
 If you don't wish to post it publicly, please submit the issue, then email the
 bug report to dev.exoplayer@gmail.com using a subject in the format
 "Issue #1234", where "#1234" should be replaced with your issue number.
-
-<!-- DO NOT DELETE
-validate_template=true
-template_path=.github/ISSUE_TEMPLATE/content_not_playing.md
--->
diff --git a/.github/ISSUE_TEMPLATE/feature_request.md b/.github/ISSUE_TEMPLATE/feature_request.md
index d481de33ce..d660d0342a 100644
--- a/.github/ISSUE_TEMPLATE/feature_request.md
+++ b/.github/ISSUE_TEMPLATE/feature_request.md
@@ -28,8 +28,3 @@ A clear and concise description of your proposed solution, if you have one.
 ### Alternatives considered
 A clear and concise description of any alternative solutions you considered,
 if applicable.
-
-<!-- DO NOT DELETE
-validate_template=true
-template_path=.github/ISSUE_TEMPLATE/feature_request.md
--->
diff --git a/.github/ISSUE_TEMPLATE/question.md b/.github/ISSUE_TEMPLATE/question.md
index b5f40884d8..f3ad83b67d 100644
--- a/.github/ISSUE_TEMPLATE/question.md
+++ b/.github/ISSUE_TEMPLATE/question.md
@@ -48,8 +48,3 @@ dev.exoplayer@gmail.com using a subject in the format "Issue #1234", where
 "#1234" should be replaced with your issue number. Provide all the metadata we'd
 need to play the content like drm license urls or similar. If the content is
 accessible only in certain countries or regions, please say so.
-
-<!-- DO NOT DELETE
-validate_template=true
-template_path=.github/ISSUE_TEMPLATE/question.md
--->
diff --git a/RELEASENOTES.md b/RELEASENOTES.md
index a3f6c1ebfc..3169dac565 100644
--- a/RELEASENOTES.md
+++ b/RELEASENOTES.md
@@ -1,6 +1,51 @@
 # Release notes #
 
-### 2.10.4 ###
+### 2.10.5 (2019-09-20) ###
+
+* Add `Player.isPlaying` and `EventListener.onIsPlayingChanged` to check whether
+  the playback position is advancing. This helps to determine if playback is
+  suppressed due to audio focus loss. Also add
+  `Player.getPlaybackSuppressedReason` to determine the reason of the
+  suppression ([#6203](https://github.com/google/ExoPlayer/issues/6203)).
+* Track selection
+  * Add `allowAudioMixedChannelCountAdaptiveness` parameter to
+    `DefaultTrackSelector` to allow adaptive selections of audio tracks with
+    different channel counts.
+  * Improve text selection logic to always prefer the better language matches
+    over other selection parameters.
+  * Fix audio selection issue where languages are compared by bitrate
+    ([#6335](https://github.com/google/ExoPlayer/issues/6335)).
+* Performance
+  * Increase maximum video buffer size from 13MB to 32MB. The previous default
+    was too small for high quality streams.
+  * Reset `DefaultBandwidthMeter` to initial values on network change.
+  * Bypass sniffing in `ProgressiveMediaPeriod` in case a single extractor is
+    provided ([#6325](https://github.com/google/ExoPlayer/issues/6325)).
+* Metadata
+  * Support EMSG V1 boxes in FMP4.
+  * Support unwrapping of nested metadata (e.g. ID3 and SCTE-35 in EMSG).
+* Add `HttpDataSource.getResponseCode` to provide the status code associated
+  with the most recent HTTP response.
+* Fix transitions between packed audio and non-packed audio segments in HLS
+  ([#6444](https://github.com/google/ExoPlayer/issues/6444)).
+* Fix issue where a request would be retried after encountering an error, even
+  though the `LoadErrorHandlingPolicy` classified the error as fatal.
+* Fix initialization data handling for FLAC in MP4
+  ([#6396](https://github.com/google/ExoPlayer/issues/6396),
+  [#6397](https://github.com/google/ExoPlayer/issues/6397)).
+* Fix decoder selection for E-AC3 JOC streams
+  ([#6398](https://github.com/google/ExoPlayer/issues/6398)).
+* Fix `PlayerNotificationManager` to show play icon rather than pause icon when
+  playback is ended ([#6324](https://github.com/google/ExoPlayer/issues/6324)).
+* RTMP extension: Upgrade LibRtmp-Client-for-Android to fix RTMP playback issues
+  ([#4200](https://github.com/google/ExoPlayer/issues/4200),
+  [#4249](https://github.com/google/ExoPlayer/issues/4249),
+  [#4319](https://github.com/google/ExoPlayer/issues/4319),
+  [#4337](https://github.com/google/ExoPlayer/issues/4337)).
+* IMA extension: Fix crash in `ImaAdsLoader.onTimelineChanged`
+  ([#5831](https://github.com/google/ExoPlayer/issues/5831)).
+
+### 2.10.4 (2019-07-26) ###
 
 * Offline: Add `Scheduler` implementation that uses `WorkManager`.
 * Add ability to specify a description when creating notification channels via
@@ -31,7 +76,7 @@
   after manual selection changes for other renderers
   ([#6256](https://github.com/google/ExoPlayer/issues/6256)).
 
-### 2.10.3 ###
+### 2.10.3 (2019-07-09) ###
 
 * Display last frame when seeking to end of stream
   ([#2568](https://github.com/google/ExoPlayer/issues/2568)).
@@ -50,7 +95,7 @@
 * MediaSession extension: Fix `MediaSessionConnector.play()` not resuming
   playback ([#6093](https://github.com/google/ExoPlayer/issues/6093)).
 
-### 2.10.2 ###
+### 2.10.2 (2019-06-03) ###
 
 * Add `ResolvingDataSource` for just-in-time resolution of `DataSpec`s
   ([#5779](https://github.com/google/ExoPlayer/issues/5779)).
@@ -100,7 +145,7 @@
 * Fix bug in `CastPlayer.getCurrentWindowIndex()`
   ([#5955](https://github.com/google/ExoPlayer/issues/5955)).
 
-### 2.10.1 ###
+### 2.10.1 (2019-05-16) ###
 
 * Offline: Add option to remove all downloads.
 * HLS: Fix `NullPointerException` when using HLS chunkless preparation
@@ -112,7 +157,7 @@
 * Add a workaround for a decoder failure on ZTE Axon7 mini devices when playing
   48kHz audio ([#5821](https://github.com/google/ExoPlayer/issues/5821)).
 
-### 2.10.0 ###
+### 2.10.0 (2019-04-15) ###
 
 * Core library:
   * Improve decoder re-use between playbacks
@@ -125,6 +170,8 @@
     `ExtractorsFactory` instances must now be passed via the
     `ProgressiveMediaSource.Factory` constructor, and `setExtractorsFactory` is
     deprecated.
+  * Make the default minimum buffer size equal the maximum buffer size for video
+    playbacks ([#2083](https://github.com/google/ExoPlayer/issues/2083)).
   * Move `PriorityTaskManager` from `DefaultLoadControl` to `SimpleExoPlayer`.
   * Add new `ExoPlaybackException` types for remote exceptions and out-of-memory
     errors.
@@ -200,7 +247,7 @@
     ([#5547](https://github.com/google/ExoPlayer/issues/5547)).
 * DRM:
   * Fix black flicker when keys rotate in DRM protected content
-  ([#3561](https://github.com/google/ExoPlayer/issues/3561)).
+    ([#3561](https://github.com/google/ExoPlayer/issues/3561)).
   * Work around lack of LA_URL attribute in PlayReady key request init data.
 * CEA-608: Improved conformance to the specification
   ([#3860](https://github.com/google/ExoPlayer/issues/3860)).
@@ -230,13 +277,11 @@
     order when in shuffle mode.
   * Allow handling of custom commands via `registerCustomCommandReceiver`.
   * Add ability to include an extras `Bundle` when reporting a custom error.
-* LoadControl: Set minimum buffer for playbacks with video equal to maximum
-  buffer ([#2083](https://github.com/google/ExoPlayer/issues/2083)).
 * Log warnings when extension native libraries can't be used, to help with
   diagnosing playback failures
   ([#5788](https://github.com/google/ExoPlayer/issues/5788)).
 
-### 2.9.6 ###
+### 2.9.6 (2019-02-19) ###
 
 * Remove `player` and `isTopLevelSource` parameters from `MediaSource.prepare`.
 * IMA extension:
@@ -259,7 +304,7 @@
   may cause problems for some devices and/or non-interlaced content
   ([#5003](https://github.com/google/ExoPlayer/issues/5003)).
 
-### 2.9.5 ###
+### 2.9.5 (2019-01-31) ###
 
 * HLS: Parse `CHANNELS` attribute from `EXT-X-MEDIA` tag.
 * ConcatenatingMediaSource:
@@ -276,7 +321,7 @@
 * MP3: Wider fix for issue where streams would play twice on some Samsung
   devices ([#4519](https://github.com/google/ExoPlayer/issues/4519)).
 
-### 2.9.4 ###
+### 2.9.4 (2019-01-15) ###
 
 * IMA extension: Clear ads loader listeners on release
   ([#4114](https://github.com/google/ExoPlayer/issues/4114)).
@@ -305,7 +350,7 @@
 * Fix issue where uneven track durations in MP4 streams can cause OOM problems
   ([#3670](https://github.com/google/ExoPlayer/issues/3670)).
 
-### 2.9.3 ###
+### 2.9.3 (2018-12-20) ###
 
 * Captions: Support PNG subtitles in SMPTE-TT
   ([#1583](https://github.com/google/ExoPlayer/issues/1583)).
@@ -324,7 +369,7 @@
 * Workaround for MiTV (dangal) issue when swapping output surface
   ([#5169](https://github.com/google/ExoPlayer/issues/5169)).
 
-### 2.9.2 ###
+### 2.9.2 (2018-11-28) ###
 
 * HLS:
   * Fix issue causing unnecessary media playlist requests when playing live
@@ -351,7 +396,7 @@
   ([#5162](https://github.com/google/ExoPlayer/issues/5162)).
 * Fix UUID passed to `MediaCrypto` when using `C.CLEARKEY_UUID` before API 27.
 
-### 2.9.1 ###
+### 2.9.1 (2018-11-01) ###
 
 * Add convenience methods `Player.next`, `Player.previous`, `Player.hasNext`
   and `Player.hasPrevious`
@@ -403,7 +448,7 @@
 * Swap recommended order for google() and jcenter() in gradle config
   ([#4997](https://github.com/google/ExoPlayer/issues/4997)).
 
-### 2.9.0 ###
+### 2.9.0 (2018-09-06) ###
 
 * Turn on Java 8 compiler support for the ExoPlayer library. Apps may need to
   add `compileOptions { targetCompatibility JavaVersion.VERSION_1_8 }` to their
@@ -565,13 +610,13 @@
 * Cronet extension: Now distributed via jCenter.
 * FFmpeg extension: Support mu-law and A-law PCM.
 
-### 2.8.4 ###
+### 2.8.4 (2018-08-17) ###
 
 * IMA extension: Improve handling of consecutive empty ad groups
   ([#4030](https://github.com/google/ExoPlayer/issues/4030)),
   ([#4280](https://github.com/google/ExoPlayer/issues/4280)).
 
-### 2.8.3 ###
+### 2.8.3 (2018-07-23) ###
 
 * IMA extension:
   * Fix behavior when creating/releasing the player then releasing
@@ -614,7 +659,7 @@
   ([#4611](https://github.com/google/ExoPlayer/issues/4611)).
 * Improved compatibility with FireOS devices.
 
-### 2.8.2 ###
+### 2.8.2 (2018-06-06) ###
 
 * IMA extension: Don't advertise support for video/mpeg ad media, as we don't
   have an extractor for this
@@ -641,7 +686,7 @@
 * Allow apps to register custom MIME types
   ([#4264](https://github.com/google/ExoPlayer/issues/4264)).
 
-### 2.8.1 ###
+### 2.8.1 (2018-05-22) ###
 
 * HLS:
   * Fix playback of livestreams with EXT-X-PROGRAM-DATE-TIME tags
@@ -674,7 +719,7 @@
     * Support TTML font size using % correctly (as percentage of document cell
       resolution).
 
-### 2.8.0 ###
+### 2.8.0 (2018-05-03) ###
 
 * Downloading:
   * Add `DownloadService`, `DownloadManager` and related classes
@@ -788,12 +833,12 @@
   `BaseRenderer.onStreamChanged`.
 * Added dependencies on checkerframework annotations for static code analysis.
 
-### 2.7.3 ###
+### 2.7.3 (2018-04-04) ###
 
 * Fix ProGuard configuration for Cast, IMA and OkHttp extensions.
 * Update OkHttp extension to depend on OkHttp 3.10.0.
 
-### 2.7.2 ###
+### 2.7.2 (2018-03-29) ###
 
 * Gradle: Upgrade Gradle version from 4.1 to 4.4 so it can work with Android
   Studio 3.1 ([#3708](https://github.com/google/ExoPlayer/issues/3708)).
@@ -807,7 +852,7 @@
 * MediaSession extension: Omit fast forward and rewind actions when media is not
   seekable ([#4001](https://github.com/google/ExoPlayer/issues/4001)).
 
-### 2.7.1 ###
+### 2.7.1 (2018-03-09) ###
 
 * Gradle: Replaced 'compile' (deprecated) with 'implementation' and
   'api'. This may lead to build breakage for applications upgrading from
@@ -827,7 +872,7 @@
 * Video: Force rendering a frame periodically in `MediaCodecVideoRenderer` and
   `LibvpxVideoRenderer`, even if it is late.
 
-### 2.7.0 ###
+### 2.7.0 (2018-02-19) ###
 
 * Player interface:
   * Add optional parameter to `stop` to reset the player when stopping.
@@ -953,7 +998,7 @@
   ([#3340](https://github.com/google/ExoPlayer/issues/3340)).
 * Demo app: Add ability to download not DRM protected content.
 
-### 2.6.1 ###
+### 2.6.1 (2017-12-15) ###
 
 * Add factories to `ExtractorMediaSource`, `HlsMediaSource`, `SsMediaSource`,
   `DashMediaSource` and `SingleSampleMediaSource`.
@@ -997,7 +1042,7 @@
 * Prevent period transitions when seeking to the end of a period when paused
   ([#2439](https://github.com/google/ExoPlayer/issues/2439)).
 
-### 2.6.0 ###
+### 2.6.0 (2017-11-03) ###
 
 * Removed "r" prefix from versions. This release is "2.6.0", not "r2.6.0".
 * New `Player.DefaultEventListener` abstract class can be extended to avoid
@@ -1067,7 +1112,7 @@
 * Unit tests moved to Robolectric.
 * Misc bugfixes.
 
-### r2.5.4 ###
+### r2.5.4 (2017-10-19) ###
 
 * Remove unnecessary media playlist fetches during playback of live HLS streams.
 * Add the ability to inject a HLS playlist parser through `HlsMediaSource`.
@@ -1085,7 +1130,7 @@
   `FrameworkMediaCrypto` and by making `DefaultDashChunkSource.getNextChunk`
   non-final.
 
-### r2.5.3 ###
+### r2.5.3 (2017-09-20) ###
 
 * IMA extension: Support skipping of skippable ads on AndroidTV and other
   non-touch devices ([#3258](https://github.com/google/ExoPlayer/issues/3258)).
@@ -1100,7 +1145,7 @@
 * Caching: Force use of BouncyCastle on JellyBean to fix decryption issue
   ([#2755](https://github.com/google/ExoPlayer/issues/2755)).
 
-### r2.5.2 ###
+### r2.5.2 (2017-09-11) ###
 
 * IMA extension: Fix issue where ad playback could end prematurely for some
   content types ([#3180](https://github.com/google/ExoPlayer/issues/3180)).
@@ -1126,14 +1171,14 @@
 * Workaround for SimpleExoPlayerView's surface not being hidden properly
   ([#3160](https://github.com/google/ExoPlayer/issues/3160)).
 
-### r2.5.1 ###
+### r2.5.1 (2017-08-08) ###
 
 * Fix an issue that could cause the reported playback position to stop advancing
   in some cases.
 * Fix an issue where a Surface could be released whilst still in use by the
   player.
 
-### r2.5.0 ###
+### r2.5.0 (2017-08-07) ###
 
 * IMA extension: Wraps the Google Interactive Media Ads (IMA) SDK to provide an
   easy and seamless way of incorporating display ads into ExoPlayer playbacks.
@@ -1187,7 +1232,7 @@
   media playbacks ([#2900](https://github.com/google/ExoPlayer/issues/2900)).
 * Misc bugfixes.
 
-### r2.4.4 ###
+### r2.4.4 (2017-07-19) ###
 
 * HLS/MPEG-TS: Some initial optimizations of MPEG-TS extractor performance
   ([#3040](https://github.com/google/ExoPlayer/issues/3040)).
@@ -1198,7 +1243,7 @@
 * Video: Fix video dimension reporting on some devices
   ([#3007](https://github.com/google/ExoPlayer/issues/3007)).
 
-### r2.4.3 ###
+### r2.4.3 (2017-06-30) ###
 
 * Audio: Workaround custom audio decoders misreporting their maximum supported
   channel counts ([#2940](https://github.com/google/ExoPlayer/issues/2940)).
@@ -1216,7 +1261,7 @@
   ([#2977](https://github.com/google/ExoPlayer/pull/2977)).
 * Misc bugfixes.
 
-### r2.4.2 ###
+### r2.4.2 (2017-06-06) ###
 
 * Stability: Work around Nexus 10 reboot when playing certain content
   ([#2806](https://github.com/google/ExoPlayer/issues/2806)).
@@ -1230,7 +1275,7 @@
   ([#2871](https://github.com/google/ExoPlayer/issues/2871)).
 * Misc bugfixes.
 
-### r2.4.1 ###
+### r2.4.1 (2017-05-23) ###
 
 * Stability: Avoid OutOfMemoryError in extractors when parsing malformed media
   ([#2780](https://github.com/google/ExoPlayer/issues/2780)).
@@ -1253,7 +1298,7 @@
   ([#2824](https://github.com/google/ExoPlayer/issues/2824)).
 * Misc bugfixes.
 
-### r2.4.0 ###
+### r2.4.0 (2017-04-25) ###
 
 * New modular library structure. You can read more about depending on individual
   library modules
@@ -1286,7 +1331,7 @@
 * FLAC extension: Enabled 64 bit targets.
 * Misc bugfixes.
 
-### r2.3.1 ###
+### r2.3.1 (2017-03-23) ###
 
 * Fix NPE enabling WebVTT subtitles in DASH streams
   ([#2596](https://github.com/google/ExoPlayer/issues/2596)).
@@ -1295,7 +1340,7 @@
 * Minor fix for CEA-708 decoder
   ([#2595](https://github.com/google/ExoPlayer/issues/2595)).
 
-### r2.3.0 ###
+### r2.3.0 (2017-03-16) ###
 
 * GVR extension: Wraps the Google VR Audio SDK to provide spatial audio
   rendering. You can read more about the GVR extension
@@ -1342,7 +1387,7 @@
   ([#2427](https://github.com/google/ExoPlayer/issues/2427)).
 * Misc bugfixes.
 
-### r2.2.0 ###
+### r2.2.0 (2017-01-30) ###
 
 * Demo app: Automatic recovery from BehindLiveWindowException, plus improved
   handling of pausing and resuming live streams
@@ -1405,7 +1450,7 @@
   [#2264](https://github.com/google/ExoPlayer/issues/2264) and
   [#2290](https://github.com/google/ExoPlayer/issues/2290).
 
-### r2.1.1 ###
+### r2.1.1 (2016-12-20) ###
 
 * Fix some subtitle types (e.g. WebVTT) being displayed out of sync
   ([#2208](https://github.com/google/ExoPlayer/issues/2208)).
@@ -1415,7 +1460,7 @@
 * Fix issue where playbacks could get stuck in the initial buffering state if
   over 1MB of data needs to be read to initialize the playback.
 
-### r2.1.0 ###
+### r2.1.0 (2016-12-14) ###
 
 * HLS: Support for seeking in live streams
   ([#87](https://github.com/google/ExoPlayer/issues/87)).
@@ -1469,12 +1514,12 @@
   ([#2145](https://github.com/google/ExoPlayer/issues/2145)).
 * Misc bugfixes.
 
-### r2.0.4 ###
+### r2.0.4 (2016-10-20) ###
 
 * Fix crash on Jellybean devices when using playback controls
   ([#1965](https://github.com/google/ExoPlayer/issues/1965)).
 
-### r2.0.3 ###
+### r2.0.3 (2016-10-17) ###
 
 * Fixed NullPointerException in ExtractorMediaSource
   ([#1914](https://github.com/google/ExoPlayer/issues/1914)).
@@ -1491,7 +1536,7 @@
 * Improvements to Cronet network stack extension.
 * Misc bug fixes.
 
-### r2.0.2 ###
+### r2.0.2 (2016-10-06) ###
 
 * Fixes for MergingMediaSource and sideloaded subtitles.
   ([#1882](https://github.com/google/ExoPlayer/issues/1882),
@@ -1502,7 +1547,7 @@
 * Initial support for fragmented MP4 in HLS.
 * Misc bug fixes and minor features.
 
-### r2.0.1 ###
+### r2.0.1 (2016-09-30) ###
 
 * Fix playback of short duration content
   ([#1837](https://github.com/google/ExoPlayer/issues/1837)).
@@ -1511,7 +1556,7 @@
 * Fix live stream buffering (out of memory) issue
   ([#1825](https://github.com/google/ExoPlayer/issues/1825)).
 
-### r2.0.0 ###
+### r2.0.0 (2016-09-14) ###
 
 ExoPlayer 2.x is a major iteration of the library. It includes significant API
 and architectural changes, new features and many bug fixes. You can read about
diff --git a/constants.gradle b/constants.gradle
index 6848051137..e9c4c6cbf9 100644
--- a/constants.gradle
+++ b/constants.gradle
@@ -13,8 +13,8 @@
 // limitations under the License.
 project.ext {
     // ExoPlayer version and version code.
-    releaseVersion = '2.10.4'
-    releaseVersionCode = 2010004
+    releaseVersion = '2.10.5'
+    releaseVersionCode = 2010005
     minSdkVersion = 16
     targetSdkVersion = 28
     compileSdkVersion = 28
diff --git a/extensions/cast/src/main/java/com/google/android/exoplayer2/ext/cast/CastPlayer.java b/extensions/cast/src/main/java/com/google/android/exoplayer2/ext/cast/CastPlayer.java
index bc0987322b..23d625b9ee 100644
--- a/extensions/cast/src/main/java/com/google/android/exoplayer2/ext/cast/CastPlayer.java
+++ b/extensions/cast/src/main/java/com/google/android/exoplayer2/ext/cast/CastPlayer.java
@@ -327,6 +327,12 @@ public int getPlaybackState() {
     return playbackState;
   }
 
+  @Override
+  @PlaybackSuppressionReason
+  public int getPlaybackSuppressionReason() {
+    return Player.PLAYBACK_SUPPRESSION_REASON_NONE;
+  }
+
   @Override
   @Nullable
   public ExoPlaybackException getPlaybackError() {
@@ -542,6 +548,7 @@ private void updateInternalState() {
       return;
     }
 
+    boolean wasPlaying = playbackState == Player.STATE_READY && playWhenReady;
     int playbackState = fetchPlaybackState(remoteMediaClient);
     boolean playWhenReady = !remoteMediaClient.isPaused();
     if (this.playbackState != playbackState
@@ -552,6 +559,11 @@ private void updateInternalState() {
           new ListenerNotificationTask(
               listener -> listener.onPlayerStateChanged(this.playWhenReady, this.playbackState)));
     }
+    boolean isPlaying = playbackState == Player.STATE_READY && playWhenReady;
+    if (wasPlaying != isPlaying) {
+      notificationsBatch.add(
+          new ListenerNotificationTask(listener -> listener.onIsPlayingChanged(isPlaying)));
+    }
     @RepeatMode int repeatMode = fetchRepeatMode(remoteMediaClient);
     if (this.repeatMode != repeatMode) {
       this.repeatMode = repeatMode;
diff --git a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSource.java b/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSource.java
index ca196b1d2f..0f94698e7a 100644
--- a/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSource.java
+++ b/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetDataSource.java
@@ -299,6 +299,13 @@ public void clearAllRequestProperties() {
     requestProperties.clear();
   }
 
+  @Override
+  public int getResponseCode() {
+    return responseInfo == null || responseInfo.getHttpStatusCode() <= 0
+        ? -1
+        : responseInfo.getHttpStatusCode();
+  }
+
   @Override
   public Map<String, List<String>> getResponseHeaders() {
     return responseInfo == null ? Collections.emptyMap() : responseInfo.getAllHeaders();
diff --git a/extensions/flac/src/androidTest/AndroidManifest.xml b/extensions/flac/src/androidTest/AndroidManifest.xml
index 39b92aa217..6736ab4b16 100644
--- a/extensions/flac/src/androidTest/AndroidManifest.xml
+++ b/extensions/flac/src/androidTest/AndroidManifest.xml
@@ -21,7 +21,7 @@
   <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
   <uses-sdk/>
 
-  <application android:debuggable="true"
+  <application
       android:allowBackup="false"
       tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
     <uses-library android:name="android.test.runner"/>
diff --git a/extensions/ima/build.gradle b/extensions/ima/build.gradle
index 0ef9f281c9..f51c4f954f 100644
--- a/extensions/ima/build.gradle
+++ b/extensions/ima/build.gradle
@@ -32,7 +32,7 @@ android {
 }
 
 dependencies {
-    api 'com.google.ads.interactivemedia.v3:interactivemedia:3.11.2'
+    api 'com.google.ads.interactivemedia.v3:interactivemedia:3.11.3'
     implementation project(modulePrefix + 'library-core')
     implementation 'androidx.annotation:annotation:1.1.0'
     implementation 'com.google.android.gms:play-services-ads-identifier:16.0.0'
diff --git a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoader.java b/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoader.java
index 68e48b8d33..335f8374dd 100644
--- a/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoader.java
+++ b/extensions/ima/src/main/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoader.java
@@ -327,6 +327,7 @@ public ImaAdsLoader buildForAdsResponse(String adsResponse) {
   private final AdDisplayContainer adDisplayContainer;
   private final com.google.ads.interactivemedia.v3.api.AdsLoader adsLoader;
 
+  private boolean wasSetPlayerCalled;
   @Nullable private Player nextPlayer;
   private Object pendingAdRequestContext;
   private List<String> supportedMimeTypes;
@@ -337,6 +338,7 @@ public ImaAdsLoader buildForAdsResponse(String adsResponse) {
   private int lastVolumePercentage;
 
   private AdsManager adsManager;
+  private boolean initializedAdsManager;
   private AdLoadException pendingAdLoadError;
   private Timeline timeline;
   private long contentDurationMs;
@@ -483,6 +485,7 @@ private ImaAdsLoader(
     pendingContentPositionMs = C.TIME_UNSET;
     adGroupIndex = C.INDEX_UNSET;
     contentDurationMs = C.TIME_UNSET;
+    timeline = Timeline.EMPTY;
   }
 
   /**
@@ -558,6 +561,7 @@ public void setPlayer(@Nullable Player player) {
     Assertions.checkState(
         player == null || player.getApplicationLooper() == Looper.getMainLooper());
     nextPlayer = player;
+    wasSetPlayerCalled = true;
   }
 
   @Override
@@ -585,9 +589,12 @@ public void setSupportedContentTypes(@C.ContentType int... contentTypes) {
 
   @Override
   public void start(EventListener eventListener, AdViewProvider adViewProvider) {
-    Assertions.checkNotNull(
-        nextPlayer, "Set player using adsLoader.setPlayer before preparing the player.");
+    Assertions.checkState(
+        wasSetPlayerCalled, "Set player using adsLoader.setPlayer before preparing the player.");
     player = nextPlayer;
+    if (player == null) {
+      return;
+    }
     this.eventListener = eventListener;
     lastVolumePercentage = 0;
     lastAdProgress = null;
@@ -607,8 +614,8 @@ public void start(EventListener eventListener, AdViewProvider adViewProvider) {
         adsManager.resume();
       }
     } else if (adsManager != null) {
-      // Ads have loaded but the ads manager is not initialized.
-      startAdPlayback();
+      adPlaybackState = new AdPlaybackState(getAdGroupTimesUs(adsManager.getAdCuePoints()));
+      updateAdPlaybackState();
     } else {
       // Ads haven't loaded yet, so request them.
       requestAds(adViewGroup);
@@ -617,6 +624,9 @@ public void start(EventListener eventListener, AdViewProvider adViewProvider) {
 
   @Override
   public void stop() {
+    if (player == null) {
+      return;
+    }
     if (adsManager != null && imaPausedContent) {
       adPlaybackState =
           adPlaybackState.withAdResumePositionUs(
@@ -679,7 +689,8 @@ public void onAdsManagerLoaded(AdsManagerLoadedEvent adsManagerLoadedEvent) {
     if (player != null) {
       // If a player is attached already, start playback immediately.
       try {
-        startAdPlayback();
+        adPlaybackState = new AdPlaybackState(getAdGroupTimesUs(adsManager.getAdCuePoints()));
+        updateAdPlaybackState();
       } catch (Exception e) {
         maybeNotifyInternalError("onAdsManagerLoaded", e);
       }
@@ -959,7 +970,11 @@ public void onTimelineChanged(
     if (contentDurationUs != C.TIME_UNSET) {
       adPlaybackState = adPlaybackState.withContentDurationUs(contentDurationUs);
     }
-    updateImaStateForPlayerState();
+    if (!initializedAdsManager && adsManager != null) {
+      initializedAdsManager = true;
+      initializeAdsManager();
+    }
+    onPositionDiscontinuity(Player.DISCONTINUITY_REASON_INTERNAL);
   }
 
   @Override
@@ -1014,7 +1029,7 @@ public void onPositionDiscontinuity(@Player.DiscontinuityReason int reason) {
           }
         }
         updateAdPlaybackState();
-      } else {
+      } else if (!timeline.isEmpty()) {
         long positionMs = player.getCurrentPosition();
         timeline.getPeriod(0, period);
         int newAdGroupIndex = period.getAdGroupIndexForPositionUs(C.msToUs(positionMs));
@@ -1026,14 +1041,13 @@ public void onPositionDiscontinuity(@Player.DiscontinuityReason int reason) {
           }
         }
       }
-    } else {
-      updateImaStateForPlayerState();
     }
+    updateImaStateForPlayerState();
   }
 
   // Internal methods.
 
-  private void startAdPlayback() {
+  private void initializeAdsManager() {
     AdsRenderingSettings adsRenderingSettings = imaFactory.createAdsRenderingSettings();
     adsRenderingSettings.setEnablePreloading(ENABLE_PRELOADING);
     adsRenderingSettings.setMimeTypes(supportedMimeTypes);
@@ -1048,10 +1062,9 @@ private void startAdPlayback() {
       adsRenderingSettings.setUiElements(adUiElements);
     }
 
-    // Set up the ad playback state, skipping ads based on the start position as required.
+    // Skip ads based on the start position as required.
     long[] adGroupTimesUs = getAdGroupTimesUs(adsManager.getAdCuePoints());
-    adPlaybackState = new AdPlaybackState(adGroupTimesUs);
-    long contentPositionMs = player.getCurrentPosition();
+    long contentPositionMs = player.getContentPosition();
     int adGroupIndexForPosition =
         adPlaybackState.getAdGroupIndexForPositionUs(C.msToUs(contentPositionMs));
     if (adGroupIndexForPosition > 0 && adGroupIndexForPosition != C.INDEX_UNSET) {
@@ -1085,7 +1098,6 @@ private void startAdPlayback() {
       pendingContentPositionMs = contentPositionMs;
     }
 
-    // Start ad playback.
     adsManager.init(adsRenderingSettings);
     updateAdPlaybackState();
     if (DEBUG) {
diff --git a/extensions/ima/src/test/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoaderTest.java b/extensions/ima/src/test/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoaderTest.java
index 1e1935c63a..4b2020a7d5 100644
--- a/extensions/ima/src/test/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoaderTest.java
+++ b/extensions/ima/src/test/java/com/google/android/exoplayer2/ext/ima/ImaAdsLoaderTest.java
@@ -143,7 +143,8 @@ public void testStart_updatesAdPlaybackState() {
     assertThat(adsLoaderListener.adPlaybackState)
         .isEqualTo(
             new AdPlaybackState(/* adGroupTimesUs= */ 0)
-                .withAdDurationsUs(PREROLL_ADS_DURATIONS_US));
+                .withAdDurationsUs(PREROLL_ADS_DURATIONS_US)
+                .withContentDurationUs(CONTENT_DURATION_US));
   }
 
   @Test
diff --git a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.java b/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.java
index 7e72904078..5183c8a673 100644
--- a/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.java
+++ b/extensions/mediasession/src/main/java/com/google/android/exoplayer2/ext/mediasession/MediaSessionConnector.java
@@ -131,6 +131,15 @@
   /** The default rewind increment, in milliseconds. */
   public static final int DEFAULT_REWIND_MS = 5000;
 
+  /**
+   * The name of the {@link PlaybackStateCompat} float extra with the value of {@link
+   * PlaybackParameters#speed}.
+   */
+  public static final String EXTRAS_SPEED = "EXO_SPEED";
+  /**
+   * The name of the {@link PlaybackStateCompat} float extra with the value of {@link
+   * PlaybackParameters#pitch}.
+   */
   public static final String EXTRAS_PITCH = "EXO_PITCH";
 
   private static final long BASE_PLAYBACK_ACTIONS =
@@ -684,7 +693,13 @@ public final void invalidateMediaSessionMetadata() {
   public final void invalidateMediaSessionPlaybackState() {
     PlaybackStateCompat.Builder builder = new PlaybackStateCompat.Builder();
     if (player == null) {
-      builder.setActions(buildPrepareActions()).setState(PlaybackStateCompat.STATE_NONE, 0, 0, 0);
+      builder
+          .setActions(buildPrepareActions())
+          .setState(
+              PlaybackStateCompat.STATE_NONE,
+              /* position= */ 0,
+              /* playbackSpeed= */ 0,
+              /* updateTime= */ SystemClock.elapsedRealtime());
       mediaSession.setPlaybackState(builder.build());
       return;
     }
@@ -699,15 +714,13 @@ public final void invalidateMediaSessionPlaybackState() {
     }
     customActionMap = Collections.unmodifiableMap(currentActions);
 
-    int playbackState = player.getPlaybackState();
     Bundle extras = new Bundle();
-    ExoPlaybackException playbackError =
-        playbackState == Player.STATE_IDLE ? player.getPlaybackError() : null;
+    @Nullable ExoPlaybackException playbackError = player.getPlaybackError();
     boolean reportError = playbackError != null || customError != null;
     int sessionPlaybackState =
         reportError
             ? PlaybackStateCompat.STATE_ERROR
-            : mapPlaybackState(player.getPlaybackState(), player.getPlayWhenReady());
+            : getMediaSessionPlaybackState(player.getPlaybackState(), player.getPlayWhenReady());
     if (customError != null) {
       builder.setErrorMessage(customError.first, customError.second);
       if (customErrorExtras != null) {
@@ -721,7 +734,10 @@ public final void invalidateMediaSessionPlaybackState() {
         queueNavigator != null
             ? queueNavigator.getActiveQueueItemId(player)
             : MediaSessionCompat.QueueItem.UNKNOWN_ID;
-    extras.putFloat(EXTRAS_PITCH, player.getPlaybackParameters().pitch);
+    PlaybackParameters playbackParameters = player.getPlaybackParameters();
+    extras.putFloat(EXTRAS_SPEED, playbackParameters.speed);
+    extras.putFloat(EXTRAS_PITCH, playbackParameters.pitch);
+    float sessionPlaybackSpeed = player.isPlaying() ? playbackParameters.speed : 0f;
     builder
         .setActions(buildPrepareActions() | buildPlaybackActions(player))
         .setActiveQueueItemId(activeQueueItemId)
@@ -729,8 +745,8 @@ public final void invalidateMediaSessionPlaybackState() {
         .setState(
             sessionPlaybackState,
             player.getCurrentPosition(),
-            player.getPlaybackParameters().speed,
-            SystemClock.elapsedRealtime())
+            sessionPlaybackSpeed,
+            /* updateTime= */ SystemClock.elapsedRealtime())
         .setExtras(extras);
     mediaSession.setPlaybackState(builder.build());
   }
@@ -823,19 +839,6 @@ private long buildPlaybackActions(Player player) {
     return actions;
   }
 
-  private int mapPlaybackState(int exoPlayerPlaybackState, boolean playWhenReady) {
-    switch (exoPlayerPlaybackState) {
-      case Player.STATE_BUFFERING:
-        return PlaybackStateCompat.STATE_BUFFERING;
-      case Player.STATE_READY:
-        return playWhenReady ? PlaybackStateCompat.STATE_PLAYING : PlaybackStateCompat.STATE_PAUSED;
-      case Player.STATE_ENDED:
-        return PlaybackStateCompat.STATE_STOPPED;
-      default:
-        return PlaybackStateCompat.STATE_NONE;
-    }
-  }
-
   private boolean canDispatchPlaybackAction(long action) {
     return player != null && (enabledPlaybackActions & action) != 0;
   }
@@ -888,6 +891,20 @@ private void seekTo(Player player, int windowIndex, long positionMs) {
     controlDispatcher.dispatchSeekTo(player, windowIndex, positionMs);
   }
 
+  private static int getMediaSessionPlaybackState(
+      int exoPlayerPlaybackState, boolean playWhenReady) {
+    switch (exoPlayerPlaybackState) {
+      case Player.STATE_BUFFERING:
+        return PlaybackStateCompat.STATE_BUFFERING;
+      case Player.STATE_READY:
+        return playWhenReady ? PlaybackStateCompat.STATE_PLAYING : PlaybackStateCompat.STATE_PAUSED;
+      case Player.STATE_ENDED:
+        return PlaybackStateCompat.STATE_STOPPED;
+      default:
+        return PlaybackStateCompat.STATE_NONE;
+    }
+  }
+
   /**
    * Provides a default {@link MediaMetadataCompat} with properties and extras taken from the {@link
    * MediaDescriptionCompat} of the {@link MediaSessionCompat.QueueItem} of the active queue item.
@@ -921,7 +938,9 @@ public MediaMetadataCompat getMetadata(Player player) {
       }
       builder.putLong(
           MediaMetadataCompat.METADATA_KEY_DURATION,
-          player.getDuration() == C.TIME_UNSET ? -1 : player.getDuration());
+          player.isCurrentWindowDynamic() || player.getDuration() == C.TIME_UNSET
+              ? -1
+              : player.getDuration());
       long activeQueueItemId = mediaController.getPlaybackState().getActiveQueueItemId();
       if (activeQueueItemId != MediaSessionCompat.QueueItem.UNKNOWN_ID) {
         List<MediaSessionCompat.QueueItem> queue = mediaController.getQueue();
@@ -1020,6 +1039,11 @@ public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
       invalidateMediaSessionPlaybackState();
     }
 
+    @Override
+    public void onIsPlayingChanged(boolean isPlaying) {
+      invalidateMediaSessionPlaybackState();
+    }
+
     @Override
     public void onRepeatModeChanged(@Player.RepeatMode int repeatMode) {
       mediaSession.setRepeatMode(
diff --git a/extensions/okhttp/build.gradle b/extensions/okhttp/build.gradle
index 13e99d7e19..86025812ca 100644
--- a/extensions/okhttp/build.gradle
+++ b/extensions/okhttp/build.gradle
@@ -47,7 +47,7 @@ dependencies {
     implementation project(modulePrefix + 'library-core')
     implementation 'androidx.annotation:annotation:1.1.0'
     compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion
-    api 'com.squareup.okhttp3:okhttp:3.12.1'
+    api 'com.squareup.okhttp3:okhttp:3.12.5'
 }
 
 ext {
diff --git a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java b/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
index 8eb8bba920..95bd4f71de 100644
--- a/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
+++ b/extensions/okhttp/src/main/java/com/google/android/exoplayer2/ext/okhttp/OkHttpDataSource.java
@@ -133,6 +133,11 @@ public OkHttpDataSource(
     return response == null ? null : Uri.parse(response.request().url().toString());
   }
 
+  @Override
+  public int getResponseCode() {
+    return response == null ? -1 : response.code();
+  }
+
   @Override
   public Map<String, List<String>> getResponseHeaders() {
     return response == null ? Collections.emptyMap() : response.headers().toMultimap();
diff --git a/extensions/opus/src/androidTest/AndroidManifest.xml b/extensions/opus/src/androidTest/AndroidManifest.xml
index 7f775f4d32..031960636d 100644
--- a/extensions/opus/src/androidTest/AndroidManifest.xml
+++ b/extensions/opus/src/androidTest/AndroidManifest.xml
@@ -21,7 +21,7 @@
   <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
   <uses-sdk/>
 
-  <application android:debuggable="true"
+  <application
       android:allowBackup="false"
       tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
     <uses-library android:name="android.test.runner"/>
diff --git a/extensions/rtmp/build.gradle b/extensions/rtmp/build.gradle
index b74be659ee..ba63843043 100644
--- a/extensions/rtmp/build.gradle
+++ b/extensions/rtmp/build.gradle
@@ -32,7 +32,7 @@ android {
 
 dependencies {
     implementation project(modulePrefix + 'library-core')
-    implementation 'net.butterflytv.utils:rtmp-client:3.0.1'
+    implementation 'net.butterflytv.utils:rtmp-client:3.1.0'
     implementation 'androidx.annotation:annotation:1.1.0'
     testImplementation project(modulePrefix + 'testutils-robolectric')
 }
diff --git a/extensions/vp9/src/androidTest/AndroidManifest.xml b/extensions/vp9/src/androidTest/AndroidManifest.xml
index 6ca2e7164a..4d0832d198 100644
--- a/extensions/vp9/src/androidTest/AndroidManifest.xml
+++ b/extensions/vp9/src/androidTest/AndroidManifest.xml
@@ -21,7 +21,7 @@
   <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
   <uses-sdk/>
 
-  <application android:debuggable="true"
+  <application
       android:allowBackup="false"
       tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
     <uses-library android:name="android.test.runner"/>
diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
index d5da9a011d..01ee673442 100644
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
+++ b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
@@ -844,7 +844,7 @@ private boolean feedInputBuffer() throws VpxDecoderException, ExoPlaybackExcepti
       pendingFormat = null;
     }
     inputBuffer.flip();
-    inputBuffer.colorInfo = formatHolder.format.colorInfo;
+    inputBuffer.colorInfo = format.colorInfo;
     onQueueInputBuffer(inputBuffer);
     decoder.queueInputBuffer(inputBuffer);
     buffersInCodecCount++;
diff --git a/library/core/src/androidTest/AndroidManifest.xml b/library/core/src/androidTest/AndroidManifest.xml
index e6e874a27a..831ad47831 100644
--- a/library/core/src/androidTest/AndroidManifest.xml
+++ b/library/core/src/androidTest/AndroidManifest.xml
@@ -21,7 +21,7 @@
   <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
   <uses-sdk/>
 
-  <application android:debuggable="true"
+  <application
       android:allowBackup="false"
       tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
     <uses-library android:name="android.test.runner"/>
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/BasePlayer.java b/library/core/src/main/java/com/google/android/exoplayer2/BasePlayer.java
index 774f1b452c..7ccfb57093 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/BasePlayer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/BasePlayer.java
@@ -27,6 +27,13 @@ public BasePlayer() {
     window = new Timeline.Window();
   }
 
+  @Override
+  public final boolean isPlaying() {
+    return getPlaybackState() == Player.STATE_READY
+        && getPlayWhenReady()
+        && getPlaybackSuppressionReason() == PLAYBACK_SUPPRESSION_REASON_NONE;
+  }
+
   @Override
   public final void seekToDefaultPosition() {
     seekToDefaultPosition(getCurrentWindowIndex());
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/C.java b/library/core/src/main/java/com/google/android/exoplayer2/C.java
index 0120451bc1..56f9494856 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/C.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/C.java
@@ -71,9 +71,10 @@ private C() {}
   /** Represents an unset or unknown percentage. */
   public static final int PERCENTAGE_UNSET = -1;
 
-  /**
-   * The number of microseconds in one second.
-   */
+  /** The number of milliseconds in one second. */
+  public static final long MILLIS_PER_SECOND = 1000L;
+
+  /** The number of microseconds in one second. */
   public static final long MICROS_PER_SECOND = 1000000L;
 
   /**
@@ -670,25 +671,6 @@ private C() {}
   /** A default size in bytes for an individual allocation that forms part of a larger buffer. */
   public static final int DEFAULT_BUFFER_SEGMENT_SIZE = 64 * 1024;
 
-  /** A default size in bytes for a video buffer. */
-  public static final int DEFAULT_VIDEO_BUFFER_SIZE = 200 * DEFAULT_BUFFER_SEGMENT_SIZE;
-
-  /** A default size in bytes for an audio buffer. */
-  public static final int DEFAULT_AUDIO_BUFFER_SIZE = 54 * DEFAULT_BUFFER_SEGMENT_SIZE;
-
-  /** A default size in bytes for a text buffer. */
-  public static final int DEFAULT_TEXT_BUFFER_SIZE = 2 * DEFAULT_BUFFER_SEGMENT_SIZE;
-
-  /** A default size in bytes for a metadata buffer. */
-  public static final int DEFAULT_METADATA_BUFFER_SIZE = 2 * DEFAULT_BUFFER_SEGMENT_SIZE;
-
-  /** A default size in bytes for a camera motion buffer. */
-  public static final int DEFAULT_CAMERA_MOTION_BUFFER_SIZE = 2 * DEFAULT_BUFFER_SEGMENT_SIZE;
-
-  /** A default size in bytes for a muxed buffer (e.g. containing video, audio and text). */
-  public static final int DEFAULT_MUXED_BUFFER_SIZE =
-      DEFAULT_VIDEO_BUFFER_SIZE + DEFAULT_AUDIO_BUFFER_SIZE + DEFAULT_TEXT_BUFFER_SIZE;
-
   /** "cenc" scheme type name as defined in ISO/IEC 23001-7:2016. */
   @SuppressWarnings("ConstantField")
   public static final String CENC_TYPE_cenc = "cenc";
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/DefaultLoadControl.java b/library/core/src/main/java/com/google/android/exoplayer2/DefaultLoadControl.java
index 972f651a41..1244b96d94 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/DefaultLoadControl.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/DefaultLoadControl.java
@@ -67,6 +67,25 @@
   /** The default for whether the back buffer is retained from the previous keyframe. */
   public static final boolean DEFAULT_RETAIN_BACK_BUFFER_FROM_KEYFRAME = false;
 
+  /** A default size in bytes for a video buffer. */
+  public static final int DEFAULT_VIDEO_BUFFER_SIZE = 500 * C.DEFAULT_BUFFER_SEGMENT_SIZE;
+
+  /** A default size in bytes for an audio buffer. */
+  public static final int DEFAULT_AUDIO_BUFFER_SIZE = 54 * C.DEFAULT_BUFFER_SEGMENT_SIZE;
+
+  /** A default size in bytes for a text buffer. */
+  public static final int DEFAULT_TEXT_BUFFER_SIZE = 2 * C.DEFAULT_BUFFER_SEGMENT_SIZE;
+
+  /** A default size in bytes for a metadata buffer. */
+  public static final int DEFAULT_METADATA_BUFFER_SIZE = 2 * C.DEFAULT_BUFFER_SEGMENT_SIZE;
+
+  /** A default size in bytes for a camera motion buffer. */
+  public static final int DEFAULT_CAMERA_MOTION_BUFFER_SIZE = 2 * C.DEFAULT_BUFFER_SEGMENT_SIZE;
+
+  /** A default size in bytes for a muxed buffer (e.g. containing video, audio and text). */
+  public static final int DEFAULT_MUXED_BUFFER_SIZE =
+      DEFAULT_VIDEO_BUFFER_SIZE + DEFAULT_AUDIO_BUFFER_SIZE + DEFAULT_TEXT_BUFFER_SIZE;
+
   /** Builder for {@link DefaultLoadControl}. */
   public static final class Builder {
 
@@ -404,7 +423,7 @@ protected int calculateTargetBufferSize(
     int targetBufferSize = 0;
     for (int i = 0; i < renderers.length; i++) {
       if (trackSelectionArray.get(i) != null) {
-        targetBufferSize += Util.getDefaultBufferSize(renderers[i].getTrackType());
+        targetBufferSize += getDefaultBufferSize(renderers[i].getTrackType());
       }
     }
     return targetBufferSize;
@@ -418,6 +437,27 @@ private void reset(boolean resetAllocator) {
     }
   }
 
+  private static int getDefaultBufferSize(int trackType) {
+    switch (trackType) {
+      case C.TRACK_TYPE_DEFAULT:
+        return DEFAULT_MUXED_BUFFER_SIZE;
+      case C.TRACK_TYPE_AUDIO:
+        return DEFAULT_AUDIO_BUFFER_SIZE;
+      case C.TRACK_TYPE_VIDEO:
+        return DEFAULT_VIDEO_BUFFER_SIZE;
+      case C.TRACK_TYPE_TEXT:
+        return DEFAULT_TEXT_BUFFER_SIZE;
+      case C.TRACK_TYPE_METADATA:
+        return DEFAULT_METADATA_BUFFER_SIZE;
+      case C.TRACK_TYPE_CAMERA_MOTION:
+        return DEFAULT_CAMERA_MOTION_BUFFER_SIZE;
+      case C.TRACK_TYPE_NONE:
+        return 0;
+      default:
+        throw new IllegalArgumentException();
+    }
+  }
+
   private static boolean hasVideo(Renderer[] renderers, TrackSelectionArray trackSelectionArray) {
     for (int i = 0; i < renderers.length; i++) {
       if (renderers[i].getTrackType() == C.TRACK_TYPE_VIDEO && trackSelectionArray.get(i) != null) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java
index a10416fac8..5010faaa9d 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImpl.java
@@ -64,8 +64,8 @@
 
   private MediaSource mediaSource;
   private boolean playWhenReady;
-  private boolean internalPlayWhenReady;
-  private @RepeatMode int repeatMode;
+  @PlaybackSuppressionReason private int playbackSuppressionReason;
+  @RepeatMode private int repeatMode;
   private boolean shuffleModeEnabled;
   private int pendingOperationAcks;
   private boolean hasPendingPrepare;
@@ -119,6 +119,7 @@ public ExoPlayerImpl(
     period = new Timeline.Period();
     playbackParameters = PlaybackParameters.DEFAULT;
     seekParameters = SeekParameters.DEFAULT;
+    playbackSuppressionReason = PLAYBACK_SUPPRESSION_REASON_NONE;
     eventHandler =
         new Handler(looper) {
           @Override
@@ -197,8 +198,14 @@ public int getPlaybackState() {
     return playbackInfo.playbackState;
   }
 
+  @PlaybackSuppressionReason
+  public int getPlaybackSuppressionReason() {
+    return playbackSuppressionReason;
+  }
+
   @Override
-  public @Nullable ExoPlaybackException getPlaybackError() {
+  @Nullable
+  public ExoPlaybackException getPlaybackError() {
     return playbackError;
   }
 
@@ -239,19 +246,35 @@ public void prepare(MediaSource mediaSource, boolean resetPosition, boolean rese
 
   @Override
   public void setPlayWhenReady(boolean playWhenReady) {
-    setPlayWhenReady(playWhenReady, /* suppressPlayback= */ false);
+    setPlayWhenReady(playWhenReady, PLAYBACK_SUPPRESSION_REASON_NONE);
   }
 
-  public void setPlayWhenReady(boolean playWhenReady, boolean suppressPlayback) {
-    boolean internalPlayWhenReady = playWhenReady && !suppressPlayback;
-    if (this.internalPlayWhenReady != internalPlayWhenReady) {
-      this.internalPlayWhenReady = internalPlayWhenReady;
+  public void setPlayWhenReady(
+      boolean playWhenReady, @PlaybackSuppressionReason int playbackSuppressionReason) {
+    boolean oldIsPlaying = isPlaying();
+    boolean oldInternalPlayWhenReady =
+        this.playWhenReady && this.playbackSuppressionReason == PLAYBACK_SUPPRESSION_REASON_NONE;
+    boolean internalPlayWhenReady =
+        playWhenReady && playbackSuppressionReason == PLAYBACK_SUPPRESSION_REASON_NONE;
+    if (oldInternalPlayWhenReady != internalPlayWhenReady) {
       internalPlayer.setPlayWhenReady(internalPlayWhenReady);
     }
-    if (this.playWhenReady != playWhenReady) {
-      this.playWhenReady = playWhenReady;
+    boolean playWhenReadyChanged = this.playWhenReady != playWhenReady;
+    this.playWhenReady = playWhenReady;
+    this.playbackSuppressionReason = playbackSuppressionReason;
+    boolean isPlaying = isPlaying();
+    boolean isPlayingChanged = oldIsPlaying != isPlaying;
+    if (playWhenReadyChanged || isPlayingChanged) {
       int playbackState = playbackInfo.playbackState;
-      notifyListeners(listener -> listener.onPlayerStateChanged(playWhenReady, playbackState));
+      notifyListeners(
+          listener -> {
+            if (playWhenReadyChanged) {
+              listener.onPlayerStateChanged(playWhenReady, playbackState);
+            }
+            if (isPlayingChanged) {
+              listener.onIsPlayingChanged(isPlaying);
+            }
+          });
     }
   }
 
@@ -697,9 +720,11 @@ private void updatePlaybackInfo(
       @Player.DiscontinuityReason int positionDiscontinuityReason,
       @Player.TimelineChangeReason int timelineChangeReason,
       boolean seekProcessed) {
+    boolean previousIsPlaying = isPlaying();
     // Assign playback info immediately such that all getters return the right values.
     PlaybackInfo previousPlaybackInfo = this.playbackInfo;
     this.playbackInfo = playbackInfo;
+    boolean isPlaying = isPlaying();
     notifyListeners(
         new PlaybackInfoUpdate(
             playbackInfo,
@@ -710,7 +735,8 @@ private void updatePlaybackInfo(
             positionDiscontinuityReason,
             timelineChangeReason,
             seekProcessed,
-            playWhenReady));
+            playWhenReady,
+            /* isPlayingChanged= */ previousIsPlaying != isPlaying));
   }
 
   private void notifyListeners(ListenerInvocation listenerInvocation) {
@@ -755,6 +781,7 @@ private boolean shouldMaskPosition() {
     private final boolean isLoadingChanged;
     private final boolean trackSelectorResultChanged;
     private final boolean playWhenReady;
+    private final boolean isPlayingChanged;
 
     public PlaybackInfoUpdate(
         PlaybackInfo playbackInfo,
@@ -762,10 +789,11 @@ public PlaybackInfoUpdate(
         CopyOnWriteArrayList<ListenerHolder> listeners,
         TrackSelector trackSelector,
         boolean positionDiscontinuity,
-        @Player.DiscontinuityReason int positionDiscontinuityReason,
-        @Player.TimelineChangeReason int timelineChangeReason,
+        @DiscontinuityReason int positionDiscontinuityReason,
+        @TimelineChangeReason int timelineChangeReason,
         boolean seekProcessed,
-        boolean playWhenReady) {
+        boolean playWhenReady,
+        boolean isPlayingChanged) {
       this.playbackInfo = playbackInfo;
       this.listenerSnapshot = new CopyOnWriteArrayList<>(listeners);
       this.trackSelector = trackSelector;
@@ -774,6 +802,7 @@ public PlaybackInfoUpdate(
       this.timelineChangeReason = timelineChangeReason;
       this.seekProcessed = seekProcessed;
       this.playWhenReady = playWhenReady;
+      this.isPlayingChanged = isPlayingChanged;
       playbackStateChanged = previousPlaybackInfo.playbackState != playbackInfo.playbackState;
       timelineOrManifestChanged =
           previousPlaybackInfo.timeline != playbackInfo.timeline
@@ -813,6 +842,12 @@ public void run() {
             listenerSnapshot,
             listener -> listener.onPlayerStateChanged(playWhenReady, playbackInfo.playbackState));
       }
+      if (isPlayingChanged) {
+        invokeAll(
+            listenerSnapshot,
+            listener ->
+                listener.onIsPlayingChanged(playbackInfo.playbackState == Player.STATE_READY));
+      }
       if (seekProcessed) {
         invokeAll(listenerSnapshot, EventListener::onSeekProcessed);
       }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
index 65a6866a9f..b6ac22059f 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerImplInternal.java
@@ -1324,9 +1324,16 @@ private void handleSourceInfoRefreshed(MediaSourceRefreshInfo sourceRefreshInfo)
               timeline, timeline.getPeriodByUid(newPeriodUid, period).windowIndex, C.TIME_UNSET);
       newContentPositionUs = defaultPosition.second;
       newPeriodId = queue.resolveMediaPeriodIdForAds(defaultPosition.first, newContentPositionUs);
-    } else if (newPeriodId.isAd()) {
-      // Recheck if the current ad still needs to be played.
-      newPeriodId = queue.resolveMediaPeriodIdForAds(newPeriodId.periodUid, newContentPositionUs);
+    } else {
+      // Recheck if the current ad still needs to be played or if we need to start playing an ad.
+      newPeriodId =
+          queue.resolveMediaPeriodIdForAds(playbackInfo.periodId.periodUid, newContentPositionUs);
+      if (!playbackInfo.periodId.isAd() && !newPeriodId.isAd()) {
+        // Drop update if we keep playing the same content (MediaPeriod.periodUid are identical) and
+        // only MediaPeriodId.nextAdGroupIndex may have changed. This postpones a potential
+        // discontinuity until we reach the former next ad group position.
+        newPeriodId = playbackInfo.periodId;
+      }
     }
 
     if (playbackInfo.periodId.equals(newPeriodId) && oldContentPositionUs == newContentPositionUs) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerLibraryInfo.java b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerLibraryInfo.java
index f420f20767..bf64a14225 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerLibraryInfo.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/ExoPlayerLibraryInfo.java
@@ -29,11 +29,11 @@
 
   /** The version of the library expressed as a string, for example "1.2.3". */
   // Intentionally hardcoded. Do not derive from other constants (e.g. VERSION_INT) or vice versa.
-  public static final String VERSION = "2.10.4";
+  public static final String VERSION = "2.10.5";
 
   /** The version of the library expressed as {@code "ExoPlayerLib/" + VERSION}. */
   // Intentionally hardcoded. Do not derive from other constants (e.g. VERSION) or vice versa.
-  public static final String VERSION_SLASHY = "ExoPlayerLib/2.10.4";
+  public static final String VERSION_SLASHY = "ExoPlayerLib/2.10.5";
 
   /**
    * The version of the library expressed as an integer, for example 1002003.
@@ -43,7 +43,7 @@
    * integer version 123045006 (123-045-006).
    */
   // Intentionally hardcoded. Do not derive from other constants (e.g. VERSION) or vice versa.
-  public static final int VERSION_INT = 2010004;
+  public static final int VERSION_INT = 2010005;
 
   /**
    * Whether the library was compiled with {@link com.google.android.exoplayer2.util.Assertions}
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/Format.java b/library/core/src/main/java/com/google/android/exoplayer2/Format.java
index dcb7a83dca..d12c7ea18e 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/Format.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/Format.java
@@ -168,6 +168,10 @@
 
   // Video.
 
+  /**
+   * @deprecated Use {@link #createVideoContainerFormat(String, String, String, String, String,
+   *     Metadata, int, int, int, float, List, int, int)} instead.
+   */
   @Deprecated
   public static Format createVideoContainerFormat(
       @Nullable String id,
@@ -186,6 +190,7 @@ public static Format createVideoContainerFormat(
         containerMimeType,
         sampleMimeType,
         codecs,
+        /* metadata= */ null,
         bitrate,
         width,
         height,
@@ -201,6 +206,7 @@ public static Format createVideoContainerFormat(
       @Nullable String containerMimeType,
       String sampleMimeType,
       String codecs,
+      @Nullable Metadata metadata,
       int bitrate,
       int width,
       int height,
@@ -215,7 +221,7 @@ public static Format createVideoContainerFormat(
         roleFlags,
         bitrate,
         codecs,
-        /* metadata= */ null,
+        metadata,
         containerMimeType,
         sampleMimeType,
         /* maxInputSize= */ NO_VALUE,
@@ -345,6 +351,10 @@ public static Format createVideoSampleFormat(
 
   // Audio.
 
+  /**
+   * @deprecated Use {@link #createAudioContainerFormat(String, String, String, String, String,
+   *     Metadata, int, int, int, List, int, int, String)} instead.
+   */
   @Deprecated
   public static Format createAudioContainerFormat(
       @Nullable String id,
@@ -363,6 +373,7 @@ public static Format createAudioContainerFormat(
         containerMimeType,
         sampleMimeType,
         codecs,
+        /* metadata= */ null,
         bitrate,
         channelCount,
         sampleRate,
@@ -378,6 +389,7 @@ public static Format createAudioContainerFormat(
       @Nullable String containerMimeType,
       @Nullable String sampleMimeType,
       @Nullable String codecs,
+      @Nullable Metadata metadata,
       int bitrate,
       int channelCount,
       int sampleRate,
@@ -392,7 +404,7 @@ public static Format createAudioContainerFormat(
         roleFlags,
         bitrate,
         codecs,
-        /* metadata= */ null,
+        metadata,
         containerMimeType,
         sampleMimeType,
         /* maxInputSize= */ NO_VALUE,
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/Player.java b/library/core/src/main/java/com/google/android/exoplayer2/Player.java
index 8885be2e02..dad0945d7b 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/Player.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/Player.java
@@ -365,6 +365,13 @@ default void onLoadingChanged(boolean isLoading) {}
      */
     default void onPlayerStateChanged(boolean playWhenReady, int playbackState) {}
 
+    /**
+     * Called when the value of {@link #isPlaying()} changes.
+     *
+     * @param isPlaying Whether the player is playing.
+     */
+    default void onIsPlayingChanged(boolean isPlaying) {}
+
     /**
      * Called when the value of {@link #getRepeatMode()} changes.
      *
@@ -462,6 +469,20 @@ public void onTimelineChanged(Timeline timeline, @Nullable Object manifest) {
    */
   int STATE_ENDED = 4;
 
+  /**
+   * Reason why playback is suppressed even if {@link #getPlaybackState()} is {@link #STATE_READY}
+   * and {@link #getPlayWhenReady()} is {@code true}. One of {@link
+   * #PLAYBACK_SUPPRESSION_REASON_NONE} or {@link #PLAYBACK_SUPPRESSION_REASON_AUDIO_FOCUS_LOSS}.
+   */
+  @Documented
+  @Retention(RetentionPolicy.SOURCE)
+  @IntDef({PLAYBACK_SUPPRESSION_REASON_NONE, PLAYBACK_SUPPRESSION_REASON_AUDIO_FOCUS_LOSS})
+  @interface PlaybackSuppressionReason {}
+  /** Playback is not suppressed. */
+  int PLAYBACK_SUPPRESSION_REASON_NONE = 0;
+  /** Playback is suppressed because audio focus is lost or can't be acquired. */
+  int PLAYBACK_SUPPRESSION_REASON_AUDIO_FOCUS_LOSS = 1;
+
   /**
    * Repeat modes for playback. One of {@link #REPEAT_MODE_OFF}, {@link #REPEAT_MODE_ONE} or {@link
    * #REPEAT_MODE_ALL}.
@@ -587,12 +608,42 @@ public void onTimelineChanged(Timeline timeline, @Nullable Object manifest) {
    */
   int getPlaybackState();
 
+  /**
+   * Returns reason why playback is suppressed even if {@link #getPlaybackState()} is {@link
+   * #STATE_READY} and {@link #getPlayWhenReady()} is {@code true}.
+   *
+   * <p>Note that {@link #PLAYBACK_SUPPRESSION_REASON_NONE} indicates that playback is not
+   * suppressed.
+   *
+   * @return The current {@link PlaybackSuppressionReason}.
+   */
+  @PlaybackSuppressionReason
+  int getPlaybackSuppressionReason();
+
+  /**
+   * Returns whether the player is playing, i.e. {@link #getContentPosition()} is advancing.
+   *
+   * <p>If {@code false}, then at least one of the following is true:
+   *
+   * <ul>
+   *   <li>The {@link #getPlaybackState() playback state} is not {@link #STATE_READY ready}.
+   *   <li>There is no {@link #getPlayWhenReady() intention to play}.
+   *   <li>Playback is {@link #getPlaybackSuppressionReason() suppressed for other reasons}.
+   * </ul>
+   *
+   * @return Whether the player is playing.
+   */
+  boolean isPlaying();
+
   /**
    * Returns the error that caused playback to fail. This is the same error that will have been
    * reported via {@link Player.EventListener#onPlayerError(ExoPlaybackException)} at the time of
    * failure. It can be queried using this method until {@code stop(true)} is called or the player
    * is re-prepared.
    *
+   * <p>Note that this method will always return {@code null} if {@link #getPlaybackState()} is not
+   * {@link #STATE_IDLE}.
+   *
    * @return The error, or {@code null}.
    */
   @Nullable
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java b/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java
index f1b6b5bc90..33dfbae3ec 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/SimpleExoPlayer.java
@@ -878,8 +878,15 @@ public int getPlaybackState() {
     return player.getPlaybackState();
   }
 
+  @PlaybackSuppressionReason
+  public int getPlaybackSuppressionReason() {
+    verifyApplicationThread();
+    return player.getPlaybackSuppressionReason();
+  }
+
   @Override
-  public @Nullable ExoPlaybackException getPlaybackError() {
+  @Nullable
+  public ExoPlaybackException getPlaybackError() {
     verifyApplicationThread();
     return player.getPlaybackError();
   }
@@ -1221,9 +1228,13 @@ private void sendVolumeToRenderers() {
 
   private void updatePlayWhenReady(
       boolean playWhenReady, @AudioFocusManager.PlayerCommand int playerCommand) {
+    int playbackSuppressionReason =
+        playerCommand == AudioFocusManager.PLAYER_COMMAND_PLAY_WHEN_READY
+            ? Player.PLAYBACK_SUPPRESSION_REASON_NONE
+            : Player.PLAYBACK_SUPPRESSION_REASON_AUDIO_FOCUS_LOSS;
     player.setPlayWhenReady(
         playWhenReady && playerCommand != AudioFocusManager.PLAYER_COMMAND_DO_NOT_PLAY,
-        playerCommand != AudioFocusManager.PLAYER_COMMAND_PLAY_WHEN_READY);
+        playbackSuppressionReason);
   }
 
   private void verifyApplicationThread() {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java
index be1b7d3d53..6635ec40ac 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/DefaultAudioSink.java
@@ -37,7 +37,6 @@
 import java.nio.ByteOrder;
 import java.util.ArrayDeque;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
 
 /**
@@ -122,7 +121,15 @@ private InvalidAudioTrackTimestampException(String message) {
      * audioProcessors} applied before silence skipping and playback parameters.
      */
     public DefaultAudioProcessorChain(AudioProcessor... audioProcessors) {
-      this.audioProcessors = Arrays.copyOf(audioProcessors, audioProcessors.length + 2);
+      // The passed-in type may be more specialized than AudioProcessor[], so allocate a new array
+      // rather than using Arrays.copyOf.
+      this.audioProcessors = new AudioProcessor[audioProcessors.length + 2];
+      System.arraycopy(
+          /* src= */ audioProcessors,
+          /* srcPos= */ 0,
+          /* dest= */ this.audioProcessors,
+          /* destPos= */ 0,
+          /* length= */ audioProcessors.length);
       silenceSkippingAudioProcessor = new SilenceSkippingAudioProcessor();
       sonicAudioProcessor = new SonicAudioProcessor();
       this.audioProcessors[audioProcessors.length] = silenceSkippingAudioProcessor;
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java
index 07a1438519..f10f45ecf3 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/MediaCodecAudioRenderer.java
@@ -45,6 +45,7 @@
 import com.google.android.exoplayer2.util.MimeTypes;
 import com.google.android.exoplayer2.util.Util;
 import java.nio.ByteBuffer;
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
@@ -369,10 +370,11 @@ protected int supportsFormat(MediaCodecSelector mediaCodecSelector,
             format.sampleMimeType, requiresSecureDecoder, /* requiresTunnelingDecoder= */ false);
     if (MimeTypes.AUDIO_E_AC3_JOC.equals(format.sampleMimeType)) {
       // E-AC3 decoders can decode JOC streams, but in 2-D rather than 3-D.
-      List<MediaCodecInfo> eac3DecoderInfos =
+      List<MediaCodecInfo> decoderInfosWithEac3 = new ArrayList<>(decoderInfos);
+      decoderInfosWithEac3.addAll(
           mediaCodecSelector.getDecoderInfos(
-              MimeTypes.AUDIO_E_AC3, requiresSecureDecoder, /* requiresTunnelingDecoder= */ false);
-      decoderInfos.addAll(eac3DecoderInfos);
+              MimeTypes.AUDIO_E_AC3, requiresSecureDecoder, /* requiresTunnelingDecoder= */ false));
+      decoderInfos = decoderInfosWithEac3;
     }
     return Collections.unmodifiableList(decoderInfos);
   }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/AtomParsers.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/AtomParsers.java
index 70873825e3..c4e6ef17c4 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/AtomParsers.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/AtomParsers.java
@@ -1148,7 +1148,16 @@ private static void parseAudioSampleEntry(ParsableByteArray parent, int atomType
         System.arraycopy(opusMagic, 0, initializationData, 0, opusMagic.length);
         parent.setPosition(childPosition + Atom.HEADER_SIZE);
         parent.readBytes(initializationData, opusMagic.length, childAtomBodySize);
-      } else if (childAtomSize == Atom.TYPE_dfLa || childAtomType == Atom.TYPE_alac) {
+      } else if (childAtomType == Atom.TYPE_dfLa) {
+        int childAtomBodySize = childAtomSize - Atom.FULL_HEADER_SIZE;
+        initializationData = new byte[4 + childAtomBodySize];
+        initializationData[0] = 0x66; // f
+        initializationData[1] = 0x4C; // L
+        initializationData[2] = 0x61; // a
+        initializationData[3] = 0x43; // C
+        parent.setPosition(childPosition + Atom.FULL_HEADER_SIZE);
+        parent.readBytes(initializationData, /* offset= */ 4, childAtomBodySize);
+      } else if (childAtomType == Atom.TYPE_alac) {
         int childAtomBodySize = childAtomSize - Atom.FULL_HEADER_SIZE;
         initializationData = new byte[childAtomBodySize];
         parent.setPosition(childPosition + Atom.FULL_HEADER_SIZE);
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java b/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java
index 4f45e85762..3bf4604687 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java
@@ -35,6 +35,8 @@
 import com.google.android.exoplayer2.extractor.TrackOutput;
 import com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom;
 import com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom;
+import com.google.android.exoplayer2.metadata.emsg.EventMessage;
+import com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder;
 import com.google.android.exoplayer2.text.cea.CeaUtil;
 import com.google.android.exoplayer2.util.Assertions;
 import com.google.android.exoplayer2.util.Log;
@@ -140,6 +142,8 @@
   // Adjusts sample timestamps.
   private final @Nullable TimestampAdjuster timestampAdjuster;
 
+  private final EventMessageEncoder eventMessageEncoder;
+
   // Parser state.
   private final ParsableByteArray atomHeader;
   private final ArrayDeque<ContainerAtom> containerAtoms;
@@ -253,6 +257,7 @@ public FragmentedMp4Extractor(
     this.sideloadedDrmInitData = sideloadedDrmInitData;
     this.closedCaptionFormats = Collections.unmodifiableList(closedCaptionFormats);
     this.additionalEmsgTrackOutput = additionalEmsgTrackOutput;
+    eventMessageEncoder = new EventMessageEncoder();
     atomHeader = new ParsableByteArray(Atom.LONG_HEADER_SIZE);
     nalStartCode = new ParsableByteArray(NalUnitUtil.NAL_START_CODE);
     nalPrefix = new ParsableByteArray(5);
@@ -590,39 +595,71 @@ private void maybeInitExtraTracks() {
     }
   }
 
-  /**
-   * Parses an emsg atom (defined in 23009-1).
-   */
+  /** Handles an emsg atom (defined in 23009-1). */
   private void onEmsgLeafAtomRead(ParsableByteArray atom) {
     if (emsgTrackOutputs == null || emsgTrackOutputs.length == 0) {
       return;
     }
+    atom.setPosition(Atom.HEADER_SIZE);
+    int fullAtom = atom.readInt();
+    int version = Atom.parseFullAtomVersion(fullAtom);
+    String schemeIdUri;
+    String value;
+    long timescale;
+    long presentationTimeDeltaUs = C.TIME_UNSET; // Only set if version == 0
+    long sampleTimeUs = C.TIME_UNSET;
+    long durationMs;
+    long id;
+    switch (version) {
+      case 0:
+        schemeIdUri = Assertions.checkNotNull(atom.readNullTerminatedString());
+        value = Assertions.checkNotNull(atom.readNullTerminatedString());
+        timescale = atom.readUnsignedInt();
+        presentationTimeDeltaUs =
+            Util.scaleLargeTimestamp(atom.readUnsignedInt(), C.MICROS_PER_SECOND, timescale);
+        if (segmentIndexEarliestPresentationTimeUs != C.TIME_UNSET) {
+          sampleTimeUs = segmentIndexEarliestPresentationTimeUs + presentationTimeDeltaUs;
+        }
+        durationMs =
+            Util.scaleLargeTimestamp(atom.readUnsignedInt(), C.MILLIS_PER_SECOND, timescale);
+        id = atom.readUnsignedInt();
+        break;
+      case 1:
+        timescale = atom.readUnsignedInt();
+        sampleTimeUs =
+            Util.scaleLargeTimestamp(atom.readUnsignedLongToLong(), C.MICROS_PER_SECOND, timescale);
+        durationMs =
+            Util.scaleLargeTimestamp(atom.readUnsignedInt(), C.MILLIS_PER_SECOND, timescale);
+        id = atom.readUnsignedInt();
+        schemeIdUri = Assertions.checkNotNull(atom.readNullTerminatedString());
+        value = Assertions.checkNotNull(atom.readNullTerminatedString());
+        break;
+      default:
+        Log.w(TAG, "Skipping unsupported emsg version: " + version);
+        return;
+    }
 
-    atom.setPosition(Atom.FULL_HEADER_SIZE);
-    int sampleSize = atom.bytesLeft();
-    atom.readNullTerminatedString(); // schemeIdUri
-    atom.readNullTerminatedString(); // value
-    long timescale = atom.readUnsignedInt();
-    long presentationTimeDeltaUs =
-        Util.scaleLargeTimestamp(atom.readUnsignedInt(), C.MICROS_PER_SECOND, timescale);
-
-    // The presentation_time_delta is accounted for by adjusting the sample timestamp, so we zero it
-    // in the sample data before writing it to the track outputs.
-    int position = atom.getPosition();
-    atom.data[position - 4] = 0;
-    atom.data[position - 3] = 0;
-    atom.data[position - 2] = 0;
-    atom.data[position - 1] = 0;
+    byte[] messageData = new byte[atom.bytesLeft()];
+    atom.readBytes(messageData, /*offset=*/ 0, atom.bytesLeft());
+    EventMessage eventMessage = new EventMessage(schemeIdUri, value, durationMs, id, messageData);
+    ParsableByteArray encodedEventMessage =
+        new ParsableByteArray(eventMessageEncoder.encode(eventMessage));
+    int sampleSize = encodedEventMessage.bytesLeft();
 
     // Output the sample data.
     for (TrackOutput emsgTrackOutput : emsgTrackOutputs) {
-      atom.setPosition(Atom.FULL_HEADER_SIZE);
-      emsgTrackOutput.sampleData(atom, sampleSize);
+      encodedEventMessage.setPosition(0);
+      emsgTrackOutput.sampleData(encodedEventMessage, sampleSize);
     }
 
-    // Output the sample metadata.
-    if (segmentIndexEarliestPresentationTimeUs != C.TIME_UNSET) {
-      long sampleTimeUs = segmentIndexEarliestPresentationTimeUs + presentationTimeDeltaUs;
+    // Output the sample metadata. This is made a little complicated because emsg-v0 atoms
+    // have presentation time *delta* while v1 atoms have absolute presentation time.
+    if (sampleTimeUs == C.TIME_UNSET) {
+      // We need the first sample timestamp in the segment before we can output the metadata.
+      pendingMetadataSampleInfos.addLast(
+          new MetadataSampleInfo(presentationTimeDeltaUs, sampleSize));
+      pendingMetadataSampleBytes += sampleSize;
+    } else {
       if (timestampAdjuster != null) {
         sampleTimeUs = timestampAdjuster.adjustSampleTimestamp(sampleTimeUs);
       }
@@ -630,17 +667,10 @@ private void onEmsgLeafAtomRead(ParsableByteArray atom) {
         emsgTrackOutput.sampleMetadata(
             sampleTimeUs, C.BUFFER_FLAG_KEY_FRAME, sampleSize, /* offset= */ 0, null);
       }
-    } else {
-      // We need the first sample timestamp in the segment before we can output the metadata.
-      pendingMetadataSampleInfos.addLast(
-          new MetadataSampleInfo(presentationTimeDeltaUs, sampleSize));
-      pendingMetadataSampleBytes += sampleSize;
     }
   }
 
-  /**
-   * Parses a trex atom (defined in 14496-12).
-   */
+  /** Parses a trex atom (defined in 14496-12). */
   private static Pair<Integer, DefaultSampleValues> parseTrex(ParsableByteArray trex) {
     trex.setPosition(Atom.FULL_HEADER_SIZE);
     int trackId = trex.readInt();
@@ -934,7 +964,9 @@ private static int parseTrun(TrackBundle trackBundle, int index, long decodeTime
     // duration == 0). Other uses of edit lists are uncommon and unsupported.
     if (track.editListDurations != null && track.editListDurations.length == 1
         && track.editListDurations[0] == 0) {
-      edtsOffset = Util.scaleLargeTimestamp(track.editListMediaTimes[0], 1000, track.timescale);
+      edtsOffset =
+          Util.scaleLargeTimestamp(
+              track.editListMediaTimes[0], C.MILLIS_PER_SECOND, track.timescale);
     }
 
     int[] sampleSizeTable = fragment.sampleSizeTable;
@@ -962,12 +994,13 @@ private static int parseTrun(TrackBundle trackBundle, int index, long decodeTime
         // here, because unsigned integers will still be parsed correctly (unless their top bit is
         // set, which is never true in practice because sample offsets are always small).
         int sampleOffset = trun.readInt();
-        sampleCompositionTimeOffsetTable[i] = (int) ((sampleOffset * 1000L) / timescale);
+        sampleCompositionTimeOffsetTable[i] =
+            (int) ((sampleOffset * C.MILLIS_PER_SECOND) / timescale);
       } else {
         sampleCompositionTimeOffsetTable[i] = 0;
       }
       sampleDecodingTimeTable[i] =
-          Util.scaleLargeTimestamp(cumulativeTime, 1000, timescale) - edtsOffset;
+          Util.scaleLargeTimestamp(cumulativeTime, C.MILLIS_PER_SECOND, timescale) - edtsOffset;
       sampleSizeTable[i] = sampleSize;
       sampleIsSyncFrameTable[i] = ((sampleFlags >> 16) & 0x1) == 0
           && (!workaroundEveryVideoFrameIsSyncFrame || i == 0);
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecSelector.java b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecSelector.java
index 41cb4ee04a..c6e93d104a 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecSelector.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecSelector.java
@@ -51,7 +51,8 @@
    * @param mimeType The MIME type for which a decoder is required.
    * @param requiresSecureDecoder Whether a secure decoder is required.
    * @param requiresTunnelingDecoder Whether a tunneling decoder is required.
-   * @return A list of {@link MediaCodecInfo}s corresponding to decoders. May be empty.
+   * @return An unmodifiable list of {@link MediaCodecInfo}s corresponding to decoders. May be
+   *     empty.
    * @throws DecoderQueryException Thrown if there was an error querying decoders.
    */
   List<MediaCodecInfo> getDecoderInfos(
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecUtil.java b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecUtil.java
index a6391e4cc7..671523b5e8 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecUtil.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecUtil.java
@@ -146,8 +146,8 @@ public static MediaCodecInfo getDecoderInfo(String mimeType, boolean secure, boo
    *     unless secure decryption really is required.
    * @param tunneling Whether the decoder is required to support tunneling. Always pass false unless
    *     tunneling really is required.
-   * @return A list of all {@link MediaCodecInfo}s for the given mime type, in the order given by
-   *     {@link MediaCodecList}.
+   * @return An unmodifiable list of all {@link MediaCodecInfo}s for the given mime type, in the
+   *     order given by {@link MediaCodecList}.
    * @throws DecoderQueryException If there was an error querying the available decoders.
    */
   public static synchronized List<MediaCodecInfo> getDecoderInfos(
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/metadata/Metadata.java b/library/core/src/main/java/com/google/android/exoplayer2/metadata/Metadata.java
index 7b4f4c0836..35702da576 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/metadata/Metadata.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/metadata/Metadata.java
@@ -18,6 +18,7 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 import androidx.annotation.Nullable;
+import com.google.android.exoplayer2.Format;
 import com.google.android.exoplayer2.util.Util;
 import java.util.Arrays;
 import java.util.List;
@@ -28,10 +29,27 @@
  */
 public final class Metadata implements Parcelable {
 
-  /**
-   * A metadata entry.
-   */
-  public interface Entry extends Parcelable {}
+  /** A metadata entry. */
+  public interface Entry extends Parcelable {
+
+    /**
+     * Returns the {@link Format} that can be used to decode the wrapped metadata in {@link
+     * #getWrappedMetadataBytes()}, or null if this Entry doesn't contain wrapped metadata.
+     */
+    @Nullable
+    default Format getWrappedMetadataFormat() {
+      return null;
+    }
+
+    /**
+     * Returns the bytes of the wrapped metadata in this Entry, or null if it doesn't contain
+     * wrapped metadata.
+     */
+    @Nullable
+    default byte[] getWrappedMetadataBytes() {
+      return null;
+    }
+  }
 
   private final Entry[] entries;
 
@@ -122,6 +140,11 @@ public int hashCode() {
     return Arrays.hashCode(entries);
   }
 
+  @Override
+  public String toString() {
+    return "entries=" + Arrays.toString(entries);
+  }
+
   // Parcelable implementation.
 
   @Override
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/metadata/MetadataRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/metadata/MetadataRenderer.java
index d360224872..be965bd480 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/metadata/MetadataRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/metadata/MetadataRenderer.java
@@ -27,7 +27,9 @@
 import com.google.android.exoplayer2.FormatHolder;
 import com.google.android.exoplayer2.util.Assertions;
 import com.google.android.exoplayer2.util.Util;
+import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.List;
 
 /**
  * A renderer for metadata.
@@ -58,6 +60,7 @@
   private int pendingMetadataCount;
   private MetadataDecoder decoder;
   private boolean inputStreamEnded;
+  private long subsampleOffsetUs;
 
   /**
    * @param output The output.
@@ -126,16 +129,24 @@ public void render(long positionUs, long elapsedRealtimeUs) throws ExoPlaybackEx
           // If we ever need to support a metadata format where this is not the case, we'll need to
           // pass the buffer to the decoder and discard the output.
         } else {
-          buffer.subsampleOffsetUs = formatHolder.format.subsampleOffsetUs;
+          buffer.subsampleOffsetUs = subsampleOffsetUs;
           buffer.flip();
-          int index = (pendingMetadataIndex + pendingMetadataCount) % MAX_PENDING_METADATA_COUNT;
           Metadata metadata = decoder.decode(buffer);
           if (metadata != null) {
-            pendingMetadata[index] = metadata;
-            pendingMetadataTimestamps[index] = buffer.timeUs;
-            pendingMetadataCount++;
+            List<Metadata.Entry> entries = new ArrayList<>(metadata.length());
+            decodeWrappedMetadata(metadata, entries);
+            if (!entries.isEmpty()) {
+              Metadata expandedMetadata = new Metadata(entries);
+              int index =
+                  (pendingMetadataIndex + pendingMetadataCount) % MAX_PENDING_METADATA_COUNT;
+              pendingMetadata[index] = expandedMetadata;
+              pendingMetadataTimestamps[index] = buffer.timeUs;
+              pendingMetadataCount++;
+            }
           }
         }
+      } else if (result == C.RESULT_FORMAT_READ) {
+        subsampleOffsetUs = formatHolder.format.subsampleOffsetUs;
       }
     }
 
@@ -147,6 +158,36 @@ public void render(long positionUs, long elapsedRealtimeUs) throws ExoPlaybackEx
     }
   }
 
+  /**
+   * Iterates through {@code metadata.entries} and checks each one to see if contains wrapped
+   * metadata. If it does, then we recursively decode the wrapped metadata. If it doesn't (recursion
+   * base-case), we add the {@link Metadata.Entry} to {@code decodedEntries} (output parameter).
+   */
+  private void decodeWrappedMetadata(Metadata metadata, List<Metadata.Entry> decodedEntries) {
+    for (int i = 0; i < metadata.length(); i++) {
+      Format wrappedMetadataFormat = metadata.get(i).getWrappedMetadataFormat();
+      if (wrappedMetadataFormat != null && decoderFactory.supportsFormat(wrappedMetadataFormat)) {
+        MetadataDecoder wrappedMetadataDecoder =
+            decoderFactory.createDecoder(wrappedMetadataFormat);
+        // wrappedMetadataFormat != null so wrappedMetadataBytes must be non-null too.
+        byte[] wrappedMetadataBytes =
+            Assertions.checkNotNull(metadata.get(i).getWrappedMetadataBytes());
+        buffer.clear();
+        buffer.ensureSpaceForWrite(wrappedMetadataBytes.length);
+        buffer.data.put(wrappedMetadataBytes);
+        buffer.flip();
+        @Nullable Metadata innerMetadata = wrappedMetadataDecoder.decode(buffer);
+        if (innerMetadata != null) {
+          // The decoding succeeded, so we'll try another level of unwrapping.
+          decodeWrappedMetadata(innerMetadata, decodedEntries);
+        }
+      } else {
+        // Entry doesn't contain any wrapped metadata, so output it directly.
+        decodedEntries.add(metadata.get(i));
+      }
+    }
+  }
+
   @Override
   protected void onDisabled() {
     flushPendingMetadata();
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessage.java b/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessage.java
index ca1e390181..7e3862ca31 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessage.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessage.java
@@ -20,18 +20,43 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 import androidx.annotation.Nullable;
+import androidx.annotation.VisibleForTesting;
+import com.google.android.exoplayer2.Format;
 import com.google.android.exoplayer2.metadata.Metadata;
+import com.google.android.exoplayer2.util.MimeTypes;
 import com.google.android.exoplayer2.util.Util;
 import java.util.Arrays;
 
-/**
- * An Event Message (emsg) as defined in ISO 23009-1.
- */
+/** An Event Message (emsg) as defined in ISO 23009-1. */
 public final class EventMessage implements Metadata.Entry {
 
   /**
-   * The message scheme.
+   * emsg scheme_id_uri from the <a href="https://aomediacodec.github.io/av1-id3/#semantics">CMAF
+   * spec</a>.
+   */
+  @VisibleForTesting public static final String ID3_SCHEME_ID_AOM = "https://aomedia.org/emsg/ID3";
+
+  /**
+   * The Apple-hosted scheme_id equivalent to {@code ID3_SCHEME_ID_AOM} - used before AOM adoption.
    */
+  private static final String ID3_SCHEME_ID_APPLE =
+      "https://developer.apple.com/streaming/emsg-id3";
+
+  /**
+   * scheme_id_uri from section 7.3.2 of <a
+   * href="https://www.scte.org/SCTEDocs/Standards/ANSI_SCTE%20214-3%202015.pdf">SCTE 214-3
+   * 2015</a>.
+   */
+  @VisibleForTesting public static final String SCTE35_SCHEME_ID = "urn:scte:scte35:2014:bin";
+
+  private static final Format ID3_FORMAT =
+      Format.createSampleFormat(
+          /* id= */ null, MimeTypes.APPLICATION_ID3, Format.OFFSET_SAMPLE_RELATIVE);
+  private static final Format SCTE35_FORMAT =
+      Format.createSampleFormat(
+          /* id= */ null, MimeTypes.APPLICATION_SCTE35, Format.OFFSET_SAMPLE_RELATIVE);
+
+  /** The message scheme. */
   public final String schemeIdUri;
 
   /**
@@ -81,6 +106,26 @@ public EventMessage(
     messageData = castNonNull(in.createByteArray());
   }
 
+  @Override
+  @Nullable
+  public Format getWrappedMetadataFormat() {
+    switch (schemeIdUri) {
+      case ID3_SCHEME_ID_AOM:
+      case ID3_SCHEME_ID_APPLE:
+        return ID3_FORMAT;
+      case SCTE35_SCHEME_ID:
+        return SCTE35_FORMAT;
+      default:
+        return null;
+    }
+  }
+
+  @Override
+  @Nullable
+  public byte[] getWrappedMetadataBytes() {
+    return getWrappedMetadataFormat() != null ? messageData : null;
+  }
+
   @Override
   public int hashCode() {
     if (hashCode == 0) {
@@ -113,7 +158,14 @@ public boolean equals(@Nullable Object obj) {
 
   @Override
   public String toString() {
-    return "EMSG: scheme=" + schemeIdUri + ", id=" + id + ", value=" + value;
+    return "EMSG: scheme="
+        + schemeIdUri
+        + ", id="
+        + id
+        + ", durationMs="
+        + durationMs
+        + ", value="
+        + value;
   }
 
   // Parcelable implementation.
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoder.java b/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoder.java
index 33d79917eb..d4e254f956 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoder.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoder.java
@@ -15,47 +15,45 @@
  */
 package com.google.android.exoplayer2.metadata.emsg;
 
+import androidx.annotation.Nullable;
 import com.google.android.exoplayer2.metadata.Metadata;
 import com.google.android.exoplayer2.metadata.MetadataDecoder;
 import com.google.android.exoplayer2.metadata.MetadataInputBuffer;
 import com.google.android.exoplayer2.util.Assertions;
-import com.google.android.exoplayer2.util.Log;
 import com.google.android.exoplayer2.util.ParsableByteArray;
-import com.google.android.exoplayer2.util.Util;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
 
-/**
- * Decodes Event Message (emsg) atoms, as defined in ISO/IEC 23009-1:2014, Section 5.10.3.3.
- *
- * <p>Atom data should be provided to the decoder without the full atom header (i.e. starting from
- * the first byte of the scheme_id_uri field). It is expected that the presentation_time_delta field
- * should be 0, having already been accounted for by adjusting the sample timestamp.
- */
+/** Decodes data encoded by {@link EventMessageEncoder}. */
 public final class EventMessageDecoder implements MetadataDecoder {
 
-  private static final String TAG = "EventMessageDecoder";
-
   @SuppressWarnings("ByteBufferBackingArray")
   @Override
+  @Nullable
   public Metadata decode(MetadataInputBuffer inputBuffer) {
     ByteBuffer buffer = inputBuffer.data;
     byte[] data = buffer.array();
     int size = buffer.limit();
-    ParsableByteArray emsgData = new ParsableByteArray(data, size);
-    String schemeIdUri = Assertions.checkNotNull(emsgData.readNullTerminatedString());
-    String value = Assertions.checkNotNull(emsgData.readNullTerminatedString());
-    long timescale = emsgData.readUnsignedInt();
-    long presentationTimeDelta = emsgData.readUnsignedInt();
-    if (presentationTimeDelta != 0) {
-      // We expect the source to have accounted for presentation_time_delta by adjusting the sample
-      // timestamp and zeroing the field in the sample data. Log a warning if the field is non-zero.
-      Log.w(TAG, "Ignoring non-zero presentation_time_delta: " + presentationTimeDelta);
+    EventMessage decodedEventMessage = decode(new ParsableByteArray(data, size));
+    if (decodedEventMessage == null) {
+      return null;
+    } else {
+      return new Metadata(decodedEventMessage);
     }
-    long durationMs = Util.scaleLargeTimestamp(emsgData.readUnsignedInt(), 1000, timescale);
-    long id = emsgData.readUnsignedInt();
-    byte[] messageData = Arrays.copyOfRange(data, emsgData.getPosition(), size);
-    return new Metadata(new EventMessage(schemeIdUri, value, durationMs, id, messageData));
   }
 
+  @Nullable
+  public EventMessage decode(ParsableByteArray emsgData) {
+    try {
+      String schemeIdUri = Assertions.checkNotNull(emsgData.readNullTerminatedString());
+      String value = Assertions.checkNotNull(emsgData.readNullTerminatedString());
+      long durationMs = emsgData.readUnsignedInt();
+      long id = emsgData.readUnsignedInt();
+      byte[] messageData =
+          Arrays.copyOfRange(emsgData.data, emsgData.getPosition(), emsgData.limit());
+      return new EventMessage(schemeIdUri, value, durationMs, id, messageData);
+    } catch (RuntimeException e) {
+      return null;
+    }
+  }
 }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoder.java b/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoder.java
index dd33d591a7..4fa3f71b32 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoder.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoder.java
@@ -15,7 +15,6 @@
  */
 package com.google.android.exoplayer2.metadata.emsg;
 
-import androidx.annotation.Nullable;
 import java.io.ByteArrayOutputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
@@ -40,15 +39,12 @@ public EventMessageEncoder() {
    * @param eventMessage The event message to be encoded.
    * @return The serialized byte array.
    */
-  @Nullable
   public byte[] encode(EventMessage eventMessage) {
     byteArrayOutputStream.reset();
     try {
       writeNullTerminatedString(dataOutputStream, eventMessage.schemeIdUri);
       String nonNullValue = eventMessage.value != null ? eventMessage.value : "";
       writeNullTerminatedString(dataOutputStream, nonNullValue);
-      writeUnsignedInt(dataOutputStream, 1000); // timescale
-      writeUnsignedInt(dataOutputStream, 0); // presentation_time_delta
       writeUnsignedInt(dataOutputStream, eventMessage.durationMs);
       writeUnsignedInt(dataOutputStream, eventMessage.id);
       dataOutputStream.write(eventMessage.messageData);
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/metadata/id3/TextInformationFrame.java b/library/core/src/main/java/com/google/android/exoplayer2/metadata/id3/TextInformationFrame.java
index 8a36276b91..5dd5280e78 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/metadata/id3/TextInformationFrame.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/metadata/id3/TextInformationFrame.java
@@ -66,7 +66,7 @@ public int hashCode() {
 
   @Override
   public String toString() {
-    return id + ": value=" + value;
+    return id + ": description=" + description + ": value=" + value;
   }
 
   // Parcelable implementation.
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/source/ProgressiveMediaPeriod.java b/library/core/src/main/java/com/google/android/exoplayer2/source/ProgressiveMediaPeriod.java
index 4dafa0ba76..a5a3efa287 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/source/ProgressiveMediaPeriod.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/source/ProgressiveMediaPeriod.java
@@ -325,7 +325,10 @@ public void reevaluateBuffer(long positionUs) {
 
   @Override
   public boolean continueLoading(long playbackPositionUs) {
-    if (loadingFinished || pendingDeferredRetry || (prepared && enabledTrackCount == 0)) {
+    if (loadingFinished
+        || loader.hasFatalError()
+        || pendingDeferredRetry
+        || (prepared && enabledTrackCount == 0)) {
       return false;
     }
     boolean continuedLoading = loadCondition.open();
@@ -410,6 +413,7 @@ public long seekToUs(long positionUs) {
     if (loader.isLoading()) {
       loader.cancelLoading();
     } else {
+      loader.clearFatalError();
       for (SampleQueue sampleQueue : sampleQueues) {
         sampleQueue.reset();
       }
@@ -1042,21 +1046,28 @@ public Extractor selectExtractor(ExtractorInput input, ExtractorOutput output, U
       if (extractor != null) {
         return extractor;
       }
-      for (Extractor extractor : extractors) {
-        try {
-          if (extractor.sniff(input)) {
-            this.extractor = extractor;
-            break;
+      if (extractors.length == 1) {
+        this.extractor = extractors[0];
+      } else {
+        for (Extractor extractor : extractors) {
+          try {
+            if (extractor.sniff(input)) {
+              this.extractor = extractor;
+              break;
+            }
+          } catch (EOFException e) {
+            // Do nothing.
+          } finally {
+            input.resetPeekPosition();
           }
-        } catch (EOFException e) {
-          // Do nothing.
-        } finally {
-          input.resetPeekPosition();
         }
-      }
-      if (extractor == null) {
-        throw new UnrecognizedInputFormatException("None of the available extractors ("
-            + Util.getCommaDelimitedSimpleClassNames(extractors) + ") could read the stream.", uri);
+        if (extractor == null) {
+          throw new UnrecognizedInputFormatException(
+              "None of the available extractors ("
+                  + Util.getCommaDelimitedSimpleClassNames(extractors)
+                  + ") could read the stream.",
+              uri);
+        }
       }
       extractor.init(output);
       return extractor;
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/source/SingleSampleMediaPeriod.java b/library/core/src/main/java/com/google/android/exoplayer2/source/SingleSampleMediaPeriod.java
index e0c2a00df3..44fca3cb90 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/source/SingleSampleMediaPeriod.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/source/SingleSampleMediaPeriod.java
@@ -141,7 +141,7 @@ public void reevaluateBuffer(long positionUs) {
 
   @Override
   public boolean continueLoading(long positionUs) {
-    if (loadingFinished || loader.isLoading()) {
+    if (loadingFinished || loader.isLoading() || loader.hasFatalError()) {
       return false;
     }
     DataSource dataSource = dataSourceFactory.createDataSource();
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/source/chunk/ChunkSampleStream.java b/library/core/src/main/java/com/google/android/exoplayer2/source/chunk/ChunkSampleStream.java
index 18eada4708..4cb9922c23 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/source/chunk/ChunkSampleStream.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/source/chunk/ChunkSampleStream.java
@@ -338,6 +338,7 @@ public void seekToUs(long positionUs) {
       if (loader.isLoading()) {
         loader.cancelLoading();
       } else {
+        loader.clearFatalError();
         primarySampleQueue.reset();
         for (SampleQueue embeddedSampleQueue : embeddedSampleQueues) {
           embeddedSampleQueue.reset();
@@ -549,7 +550,7 @@ public LoadErrorAction onLoadError(
 
   @Override
   public boolean continueLoading(long positionUs) {
-    if (loadingFinished || loader.isLoading()) {
+    if (loadingFinished || loader.isLoading() || loader.hasFatalError()) {
       return false;
     }
 
@@ -616,7 +617,7 @@ public long getNextLoadPositionUs() {
 
   @Override
   public void reevaluateBuffer(long positionUs) {
-    if (loader.isLoading() || isPendingReset()) {
+    if (loader.isLoading() || loader.hasFatalError() || isPendingReset()) {
       return;
     }
 
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java
index b8dd40f8bd..b38710a67e 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.java
@@ -19,7 +19,6 @@
 import android.graphics.Point;
 import android.os.Parcel;
 import android.os.Parcelable;
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import android.text.TextUtils;
 import android.util.Pair;
@@ -178,6 +177,7 @@
     private boolean exceedAudioConstraintsIfNecessary;
     private boolean allowAudioMixedMimeTypeAdaptiveness;
     private boolean allowAudioMixedSampleRateAdaptiveness;
+    private boolean allowAudioMixedChannelCountAdaptiveness;
     // General
     private boolean forceLowestBitrate;
     private boolean forceHighestSupportedBitrate;
@@ -215,6 +215,8 @@ private ParametersBuilder(Parameters initialValues) {
       exceedAudioConstraintsIfNecessary = initialValues.exceedAudioConstraintsIfNecessary;
       allowAudioMixedMimeTypeAdaptiveness = initialValues.allowAudioMixedMimeTypeAdaptiveness;
       allowAudioMixedSampleRateAdaptiveness = initialValues.allowAudioMixedSampleRateAdaptiveness;
+      allowAudioMixedChannelCountAdaptiveness =
+          initialValues.allowAudioMixedChannelCountAdaptiveness;
       // General
       forceLowestBitrate = initialValues.forceLowestBitrate;
       forceHighestSupportedBitrate = initialValues.forceHighestSupportedBitrate;
@@ -246,8 +248,10 @@ public ParametersBuilder clearVideoSizeConstraints() {
     }
 
     /**
-     * See {@link Parameters#maxVideoWidth} and {@link Parameters#maxVideoHeight}.
+     * Sets the maximum allowed video width and height.
      *
+     * @param maxVideoWidth Maximum allowed video width in pixels.
+     * @param maxVideoHeight Maximum allowed video height in pixels.
      * @return This builder.
      */
     public ParametersBuilder setMaxVideoSize(int maxVideoWidth, int maxVideoHeight) {
@@ -257,8 +261,9 @@ public ParametersBuilder setMaxVideoSize(int maxVideoWidth, int maxVideoHeight)
     }
 
     /**
-     * See {@link Parameters#maxVideoFrameRate}.
+     * Sets the maximum allowed video frame rate.
      *
+     * @param maxVideoFrameRate Maximum allowed video frame rate in hertz.
      * @return This builder.
      */
     public ParametersBuilder setMaxVideoFrameRate(int maxVideoFrameRate) {
@@ -267,8 +272,9 @@ public ParametersBuilder setMaxVideoFrameRate(int maxVideoFrameRate) {
     }
 
     /**
-     * See {@link Parameters#maxVideoBitrate}.
+     * Sets the maximum allowed video bitrate.
      *
+     * @param maxVideoBitrate Maximum allowed video bitrate in bits per second.
      * @return This builder.
      */
     public ParametersBuilder setMaxVideoBitrate(int maxVideoBitrate) {
@@ -277,8 +283,11 @@ public ParametersBuilder setMaxVideoBitrate(int maxVideoBitrate) {
     }
 
     /**
-     * See {@link Parameters#exceedVideoConstraintsIfNecessary}.
+     * Sets whether to exceed the {@link #setMaxVideoSize(int, int)} and {@link
+     * #setMaxAudioBitrate(int)} constraints when no selection can be made otherwise.
      *
+     * @param exceedVideoConstraintsIfNecessary Whether to exceed video constraints when no
+     *     selection can be made otherwise.
      * @return This builder.
      */
     public ParametersBuilder setExceedVideoConstraintsIfNecessary(
@@ -288,8 +297,14 @@ public ParametersBuilder setExceedVideoConstraintsIfNecessary(
     }
 
     /**
-     * See {@link Parameters#allowVideoMixedMimeTypeAdaptiveness}.
+     * Sets whether to allow adaptive video selections containing mixed MIME types.
      *
+     * <p>Adaptations between different MIME types may not be completely seamless, in which case
+     * {@link #setAllowVideoNonSeamlessAdaptiveness(boolean)} also needs to be {@code true} for
+     * mixed MIME type selections to be made.
+     *
+     * @param allowVideoMixedMimeTypeAdaptiveness Whether to allow adaptive video selections
+     *     containing mixed MIME types.
      * @return This builder.
      */
     public ParametersBuilder setAllowVideoMixedMimeTypeAdaptiveness(
@@ -299,8 +314,11 @@ public ParametersBuilder setAllowVideoMixedMimeTypeAdaptiveness(
     }
 
     /**
-     * See {@link Parameters#allowVideoNonSeamlessAdaptiveness}.
+     * Sets whether to allow adaptive video selections where adaptation may not be completely
+     * seamless.
      *
+     * @param allowVideoNonSeamlessAdaptiveness Whether to allow adaptive video selections where
+     *     adaptation may not be completely seamless.
      * @return This builder.
      */
     public ParametersBuilder setAllowVideoNonSeamlessAdaptiveness(
@@ -314,7 +332,8 @@ public ParametersBuilder setAllowVideoNonSeamlessAdaptiveness(
      * obtained from {@link Util#getPhysicalDisplaySize(Context)}.
      *
      * @param context Any context.
-     * @param viewportOrientationMayChange See {@link Parameters#viewportOrientationMayChange}.
+     * @param viewportOrientationMayChange Whether the viewport orientation may change during
+     *     playback.
      * @return This builder.
      */
     public ParametersBuilder setViewportSizeToPhysicalDisplaySize(
@@ -335,12 +354,13 @@ public ParametersBuilder clearViewportSizeConstraints() {
     }
 
     /**
-     * See {@link Parameters#viewportWidth}, {@link Parameters#maxVideoHeight} and {@link
-     * Parameters#viewportOrientationMayChange}.
+     * Sets the viewport size to constrain adaptive video selections so that only tracks suitable
+     * for the viewport are selected.
      *
-     * @param viewportWidth See {@link Parameters#viewportWidth}.
-     * @param viewportHeight See {@link Parameters#viewportHeight}.
-     * @param viewportOrientationMayChange See {@link Parameters#viewportOrientationMayChange}.
+     * @param viewportWidth Viewport width in pixels.
+     * @param viewportHeight Viewport height in pixels.
+     * @param viewportOrientationMayChange Whether the viewport orientation may change during
+     *     playback.
      * @return This builder.
      */
     public ParametersBuilder setViewportSize(
@@ -360,8 +380,9 @@ public ParametersBuilder setPreferredAudioLanguage(@Nullable String preferredAud
     }
 
     /**
-     * See {@link Parameters#maxAudioChannelCount}.
+     * Sets the maximum allowed audio channel count.
      *
+     * @param maxAudioChannelCount Maximum allowed audio channel count.
      * @return This builder.
      */
     public ParametersBuilder setMaxAudioChannelCount(int maxAudioChannelCount) {
@@ -370,8 +391,9 @@ public ParametersBuilder setMaxAudioChannelCount(int maxAudioChannelCount) {
     }
 
     /**
-     * See {@link Parameters#maxAudioBitrate}.
+     * Sets the maximum allowed audio bitrate.
      *
+     * @param maxAudioBitrate Maximum allowed audio bitrate in bits per second.
      * @return This builder.
      */
     public ParametersBuilder setMaxAudioBitrate(int maxAudioBitrate) {
@@ -380,8 +402,11 @@ public ParametersBuilder setMaxAudioBitrate(int maxAudioBitrate) {
     }
 
     /**
-     * See {@link Parameters#exceedAudioConstraintsIfNecessary}.
+     * Sets whether to exceed the {@link #setMaxAudioChannelCount(int)} and {@link
+     * #setMaxAudioBitrate(int)} constraints when no selection can be made otherwise.
      *
+     * @param exceedAudioConstraintsIfNecessary Whether to exceed audio constraints when no
+     *     selection can be made otherwise.
      * @return This builder.
      */
     public ParametersBuilder setExceedAudioConstraintsIfNecessary(
@@ -391,8 +416,12 @@ public ParametersBuilder setExceedAudioConstraintsIfNecessary(
     }
 
     /**
-     * See {@link Parameters#allowAudioMixedMimeTypeAdaptiveness}.
+     * Sets whether to allow adaptive audio selections containing mixed MIME types.
+     *
+     * <p>Adaptations between different MIME types may not be completely seamless.
      *
+     * @param allowAudioMixedMimeTypeAdaptiveness Whether to allow adaptive audio selections
+     *     containing mixed MIME types.
      * @return This builder.
      */
     public ParametersBuilder setAllowAudioMixedMimeTypeAdaptiveness(
@@ -402,8 +431,12 @@ public ParametersBuilder setAllowAudioMixedMimeTypeAdaptiveness(
     }
 
     /**
-     * See {@link Parameters#allowAudioMixedSampleRateAdaptiveness}.
+     * Sets whether to allow adaptive audio selections containing mixed sample rates.
      *
+     * <p>Adaptations between different sample rates may not be completely seamless.
+     *
+     * @param allowAudioMixedSampleRateAdaptiveness Whether to allow adaptive audio selections
+     *     containing mixed sample rates.
      * @return This builder.
      */
     public ParametersBuilder setAllowAudioMixedSampleRateAdaptiveness(
@@ -412,6 +445,21 @@ public ParametersBuilder setAllowAudioMixedSampleRateAdaptiveness(
       return this;
     }
 
+    /**
+     * Sets whether to allow adaptive audio selections containing mixed channel counts.
+     *
+     * <p>Adaptations between different channel counts may not be completely seamless.
+     *
+     * @param allowAudioMixedChannelCountAdaptiveness Whether to allow adaptive audio selections
+     *     containing mixed channel counts.
+     * @return This builder.
+     */
+    public ParametersBuilder setAllowAudioMixedChannelCountAdaptiveness(
+        boolean allowAudioMixedChannelCountAdaptiveness) {
+      this.allowAudioMixedChannelCountAdaptiveness = allowAudioMixedChannelCountAdaptiveness;
+      return this;
+    }
+
     // Text
 
     @Override
@@ -420,6 +468,12 @@ public ParametersBuilder setPreferredTextLanguage(@Nullable String preferredText
       return this;
     }
 
+    @Override
+    public ParametersBuilder setPreferredTextRoleFlags(@C.RoleFlags int preferredTextRoleFlags) {
+      super.setPreferredTextRoleFlags(preferredTextRoleFlags);
+      return this;
+    }
+
     @Override
     public ParametersBuilder setSelectUndeterminedTextLanguage(
         boolean selectUndeterminedTextLanguage) {
@@ -436,8 +490,11 @@ public ParametersBuilder setDisabledTextTrackSelectionFlags(
     // General
 
     /**
-     * See {@link Parameters#forceLowestBitrate}.
+     * Sets whether to force selection of the single lowest bitrate audio and video tracks that
+     * comply with all other constraints.
      *
+     * @param forceLowestBitrate Whether to force selection of the single lowest bitrate audio and
+     *     video tracks.
      * @return This builder.
      */
     public ParametersBuilder setForceLowestBitrate(boolean forceLowestBitrate) {
@@ -446,8 +503,11 @@ public ParametersBuilder setForceLowestBitrate(boolean forceLowestBitrate) {
     }
 
     /**
-     * See {@link Parameters#forceHighestSupportedBitrate}.
+     * Sets whether to force selection of the highest bitrate audio and video tracks that comply
+     * with all other constraints.
      *
+     * @param forceHighestSupportedBitrate Whether to force selection of the highest bitrate audio
+     *     and video tracks.
      * @return This builder.
      */
     public ParametersBuilder setForceHighestSupportedBitrate(boolean forceHighestSupportedBitrate) {
@@ -473,8 +533,15 @@ public ParametersBuilder setAllowNonSeamlessAdaptiveness(boolean allowNonSeamles
     }
 
     /**
-     * See {@link Parameters#exceedRendererCapabilitiesIfNecessary}.
+     * Sets whether to exceed renderer capabilities when no selection can be made otherwise.
      *
+     * <p>This parameter applies when all of the tracks available for a renderer exceed the
+     * renderer's reported capabilities. If the parameter is {@code true} then the lowest quality
+     * track will still be selected. Playback may succeed if the renderer has under-reported its
+     * true capabilities. If {@code false} then no track will be selected.
+     *
+     * @param exceedRendererCapabilitiesIfNecessary Whether to exceed renderer capabilities when no
+     *     selection can be made otherwise.
      * @return This builder.
      */
     public ParametersBuilder setExceedRendererCapabilitiesIfNecessary(
@@ -484,7 +551,7 @@ public ParametersBuilder setExceedRendererCapabilitiesIfNecessary(
     }
 
     /**
-     * See {@link Parameters#tunnelingAudioSessionId}.
+     * Sets the audio session id to use when tunneling.
      *
      * <p>Enables or disables tunneling. To enable tunneling, pass an audio session id to use when
      * in tunneling mode. Session ids can be generated using {@link
@@ -494,6 +561,7 @@ public ParametersBuilder setExceedRendererCapabilitiesIfNecessary(
      *
      * @param tunnelingAudioSessionId The audio session id to use when tunneling, or {@link
      *     C#AUDIO_SESSION_ID_UNSET} to disable tunneling.
+     * @return This builder.
      */
     public ParametersBuilder setTunnelingAudioSessionId(int tunnelingAudioSessionId) {
       this.tunnelingAudioSessionId = tunnelingAudioSessionId;
@@ -508,6 +576,7 @@ public ParametersBuilder setTunnelingAudioSessionId(int tunnelingAudioSessionId)
      *
      * @param rendererIndex The renderer index.
      * @param disabled Whether the renderer is disabled.
+     * @return This builder.
      */
     public final ParametersBuilder setRendererDisabled(int rendererIndex, boolean disabled) {
       if (rendererDisabledFlags.get(rendererIndex) == disabled) {
@@ -544,6 +613,7 @@ public final ParametersBuilder setRendererDisabled(int rendererIndex, boolean di
      * @param rendererIndex The renderer index.
      * @param groups The {@link TrackGroupArray} for which the override should be applied.
      * @param override The override.
+     * @return This builder.
      */
     public final ParametersBuilder setSelectionOverride(
         int rendererIndex, TrackGroupArray groups, SelectionOverride override) {
@@ -565,6 +635,7 @@ public final ParametersBuilder setSelectionOverride(
      *
      * @param rendererIndex The renderer index.
      * @param groups The {@link TrackGroupArray} for which the override should be cleared.
+     * @return This builder.
      */
     public final ParametersBuilder clearSelectionOverride(
         int rendererIndex, TrackGroupArray groups) {
@@ -584,6 +655,7 @@ public final ParametersBuilder clearSelectionOverride(
      * Clears all track selection overrides for the specified renderer.
      *
      * @param rendererIndex The renderer index.
+     * @return This builder.
      */
     public final ParametersBuilder clearSelectionOverrides(int rendererIndex) {
       Map<TrackGroupArray, SelectionOverride> overrides = selectionOverrides.get(rendererIndex);
@@ -595,7 +667,11 @@ public final ParametersBuilder clearSelectionOverrides(int rendererIndex) {
       return this;
     }
 
-    /** Clears all track selection overrides for all renderers. */
+    /**
+     * Clears all track selection overrides for all renderers.
+     *
+     * @return This builder.
+     */
     public final ParametersBuilder clearSelectionOverrides() {
       if (selectionOverrides.size() == 0) {
         // Nothing to clear.
@@ -628,8 +704,10 @@ public Parameters build() {
           exceedAudioConstraintsIfNecessary,
           allowAudioMixedMimeTypeAdaptiveness,
           allowAudioMixedSampleRateAdaptiveness,
+          allowAudioMixedChannelCountAdaptiveness,
           // Text
           preferredTextLanguage,
+          preferredTextRoleFlags,
           selectUndeterminedTextLanguage,
           disabledTextTrackSelectionFlags,
           // General
@@ -662,8 +740,8 @@ public Parameters build() {
 
     // Video
     /**
-     * Maximum allowed video width. The default value is {@link Integer#MAX_VALUE} (i.e. no
-     * constraint).
+     * Maximum allowed video width in pixels. The default value is {@link Integer#MAX_VALUE} (i.e.
+     * no constraint).
      *
      * <p>To constrain adaptive video track selections to be suitable for a given viewport (the
      * region of the display within which video will be played), use ({@link #viewportWidth}, {@link
@@ -671,8 +749,8 @@ public Parameters build() {
      */
     public final int maxVideoWidth;
     /**
-     * Maximum allowed video height. The default value is {@link Integer#MAX_VALUE} (i.e. no
-     * constraint).
+     * Maximum allowed video height in pixels. The default value is {@link Integer#MAX_VALUE} (i.e.
+     * no constraint).
      *
      * <p>To constrain adaptive video track selections to be suitable for a given viewport (the
      * region of the display within which video will be played), use ({@link #viewportWidth}, {@link
@@ -680,12 +758,13 @@ public Parameters build() {
      */
     public final int maxVideoHeight;
     /**
-     * Maximum allowed video frame rate. The default value is {@link Integer#MAX_VALUE} (i.e. no
-     * constraint).
+     * Maximum allowed video frame rate in hertz. The default value is {@link Integer#MAX_VALUE}
+     * (i.e. no constraint).
      */
     public final int maxVideoFrameRate;
     /**
-     * Maximum video bitrate. The default value is {@link Integer#MAX_VALUE} (i.e. no constraint).
+     * Maximum allowed video bitrate in bits per second. The default value is {@link
+     * Integer#MAX_VALUE} (i.e. no constraint).
      */
     public final int maxVideoBitrate;
     /**
@@ -695,9 +774,9 @@ public Parameters build() {
      */
     public final boolean exceedVideoConstraintsIfNecessary;
     /**
-     * Whether to allow adaptive video selections containing mixed mime types. Adaptations between
-     * different mime types may not be completely seamless, in which case {@link
-     * #allowVideoNonSeamlessAdaptiveness} also needs to be {@code true} for mixed mime type
+     * Whether to allow adaptive video selections containing mixed MIME types. Adaptations between
+     * different MIME types may not be completely seamless, in which case {@link
+     * #allowVideoNonSeamlessAdaptiveness} also needs to be {@code true} for mixed MIME type
      * selections to be made. The default value is {@code false}.
      */
     public final boolean allowVideoMixedMimeTypeAdaptiveness;
@@ -731,7 +810,8 @@ public Parameters build() {
      */
     public final int maxAudioChannelCount;
     /**
-     * Maximum audio bitrate. The default value is {@link Integer#MAX_VALUE} (i.e. no constraint).
+     * Maximum allowed audio bitrate in bits per second. The default value is {@link
+     * Integer#MAX_VALUE} (i.e. no constraint).
      */
     public final int maxAudioBitrate;
     /**
@@ -740,8 +820,8 @@ public Parameters build() {
      */
     public final boolean exceedAudioConstraintsIfNecessary;
     /**
-     * Whether to allow adaptive audio selections containing mixed mime types. Adaptations between
-     * different mime types may not be completely seamless. The default value is {@code false}.
+     * Whether to allow adaptive audio selections containing mixed MIME types. Adaptations between
+     * different MIME types may not be completely seamless. The default value is {@code false}.
      */
     public final boolean allowAudioMixedMimeTypeAdaptiveness;
     /**
@@ -749,6 +829,12 @@ public Parameters build() {
      * different sample rates may not be completely seamless. The default value is {@code false}.
      */
     public final boolean allowAudioMixedSampleRateAdaptiveness;
+    /**
+     * Whether to allow adaptive audio selections containing mixed channel counts. Adaptations
+     * between different channel counts may not be completely seamless. The default value is {@code
+     * false}.
+     */
+    public final boolean allowAudioMixedChannelCountAdaptiveness;
 
     // General
     /**
@@ -809,8 +895,10 @@ private Parameters() {
           /* exceedAudioConstraintsIfNecessary= */ true,
           /* allowAudioMixedMimeTypeAdaptiveness= */ false,
           /* allowAudioMixedSampleRateAdaptiveness= */ false,
+          /* allowAudioMixedChannelCountAdaptiveness= */ false,
           // Text
           TrackSelectionParameters.DEFAULT.preferredTextLanguage,
+          TrackSelectionParameters.DEFAULT.preferredTextRoleFlags,
           TrackSelectionParameters.DEFAULT.selectUndeterminedTextLanguage,
           TrackSelectionParameters.DEFAULT.disabledTextTrackSelectionFlags,
           // General
@@ -841,8 +929,10 @@ private Parameters() {
         boolean exceedAudioConstraintsIfNecessary,
         boolean allowAudioMixedMimeTypeAdaptiveness,
         boolean allowAudioMixedSampleRateAdaptiveness,
+        boolean allowAudioMixedChannelCountAdaptiveness,
         // Text
         @Nullable String preferredTextLanguage,
+        @C.RoleFlags int preferredTextRoleFlags,
         boolean selectUndeterminedTextLanguage,
         @C.SelectionFlags int disabledTextTrackSelectionFlags,
         // General
@@ -856,6 +946,7 @@ private Parameters() {
       super(
           preferredAudioLanguage,
           preferredTextLanguage,
+          preferredTextRoleFlags,
           selectUndeterminedTextLanguage,
           disabledTextTrackSelectionFlags);
       // Video
@@ -875,6 +966,7 @@ private Parameters() {
       this.exceedAudioConstraintsIfNecessary = exceedAudioConstraintsIfNecessary;
       this.allowAudioMixedMimeTypeAdaptiveness = allowAudioMixedMimeTypeAdaptiveness;
       this.allowAudioMixedSampleRateAdaptiveness = allowAudioMixedSampleRateAdaptiveness;
+      this.allowAudioMixedChannelCountAdaptiveness = allowAudioMixedChannelCountAdaptiveness;
       // General
       this.forceLowestBitrate = forceLowestBitrate;
       this.forceHighestSupportedBitrate = forceHighestSupportedBitrate;
@@ -908,6 +1000,7 @@ private Parameters() {
       this.exceedAudioConstraintsIfNecessary = Util.readBoolean(in);
       this.allowAudioMixedMimeTypeAdaptiveness = Util.readBoolean(in);
       this.allowAudioMixedSampleRateAdaptiveness = Util.readBoolean(in);
+      this.allowAudioMixedChannelCountAdaptiveness = Util.readBoolean(in);
       // General
       this.forceLowestBitrate = Util.readBoolean(in);
       this.forceHighestSupportedBitrate = Util.readBoolean(in);
@@ -989,6 +1082,8 @@ public boolean equals(@Nullable Object obj) {
           && exceedAudioConstraintsIfNecessary == other.exceedAudioConstraintsIfNecessary
           && allowAudioMixedMimeTypeAdaptiveness == other.allowAudioMixedMimeTypeAdaptiveness
           && allowAudioMixedSampleRateAdaptiveness == other.allowAudioMixedSampleRateAdaptiveness
+          && allowAudioMixedChannelCountAdaptiveness
+              == other.allowAudioMixedChannelCountAdaptiveness
           // General
           && forceLowestBitrate == other.forceLowestBitrate
           && forceHighestSupportedBitrate == other.forceHighestSupportedBitrate
@@ -1019,6 +1114,7 @@ public int hashCode() {
       result = 31 * result + (exceedAudioConstraintsIfNecessary ? 1 : 0);
       result = 31 * result + (allowAudioMixedMimeTypeAdaptiveness ? 1 : 0);
       result = 31 * result + (allowAudioMixedSampleRateAdaptiveness ? 1 : 0);
+      result = 31 * result + (allowAudioMixedChannelCountAdaptiveness ? 1 : 0);
       // General
       result = 31 * result + (forceLowestBitrate ? 1 : 0);
       result = 31 * result + (forceHighestSupportedBitrate ? 1 : 0);
@@ -1055,6 +1151,7 @@ public void writeToParcel(Parcel dest, int flags) {
       Util.writeBoolean(dest, exceedAudioConstraintsIfNecessary);
       Util.writeBoolean(dest, allowAudioMixedMimeTypeAdaptiveness);
       Util.writeBoolean(dest, allowAudioMixedSampleRateAdaptiveness);
+      Util.writeBoolean(dest, allowAudioMixedChannelCountAdaptiveness);
       // General
       Util.writeBoolean(dest, forceLowestBitrate);
       Util.writeBoolean(dest, forceHighestSupportedBitrate);
@@ -1552,7 +1649,7 @@ public void experimental_allowMultipleAdaptiveSelections() {
       }
     }
 
-    int selectedTextTrackScore = Integer.MIN_VALUE;
+    TextTrackScore selectedTextTrackScore = null;
     int selectedTextRendererIndex = C.INDEX_UNSET;
     for (int i = 0; i < rendererCount; i++) {
       int trackType = mappedTrackInfo.getRendererType(i);
@@ -1562,13 +1659,15 @@ public void experimental_allowMultipleAdaptiveSelections() {
           // Already done. Do nothing.
           break;
         case C.TRACK_TYPE_TEXT:
-          Pair<TrackSelection.Definition, Integer> textSelection =
+          Pair<TrackSelection.Definition, TextTrackScore> textSelection =
               selectTextTrack(
                   mappedTrackInfo.getTrackGroups(i),
                   rendererFormatSupports[i],
                   params,
                   selectedAudioLanguage);
-          if (textSelection != null && textSelection.second > selectedTextTrackScore) {
+          if (textSelection != null
+              && (selectedTextTrackScore == null
+                  || textSelection.second.compareTo(selectedTextTrackScore) > 0)) {
             if (selectedTextRendererIndex != C.INDEX_UNSET) {
               // We've already made a selection for another text renderer, but it had a lower score.
               // Clear the selection for that renderer.
@@ -1936,7 +2035,8 @@ private static boolean isSupportedAdaptiveVideoTrack(
               formatSupports[selectedGroupIndex],
               params.maxAudioBitrate,
               params.allowAudioMixedMimeTypeAdaptiveness,
-              params.allowAudioMixedSampleRateAdaptiveness);
+              params.allowAudioMixedSampleRateAdaptiveness,
+              params.allowAudioMixedChannelCountAdaptiveness);
       if (adaptiveTracks.length > 0) {
         definition = new TrackSelection.Definition(selectedGroup, adaptiveTracks);
       }
@@ -1954,7 +2054,8 @@ private static boolean isSupportedAdaptiveVideoTrack(
       int[] formatSupport,
       int maxAudioBitrate,
       boolean allowMixedMimeTypeAdaptiveness,
-      boolean allowMixedSampleRateAdaptiveness) {
+      boolean allowMixedSampleRateAdaptiveness,
+      boolean allowAudioMixedChannelCountAdaptiveness) {
     int selectedConfigurationTrackCount = 0;
     AudioConfigurationTuple selectedConfiguration = null;
     HashSet<AudioConfigurationTuple> seenConfigurationTuples = new HashSet<>();
@@ -1971,7 +2072,8 @@ private static boolean isSupportedAdaptiveVideoTrack(
                 configuration,
                 maxAudioBitrate,
                 allowMixedMimeTypeAdaptiveness,
-                allowMixedSampleRateAdaptiveness);
+                allowMixedSampleRateAdaptiveness,
+                allowAudioMixedChannelCountAdaptiveness);
         if (configurationCount > selectedConfigurationTrackCount) {
           selectedConfiguration = configuration;
           selectedConfigurationTrackCount = configurationCount;
@@ -1991,7 +2093,8 @@ private static boolean isSupportedAdaptiveVideoTrack(
             selectedConfiguration,
             maxAudioBitrate,
             allowMixedMimeTypeAdaptiveness,
-            allowMixedSampleRateAdaptiveness)) {
+            allowMixedSampleRateAdaptiveness,
+            allowAudioMixedChannelCountAdaptiveness)) {
           adaptiveIndices[index++] = i;
         }
       }
@@ -2006,7 +2109,8 @@ private static int getAdaptiveAudioTrackCount(
       AudioConfigurationTuple configuration,
       int maxAudioBitrate,
       boolean allowMixedMimeTypeAdaptiveness,
-      boolean allowMixedSampleRateAdaptiveness) {
+      boolean allowMixedSampleRateAdaptiveness,
+      boolean allowAudioMixedChannelCountAdaptiveness) {
     int count = 0;
     for (int i = 0; i < group.length; i++) {
       if (isSupportedAdaptiveAudioTrack(
@@ -2015,7 +2119,8 @@ private static int getAdaptiveAudioTrackCount(
           configuration,
           maxAudioBitrate,
           allowMixedMimeTypeAdaptiveness,
-          allowMixedSampleRateAdaptiveness)) {
+          allowMixedSampleRateAdaptiveness,
+          allowAudioMixedChannelCountAdaptiveness)) {
         count++;
       }
     }
@@ -2028,11 +2133,13 @@ private static boolean isSupportedAdaptiveAudioTrack(
       AudioConfigurationTuple configuration,
       int maxAudioBitrate,
       boolean allowMixedMimeTypeAdaptiveness,
-      boolean allowMixedSampleRateAdaptiveness) {
+      boolean allowMixedSampleRateAdaptiveness,
+      boolean allowAudioMixedChannelCountAdaptiveness) {
     return isSupported(formatSupport, false)
         && (format.bitrate == Format.NO_VALUE || format.bitrate <= maxAudioBitrate)
-        && (format.channelCount != Format.NO_VALUE
-            && format.channelCount == configuration.channelCount)
+        && (allowAudioMixedChannelCountAdaptiveness
+            || (format.channelCount != Format.NO_VALUE
+                && format.channelCount == configuration.channelCount))
         && (allowMixedMimeTypeAdaptiveness
             || (format.sampleMimeType != null
                 && TextUtils.equals(format.sampleMimeType, configuration.mimeType)))
@@ -2052,21 +2159,21 @@ private static boolean isSupportedAdaptiveAudioTrack(
    *     track, indexed by track group index and track index (in that order).
    * @param params The selector's current constraint parameters.
    * @param selectedAudioLanguage The language of the selected audio track. May be null if the
-   *     selected audio track declares no language or no audio track was selected.
-   * @return The {@link TrackSelection.Definition} and corresponding track score, or null if no
-   *     selection was made.
+   *     selected text track declares no language or no text track was selected.
+   * @return The {@link TrackSelection.Definition} and corresponding {@link TextTrackScore}, or null
+   *     if no selection was made.
    * @throws ExoPlaybackException If an error occurs while selecting the tracks.
    */
   @Nullable
-  protected Pair<TrackSelection.Definition, Integer> selectTextTrack(
+  protected Pair<TrackSelection.Definition, TextTrackScore> selectTextTrack(
       TrackGroupArray groups,
       int[][] formatSupport,
       Parameters params,
       @Nullable String selectedAudioLanguage)
       throws ExoPlaybackException {
     TrackGroup selectedGroup = null;
-    int selectedTrackIndex = 0;
-    int selectedTrackScore = 0;
+    int selectedTrackIndex = C.INDEX_UNSET;
+    TextTrackScore selectedTrackScore = null;
     for (int groupIndex = 0; groupIndex < groups.length; groupIndex++) {
       TrackGroup trackGroup = groups.get(groupIndex);
       int[] trackFormatSupport = formatSupport[groupIndex];
@@ -2074,39 +2181,11 @@ private static boolean isSupportedAdaptiveAudioTrack(
         if (isSupported(trackFormatSupport[trackIndex],
             params.exceedRendererCapabilitiesIfNecessary)) {
           Format format = trackGroup.getFormat(trackIndex);
-          int maskedSelectionFlags =
-              format.selectionFlags & ~params.disabledTextTrackSelectionFlags;
-          boolean isDefault = (maskedSelectionFlags & C.SELECTION_FLAG_DEFAULT) != 0;
-          boolean isForced = (maskedSelectionFlags & C.SELECTION_FLAG_FORCED) != 0;
-          int trackScore;
-          int languageScore = getFormatLanguageScore(format, params.preferredTextLanguage);
-          boolean trackHasNoLanguage = formatHasNoLanguage(format);
-          if (languageScore > 0 || (params.selectUndeterminedTextLanguage && trackHasNoLanguage)) {
-            if (isDefault) {
-              trackScore = 11;
-            } else if (!isForced) {
-              // Prefer non-forced to forced if a preferred text language has been specified. Where
-              // both are provided the non-forced track will usually contain the forced subtitles as
-              // a subset.
-              trackScore = 7;
-            } else {
-              trackScore = 3;
-            }
-            trackScore += languageScore;
-          } else if (isDefault) {
-            trackScore = 2;
-          } else if (isForced
-              && (getFormatLanguageScore(format, selectedAudioLanguage) > 0
-                  || (trackHasNoLanguage && stringDefinesNoLanguage(selectedAudioLanguage)))) {
-            trackScore = 1;
-          } else {
-            // Track should not be selected.
-            continue;
-          }
-          if (isSupported(trackFormatSupport[trackIndex], false)) {
-            trackScore += WITHIN_RENDERER_CAPABILITIES_BONUS;
-          }
-          if (trackScore > selectedTrackScore) {
+          TextTrackScore trackScore =
+              new TextTrackScore(
+                  format, params, trackFormatSupport[trackIndex], selectedAudioLanguage);
+          if (trackScore.isWithinConstraints
+              && (selectedTrackScore == null || trackScore.compareTo(selectedTrackScore) > 0)) {
             selectedGroup = trackGroup;
             selectedTrackIndex = trackIndex;
             selectedTrackScore = trackScore;
@@ -2117,7 +2196,8 @@ private static boolean isSupportedAdaptiveAudioTrack(
     return selectedGroup == null
         ? null
         : Pair.create(
-            new TrackSelection.Definition(selectedGroup, selectedTrackIndex), selectedTrackScore);
+            new TrackSelection.Definition(selectedGroup, selectedTrackIndex),
+            Assertions.checkNotNull(selectedTrackScore));
   }
 
   // General track selection methods.
@@ -2287,19 +2367,17 @@ protected static boolean isSupported(int formatSupport, boolean allowExceedsCapa
         && maskedSupport == RendererCapabilities.FORMAT_EXCEEDS_CAPABILITIES);
   }
 
-  /** Equivalent to {@link #stringDefinesNoLanguage stringDefinesNoLanguage(format.language)}. */
-  protected static boolean formatHasNoLanguage(Format format) {
-    return stringDefinesNoLanguage(format.language);
-  }
-
   /**
-   * Returns whether the given string does not define a language.
+   * Normalizes the input string to null if it does not define a language, or returns it otherwise.
    *
    * @param language The string.
-   * @return Whether the given string does not define a language.
+   * @return The string, optionally normalized to null if it does not define a language.
    */
-  protected static boolean stringDefinesNoLanguage(@Nullable String language) {
-    return TextUtils.isEmpty(language) || TextUtils.equals(language, C.LANGUAGE_UNDETERMINED);
+  @Nullable
+  protected static String normalizeUndeterminedLanguageToNull(@Nullable String language) {
+    return TextUtils.isEmpty(language) || TextUtils.equals(language, C.LANGUAGE_UNDETERMINED)
+        ? null
+        : language;
   }
 
   /**
@@ -2307,26 +2385,34 @@ protected static boolean stringDefinesNoLanguage(@Nullable String language) {
    *
    * @param format The {@link Format}.
    * @param language The language, or null.
-   * @return A score of 3 if the languages match fully, a score of 2 if the languages match partly,
-   *     a score of 1 if the languages don't match but belong to the same main language, and a score
-   *     of 0 if the languages don't match at all.
+   * @param allowUndeterminedFormatLanguage Whether matches with an empty or undetermined format
+   *     language tag are allowed.
+   * @return A score of 4 if the languages match fully, a score of 3 if the languages match partly,
+   *     a score of 2 if the languages don't match but belong to the same main language, a score of
+   *     1 if the format language is undetermined and such a match is allowed, and a score of 0 if
+   *     the languages don't match at all.
    */
-  protected static int getFormatLanguageScore(Format format, @Nullable String language) {
-    if (format.language == null || language == null) {
-      return 0;
-    }
-    if (TextUtils.equals(format.language, language)) {
+  protected static int getFormatLanguageScore(
+      Format format, @Nullable String language, boolean allowUndeterminedFormatLanguage) {
+    if (!TextUtils.isEmpty(language) && language.equals(format.language)) {
+      // Full literal match of non-empty languages, including matches of an explicit "und" query.
+      return 4;
+    }
+    language = normalizeUndeterminedLanguageToNull(language);
+    String formatLanguage = normalizeUndeterminedLanguageToNull(format.language);
+    if (formatLanguage == null || language == null) {
+      // At least one of the languages is undetermined.
+      return allowUndeterminedFormatLanguage && formatLanguage == null ? 1 : 0;
+    }
+    if (formatLanguage.startsWith(language) || language.startsWith(formatLanguage)) {
+      // Partial match where one language is a subset of the other (e.g. "zh-hans" and "zh-hans-hk")
       return 3;
     }
-    // Partial match where one language is a subset of the other (e.g. "zh-hans" and "zh-hans-hk")
-    if (format.language.startsWith(language) || language.startsWith(format.language)) {
-      return 2;
-    }
-    // Partial match where only the main language tag is the same (e.g. "fr-fr" and "fr-ca")
-    String formatMainLanguage = Util.splitAtFirst(format.language, "-")[0];
+    String formatMainLanguage = Util.splitAtFirst(formatLanguage, "-")[0];
     String queryMainLanguage = Util.splitAtFirst(language, "-")[0];
     if (formatMainLanguage.equals(queryMainLanguage)) {
-      return 1;
+      // Partial match where only the main language tag is the same (e.g. "fr-fr" and "fr-ca")
+      return 2;
     }
     return 0;
   }
@@ -2400,11 +2486,28 @@ private static Point getMaxVideoSizeInViewport(boolean orientationMayChange, int
     }
   }
 
+  /**
+   * Compares two integers in a safe way avoiding potential overflow.
+   *
+   * @param first The first value.
+   * @param second The second value.
+   * @return A negative integer if the first value is less than the second. Zero if they are equal.
+   *     A positive integer if the first value is greater than the second.
+   */
+  private static int compareInts(int first, int second) {
+    return first > second ? 1 : (second > first ? -1 : 0);
+  }
+
   /** Represents how well an audio track matches the selection {@link Parameters}. */
   protected static final class AudioTrackScore implements Comparable<AudioTrackScore> {
 
+    /**
+     * Whether the provided format is within the parameter constraints. If {@code false}, the format
+     * should not be selected.
+     */
     public final boolean isWithinConstraints;
 
+    @Nullable private final String language;
     private final Parameters parameters;
     private final boolean isWithinRendererCapabilities;
     private final int preferredLanguageScore;
@@ -2417,8 +2520,13 @@ private static Point getMaxVideoSizeInViewport(boolean orientationMayChange, int
 
     public AudioTrackScore(Format format, Parameters parameters, int formatSupport) {
       this.parameters = parameters;
+      this.language = normalizeUndeterminedLanguageToNull(format.language);
       isWithinRendererCapabilities = isSupported(formatSupport, false);
-      preferredLanguageScore = getFormatLanguageScore(format, parameters.preferredAudioLanguage);
+      preferredLanguageScore =
+          getFormatLanguageScore(
+              format,
+              parameters.preferredAudioLanguage,
+              /* allowUndeterminedFormatLanguage= */ false);
       isDefaultSelectionFlag = (format.selectionFlags & C.SELECTION_FLAG_DEFAULT) != 0;
       channelCount = format.channelCount;
       sampleRate = format.sampleRate;
@@ -2431,7 +2539,9 @@ public AudioTrackScore(Format format, Parameters parameters, int formatSupport)
       int bestMatchIndex = Integer.MAX_VALUE;
       int bestMatchScore = 0;
       for (int i = 0; i < localeLanguages.length; i++) {
-        int score = getFormatLanguageScore(format, localeLanguages[i]);
+        int score =
+            getFormatLanguageScore(
+                format, localeLanguages[i], /* allowUndeterminedFormatLanguage= */ false);
         if (score > 0) {
           bestMatchIndex = i;
           bestMatchScore = score;
@@ -2450,7 +2560,7 @@ public AudioTrackScore(Format format, Parameters parameters, int formatSupport)
      *     negative integer if this score is worse than the other.
      */
     @Override
-    public int compareTo(@NonNull AudioTrackScore other) {
+    public int compareTo(AudioTrackScore other) {
       if (this.isWithinRendererCapabilities != other.isWithinRendererCapabilities) {
         return this.isWithinRendererCapabilities ? 1 : -1;
       }
@@ -2484,22 +2594,14 @@ public int compareTo(@NonNull AudioTrackScore other) {
       if (this.sampleRate != other.sampleRate) {
         return resultSign * compareInts(this.sampleRate, other.sampleRate);
       }
-      return resultSign * compareInts(this.bitrate, other.bitrate);
+      if (Util.areEqual(this.language, other.language)) {
+        // Only compare bit rates of tracks with the same or unknown language.
+        return resultSign * compareInts(this.bitrate, other.bitrate);
+      }
+      return 0;
     }
   }
 
-  /**
-   * Compares two integers in a safe way and avoiding potential overflow.
-   *
-   * @param first The first value.
-   * @param second The second value.
-   * @return A negative integer if the first value is less than the second. Zero if they are equal.
-   *     A positive integer if the first value is greater than the second.
-   */
-  private static int compareInts(int first, int second) {
-    return first > second ? 1 : (second > first ? -1 : 0);
-  }
-
   private static final class AudioConfigurationTuple {
 
     public final int channelCount;
@@ -2535,4 +2637,88 @@ public int hashCode() {
 
   }
 
+  /** Represents how well a text track matches the selection {@link Parameters}. */
+  protected static final class TextTrackScore implements Comparable<TextTrackScore> {
+
+    /**
+     * Whether the provided format is within the parameter constraints. If {@code false}, the format
+     * should not be selected.
+     */
+    public final boolean isWithinConstraints;
+
+    private final boolean isWithinRendererCapabilities;
+    private final boolean isDefault;
+    private final boolean hasPreferredIsForcedFlag;
+    private final int preferredLanguageScore;
+    private final int preferredRoleFlagsScore;
+    private final int selectedAudioLanguageScore;
+    private final boolean hasCaptionRoleFlags;
+
+    public TextTrackScore(
+        Format format,
+        Parameters parameters,
+        int trackFormatSupport,
+        @Nullable String selectedAudioLanguage) {
+      isWithinRendererCapabilities =
+          isSupported(trackFormatSupport, /* allowExceedsCapabilities= */ false);
+      int maskedSelectionFlags =
+          format.selectionFlags & ~parameters.disabledTextTrackSelectionFlags;
+      isDefault = (maskedSelectionFlags & C.SELECTION_FLAG_DEFAULT) != 0;
+      boolean isForced = (maskedSelectionFlags & C.SELECTION_FLAG_FORCED) != 0;
+      preferredLanguageScore =
+          getFormatLanguageScore(
+              format, parameters.preferredTextLanguage, parameters.selectUndeterminedTextLanguage);
+      preferredRoleFlagsScore =
+          Integer.bitCount(format.roleFlags & parameters.preferredTextRoleFlags);
+      hasCaptionRoleFlags =
+          (format.roleFlags & (C.ROLE_FLAG_CAPTION | C.ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND)) != 0;
+      // Prefer non-forced to forced if a preferred text language has been matched. Where both are
+      // provided the non-forced track will usually contain the forced subtitles as a subset.
+      // Otherwise, prefer a forced track.
+      hasPreferredIsForcedFlag =
+          (preferredLanguageScore > 0 && !isForced) || (preferredLanguageScore == 0 && isForced);
+      boolean selectedAudioLanguageUndetermined =
+          normalizeUndeterminedLanguageToNull(selectedAudioLanguage) == null;
+      selectedAudioLanguageScore =
+          getFormatLanguageScore(format, selectedAudioLanguage, selectedAudioLanguageUndetermined);
+      isWithinConstraints =
+          preferredLanguageScore > 0
+              || (parameters.preferredTextLanguage == null && preferredRoleFlagsScore > 0)
+              || isDefault
+              || (isForced && selectedAudioLanguageScore > 0);
+    }
+
+    /**
+     * Compares this score with another.
+     *
+     * @param other The other score to compare to.
+     * @return A positive integer if this score is better than the other. Zero if they are equal. A
+     *     negative integer if this score is worse than the other.
+     */
+    @Override
+    public int compareTo(TextTrackScore other) {
+      if (this.isWithinRendererCapabilities != other.isWithinRendererCapabilities) {
+        return this.isWithinRendererCapabilities ? 1 : -1;
+      }
+      if (this.preferredLanguageScore != other.preferredLanguageScore) {
+        return compareInts(this.preferredLanguageScore, other.preferredLanguageScore);
+      }
+      if (this.preferredRoleFlagsScore != other.preferredRoleFlagsScore) {
+        return compareInts(this.preferredRoleFlagsScore, other.preferredRoleFlagsScore);
+      }
+      if (this.isDefault != other.isDefault) {
+        return this.isDefault ? 1 : -1;
+      }
+      if (this.hasPreferredIsForcedFlag != other.hasPreferredIsForcedFlag) {
+        return this.hasPreferredIsForcedFlag ? 1 : -1;
+      }
+      if (this.selectedAudioLanguageScore != other.selectedAudioLanguageScore) {
+        return compareInts(this.selectedAudioLanguageScore, other.selectedAudioLanguageScore);
+      }
+      if (preferredRoleFlagsScore == 0 && this.hasCaptionRoleFlags != other.hasCaptionRoleFlags) {
+        return this.hasCaptionRoleFlags ? -1 : 1;
+      }
+      return 0;
+    }
+  }
 }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/TrackSelectionParameters.java b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/TrackSelectionParameters.java
index 66a4707496..047791387e 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/trackselection/TrackSelectionParameters.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/trackselection/TrackSelectionParameters.java
@@ -35,6 +35,7 @@
     @Nullable /* package */ String preferredAudioLanguage;
     // Text
     @Nullable /* package */ String preferredTextLanguage;
+    @C.RoleFlags /* package */ int preferredTextRoleFlags;
     /* package */ boolean selectUndeterminedTextLanguage;
     @C.SelectionFlags /* package */ int disabledTextTrackSelectionFlags;
 
@@ -52,14 +53,16 @@ public Builder() {
       preferredAudioLanguage = initialValues.preferredAudioLanguage;
       // Text
       preferredTextLanguage = initialValues.preferredTextLanguage;
+      preferredTextRoleFlags = initialValues.preferredTextRoleFlags;
       selectUndeterminedTextLanguage = initialValues.selectUndeterminedTextLanguage;
       disabledTextTrackSelectionFlags = initialValues.disabledTextTrackSelectionFlags;
     }
 
     /**
-     * See {@link TrackSelectionParameters#preferredAudioLanguage}.
+     * Sets the preferred language for audio and forced text tracks.
      *
-     * @param preferredAudioLanguage Preferred audio language as an IETF BCP 47 conformant tag.
+     * @param preferredAudioLanguage Preferred audio language as an IETF BCP 47 conformant tag, or
+     *     {@code null} to select the default track, or the first track if there's no default.
      * @return This builder.
      */
     public Builder setPreferredAudioLanguage(@Nullable String preferredAudioLanguage) {
@@ -70,9 +73,10 @@ public Builder setPreferredAudioLanguage(@Nullable String preferredAudioLanguage
     // Text
 
     /**
-     * See {@link TrackSelectionParameters#preferredTextLanguage}.
+     * Sets the preferred language for text tracks.
      *
-     * @param preferredTextLanguage Preferred text language as an IETF BCP 47 conformant tag.
+     * @param preferredTextLanguage Preferred text language as an IETF BCP 47 conformant tag, or
+     *     {@code null} to select the default track if there is one, or no track otherwise.
      * @return This builder.
      */
     public Builder setPreferredTextLanguage(@Nullable String preferredTextLanguage) {
@@ -81,8 +85,23 @@ public Builder setPreferredTextLanguage(@Nullable String preferredTextLanguage)
     }
 
     /**
-     * See {@link TrackSelectionParameters#selectUndeterminedTextLanguage}.
+     * Sets the preferred {@link C.RoleFlags} for text tracks.
      *
+     * @param preferredTextRoleFlags Preferred text role flags.
+     * @return This builder.
+     */
+    public Builder setPreferredTextRoleFlags(@C.RoleFlags int preferredTextRoleFlags) {
+      this.preferredTextRoleFlags = preferredTextRoleFlags;
+      return this;
+    }
+
+    /**
+     * Sets whether a text track with undetermined language should be selected if no track with
+     * {@link #setPreferredTextLanguage(String)} is available, or if the preferred language is
+     * unset.
+     *
+     * @param selectUndeterminedTextLanguage Whether a text track with undetermined language should
+     *     be selected if no preferred language track is available.
      * @return This builder.
      */
     public Builder setSelectUndeterminedTextLanguage(boolean selectUndeterminedTextLanguage) {
@@ -91,8 +110,10 @@ public Builder setSelectUndeterminedTextLanguage(boolean selectUndeterminedTextL
     }
 
     /**
-     * See {@link TrackSelectionParameters#disabledTextTrackSelectionFlags}.
+     * Sets a bitmask of selection flags that are disabled for text track selections.
      *
+     * @param disabledTextTrackSelectionFlags A bitmask of {@link C.SelectionFlags} that are
+     *     disabled for text track selections.
      * @return This builder.
      */
     public Builder setDisabledTextTrackSelectionFlags(
@@ -108,6 +129,7 @@ public TrackSelectionParameters build() {
           preferredAudioLanguage,
           // Text
           preferredTextLanguage,
+          preferredTextRoleFlags,
           selectUndeterminedTextLanguage,
           disabledTextTrackSelectionFlags);
     }
@@ -128,6 +150,11 @@ public TrackSelectionParameters build() {
    * track if there is one, or no track otherwise. The default value is {@code null}.
    */
   @Nullable public final String preferredTextLanguage;
+  /**
+   * The preferred {@link C.RoleFlags} for text tracks. {@code 0} selects the default track if there
+   * is one, or no track otherwise. The default value is {@code 0}.
+   */
+  @C.RoleFlags public final int preferredTextRoleFlags;
   /**
    * Whether a text track with undetermined language should be selected if no track with {@link
    * #preferredTextLanguage} is available, or if {@link #preferredTextLanguage} is unset. The
@@ -145,6 +172,7 @@ public TrackSelectionParameters build() {
         /* preferredAudioLanguage= */ null,
         // Text
         /* preferredTextLanguage= */ null,
+        /* preferredTextRoleFlags= */ 0,
         /* selectUndeterminedTextLanguage= */ false,
         /* disabledTextTrackSelectionFlags= */ 0);
   }
@@ -152,12 +180,14 @@ public TrackSelectionParameters build() {
   /* package */ TrackSelectionParameters(
       @Nullable String preferredAudioLanguage,
       @Nullable String preferredTextLanguage,
+      @C.RoleFlags int preferredTextRoleFlags,
       boolean selectUndeterminedTextLanguage,
       @C.SelectionFlags int disabledTextTrackSelectionFlags) {
     // Audio
     this.preferredAudioLanguage = Util.normalizeLanguageCode(preferredAudioLanguage);
     // Text
     this.preferredTextLanguage = Util.normalizeLanguageCode(preferredTextLanguage);
+    this.preferredTextRoleFlags = preferredTextRoleFlags;
     this.selectUndeterminedTextLanguage = selectUndeterminedTextLanguage;
     this.disabledTextTrackSelectionFlags = disabledTextTrackSelectionFlags;
   }
@@ -167,6 +197,7 @@ public TrackSelectionParameters build() {
     this.preferredAudioLanguage = in.readString();
     // Text
     this.preferredTextLanguage = in.readString();
+    this.preferredTextRoleFlags = in.readInt();
     this.selectUndeterminedTextLanguage = Util.readBoolean(in);
     this.disabledTextTrackSelectionFlags = in.readInt();
   }
@@ -189,6 +220,7 @@ public boolean equals(@Nullable Object obj) {
     return TextUtils.equals(preferredAudioLanguage, other.preferredAudioLanguage)
         // Text
         && TextUtils.equals(preferredTextLanguage, other.preferredTextLanguage)
+        && preferredTextRoleFlags == other.preferredTextRoleFlags
         && selectUndeterminedTextLanguage == other.selectUndeterminedTextLanguage
         && disabledTextTrackSelectionFlags == other.disabledTextTrackSelectionFlags;
   }
@@ -200,6 +232,7 @@ public int hashCode() {
     result = 31 * result + (preferredAudioLanguage == null ? 0 : preferredAudioLanguage.hashCode());
     // Text
     result = 31 * result + (preferredTextLanguage == null ? 0 : preferredTextLanguage.hashCode());
+    result = 31 * result + preferredTextRoleFlags;
     result = 31 * result + (selectUndeterminedTextLanguage ? 1 : 0);
     result = 31 * result + disabledTextTrackSelectionFlags;
     return result;
@@ -218,6 +251,7 @@ public void writeToParcel(Parcel dest, int flags) {
     dest.writeString(preferredAudioLanguage);
     // Text
     dest.writeString(preferredTextLanguage);
+    dest.writeInt(preferredTextRoleFlags);
     Util.writeBoolean(dest, selectUndeterminedTextLanguage);
     dest.writeInt(disabledTextTrackSelectionFlags);
   }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java
index a98f773c9d..78b31896ab 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DataSpec.java
@@ -68,7 +68,7 @@
    * setting this flag may also enable more concurrent access to the data (e.g. reading one fragment
    * whilst writing another).
    */
-  public static final int FLAG_ALLOW_CACHE_FRAGMENTATION = 1 << 4; // 8
+  public static final int FLAG_ALLOW_CACHE_FRAGMENTATION = 1 << 3; // 8
 
   /**
    * The set of HTTP methods that are supported by ExoPlayer {@link HttpDataSource}s. One of {@link
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultBandwidthMeter.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultBandwidthMeter.java
index 76515a98e6..1f306dd69d 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultBandwidthMeter.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultBandwidthMeter.java
@@ -100,6 +100,7 @@ public Builder(Context context) {
       initialBitrateEstimates = getInitialBitrateEstimatesForCountry(Util.getCountryCode(context));
       slidingWindowMaxWeight = DEFAULT_SLIDING_WINDOW_MAX_WEIGHT;
       clock = Clock.DEFAULT;
+      resetOnNetworkTypeChange = true;
     }
 
     /**
@@ -168,14 +169,12 @@ public Builder setClock(Clock clock) {
     }
 
     /**
-     * Sets whether to reset if the network type changes.
-     *
-     * <p>This method is experimental, and will be renamed or removed in a future release.
+     * Sets whether to reset if the network type changes. The default value is {@code true}.
      *
      * @param resetOnNetworkTypeChange Whether to reset if the network type changes.
      * @return This builder.
      */
-    public Builder experimental_resetOnNetworkTypeChange(boolean resetOnNetworkTypeChange) {
+    public Builder setResetOnNetworkTypeChange(boolean resetOnNetworkTypeChange) {
       this.resetOnNetworkTypeChange = resetOnNetworkTypeChange;
       return this;
     }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
index 66036b7a84..87f95a32a2 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java
@@ -82,6 +82,7 @@
   private @Nullable HttpURLConnection connection;
   private @Nullable InputStream inputStream;
   private boolean opened;
+  private int responseCode;
 
   private long bytesToSkip;
   private long bytesToRead;
@@ -252,6 +253,11 @@ public DefaultHttpDataSource(
     return connection == null ? null : Uri.parse(connection.getURL().toString());
   }
 
+  @Override
+  public int getResponseCode() {
+    return connection == null || responseCode <= 0 ? -1 : responseCode;
+  }
+
   @Override
   public Map<String, List<String>> getResponseHeaders() {
     return connection == null ? Collections.emptyMap() : connection.getHeaderFields();
@@ -288,7 +294,6 @@ public long open(DataSpec dataSpec) throws HttpDataSourceException {
           dataSpec, HttpDataSourceException.TYPE_OPEN);
     }
 
-    int responseCode;
     String responseMessage;
     try {
       responseCode = connection.getResponseCode();
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/HttpDataSource.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/HttpDataSource.java
index 07155ee2bc..97ece840ac 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/HttpDataSource.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/HttpDataSource.java
@@ -354,6 +354,12 @@ public InvalidResponseCodeException(
    */
   void clearAllRequestProperties();
 
+  /**
+   * When the source is open, returns the HTTP response status code associated with the last {@link
+   * #open} call. Otherwise, returns a negative value.
+   */
+  int getResponseCode();
+
   @Override
   Map<String, List<String>> getResponseHeaders();
 }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/LoadErrorHandlingPolicy.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/LoadErrorHandlingPolicy.java
index 3432935d5f..293d1e7510 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/LoadErrorHandlingPolicy.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/LoadErrorHandlingPolicy.java
@@ -44,8 +44,8 @@
    *
    * @param dataType One of the {@link C C.DATA_TYPE_*} constants indicating the type of data to
    *     load.
-   * @param loadDurationMs The duration in milliseconds of the load up to the point at which the
-   *     error occurred, including any previous attempts.
+   * @param loadDurationMs The duration in milliseconds of the load from the start of the first load
+   *     attempt up to the point at which the error occurred.
    * @param exception The load error.
    * @param errorCount The number of errors this load has encountered, including this one.
    * @return The blacklist duration in milliseconds, or {@link C#TIME_UNSET} if the resource should
@@ -64,8 +64,8 @@ long getBlacklistDurationMsFor(
    *
    * @param dataType One of the {@link C C.DATA_TYPE_*} constants indicating the type of data to
    *     load.
-   * @param loadDurationMs The duration in milliseconds of the load up to the point at which the
-   *     error occurred, including any previous attempts.
+   * @param loadDurationMs The duration in milliseconds of the load from the start of the first load
+   *     attempt up to the point at which the error occurred.
    * @param exception The load error.
    * @param errorCount The number of errors this load has encountered, including this one.
    * @return The number of milliseconds to wait before attempting the load again, or {@link
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/Loader.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/Loader.java
index 878c40dc9e..cfe46ac980 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/Loader.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/Loader.java
@@ -213,6 +213,19 @@ public static LoadErrorAction createRetryAction(boolean resetErrorCount, long re
         retryDelayMillis);
   }
 
+  /**
+   * Whether the last call to {@link #startLoading} resulted in a fatal error. Calling {@link
+   * #maybeThrowError()} will throw the fatal error.
+   */
+  public boolean hasFatalError() {
+    return fatalError != null;
+  }
+
+  /** Clears any stored fatal error. */
+  public void clearFatalError() {
+    fatalError = null;
+  }
+
   /**
    * Starts loading a {@link Loadable}.
    *
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java
index e5df8d55c3..12107e6111 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java
@@ -283,7 +283,7 @@ public long open(DataSpec dataSpec) throws IOException {
       }
       openNextSource(false);
       return bytesRemaining;
-    } catch (IOException e) {
+    } catch (Throwable e) {
       handleBeforeThrow(e);
       throw e;
     }
@@ -325,6 +325,9 @@ public int read(byte[] buffer, int offset, int readLength) throws IOException {
       }
       handleBeforeThrow(e);
       throw e;
+    } catch (Throwable e) {
+      handleBeforeThrow(e);
+      throw e;
     }
   }
 
@@ -349,7 +352,7 @@ public void close() throws IOException {
     notifyBytesRead();
     try {
       closeCurrentSource();
-    } catch (IOException e) {
+    } catch (Throwable e) {
       handleBeforeThrow(e);
       throw e;
     }
@@ -516,7 +519,7 @@ private void closeCurrentSource() throws IOException {
     }
   }
 
-  private void handleBeforeThrow(IOException exception) {
+  private void handleBeforeThrow(Throwable exception) {
     if (isReadingFromCache() || exception instanceof CacheException) {
       seenCacheError = true;
     }
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheUtil.java b/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheUtil.java
index 47470c5de7..6277ec686f 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheUtil.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheUtil.java
@@ -359,7 +359,7 @@ public static void remove(Cache cache, String key) {
     }
   }
 
-  /*package*/ static boolean isCausedByPositionOutOfRange(IOException e) {
+  /* package */ static boolean isCausedByPositionOutOfRange(IOException e) {
     Throwable cause = e;
     while (cause != null) {
       if (cause instanceof DataSourceException) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/util/AtomicFile.java b/library/core/src/main/java/com/google/android/exoplayer2/util/AtomicFile.java
index 74e50dfd92..07a8b0a88a 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/util/AtomicFile.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/util/AtomicFile.java
@@ -108,8 +108,9 @@ public OutputStream startWrite() throws IOException {
     } catch (FileNotFoundException e) {
       File parent = baseName.getParentFile();
       if (parent == null || !parent.mkdirs()) {
-        throw new IOException("Couldn't create directory " + baseName, e);
+        throw new IOException("Couldn't create " + baseName, e);
       }
+      // Try again now that we've created the parent directory.
       try {
         str = new AtomicFileOutputStream(baseName);
       } catch (FileNotFoundException e2) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/util/Util.java b/library/core/src/main/java/com/google/android/exoplayer2/util/Util.java
index 095394b2f5..144a670294 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/util/Util.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/util/Util.java
@@ -1530,35 +1530,6 @@ public static String getStringForTime(StringBuilder builder, Formatter formatter
         : formatter.format("%02d:%02d", minutes, seconds).toString();
   }
 
-  /**
-   * Maps a {@link C} {@code TRACK_TYPE_*} constant to the corresponding {@link C} {@code
-   * DEFAULT_*_BUFFER_SIZE} constant.
-   *
-   * @param trackType The track type.
-   * @return The corresponding default buffer size in bytes.
-   * @throws IllegalArgumentException If the track type is an unrecognized or custom track type.
-   */
-  public static int getDefaultBufferSize(int trackType) {
-    switch (trackType) {
-      case C.TRACK_TYPE_DEFAULT:
-        return C.DEFAULT_MUXED_BUFFER_SIZE;
-      case C.TRACK_TYPE_AUDIO:
-        return C.DEFAULT_AUDIO_BUFFER_SIZE;
-      case C.TRACK_TYPE_VIDEO:
-        return C.DEFAULT_VIDEO_BUFFER_SIZE;
-      case C.TRACK_TYPE_TEXT:
-        return C.DEFAULT_TEXT_BUFFER_SIZE;
-      case C.TRACK_TYPE_METADATA:
-        return C.DEFAULT_METADATA_BUFFER_SIZE;
-      case C.TRACK_TYPE_CAMERA_MOTION:
-        return C.DEFAULT_CAMERA_MOTION_BUFFER_SIZE;
-      case C.TRACK_TYPE_NONE:
-        return 0;
-      default:
-        throw new IllegalArgumentException();
-    }
-  }
-
   /**
    * Escapes a string so that it's safe for use as a file or directory name on at least FAT32
    * filesystems. FAT32 is the most restrictive of all filesystems still commonly used today.
diff --git a/library/core/src/test/java/com/google/android/exoplayer2/audio/DefaultAudioSinkTest.java b/library/core/src/test/java/com/google/android/exoplayer2/audio/DefaultAudioSinkTest.java
index d41c99183d..7adf618366 100644
--- a/library/core/src/test/java/com/google/android/exoplayer2/audio/DefaultAudioSinkTest.java
+++ b/library/core/src/test/java/com/google/android/exoplayer2/audio/DefaultAudioSinkTest.java
@@ -67,6 +67,13 @@ public void setUp() {
             /* enableConvertHighResIntPcmToFloat= */ false);
   }
 
+  @Test
+  public void handlesSpecializedAudioProcessorArray() {
+    defaultAudioSink =
+        new DefaultAudioSink(
+            AudioCapabilities.DEFAULT_AUDIO_CAPABILITIES, new TeeAudioProcessor[0]);
+  }
+
   @Test
   public void handlesBufferAfterReset() throws Exception {
     configureDefaultAudioSink(CHANNEL_COUNT_STEREO);
diff --git a/library/core/src/test/java/com/google/android/exoplayer2/metadata/MetadataRendererTest.java b/library/core/src/test/java/com/google/android/exoplayer2/metadata/MetadataRendererTest.java
new file mode 100644
index 0000000000..de18d370ec
--- /dev/null
+++ b/library/core/src/test/java/com/google/android/exoplayer2/metadata/MetadataRendererTest.java
@@ -0,0 +1,202 @@
+/*
+ * Copyright (C) 2019 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+package com.google.android.exoplayer2.metadata;
+
+import static com.google.common.truth.Truth.assertThat;
+import static java.nio.charset.StandardCharsets.ISO_8859_1;
+import static java.nio.charset.StandardCharsets.UTF_8;
+
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import com.google.android.exoplayer2.ExoPlaybackException;
+import com.google.android.exoplayer2.Format;
+import com.google.android.exoplayer2.metadata.emsg.EventMessage;
+import com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder;
+import com.google.android.exoplayer2.metadata.id3.TextInformationFrame;
+import com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand;
+import com.google.android.exoplayer2.testutil.FakeSampleStream;
+import com.google.android.exoplayer2.testutil.TestUtil;
+import com.google.android.exoplayer2.util.Assertions;
+import com.google.android.exoplayer2.util.MimeTypes;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+/** Tests for {@link MetadataRenderer}. */
+@RunWith(AndroidJUnit4.class)
+public class MetadataRendererTest {
+
+  private static final byte[] SCTE35_TIME_SIGNAL_BYTES =
+      TestUtil.joinByteArrays(
+          TestUtil.createByteArray(
+              0, // table_id.
+              0x80, // section_syntax_indicator, private_indicator, reserved, section_length(4).
+              0x14, // section_length(8).
+              0x00, // protocol_version.
+              0x00), // encrypted_packet, encryption_algorithm, pts_adjustment(1).
+          TestUtil.createByteArray(0x00, 0x00, 0x00, 0x00), // pts_adjustment(32).
+          TestUtil.createByteArray(
+              0x00, // cw_index.
+              0x00, // tier(8).
+              0x00, // tier(4), splice_command_length(4).
+              0x05, // splice_command_length(8).
+              0x06, // splice_command_type = time_signal.
+              // Start of splice_time().
+              0x80), // time_specified_flag, reserved, pts_time(1).
+          TestUtil.createByteArray(
+              0x52, 0x03, 0x02, 0x8f), // pts_time(32). PTS for a second after playback position.
+          TestUtil.createByteArray(
+              0x00, 0x00, 0x00, 0x00)); // CRC_32 (ignored, check happens at extraction).
+
+  private static final Format EMSG_FORMAT =
+      Format.createSampleFormat(null, MimeTypes.APPLICATION_EMSG, Format.OFFSET_SAMPLE_RELATIVE);
+
+  private final EventMessageEncoder eventMessageEncoder = new EventMessageEncoder();
+
+  @Test
+  public void decodeMetadata() throws Exception {
+    EventMessage emsg =
+        new EventMessage(
+            "urn:test-scheme-id",
+            /* value= */ "",
+            /* durationMs= */ 1,
+            /* id= */ 0,
+            "Test data".getBytes(UTF_8));
+
+    List<Metadata> metadata = runRenderer(EMSG_FORMAT, eventMessageEncoder.encode(emsg));
+
+    assertThat(metadata).hasSize(1);
+    assertThat(metadata.get(0).length()).isEqualTo(1);
+    assertThat(metadata.get(0).get(0)).isEqualTo(emsg);
+  }
+
+  @Test
+  public void decodeMetadata_skipsMalformed() throws Exception {
+    List<Metadata> metadata = runRenderer(EMSG_FORMAT, "not valid emsg bytes".getBytes(UTF_8));
+
+    assertThat(metadata).isEmpty();
+  }
+
+  @Test
+  public void decodeMetadata_handlesId3WrappedInEmsg() throws Exception {
+    EventMessage emsg =
+        new EventMessage(
+            EventMessage.ID3_SCHEME_ID_AOM,
+            /* value= */ "",
+            /* durationMs= */ 1,
+            /* id= */ 0,
+            encodeTxxxId3Frame("Test description", "Test value"));
+
+    List<Metadata> metadata = runRenderer(EMSG_FORMAT, eventMessageEncoder.encode(emsg));
+
+    assertThat(metadata).hasSize(1);
+    assertThat(metadata.get(0).length()).isEqualTo(1);
+    TextInformationFrame expectedId3Frame =
+        new TextInformationFrame("TXXX", "Test description", "Test value");
+    assertThat(metadata.get(0).get(0)).isEqualTo(expectedId3Frame);
+  }
+
+  @Test
+  public void decodeMetadata_handlesScte35WrappedInEmsg() throws Exception {
+
+    EventMessage emsg =
+        new EventMessage(
+            EventMessage.SCTE35_SCHEME_ID,
+            /* value= */ "",
+            /* durationMs= */ 1,
+            /* id= */ 0,
+            SCTE35_TIME_SIGNAL_BYTES);
+
+    List<Metadata> metadata = runRenderer(EMSG_FORMAT, eventMessageEncoder.encode(emsg));
+
+    assertThat(metadata).hasSize(1);
+    assertThat(metadata.get(0).length()).isEqualTo(1);
+    assertThat(metadata.get(0).get(0)).isInstanceOf(TimeSignalCommand.class);
+  }
+
+  @Test
+  public void decodeMetadata_skipsMalformedWrappedMetadata() throws Exception {
+    EventMessage emsg =
+        new EventMessage(
+            EventMessage.ID3_SCHEME_ID_AOM,
+            /* value= */ "",
+            /* durationMs= */ 1,
+            /* id= */ 0,
+            "Not a real ID3 tag".getBytes(ISO_8859_1));
+
+    List<Metadata> metadata = runRenderer(EMSG_FORMAT, eventMessageEncoder.encode(emsg));
+
+    assertThat(metadata).isEmpty();
+  }
+
+  private static List<Metadata> runRenderer(Format format, byte[] input)
+      throws ExoPlaybackException {
+    List<Metadata> metadata = new ArrayList<>();
+    MetadataRenderer renderer = new MetadataRenderer(metadata::add, /* outputLooper= */ null);
+    renderer.replaceStream(
+        new Format[] {format},
+        new FakeSampleStream(format, /* eventDispatcher= */ null, input),
+        /* offsetUs= */ 0L);
+    renderer.render(/* positionUs= */ 0, /* elapsedRealtimeUs= */ 0); // Read the format
+    renderer.render(/* positionUs= */ 0, /* elapsedRealtimeUs= */ 0); // Read the data
+
+    return Collections.unmodifiableList(metadata);
+  }
+
+  /**
+   * Builds an ID3v2 tag containing a single 'user defined text information frame' (id='TXXX') with
+   * {@code description} and {@code value}.
+   *
+   * <ul>
+   *   <li><a href="http://id3.org/id3v2.4.0-structure">ID3v2 overall structure</a>
+   *   <li><a href="http://id3.org/id3v2.4.0-frames">'user defined text information frame' spec</a>
+   *       (item 4.2.6)
+   * </ul>
+   */
+  private static byte[] encodeTxxxId3Frame(String description, String value) {
+    byte[] id3FrameData =
+        TestUtil.joinByteArrays(
+            "TXXX".getBytes(ISO_8859_1), // ID for a 'user defined text information frame'
+            TestUtil.createByteArray(0, 0, 0, 0), // Frame size (set later)
+            TestUtil.createByteArray(0, 0), // Frame flags
+            TestUtil.createByteArray(0), // Character encoding = ISO-8859-1
+            description.getBytes(ISO_8859_1),
+            TestUtil.createByteArray(0), // String null terminator
+            value.getBytes(ISO_8859_1),
+            TestUtil.createByteArray(0)); // String null terminator
+    int frameSizeIndex = 7;
+    int frameSize = id3FrameData.length - 10;
+    Assertions.checkArgument(
+        frameSize < 128, "frameSize must fit in 7 bits to avoid synch-safe encoding: " + frameSize);
+    id3FrameData[frameSizeIndex] = (byte) frameSize;
+
+    byte[] id3Bytes =
+        TestUtil.joinByteArrays(
+            "ID3".getBytes(ISO_8859_1), // identifier
+            TestUtil.createByteArray(0x04, 0x00), // version
+            TestUtil.createByteArray(0), // Tag flags
+            TestUtil.createByteArray(0, 0, 0, 0), // Tag size (set later)
+            id3FrameData);
+    int tagSizeIndex = 9;
+    int tagSize = id3Bytes.length - 10;
+    Assertions.checkArgument(
+        tagSize < 128, "tagSize must fit in 7 bits to avoid synch-safe encoding: " + tagSize);
+    id3Bytes[tagSizeIndex] = (byte) tagSize;
+    return id3Bytes;
+  }
+}
diff --git a/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoderTest.java b/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoderTest.java
index d870afac3a..88a61d0bce 100644
--- a/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoderTest.java
+++ b/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageDecoderTest.java
@@ -15,6 +15,8 @@
  */
 package com.google.android.exoplayer2.metadata.emsg;
 
+import static com.google.android.exoplayer2.testutil.TestUtil.createByteArray;
+import static com.google.android.exoplayer2.testutil.TestUtil.joinByteArrays;
 import static com.google.common.truth.Truth.assertThat;
 
 import androidx.test.ext.junit.runners.AndroidJUnit4;
@@ -30,18 +32,19 @@
 
   @Test
   public void testDecodeEventMessage() {
-    byte[] rawEmsgBody = new byte[] {
-        117, 114, 110, 58, 116, 101, 115, 116, 0, // scheme_id_uri = "urn:test"
-        49, 50, 51, 0, // value = "123"
-        0, 0, -69, -128, // timescale = 48000
-        0, 0, -69, -128, // presentation_time_delta = 48000
-        0, 2, 50, -128, // event_duration = 144000
-        0, 15, 67, -45, // id = 1000403
-        0, 1, 2, 3, 4}; // message_data = {0, 1, 2, 3, 4}
+    byte[] rawEmsgBody =
+        joinByteArrays(
+            createByteArray(117, 114, 110, 58, 116, 101, 115, 116, 0), // scheme_id_uri = "urn:test"
+            createByteArray(49, 50, 51, 0), // value = "123"
+            createByteArray(0, 0, 11, 184), // event_duration_ms = 3000
+            createByteArray(0, 15, 67, 211), // id = 1000403
+            createByteArray(0, 1, 2, 3, 4)); // message_data = {0, 1, 2, 3, 4}
     EventMessageDecoder decoder = new EventMessageDecoder();
     MetadataInputBuffer buffer = new MetadataInputBuffer();
     buffer.data = ByteBuffer.allocate(rawEmsgBody.length).put(rawEmsgBody);
+
     Metadata metadata = decoder.decode(buffer);
+
     assertThat(metadata.length()).isEqualTo(1);
     EventMessage eventMessage = (EventMessage) metadata.get(0);
     assertThat(eventMessage.schemeIdUri).isEqualTo("urn:test");
diff --git a/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoderTest.java b/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoderTest.java
index ca8303d3e2..56830035cc 100644
--- a/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoderTest.java
+++ b/library/core/src/test/java/com/google/android/exoplayer2/metadata/emsg/EventMessageEncoderTest.java
@@ -15,6 +15,8 @@
  */
 package com.google.android.exoplayer2.metadata.emsg;
 
+import static com.google.android.exoplayer2.testutil.TestUtil.createByteArray;
+import static com.google.android.exoplayer2.testutil.TestUtil.joinByteArrays;
 import static com.google.common.truth.Truth.assertThat;
 
 import androidx.test.ext.junit.runners.AndroidJUnit4;
@@ -29,67 +31,52 @@
 @RunWith(AndroidJUnit4.class)
 public final class EventMessageEncoderTest {
 
+  private static final EventMessage DECODED_MESSAGE =
+      new EventMessage("urn:test", "123", 3000, 1000403, new byte[] {0, 1, 2, 3, 4});
+
+  private static final byte[] ENCODED_MESSAGE =
+      joinByteArrays(
+          createByteArray(117, 114, 110, 58, 116, 101, 115, 116, 0), // scheme_id_uri = "urn:test"
+          createByteArray(49, 50, 51, 0), // value = "123"
+          createByteArray(0, 0, 11, 184), // event_duration_ms = 3000
+          createByteArray(0, 15, 67, 211), // id = 1000403
+          createByteArray(0, 1, 2, 3, 4)); // message_data = {0, 1, 2, 3, 4}
+
   @Test
   public void testEncodeEventStream() throws IOException {
-    EventMessage eventMessage =
-        new EventMessage("urn:test", "123", 3000, 1000403, new byte[] {0, 1, 2, 3, 4});
-    byte[] expectedEmsgBody =
-        new byte[] {
-          117, 114, 110, 58, 116, 101, 115, 116, 0, // scheme_id_uri = "urn:test"
-          49, 50, 51, 0, // value = "123"
-          0, 0, 3, -24, // timescale = 1000
-          0, 0, 0, 0, // presentation_time_delta = 0
-          0, 0, 11, -72, // event_duration = 3000
-          0, 15, 67, -45, // id = 1000403
-          0, 1, 2, 3, 4
-        }; // message_data = {0, 1, 2, 3, 4}
-    byte[] encodedByteArray = new EventMessageEncoder().encode(eventMessage);
-    assertThat(encodedByteArray).isEqualTo(expectedEmsgBody);
+    byte[] foo = new byte[] {1, 2, 3};
+
+    byte[] encodedByteArray = new EventMessageEncoder().encode(DECODED_MESSAGE);
+    assertThat(encodedByteArray).isEqualTo(ENCODED_MESSAGE);
   }
 
   @Test
   public void testEncodeDecodeEventStream() throws IOException {
-    EventMessage expectedEmsg =
-        new EventMessage("urn:test", "123", 3000, 1000403, new byte[] {0, 1, 2, 3, 4});
-    byte[] encodedByteArray = new EventMessageEncoder().encode(expectedEmsg);
+    byte[] encodedByteArray = new EventMessageEncoder().encode(DECODED_MESSAGE);
     MetadataInputBuffer buffer = new MetadataInputBuffer();
     buffer.data = ByteBuffer.allocate(encodedByteArray.length).put(encodedByteArray);
 
     EventMessageDecoder decoder = new EventMessageDecoder();
     Metadata metadata = decoder.decode(buffer);
     assertThat(metadata.length()).isEqualTo(1);
-    assertThat(metadata.get(0)).isEqualTo(expectedEmsg);
+    assertThat(metadata.get(0)).isEqualTo(DECODED_MESSAGE);
   }
 
   @Test
   public void testEncodeEventStreamMultipleTimesWorkingCorrectly() throws IOException {
-    EventMessage eventMessage =
-        new EventMessage("urn:test", "123", 3000, 1000403, new byte[] {0, 1, 2, 3, 4});
-    byte[] expectedEmsgBody =
-        new byte[] {
-          117, 114, 110, 58, 116, 101, 115, 116, 0, // scheme_id_uri = "urn:test"
-          49, 50, 51, 0, // value = "123"
-          0, 0, 3, -24, // timescale = 1000
-          0, 0, 0, 0, // presentation_time_delta = 0
-          0, 0, 11, -72, // event_duration = 3000
-          0, 15, 67, -45, // id = 1000403
-          0, 1, 2, 3, 4
-        }; // message_data = {0, 1, 2, 3, 4}
     EventMessage eventMessage1 =
         new EventMessage("urn:test", "123", 3000, 1000402, new byte[] {4, 3, 2, 1, 0});
     byte[] expectedEmsgBody1 =
-        new byte[] {
-          117, 114, 110, 58, 116, 101, 115, 116, 0, // scheme_id_uri = "urn:test"
-          49, 50, 51, 0, // value = "123"
-          0, 0, 3, -24, // timescale = 1000
-          0, 0, 0, 0, // presentation_time_delta = 0
-          0, 0, 11, -72, // event_duration = 3000
-          0, 15, 67, -46, // id = 1000402
-          4, 3, 2, 1, 0
-        }; // message_data = {4, 3, 2, 1, 0}
+        joinByteArrays(
+            createByteArray(117, 114, 110, 58, 116, 101, 115, 116, 0), // scheme_id_uri = "urn:test"
+            createByteArray(49, 50, 51, 0), // value = "123"
+            createByteArray(0, 0, 11, 184), // event_duration_ms = 3000
+            createByteArray(0, 15, 67, 210), // id = 1000402
+            createByteArray(4, 3, 2, 1, 0)); // message_data = {4, 3, 2, 1, 0}
+
     EventMessageEncoder eventMessageEncoder = new EventMessageEncoder();
-    byte[] encodedByteArray = eventMessageEncoder.encode(eventMessage);
-    assertThat(encodedByteArray).isEqualTo(expectedEmsgBody);
+    byte[] encodedByteArray = eventMessageEncoder.encode(DECODED_MESSAGE);
+    assertThat(encodedByteArray).isEqualTo(ENCODED_MESSAGE);
     byte[] encodedByteArray1 = eventMessageEncoder.encode(eventMessage1);
     assertThat(encodedByteArray1).isEqualTo(expectedEmsgBody1);
   }
diff --git a/library/core/src/test/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelectorTest.java b/library/core/src/test/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelectorTest.java
index 224b2965ba..3fad88dd9f 100644
--- a/library/core/src/test/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelectorTest.java
+++ b/library/core/src/test/java/com/google/android/exoplayer2/trackselection/DefaultTrackSelectorTest.java
@@ -143,8 +143,10 @@ public void testParametersParcelable() {
             /* exceedAudioConstraintsIfNecessary= */ false,
             /* allowAudioMixedMimeTypeAdaptiveness= */ true,
             /* allowAudioMixedSampleRateAdaptiveness= */ false,
+            /* allowAudioMixedChannelCountAdaptiveness= */ true,
             // Text
             /* preferredTextLanguage= */ "de",
+            /* preferredTextRoleFlags= */ C.ROLE_FLAG_CAPTION,
             /* selectUndeterminedTextLanguage= */ true,
             /* disabledTextTrackSelectionFlags= */ 8,
             // General
@@ -718,37 +720,38 @@ public void testSelectTracksWithinCapabilitiesSelectHigherSampleRate()
   }
 
   /**
-   * Tests that track selector will select audio tracks with higher bit-rate when other factors are
-   * the same, and tracks are within renderer's capabilities.
+   * Tests that track selector will select audio tracks with higher bit rate when other factors are
+   * the same, and tracks are within renderer's capabilities, and have the same language.
    */
   @Test
-  public void testSelectTracksWithinCapabilitiesSelectHigherBitrate() throws Exception {
+  public void selectAudioTracks_withinCapabilities_andSameLanguage_selectsHigherBitrate()
+      throws Exception {
     Format lowerBitrateFormat =
         Format.createAudioSampleFormat(
             "audioFormat",
             MimeTypes.AUDIO_AAC,
-            null,
-            15000,
-            Format.NO_VALUE,
-            2,
-            44100,
-            null,
-            null,
-            0,
-            null);
+            /* codecs= */ null,
+            /* bitrate= */ 15000,
+            /* maxInputSize= */ Format.NO_VALUE,
+            /* channelCount= */ 2,
+            /* sampleRate= */ 44100,
+            /* initializationData= */ null,
+            /* drmInitData= */ null,
+            /* selectionFlags= */ 0,
+            /* language= */ "hi");
     Format higherBitrateFormat =
         Format.createAudioSampleFormat(
             "audioFormat",
             MimeTypes.AUDIO_AAC,
-            null,
-            30000,
-            Format.NO_VALUE,
-            2,
-            44100,
-            null,
-            null,
-            0,
-            null);
+            /* codecs= */ null,
+            /* bitrate= */ 30000,
+            /* maxInputSize= */ Format.NO_VALUE,
+            /* channelCount= */ 2,
+            /* sampleRate= */ 44100,
+            /* initializationData= */ null,
+            /* drmInitData= */ null,
+            /* selectionFlags= */ 0,
+            /* language= */ "hi");
     TrackGroupArray trackGroups = wrapFormats(lowerBitrateFormat, higherBitrateFormat);
 
     TrackSelectorResult result =
@@ -760,14 +763,58 @@ public void testSelectTracksWithinCapabilitiesSelectHigherBitrate() throws Excep
     assertFixedSelection(result.selections.get(0), trackGroups, higherBitrateFormat);
   }
 
+  /**
+   * Tests that track selector will select the first audio track even if other tracks with a
+   * different language have higher bit rates, all other factors are the same, and tracks are within
+   * renderer's capabilities.
+   */
+  @Test
+  public void selectAudioTracks_withinCapabilities_andDifferentLanguage_selectsFirstTrack()
+      throws Exception {
+    Format firstLanguageFormat =
+        Format.createAudioSampleFormat(
+            "audioFormat",
+            MimeTypes.AUDIO_AAC,
+            /* codecs= */ null,
+            /* bitrate= */ 15000,
+            /* maxInputSize= */ Format.NO_VALUE,
+            /* channelCount= */ 2,
+            /* sampleRate= */ 44100,
+            /* initializationData= */ null,
+            /* drmInitData= */ null,
+            /* selectionFlags= */ 0,
+            /* language= */ "hi");
+    Format higherBitrateFormat =
+        Format.createAudioSampleFormat(
+            "audioFormat",
+            MimeTypes.AUDIO_AAC,
+            /* codecs= */ null,
+            /* bitrate= */ 30000,
+            /* maxInputSize= */ Format.NO_VALUE,
+            /* channelCount= */ 2,
+            /* sampleRate= */ 44100,
+            /* initializationData= */ null,
+            /* drmInitData= */ null,
+            /* selectionFlags= */ 0,
+            /* language= */ "te");
+    TrackGroupArray trackGroups = wrapFormats(firstLanguageFormat, higherBitrateFormat);
+
+    TrackSelectorResult result =
+        trackSelector.selectTracks(
+            new RendererCapabilities[] {ALL_AUDIO_FORMAT_SUPPORTED_RENDERER_CAPABILITIES},
+            trackGroups,
+            periodId,
+            TIMELINE);
+    assertFixedSelection(result.selections.get(0), trackGroups, firstLanguageFormat);
+  }
+
   /**
    * Tests that track selector will prefer audio tracks with higher channel count over tracks with
    * higher sample rate when other factors are the same, and tracks are within renderer's
    * capabilities.
    */
   @Test
-  public void testSelectTracksPreferHigherNumChannelBeforeSampleRate()
-      throws Exception {
+  public void testSelectTracksPreferHigherNumChannelBeforeSampleRate() throws Exception {
     Format higherChannelLowerSampleRateFormat =
         Format.createAudioSampleFormat(
             "audioFormat",
@@ -1002,12 +1049,12 @@ public void testTextTrackSelectionFlags() throws ExoPlaybackException {
     result = trackSelector.selectTracks(textRendererCapabilities, trackGroups, periodId, TIMELINE);
     assertNoSelection(result.selections.get(0));
 
-    // There is a preferred language, so the first language-matching track flagged as default should
-    // be selected.
+    // There is a preferred language, so a language-matching track flagged as default should
+    // be selected, and the one without forced flag should be preferred.
     trackSelector.setParameters(
         Parameters.DEFAULT.buildUpon().setPreferredTextLanguage("eng").build());
     result = trackSelector.selectTracks(textRendererCapabilities, trackGroups, periodId, TIMELINE);
-    assertFixedSelection(result.selections.get(0), trackGroups, forcedDefault);
+    assertFixedSelection(result.selections.get(0), trackGroups, defaultOnly);
 
     // Same as above, but the default flag is disabled. If multiple tracks match the preferred
     // language, those not flagged as forced are preferred, as they likely include the contents of
diff --git a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/DashMediaSource.java b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/DashMediaSource.java
index cdc32553f3..b83a4af4f5 100644
--- a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/DashMediaSource.java
+++ b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/DashMediaSource.java
@@ -1037,6 +1037,9 @@ private void scheduleManifestRefresh(long delayUntilNextLoadMs) {
 
   private void startLoadingManifest() {
     handler.removeCallbacks(refreshManifestRunnable);
+    if (loader.hasFatalError()) {
+      return;
+    }
     if (loader.isLoading()) {
       manifestLoadPending = true;
       return;
diff --git a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/PlayerEmsgHandler.java b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/PlayerEmsgHandler.java
index 34e1ecc2b6..d11ccdecec 100644
--- a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/PlayerEmsgHandler.java
+++ b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/PlayerEmsgHandler.java
@@ -360,6 +360,9 @@ private void parseAndDiscardSamples() {
         }
         long eventTimeUs = inputBuffer.timeUs;
         Metadata metadata = decoder.decode(inputBuffer);
+        if (metadata == null) {
+          continue;
+        }
         EventMessage eventMessage = (EventMessage) metadata.get(0);
         if (isPlayerEmsgEvent(eventMessage.schemeIdUri, eventMessage.value)) {
           parsePlayerEmsgEvent(eventTimeUs, eventMessage);
diff --git a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java
index f03a443431..0931396509 100644
--- a/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java
+++ b/library/dash/src/main/java/com/google/android/exoplayer2/source/dash/manifest/DashManifestParser.java
@@ -600,6 +600,7 @@ protected Format buildFormat(
             containerMimeType,
             sampleMimeType,
             codecs,
+            /* metadata= */ null,
             bitrate,
             width,
             height,
@@ -614,6 +615,7 @@ protected Format buildFormat(
             containerMimeType,
             sampleMimeType,
             codecs,
+            /* metadata= */ null,
             bitrate,
             audioChannels,
             audioSamplingRate,
@@ -906,7 +908,7 @@ protected EventStream buildEventStream(String schemeIdUri, String value, long ti
     long id = parseLong(xpp, "id", 0);
     long duration = parseLong(xpp, "duration", C.TIME_UNSET);
     long presentationTime = parseLong(xpp, "presentationTime", 0);
-    long durationMs = Util.scaleLargeTimestamp(duration, 1000, timescale);
+    long durationMs = Util.scaleLargeTimestamp(duration, C.MILLIS_PER_SECOND, timescale);
     long presentationTimesUs = Util.scaleLargeTimestamp(presentationTime, C.MICROS_PER_SECOND,
         timescale);
     String messageData = parseString(xpp, "messageData", null);
diff --git a/library/dash/src/test/java/com/google/android/exoplayer2/source/dash/DashUtilTest.java b/library/dash/src/test/java/com/google/android/exoplayer2/source/dash/DashUtilTest.java
index a53b1ff80d..6e769b72e1 100644
--- a/library/dash/src/test/java/com/google/android/exoplayer2/source/dash/DashUtilTest.java
+++ b/library/dash/src/test/java/com/google/android/exoplayer2/source/dash/DashUtilTest.java
@@ -80,6 +80,7 @@ private static Representation newRepresentations(DrmInitData drmInitData) {
             MimeTypes.VIDEO_MP4,
             MimeTypes.VIDEO_H264,
             /* codecs= */ "",
+            /* metadata= */ null,
             Format.NO_VALUE,
             /* width= */ 1024,
             /* height= */ 768,
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java
index 01da98be68..26c1a2219b 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaChunk.java
@@ -392,6 +392,10 @@ private DefaultExtractorInput prepareExtraction(DataSource dataSource, DataSpec
             id3Timestamp != C.TIME_UNSET
                 ? timestampAdjuster.adjustTsTimestamp(id3Timestamp)
                 : startTimeUs);
+      } else {
+        // In case the container format changes mid-stream to non-packed-audio, we need to reset
+        // the timestamp offset.
+        output.setSampleOffsetUs(/* sampleOffsetUs= */ 0L);
       }
       output.init(uid, shouldSpliceIn, /* reusingExtractor= */ false);
       extractor.init(output);
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriod.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriod.java
index 2cfd14c79d..6381fff8dd 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriod.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriod.java
@@ -23,6 +23,7 @@
 import com.google.android.exoplayer2.SeekParameters;
 import com.google.android.exoplayer2.drm.DrmInitData;
 import com.google.android.exoplayer2.extractor.Extractor;
+import com.google.android.exoplayer2.metadata.Metadata;
 import com.google.android.exoplayer2.offline.StreamKey;
 import com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory;
 import com.google.android.exoplayer2.source.MediaPeriod;
@@ -773,6 +774,7 @@ private static Format deriveVideoFormat(Format variantFormat) {
         variantFormat.containerMimeType,
         sampleMimeType,
         codecs,
+        variantFormat.metadata,
         variantFormat.bitrate,
         variantFormat.width,
         variantFormat.height,
@@ -785,6 +787,7 @@ private static Format deriveVideoFormat(Format variantFormat) {
   private static Format deriveAudioFormat(
       Format variantFormat, Format mediaTagFormat, boolean isPrimaryTrackInVariant) {
     String codecs;
+    Metadata metadata;
     int channelCount = Format.NO_VALUE;
     int selectionFlags = 0;
     int roleFlags = 0;
@@ -792,6 +795,7 @@ private static Format deriveAudioFormat(
     String label = null;
     if (mediaTagFormat != null) {
       codecs = mediaTagFormat.codecs;
+      metadata = mediaTagFormat.metadata;
       channelCount = mediaTagFormat.channelCount;
       selectionFlags = mediaTagFormat.selectionFlags;
       roleFlags = mediaTagFormat.roleFlags;
@@ -799,6 +803,7 @@ private static Format deriveAudioFormat(
       label = mediaTagFormat.label;
     } else {
       codecs = Util.getCodecsOfType(variantFormat.codecs, C.TRACK_TYPE_AUDIO);
+      metadata = variantFormat.metadata;
       if (isPrimaryTrackInVariant) {
         channelCount = variantFormat.channelCount;
         selectionFlags = variantFormat.selectionFlags;
@@ -815,6 +820,7 @@ private static Format deriveAudioFormat(
         variantFormat.containerMimeType,
         sampleMimeType,
         codecs,
+        metadata,
         bitrate,
         channelCount,
         /* sampleRate= */ Format.NO_VALUE,
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsSampleStreamWrapper.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsSampleStreamWrapper.java
index f7bc913527..7c7f0ed823 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsSampleStreamWrapper.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/HlsSampleStreamWrapper.java
@@ -425,6 +425,7 @@ public boolean seekToUs(long positionUs, boolean forceReset) {
     if (loader.isLoading()) {
       loader.cancelLoading();
     } else {
+      loader.clearFatalError();
       resetSampleQueues();
     }
     return true;
@@ -572,7 +573,7 @@ public long getNextLoadPositionUs() {
 
   @Override
   public boolean continueLoading(long positionUs) {
-    if (loadingFinished || loader.isLoading()) {
+    if (loadingFinished || loader.isLoading() || loader.hasFatalError()) {
       return false;
     }
 
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/DefaultHlsPlaylistTracker.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/DefaultHlsPlaylistTracker.java
index 0064338ca8..4774264d61 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/DefaultHlsPlaylistTracker.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/DefaultHlsPlaylistTracker.java
@@ -488,8 +488,8 @@ public void release() {
 
     public void loadPlaylist() {
       blacklistUntilMs = 0;
-      if (loadPending || mediaPlaylistLoader.isLoading()) {
-        // Load already pending or in progress. Do nothing.
+      if (loadPending || mediaPlaylistLoader.isLoading() || mediaPlaylistLoader.hasFatalError()) {
+        // Load already pending, in progress, or a fatal error has been encountered. Do nothing.
         return;
       }
       long currentTimeMs = SystemClock.elapsedRealtime();
diff --git a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
index 42b27f259f..030520f8cb 100644
--- a/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
+++ b/library/hls/src/main/java/com/google/android/exoplayer2/source/hls/playlist/HlsPlaylistParser.java
@@ -349,6 +349,7 @@ private static HlsMasterPlaylist parseMasterPlaylist(LineIterator iterator, Stri
                 /* containerMimeType= */ MimeTypes.APPLICATION_M3U8,
                 /* sampleMimeType= */ null,
                 codecs,
+                /* metadata= */ null,
                 bitrate,
                 width,
                 height,
@@ -422,6 +423,7 @@ private static HlsMasterPlaylist parseMasterPlaylist(LineIterator iterator, Stri
                       /* containerMimeType= */ MimeTypes.APPLICATION_M3U8,
                       sampleMimeType,
                       codecs,
+                      /* metadata= */ null,
                       /* bitrate= */ Format.NO_VALUE,
                       width,
                       height,
@@ -451,6 +453,7 @@ private static HlsMasterPlaylist parseMasterPlaylist(LineIterator iterator, Stri
                   /* containerMimeType= */ MimeTypes.APPLICATION_M3U8,
                   sampleMimeType,
                   codecs,
+                  /* metadata= */ null,
                   /* bitrate= */ Format.NO_VALUE,
                   channelCount,
                   /* sampleRate= */ Format.NO_VALUE,
diff --git a/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriodTest.java b/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriodTest.java
index 5988391213..1789b8a4df 100644
--- a/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriodTest.java
+++ b/library/hls/src/test/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriodTest.java
@@ -127,6 +127,7 @@ private static Variant createMuxedVideoAudioVariant(int bitrate) {
             /* containerMimeType= */ MimeTypes.APPLICATION_M3U8,
             /* sampleMimeType= */ null,
             /* codecs= */ "avc1.100.41,mp4a.40.2",
+            /* metadata= */ null,
             bitrate,
             /* width= */ Format.NO_VALUE,
             /* height= */ Format.NO_VALUE,
@@ -144,6 +145,7 @@ private static Variant createAudioOnlyVariant(int bitrate) {
             /* containerMimeType= */ MimeTypes.APPLICATION_M3U8,
             /* sampleMimeType= */ null,
             /* codecs= */ "mp4a.40.2",
+            /* metadata= */ null,
             bitrate,
             /* width= */ Format.NO_VALUE,
             /* height= */ Format.NO_VALUE,
@@ -176,6 +178,7 @@ private static Format createAudioFormat(String language) {
         /* containerMimeType= */ MimeTypes.APPLICATION_M3U8,
         MimeTypes.getMediaMimeType("mp4a.40.2"),
         /* codecs= */ "mp4a.40.2",
+        /* metadata= */ null,
         /* bitrate= */ Format.NO_VALUE,
         /* channelCount= */ Format.NO_VALUE,
         /* sampleRate= */ Format.NO_VALUE,
diff --git a/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/SsMediaSource.java b/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/SsMediaSource.java
index 09820f092d..3f19b1b1bc 100644
--- a/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/SsMediaSource.java
+++ b/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/SsMediaSource.java
@@ -723,6 +723,9 @@ private void scheduleManifestRefresh() {
   }
 
   private void startLoadingManifest() {
+    if (manifestLoader.hasFatalError()) {
+      return;
+    }
     ParsingLoadable<SsManifest> loadable = new ParsingLoadable<>(manifestDataSource,
         manifestUri, C.DATA_TYPE_MANIFEST, manifestParser);
     long elapsedRealtimeMs =
diff --git a/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java b/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java
index 39e22f2982..9d7ee56fc6 100644
--- a/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java
+++ b/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser.java
@@ -678,6 +678,7 @@ public void parseStartTag(XmlPullParser parser) throws ParserException {
                 MimeTypes.VIDEO_MP4,
                 sampleMimeType,
                 /* codecs= */ null,
+                /* metadata= */ null,
                 bitrate,
                 width,
                 height,
@@ -703,6 +704,7 @@ public void parseStartTag(XmlPullParser parser) throws ParserException {
                 MimeTypes.AUDIO_MP4,
                 sampleMimeType,
                 /* codecs= */ null,
+                /* metadata= */ null,
                 bitrate,
                 channels,
                 samplingRate,
diff --git a/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerControlView.java b/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerControlView.java
index 73bb98a1a0..358dd14576 100644
--- a/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerControlView.java
+++ b/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerControlView.java
@@ -238,7 +238,7 @@
   private final View fastForwardButton;
   private final View rewindButton;
   private final ImageView repeatToggleButton;
-  private final View shuffleButton;
+  private final ImageView shuffleButton;
   private final View vrButton;
   private final TextView durationView;
   private final TextView positionView;
@@ -256,6 +256,12 @@
   private final String repeatOffButtonContentDescription;
   private final String repeatOneButtonContentDescription;
   private final String repeatAllButtonContentDescription;
+  private final Drawable shuffleOnButtonDrawable;
+  private final Drawable shuffleOffButtonDrawable;
+  private final float buttonAlphaEnabled;
+  private final float buttonAlphaDisabled;
+  private final String shuffleOnContentDescription;
+  private final String shuffleOffContentDescription;
 
   @Nullable private Player player;
   private com.google.android.exoplayer2.ControlDispatcher controlDispatcher;
@@ -403,16 +409,28 @@ public PlayerControlView(
     }
     vrButton = findViewById(R.id.exo_vr);
     setShowVrButton(false);
+
     Resources resources = context.getResources();
+
+    buttonAlphaEnabled =
+        (float) resources.getInteger(R.integer.exo_media_button_opacity_percentage_enabled) / 100;
+    buttonAlphaDisabled =
+        (float) resources.getInteger(R.integer.exo_media_button_opacity_percentage_disabled) / 100;
+
     repeatOffButtonDrawable = resources.getDrawable(R.drawable.exo_controls_repeat_off);
     repeatOneButtonDrawable = resources.getDrawable(R.drawable.exo_controls_repeat_one);
     repeatAllButtonDrawable = resources.getDrawable(R.drawable.exo_controls_repeat_all);
+    shuffleOnButtonDrawable = resources.getDrawable(R.drawable.exo_controls_shuffle_on);
+    shuffleOffButtonDrawable = resources.getDrawable(R.drawable.exo_controls_shuffle_off);
     repeatOffButtonContentDescription =
         resources.getString(R.string.exo_controls_repeat_off_description);
     repeatOneButtonContentDescription =
         resources.getString(R.string.exo_controls_repeat_one_description);
     repeatAllButtonContentDescription =
         resources.getString(R.string.exo_controls_repeat_all_description);
+    shuffleOnContentDescription = resources.getString(R.string.exo_controls_shuffle_on_description);
+    shuffleOffContentDescription =
+        resources.getString(R.string.exo_controls_shuffle_off_description);
   }
 
   @SuppressWarnings("ResourceType")
@@ -785,6 +803,8 @@ private void updateRepeatModeButton() {
     }
     if (player == null) {
       setButtonEnabled(false, repeatToggleButton);
+      repeatToggleButton.setImageDrawable(repeatOffButtonDrawable);
+      repeatToggleButton.setContentDescription(repeatOffButtonContentDescription);
       return;
     }
     setButtonEnabled(true, repeatToggleButton);
@@ -815,10 +835,16 @@ private void updateShuffleButton() {
       shuffleButton.setVisibility(GONE);
     } else if (player == null) {
       setButtonEnabled(false, shuffleButton);
+      shuffleButton.setImageDrawable(shuffleOffButtonDrawable);
+      shuffleButton.setContentDescription(shuffleOffContentDescription);
     } else {
-      shuffleButton.setAlpha(player.getShuffleModeEnabled() ? 1f : 0.3f);
-      shuffleButton.setEnabled(true);
-      shuffleButton.setVisibility(VISIBLE);
+      setButtonEnabled(true, shuffleButton);
+      shuffleButton.setImageDrawable(
+          player.getShuffleModeEnabled() ? shuffleOnButtonDrawable : shuffleOffButtonDrawable);
+      shuffleButton.setContentDescription(
+          player.getShuffleModeEnabled()
+              ? shuffleOnContentDescription
+              : shuffleOffContentDescription);
     }
   }
 
@@ -952,7 +978,7 @@ private void setButtonEnabled(boolean enabled, View view) {
       return;
     }
     view.setEnabled(enabled);
-    view.setAlpha(enabled ? 1f : 0.3f);
+    view.setAlpha(enabled ? buttonAlphaEnabled : buttonAlphaDisabled);
     view.setVisibility(VISIBLE);
   }
 
diff --git a/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerNotificationManager.java b/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerNotificationManager.java
index 260fb9d398..7fa4b60314 100644
--- a/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerNotificationManager.java
+++ b/library/ui/src/main/java/com/google/android/exoplayer2/ui/PlayerNotificationManager.java
@@ -1182,10 +1182,10 @@ private void stopNotification(boolean dismissedByUser) {
     if (skipPreviousActionIndex != -1) {
       actionIndices[actionCounter++] = skipPreviousActionIndex;
     }
-    boolean playWhenReady = player.getPlayWhenReady();
-    if (pauseActionIndex != -1 && playWhenReady) {
+    boolean isPlaying = isPlaying(player);
+    if (pauseActionIndex != -1 && isPlaying) {
       actionIndices[actionCounter++] = pauseActionIndex;
-    } else if (playActionIndex != -1 && !playWhenReady) {
+    } else if (playActionIndex != -1 && !isPlaying) {
       actionIndices[actionCounter++] = playActionIndex;
     }
     if (skipNextActionIndex != -1) {
diff --git a/library/ui/src/main/res/drawable-anydpi-v21/exo_controls_shuffle_off.xml b/library/ui/src/main/res/drawable-anydpi-v21/exo_controls_shuffle_off.xml
new file mode 100644
index 0000000000..283ce30c3c
--- /dev/null
+++ b/library/ui/src/main/res/drawable-anydpi-v21/exo_controls_shuffle_off.xml
@@ -0,0 +1,26 @@
+<!-- Copyright (C) 2017 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="32dp"
+    android:height="32dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+
+    <path
+        android:fillColor="#4EFFFFFF"
+        android:pathData="M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20
+17.96 7.46 20 9.5V4h-5.5zm0.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04
+2.04-3.13-3.13z" />
+</vector>
diff --git a/library/ui/src/main/res/drawable-anydpi-v21/exo_controls_shuffle.xml b/library/ui/src/main/res/drawable-anydpi-v21/exo_controls_shuffle_on.xml
similarity index 100%
rename from library/ui/src/main/res/drawable-anydpi-v21/exo_controls_shuffle.xml
rename to library/ui/src/main/res/drawable-anydpi-v21/exo_controls_shuffle_on.xml
diff --git a/library/ui/src/main/res/drawable-hdpi/exo_controls_shuffle_off.png b/library/ui/src/main/res/drawable-hdpi/exo_controls_shuffle_off.png
new file mode 100644
index 0000000000..b693422db7
Binary files /dev/null and b/library/ui/src/main/res/drawable-hdpi/exo_controls_shuffle_off.png differ
diff --git a/library/ui/src/main/res/drawable-hdpi/exo_controls_shuffle.png b/library/ui/src/main/res/drawable-hdpi/exo_controls_shuffle_on.png
similarity index 100%
rename from library/ui/src/main/res/drawable-hdpi/exo_controls_shuffle.png
rename to library/ui/src/main/res/drawable-hdpi/exo_controls_shuffle_on.png
diff --git a/library/ui/src/main/res/drawable-ldpi/exo_controls_shuffle_off.png b/library/ui/src/main/res/drawable-ldpi/exo_controls_shuffle_off.png
new file mode 100644
index 0000000000..2353dd4289
Binary files /dev/null and b/library/ui/src/main/res/drawable-ldpi/exo_controls_shuffle_off.png differ
diff --git a/library/ui/src/main/res/drawable-ldpi/exo_controls_shuffle.png b/library/ui/src/main/res/drawable-ldpi/exo_controls_shuffle_on.png
similarity index 100%
rename from library/ui/src/main/res/drawable-ldpi/exo_controls_shuffle.png
rename to library/ui/src/main/res/drawable-ldpi/exo_controls_shuffle_on.png
diff --git a/library/ui/src/main/res/drawable-mdpi/exo_controls_shuffle_off.png b/library/ui/src/main/res/drawable-mdpi/exo_controls_shuffle_off.png
new file mode 100644
index 0000000000..a55d716cce
Binary files /dev/null and b/library/ui/src/main/res/drawable-mdpi/exo_controls_shuffle_off.png differ
diff --git a/library/ui/src/main/res/drawable-mdpi/exo_controls_shuffle.png b/library/ui/src/main/res/drawable-mdpi/exo_controls_shuffle_on.png
similarity index 100%
rename from library/ui/src/main/res/drawable-mdpi/exo_controls_shuffle.png
rename to library/ui/src/main/res/drawable-mdpi/exo_controls_shuffle_on.png
diff --git a/library/ui/src/main/res/drawable-xhdpi/exo_controls_shuffle_off.png b/library/ui/src/main/res/drawable-xhdpi/exo_controls_shuffle_off.png
new file mode 100644
index 0000000000..2b67cabf5a
Binary files /dev/null and b/library/ui/src/main/res/drawable-xhdpi/exo_controls_shuffle_off.png differ
diff --git a/library/ui/src/main/res/drawable-xhdpi/exo_controls_shuffle.png b/library/ui/src/main/res/drawable-xhdpi/exo_controls_shuffle_on.png
similarity index 100%
rename from library/ui/src/main/res/drawable-xhdpi/exo_controls_shuffle.png
rename to library/ui/src/main/res/drawable-xhdpi/exo_controls_shuffle_on.png
diff --git a/library/ui/src/main/res/drawable-xxhdpi/exo_controls_shuffle_off.png b/library/ui/src/main/res/drawable-xxhdpi/exo_controls_shuffle_off.png
new file mode 100644
index 0000000000..22209d1f88
Binary files /dev/null and b/library/ui/src/main/res/drawable-xxhdpi/exo_controls_shuffle_off.png differ
diff --git a/library/ui/src/main/res/drawable-xxhdpi/exo_controls_shuffle.png b/library/ui/src/main/res/drawable-xxhdpi/exo_controls_shuffle_on.png
similarity index 100%
rename from library/ui/src/main/res/drawable-xxhdpi/exo_controls_shuffle.png
rename to library/ui/src/main/res/drawable-xxhdpi/exo_controls_shuffle_on.png
diff --git a/library/ui/src/main/res/layout/exo_playback_control_view.xml b/library/ui/src/main/res/layout/exo_playback_control_view.xml
index 027e57ee92..acfddf1146 100644
--- a/library/ui/src/main/res/layout/exo_playback_control_view.xml
+++ b/library/ui/src/main/res/layout/exo_playback_control_view.xml
@@ -37,7 +37,7 @@
       style="@style/ExoMediaButton.Rewind"/>
 
     <ImageButton android:id="@id/exo_shuffle"
-      style="@style/ExoMediaButton.Shuffle"/>
+      style="@style/ExoMediaButton"/>
 
     <ImageButton android:id="@id/exo_repeat_toggle"
       style="@style/ExoMediaButton"/>
diff --git a/library/ui/src/main/res/values-af/strings.xml b/library/ui/src/main/res/values-af/strings.xml
index 8a983c543a..f7802e7648 100644
--- a/library/ui/src/main/res/values-af/strings.xml
+++ b/library/ui/src/main/res/values-af/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Vorige snit</string>
   <string name="exo_controls_next_description">Volgende snit</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Herhaal niks</string>
   <string name="exo_controls_repeat_one_description">Herhaal een</string>
   <string name="exo_controls_repeat_all_description">Herhaal alles</string>
-  <string name="exo_controls_shuffle_description">Skommel</string>
+  <string name="exo_controls_shuffle_on_description">Skommel is aan</string>
+  <string name="exo_controls_shuffle_off_description">Skommel is af</string>
   <string name="exo_controls_fullscreen_description">Volskermmodus</string>
   <string name="exo_controls_vr_description">VR-modus</string>
   <string name="exo_download_description">Aflaai</string>
diff --git a/library/ui/src/main/res/values-am/strings.xml b/library/ui/src/main/res/values-am/strings.xml
index f56a6c06bf..489c18acf2 100644
--- a/library/ui/src/main/res/values-am/strings.xml
+++ b/library/ui/src/main/res/values-am/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">ቀዳሚ ትራክ</string>
   <string name="exo_controls_next_description">ቀጣይ ትራክ</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">ምንም አትድገም</string>
   <string name="exo_controls_repeat_one_description">አንድ ድገም</string>
   <string name="exo_controls_repeat_all_description">ሁሉንም ድገም</string>
-  <string name="exo_controls_shuffle_description">በውዝ</string>
+  <string name="exo_controls_shuffle_on_description">መበወዝ በርቷል</string>
+  <string name="exo_controls_shuffle_off_description">መበወዝ ጠፍቷል</string>
   <string name="exo_controls_fullscreen_description">የሙሉ ማያ ሁነታ</string>
   <string name="exo_controls_vr_description">የቪአር ሁነታ</string>
   <string name="exo_download_description">አውርድ</string>
diff --git a/library/ui/src/main/res/values-ar/strings.xml b/library/ui/src/main/res/values-ar/strings.xml
index 91063e1a54..b341fc1a42 100644
--- a/library/ui/src/main/res/values-ar/strings.xml
+++ b/library/ui/src/main/res/values-ar/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">المقطع الصوتي السابق</string>
   <string name="exo_controls_next_description">المقطع الصوتي التالي</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">عدم التكرار</string>
   <string name="exo_controls_repeat_one_description">تكرار مقطع صوتي واحد</string>
   <string name="exo_controls_repeat_all_description">تكرار الكل</string>
-  <string name="exo_controls_shuffle_description">ترتيب عشوائي</string>
+  <string name="exo_controls_shuffle_on_description">تفعيل الترتيب العشوائي</string>
+  <string name="exo_controls_shuffle_off_description">إيقاف الترتيب العشوائي</string>
   <string name="exo_controls_fullscreen_description">وضع ملء الشاشة</string>
   <string name="exo_controls_vr_description">وضع VR</string>
   <string name="exo_download_description">تنزيل</string>
diff --git a/library/ui/src/main/res/values-az/strings.xml b/library/ui/src/main/res/values-az/strings.xml
index 0f5fbe3f4d..455b7a2ab5 100644
--- a/library/ui/src/main/res/values-az/strings.xml
+++ b/library/ui/src/main/res/values-az/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Əvvəlki trek</string>
   <string name="exo_controls_next_description">Növbəti trek</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Heç biri təkrarlanmasın</string>
   <string name="exo_controls_repeat_one_description">Biri təkrarlansın</string>
   <string name="exo_controls_repeat_all_description">Hamısı təkrarlansın</string>
-  <string name="exo_controls_shuffle_description">Qarışdırın</string>
+  <string name="exo_controls_shuffle_on_description">Qarışdırma aktivdir</string>
+  <string name="exo_controls_shuffle_off_description">Qarışdırma deaktivdir</string>
   <string name="exo_controls_fullscreen_description">Tam ekran rejimi</string>
   <string name="exo_controls_vr_description">VR rejimi</string>
   <string name="exo_download_description">Endirin</string>
diff --git a/library/ui/src/main/res/values-b+sr+Latn/strings.xml b/library/ui/src/main/res/values-b+sr+Latn/strings.xml
index 16300747f7..97bed6fe3e 100644
--- a/library/ui/src/main/res/values-b+sr+Latn/strings.xml
+++ b/library/ui/src/main/res/values-b+sr+Latn/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Prethodna pesma</string>
   <string name="exo_controls_next_description">Sledeća pesma</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ne ponavljaj nijednu</string>
   <string name="exo_controls_repeat_one_description">Ponovi jednu</string>
   <string name="exo_controls_repeat_all_description">Ponovi sve</string>
-  <string name="exo_controls_shuffle_description">Pusti nasumično</string>
+  <string name="exo_controls_shuffle_on_description">Nasumično puštanje je uključeno</string>
+  <string name="exo_controls_shuffle_off_description">Nasumično puštanje je isključeno</string>
   <string name="exo_controls_fullscreen_description">Režim celog ekrana</string>
   <string name="exo_controls_vr_description">VR režim</string>
   <string name="exo_download_description">Preuzmi</string>
diff --git a/library/ui/src/main/res/values-be/strings.xml b/library/ui/src/main/res/values-be/strings.xml
index 6a33be2a8f..ffa9c3d0a6 100644
--- a/library/ui/src/main/res/values-be/strings.xml
+++ b/library/ui/src/main/res/values-be/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Папярэдні трэк</string>
   <string name="exo_controls_next_description">Наступны трэк</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Не паўтараць нічога</string>
   <string name="exo_controls_repeat_one_description">Паўтарыць адзін элемент</string>
   <string name="exo_controls_repeat_all_description">Паўтарыць усе</string>
-  <string name="exo_controls_shuffle_description">Перамяшаць</string>
+  <string name="exo_controls_shuffle_on_description">Перамешванне ўключана</string>
+  <string name="exo_controls_shuffle_off_description">Перамешванне выключана</string>
   <string name="exo_controls_fullscreen_description">Поўнаэкранны рэжым</string>
   <string name="exo_controls_vr_description">VR-рэжым</string>
   <string name="exo_download_description">Спампаваць</string>
diff --git a/library/ui/src/main/res/values-bg/strings.xml b/library/ui/src/main/res/values-bg/strings.xml
index 511a5e4f19..34e63090a9 100644
--- a/library/ui/src/main/res/values-bg/strings.xml
+++ b/library/ui/src/main/res/values-bg/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Предишен запис</string>
   <string name="exo_controls_next_description">Следващ запис</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Без повтаряне</string>
   <string name="exo_controls_repeat_one_description">Повтаряне на един елемент</string>
   <string name="exo_controls_repeat_all_description">Повтаряне на всички</string>
-  <string name="exo_controls_shuffle_description">Разбъркване</string>
+  <string name="exo_controls_shuffle_on_description">Разбъркването е включено</string>
+  <string name="exo_controls_shuffle_off_description">Разбъркването е изключено</string>
   <string name="exo_controls_fullscreen_description">Режим на цял екран</string>
   <string name="exo_controls_vr_description">режим за VR</string>
   <string name="exo_download_description">Изтегляне</string>
diff --git a/library/ui/src/main/res/values-bn/strings.xml b/library/ui/src/main/res/values-bn/strings.xml
index cca445feca..3ec7cae916 100644
--- a/library/ui/src/main/res/values-bn/strings.xml
+++ b/library/ui/src/main/res/values-bn/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">আগের ট্র্যাক</string>
   <string name="exo_controls_next_description">পরবর্তী ট্র্যাক</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">কোনও আইটেম আবার চালাবেন না</string>
   <string name="exo_controls_repeat_one_description">একটি আইটেম আবার চালান</string>
   <string name="exo_controls_repeat_all_description">সবগুলি আইটেম আবার চালান</string>
-  <string name="exo_controls_shuffle_description">শাফেল করুন</string>
+  <string name="exo_controls_shuffle_on_description">শাফেল মোড চালু করা হয়েছে</string>
+  <string name="exo_controls_shuffle_off_description">শাফেল মোড বন্ধ করা হয়েছে</string>
   <string name="exo_controls_fullscreen_description">পূর্ণ স্ক্রিন মোড</string>
   <string name="exo_controls_vr_description">ভিআর মোড</string>
   <string name="exo_download_description">ডাউনলোড করুন</string>
diff --git a/library/ui/src/main/res/values-bs/strings.xml b/library/ui/src/main/res/values-bs/strings.xml
index 24fb7b2b3b..431c93eed0 100644
--- a/library/ui/src/main/res/values-bs/strings.xml
+++ b/library/ui/src/main/res/values-bs/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Prethodna numera</string>
   <string name="exo_controls_next_description">Sljedeća numera</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ne ponavljaj</string>
   <string name="exo_controls_repeat_one_description">Ponovi jedno</string>
   <string name="exo_controls_repeat_all_description">Ponovi sve</string>
-  <string name="exo_controls_shuffle_description">Izmiješaj</string>
+  <string name="exo_controls_shuffle_on_description">Uključi nasumično</string>
+  <string name="exo_controls_shuffle_off_description">Isključi nasumično</string>
   <string name="exo_controls_fullscreen_description">Način rada preko cijelog ekrana</string>
   <string name="exo_controls_vr_description">VR način rada</string>
   <string name="exo_download_description">Preuzmi</string>
diff --git a/library/ui/src/main/res/values-ca/strings.xml b/library/ui/src/main/res/values-ca/strings.xml
index 3b48eab3b8..411b45356f 100644
--- a/library/ui/src/main/res/values-ca/strings.xml
+++ b/library/ui/src/main/res/values-ca/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Pista anterior</string>
   <string name="exo_controls_next_description">Pista següent</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">No en repeteixis cap</string>
   <string name="exo_controls_repeat_one_description">Repeteix una</string>
   <string name="exo_controls_repeat_all_description">Repeteix tot</string>
-  <string name="exo_controls_shuffle_description">Reprodueix aleatòriament</string>
+  <string name="exo_controls_shuffle_on_description">Activa reproducció aleatòria</string>
+  <string name="exo_controls_shuffle_off_description">Desactiva reproducció aleatòria</string>
   <string name="exo_controls_fullscreen_description">Mode de pantalla completa</string>
   <string name="exo_controls_vr_description">Mode RV</string>
   <string name="exo_download_description">Baixa</string>
diff --git a/library/ui/src/main/res/values-cs/strings.xml b/library/ui/src/main/res/values-cs/strings.xml
index 1568074f9f..0ed613834d 100644
--- a/library/ui/src/main/res/values-cs/strings.xml
+++ b/library/ui/src/main/res/values-cs/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Předchozí skladba</string>
   <string name="exo_controls_next_description">Další skladba</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Neopakovat</string>
   <string name="exo_controls_repeat_one_description">Opakovat jednu</string>
   <string name="exo_controls_repeat_all_description">Opakovat vše</string>
-  <string name="exo_controls_shuffle_description">Náhodně</string>
+  <string name="exo_controls_shuffle_on_description">Náhodné přehrávání zapnuto</string>
+  <string name="exo_controls_shuffle_off_description">Náhodné přehrávání vypnuto</string>
   <string name="exo_controls_fullscreen_description">Režim celé obrazovky</string>
   <string name="exo_controls_vr_description">Režim VR</string>
   <string name="exo_download_description">Stáhnout</string>
diff --git a/library/ui/src/main/res/values-da/strings.xml b/library/ui/src/main/res/values-da/strings.xml
index 19b0f09446..d2c7840f18 100644
--- a/library/ui/src/main/res/values-da/strings.xml
+++ b/library/ui/src/main/res/values-da/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Afspil forrige</string>
   <string name="exo_controls_next_description">Afspil næste</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Gentag ingen</string>
   <string name="exo_controls_repeat_one_description">Gentag én</string>
   <string name="exo_controls_repeat_all_description">Gentag alle</string>
-  <string name="exo_controls_shuffle_description">Bland</string>
+  <string name="exo_controls_shuffle_on_description">Bland er slået til</string>
+  <string name="exo_controls_shuffle_off_description">Bland er slået fra</string>
   <string name="exo_controls_fullscreen_description">Fuld skærm</string>
   <string name="exo_controls_vr_description">VR-tilstand</string>
   <string name="exo_download_description">Download</string>
diff --git a/library/ui/src/main/res/values-de/strings.xml b/library/ui/src/main/res/values-de/strings.xml
index 1bb620dd2b..31e011b372 100644
--- a/library/ui/src/main/res/values-de/strings.xml
+++ b/library/ui/src/main/res/values-de/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Vorheriger Titel</string>
   <string name="exo_controls_next_description">Nächster Titel</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Keinen wiederholen</string>
   <string name="exo_controls_repeat_one_description">Einen wiederholen</string>
   <string name="exo_controls_repeat_all_description">Alle wiederholen</string>
-  <string name="exo_controls_shuffle_description">Zufallsmix</string>
+  <string name="exo_controls_shuffle_on_description">Zufallsmix an</string>
+  <string name="exo_controls_shuffle_off_description">Zufallsmix aus</string>
   <string name="exo_controls_fullscreen_description">Vollbildmodus</string>
   <string name="exo_controls_vr_description">VR-Modus</string>
   <string name="exo_download_description">Herunterladen</string>
diff --git a/library/ui/src/main/res/values-el/strings.xml b/library/ui/src/main/res/values-el/strings.xml
index 1ddbe4a5fa..56c6843b76 100644
--- a/library/ui/src/main/res/values-el/strings.xml
+++ b/library/ui/src/main/res/values-el/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Προηγούμενο κομμάτι</string>
   <string name="exo_controls_next_description">Επόμενο κομμάτι</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Καμία επανάληψη</string>
   <string name="exo_controls_repeat_one_description">Επανάληψη ενός κομματιού</string>
   <string name="exo_controls_repeat_all_description">Επανάληψη όλων</string>
-  <string name="exo_controls_shuffle_description">Τυχαία αναπαραγωγή</string>
+  <string name="exo_controls_shuffle_on_description">Τυχαία αναπαραγωγή: Ενεργή</string>
+  <string name="exo_controls_shuffle_off_description">Τυχαία αναπαραγωγή: Ανενεργή</string>
   <string name="exo_controls_fullscreen_description">Λειτουργία πλήρους οθόνης</string>
   <string name="exo_controls_vr_description">Λειτουργία VR mode</string>
   <string name="exo_download_description">Λήψη</string>
diff --git a/library/ui/src/main/res/values-en-rAU/strings.xml b/library/ui/src/main/res/values-en-rAU/strings.xml
index cf25e2ada0..06c393b168 100644
--- a/library/ui/src/main/res/values-en-rAU/strings.xml
+++ b/library/ui/src/main/res/values-en-rAU/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Previous track</string>
   <string name="exo_controls_next_description">Next track</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Repeat none</string>
   <string name="exo_controls_repeat_one_description">Repeat one</string>
   <string name="exo_controls_repeat_all_description">Repeat all</string>
-  <string name="exo_controls_shuffle_description">Shuffle</string>
+  <string name="exo_controls_shuffle_on_description">Shuffle on</string>
+  <string name="exo_controls_shuffle_off_description">Shuffle off</string>
   <string name="exo_controls_fullscreen_description">Full-screen mode</string>
   <string name="exo_controls_vr_description">VR mode</string>
   <string name="exo_download_description">Download</string>
diff --git a/library/ui/src/main/res/values-en-rGB/strings.xml b/library/ui/src/main/res/values-en-rGB/strings.xml
index cf25e2ada0..06c393b168 100644
--- a/library/ui/src/main/res/values-en-rGB/strings.xml
+++ b/library/ui/src/main/res/values-en-rGB/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Previous track</string>
   <string name="exo_controls_next_description">Next track</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Repeat none</string>
   <string name="exo_controls_repeat_one_description">Repeat one</string>
   <string name="exo_controls_repeat_all_description">Repeat all</string>
-  <string name="exo_controls_shuffle_description">Shuffle</string>
+  <string name="exo_controls_shuffle_on_description">Shuffle on</string>
+  <string name="exo_controls_shuffle_off_description">Shuffle off</string>
   <string name="exo_controls_fullscreen_description">Full-screen mode</string>
   <string name="exo_controls_vr_description">VR mode</string>
   <string name="exo_download_description">Download</string>
diff --git a/library/ui/src/main/res/values-en-rIN/strings.xml b/library/ui/src/main/res/values-en-rIN/strings.xml
index cf25e2ada0..06c393b168 100644
--- a/library/ui/src/main/res/values-en-rIN/strings.xml
+++ b/library/ui/src/main/res/values-en-rIN/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Previous track</string>
   <string name="exo_controls_next_description">Next track</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Repeat none</string>
   <string name="exo_controls_repeat_one_description">Repeat one</string>
   <string name="exo_controls_repeat_all_description">Repeat all</string>
-  <string name="exo_controls_shuffle_description">Shuffle</string>
+  <string name="exo_controls_shuffle_on_description">Shuffle on</string>
+  <string name="exo_controls_shuffle_off_description">Shuffle off</string>
   <string name="exo_controls_fullscreen_description">Full-screen mode</string>
   <string name="exo_controls_vr_description">VR mode</string>
   <string name="exo_download_description">Download</string>
diff --git a/library/ui/src/main/res/values-es-rUS/strings.xml b/library/ui/src/main/res/values-es-rUS/strings.xml
index ceeb0b8497..bd698c76be 100644
--- a/library/ui/src/main/res/values-es-rUS/strings.xml
+++ b/library/ui/src/main/res/values-es-rUS/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Pista anterior</string>
   <string name="exo_controls_next_description">Pista siguiente</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">No repetir</string>
   <string name="exo_controls_repeat_one_description">Repetir uno</string>
   <string name="exo_controls_repeat_all_description">Repetir todo</string>
-  <string name="exo_controls_shuffle_description">Reproducir aleatoriamente</string>
+  <string name="exo_controls_shuffle_on_description">Reprod. aleatoria activada</string>
+  <string name="exo_controls_shuffle_off_description">Reprod. aleatoria desactivada</string>
   <string name="exo_controls_fullscreen_description">Modo de pantalla completa</string>
   <string name="exo_controls_vr_description">Modo RV</string>
   <string name="exo_download_description">Descargar</string>
diff --git a/library/ui/src/main/res/values-es/strings.xml b/library/ui/src/main/res/values-es/strings.xml
index 0118da57be..52998fde5a 100644
--- a/library/ui/src/main/res/values-es/strings.xml
+++ b/library/ui/src/main/res/values-es/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Pista anterior</string>
   <string name="exo_controls_next_description">Siguiente pista</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">No repetir</string>
   <string name="exo_controls_repeat_one_description">Repetir uno</string>
   <string name="exo_controls_repeat_all_description">Repetir todo</string>
-  <string name="exo_controls_shuffle_description">Reproducir aleatoriamente</string>
+  <string name="exo_controls_shuffle_on_description">Con reproducción aleatoria</string>
+  <string name="exo_controls_shuffle_off_description">Sin reproducción aleatoria</string>
   <string name="exo_controls_fullscreen_description">Modo de pantalla completa</string>
   <string name="exo_controls_vr_description">Modo RV</string>
   <string name="exo_download_description">Descargar</string>
diff --git a/library/ui/src/main/res/values-et/strings.xml b/library/ui/src/main/res/values-et/strings.xml
index 99ca9548ed..42a2487b3d 100644
--- a/library/ui/src/main/res/values-et/strings.xml
+++ b/library/ui/src/main/res/values-et/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Eelmine lugu</string>
   <string name="exo_controls_next_description">Järgmine lugu</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ära korda ühtegi</string>
   <string name="exo_controls_repeat_one_description">Korda ühte</string>
   <string name="exo_controls_repeat_all_description">Korda kõiki</string>
-  <string name="exo_controls_shuffle_description">Esita juhuslikus järjekorras</string>
+  <string name="exo_controls_shuffle_on_description">Lülita juh. järj. esit. sisse</string>
+  <string name="exo_controls_shuffle_off_description">Lülita juh. järj. esit. välja</string>
   <string name="exo_controls_fullscreen_description">Täisekraani režiim</string>
   <string name="exo_controls_vr_description">VR-režiim</string>
   <string name="exo_download_description">Allalaadimine</string>
diff --git a/library/ui/src/main/res/values-eu/strings.xml b/library/ui/src/main/res/values-eu/strings.xml
index 4d992fee0f..db0998916f 100644
--- a/library/ui/src/main/res/values-eu/strings.xml
+++ b/library/ui/src/main/res/values-eu/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Aurreko pista</string>
   <string name="exo_controls_next_description">Hurrengo pista</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ez errepikatu</string>
   <string name="exo_controls_repeat_one_description">Errepikatu bat</string>
   <string name="exo_controls_repeat_all_description">Errepikatu guztiak</string>
-  <string name="exo_controls_shuffle_description">Erreproduzitu ausaz</string>
+  <string name="exo_controls_shuffle_on_description">Ausazko erreprodukzioa aktibatuta</string>
+  <string name="exo_controls_shuffle_off_description">Ausazko erreprodukzioa desaktibatuta</string>
   <string name="exo_controls_fullscreen_description">Pantaila osoko modua</string>
   <string name="exo_controls_vr_description">EB modua</string>
   <string name="exo_download_description">Deskargak</string>
diff --git a/library/ui/src/main/res/values-fa/strings.xml b/library/ui/src/main/res/values-fa/strings.xml
index fed94b5569..ea9a79f06b 100644
--- a/library/ui/src/main/res/values-fa/strings.xml
+++ b/library/ui/src/main/res/values-fa/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">آهنگ قبلی</string>
   <string name="exo_controls_next_description">آهنگ بعدی</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">تکرار هیچ‌کدام</string>
   <string name="exo_controls_repeat_one_description">یکبار تکرار</string>
   <string name="exo_controls_repeat_all_description">تکرار همه</string>
-  <string name="exo_controls_shuffle_description">درهم</string>
+  <string name="exo_controls_shuffle_on_description">پخش درهم روشن</string>
+  <string name="exo_controls_shuffle_off_description">پخش درهم خاموش</string>
   <string name="exo_controls_fullscreen_description">حالت تمام‌صفحه</string>
   <string name="exo_controls_vr_description">حالت واقعیت مجازی</string>
   <string name="exo_download_description">بارگیری</string>
diff --git a/library/ui/src/main/res/values-fi/strings.xml b/library/ui/src/main/res/values-fi/strings.xml
index 0dc2f9d346..2fd5a892b5 100644
--- a/library/ui/src/main/res/values-fi/strings.xml
+++ b/library/ui/src/main/res/values-fi/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Edellinen kappale</string>
   <string name="exo_controls_next_description">Seuraava kappale</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ei uudelleentoistoa</string>
   <string name="exo_controls_repeat_one_description">Toista yksi uudelleen</string>
   <string name="exo_controls_repeat_all_description">Toista kaikki uudelleen</string>
-  <string name="exo_controls_shuffle_description">Satunnaistoisto</string>
+  <string name="exo_controls_shuffle_on_description">Satunnaistoisto käytössä</string>
+  <string name="exo_controls_shuffle_off_description">Satunnaistoisto ei käytössä</string>
   <string name="exo_controls_fullscreen_description">Koko näytön tila</string>
   <string name="exo_controls_vr_description">VR-tila</string>
   <string name="exo_download_description">Lataa</string>
diff --git a/library/ui/src/main/res/values-fr-rCA/strings.xml b/library/ui/src/main/res/values-fr-rCA/strings.xml
index 0f3534924f..5bda34f7e8 100644
--- a/library/ui/src/main/res/values-fr-rCA/strings.xml
+++ b/library/ui/src/main/res/values-fr-rCA/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Chanson précédente</string>
   <string name="exo_controls_next_description">Chanson suivante</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ne rien lire en boucle</string>
   <string name="exo_controls_repeat_one_description">Lire une chanson en boucle</string>
   <string name="exo_controls_repeat_all_description">Tout lire en boucle</string>
-  <string name="exo_controls_shuffle_description">Lecture aléatoire</string>
+  <string name="exo_controls_shuffle_on_description">Lecture aléatoire activée</string>
+  <string name="exo_controls_shuffle_off_description">Lecture aléatoire désactivée</string>
   <string name="exo_controls_fullscreen_description">Mode Plein écran</string>
   <string name="exo_controls_vr_description">Mode RV</string>
   <string name="exo_download_description">Télécharger</string>
diff --git a/library/ui/src/main/res/values-fr/strings.xml b/library/ui/src/main/res/values-fr/strings.xml
index 46c07f531e..c88102d0f5 100644
--- a/library/ui/src/main/res/values-fr/strings.xml
+++ b/library/ui/src/main/res/values-fr/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Titre précédent</string>
   <string name="exo_controls_next_description">Titre suivant</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ne rien lire en boucle</string>
   <string name="exo_controls_repeat_one_description">Lire un titre en boucle</string>
   <string name="exo_controls_repeat_all_description">Tout lire en boucle</string>
-  <string name="exo_controls_shuffle_description">Aléatoire</string>
+  <string name="exo_controls_shuffle_on_description">Lecture aléatoire activée</string>
+  <string name="exo_controls_shuffle_off_description">Lecture aléatoire désactivée</string>
   <string name="exo_controls_fullscreen_description">Mode plein écran</string>
   <string name="exo_controls_vr_description">Mode RV</string>
   <string name="exo_download_description">Télécharger</string>
diff --git a/library/ui/src/main/res/values-gl/strings.xml b/library/ui/src/main/res/values-gl/strings.xml
index e6689353f1..d4f4f24762 100644
--- a/library/ui/src/main/res/values-gl/strings.xml
+++ b/library/ui/src/main/res/values-gl/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Pista anterior</string>
   <string name="exo_controls_next_description">Pista seguinte</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Non repetir</string>
   <string name="exo_controls_repeat_one_description">Repetir unha pista</string>
   <string name="exo_controls_repeat_all_description">Repetir todas as pistas</string>
-  <string name="exo_controls_shuffle_description">Reprodución aleatoria</string>
+  <string name="exo_controls_shuffle_on_description">Reprodución aleatoria activada</string>
+  <string name="exo_controls_shuffle_off_description">Reprodución aleat. desactivada</string>
   <string name="exo_controls_fullscreen_description">Modo de pantalla completa</string>
   <string name="exo_controls_vr_description">Modo RV</string>
   <string name="exo_download_description">Descargar</string>
diff --git a/library/ui/src/main/res/values-gu/strings.xml b/library/ui/src/main/res/values-gu/strings.xml
index 488eb39f6a..b34cf8b6f4 100644
--- a/library/ui/src/main/res/values-gu/strings.xml
+++ b/library/ui/src/main/res/values-gu/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">પહેલાંનો ટ્રૅક</string>
   <string name="exo_controls_next_description">આગલો ટ્રૅક</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">કોઈ રિપીટ કરતા નહીં</string>
   <string name="exo_controls_repeat_one_description">એક રિપીટ કરો</string>
   <string name="exo_controls_repeat_all_description">બધાને રિપીટ કરો</string>
-  <string name="exo_controls_shuffle_description">શફલ કરો</string>
+  <string name="exo_controls_shuffle_on_description">શફલ ચાલુ છે</string>
+  <string name="exo_controls_shuffle_off_description">શફલ બંધ છે</string>
   <string name="exo_controls_fullscreen_description">પૂર્ણસ્ક્રીન મોડ</string>
   <string name="exo_controls_vr_description">VR મોડ</string>
   <string name="exo_download_description">ડાઉનલોડ કરો</string>
diff --git a/library/ui/src/main/res/values-hi/strings.xml b/library/ui/src/main/res/values-hi/strings.xml
index 8ba92054ff..5067027d7a 100644
--- a/library/ui/src/main/res/values-hi/strings.xml
+++ b/library/ui/src/main/res/values-hi/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">पिछला ट्रैक</string>
   <string name="exo_controls_next_description">अगला ट्रैक</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">किसी को न दोहराएं</string>
   <string name="exo_controls_repeat_one_description">एक को दोहराएं</string>
   <string name="exo_controls_repeat_all_description">सभी को दोहराएं</string>
-  <string name="exo_controls_shuffle_description">शफ़ल करें</string>
+  <string name="exo_controls_shuffle_on_description">शफ़ल करना चालू है</string>
+  <string name="exo_controls_shuffle_off_description">शफ़ल करना बंद है</string>
   <string name="exo_controls_fullscreen_description">फ़ुलस्क्रीन मोड</string>
   <string name="exo_controls_vr_description">VR मोड</string>
   <string name="exo_download_description">डाउनलोड करें</string>
diff --git a/library/ui/src/main/res/values-hr/strings.xml b/library/ui/src/main/res/values-hr/strings.xml
index 4fa1942986..472367200a 100644
--- a/library/ui/src/main/res/values-hr/strings.xml
+++ b/library/ui/src/main/res/values-hr/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Prethodni zapis</string>
   <string name="exo_controls_next_description">Sljedeći zapis</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Bez ponavljanja</string>
   <string name="exo_controls_repeat_one_description">Ponovi jedno</string>
   <string name="exo_controls_repeat_all_description">Ponovi sve</string>
-  <string name="exo_controls_shuffle_description">Reproduciraj nasumično</string>
+  <string name="exo_controls_shuffle_on_description">Nasumična reproduk. uključena</string>
+  <string name="exo_controls_shuffle_off_description">Nasumična reproduk. isključena</string>
   <string name="exo_controls_fullscreen_description">Prikaz na cijelom zaslonu</string>
   <string name="exo_controls_vr_description">VR način</string>
   <string name="exo_download_description">Preuzmi</string>
diff --git a/library/ui/src/main/res/values-hu/strings.xml b/library/ui/src/main/res/values-hu/strings.xml
index baf77650e0..3fd64ad6f7 100644
--- a/library/ui/src/main/res/values-hu/strings.xml
+++ b/library/ui/src/main/res/values-hu/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Előző szám</string>
   <string name="exo_controls_next_description">Következő szám</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Nincs ismétlés</string>
   <string name="exo_controls_repeat_one_description">Egy szám ismétlése</string>
   <string name="exo_controls_repeat_all_description">Összes szám ismétlése</string>
-  <string name="exo_controls_shuffle_description">Keverés</string>
+  <string name="exo_controls_shuffle_on_description">Keverés bekapcsolva</string>
+  <string name="exo_controls_shuffle_off_description">Keverés kikapcsolva</string>
   <string name="exo_controls_fullscreen_description">Teljes képernyős mód</string>
   <string name="exo_controls_vr_description">VR-mód</string>
   <string name="exo_download_description">Letöltés</string>
diff --git a/library/ui/src/main/res/values-hy/strings.xml b/library/ui/src/main/res/values-hy/strings.xml
index 04a2aeb140..2a4edc93ec 100644
--- a/library/ui/src/main/res/values-hy/strings.xml
+++ b/library/ui/src/main/res/values-hy/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Նախորդը</string>
   <string name="exo_controls_next_description">Հաջորդը</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Չկրկնել</string>
   <string name="exo_controls_repeat_one_description">Կրկնել մեկը</string>
   <string name="exo_controls_repeat_all_description">Կրկնել բոլորը</string>
-  <string name="exo_controls_shuffle_description">Խառնել</string>
+  <string name="exo_controls_shuffle_on_description">Խառնումը միացված է</string>
+  <string name="exo_controls_shuffle_off_description">Խառնումն անջատված է</string>
   <string name="exo_controls_fullscreen_description">Լիաէկրան ռեժիմ</string>
   <string name="exo_controls_vr_description">VR ռեժիմ</string>
   <string name="exo_download_description">Ներբեռնել</string>
diff --git a/library/ui/src/main/res/values-in/strings.xml b/library/ui/src/main/res/values-in/strings.xml
index 7410576e81..cf96a47ae4 100644
--- a/library/ui/src/main/res/values-in/strings.xml
+++ b/library/ui/src/main/res/values-in/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Lagu sebelumnya</string>
   <string name="exo_controls_next_description">Lagu berikutnya</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Jangan ulangi</string>
   <string name="exo_controls_repeat_one_description">Ulangi 1</string>
   <string name="exo_controls_repeat_all_description">Ulangi semua</string>
-  <string name="exo_controls_shuffle_description">Acak</string>
+  <string name="exo_controls_shuffle_on_description">Acak aktif</string>
+  <string name="exo_controls_shuffle_off_description">Acak tidak aktif</string>
   <string name="exo_controls_fullscreen_description">Mode layar penuh</string>
   <string name="exo_controls_vr_description">Mode VR</string>
   <string name="exo_download_description">Download</string>
diff --git a/library/ui/src/main/res/values-is/strings.xml b/library/ui/src/main/res/values-is/strings.xml
index bdb27a6648..a0398dec1f 100644
--- a/library/ui/src/main/res/values-is/strings.xml
+++ b/library/ui/src/main/res/values-is/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Fyrra lag</string>
   <string name="exo_controls_next_description">Næsta lag</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Endurtaka ekkert</string>
   <string name="exo_controls_repeat_one_description">Endurtaka eitt</string>
   <string name="exo_controls_repeat_all_description">Endurtaka allt</string>
-  <string name="exo_controls_shuffle_description">Stokka</string>
+  <string name="exo_controls_shuffle_on_description">Kveikt á stokkun</string>
+  <string name="exo_controls_shuffle_off_description">Slökkt á stokkun</string>
   <string name="exo_controls_fullscreen_description">Allur skjárinn</string>
   <string name="exo_controls_vr_description">sýndarveruleikastilling</string>
   <string name="exo_download_description">Sækja</string>
diff --git a/library/ui/src/main/res/values-it/strings.xml b/library/ui/src/main/res/values-it/strings.xml
index ffa05821e9..b5261ed383 100644
--- a/library/ui/src/main/res/values-it/strings.xml
+++ b/library/ui/src/main/res/values-it/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Traccia precedente</string>
   <string name="exo_controls_next_description">Traccia successiva</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Non ripetere nulla</string>
   <string name="exo_controls_repeat_one_description">Ripeti uno</string>
   <string name="exo_controls_repeat_all_description">Ripeti tutto</string>
-  <string name="exo_controls_shuffle_description">Riproduzione casuale</string>
+  <string name="exo_controls_shuffle_on_description">Attiva riproduzione casuale</string>
+  <string name="exo_controls_shuffle_off_description">Disattiva riproduzione casuale</string>
   <string name="exo_controls_fullscreen_description">Modalità a schermo intero</string>
   <string name="exo_controls_vr_description">Modalità VR</string>
   <string name="exo_download_description">Scarica</string>
diff --git a/library/ui/src/main/res/values-iw/strings.xml b/library/ui/src/main/res/values-iw/strings.xml
index 695196c5be..48e9014a89 100644
--- a/library/ui/src/main/res/values-iw/strings.xml
+++ b/library/ui/src/main/res/values-iw/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">הרצועה הקודמת</string>
   <string name="exo_controls_next_description">הרצועה הבאה</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">אל תחזור על אף פריט</string>
   <string name="exo_controls_repeat_one_description">חזור על פריט אחד</string>
   <string name="exo_controls_repeat_all_description">חזור על הכול</string>
-  <string name="exo_controls_shuffle_description">ערבוב</string>
+  <string name="exo_controls_shuffle_on_description">ההשמעה האקראית מופעלת</string>
+  <string name="exo_controls_shuffle_off_description">ההשמעה האקראית מושבתת</string>
   <string name="exo_controls_fullscreen_description">מצב מסך מלא</string>
   <string name="exo_controls_vr_description">מצב VR</string>
   <string name="exo_download_description">הורדה</string>
diff --git a/library/ui/src/main/res/values-ja/strings.xml b/library/ui/src/main/res/values-ja/strings.xml
index b4158736a8..8217487543 100644
--- a/library/ui/src/main/res/values-ja/strings.xml
+++ b/library/ui/src/main/res/values-ja/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">前のトラック</string>
   <string name="exo_controls_next_description">次のトラック</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">リピートなし</string>
   <string name="exo_controls_repeat_one_description">1 曲をリピート</string>
   <string name="exo_controls_repeat_all_description">全曲をリピート</string>
-  <string name="exo_controls_shuffle_description">シャッフル</string>
+  <string name="exo_controls_shuffle_on_description">シャッフル ON</string>
+  <string name="exo_controls_shuffle_off_description">シャッフル OFF</string>
   <string name="exo_controls_fullscreen_description">全画面モード</string>
   <string name="exo_controls_vr_description">VR モード</string>
   <string name="exo_download_description">ダウンロード</string>
diff --git a/library/ui/src/main/res/values-ka/strings.xml b/library/ui/src/main/res/values-ka/strings.xml
index 13ceaaf51f..b611b088c0 100644
--- a/library/ui/src/main/res/values-ka/strings.xml
+++ b/library/ui/src/main/res/values-ka/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">წინა ჩანაწერი</string>
   <string name="exo_controls_next_description">შემდეგი ჩანაწერი</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">არცერთის გამეორება</string>
   <string name="exo_controls_repeat_one_description">ერთის გამეორება</string>
   <string name="exo_controls_repeat_all_description">ყველას გამეორება</string>
-  <string name="exo_controls_shuffle_description">არეულად დაკვრა</string>
+  <string name="exo_controls_shuffle_on_description">არეულად დაკვრა ჩართულია</string>
+  <string name="exo_controls_shuffle_off_description">არეულად დაკვრა გამორთულია</string>
   <string name="exo_controls_fullscreen_description">სრულეკრანიანი რეჟიმი</string>
   <string name="exo_controls_vr_description">VR რეჟიმი</string>
   <string name="exo_download_description">ჩამოტვირთვა</string>
diff --git a/library/ui/src/main/res/values-kk/strings.xml b/library/ui/src/main/res/values-kk/strings.xml
index 92119d1fe5..6847b2b069 100644
--- a/library/ui/src/main/res/values-kk/strings.xml
+++ b/library/ui/src/main/res/values-kk/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Алдыңғы аудиотрек</string>
   <string name="exo_controls_next_description">Келесі аудиотрек</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ешқайсысын қайталамау</string>
   <string name="exo_controls_repeat_one_description">Біреуін қайталау</string>
   <string name="exo_controls_repeat_all_description">Барлығын қайталау</string>
-  <string name="exo_controls_shuffle_description">Араластыру</string>
+  <string name="exo_controls_shuffle_on_description">Араластыру режимі қосулы.</string>
+  <string name="exo_controls_shuffle_off_description">Араластыру режимі өшірулі.</string>
   <string name="exo_controls_fullscreen_description">Толық экран режимі</string>
   <string name="exo_controls_vr_description">VR режимі</string>
   <string name="exo_download_description">Жүктеп алу</string>
diff --git a/library/ui/src/main/res/values-km/strings.xml b/library/ui/src/main/res/values-km/strings.xml
index 62728de026..ff4795643e 100644
--- a/library/ui/src/main/res/values-km/strings.xml
+++ b/library/ui/src/main/res/values-km/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">សំនៀង​​មុន</string>
   <string name="exo_controls_next_description">សំនៀង​បន្ទាប់</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">មិន​លេង​ឡើងវិញ</string>
   <string name="exo_controls_repeat_one_description">លេង​ឡើង​វិញ​ម្ដង</string>
   <string name="exo_controls_repeat_all_description">លេង​ឡើងវិញ​ទាំងអស់</string>
-  <string name="exo_controls_shuffle_description">ច្របល់</string>
+  <string name="exo_controls_shuffle_on_description">បើក​ការ​ច្របល់</string>
+  <string name="exo_controls_shuffle_off_description">បិទ​ការ​ច្របល់</string>
   <string name="exo_controls_fullscreen_description">មុខងារពេញ​អេក្រង់</string>
   <string name="exo_controls_vr_description">មុខងារ VR</string>
   <string name="exo_download_description">ទាញយក</string>
diff --git a/library/ui/src/main/res/values-kn/strings.xml b/library/ui/src/main/res/values-kn/strings.xml
index 6e6bfcb165..b9181c7297 100644
--- a/library/ui/src/main/res/values-kn/strings.xml
+++ b/library/ui/src/main/res/values-kn/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">ಹಿಂದಿನ ಟ್ರ್ಯಾಕ್</string>
   <string name="exo_controls_next_description">ಮುಂದಿನ ಟ್ರ್ಯಾಕ್</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">ಯಾವುದನ್ನೂ ಪುನರಾವರ್ತಿಸಬೇಡಿ</string>
   <string name="exo_controls_repeat_one_description">ಒಂದನ್ನು ಪುನರಾವರ್ತಿಸಿ</string>
   <string name="exo_controls_repeat_all_description">ಎಲ್ಲವನ್ನು ಪುನರಾವರ್ತಿಸಿ</string>
-  <string name="exo_controls_shuffle_description">ಶಫಲ್‌</string>
+  <string name="exo_controls_shuffle_on_description">ಶಫಲ್ ಆನ್ ಆಗಿದೆ</string>
+  <string name="exo_controls_shuffle_off_description">ಶಫಲ್ ಆಫ್ ಆಗಿದೆ</string>
   <string name="exo_controls_fullscreen_description">ಪೂರ್ಣ ಪರದೆ ಮೋಡ್</string>
   <string name="exo_controls_vr_description">VR ಮೋಡ್</string>
   <string name="exo_download_description">ಡೌನ್‌ಲೋಡ್‌</string>
diff --git a/library/ui/src/main/res/values-ko/strings.xml b/library/ui/src/main/res/values-ko/strings.xml
index 230660ad6a..8e7d5072ce 100644
--- a/library/ui/src/main/res/values-ko/strings.xml
+++ b/library/ui/src/main/res/values-ko/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">이전 트랙</string>
   <string name="exo_controls_next_description">다음 트랙</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">반복 안함</string>
   <string name="exo_controls_repeat_one_description">현재 미디어 반복</string>
   <string name="exo_controls_repeat_all_description">모두 반복</string>
-  <string name="exo_controls_shuffle_description">셔플</string>
+  <string name="exo_controls_shuffle_on_description">셔플 사용</string>
+  <string name="exo_controls_shuffle_off_description">셔플 사용 안함</string>
   <string name="exo_controls_fullscreen_description">전체화면 모드</string>
   <string name="exo_controls_vr_description">가상 현실 모드</string>
   <string name="exo_download_description">다운로드</string>
diff --git a/library/ui/src/main/res/values-ky/strings.xml b/library/ui/src/main/res/values-ky/strings.xml
index 57b8bbb5f5..2c124fedff 100644
--- a/library/ui/src/main/res/values-ky/strings.xml
+++ b/library/ui/src/main/res/values-ky/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Мурунку трек</string>
   <string name="exo_controls_next_description">Кийинки трек</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Кайталанбасын</string>
   <string name="exo_controls_repeat_one_description">Бирөөнү кайталоо</string>
   <string name="exo_controls_repeat_all_description">Баарын кайталоо</string>
-  <string name="exo_controls_shuffle_description">Аралаштыруу</string>
+  <string name="exo_controls_shuffle_on_description">Аралаштыруу күйүк</string>
+  <string name="exo_controls_shuffle_off_description">Аралаштыруу өчүк</string>
   <string name="exo_controls_fullscreen_description">Толук экран режими</string>
   <string name="exo_controls_vr_description">VR режими</string>
   <string name="exo_download_description">Жүктөп алуу</string>
diff --git a/library/ui/src/main/res/values-lo/strings.xml b/library/ui/src/main/res/values-lo/strings.xml
index d7996610b2..fced5cce9e 100644
--- a/library/ui/src/main/res/values-lo/strings.xml
+++ b/library/ui/src/main/res/values-lo/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">ເພງກ່ອນໜ້າ</string>
   <string name="exo_controls_next_description">ເພງຕໍ່ໄປ</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">ບໍ່ຫຼິ້ນຊ້ຳ</string>
   <string name="exo_controls_repeat_one_description">ຫຼິ້ນຊໍ້າ</string>
   <string name="exo_controls_repeat_all_description">ຫຼິ້ນຊ້ຳທັງໝົດ</string>
-  <string name="exo_controls_shuffle_description">ຫຼີ້ນແບບສຸ່ມ</string>
+  <string name="exo_controls_shuffle_on_description">ເປີດການສຸ່ມເພງແລ້ວ</string>
+  <string name="exo_controls_shuffle_off_description">ປິດການສຸ່ມເພງແລ້ວ</string>
   <string name="exo_controls_fullscreen_description">ໂໝດເຕັມຈໍ</string>
   <string name="exo_controls_vr_description">ໂໝດ VR</string>
   <string name="exo_download_description">ດາວໂຫລດ</string>
diff --git a/library/ui/src/main/res/values-lt/strings.xml b/library/ui/src/main/res/values-lt/strings.xml
index 3e9a63dc99..28fbe23c82 100644
--- a/library/ui/src/main/res/values-lt/strings.xml
+++ b/library/ui/src/main/res/values-lt/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Ankstesnis takelis</string>
   <string name="exo_controls_next_description">Kitas takelis</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Nekartoti nieko</string>
   <string name="exo_controls_repeat_one_description">Kartoti vieną</string>
   <string name="exo_controls_repeat_all_description">Kartoti viską</string>
-  <string name="exo_controls_shuffle_description">Maišyti</string>
+  <string name="exo_controls_shuffle_on_description">Maišymas įjungtas</string>
+  <string name="exo_controls_shuffle_off_description">Maišymas išjungtas</string>
   <string name="exo_controls_fullscreen_description">Viso ekrano režimas</string>
   <string name="exo_controls_vr_description">VR režimas</string>
   <string name="exo_download_description">Atsisiųsti</string>
diff --git a/library/ui/src/main/res/values-lv/strings.xml b/library/ui/src/main/res/values-lv/strings.xml
index 59b541808a..b1b73e22c2 100644
--- a/library/ui/src/main/res/values-lv/strings.xml
+++ b/library/ui/src/main/res/values-lv/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Iepriekšējais ieraksts</string>
   <string name="exo_controls_next_description">Nākamais ieraksts</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Neatkārtot nevienu</string>
   <string name="exo_controls_repeat_one_description">Atkārtot vienu</string>
   <string name="exo_controls_repeat_all_description">Atkārtot visu</string>
-  <string name="exo_controls_shuffle_description">Atskaņot jauktā secībā</string>
+  <string name="exo_controls_shuffle_on_description">Atsk. jauktā secībā ieslēgta</string>
+  <string name="exo_controls_shuffle_off_description">Atsk. jauktā secībā izslēgta</string>
   <string name="exo_controls_fullscreen_description">Pilnekrāna režīms</string>
   <string name="exo_controls_vr_description">VR režīms</string>
   <string name="exo_download_description">Lejupielādēt</string>
diff --git a/library/ui/src/main/res/values-mk/strings.xml b/library/ui/src/main/res/values-mk/strings.xml
index 08a54d7240..841c29aefe 100644
--- a/library/ui/src/main/res/values-mk/strings.xml
+++ b/library/ui/src/main/res/values-mk/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Претходна песна</string>
   <string name="exo_controls_next_description">Следна песна</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Не повторувај ниту една</string>
   <string name="exo_controls_repeat_one_description">Повтори една</string>
   <string name="exo_controls_repeat_all_description">Повтори ги сите</string>
-  <string name="exo_controls_shuffle_description">Измешај</string>
+  <string name="exo_controls_shuffle_on_description">Мешањето е вклучено</string>
+  <string name="exo_controls_shuffle_off_description">Мешањето е исклучено</string>
   <string name="exo_controls_fullscreen_description">Режим на цел екран</string>
   <string name="exo_controls_vr_description">Режим на VR</string>
   <string name="exo_download_description">Преземи</string>
diff --git a/library/ui/src/main/res/values-ml/strings.xml b/library/ui/src/main/res/values-ml/strings.xml
index 6e79db0903..be25438ee1 100644
--- a/library/ui/src/main/res/values-ml/strings.xml
+++ b/library/ui/src/main/res/values-ml/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">മുമ്പത്തെ ട്രാക്ക്</string>
   <string name="exo_controls_next_description">അടുത്ത ട്രാക്ക്</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">ഒന്നും ആവർത്തിക്കരുത്</string>
   <string name="exo_controls_repeat_one_description">ഒരെണ്ണം ആവർത്തിക്കുക</string>
   <string name="exo_controls_repeat_all_description">എല്ലാം ആവർത്തിക്കുക</string>
-  <string name="exo_controls_shuffle_description">ഇടകലര്‍ത്തുക</string>
+  <string name="exo_controls_shuffle_on_description">ഇടകലർത്തൽ ഓണാക്കുക</string>
+  <string name="exo_controls_shuffle_off_description">ഇടകലർത്തൽ ഓഫാക്കുക</string>
   <string name="exo_controls_fullscreen_description">പൂർണ്ണ സ്‌ക്രീൻ മോഡ്</string>
   <string name="exo_controls_vr_description">VR മോഡ്</string>
   <string name="exo_download_description">ഡൗൺലോഡ്</string>
diff --git a/library/ui/src/main/res/values-mn/strings.xml b/library/ui/src/main/res/values-mn/strings.xml
index 383d102520..54669c31b5 100644
--- a/library/ui/src/main/res/values-mn/strings.xml
+++ b/library/ui/src/main/res/values-mn/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Өмнөх бичлэг</string>
   <string name="exo_controls_next_description">Дараагийн бичлэг</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Алийг нь ч дахин тоглуулахгүй</string>
   <string name="exo_controls_repeat_one_description">Одоогийн тоглуулж буй медиаг дахин тоглуулах</string>
   <string name="exo_controls_repeat_all_description">Бүгдийг нь дахин тоглуулах</string>
-  <string name="exo_controls_shuffle_description">Холих</string>
+  <string name="exo_controls_shuffle_on_description">Холих асаалттай</string>
+  <string name="exo_controls_shuffle_off_description">Холих унтраалттай</string>
   <string name="exo_controls_fullscreen_description">Бүтэн дэлгэцийн горим</string>
   <string name="exo_controls_vr_description">VR горим</string>
   <string name="exo_download_description">Татах</string>
diff --git a/library/ui/src/main/res/values-mr/strings.xml b/library/ui/src/main/res/values-mr/strings.xml
index a0900ab851..1864e70f3f 100644
--- a/library/ui/src/main/res/values-mr/strings.xml
+++ b/library/ui/src/main/res/values-mr/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">मागील ट्रॅक</string>
   <string name="exo_controls_next_description">पुढील ट्रॅक</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">रीपीट करू नका</string>
   <string name="exo_controls_repeat_one_description">एक रीपीट करा</string>
   <string name="exo_controls_repeat_all_description">सर्व रीपीट करा</string>
-  <string name="exo_controls_shuffle_description">शफल करा</string>
+  <string name="exo_controls_shuffle_on_description">शफल करा सुरू करा</string>
+  <string name="exo_controls_shuffle_off_description">शफल करा बंद करा</string>
   <string name="exo_controls_fullscreen_description">फुल स्क्रीन मोड</string>
   <string name="exo_controls_vr_description">VR मोड</string>
   <string name="exo_download_description">डाउनलोड करा</string>
diff --git a/library/ui/src/main/res/values-ms/strings.xml b/library/ui/src/main/res/values-ms/strings.xml
index 6dab5be8de..612e530096 100644
--- a/library/ui/src/main/res/values-ms/strings.xml
+++ b/library/ui/src/main/res/values-ms/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Lagu sebelumnya</string>
   <string name="exo_controls_next_description">Lagu seterusnya</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Jangan ulang</string>
   <string name="exo_controls_repeat_one_description">Ulang satu</string>
   <string name="exo_controls_repeat_all_description">Ulang semua</string>
-  <string name="exo_controls_shuffle_description">Rombak</string>
+  <string name="exo_controls_shuffle_on_description">Hidupkan rombak</string>
+  <string name="exo_controls_shuffle_off_description">Matikan rombak</string>
   <string name="exo_controls_fullscreen_description">Mod skrin penuh</string>
   <string name="exo_controls_vr_description">Mod VR</string>
   <string name="exo_download_description">Muat turun</string>
diff --git a/library/ui/src/main/res/values-my/strings.xml b/library/ui/src/main/res/values-my/strings.xml
index b30b76d516..44c45ef77d 100644
--- a/library/ui/src/main/res/values-my/strings.xml
+++ b/library/ui/src/main/res/values-my/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">ယခင် တစ်ပုဒ်</string>
   <string name="exo_controls_next_description">နောက် တစ်ပုဒ်</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">မည်သည်ကိုမျှ ပြန်မကျော့ရန်</string>
   <string name="exo_controls_repeat_one_description">တစ်ခုကို ပြန်ကျော့ရန်</string>
   <string name="exo_controls_repeat_all_description">အားလုံး ပြန်ကျော့ရန်</string>
-  <string name="exo_controls_shuffle_description">ရောသမမွှေ</string>
+  <string name="exo_controls_shuffle_on_description">ရောသမမွှေကို ဖွင့်ထားသည်</string>
+  <string name="exo_controls_shuffle_off_description">ရောသမမွှေကို ပိတ်ထားသည်</string>
   <string name="exo_controls_fullscreen_description">မျက်နှာပြင်အပြည့် မုဒ်</string>
   <string name="exo_controls_vr_description">VR မုဒ်</string>
   <string name="exo_download_description">ဒေါင်းလုဒ် လုပ်ရန်</string>
diff --git a/library/ui/src/main/res/values-nb/strings.xml b/library/ui/src/main/res/values-nb/strings.xml
index f2847dd829..a0018d4a36 100644
--- a/library/ui/src/main/res/values-nb/strings.xml
+++ b/library/ui/src/main/res/values-nb/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Forrige spor</string>
   <string name="exo_controls_next_description">Neste spor</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Ikke gjenta noen</string>
   <string name="exo_controls_repeat_one_description">Gjenta én</string>
   <string name="exo_controls_repeat_all_description">Gjenta alle</string>
-  <string name="exo_controls_shuffle_description">Tilfeldig rekkefølge</string>
+  <string name="exo_controls_shuffle_on_description">Tilfeldig rekkefølge er på</string>
+  <string name="exo_controls_shuffle_off_description">Tilfeldig rekkefølge er av</string>
   <string name="exo_controls_fullscreen_description">Fullskjermmodus</string>
   <string name="exo_controls_vr_description">VR-modus</string>
   <string name="exo_download_description">Last ned</string>
diff --git a/library/ui/src/main/res/values-ne/strings.xml b/library/ui/src/main/res/values-ne/strings.xml
index ff56480df1..500b80ec09 100644
--- a/library/ui/src/main/res/values-ne/strings.xml
+++ b/library/ui/src/main/res/values-ne/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">अघिल्लो ट्रयाक</string>
   <string name="exo_controls_next_description">अर्को ट्र्याक</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">कुनै पनि नदोहोर्‍याउनुहोस्</string>
   <string name="exo_controls_repeat_one_description">एउटा दोहोर्‍याउनुहोस्</string>
   <string name="exo_controls_repeat_all_description">सबै दोहोर्‍याउनुहोस्</string>
-  <string name="exo_controls_shuffle_description">मिसाउनुहोस्</string>
+  <string name="exo_controls_shuffle_on_description">मिसाउने सुविधा सक्रिय छ</string>
+  <string name="exo_controls_shuffle_off_description">मिसाउने सुविधा निष्क्रिय छ</string>
   <string name="exo_controls_fullscreen_description">पूर्ण स्क्रिन मोड</string>
   <string name="exo_controls_vr_description">VR मोड</string>
   <string name="exo_download_description">डाउनलोड गर्नुहोस्</string>
diff --git a/library/ui/src/main/res/values-nl/strings.xml b/library/ui/src/main/res/values-nl/strings.xml
index 3fbf113f1e..16b78039f5 100644
--- a/library/ui/src/main/res/values-nl/strings.xml
+++ b/library/ui/src/main/res/values-nl/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Vorige track</string>
   <string name="exo_controls_next_description">Volgende track</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Niets herhalen</string>
   <string name="exo_controls_repeat_one_description">Eén herhalen</string>
   <string name="exo_controls_repeat_all_description">Alles herhalen</string>
-  <string name="exo_controls_shuffle_description">Shuffle</string>
+  <string name="exo_controls_shuffle_on_description">Shuffle aan</string>
+  <string name="exo_controls_shuffle_off_description">Shuffle uit</string>
   <string name="exo_controls_fullscreen_description">Modus \'Volledig scherm\'</string>
   <string name="exo_controls_vr_description">VR-modus</string>
   <string name="exo_download_description">Downloaden</string>
diff --git a/library/ui/src/main/res/values-pa/strings.xml b/library/ui/src/main/res/values-pa/strings.xml
index 9f25759878..2f3bcf9e3d 100644
--- a/library/ui/src/main/res/values-pa/strings.xml
+++ b/library/ui/src/main/res/values-pa/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">ਪਿਛਲਾ ਟਰੈਕ</string>
   <string name="exo_controls_next_description">ਅਗਲਾ ਟਰੈਕ</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">ਕਿਸੇ ਨੂੰ ਨਾ ਦੁਹਰਾਓ</string>
   <string name="exo_controls_repeat_one_description">ਇੱਕ ਵਾਰ ਦੁਹਰਾਓ</string>
   <string name="exo_controls_repeat_all_description">ਸਾਰਿਆਂ ਨੂੰ ਦੁਹਰਾਓ</string>
-  <string name="exo_controls_shuffle_description">ਬੇਤਰਤੀਬ ਕਰੋ</string>
+  <string name="exo_controls_shuffle_on_description">\'ਬੇਤਰਤੀਬ ਕਰੋ\' ਮੋਡ ਚਾਲੂ ਹੈ</string>
+  <string name="exo_controls_shuffle_off_description">\'ਬੇਤਰਤੀਬ ਕਰੋ\' ਮੋਡ ਬੰਦ ਹੈ</string>
   <string name="exo_controls_fullscreen_description">ਪੂਰੀ-ਸਕ੍ਰੀਨ ਮੋਡ</string>
   <string name="exo_controls_vr_description">VR ਮੋਡ</string>
   <string name="exo_download_description">ਡਾਊਨਲੋਡ ਕਰੋ</string>
diff --git a/library/ui/src/main/res/values-pl/strings.xml b/library/ui/src/main/res/values-pl/strings.xml
index 8df3b62b0c..1c5a52c81e 100644
--- a/library/ui/src/main/res/values-pl/strings.xml
+++ b/library/ui/src/main/res/values-pl/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Poprzedni utwór</string>
   <string name="exo_controls_next_description">Następny utwór</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Nie powtarzaj</string>
   <string name="exo_controls_repeat_one_description">Powtórz jeden</string>
   <string name="exo_controls_repeat_all_description">Powtórz wszystkie</string>
-  <string name="exo_controls_shuffle_description">Odtwarzanie losowe</string>
+  <string name="exo_controls_shuffle_on_description">Włącz odtwarzanie losowe</string>
+  <string name="exo_controls_shuffle_off_description">Wyłącz odtwarzanie losowe</string>
   <string name="exo_controls_fullscreen_description">Tryb pełnoekranowy</string>
   <string name="exo_controls_vr_description">Tryb VR</string>
   <string name="exo_download_description">Pobierz</string>
diff --git a/library/ui/src/main/res/values-pt-rPT/strings.xml b/library/ui/src/main/res/values-pt-rPT/strings.xml
index 188e18f6b5..529e554dbd 100644
--- a/library/ui/src/main/res/values-pt-rPT/strings.xml
+++ b/library/ui/src/main/res/values-pt-rPT/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Faixa anterior</string>
   <string name="exo_controls_next_description">Faixa seguinte</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Não repetir nenhum</string>
   <string name="exo_controls_repeat_one_description">Repetir um</string>
   <string name="exo_controls_repeat_all_description">Repetir tudo</string>
-  <string name="exo_controls_shuffle_description">Reproduzir aleatoriamente</string>
+  <string name="exo_controls_shuffle_on_description">Reprodução aleatória ativada</string>
+  <string name="exo_controls_shuffle_off_description">Reprodução aleatória desativ.</string>
   <string name="exo_controls_fullscreen_description">Modo de ecrã inteiro</string>
   <string name="exo_controls_vr_description">Modo de RV</string>
   <string name="exo_download_description">Transferir</string>
diff --git a/library/ui/src/main/res/values-pt/strings.xml b/library/ui/src/main/res/values-pt/strings.xml
index 9e83387a76..8704bf895c 100644
--- a/library/ui/src/main/res/values-pt/strings.xml
+++ b/library/ui/src/main/res/values-pt/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Faixa anterior</string>
   <string name="exo_controls_next_description">Próxima faixa</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Não repetir</string>
   <string name="exo_controls_repeat_one_description">Repetir uma</string>
   <string name="exo_controls_repeat_all_description">Repetir tudo</string>
-  <string name="exo_controls_shuffle_description">Aleatório</string>
+  <string name="exo_controls_shuffle_on_description">Ordem aleatória ativada</string>
+  <string name="exo_controls_shuffle_off_description">Ordem aleatória desativada</string>
   <string name="exo_controls_fullscreen_description">Modo de tela cheia</string>
   <string name="exo_controls_vr_description">Modo RV</string>
   <string name="exo_download_description">Fazer o download</string>
diff --git a/library/ui/src/main/res/values-ro/strings.xml b/library/ui/src/main/res/values-ro/strings.xml
index 9bb8cfc8ee..15a5bf3cd6 100644
--- a/library/ui/src/main/res/values-ro/strings.xml
+++ b/library/ui/src/main/res/values-ro/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Melodia anterioară</string>
   <string name="exo_controls_next_description">Următoarea înregistrare</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Nu repetați niciunul</string>
   <string name="exo_controls_repeat_one_description">Repetați unul</string>
   <string name="exo_controls_repeat_all_description">Repetați-le pe toate</string>
-  <string name="exo_controls_shuffle_description">Redați aleatoriu</string>
+  <string name="exo_controls_shuffle_on_description">Redare aleatorie activată</string>
+  <string name="exo_controls_shuffle_off_description">Redare aleatorie dezactivată</string>
   <string name="exo_controls_fullscreen_description">Modul Ecran complet</string>
   <string name="exo_controls_vr_description">Mod RV</string>
   <string name="exo_download_description">Descărcați</string>
diff --git a/library/ui/src/main/res/values-ru/strings.xml b/library/ui/src/main/res/values-ru/strings.xml
index e66a282da4..f45d8bd2eb 100644
--- a/library/ui/src/main/res/values-ru/strings.xml
+++ b/library/ui/src/main/res/values-ru/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Предыдущий трек</string>
   <string name="exo_controls_next_description">Следующий трек</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Не повторять</string>
   <string name="exo_controls_repeat_one_description">Повторять трек</string>
   <string name="exo_controls_repeat_all_description">Повторять все</string>
-  <string name="exo_controls_shuffle_description">Перемешать</string>
+  <string name="exo_controls_shuffle_on_description">Перемешивание включено</string>
+  <string name="exo_controls_shuffle_off_description">Перемешивание отключено</string>
   <string name="exo_controls_fullscreen_description">Полноэкранный режим</string>
   <string name="exo_controls_vr_description">VR-режим</string>
   <string name="exo_download_description">Скачать</string>
diff --git a/library/ui/src/main/res/values-si/strings.xml b/library/ui/src/main/res/values-si/strings.xml
index b6bfb1848f..5e34550886 100644
--- a/library/ui/src/main/res/values-si/strings.xml
+++ b/library/ui/src/main/res/values-si/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">පෙර ඛණ්ඩය</string>
   <string name="exo_controls_next_description">ඊළඟ ඛණ්ඩය</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">කිසිවක් පුනරාවර්තනය නොකරන්න</string>
   <string name="exo_controls_repeat_one_description">එකක් පුනරාවර්තනය කරන්න</string>
   <string name="exo_controls_repeat_all_description">සියල්ල පුනරාවර්තනය කරන්න</string>
-  <string name="exo_controls_shuffle_description">කලවම් කරන්න</string>
+  <string name="exo_controls_shuffle_on_description">කලවම් කිරීම ක්‍රියාත්මකයි</string>
+  <string name="exo_controls_shuffle_off_description">කලවම් කිරීම ක්‍රියා විරහිතයි</string>
   <string name="exo_controls_fullscreen_description">සම්පූර්ණ තිර ප්‍රකාරය</string>
   <string name="exo_controls_vr_description">VR ප්‍රකාරය</string>
   <string name="exo_download_description">බාගන්න</string>
diff --git a/library/ui/src/main/res/values-sk/strings.xml b/library/ui/src/main/res/values-sk/strings.xml
index 6d5ddaea28..44b0df1871 100644
--- a/library/ui/src/main/res/values-sk/strings.xml
+++ b/library/ui/src/main/res/values-sk/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Predchádzajúca skladba</string>
   <string name="exo_controls_next_description">Ďalšia skladba</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Neopakovať</string>
   <string name="exo_controls_repeat_one_description">Opakovať jednu</string>
   <string name="exo_controls_repeat_all_description">Opakovať všetko</string>
-  <string name="exo_controls_shuffle_description">Náhodne prehrávať</string>
+  <string name="exo_controls_shuffle_on_description">Náhodné prehrávanie je zapnuté</string>
+  <string name="exo_controls_shuffle_off_description">Náhodné prehrávanie je vypnuté</string>
   <string name="exo_controls_fullscreen_description">Režim celej obrazovky</string>
   <string name="exo_controls_vr_description">režim VR</string>
   <string name="exo_download_description">Stiahnuť</string>
diff --git a/library/ui/src/main/res/values-sl/strings.xml b/library/ui/src/main/res/values-sl/strings.xml
index 1e3adff704..a7521fedcf 100644
--- a/library/ui/src/main/res/values-sl/strings.xml
+++ b/library/ui/src/main/res/values-sl/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Prejšnja skladba</string>
   <string name="exo_controls_next_description">Naslednja skladba</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Brez ponavljanja</string>
   <string name="exo_controls_repeat_one_description">Ponavljanje ene</string>
   <string name="exo_controls_repeat_all_description">Ponavljanje vseh</string>
-  <string name="exo_controls_shuffle_description">Naključno predvajanje</string>
+  <string name="exo_controls_shuffle_on_description">Naklj. predvajanje vklopljeno</string>
+  <string name="exo_controls_shuffle_off_description">Naklj. predvajanje izklopljeno</string>
   <string name="exo_controls_fullscreen_description">Celozaslonski način</string>
   <string name="exo_controls_vr_description">Način VR</string>
   <string name="exo_download_description">Prenos</string>
diff --git a/library/ui/src/main/res/values-sq/strings.xml b/library/ui/src/main/res/values-sq/strings.xml
index d5b8903ed7..9cded5468e 100644
--- a/library/ui/src/main/res/values-sq/strings.xml
+++ b/library/ui/src/main/res/values-sq/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Kënga e mëparshme</string>
   <string name="exo_controls_next_description">Kënga tjetër</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Mos përsërit asnjë</string>
   <string name="exo_controls_repeat_one_description">Përsërit një</string>
   <string name="exo_controls_repeat_all_description">Përsërit të gjitha</string>
-  <string name="exo_controls_shuffle_description">Përziej</string>
+  <string name="exo_controls_shuffle_on_description">Përzierja aktive</string>
+  <string name="exo_controls_shuffle_off_description">Përzierja joaktive</string>
   <string name="exo_controls_fullscreen_description">Modaliteti me ekran të plotë</string>
   <string name="exo_controls_vr_description">Modaliteti RV</string>
   <string name="exo_download_description">Shkarko</string>
diff --git a/library/ui/src/main/res/values-sr/strings.xml b/library/ui/src/main/res/values-sr/strings.xml
index b45fd8ab03..ec0523161b 100644
--- a/library/ui/src/main/res/values-sr/strings.xml
+++ b/library/ui/src/main/res/values-sr/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Претходна песма</string>
   <string name="exo_controls_next_description">Следећа песма</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Не понављај ниједну</string>
   <string name="exo_controls_repeat_one_description">Понови једну</string>
   <string name="exo_controls_repeat_all_description">Понови све</string>
-  <string name="exo_controls_shuffle_description">Пусти насумично</string>
+  <string name="exo_controls_shuffle_on_description">Насумично пуштање је укључено</string>
+  <string name="exo_controls_shuffle_off_description">Насумично пуштање је искључено</string>
   <string name="exo_controls_fullscreen_description">Режим целог екрана</string>
   <string name="exo_controls_vr_description">ВР режим</string>
   <string name="exo_download_description">Преузми</string>
diff --git a/library/ui/src/main/res/values-sv/strings.xml b/library/ui/src/main/res/values-sv/strings.xml
index 7af95a4632..db65628119 100644
--- a/library/ui/src/main/res/values-sv/strings.xml
+++ b/library/ui/src/main/res/values-sv/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Föregående spår</string>
   <string name="exo_controls_next_description">Nästa spår</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Upprepa inga</string>
   <string name="exo_controls_repeat_one_description">Upprepa en</string>
   <string name="exo_controls_repeat_all_description">Upprepa alla</string>
-  <string name="exo_controls_shuffle_description">Blanda spår</string>
+  <string name="exo_controls_shuffle_on_description">Blanda spår</string>
+  <string name="exo_controls_shuffle_off_description">Blanda inte spår</string>
   <string name="exo_controls_fullscreen_description">Helskärmsläge</string>
   <string name="exo_controls_vr_description">VR-läge</string>
   <string name="exo_download_description">Ladda ned</string>
diff --git a/library/ui/src/main/res/values-sw/strings.xml b/library/ui/src/main/res/values-sw/strings.xml
index 1cdd325278..c237a24326 100644
--- a/library/ui/src/main/res/values-sw/strings.xml
+++ b/library/ui/src/main/res/values-sw/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Wimbo uliotangulia</string>
   <string name="exo_controls_next_description">Wimbo unaofuata</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Usirudie yoyote</string>
   <string name="exo_controls_repeat_one_description">Rudia moja</string>
   <string name="exo_controls_repeat_all_description">Rudia zote</string>
-  <string name="exo_controls_shuffle_description">Changanya</string>
+  <string name="exo_controls_shuffle_on_description">Hali ya kuchanganya imewashwa</string>
+  <string name="exo_controls_shuffle_off_description">Hali ya kuchanganya imezimwa</string>
   <string name="exo_controls_fullscreen_description">Hali ya skrini nzima</string>
   <string name="exo_controls_vr_description">Hali ya Uhalisia Pepe</string>
   <string name="exo_download_description">Pakua</string>
diff --git a/library/ui/src/main/res/values-ta/strings.xml b/library/ui/src/main/res/values-ta/strings.xml
index 2b2b9e13d6..e8b9367ee7 100644
--- a/library/ui/src/main/res/values-ta/strings.xml
+++ b/library/ui/src/main/res/values-ta/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">முந்தைய டிராக்</string>
   <string name="exo_controls_next_description">அடுத்த டிராக்</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">எதையும் மீண்டும் இயக்காதே</string>
   <string name="exo_controls_repeat_one_description">இதை மட்டும் மீண்டும் இயக்கு</string>
   <string name="exo_controls_repeat_all_description">அனைத்தையும் மீண்டும் இயக்கு</string>
-  <string name="exo_controls_shuffle_description">வரிசை மாற்றி இயக்கு</string>
+  <string name="exo_controls_shuffle_on_description">கலைத்துப் போடுதல்: ஆன்</string>
+  <string name="exo_controls_shuffle_off_description">கலைத்துப் போடுதல்: ஆஃப்</string>
   <string name="exo_controls_fullscreen_description">முழுத்திரைப் பயன்முறை</string>
   <string name="exo_controls_vr_description">VR பயன்முறை</string>
   <string name="exo_download_description">பதிவிறக்கும் பட்டன்</string>
diff --git a/library/ui/src/main/res/values-te/strings.xml b/library/ui/src/main/res/values-te/strings.xml
index ea344b0345..413dad984e 100644
--- a/library/ui/src/main/res/values-te/strings.xml
+++ b/library/ui/src/main/res/values-te/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">మునుపటి ట్రాక్</string>
   <string name="exo_controls_next_description">తదుపరి ట్రాక్</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">దేన్నీ పునరావృతం చేయకండి</string>
   <string name="exo_controls_repeat_one_description">ఒకదాన్ని పునరావృతం చేయండి</string>
   <string name="exo_controls_repeat_all_description">అన్నింటినీ పునరావృతం చేయండి</string>
-  <string name="exo_controls_shuffle_description">షఫుల్ చేయండి</string>
+  <string name="exo_controls_shuffle_on_description">షఫుల్‌ను ఆన్ చేస్తుంది</string>
+  <string name="exo_controls_shuffle_off_description">షఫుల్‌ను ఆఫ్ చేస్తుంది</string>
   <string name="exo_controls_fullscreen_description">పూర్తి స్క్రీన్ మోడ్</string>
   <string name="exo_controls_vr_description">వర్చువల్ రియాలిటీ మోడ్</string>
   <string name="exo_download_description">డౌన్‌లోడ్ చేయి</string>
diff --git a/library/ui/src/main/res/values-th/strings.xml b/library/ui/src/main/res/values-th/strings.xml
index 3cd933ccf1..41a551dde7 100644
--- a/library/ui/src/main/res/values-th/strings.xml
+++ b/library/ui/src/main/res/values-th/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">แทร็กก่อนหน้า</string>
   <string name="exo_controls_next_description">แทร็กถัดไป</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">ไม่เล่นซ้ำ</string>
   <string name="exo_controls_repeat_one_description">เล่นซ้ำเพลงเดียว</string>
   <string name="exo_controls_repeat_all_description">เล่นซ้ำทั้งหมด</string>
-  <string name="exo_controls_shuffle_description">สุ่ม</string>
+  <string name="exo_controls_shuffle_on_description">เปิดการสุ่มเพลงอยู่</string>
+  <string name="exo_controls_shuffle_off_description">ปิดการสุ่มเพลงอยู่</string>
   <string name="exo_controls_fullscreen_description">โหมดเต็มหน้าจอ</string>
   <string name="exo_controls_vr_description">โหมด VR</string>
   <string name="exo_download_description">ดาวน์โหลด</string>
diff --git a/library/ui/src/main/res/values-tl/strings.xml b/library/ui/src/main/res/values-tl/strings.xml
index 21852c5011..b4e3caa4dd 100644
--- a/library/ui/src/main/res/values-tl/strings.xml
+++ b/library/ui/src/main/res/values-tl/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Nakaraang track</string>
   <string name="exo_controls_next_description">Susunod na track</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Walang uulitin</string>
   <string name="exo_controls_repeat_one_description">Mag-ulit ng isa</string>
   <string name="exo_controls_repeat_all_description">Ulitin lahat</string>
-  <string name="exo_controls_shuffle_description">I-shuffle</string>
+  <string name="exo_controls_shuffle_on_description">Naka-on ang pag-shuffle</string>
+  <string name="exo_controls_shuffle_off_description">Naka-off ang pag-shuffle</string>
   <string name="exo_controls_fullscreen_description">Fullscreen mode</string>
   <string name="exo_controls_vr_description">VR mode</string>
   <string name="exo_download_description">I-download</string>
diff --git a/library/ui/src/main/res/values-tr/strings.xml b/library/ui/src/main/res/values-tr/strings.xml
index 2fbf36514f..c6c89d683a 100644
--- a/library/ui/src/main/res/values-tr/strings.xml
+++ b/library/ui/src/main/res/values-tr/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Önceki parça</string>
   <string name="exo_controls_next_description">Sonraki parça</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Hiçbirini tekrarlama</string>
   <string name="exo_controls_repeat_one_description">Birini tekrarla</string>
   <string name="exo_controls_repeat_all_description">Tümünü tekrarla</string>
-  <string name="exo_controls_shuffle_description">Karıştır</string>
+  <string name="exo_controls_shuffle_on_description">Karıştırma açık</string>
+  <string name="exo_controls_shuffle_off_description">Karıştırma kapalı</string>
   <string name="exo_controls_fullscreen_description">Tam ekran modu</string>
   <string name="exo_controls_vr_description">VR modu</string>
   <string name="exo_download_description">İndir</string>
diff --git a/library/ui/src/main/res/values-uk/strings.xml b/library/ui/src/main/res/values-uk/strings.xml
index 5d338b61af..11b19dd58c 100644
--- a/library/ui/src/main/res/values-uk/strings.xml
+++ b/library/ui/src/main/res/values-uk/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Попередня композиція</string>
   <string name="exo_controls_next_description">Наступна композиція</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Не повторювати</string>
   <string name="exo_controls_repeat_one_description">Повторити 1</string>
   <string name="exo_controls_repeat_all_description">Повторити всі</string>
-  <string name="exo_controls_shuffle_description">Перемішати</string>
+  <string name="exo_controls_shuffle_on_description">Перемішування ввімкнено</string>
+  <string name="exo_controls_shuffle_off_description">Перемішування вимкнено</string>
   <string name="exo_controls_fullscreen_description">Повноекранний режим</string>
   <string name="exo_controls_vr_description">Режим віртуальної реальності</string>
   <string name="exo_download_description">Завантажити</string>
diff --git a/library/ui/src/main/res/values-ur/strings.xml b/library/ui/src/main/res/values-ur/strings.xml
index aa98b0728e..886bc1d449 100644
--- a/library/ui/src/main/res/values-ur/strings.xml
+++ b/library/ui/src/main/res/values-ur/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">پچھلا ٹریک</string>
   <string name="exo_controls_next_description">اگلا ٹریک</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">کسی کو نہ دہرائیں</string>
   <string name="exo_controls_repeat_one_description">ایک کو دہرائیں</string>
   <string name="exo_controls_repeat_all_description">سبھی کو دہرائیں</string>
-  <string name="exo_controls_shuffle_description">شفل کریں</string>
+  <string name="exo_controls_shuffle_on_description">شفل آن</string>
+  <string name="exo_controls_shuffle_off_description">شفل آف</string>
   <string name="exo_controls_fullscreen_description">پوری اسکرین والی وضع</string>
   <string name="exo_controls_vr_description">VR موڈ</string>
   <string name="exo_download_description">ڈاؤن لوڈ کریں</string>
diff --git a/library/ui/src/main/res/values-uz/strings.xml b/library/ui/src/main/res/values-uz/strings.xml
index 2dcf5a518d..b9688858cf 100644
--- a/library/ui/src/main/res/values-uz/strings.xml
+++ b/library/ui/src/main/res/values-uz/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Avvalgi trek</string>
   <string name="exo_controls_next_description">Keyingi trek</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Takrorlanmasin</string>
   <string name="exo_controls_repeat_one_description">Bittasini takrorlash</string>
   <string name="exo_controls_repeat_all_description">Hammasini takrorlash</string>
-  <string name="exo_controls_shuffle_description">Aralash</string>
+  <string name="exo_controls_shuffle_on_description">Tasodifiy ijro yoqilgan</string>
+  <string name="exo_controls_shuffle_off_description">Tasodifiy ijro yoqilmagan</string>
   <string name="exo_controls_fullscreen_description">Butun ekran rejimi</string>
   <string name="exo_controls_vr_description">VR rejimi</string>
   <string name="exo_download_description">Yuklab olish</string>
@@ -24,7 +39,7 @@
   <string name="exo_track_selection_title_text">Matn</string>
   <string name="exo_track_selection_none">Hech qanday</string>
   <string name="exo_track_selection_auto">Avtomatik</string>
-  <string name="exo_track_unknown">Notanish</string>
+  <string name="exo_track_unknown">Noaniq</string>
   <string name="exo_track_resolution">%1$d × %2$d</string>
   <string name="exo_track_mono">Mono</string>
   <string name="exo_track_stereo">Stereo</string>
diff --git a/library/ui/src/main/res/values-vi/strings.xml b/library/ui/src/main/res/values-vi/strings.xml
index 1cdb249ef0..3fbb842e9a 100644
--- a/library/ui/src/main/res/values-vi/strings.xml
+++ b/library/ui/src/main/res/values-vi/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Bản nhạc trước</string>
   <string name="exo_controls_next_description">Bản nhạc tiếp theo</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Không lặp lại</string>
   <string name="exo_controls_repeat_one_description">Lặp lại một</string>
   <string name="exo_controls_repeat_all_description">Lặp lại tất cả</string>
-  <string name="exo_controls_shuffle_description">Phát ngẫu nhiên</string>
+  <string name="exo_controls_shuffle_on_description">Chế độ trộn bài đang bật</string>
+  <string name="exo_controls_shuffle_off_description">Chế độ trộn bài đang tắt</string>
   <string name="exo_controls_fullscreen_description">Chế độ toàn màn hình</string>
   <string name="exo_controls_vr_description">Chế độ thực tế ảo</string>
   <string name="exo_download_description">Tải xuống</string>
diff --git a/library/ui/src/main/res/values-zh-rCN/strings.xml b/library/ui/src/main/res/values-zh-rCN/strings.xml
index fe21669ea4..0182adbe62 100644
--- a/library/ui/src/main/res/values-zh-rCN/strings.xml
+++ b/library/ui/src/main/res/values-zh-rCN/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">上一曲</string>
   <string name="exo_controls_next_description">下一曲</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">不重复播放</string>
   <string name="exo_controls_repeat_one_description">重复播放一项</string>
   <string name="exo_controls_repeat_all_description">全部重复播放</string>
-  <string name="exo_controls_shuffle_description">随机播放</string>
+  <string name="exo_controls_shuffle_on_description">随机播放功能已开启</string>
+  <string name="exo_controls_shuffle_off_description">随机播放功能已关闭</string>
   <string name="exo_controls_fullscreen_description">全屏模式</string>
   <string name="exo_controls_vr_description">VR 模式</string>
   <string name="exo_download_description">下载</string>
diff --git a/library/ui/src/main/res/values-zh-rHK/strings.xml b/library/ui/src/main/res/values-zh-rHK/strings.xml
index 56e0a1a53b..83076adea2 100644
--- a/library/ui/src/main/res/values-zh-rHK/strings.xml
+++ b/library/ui/src/main/res/values-zh-rHK/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">上一首曲目</string>
   <string name="exo_controls_next_description">下一首曲目</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">不重複播放</string>
   <string name="exo_controls_repeat_one_description">重複播放單一項目</string>
   <string name="exo_controls_repeat_all_description">全部重複播放</string>
-  <string name="exo_controls_shuffle_description">隨機播放</string>
+  <string name="exo_controls_shuffle_on_description">已開啟隨機播放功能</string>
+  <string name="exo_controls_shuffle_off_description">已關閉隨機播放功能</string>
   <string name="exo_controls_fullscreen_description">全螢幕模式</string>
   <string name="exo_controls_vr_description">虛擬現實模式</string>
   <string name="exo_download_description">下載</string>
diff --git a/library/ui/src/main/res/values-zh-rTW/strings.xml b/library/ui/src/main/res/values-zh-rTW/strings.xml
index 7b29f7924e..99d6ff8304 100644
--- a/library/ui/src/main/res/values-zh-rTW/strings.xml
+++ b/library/ui/src/main/res/values-zh-rTW/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">上一首曲目</string>
   <string name="exo_controls_next_description">下一首曲目</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">不重複播放</string>
   <string name="exo_controls_repeat_one_description">重複播放單一項目</string>
   <string name="exo_controls_repeat_all_description">重複播放所有項目</string>
-  <string name="exo_controls_shuffle_description">隨機播放</string>
+  <string name="exo_controls_shuffle_on_description">隨機播放已開啟</string>
+  <string name="exo_controls_shuffle_off_description">隨機播放已關閉</string>
   <string name="exo_controls_fullscreen_description">全螢幕模式</string>
   <string name="exo_controls_vr_description">虛擬實境模式</string>
   <string name="exo_download_description">下載</string>
diff --git a/library/ui/src/main/res/values-zu/strings.xml b/library/ui/src/main/res/values-zu/strings.xml
index 83cf9b2e97..60dc913b14 100644
--- a/library/ui/src/main/res/values-zu/strings.xml
+++ b/library/ui/src/main/res/values-zu/strings.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
   <string name="exo_controls_previous_description">Ithrekhi yangaphambilini</string>
   <string name="exo_controls_next_description">Ithrekhi elandelayo</string>
@@ -10,7 +24,8 @@
   <string name="exo_controls_repeat_off_description">Phinda okungekho</string>
   <string name="exo_controls_repeat_one_description">Phinda okukodwa</string>
   <string name="exo_controls_repeat_all_description">Phinda konke</string>
-  <string name="exo_controls_shuffle_description">Shova</string>
+  <string name="exo_controls_shuffle_on_description">Ukushova kuvuliwe</string>
+  <string name="exo_controls_shuffle_off_description">Ukushova kuvaliwe</string>
   <string name="exo_controls_fullscreen_description">Imodi yesikrini esigcwele</string>
   <string name="exo_controls_vr_description">Inqubo ye-VR</string>
   <string name="exo_download_description">Landa</string>
diff --git a/library/ui/src/main/res/values/constants.xml b/library/ui/src/main/res/values/constants.xml
index 9b374d8382..9bd616583e 100644
--- a/library/ui/src/main/res/values/constants.xml
+++ b/library/ui/src/main/res/values/constants.xml
@@ -18,6 +18,9 @@
   <dimen name="exo_media_button_width">71dp</dimen>
   <dimen name="exo_media_button_height">52dp</dimen>
 
+  <integer name="exo_media_button_opacity_percentage_enabled">100</integer>
+  <integer name="exo_media_button_opacity_percentage_disabled">33</integer>
+
   <color name="exo_error_message_background_color">#AA000000</color>
   <color name="exo_edit_mode_background_color">#FFF4F3F0</color>
 
diff --git a/library/ui/src/main/res/values/drawables.xml b/library/ui/src/main/res/values/drawables.xml
index b528c9cc9a..3cd9168726 100644
--- a/library/ui/src/main/res/values/drawables.xml
+++ b/library/ui/src/main/res/values/drawables.xml
@@ -1,4 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2019 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
 <resources>
   <drawable name="exo_controls_play">@drawable/exo_icon_play</drawable>
   <drawable name="exo_controls_pause">@drawable/exo_icon_pause</drawable>
diff --git a/library/ui/src/main/res/values/strings.xml b/library/ui/src/main/res/values/strings.xml
index bbb4aca8d5..f0282b4991 100644
--- a/library/ui/src/main/res/values/strings.xml
+++ b/library/ui/src/main/res/values/strings.xml
@@ -34,8 +34,10 @@
   <string name="exo_controls_repeat_one_description">Repeat one</string>
   <!-- Description for a button that controls the repeat mode of a media playback. In this mode the entire playlist is repeated. [CHAR LIMIT=30] -->
   <string name="exo_controls_repeat_all_description">Repeat all</string>
-  <!-- Description for a media control button that toggles whether shuffle mode is enabled. [CHAR LIMIT=30] -->
-  <string name="exo_controls_shuffle_description">Shuffle</string>
+  <!-- Description for a button that controls the shuffle mode of media playback. In this mode shuffle is on. [CHAR LIMIT=40] -->
+  <string name="exo_controls_shuffle_on_description">Shuffle on</string>
+  <!-- Description for a button that controls the shuffle mode of media playback. In this mode shuffle is off. [CHAR LIMIT=40] -->
+  <string name="exo_controls_shuffle_off_description">Shuffle off</string>
   <!-- Description for a media control button that toggles whether a video playback is fullscreen. [CHAR LIMIT=30] -->
   <string name="exo_controls_fullscreen_description">Fullscreen mode</string>
   <!-- Description for a media control button that toggles whether a video playback is in VR mode. [CHAR LIMIT=30] -->
diff --git a/library/ui/src/main/res/values/styles.xml b/library/ui/src/main/res/values/styles.xml
index 89d7a2fc8e..c458a3ea99 100644
--- a/library/ui/src/main/res/values/styles.xml
+++ b/library/ui/src/main/res/values/styles.xml
@@ -51,11 +51,6 @@
     <item name="android:contentDescription">@string/exo_controls_pause_description</item>
   </style>
 
-  <style name="ExoMediaButton.Shuffle">
-    <item name="android:src">@drawable/exo_controls_shuffle</item>
-    <item name="android:contentDescription">@string/exo_controls_shuffle_description</item>
-  </style>
-
   <style name="ExoMediaButton.VR">
     <item name="android:src">@drawable/exo_icon_vr</item>
     <item name="android:contentDescription">@string/exo_controls_vr_description</item>
diff --git a/playbacktests/src/androidTest/AndroidManifest.xml b/playbacktests/src/androidTest/AndroidManifest.xml
index be71884846..b6c6064227 100644
--- a/playbacktests/src/androidTest/AndroidManifest.xml
+++ b/playbacktests/src/androidTest/AndroidManifest.xml
@@ -23,7 +23,7 @@
   <uses-permission android:name="android.permission.WAKE_LOCK"/>
   <uses-sdk/>
 
-  <application android:debuggable="true"
+  <application
       android:allowBackup="false"
       tools:ignore="MissingApplicationIcon,HardcodedDebugMode">
     <uses-library android:name="android.test.runner"/>
diff --git a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeSampleStream.java b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeSampleStream.java
index a60c1c9c6d..ba604cb087 100644
--- a/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeSampleStream.java
+++ b/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeSampleStream.java
@@ -32,6 +32,7 @@
 
   private final Format format;
   private final @Nullable EventDispatcher eventDispatcher;
+  private final byte[] sampleData;
 
   private boolean notifiedDownstreamFormat;
   private boolean readFormat;
@@ -47,9 +48,23 @@
    */
   public FakeSampleStream(
       Format format, @Nullable EventDispatcher eventDispatcher, boolean shouldOutputSample) {
+    this(format, eventDispatcher, new byte[] {0});
+    readSample = !shouldOutputSample;
+  }
+
+  /**
+   * Creates fake sample stream which outputs the given {@link Format}, one sample with the provided
+   * bytes, then end of stream.
+   *
+   * @param format The {@link Format} to output.
+   * @param eventDispatcher An {@link EventDispatcher} to notify of read events.
+   * @param sampleData The sample data to output.
+   */
+  public FakeSampleStream(
+      Format format, @Nullable EventDispatcher eventDispatcher, byte[] sampleData) {
     this.format = format;
     this.eventDispatcher = eventDispatcher;
-    readSample = !shouldOutputSample;
+    this.sampleData = sampleData;
   }
 
   @Override
@@ -58,8 +73,8 @@ public boolean isReady() {
   }
 
   @Override
-  public int readData(FormatHolder formatHolder, DecoderInputBuffer buffer,
-      boolean formatRequired) {
+  public int readData(
+      FormatHolder formatHolder, DecoderInputBuffer buffer, boolean formatRequired) {
     if (eventDispatcher != null && !notifiedDownstreamFormat) {
       eventDispatcher.downstreamFormatChanged(
           C.TRACK_TYPE_UNKNOWN,
@@ -75,9 +90,8 @@ public int readData(FormatHolder formatHolder, DecoderInputBuffer buffer,
       return C.RESULT_FORMAT_READ;
     } else if (!readSample) {
       buffer.timeUs = 0;
-      buffer.ensureSpaceForWrite(1);
-      buffer.data.put((byte) 0);
-      buffer.flip();
+      buffer.ensureSpaceForWrite(sampleData.length);
+      buffer.data.put(sampleData);
       readSample = true;
       return C.RESULT_BUFFER_READ;
     } else {
@@ -95,5 +109,4 @@ public void maybeThrowError() throws IOException {
   public int skipData(long positionUs) {
     return 0;
   }
-
 }
diff --git a/testutils_robolectric/src/main/java/com/google/android/exoplayer2/testutil/StubExoPlayer.java b/testutils_robolectric/src/main/java/com/google/android/exoplayer2/testutil/StubExoPlayer.java
index a0d8c7f9d8..51ac5a986d 100644
--- a/testutils_robolectric/src/main/java/com/google/android/exoplayer2/testutil/StubExoPlayer.java
+++ b/testutils_robolectric/src/main/java/com/google/android/exoplayer2/testutil/StubExoPlayer.java
@@ -79,6 +79,12 @@ public int getPlaybackState() {
     throw new UnsupportedOperationException();
   }
 
+  @Override
+  @PlaybackSuppressionReason
+  public int getPlaybackSuppressionReason() {
+    throw new UnsupportedOperationException();
+  }
+
   @Override
   public ExoPlaybackException getPlaybackError() {
     throw new UnsupportedOperationException();
