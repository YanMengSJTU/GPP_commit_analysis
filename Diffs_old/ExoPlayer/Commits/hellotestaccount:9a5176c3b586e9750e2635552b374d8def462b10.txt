diff --git a/library/core/src/main/java/com/google/android/exoplayer2/offline/QueuedDownload.java b/library/core/src/main/java/com/google/android/exoplayer2/offline/QueuedDownload.java
index fdcab9dbd7..9ee02f7afb 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/offline/QueuedDownload.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/offline/QueuedDownload.java
@@ -21,8 +21,7 @@
     private ArrayList<Thread> parallelThreadList = new ArrayList<>();
     private int maxQueueSize;
 
-    private volatile InterruptedException interruptedExceptionHolder = null;
-    private volatile IOException ioExceptionHolder = null;
+    private volatile Throwable anyExceptionHolder = null;
 
 
     public QueuedDownload(List<T> itemsToDownload, int size, Callback<T> callback) {
@@ -32,7 +31,7 @@ public QueuedDownload(List<T> itemsToDownload, int size, Callback<T> callback) {
     }
 
 
-    void download() throws IOException, InterruptedException {
+    void download() throws Throwable {
 
         int size = itemsToDownload.size();
 
@@ -66,16 +65,10 @@ void download() throws IOException, InterruptedException {
             }
         }
 
-        if (interruptedExceptionHolder != null) {
+        if (anyExceptionHolder != null) {
             killThreads();
-            throw interruptedExceptionHolder;
+            throw anyExceptionHolder;
         }
-
-        if (ioExceptionHolder != null) {
-            killThreads();
-            throw ioExceptionHolder;
-        }
-
     }
 
     private void killThreads() {
@@ -109,11 +102,8 @@ private Thread createThread(ArrayList<T> queue, int type) {
                 execute(queue, type);
                 notifyMainIfEmpty();
 
-            } catch (IOException e) {
-                ioExceptionHolder = e;
-                notifyMain();
-            } catch (InterruptedException e) {
-                interruptedExceptionHolder = e;
+            } catch (Throwable e) {
+                anyExceptionHolder = e;
                 notifyMain();
             }
         });
@@ -138,7 +128,7 @@ private void execute(ArrayList<T> queue, int type) throws IOException, Interrupt
 
         while (!queue.isEmpty()) {
 
-            if(ioExceptionHolder != null || interruptedExceptionHolder != null) {
+            if(anyExceptionHolder != null) {
                 return;
             }
             T item = queue.remove(0);
