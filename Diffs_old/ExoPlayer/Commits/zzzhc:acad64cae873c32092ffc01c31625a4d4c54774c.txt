diff --git a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
index c032fe1192..1734a05e86 100644
--- a/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
+++ b/extensions/vp9/src/main/java/com/google/android/exoplayer2/ext/vp9/LibvpxVideoRenderer.java
@@ -499,7 +499,7 @@ protected void onInputFormatChanged(Format newFormat) throws ExoPlaybackExceptio
         : oldFormat.drmInitData);
     if (drmInitDataChanged) {
       if (format.drmInitData != null) {
-        if (formatHolder.decryptionResourceIsProvided) {
+        if (formatHolder.includesDrmSession) {
           setSourceDrmSession((DrmSession<ExoMediaCrypto>) formatHolder.drmSession);
         } else {
           if (drmSessionManager == null) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/FormatHolder.java b/library/core/src/main/java/com/google/android/exoplayer2/FormatHolder.java
index bd73eaf4fb..c1b2ace9b7 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/FormatHolder.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/FormatHolder.java
@@ -23,13 +23,10 @@
  */
 public final class FormatHolder {
 
-  /**
-   * Whether the object expected to populate {@link #format} is also expected to populate {@link
-   * #drmSession}.
-   */
+  /** Whether the {@link #format} setter also sets the {@link #drmSession} field. */
   // TODO: Remove once all Renderers and MediaSources have migrated to the new DRM model [Internal
   // ref: b/129764794].
-  public boolean decryptionResourceIsProvided;
+  public boolean includesDrmSession;
 
   /** An accompanying context for decrypting samples in the format. */
   @Nullable public DrmSession<?> drmSession;
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java
index c79208dda6..93c60f2917 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/audio/SimpleDecoderAudioRenderer.java
@@ -665,7 +665,7 @@ private void onInputFormatChanged(Format newFormat) throws ExoPlaybackException
     if (drmInitDataChanged) {
       if (inputFormat.drmInitData != null) {
 
-        if (formatHolder.decryptionResourceIsProvided) {
+        if (formatHolder.includesDrmSession) {
           setSourceDrmSession((DrmSession<ExoMediaCrypto>) formatHolder.drmSession);
         } else {
           if (drmSessionManager == null) {
diff --git a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java
index 7ed5e09e41..ef3cb0bbe3 100644
--- a/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java
+++ b/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecRenderer.java
@@ -1200,7 +1200,7 @@ protected void onInputFormatChanged(FormatHolder formatHolder) throws ExoPlaybac
         !Util.areEqual(newFormat.drmInitData, oldFormat == null ? null : oldFormat.drmInitData);
     if (drmInitDataChanged) {
       if (newFormat.drmInitData != null) {
-        if (formatHolder.decryptionResourceIsProvided) {
+        if (formatHolder.includesDrmSession) {
           setSourceDrmSession((DrmSession<FrameworkMediaCrypto>) formatHolder.drmSession);
         } else {
           if (drmSessionManager == null) {
