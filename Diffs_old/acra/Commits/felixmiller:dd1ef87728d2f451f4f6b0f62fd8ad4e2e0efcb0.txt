diff --git a/src/main/java/org/acra/ErrorReporter.java b/src/main/java/org/acra/ErrorReporter.java
index 6b6cd760..47c5cec6 100644
--- a/src/main/java/org/acra/ErrorReporter.java
+++ b/src/main/java/org/acra/ErrorReporter.java
@@ -285,6 +285,15 @@ public void handleSilentException(@Nullable Throwable e) {
                 .build(reportExecutor);
     }
 
+    public void handleSilentException(@Nullable Throwable e, String[] logcatArgs) {
+        performDeprecatedReportPriming();
+        new ReportBuilder()
+                .exception(e)
+                .sendSilently()
+                .customLogcatArguments(logcatArgs)
+                .build(reportExecutor);
+    }
+
     /**
      * Enable or disable this ErrorReporter. By default it is enabled.
      *
diff --git a/src/main/java/org/acra/builder/ReportBuilder.java b/src/main/java/org/acra/builder/ReportBuilder.java
index fa892481..696fafcb 100644
--- a/src/main/java/org/acra/builder/ReportBuilder.java
+++ b/src/main/java/org/acra/builder/ReportBuilder.java
@@ -17,6 +17,7 @@
     private Thread uncaughtExceptionThread;
     private Throwable exception;
     private final Map<String, String> customData = new HashMap<String, String>();
+    private String[] logcatArgs;
 
     private boolean sendSilently = false;
     private boolean endApplication = false;
@@ -107,6 +108,16 @@ public ReportBuilder customData(@NonNull String key, String value) {
         return customData;
     }
 
+    public ReportBuilder customLogcatArguments(String[] logcatArgs) {
+        this.logcatArgs = logcatArgs;
+        return this;
+    }
+
+    @Nullable
+    public String[] getLogcatArgs() {
+        return logcatArgs;
+    }
+
     /**
      * Forces the report to be sent silently, ignoring the default interaction mode set in the config
      *
diff --git a/src/main/java/org/acra/collector/LogCatCollector.java b/src/main/java/org/acra/collector/LogCatCollector.java
index 96823e5f..3d8b88b1 100644
--- a/src/main/java/org/acra/collector/LogCatCollector.java
+++ b/src/main/java/org/acra/collector/LogCatCollector.java
@@ -33,6 +33,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Set;
 
@@ -71,7 +72,7 @@
      * report generation time and a bigger footprint on the device data
      * plan consumption.
      */
-    private String collectLogCat(@Nullable String bufferName) {
+    private String collectLogCat(@Nullable String bufferName, @Nullable String[] argumentsOverwrite) {
         final int myPid = android.os.Process.myPid();
         final String myPidStr = config.logcatFilterByPid() && myPid > 0 ? Integer.toString(myPid) + "):" : null;
 
@@ -85,7 +86,13 @@ private String collectLogCat(@Nullable String bufferName) {
         // "-t n" argument has been introduced in FroYo (API level 8). For
         // devices with lower API level, we will have to emulate its job.
         final int tailCount;
-        final List<String> logcatArgumentsList = config.logcatArguments();
+        List<String> logcatArgumentsList = null;
+        if (argumentsOverwrite != null) {
+            logcatArgumentsList = Arrays.asList(argumentsOverwrite);
+        }
+        else {
+            logcatArgumentsList = config.logcatArguments();
+        }
 
         final int tailIndex = logcatArgumentsList.indexOf("-t");
         if (tailIndex > -1 && tailIndex < logcatArgumentsList.size()) {
@@ -137,7 +144,7 @@ String collect(ReportField reportField, ReportBuilder reportBuilder) {
                 bufferName = "radio";
                 break;
         }
-        return collectLogCat(bufferName);
+        return collectLogCat(bufferName,reportBuilder.getLogcatArgs());
     }
 
     /**
