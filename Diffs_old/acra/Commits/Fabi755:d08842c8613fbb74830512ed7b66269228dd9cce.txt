diff --git a/src/main/java/org/acra/ReportField.java b/src/main/java/org/acra/ReportField.java
index 562e6d96..87dfe78d 100644
--- a/src/main/java/org/acra/ReportField.java
+++ b/src/main/java/org/acra/ReportField.java
@@ -108,6 +108,10 @@ public boolean containsKeyValuePairs() {
             return true;
         }
     },
+    /**
+     * Type of exception
+     */
+    ERROR_LEVEL,
     /**
      * The Holy Stack Trace.
      */
diff --git a/src/main/java/org/acra/collector/CrashReportDataFactory.java b/src/main/java/org/acra/collector/CrashReportDataFactory.java
index 272abd1e..5081a95e 100644
--- a/src/main/java/org/acra/collector/CrashReportDataFactory.java
+++ b/src/main/java/org/acra/collector/CrashReportDataFactory.java
@@ -48,6 +48,7 @@
 import static org.acra.ReportField.SETTINGS_SYSTEM;
 import static org.acra.ReportField.SETTINGS_GLOBAL;
 import static org.acra.ReportField.SHARED_PREFERENCES;
+import static org.acra.ReportField.ERROR_LEVEL;
 import static org.acra.ReportField.STACK_TRACE;
 import static org.acra.ReportField.THREAD_DETAILS;
 import static org.acra.ReportField.TOTAL_MEM_SIZE;
@@ -170,6 +171,7 @@ public CrashReportData createCrashData(Throwable th, boolean isSilentReport, Thr
             // This ensures that we collect as much info as possible before
             // something crashes the collection process.
 
+	        crashReportData.put(ERROR_LEVEL, getErrorLevel(th));    
             crashReportData.put(STACK_TRACE, getStackTrace(th));
             crashReportData.put(ReportField.USER_APP_START_DATE, appStartDate.format3339(false));
 
@@ -398,6 +400,22 @@ private String createCustomInfoString() {
         }
         return customInfo.toString();
     }
+    
+    /**
+     * Get the error level from throwable
+     * @param Throwable
+     * @return String
+     */
+    private String getErrorLevel(Throwable th) {
+    	
+    	if(th instanceof Error)
+    		return "1";
+    	else if(th instanceof RuntimeException)
+    		return "2";  
+    	else
+    		return "0";
+    	
+    }
 
     private String getStackTrace(Throwable th) {
 
