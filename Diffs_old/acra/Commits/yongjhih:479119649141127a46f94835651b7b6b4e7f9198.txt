diff --git a/src/main/java/org/acra/ACRA.java b/src/main/java/org/acra/ACRA.java
index a718235d..7c442596 100644
--- a/src/main/java/org/acra/ACRA.java
+++ b/src/main/java/org/acra/ACRA.java
@@ -307,7 +307,7 @@ public static ACRAConfiguration getNewDefaultConfig(Application app) {
         if(app != null) {
             return new ACRAConfiguration(app.getClass().getAnnotation(ReportsCrashes.class));
         } else {
-            return new ACRAConfiguration(null);
+            return new ACRAConfiguration();
         }
     }
 
diff --git a/src/main/java/org/acra/ACRAConfiguration.java b/src/main/java/org/acra/ACRAConfiguration.java
index 5f834185..86222de1 100644
--- a/src/main/java/org/acra/ACRAConfiguration.java
+++ b/src/main/java/org/acra/ACRAConfiguration.java
@@ -725,6 +725,38 @@ public String formKey() {
         return DEFAULT_STRING_VALUE;
     }
 
+    private String[] mForms;
+
+    // TODO setter
+    @Override
+    public String[] forms() {
+        if (mForms != null) {
+            return mForms;
+        }
+
+        if (mReportsCrashes != null) {
+            return mReportsCrashes.forms();
+        }
+
+        return null;
+    }
+
+    private Boolean mFormUriWithReportId;
+
+    // TODO setter
+    @Override
+    public boolean formUriWithReportId() {
+        if (mFormUriWithReportId != null) {
+            return mFormUriWithReportId;
+        }
+
+        if (mReportsCrashes != null) {
+            return mReportsCrashes.formUriWithReportId();
+        }
+
+        return true;
+    }
+
     @Override
     public String formUri() {
         if (mFormUri != null) {
diff --git a/src/main/java/org/acra/ErrorReporter.java b/src/main/java/org/acra/ErrorReporter.java
index 6c862ed1..d32d6b97 100644
--- a/src/main/java/org/acra/ErrorReporter.java
+++ b/src/main/java/org/acra/ErrorReporter.java
@@ -24,6 +24,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Map;
 
 import org.acra.annotation.ReportsCrashes;
 import org.acra.collector.Compatibility;
@@ -51,6 +52,7 @@
 import android.content.pm.PackageInfo;
 import android.os.Bundle;
 import android.os.Looper;
+import android.text.TextUtils;
 import android.text.format.Time;
 import android.util.Log;
 import android.widget.Toast;
@@ -235,7 +237,7 @@ public static ErrorReporter getInstance() {
      */
     @Deprecated
     public void addCustomData(String key, String value) {
-        crashReportDataFactory.putCustomData(key, value);
+        putCustomData(key, value);
     }
 
     /**
@@ -1003,9 +1005,47 @@ public void setDefaultReportSenders() {
 
         // If formUri is set, instantiate a sender for a generic HTTP POST form
         // with default mapping.
-        if (conf.formUri() != null && !"".equals(conf.formUri())) {
-            setReportSender(new HttpSender(ACRA.getConfig().httpMethod(), ACRA.getConfig().reportType(), null));
-            return;
+        String formUri = conf.formUri();
+        List<String> forms = Arrays.asList(conf.forms());
+
+        if (!TextUtils.isEmpty(formUri)) {
+            addReportSender(new HttpSender(conf.httpMethod(), conf.reportType(), null));
+        }
+
+        if (forms != null) {
+            for (String form : forms) {
+                org.acra.sender.HttpSender.Method method = conf.httpMethod();
+                org.acra.sender.HttpSender.Type type = conf.reportType();
+                String uri = null;
+                Map<ReportField, String> mapping = null;
+
+                if (TextUtils.isEmpty(form)) continue;
+
+                String[] formSegments = form.split(" ");
+
+                switch (formSegments.length) {
+                    case 3:
+                        String m = formSegments[2];
+                        if ("post".equalsIgnoreCase(m)) {
+                            method = org.acra.sender.HttpSender.Method.POST;
+                        } else if ("put".equalsIgnoreCase(m)) {
+                            method = org.acra.sender.HttpSender.Method.PUT;
+                        }
+                    case 2:
+                        String t = formSegments[1];
+                        if ("application/x-www-form-urlencoded".equalsIgnoreCase(t)) {
+                            type = org.acra.sender.HttpSender.Type.FORM;
+                        } else if ("application/json".equalsIgnoreCase(t)) {
+                            type = org.acra.sender.HttpSender.Type.JSON;
+                        }
+                    case 1:
+                        uri = formSegments[0];
+                }
+
+                if (uri == null) continue;
+
+                addReportSender(new HttpSender(method, type, uri, mapping));
+            }
         }
 
         // The default behavior is to use the formKey for a Google Docs Form. If
diff --git a/src/main/java/org/acra/ReportField.java b/src/main/java/org/acra/ReportField.java
index 857c4f03..3b97fde9 100644
--- a/src/main/java/org/acra/ReportField.java
+++ b/src/main/java/org/acra/ReportField.java
@@ -26,6 +26,10 @@
  * 
  */
 public enum ReportField {
+    /**
+     * Type
+     */
+    type,
     /**
      * Report Identifier
      */
diff --git a/src/main/java/org/acra/annotation/ReportsCrashes.java b/src/main/java/org/acra/annotation/ReportsCrashes.java
index f5d8e9cf..126828a1 100644
--- a/src/main/java/org/acra/annotation/ReportsCrashes.java
+++ b/src/main/java/org/acra/annotation/ReportsCrashes.java
@@ -48,10 +48,20 @@
 @Inherited
 public @interface ReportsCrashes {
 
+    /**
+     * @return "{formUri} {type} {method}"
+     */
+    String[] forms() default {};
+
+    /**
+     * @return Adjust URL depending on method such as PUT
+     */
+    boolean formUriWithReportId() default true;
+
     /**
      * @return The id of the Google Doc form.
      */
-    String formKey();
+    String formKey() default "";
 
     /**
      * The Uri of your own server-side script that will receive reports. This is
diff --git a/src/main/java/org/acra/collector/CrashReportDataFactory.java b/src/main/java/org/acra/collector/CrashReportDataFactory.java
index f6cd5979..832a3175 100644
--- a/src/main/java/org/acra/collector/CrashReportDataFactory.java
+++ b/src/main/java/org/acra/collector/CrashReportDataFactory.java
@@ -347,6 +347,9 @@ public CrashReportData createCrashData(Throwable th, boolean isSilentReport, Thr
                 crashReportData.put(USER_IP, ReportUtils.getLocalIpAddress());
             }
 
+            crashReportData.put(type, "acra"); // for ElasticSearch
+
+
         } catch (RuntimeException e) {
             Log.e(LOG_TAG, "Error while retrieving crash data", e);
         } catch (FileNotFoundException e) {
diff --git a/src/main/java/org/acra/sender/HttpSender.java b/src/main/java/org/acra/sender/HttpSender.java
index 3581140b..cfe3c7a6 100644
--- a/src/main/java/org/acra/sender/HttpSender.java
+++ b/src/main/java/org/acra/sender/HttpSender.java
@@ -239,7 +239,9 @@ public void send(CrashReportData report) throws ReportSenderException {
             case POST:
                 break;
             case PUT:
-                reportUrl = new URL(reportUrl.toString() + '/' + report.getProperty(ReportField.REPORT_ID));
+                if (ACRA.getConfig().formUriWithReportId()) {
+                    reportUrl = new URL(reportUrl.toString() + '/' + report.getProperty(ReportField.REPORT_ID));
+                }
                 break;
             default:
                 throw new UnsupportedOperationException("Unknown method: " + mMethod.name());
@@ -273,4 +275,4 @@ public void send(CrashReportData report) throws ReportSenderException {
         return finalReport;
     }
 
-}
\ No newline at end of file
+}
diff --git a/src/main/java/org/acra/util/HttpRequest.java b/src/main/java/org/acra/util/HttpRequest.java
index f3e13011..bcad64fe 100644
--- a/src/main/java/org/acra/util/HttpRequest.java
+++ b/src/main/java/org/acra/util/HttpRequest.java
@@ -314,4 +314,4 @@ public static String getParamsAsFormString(Map<?, ?> parameters) throws Unsuppor
 
         return dataBfr.toString();
     }
-}
\ No newline at end of file
+}
