diff --git a/src/main/java/org/acra/util/HttpRequest.java b/src/main/java/org/acra/util/HttpRequest.java
index 2e2fec36..1af1c3d5 100644
--- a/src/main/java/org/acra/util/HttpRequest.java
+++ b/src/main/java/org/acra/util/HttpRequest.java
@@ -158,14 +158,17 @@ public void send(URL url, Method method, String content, Type type) throws IOExc
                     if (!statusCode.equals("409") // 409 return code means that the
                                                   // report has been received
                                                   // already. So we can discard it.
+                            && !statusCode.equals("403") // a 403 error code is an explicit data validation refusal
+                            // from the server. The request must not be repeated.
+                            // Discard it.
                             && (statusCode.startsWith("4") || statusCode.startsWith("5"))) {
-                        if (ACRA.DEV_LOGGING)
-                            ACRA.log.d(ACRA.LOG_TAG, "Could not send HttpPost : " + httpRequest);
-
                         if (ACRA.DEV_LOGGING) {
+                            ACRA.log.d(ACRA.LOG_TAG, "Could not send HttpPost : " + httpRequest);
+                            ACRA.log.d(ACRA.LOG_TAG, "HttpResponse Status : "
+                                    + (statusLine != null ? statusLine.getStatusCode() : "NoStatusLine#noCode"));
                             final String respContent = EntityUtils.toString(response.getEntity());
                             ACRA.log.d(ACRA.LOG_TAG,
-                                    "HttpResponse Content : " + respContent);
+                                    "HttpResponse Content : " + respContent.substring(0, Math.min(respContent.length(), 200)));
                         }
 
                         throw new IOException("Host returned error code " + statusCode);
