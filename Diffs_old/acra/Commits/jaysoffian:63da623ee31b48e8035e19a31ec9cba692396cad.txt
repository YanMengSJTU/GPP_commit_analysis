diff --git a/src/main/java/org/acra/ErrorReporter.java b/src/main/java/org/acra/ErrorReporter.java
index b3b62b44..8f4b9f5e 100644
--- a/src/main/java/org/acra/ErrorReporter.java
+++ b/src/main/java/org/acra/ErrorReporter.java
@@ -30,6 +30,7 @@
 import android.text.format.Time;
 import android.util.Log;
 import android.widget.Toast;
+import org.acra.ReportField;
 import org.acra.annotation.ReportsCrashes;
 import org.acra.collector.Compatibility;
 import org.acra.collector.ConfigurationCollector;
@@ -138,8 +139,14 @@ public void initializeExceptionHandler(ErrorReporter reporter) {
         this.prefs = prefs;
         this.enabled = enabled;
 
-        // Store the initial Configuration state.
-        final String initialConfiguration = ConfigurationCollector.collectConfiguration(mContext);
+        // Store the initial Configuration state. This is expensive to gather, so only do so
+        // if we plan to report it.
+        final String initialConfiguration;
+        if (CrashReportDataFactory.getReportFields().contains(ReportField.INITIAL_CONFIGURATION)) {
+            initialConfiguration = ConfigurationCollector.collectConfiguration(mContext);
+        } else {
+            initialConfiguration = null;
+        }
 
         // Sets the application start date.
         // This will be included in the reports, will be helpful compared to
diff --git a/src/main/java/org/acra/collector/ConfigurationCollector.java b/src/main/java/org/acra/collector/ConfigurationCollector.java
index 36662fa8..4209e6f3 100644
--- a/src/main/java/org/acra/collector/ConfigurationCollector.java
+++ b/src/main/java/org/acra/collector/ConfigurationCollector.java
@@ -66,9 +66,20 @@
     private static SparseArray<String> mUiModeValues = new SparseArray<String>();
 
     private static final HashMap<String, SparseArray<String>> mValueArrays = new HashMap<String, SparseArray<String>>();
+    private static boolean sInitialized = false;
 
-    // Static init
-    static {
+    static private void init() {
+        if (!sInitialized) {
+            synchronized(ConfigurationCollector.class) {
+                if (!sInitialized) {
+                    initImpl();
+                    sInitialized = true;
+                }
+            }
+        }
+    }
+    
+    static private void initImpl() {
         mValueArrays.put(PREFIX_HARDKEYBOARDHIDDEN, mHardKeyboardHiddenValues);
         mValueArrays.put(PREFIX_KEYBOARD, mKeyboardValues);
         mValueArrays.put(PREFIX_KEYBOARDHIDDEN, mKeyboardHiddenValues);
@@ -121,6 +132,7 @@
      *         with values replaced by constant names.
      */
     public static String toString(Configuration conf) {
+        init();
         final StringBuilder result = new StringBuilder();
         for (final Field f : conf.getClass().getFields()) {
             try {
diff --git a/src/main/java/org/acra/collector/CrashReportDataFactory.java b/src/main/java/org/acra/collector/CrashReportDataFactory.java
index f0764f85..4d51275a 100644
--- a/src/main/java/org/acra/collector/CrashReportDataFactory.java
+++ b/src/main/java/org/acra/collector/CrashReportDataFactory.java
@@ -431,7 +431,7 @@ private String getStackTraceHash(Throwable th) {
         return Integer.toHexString(res.toString().hashCode());
     }
 
-    private List<ReportField> getReportFields() {
+    public static List<ReportField> getReportFields() {
         final ReportsCrashes config = ACRA.getConfig();
         final ReportField[] customReportFields = config.customReportContent();
 
