diff --git a/dbflow-core/src/main/java/com/raizlabs/android/dbflow/annotation/ForeignKeyReference.java b/dbflow-core/src/main/java/com/raizlabs/android/dbflow/annotation/ForeignKeyReference.java
index a19400a25..f41612fa3 100644
--- a/dbflow-core/src/main/java/com/raizlabs/android/dbflow/annotation/ForeignKeyReference.java
+++ b/dbflow-core/src/main/java/com/raizlabs/android/dbflow/annotation/ForeignKeyReference.java
@@ -6,7 +6,7 @@
 /**
  * Description: Used inside of {@link ForeignKey#references()}, describes the
  * local column name, type, and referencing table column name.
- * 
+ *
  * Note: the type of the local column must match the
  * column type of the referenced column. By using a field as a Model object,
  * you will need to ensure the same types are used.
diff --git a/dbflow-processor/src/main/java/com/raizlabs/android/dbflow/processor/definition/column/ColumnDefinition.java b/dbflow-processor/src/main/java/com/raizlabs/android/dbflow/processor/definition/column/ColumnDefinition.java
index dc396c13b..1121ef45e 100644
--- a/dbflow-processor/src/main/java/com/raizlabs/android/dbflow/processor/definition/column/ColumnDefinition.java
+++ b/dbflow-processor/src/main/java/com/raizlabs/android/dbflow/processor/definition/column/ColumnDefinition.java
@@ -359,7 +359,6 @@ public String getColumnAccessString(boolean isModelContainerAdapter, boolean isS
     /**
      * @param isModelContainerAdapter
      * @param codeBuilder
-     * @return A string without any type conversion for this field.
      */
     public void appendPropertyComparisonAccessStatement(boolean isModelContainerAdapter, CodeBlock.Builder codeBuilder) {
         codeBuilder.add("\nclause.and($T.$L.eq(", tableDefinition.getPropertyClassName(), columnName);
