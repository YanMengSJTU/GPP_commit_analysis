diff --git a/DBFlow-Compiler/build.gradle b/DBFlow-Compiler/build.gradle
index ed9efdf2f..5a6bb7d3b 100644
--- a/DBFlow-Compiler/build.gradle
+++ b/DBFlow-Compiler/build.gradle
@@ -12,5 +12,5 @@ dependencies {
     compile 'com.google.auto.service:auto-service:1.0-rc2'
 }
 
-apply from: 'https://raw.githubusercontent.com/Raizlabs/maven-releases/master/bintray_upload.gradle'
+//apply from: 'https://raw.githubusercontent.com/Raizlabs/maven-releases/master/bintray_upload.gradle'
 apply from: '../java-artifacts.gradle'
diff --git a/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/model/ProcessorManager.java b/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/model/ProcessorManager.java
index 8872fa5f8..c7267d0f1 100644
--- a/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/model/ProcessorManager.java
+++ b/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/model/ProcessorManager.java
@@ -300,10 +300,15 @@ public void handle(ProcessorManager processorManager, RoundEnvironment roundEnvi
 
         if (roundEnvironment.processingOver()) {
             try {
+                String suffix = "";
+                for(DatabaseWriter databaseWriter : processorManager.getManagerWriters()) {
+                    suffix = (!databaseWriter.holderClassSuffix.equals(""))?databaseWriter.holderClassSuffix:"";
+                }
+
                 JavaWriter staticFlowManager = new JavaWriter(processorManager.getProcessingEnvironment().getFiler()
                                                                       .createSourceFile(
                                                                               Classes.FLOW_MANAGER_PACKAGE + "." +
-                                                                              Classes.DATABASE_HOLDER_STATIC_CLASS_NAME).openWriter());
+                                                                              Classes.DATABASE_HOLDER_STATIC_CLASS_NAME + suffix).openWriter());
                 new FlowManagerHolderWriter(processorManager).write(staticFlowManager);
 
                 staticFlowManager.close();
diff --git a/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/DatabaseWriter.java b/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/DatabaseWriter.java
index 39e664d8e..0989fe806 100644
--- a/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/DatabaseWriter.java
+++ b/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/DatabaseWriter.java
@@ -36,6 +36,8 @@
 
     public String databaseName;
 
+    public String holderClassSuffix;
+
     public int databaseVersion;
 
     boolean foreignKeysSupported;
@@ -73,6 +75,8 @@ public DatabaseWriter(ProcessorManager manager, Element element) {
 
         classSeparator = database.generatedClassSeparator();
 
+        holderClassSuffix  = database.holderClassSuffix();
+
         definitionClassName = databaseName + classSeparator + "Database";
 
         databaseVersion = database.version();
diff --git a/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/FlowManagerHolderWriter.java b/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/FlowManagerHolderWriter.java
index e40d1e65f..870f93392 100644
--- a/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/FlowManagerHolderWriter.java
+++ b/DBFlow-Compiler/src/main/java/com/raizlabs/android/dbflow/processor/writer/FlowManagerHolderWriter.java
@@ -26,7 +26,12 @@ public FlowManagerHolderWriter(ProcessorManager processorManager){
     @Override
     public void write(JavaWriter staticFlowManager) throws IOException {
         staticFlowManager.emitPackage(Classes.FLOW_MANAGER_PACKAGE);
-        staticFlowManager.beginType(Classes.DATABASE_HOLDER_STATIC_CLASS_NAME, "class", Sets.newHashSet(Modifier.PUBLIC, Modifier.FINAL), Classes.FLOW_MANAGER_STATIC_INTERFACE);
+
+        String suffix = "";
+        for(DatabaseWriter databaseWriter : processorManager.getManagerWriters()) {
+            suffix = (!databaseWriter.holderClassSuffix.equals(""))?databaseWriter.holderClassSuffix:"";
+        }
+        staticFlowManager.beginType(Classes.DATABASE_HOLDER_STATIC_CLASS_NAME + suffix, "class", Sets.newHashSet(Modifier.PUBLIC, Modifier.FINAL), Classes.FLOW_MANAGER_STATIC_INTERFACE);
 
         staticFlowManager.beginConstructor(Sets.newHashSet(Modifier.PUBLIC));
 
diff --git a/DBFlow-Core/build.gradle b/DBFlow-Core/build.gradle
index 4afd3e6c5..c9bd2f0d4 100644
--- a/DBFlow-Core/build.gradle
+++ b/DBFlow-Core/build.gradle
@@ -6,5 +6,5 @@ project.ext.artifactId = bt_name
 targetCompatibility = JavaVersion.VERSION_1_7
 sourceCompatibility = JavaVersion.VERSION_1_7
 
-apply from: 'https://raw.githubusercontent.com/Raizlabs/maven-releases/master/bintray_upload.gradle'
+//apply from: 'https://raw.githubusercontent.com/Raizlabs/maven-releases/master/bintray_upload.gradle'
 apply from: '../java-artifacts.gradle'
\ No newline at end of file
diff --git a/DBFlow-Core/src/main/java/com/raizlabs/android/dbflow/annotation/Database.java b/DBFlow-Core/src/main/java/com/raizlabs/android/dbflow/annotation/Database.java
index 4c3be0fca..bc76dbaf2 100644
--- a/DBFlow-Core/src/main/java/com/raizlabs/android/dbflow/annotation/Database.java
+++ b/DBFlow-Core/src/main/java/com/raizlabs/android/dbflow/annotation/Database.java
@@ -31,6 +31,9 @@
      */
     String name() default "";
 
+
+    String holderClassSuffix() default "";
+
     /**
      * In order to use Foreign keys, set this to true.
      *
diff --git a/DBFlow/build.gradle b/DBFlow/build.gradle
index bb3d0d614..32a468ac8 100644
--- a/DBFlow/build.gradle
+++ b/DBFlow/build.gradle
@@ -1,3 +1,18 @@
+buildscript {
+    repositories {
+        jcenter()
+        mavenCentral()
+        maven { url "https://raw.github.com/Raizlabs/maven-releases/master/releases" }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
+        classpath 'com.raizlabs:Griddle:1.0.3'
+        classpath 'com.github.dcendents:android-maven-plugin:1.2'
+        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
+    }
+}
+
 apply plugin: 'com.android.library'
 apply plugin: 'android-apt'
 apply plugin: 'com.github.dcendents.android-maven'
@@ -35,5 +50,5 @@ dependencies {
     androidTestApt project("${dbflow_project_prefix}DBFlow-Compiler")
 }
 
-apply from: 'https://raw.githubusercontent.com/Raizlabs/maven-releases/master/bintray_upload.gradle'
+//apply from: 'https://raw.githubusercontent.com/Raizlabs/maven-releases/master/bintray_upload.gradle'
 apply from: '../android-artifacts.gradle'
diff --git a/DBFlow/src/androidTest/AndroidManifest.xml b/DBFlow/src/androidTest/AndroidManifest.xml
index ae4ecc8a9..16a31b71a 100644
--- a/DBFlow/src/androidTest/AndroidManifest.xml
+++ b/DBFlow/src/androidTest/AndroidManifest.xml
@@ -12,9 +12,9 @@
         android:authorities="com.raizlabs.android.dbflow.test.provider"
         android:exported="true"
         android:name=".provider.TestContentProvider$Provider"/>
-        
 
-        
+
+
         </application>
 
 </manifest>
diff --git a/DBFlow/src/main/java/com/raizlabs/android/dbflow/config/FlowManager.java b/DBFlow/src/main/java/com/raizlabs/android/dbflow/config/FlowManager.java
index 37ed5fbbf..9aba36123 100644
--- a/DBFlow/src/main/java/com/raizlabs/android/dbflow/config/FlowManager.java
+++ b/DBFlow/src/main/java/com/raizlabs/android/dbflow/config/FlowManager.java
@@ -111,10 +111,17 @@ public static BaseDatabaseDefinition getDatabase(String databaseName) {
      * @return The database holder, creating if necessary using reflection.
      */
     protected static DatabaseHolder getDatabaseHolder() {
+        return getDatabaseHolder("");
+    }
+
+    /**
+     * @return The database holder, creating if necessary using reflection.
+     */
+    protected static DatabaseHolder getDatabaseHolder(String holderClassSuffix) {
         if (mDatabaseHolder == null) {
             try {
                 mDatabaseHolder = (DatabaseHolder) Class.forName(
-                        "com.raizlabs.android.dbflow.config.GeneratedDatabaseHolder").newInstance();
+                        "com.raizlabs.android.dbflow.config.GeneratedDatabaseHolder" + "_EyeSeeTeaDB").newInstance();
             } catch (Throwable e) {
                 throw new RuntimeException(e);
             }
@@ -154,8 +161,12 @@ public static Context getContext() {
      * @param context The shared context for database usage.
      */
     public static void init(Context context) {
+        init(context, "");
+    }
+
+    public static void init(Context context, String holderClassSuffix) {
         FlowManager.context = context;
-        getDatabaseHolder();
+        getDatabaseHolder(holderClassSuffix);
     }
 
     /**
