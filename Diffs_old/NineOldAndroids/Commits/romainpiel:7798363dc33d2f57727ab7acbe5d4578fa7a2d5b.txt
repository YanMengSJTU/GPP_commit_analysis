diff --git a/library/project.properties b/library/project.properties
index 5ca7d62..0e58ae1 100644
--- a/library/project.properties
+++ b/library/project.properties
@@ -9,4 +9,4 @@
 
 android.library=true
 # Project target.
-target=android-14
+target=android-17
diff --git a/library/src/com/nineoldandroids/view/ViewPropertyAnimator.java b/library/src/com/nineoldandroids/view/ViewPropertyAnimator.java
index c3bc4e6..0327e6c 100644
--- a/library/src/com/nineoldandroids/view/ViewPropertyAnimator.java
+++ b/library/src/com/nineoldandroids/view/ViewPropertyAnimator.java
@@ -343,4 +343,6 @@ public static ViewPropertyAnimator animate(View view) {
      * @return This object, allowing calls to methods in this class to be chained.
      */
     public abstract ViewPropertyAnimator alphaBy(float value);
+
+    public abstract ViewPropertyAnimator withLayer();
 }
diff --git a/library/src/com/nineoldandroids/view/ViewPropertyAnimatorHC.java b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorHC.java
index 7ad2ada..b028b64 100644
--- a/library/src/com/nineoldandroids/view/ViewPropertyAnimatorHC.java
+++ b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorHC.java
@@ -16,15 +16,16 @@
 
 package com.nineoldandroids.view;
 
-import java.lang.ref.WeakReference;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Set;
 import android.view.View;
 import android.view.animation.Interpolator;
 import com.nineoldandroids.animation.Animator;
 import com.nineoldandroids.animation.ValueAnimator;
 
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Set;
+
 class ViewPropertyAnimatorHC extends ViewPropertyAnimator {
 
     /**
@@ -720,4 +721,15 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         }
     }
+
+    @Override
+    public ViewPropertyAnimator withLayer() {
+        final View v = mView.get();
+        if (v != null) {
+            v.setLayerType(v.getLayerType(), null);
+            v.setLayerType(View.LAYER_TYPE_HARDWARE, null);
+        }
+
+        return this;
+    }
 }
diff --git a/library/src/com/nineoldandroids/view/ViewPropertyAnimatorICS.java b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorICS.java
index b60a820..6e4acd3 100644
--- a/library/src/com/nineoldandroids/view/ViewPropertyAnimatorICS.java
+++ b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorICS.java
@@ -1,11 +1,13 @@
 package com.nineoldandroids.view;
 
-import java.lang.ref.WeakReference;
-
+import android.animation.Animator;
 import android.view.View;
 import android.view.animation.Interpolator;
 import com.nineoldandroids.animation.Animator.AnimatorListener;
 
+import java.lang.ref.WeakReference;
+import java.util.HashMap;
+
 class ViewPropertyAnimatorICS extends ViewPropertyAnimator {
     /**
      * A value to be returned when the WeakReference holding the native implementation
@@ -16,10 +18,13 @@
     /**
      * A WeakReference holding the native implementation of ViewPropertyAnimator
      */
-    private final WeakReference<android.view.ViewPropertyAnimator> mNative;
+    protected final WeakReference<android.view.ViewPropertyAnimator> mNative;
+
+    private final WeakReference<View> mView;
 
     ViewPropertyAnimatorICS(View view) {
         mNative = new WeakReference<android.view.ViewPropertyAnimator>(view.animate());
+        mView = new WeakReference<View>(view);
     }
 
     @Override
@@ -295,4 +300,14 @@ public ViewPropertyAnimator alphaBy(float value) {
         }
         return this;
     }
+
+    @Override
+    public ViewPropertyAnimator withLayer() {
+        final View v = mView.get();
+        if (v != null) {
+            v.setLayerType(View.LAYER_TYPE_HARDWARE, null);
+        }
+
+        return this;
+    }
 }
diff --git a/library/src/com/nineoldandroids/view/ViewPropertyAnimatorJB.java b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorJB.java
new file mode 100644
index 0000000..eb9f165
--- /dev/null
+++ b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorJB.java
@@ -0,0 +1,26 @@
+package com.nineoldandroids.view;
+
+import android.view.View;
+
+/**
+ * MPme
+ * User: romainpiel
+ * Date: 14/02/2013
+ * Time: 10:55
+ */
+public class ViewPropertyAnimatorJB extends ViewPropertyAnimatorICS {
+
+    ViewPropertyAnimatorJB(View view) {
+        super(view);
+    }
+
+    @Override
+    public ViewPropertyAnimator withLayer() {
+        android.view.ViewPropertyAnimator n = mNative.get();
+        if (n != null) {
+            n.withLayer();
+        }
+        return this;
+    }
+
+}
diff --git a/library/src/com/nineoldandroids/view/ViewPropertyAnimatorPreHC.java b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorPreHC.java
index c170f6d..4620132 100644
--- a/library/src/com/nineoldandroids/view/ViewPropertyAnimatorPreHC.java
+++ b/library/src/com/nineoldandroids/view/ViewPropertyAnimatorPreHC.java
@@ -16,16 +16,17 @@
 
 package com.nineoldandroids.view;
 
-import java.lang.ref.WeakReference;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Set;
 import android.view.View;
 import android.view.animation.Interpolator;
 import com.nineoldandroids.animation.Animator;
 import com.nineoldandroids.animation.ValueAnimator;
 import com.nineoldandroids.view.animation.AnimatorProxy;
 
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Set;
+
 class ViewPropertyAnimatorPreHC extends ViewPropertyAnimator {
     /**
      * Proxy animation class which will allow us access to post-Honeycomb properties that were not
@@ -721,4 +722,9 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         }
     }
+
+    @Override
+    public ViewPropertyAnimator withLayer() {
+        return this;
+    }
 }
