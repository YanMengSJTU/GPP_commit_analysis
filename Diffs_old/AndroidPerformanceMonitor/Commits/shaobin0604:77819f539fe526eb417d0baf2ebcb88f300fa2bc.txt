diff --git a/.gitignore b/.gitignore
deleted file mode 100644
index 5d501d9..0000000
--- a/.gitignore
+++ /dev/null
@@ -1,36 +0,0 @@
-# Built application files
-*.apk
-*.ap_
-
-# Files for the Dalvik VM
-*.dex
-
-# Java class files
-*.class
-
-# Generated files
-bin/
-gen/
-
-# Gradle files
-.gradle/
-build/
-
-# Local configuration file (sdk path, etc)
-local.properties
-
-# Proguard folder generated by Eclipse
-proguard/
-
-# Log Files
-*.log
-
-# Android Studio Navigation editor temp files
-.navigation/
-
-# Android Studio captures folder
-captures/
-
-# jetbrain project file
-.idea/
-*.iml
diff --git a/CHANGELOG.md b/CHANGELOG.md
deleted file mode 100644
index 3ce72f4..0000000
--- a/CHANGELOG.md
+++ /dev/null
@@ -1,25 +0,0 @@
-# Change Log
-
-You can watch releases [on Maven](https://oss.sonatype.org/content/groups/public/com/github/moduth/).
-
-## Version 1.2 *(2016-03-16)*
-
-- Much faster! It now has almost none side-effect at run-time.
-
-## Version 1.1 *(2016-01-23)*
-
-- Extract blockcanary to three modules.
-- Provide default implementation for BlockCanaryContext.
-
-### 1.1.1 *(2016-01-25)*
-fix issue #19 and #23
-
-## Version 1.0 *(2016-01-21)*
-
-Initial release.
-
-### 1.0.1
-Fix no-op api not align bug.
-
-### 1.0.2
-Add notification sound, fix 2.3 crash.
\ No newline at end of file
diff --git a/LICENSE b/LICENSE
deleted file mode 100644
index 8dada3e..0000000
--- a/LICENSE
+++ /dev/null
@@ -1,201 +0,0 @@
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright {yyyy} {name of copyright owner}
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/README.md b/README.md
deleted file mode 100644
index b58f97a..0000000
--- a/README.md
+++ /dev/null
@@ -1,113 +0,0 @@
-[Chinese README](https://github.com/moduth/blockcanary/blob/master/README_CN.md)
-
-# BlockCanary [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.moduth/blockcanary-android/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.github.moduth/blockcanary-android)
-A transparent ui-block detection library for Android, app only needs one-line-code to setup. Author: [markzhai](https://github.com/markzhai), [Contributors](https://github.com/moduth/blockcanary#contributors)
-
-The naming is to pay respect to the great library [LeakCanary](https://github.com/square/leakcanary), ui-related codes are modified from leakcanary's ui part.
-
-# Getting started
-
-You may choose how to assemble them as you like.
-
-```gradle
-dependencies {
-    // most often used way, enable notification to notify block event
-    compile 'com.github.moduth:blockcanary-android:1.2.1'
-
-    // this way you only enable BlockCanary in debug package
-    // debugCompile 'com.github.moduth:blockcanary-android:1.2.1'
-    // releaseCompile 'com.github.moduth:blockcanary-no-op:1.2.1'
-}
-```
-
-PS: As this library uses `getMainLooper().setMessageLogging()`, please check if you also set that in your app. (check related issue https://github.com/moduth/blockcanary/issues/27)
-
-# Usage
-
-Maximum log count is set to 100, you can rewrite it in your app `int.xml`.
-```xml
-<integer name="block_canary_max_stored_count">100</integer>
-```
-
-```java
-public class DemoApplication extends Application {
-    @Override
-    public void onCreate() {
-        ...
-        // Do it on main process
-        BlockCanary.install(this, new AppBlockCanaryContext()).start();
-    }
-}
-```
-
-Implement BlockCanaryContext context：
-```java
-public class AppBlockCanaryContext extends BlockCanaryContext {
-    // override to provide context like app qualifier, uid, network type, block threshold, log save path
-
-    // this is default block threshold, you can set it by phone's performance
-    @Override
-    public int getConfigBlockThreshold() {
-        return 500;
-    }
-
-    // if set true, notification will be shown, else only write log file
-    @Override
-    public boolean isNeedDisplay() {
-        return BuildConfig.DEBUG;
-    }
-
-    // path to save log file
-    @Override
-    public String getLogPath() {
-        return "/blockcanary/performance";
-    }
-}
-```
-
-# How does it work?
-Blog in Chinese: [BlockCanary](http://blog.zhaiyifan.cn/2016/01/16/BlockCanaryTransparentPerformanceMonitor/).
-
-Principle flow picture:
-
-![flow](art/flow.png "flow")
-
-1. `BlockCanary.install()` initializes context and internal data structures.
-2. `BlockCanary.start()` starts monitor by `Looper.getMainLooper().setMessageLogging(mMainLooperPrinter);`
-3. `ThreadStackSampler` and `CpuSampler` start catching thread stack and cpu data.
-4. Each time a message dispatch costs time over that set by `BlockCanaryContext.getConfigBlockThreshold`, it triggers a block notify.
-5. Write log file with data for analysis.
-6. If `BlockCanaryContext.isNeedDisplay` is true, a notification is shown, developer can click and check directly.
-
-# Screenshot
-
-![Block detail](art/shot1.png "detail")
-![Block list](art/shot2.png "list")
-
-# Contributors
-
-This library is initially created by [markzhai](https://github.com/markzhai), and is maintained under the organization [moduth](https://github.com/moduth) with [nimengbo](https://github.com/nimengbo) and [zzz40500](https://github.com/zzz40500).
-
-Special thanks to [android-cjj](https://github.com/android-cjj), [Mr.Bao](https://github.com/baoyongzhang), [chiahaolu](https://github.com/chiahaolu) to contribute when this library is still young.
-
-# Change Log
-
-Check [CHANGELOG](https://github.com/moduth/blockcanary/blob/master/CHANGELOG.md)
-
-# Contribute
-
-If you would like to contribute code to BlockCanary you can do so through GitHub by forking the repository and sending a pull request.
-
-# License
-
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
diff --git a/README_CN.md b/README_CN.md
deleted file mode 100644
index c4ccd99..0000000
--- a/README_CN.md
+++ /dev/null
@@ -1,104 +0,0 @@
-[English](https://github.com/moduth/blockcanary/blob/master/README.md)
-
-# BlockCanary [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.moduth/blockcanary-android/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.github.moduth/blockcanary-android)
-BlockCanary是一个Android平台的一个非侵入式的性能监控组件，应用只需要实现一个抽象类，提供一些该组件需要的上下文环境，就可以在平时使用应用的时候检测主线程上的各种卡慢问题，并通过组件提供的各种信息分析出原因并进行修复。
-
-取名为BlockCanary则是为了向LeakCanary致敬，顺便本库的UI部分是从LeakCanary改来的，之后可能会做一些调整。
-
-作者：[markzhai](https://github.com/markzhai)
-
-# 包介绍
-- blockcanary-android blockcanary类的一些实现
-- blockcanary-core    记录block信息的核心实现
-- blockcanary-no-op   空包，为了release打包时不编译进去
-
-# 引入
-
-**一般选取以下其中一个 case 引入即可**
-
-**如果有多个buildTypes需求，请使用 ```buildTypeComple ``` 关键字根据buildTypes组合使用即可**
-
-```gradle
-dependencies {
-    compile 'com.github.moduth:blockcanary-android:1.2.1'
-
-    // 仅在debug包启用BlockCanary进行卡顿监控和提示的话，可以这么用
-    debugCompile 'com.github.moduth:blockcanary-android:1.2.1'
-    releaseCompile 'com.github.moduth:blockcanary-no-op:1.2.1'
-}
-```
-
-PS: 由于该库使用了 `getMainLooper().setMessageLogging()`, 请确认是否与你的app冲突.
-
-
-# 使用方法
-在Application中：
-```java
-public class DemoApplication extends Application {
-    @Override
-    public void onCreate() {
-        ...
-        // 在主进程初始化调用哈
-        BlockCanary.install(this, new AppBlockCanaryContext()).start();
-    }
-}
-```
-
-实现自己的监控上下文：
-```java
-public class AppBlockCanaryContext extends BlockCanaryContext {
-    // 实现各种上下文，包括应用标示符，用户uid，网络类型，卡慢判断阙值，Log保存位置等
-}
-```
-
-# 功能及原理
-见[BlockCanary — 轻松找出Android App界面卡顿元凶](http://blog.zhaiyifan.cn/2016/01/16/BlockCanaryTransparentPerformanceMonitor/).
-
-或见下图
-![flow](art/flow.png "flow")
-
-# 如何分析log
-除了图形界面可以供开发、测试阶段直接看卡顿原因外，更多的使用场景其实在于大范围的log采集和分析：如线上环境和monkey，或者测试同学们在整个测试阶段的log收集和分析。
-
-对于分析，主要可以从以下维度
-- 卡顿时间
-- 同堆栈的卡顿出现次数
-进行排序和归类。
-
-接着说说对各个log分析的过程。
-- 首先可以根据手机性能，如核数、机型、内存来判断对应耗时是不是应该判定为卡顿。如一些差的机器，或者内存本身不足的时候。
-- 根据CPU情况，是否是app拿不到cpu，被其他应用拿走了。
-- 看timecost和threadtimecost，如果两者差得很多，则是主线程被等待或者资源被抢占。
-- 看卡顿发生前最近的几次堆栈，如果堆栈相同，则可以判定为是改出发生卡顿，否则需要比较分析。
-
-# Demo工程
-**请参考本项目下的demo module，点击三个按钮会触发对应的耗时事件，消息栏则会弹出block的notification，点击可以进去查看详细信息。**  
-![Block detail](art/shot1.png "detail")
-![Block list](art/shot2.png "list")
-
-# 贡献者
-
-该库最初由 [markzhai](https://github.com/markzhai) 创建, 并在 [魔都三帅](https://github.com/moduth) 组织下与 [nimengbo](https://github.com/nimengbo) 和 [zzz40500](https://github.com/zzz40500) 共同维护和更新.
-
-特别鸣谢[Mr.Bao](https://github.com/baoyongzhang), [android-cjj](https://github.com/android-cjj), [chiahaolu](https://github.com/chiahaolu)在项目早期做出的贡献。
-
-# 修改日志
-见[CHANGELOG](https://github.com/moduth/blockcanary/blob/master/CHANGELOG.md)
-
-# 贡献
-
-如果你希望贡献代码到BlockCanary，你可以fork本repository然后发一个PR。
-
-# 协议
-
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
diff --git a/art/flow.png b/art/flow.png
deleted file mode 100644
index 9548c63..0000000
Binary files a/art/flow.png and /dev/null differ
diff --git a/art/shot1.png b/art/shot1.png
deleted file mode 100644
index 6cb808e..0000000
Binary files a/art/shot1.png and /dev/null differ
diff --git a/art/shot2.png b/art/shot2.png
deleted file mode 100644
index 860b6d8..0000000
Binary files a/art/shot2.png and /dev/null differ
diff --git a/blockcanary-android-no-op/.gitignore b/blockcanary-android-no-op/.gitignore
deleted file mode 100644
index 796b96d..0000000
--- a/blockcanary-android-no-op/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/build
diff --git a/blockcanary-android-no-op/build.gradle b/blockcanary-android-no-op/build.gradle
deleted file mode 100644
index 83af379..0000000
--- a/blockcanary-android-no-op/build.gradle
+++ /dev/null
@@ -1,24 +0,0 @@
-apply plugin: 'com.android.library'
-apply from: 'gradle-mvn-push.gradle'
-
-android {
-    compileSdkVersion LIBRARY_COMPILE_SDK_VERSION
-    buildToolsVersion LIBRARY_BUILD_TOOLS_VERSION
-
-    defaultConfig {
-        minSdkVersion LIBRARY_MIN_SDK_VERSION
-        targetSdkVersion LIBRARY_TARGET_SDK_VERSION
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-}
-
-dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
-}
diff --git a/blockcanary-android-no-op/gradle-mvn-push.gradle b/blockcanary-android-no-op/gradle-mvn-push.gradle
deleted file mode 100644
index a5fe642..0000000
--- a/blockcanary-android-no-op/gradle-mvn-push.gradle
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    task androidJavadocs(type: Javadoc) {
-        options.encoding = "utf-8"
-        source = android.sourceSets.main.java.srcDirs
-        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    }
-
-    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-        classifier = 'javadoc'
-        from androidJavadocs.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.sourceFiles
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocsJar
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android-no-op/gradle.properties b/blockcanary-android-no-op/gradle.properties
deleted file mode 100644
index 0cf90f8..0000000
--- a/blockcanary-android-no-op/gradle.properties
+++ /dev/null
@@ -1,18 +0,0 @@
-POM_NAME=Android BlockCanary Library
-POM_ARTIFACT_ID=blockcanary-no-op
-POM_PACKAGING=jar
-VERSION_NAME=1.2.1
-VERSION_CODE=10
-GROUP=com.github.moduth
-
-POM_DESCRIPTION=Android BlockCanary Library
-POM_URL=https://github.com/moduth/blockcanary
-POM_SCM_URL=https://github.com/moduth/blockcanary
-POM_SCM_CONNECTION=scm:https://github.com/moduth/blockcanary/block-canary.git
-POM_SCM_DEV_CONNECTION=scm:https://github.com/moduth/blockcanary/block-canary.git
-POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
-POM_LICENCE_DIST=repo
-POM_DEVELOPER_ID=moduth
-POM_DEVELOPER_NAME=moduth
-POM_DEVELOPER_URL=https://github.com/moduth
\ No newline at end of file
diff --git a/blockcanary-android-no-op/proguard-rules.pro b/blockcanary-android-no-op/proguard-rules.pro
deleted file mode 100644
index 359be20..0000000
--- a/blockcanary-android-no-op/proguard-rules.pro
+++ /dev/null
@@ -1,17 +0,0 @@
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in /Users/yifan/dev/sdk/adt-bundle-mac-sdk/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the proguardFiles
-# directive in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/blockcanary-android-no-op/src/main/AndroidManifest.xml b/blockcanary-android-no-op/src/main/AndroidManifest.xml
deleted file mode 100644
index 14d0b81..0000000
--- a/blockcanary-android-no-op/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.github.moduth.blockcanary.android">
-
-    <application>
-
-    </application>
-
-</manifest>
diff --git a/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanary.java b/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
deleted file mode 100644
index ba1305d..0000000
--- a/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.content.Context;
-import android.util.Log;
-
-/**
- * No-op implementation.
- */
-public final class BlockCanary {
-
-    private static final String TAG = "BlockCanary-no-op";
-    private static BlockCanary sInstance = null;
-
-    private BlockCanary() {
-    }
-
-    public static BlockCanary install(Context context, BlockCanaryContext blockCanaryContext) {
-        BlockCanaryContext.init(context, blockCanaryContext);
-        return get();
-    }
-
-    public static BlockCanary get() {
-        if (sInstance == null) {
-            synchronized (BlockCanary.class) {
-                if (sInstance == null) {
-                    sInstance = new BlockCanary();
-                }
-            }
-        }
-        return sInstance;
-    }
-
-    public void start() {
-        Log.i(TAG, "start");
-    }
-
-    public void stop() {
-        Log.i(TAG, "stop");
-    }
-
-    public void upload() {
-        Log.i(TAG, "upload");
-    }
-
-    public void recordStartTime() {
-        Log.i(TAG, "recordStartTime");
-    }
-
-    public boolean isMonitorDurationEnd() {
-        return true;
-    }
-}
diff --git a/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java b/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
deleted file mode 100644
index 2e1f9d9..0000000
--- a/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
+++ /dev/null
@@ -1,86 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.content.Context;
-
-import java.io.File;
-
-public class BlockCanaryContext implements IBlockCanaryContext {
-
-    private static Context sAppContext;
-    private static BlockCanaryContext sInstance = null;
-
-    public BlockCanaryContext() {
-    }
-
-    public static void init(Context c, BlockCanaryContext g) {
-        sAppContext = c;
-        sInstance = g;
-    }
-
-    public static BlockCanaryContext get() {
-        if (sInstance == null) {
-            throw new RuntimeException("BlockCanaryContext not init");
-        } else {
-            return sInstance;
-        }
-    }
-
-    public Context getContext() {
-        return sAppContext;
-    }
-
-    public String getQualifier() {
-        return "Unspecified";
-    }
-
-    public String getUid() {
-        return "0";
-    }
-
-    public String getNetworkType() {
-        return "UNKNOWN";
-    }
-
-    public int getConfigDuration() {
-        return 99999;
-    }
-
-    public int getConfigBlockThreshold() {
-        return 1000;
-    }
-
-    public boolean isNeedDisplay() {
-        return true;
-    }
-
-    @Override
-    public String getLogPath() {
-        return "/blockcanary/performance";
-    }
-
-    public boolean zipLogFile(File[] src, File dest) {
-        return false;
-    }
-
-    public void uploadLogFile(File zippedFile) {
-        throw new UnsupportedOperationException();
-    }
-
-    @Override
-    public String getStackFoldPrefix() {
-        return null;
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/IBlockCanaryContext.java b/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/IBlockCanaryContext.java
deleted file mode 100644
index 56b85a2..0000000
--- a/blockcanary-android-no-op/src/main/java/com/github/moduth/blockcanary/IBlockCanaryContext.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package com.github.moduth.blockcanary;
-
-import android.content.Context;
-
-import java.io.File;
-
-public interface IBlockCanaryContext {
-
-    int getConfigBlockThreshold();
-
-    boolean isNeedDisplay();
-
-    String getQualifier();
-
-    String getUid();
-
-    String getNetworkType();
-
-    Context getContext();
-
-    String getLogPath();
-
-    boolean zipLogFile(File[] src, File dest);
-
-    void uploadLogFile(File zippedFile);
-
-    String getStackFoldPrefix();
-}
diff --git a/blockcanary-android/.gitignore b/blockcanary-android/.gitignore
deleted file mode 100644
index 796b96d..0000000
--- a/blockcanary-android/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/build
diff --git a/blockcanary-android/build.gradle b/blockcanary-android/build.gradle
deleted file mode 100644
index d4fd912..0000000
--- a/blockcanary-android/build.gradle
+++ /dev/null
@@ -1,25 +0,0 @@
-apply plugin: 'com.android.library'
-apply from: 'gradle-mvn-push.gradle'
-
-android {
-    compileSdkVersion LIBRARY_COMPILE_SDK_VERSION
-    buildToolsVersion LIBRARY_BUILD_TOOLS_VERSION
-
-    defaultConfig {
-        minSdkVersion LIBRARY_MIN_SDK_VERSION
-        targetSdkVersion LIBRARY_TARGET_SDK_VERSION
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-}
-
-dependencies {
-    compile fileTree(include: ['*.jar'], dir: 'libs')
-    compile project(':blockcanary-core')
-}
diff --git a/blockcanary-android/gradle-mvn-push.gradle b/blockcanary-android/gradle-mvn-push.gradle
deleted file mode 100644
index a5fe642..0000000
--- a/blockcanary-android/gradle-mvn-push.gradle
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    task androidJavadocs(type: Javadoc) {
-        options.encoding = "utf-8"
-        source = android.sourceSets.main.java.srcDirs
-        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    }
-
-    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-        classifier = 'javadoc'
-        from androidJavadocs.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.sourceFiles
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocsJar
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android/gradle.properties b/blockcanary-android/gradle.properties
deleted file mode 100644
index d834c3b..0000000
--- a/blockcanary-android/gradle.properties
+++ /dev/null
@@ -1,18 +0,0 @@
-POM_NAME=Android BlockCanary Library
-POM_ARTIFACT_ID=blockcanary-android
-POM_PACKAGING=aar
-VERSION_NAME=1.2.1
-VERSION_CODE=10
-GROUP=com.github.moduth
-
-POM_DESCRIPTION=Android BlockCanary Library
-POM_URL=https://github.com/moduth/blockcanary
-POM_SCM_URL=https://github.com/moduth/blockcanary
-POM_SCM_CONNECTION=scm:https://github.com/moduth/blockcanary/block-canary.git
-POM_SCM_DEV_CONNECTION=scm:https://github.com/moduth/blockcanary/block-canary.git
-POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
-POM_LICENCE_DIST=repo
-POM_DEVELOPER_ID=moduth
-POM_DEVELOPER_NAME=moduth
-POM_DEVELOPER_URL=https://github.com/moduth
\ No newline at end of file
diff --git a/blockcanary-android/proguard-rules.pro b/blockcanary-android/proguard-rules.pro
deleted file mode 100644
index 3bedd51..0000000
--- a/blockcanary-android/proguard-rules.pro
+++ /dev/null
@@ -1,20 +0,0 @@
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in /Users/Abner/myData/mySoftware/sdk/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the proguardFiles
-# directive in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
-
-# Need if enable display in proguarded package
--keep class com.github.moduth.blockcanary.ui.Notifier
\ No newline at end of file
diff --git a/blockcanary-android/src/main/AndroidManifest.xml b/blockcanary-android/src/main/AndroidManifest.xml
deleted file mode 100644
index 5ae0afa..0000000
--- a/blockcanary-android/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<manifest package="com.github.moduth.blockcanary"
-          xmlns:android="http://schemas.android.com/apk/res/android">
-    <application>
-        <activity
-                android:name=".ui.DisplayBlockActivity"
-                android:icon="@drawable/block_canary_icon"
-                android:enabled="false"
-                android:label="@string/display_activity_label"
-                android:taskAffinity="com.github.moduth.blockcanary"
-                android:theme="@style/block_canary_BlockCanary.Base">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-                <category android:name="android.intent.category.LAUNCHER"/>
-            </intent-filter>
-        </activity>
-
-    </application>
-</manifest>
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
deleted file mode 100644
index f0f8a4e..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
+++ /dev/null
@@ -1,181 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.pm.PackageManager;
-import android.os.Looper;
-import android.preference.PreferenceManager;
-import android.util.Log;
-import com.github.moduth.blockcanary.ui.DisplayBlockActivity;
-import java.lang.reflect.Constructor;
-import java.util.concurrent.Executor;
-import java.util.concurrent.Executors;
-
-import static android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED;
-import static android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED;
-import static android.content.pm.PackageManager.DONT_KILL_APP;
-
-/**
- * Looper thread monitor.
- *
- * @author markzhai on 2015/9/25.
- */
-public final class BlockCanary {
-
-    private static final String TAG = "BlockCanary";
-
-    private static BlockCanary sInstance;
-    private BlockCanaryCore mBlockCanaryCore;
-    private boolean mLooperLoggingStarted = false;
-
-    private BlockCanary() {
-        BlockCanaryCore.setIBlockCanaryContext(BlockCanaryContext.get());
-        mBlockCanaryCore = BlockCanaryCore.get();
-        initNotification();
-    }
-
-    /**
-     * Install {@link BlockCanary}
-     *
-     * @param context application context
-     * @param blockCanaryContext implementation for {@link BlockCanaryContext}
-     * @return {@link BlockCanary}
-     */
-    public static BlockCanary install(Context context, BlockCanaryContext blockCanaryContext) {
-        BlockCanaryContext.init(context, blockCanaryContext);
-        setEnabled(context, DisplayBlockActivity.class, BlockCanaryContext.get().isNeedDisplay());
-        return get();
-    }
-
-    /**
-     * Get {@link BlockCanary} singleton.
-     *
-     * @return {@link BlockCanary} instance
-     */
-    public static BlockCanary get() {
-        if (sInstance == null) {
-            synchronized (BlockCanary.class) {
-                if (sInstance == null) {
-                    sInstance = new BlockCanary();
-                }
-            }
-        }
-        return sInstance;
-    }
-
-    /**
-     * Start main-thread monitoring.
-     */
-    public void start() {
-        if (!mLooperLoggingStarted) {
-            mLooperLoggingStarted = true;
-            Looper.getMainLooper().setMessageLogging(mBlockCanaryCore.mainLooperPrinter);
-        }
-    }
-
-    /**
-     * Stop monitoring.
-     */
-    public void stop() {
-        if (mLooperLoggingStarted) {
-            mLooperLoggingStarted = false;
-            Looper.getMainLooper().setMessageLogging(null);
-            mBlockCanaryCore.threadStackSampler.stop();
-            mBlockCanaryCore.cpuSampler.stop();
-        }
-    }
-
-    /**
-     * Zip and upload log files.
-     */
-    public void upload() {
-        UploadMonitorLog.forceZipLogAndUpload();
-    }
-
-    /**
-     * Record monitor start time to preference, you may use it when after push which tells start
-     * BlockCanary.
-     */
-    public void recordStartTime() {
-        PreferenceManager.getDefaultSharedPreferences(BlockCanaryContext.get().getContext())
-                .edit()
-                .putLong("BlockCanary_StartTime", System.currentTimeMillis())
-                .commit();
-    }
-
-    /**
-     * Is monitor duration end, compute from recordStartTime end getConfigDuration.
-     *
-     * @return true if ended
-     */
-    public boolean isMonitorDurationEnd() {
-        long startTime =
-                PreferenceManager.getDefaultSharedPreferences(BlockCanaryContext.get().getContext())
-                        .getLong("BlockCanary_StartTime", 0);
-        return startTime != 0 && System.currentTimeMillis() - startTime >
-                BlockCanaryContext.get().getConfigDuration() * 3600 * 1000;
-    }
-
-    @SuppressWarnings("unchecked")
-    private void initNotification() {
-        if (!BlockCanaryContext.get().isNeedDisplay()) {
-            return;
-        }
-
-        try {
-            Class notifier = Class.forName("com.github.moduth.blockcanary.ui.Notifier");
-            if (notifier == null) {
-                return;
-            }
-            Constructor<? extends OnBlockEventInterceptor> constructor = notifier.getConstructor();
-            mBlockCanaryCore.setOnBlockEventInterceptor(constructor.newInstance());
-        } catch (Exception e) {
-            Log.e(TAG, "initNotification: ", e);
-        }
-    }
-
-    // these lines are originally copied from LeakCanary: Copyright (C) 2015 Square, Inc.
-    private static final Executor fileIoExecutor = newSingleThreadExecutor("File-IO");
-
-    private static void setEnabledBlocking(Context appContext, Class<?> componentClass,
-                                           boolean enabled) {
-        ComponentName component = new ComponentName(appContext, componentClass);
-        PackageManager packageManager = appContext.getPackageManager();
-        int newState = enabled ? COMPONENT_ENABLED_STATE_ENABLED : COMPONENT_ENABLED_STATE_DISABLED;
-        // Blocks on IPC.
-        packageManager.setComponentEnabledSetting(component, newState, DONT_KILL_APP);
-    }
-    // end of lines copied from LeakCanary
-
-    private static void executeOnFileIoThread(Runnable runnable) {
-        fileIoExecutor.execute(runnable);
-    }
-
-    private static Executor newSingleThreadExecutor(String threadName) {
-        return Executors.newSingleThreadExecutor(new LeakCanarySingleThreadFactory(threadName));
-    }
-
-    private static void setEnabled(Context context, final Class<?> componentClass,
-                                   final boolean enabled) {
-        final Context appContext = context.getApplicationContext();
-        executeOnFileIoThread(new Runnable() {
-            @Override
-            public void run() {
-                setEnabledBlocking(appContext, componentClass, enabled);
-            }
-        });
-    }
-}
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
deleted file mode 100644
index c41e90d..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
+++ /dev/null
@@ -1,163 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.content.Context;
-
-import java.io.File;
-
-/**
- * You should provide a real implementation of this class to use BlockCanary,
- * which provides runtime environment to library (including configuration
- * and app-related log like uid and network environment)
- *
- * @author markzhai on 2015/9/25.
- */
-public class BlockCanaryContext implements IBlockCanaryContext {
-
-    private static Context sAppContext;
-    private static BlockCanaryContext sInstance = null;
-
-    public BlockCanaryContext() {
-    }
-
-    public static void init(Context context, BlockCanaryContext blockCanaryContext) {
-        sAppContext = context;
-        sInstance = blockCanaryContext;
-    }
-
-    public static BlockCanaryContext get() {
-        if (sInstance == null) {
-            throw new RuntimeException("BlockCanaryContext not init");
-        } else {
-            return sInstance;
-        }
-    }
-
-    public Context getContext() {
-        return sAppContext;
-    }
-
-    /**
-     * qualifier which can specify this installation, like version + flavor
-     *
-     * @return apk qualifier
-     */
-    public String getQualifier() {
-        return "Unspecified";
-    }
-
-    /**
-     * Get user id
-     *
-     * @return user id
-     */
-    public String getUid() {
-        return "0";
-    }
-
-    /**
-     * Network type
-     *
-     * @return String like 2G, 3G, 4G, wifi, etc.
-     */
-    public String getNetworkType() {
-        return "UNKNOWN";
-    }
-
-    /**
-     * Config monitor duration, after this time BlockCanary will stop, use
-     * with {@link BlockCanary}'s isMonitorDurationEnd
-     *
-     * @return monitor last duration (in hour)
-     */
-    public int getConfigDuration() {
-        return 99999;
-    }
-
-    /**
-     * Config block threshold (in millis), dispatch over this duration is regarded as a BLOCK. You may set it
-     * from performance of device.
-     *
-     * @return threshold in mills
-     */
-    public int getConfigBlockThreshold() {
-        return 1000;
-    }
-
-    /**
-     * If need notification and block ui
-     *
-     * @return true if need, else if not need.
-     */
-    public boolean isNeedDisplay() {
-        return true;
-    }
-
-    /**
-     * Path to save log, like "/blockcanary/log"
-     *
-     * @return path of log files
-     */
-    @Override
-    public String getLogPath() {
-        return "/blockcanary/performance";
-    }
-
-    /**
-     * Zip log file
-     *
-     * @param src  files before compress
-     * @param dest files compressed
-     * @return true if compression is successful
-     */
-    @Override
-    public boolean zipLogFile(File[] src, File dest) {
-        return false;
-    }
-
-    /**
-     * Upload log file
-     *
-     * @param zippedFile zipped file
-     */
-    @Override
-    public void uploadLogFile(File zippedFile) {
-        throw new UnsupportedOperationException();
-    }
-
-    /**
-     * Config string prefix to determine how to fold stack
-     *
-     * @return string prefix, null if use process name.
-     */
-    @Override
-    public String getStackFoldPrefix() {
-        return null;
-    }
-
-    /**
-     * Thread stack dump interval, use when block happens, BlockCanary will dump on main thread
-     * stack according to current sample cycle.
-     * <p>
-     * PS: Because the implementation mechanism of Looper, real dump interval would be longer than
-     * the period specified here (longer if cpu is busier)
-     * </p>
-     * @return dump interval(in millis)
-     */
-    @Override
-    public int getConfigDumpIntervalMillis() {
-        return getConfigBlockThreshold();
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/LeakCanarySingleThreadFactory.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/LeakCanarySingleThreadFactory.java
deleted file mode 100644
index dbb4027..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/LeakCanarySingleThreadFactory.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import java.util.concurrent.ThreadFactory;
-
-/**
- * This is intended to only be used with a single thread executor.
- */
-final class LeakCanarySingleThreadFactory implements ThreadFactory {
-
-  private final String threadName;
-
-  LeakCanarySingleThreadFactory(String threadName) {
-    this.threadName = "LeakCanary-" + threadName;
-  }
-
-  @Override public Thread newThread(Runnable runnable) {
-    return new Thread(runnable, threadName);
-  }
-}
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/BlockDetailAdapter.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/BlockDetailAdapter.java
deleted file mode 100644
index 486c6d1..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/BlockDetailAdapter.java
+++ /dev/null
@@ -1,203 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.ui;
-
-import android.content.Context;
-import android.text.Html;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseAdapter;
-import android.widget.TextView;
-import com.github.moduth.blockcanary.BlockCanaryCore;
-import com.github.moduth.blockcanary.R;
-import com.github.moduth.blockcanary.log.Block;
-import com.github.moduth.blockcanary.log.ProcessUtils;
-import java.util.Arrays;
-
-final class BlockDetailAdapter extends BaseAdapter {
-
-    private static final int TOP_ROW = 0;
-    private static final int NORMAL_ROW = 1;
-
-    private boolean[] mFoldings = new boolean[0];
-
-    private String mStackFoldPrefix = null;
-    private Block mBlock;
-
-    private static final int POSITION_BASIC = 1;
-    private static final int POSITION_TIME = 2;
-    private static final int POSITION_CPU = 3;
-    private static final int POSITION_THREAD_STACK = 4;
-
-    @Override
-    public View getView(int position, View convertView, ViewGroup parent) {
-        Context context = parent.getContext();
-        if (getItemViewType(position) == TOP_ROW) {
-            if (convertView == null) {
-                convertView =
-                        LayoutInflater.from(context).inflate(R.layout.block_canary_ref_top_row, parent, false);
-            }
-            TextView textView = findById(convertView, R.id.__leak_canary_row_text);
-            textView.setText(context.getPackageName());
-        } else {
-            if (convertView == null) {
-                convertView =
-                        LayoutInflater.from(context).inflate(R.layout.block_canary_ref_row, parent, false);
-            }
-            TextView textView = findById(convertView, R.id.__leak_canary_row_text);
-
-            boolean isThreadStackEntry = position == POSITION_THREAD_STACK + 1;
-            String element = getItem(position);
-            String htmlString = elementToHtmlString(element, position, mFoldings[position]);
-            if (isThreadStackEntry && !mFoldings[position]) {
-                htmlString += " <font color='#919191'>" + "blocked" + "</font>";
-            }
-            textView.setText(Html.fromHtml(htmlString));
-
-            DisplayLeakConnectorView connectorView = findById(convertView, R.id.__leak_canary_row_connector);
-            connectorView.setType(connectorViewType(position));
-
-            MoreDetailsView moreDetailsView = findById(convertView, R.id.__leak_canary_row_more);
-            moreDetailsView.setFolding(mFoldings[position]);
-        }
-
-        return convertView;
-    }
-
-    private DisplayLeakConnectorView.Type connectorViewType(int position) {
-        return (position == 1) ? DisplayLeakConnectorView.Type.START : (
-                (position == getCount() - 1) ? DisplayLeakConnectorView.Type.END :
-                        DisplayLeakConnectorView.Type.NODE);
-    }
-
-    private String elementToHtmlString(String element, int position, boolean folding) {
-        String htmlString = element.replaceAll(Block.SEPARATOR, "<br>");
-
-        switch (position) {
-            case POSITION_BASIC:
-                if (folding) {
-                    htmlString = htmlString.substring(htmlString.indexOf(Block.KEY_CPU_CORE));
-                }
-                htmlString = String.format("<font color='#c48a47'>%s</font> ", htmlString);
-                break;
-            case POSITION_TIME:
-                if (folding) {
-                    htmlString = htmlString.substring(0, htmlString.indexOf(Block.KEY_TIME_COST_START));
-                }
-                htmlString = String.format("<font color='#f3cf83'>%s</font> ", htmlString);
-                break;
-            case POSITION_CPU:
-                // FIXME Figure out why sometimes \r\n cannot replace completely
-                htmlString = element;
-                if (folding) {
-                    htmlString = htmlString.substring(0, htmlString.indexOf(Block.KEY_CPU_RATE));
-                }
-                htmlString = htmlString.replace("cpurate = ", "<br>cpurate<br/>");
-                htmlString = String.format("<font color='#998bb5'>%s</font> ", htmlString);
-                htmlString = htmlString.replaceAll("]", "]<br>");
-                break;
-            case POSITION_THREAD_STACK:
-            default:
-                if (folding) {
-                    int index = htmlString.indexOf(getStackFoldPrefix());
-                    if (index > 0) {
-                        htmlString = htmlString.substring(index);
-                    }
-                }
-                htmlString = String.format("<font color='#ffffff'>%s</font> ", htmlString);
-                break;
-        }
-        return htmlString;
-    }
-
-    public void update(Block block) {
-        if (mBlock != null && block.timeStart.equals(mBlock.timeStart)) {
-            // Same data, nothing to change.
-            return;
-        }
-        mBlock = block;
-        mFoldings = new boolean[POSITION_THREAD_STACK + mBlock.threadStackEntries.size()];
-        Arrays.fill(mFoldings, true);
-        notifyDataSetChanged();
-    }
-
-    public void toggleRow(int position) {
-        mFoldings[position] = !mFoldings[position];
-        notifyDataSetChanged();
-    }
-
-    @Override
-    public int getCount() {
-        if (mBlock == null) {
-            return 0;
-        }
-        return POSITION_THREAD_STACK + mBlock.threadStackEntries.size();
-    }
-
-    @Override
-    public String getItem(int position) {
-        if (getItemViewType(position) == TOP_ROW) {
-            return null;
-        }
-        switch (position) {
-            case POSITION_BASIC:
-                return mBlock.getBasicString();
-            case POSITION_TIME:
-                return mBlock.getTimeString();
-            case POSITION_CPU:
-                return mBlock.getCpuString();
-            case POSITION_THREAD_STACK:
-            default:
-                return mBlock.threadStackEntries.get(position - POSITION_THREAD_STACK);
-        }
-    }
-
-    @Override
-    public int getViewTypeCount() {
-        return 2;
-    }
-
-    @Override
-    public int getItemViewType(int position) {
-        if (position == 0) {
-            return TOP_ROW;
-        }
-        return NORMAL_ROW;
-    }
-
-    @Override
-    public long getItemId(int position) {
-        return position;
-    }
-
-    @SuppressWarnings("unchecked")
-    private static <T extends View> T findById(View view, int id) {
-        return (T) view.findViewById(id);
-    }
-
-    private String getStackFoldPrefix() {
-        if (mStackFoldPrefix == null) {
-            String prefix = BlockCanaryCore.getContext().getStackFoldPrefix();
-            if (prefix != null) {
-                mStackFoldPrefix = prefix;
-            } else {
-                mStackFoldPrefix = ProcessUtils.myProcessName();
-            }
-        }
-        return mStackFoldPrefix;
-    }
-}
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java
deleted file mode 100644
index 6389395..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java
+++ /dev/null
@@ -1,432 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.ui;
-
-import android.app.ActionBar;
-import android.app.Activity;
-import android.app.PendingIntent;
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Build;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
-import android.text.TextUtils;
-import android.text.format.DateUtils;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.BaseAdapter;
-import android.widget.Button;
-import android.widget.ListAdapter;
-import android.widget.ListView;
-import android.widget.TextView;
-import com.github.moduth.blockcanary.LogWriter;
-import com.github.moduth.blockcanary.R;
-import com.github.moduth.blockcanary.log.Block;
-import com.github.moduth.blockcanary.log.BlockCanaryInternals;
-import java.io.File;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.List;
-import java.util.concurrent.Executor;
-import java.util.concurrent.Executors;
-
-import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
-import static android.text.format.DateUtils.FORMAT_SHOW_DATE;
-import static android.text.format.DateUtils.FORMAT_SHOW_TIME;
-import static android.view.View.GONE;
-import static android.view.View.VISIBLE;
-
-/**
- * Page show blocks
- *
- * @author markzhai on 15/9/26.
- */
-public class DisplayBlockActivity extends Activity {
-
-    private static final String TAG = "DisplayBlockActivity";
-    private static final String SHOW_BLOCK_EXTRA = "show_latest";
-    public static final String SHOW_BLOCK_EXTRA_KEY = "BlockStartTime";
-    // null until it's been first loaded.
-    private List<Block> mBlockEntries = new ArrayList<>();
-    private String mBlockStartTime;
-
-    private ListView mListView;
-    private TextView mFailureView;
-    private Button mActionButton;
-    private int mMaxStoredBlockCount;
-
-    public static PendingIntent createPendingIntent(Context context) {
-        return createPendingIntent(context, null);
-    }
-
-    public static PendingIntent createPendingIntent(Context context, String blockStartTime) {
-        Intent intent = new Intent(context, DisplayBlockActivity.class);
-        intent.putExtra(SHOW_BLOCK_EXTRA, blockStartTime);
-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
-        return PendingIntent.getActivity(context, 1, intent, FLAG_UPDATE_CURRENT);
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        if (savedInstanceState != null) {
-            mBlockStartTime = savedInstanceState.getString(SHOW_BLOCK_EXTRA_KEY);
-        } else {
-            Intent intent = getIntent();
-            if (intent.hasExtra(SHOW_BLOCK_EXTRA)) {
-                mBlockStartTime = intent.getStringExtra(SHOW_BLOCK_EXTRA);
-            }
-        }
-
-        //noinspection unchecked
-//        mBlockEntries = (List<Block>) getLastNonConfigurationInstance();
-
-        setContentView(R.layout.block_canary_display_leak);
-
-        mListView = (ListView) findViewById(R.id.__leak_canary_display_leak_list);
-        mFailureView = (TextView) findViewById(R.id.__leak_canary_display_leak_failure);
-        mActionButton = (Button) findViewById(R.id.__leak_canary_action);
-
-        mMaxStoredBlockCount = getResources().getInteger(R.integer.block_canary_max_stored_count);
-
-        updateUi();
-    }
-
-    // No, it's not deprecated. Android lies.
-    @Override
-    public Object onRetainNonConfigurationInstance() {
-        return mBlockEntries;
-    }
-
-    @Override
-    protected void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        outState.putString(SHOW_BLOCK_EXTRA_KEY, mBlockStartTime);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        LoadBlocks.load(this);
-    }
-
-    @Override
-    public void setTheme(int resid) {
-        // We don't want this to be called with an incompatible theme.
-        // This could happen if you implement runtime switching of themes
-        // using ActivityLifecycleCallbacks.
-        if (resid != R.style.block_canary_BlockCanary_Base) {
-            return;
-        }
-        super.setTheme(resid);
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        LoadBlocks.forgetActivity();
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        final Block block = getBlock(mBlockStartTime);
-        if (block != null) {
-            menu.add(R.string.block_canary_share_leak)
-                    .setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
-                        @Override
-                        public boolean onMenuItemClick(MenuItem item) {
-                            shareBlock(block);
-                            return true;
-                        }
-                    });
-            menu.add(R.string.block_canary_share_stack_dump)
-                    .setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
-                        @Override
-                        public boolean onMenuItemClick(MenuItem item) {
-                            shareHeapDump(block);
-                            return true;
-                        }
-                    });
-            return true;
-        }
-        return false;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        if (item.getItemId() == android.R.id.home) {
-            mBlockStartTime = null;
-            updateUi();
-        }
-        return true;
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (mBlockStartTime != null) {
-            mBlockStartTime = null;
-            updateUi();
-        } else {
-            super.onBackPressed();
-        }
-    }
-
-    private void shareBlock(Block block) {
-        String leakInfo = block.toString();
-        Intent intent = new Intent(Intent.ACTION_SEND);
-        intent.setType("text/plain");
-        intent.putExtra(Intent.EXTRA_TEXT, leakInfo);
-        startActivity(Intent.createChooser(intent, getString(R.string.block_canary_share_with)));
-    }
-
-    private void shareHeapDump(Block block) {
-        File heapDumpFile = block.logFile;
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {
-            heapDumpFile.setReadable(true, false);
-        }
-        Intent intent = new Intent(Intent.ACTION_SEND);
-        intent.setType("application/octet-stream");
-        intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(heapDumpFile));
-        startActivity(Intent.createChooser(intent, getString(R.string.block_canary_share_with)));
-    }
-
-    private void updateUi() {
-        final Block block = getBlock(mBlockStartTime);
-        if (block == null) {
-            mBlockStartTime = null;
-        }
-
-        // Reset to defaults
-        mListView.setVisibility(VISIBLE);
-        mFailureView.setVisibility(GONE);
-
-        if (block != null) {
-            renderBlockDetail(block);
-        } else {
-            renderBlockList();
-        }
-    }
-
-    private void renderBlockList() {
-        ListAdapter listAdapter = mListView.getAdapter();
-        if (listAdapter instanceof BlockListAdapter) {
-            ((BlockListAdapter) listAdapter).notifyDataSetChanged();
-        } else {
-            BlockListAdapter adapter = new BlockListAdapter();
-            mListView.setAdapter(adapter);
-            mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                @Override
-                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                    mBlockStartTime = mBlockEntries.get(position).timeStart;
-                    updateUi();
-                }
-            });
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
-                invalidateOptionsMenu();
-                ActionBar actionBar = getActionBar();
-                if (actionBar != null) {
-                    actionBar.setDisplayHomeAsUpEnabled(false);
-                }
-            }
-            setTitle(getString(R.string.block_canary_block_list_title, getPackageName()));
-            mActionButton.setText(R.string.block_canary_delete_all);
-            mActionButton.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    LogWriter.deleteLogFiles();
-                    mBlockEntries = Collections.emptyList();
-                    updateUi();
-                }
-            });
-        }
-        mActionButton.setVisibility(mBlockEntries.isEmpty() ? GONE : VISIBLE);
-    }
-
-    private void renderBlockDetail(final Block block) {
-        ListAdapter listAdapter = mListView.getAdapter();
-        final BlockDetailAdapter adapter;
-        if (listAdapter instanceof BlockDetailAdapter) {
-            adapter = (BlockDetailAdapter) listAdapter;
-        } else {
-            adapter = new BlockDetailAdapter();
-            mListView.setAdapter(adapter);
-            mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-                @Override
-                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                    adapter.toggleRow(position);
-                }
-            });
-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
-                invalidateOptionsMenu();
-                ActionBar actionBar = getActionBar();
-                if (actionBar != null) {
-                    actionBar.setDisplayHomeAsUpEnabled(true);
-                }
-            }
-            mActionButton.setVisibility(VISIBLE);
-            mActionButton.setText(R.string.block_canary_delete);
-            mActionButton.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    if (block != null) {
-                        block.logFile.delete();
-                        mBlockStartTime = null;
-                        mBlockEntries.remove(block);
-                        updateUi();
-                    }
-                }
-            });
-        }
-        adapter.update(block);
-        setTitle(getString(R.string.block_canary_class_has_blocked, block.timeCost));
-    }
-
-    private Block getBlock(String startTime) {
-        if (mBlockEntries == null || TextUtils.isEmpty(startTime)) {
-            return null;
-        }
-        for (Block block : mBlockEntries) {
-            if (block.timeStart.equals(startTime)) {
-                return block;
-            }
-        }
-        return null;
-    }
-
-    class BlockListAdapter extends BaseAdapter {
-
-        @Override
-        public int getCount() {
-            return mBlockEntries.size();
-        }
-
-        @Override
-        public Block getItem(int position) {
-            return mBlockEntries.get(position);
-        }
-
-        @Override
-        public long getItemId(int position) {
-            return position;
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            if (convertView == null) {
-                convertView = LayoutInflater.from(DisplayBlockActivity.this)
-                        .inflate(R.layout.block_canary_block_row, parent, false);
-            }
-            TextView titleView = (TextView) convertView.findViewById(R.id.__leak_canary_row_text);
-            TextView timeView = (TextView) convertView.findViewById(R.id.__leak_canary_row_time);
-            Block block = getItem(position);
-
-            String index;
-            if (position == 0 && mBlockEntries.size() == mMaxStoredBlockCount) {
-                index = "MAX. ";
-            } else {
-                index = (mBlockEntries.size() - position) + ". ";
-            }
-
-            String title = index + block.getKeyStackString() + " " +
-                    getString(R.string.block_canary_class_has_blocked, block.timeCost);
-            titleView.setText(title);
-            String time = DateUtils.formatDateTime(DisplayBlockActivity.this,
-                    block.logFile.lastModified(), FORMAT_SHOW_TIME | FORMAT_SHOW_DATE);
-            timeView.setText(time);
-            return convertView;
-        }
-    }
-
-    static class LoadBlocks implements Runnable {
-
-        static final List<LoadBlocks> inFlight = new ArrayList<>();
-        static final Executor backgroundExecutor = Executors.newSingleThreadExecutor();
-        private DisplayBlockActivity activityOrNull;
-        private final Handler mainHandler;
-
-        LoadBlocks(DisplayBlockActivity activity) {
-            this.activityOrNull = activity;
-            mainHandler = new Handler(Looper.getMainLooper());
-        }
-
-        static void load(DisplayBlockActivity activity) {
-            LoadBlocks loadBlocks = new LoadBlocks(activity);
-            inFlight.add(loadBlocks);
-            backgroundExecutor.execute(loadBlocks);
-        }
-
-        static void forgetActivity() {
-            for (LoadBlocks loadBlocks : inFlight) {
-                loadBlocks.activityOrNull = null;
-            }
-            inFlight.clear();
-        }
-
-        @Override
-        public void run() {
-            final List<Block> blocks = new ArrayList<Block>();
-            File[] files = BlockCanaryInternals.getLogFiles();
-            if (files != null) {
-                for (File blockFile : files) {
-                    try {
-                        blocks.add(Block.newInstance(blockFile));
-                    } catch (Exception e) {
-                        // Likely a format change in the blockFile
-                        blockFile.delete();
-                        Log.e(TAG, "Could not read block log file, deleted :" + blockFile, e);
-                    }
-                }
-                Collections.sort(blocks, new Comparator<Block>() {
-                    @Override
-                    public int compare(Block lhs, Block rhs) {
-                        return Long.valueOf(rhs.logFile.lastModified())
-                                .compareTo(lhs.logFile.lastModified());
-                    }
-                });
-            }
-            mainHandler.post(new Runnable() {
-                @Override
-                public void run() {
-                    inFlight.remove(LoadBlocks.this);
-                    if (activityOrNull != null) {
-                        activityOrNull.mBlockEntries = blocks;
-                        //Log.d("BlockCanary", "load block entries: " + blocks.size());
-                        activityOrNull.updateUi();
-                    }
-                }
-            });
-        }
-    }
-
-    static String classSimpleName(String className) {
-        int separator = className.lastIndexOf('.');
-        if (separator == -1) {
-            return className;
-        } else {
-            return className.substring(separator + 1);
-        }
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayLeakConnectorView.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayLeakConnectorView.java
deleted file mode 100644
index 310e78c..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayLeakConnectorView.java
+++ /dev/null
@@ -1,116 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.ui;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.util.AttributeSet;
-import android.view.View;
-
-import static android.graphics.Bitmap.Config.ARGB_8888;
-
-public final class DisplayLeakConnectorView extends View {
-
-    private static final Paint iconPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-    private static final Paint rootPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-    private static final Paint leakPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-    private static final Paint clearPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-
-    static {
-        iconPaint.setColor(LeakCanaryUi.LIGHT_GREY);
-        rootPaint.setColor(LeakCanaryUi.ROOT_COLOR);
-        leakPaint.setColor(LeakCanaryUi.LEAK_COLOR);
-        clearPaint.setColor(Color.TRANSPARENT);
-        clearPaint.setXfermode(LeakCanaryUi.CLEAR_XFER_MODE);
-    }
-
-    public enum Type {
-        START, NODE, END
-    }
-
-    private Type type;
-    private Bitmap cache;
-
-    public DisplayLeakConnectorView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-
-        type = Type.NODE;
-    }
-
-    @SuppressWarnings("SuspiciousNameCombination")
-    @Override
-    protected void onDraw(Canvas canvas) {
-        int width = getWidth();
-        int height = getHeight();
-
-        if (cache != null && (cache.getWidth() != width || cache.getHeight() != height)) {
-            cache.recycle();
-            cache = null;
-        }
-
-        if (cache == null) {
-            cache = Bitmap.createBitmap(width, height, ARGB_8888);
-
-            Canvas cacheCanvas = new Canvas(cache);
-
-            float halfWidth = width / 2f;
-            float halfHeight = height / 2f;
-            float thirdWidth = width / 3f;
-
-            float strokeSize = LeakCanaryUi.dpToPixel(4f, getResources());
-
-            iconPaint.setStrokeWidth(strokeSize);
-            rootPaint.setStrokeWidth(strokeSize);
-
-            switch (type) {
-                case NODE:
-                    cacheCanvas.drawLine(halfWidth, 0, halfWidth, height, iconPaint);
-                    cacheCanvas.drawCircle(halfWidth, halfHeight, halfWidth, iconPaint);
-                    cacheCanvas.drawCircle(halfWidth, halfHeight, thirdWidth, clearPaint);
-                    break;
-                case START:
-                    float radiusClear = halfWidth - strokeSize / 2f;
-                    cacheCanvas.drawRect(0, 0, width, radiusClear, rootPaint);
-                    cacheCanvas.drawCircle(0, radiusClear, radiusClear, clearPaint);
-                    cacheCanvas.drawCircle(width, radiusClear, radiusClear, clearPaint);
-                    cacheCanvas.drawLine(halfWidth, 0, halfWidth, halfHeight, rootPaint);
-                    cacheCanvas.drawLine(halfWidth, halfHeight, halfWidth, height, iconPaint);
-                    cacheCanvas.drawCircle(halfWidth, halfHeight, halfWidth, iconPaint);
-                    cacheCanvas.drawCircle(halfWidth, halfHeight, thirdWidth, clearPaint);
-                    break;
-                default:
-                    cacheCanvas.drawLine(halfWidth, 0, halfWidth, halfHeight, iconPaint);
-                    cacheCanvas.drawCircle(halfWidth, halfHeight, thirdWidth, leakPaint);
-                    break;
-            }
-        }
-        canvas.drawBitmap(cache, 0, 0, null);
-    }
-
-    public void setType(Type type) {
-        if (type != this.type) {
-            this.type = type;
-            if (cache != null) {
-                cache.recycle();
-                cache = null;
-            }
-            invalidate();
-        }
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/LeakCanaryUi.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/LeakCanaryUi.java
deleted file mode 100644
index 2950951..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/LeakCanaryUi.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.ui;
-
-import android.content.res.Resources;
-import android.graphics.PorterDuffXfermode;
-import android.util.DisplayMetrics;
-import static android.graphics.PorterDuff.Mode.CLEAR;
-
-final class LeakCanaryUi {
-    static final int LIGHT_GREY = 0xFFbababa;
-    static final int ROOT_COLOR = 0xFF84a6c5;
-    static final int LEAK_COLOR = 0xFFb1554e;
-
-    static final PorterDuffXfermode CLEAR_XFER_MODE = new PorterDuffXfermode(CLEAR);
-
-    private LeakCanaryUi() {
-        throw new AssertionError();
-    }
-
-    /**
-     * Converts from device independent pixels (dp or dip) to
-     * device dependent pixels. This method returns the input
-     * multiplied by the display's density. The result is not
-     * rounded nor clamped.
-     *
-     * The value returned by this method is well suited for
-     * drawing with the Canvas API but should not be used to
-     * set layout dimensions.
-     *
-     * @param dp The value in dp to convert to pixels
-     * @param resources An instances of Resources
-     */
-    static float dpToPixel(float dp, Resources resources) {
-        DisplayMetrics metrics = resources.getDisplayMetrics();
-        return metrics.density * dp;
-    }
-}
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/MoreDetailsView.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/MoreDetailsView.java
deleted file mode 100644
index f9418e6..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/MoreDetailsView.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.ui;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.util.AttributeSet;
-import android.view.View;
-
-public final class MoreDetailsView extends View {
-
-    private final Paint mIconPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-    private boolean mFolding = true;
-
-    public MoreDetailsView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-
-        mIconPaint.setStrokeWidth(LeakCanaryUi.dpToPixel(2f, getResources()));
-        mIconPaint.setColor(LeakCanaryUi.ROOT_COLOR);
-    }
-
-
-    @Override protected void onDraw(Canvas canvas) {
-        int width = getWidth();
-        int height = getHeight();
-        int halfHeight = height / 2;
-        int halfWidth = width / 2;
-
-        canvas.drawLine(0, halfHeight, width, halfHeight, mIconPaint);
-        if (mFolding) {
-            canvas.drawLine(halfWidth, 0, halfWidth, height, mIconPaint);
-        }
-    }
-
-    public void setFolding(boolean folding) {
-        if (folding != this.mFolding) {
-            this.mFolding = folding;
-            invalidate();
-        }
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
deleted file mode 100644
index 04eeb9c..0000000
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
+++ /dev/null
@@ -1,60 +0,0 @@
-package com.github.moduth.blockcanary.ui;
-
-import android.annotation.TargetApi;
-import android.app.Notification;
-import android.app.NotificationManager;
-import android.app.PendingIntent;
-import android.content.Context;
-import android.content.Intent;
-import com.github.moduth.blockcanary.OnBlockEventInterceptor;
-import com.github.moduth.blockcanary.R;
-
-import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
-import static android.os.Build.VERSION.SDK_INT;
-import static android.os.Build.VERSION_CODES.HONEYCOMB;
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
-
-public class Notifier implements OnBlockEventInterceptor {
-
-    @Override
-    public void onBlockEvent(Context context, String timeStart) {
-        Intent intent = new Intent(context, DisplayBlockActivity.class);
-        intent.putExtra("show_latest", timeStart);
-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
-        PendingIntent pendingIntent = PendingIntent.getActivity(context, 1, intent, FLAG_UPDATE_CURRENT);
-        String contentTitle = context.getString(R.string.block_canary_class_has_blocked, timeStart);
-        String contentText = context.getString(R.string.block_canary_notification_message);
-        show(context, contentTitle, contentText, pendingIntent);
-    }
-
-    @TargetApi(HONEYCOMB)
-    private void show(Context context, String contentTitle, String contentText, PendingIntent pendingIntent) {
-        NotificationManager notificationManager = (NotificationManager)
-                context.getSystemService(Context.NOTIFICATION_SERVICE);
-
-        Notification notification;
-        if (SDK_INT < HONEYCOMB) {
-            notification = new Notification();
-            notification.icon = R.drawable.block_canary_notification;
-            notification.when = System.currentTimeMillis();
-            notification.flags |= Notification.FLAG_AUTO_CANCEL;
-            notification.defaults = Notification.DEFAULT_SOUND;
-            notification.setLatestEventInfo(context, contentTitle, contentText, pendingIntent);
-        } else {
-            Notification.Builder builder = new Notification.Builder(context)
-                    .setSmallIcon(R.drawable.block_canary_notification)
-                    .setWhen(System.currentTimeMillis())
-                    .setContentTitle(contentTitle)
-                    .setContentText(contentText)
-                    .setAutoCancel(true)
-                    .setContentIntent(pendingIntent)
-                    .setDefaults(Notification.DEFAULT_SOUND);
-            if (SDK_INT < JELLY_BEAN) {
-                notification = builder.getNotification();
-            } else {
-                notification = builder.build();
-            }
-        }
-        notificationManager.notify(0xDEAFBEEF, notification);
-    }
-}
diff --git a/blockcanary-android/src/main/res/drawable-xhdpi/block_canary_icon.png b/blockcanary-android/src/main/res/drawable-xhdpi/block_canary_icon.png
deleted file mode 100644
index a5e85b4..0000000
Binary files a/blockcanary-android/src/main/res/drawable-xhdpi/block_canary_icon.png and /dev/null differ
diff --git a/blockcanary-android/src/main/res/drawable-xhdpi/block_canary_notification.png b/blockcanary-android/src/main/res/drawable-xhdpi/block_canary_notification.png
deleted file mode 100644
index b2978d5..0000000
Binary files a/blockcanary-android/src/main/res/drawable-xhdpi/block_canary_notification.png and /dev/null differ
diff --git a/blockcanary-android/src/main/res/layout/block_canary_block_row.xml b/blockcanary-android/src/main/res/layout/block_canary_block_row.xml
deleted file mode 100644
index 163ef7e..0000000
--- a/blockcanary-android/src/main/res/layout/block_canary_block_row.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:minHeight="48dp"
-        android:padding="16dp"
-        android:orientation="horizontal">
-
-    <TextView
-            android:id="@+id/__leak_canary_row_text"
-            android:layout_width="0dp"
-            android:layout_weight="1"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"
-            android:textSize="18sp" />
-
-    <TextView
-            android:id="@+id/__leak_canary_row_time"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"
-            android:textColor="#919191"
-            android:textSize="14sp" />
-
-</LinearLayout>
diff --git a/blockcanary-android/src/main/res/layout/block_canary_display_leak.xml b/blockcanary-android/src/main/res/layout/block_canary_display_leak.xml
deleted file mode 100644
index ef023d4..0000000
--- a/blockcanary-android/src/main/res/layout/block_canary_display_leak.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:background="#3c3c3c">
-    <ListView
-            android:id="@+id/__leak_canary_display_leak_list"
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="1"
-            android:dividerHeight="0dp"
-            android:divider="@null"/>
-    <TextView
-            android:id="@+id/__leak_canary_display_leak_failure"
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="1"
-            android:textSize="12sp"
-            android:visibility="gone"/>
-    <Button
-            android:id="@+id/__leak_canary_action"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:visibility="gone"/>
-
-</LinearLayout>
diff --git a/blockcanary-android/src/main/res/layout/block_canary_ref_row.xml b/blockcanary-android/src/main/res/layout/block_canary_ref_row.xml
deleted file mode 100644
index 0f9ccf6..0000000
--- a/blockcanary-android/src/main/res/layout/block_canary_ref_row.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:minHeight="48dp"
-        android:orientation="horizontal">
-
-    <com.github.moduth.blockcanary.ui.DisplayLeakConnectorView
-            android:id="@+id/__leak_canary_row_connector"
-            android:layout_width="16dp"
-            android:layout_height="match_parent"
-            android:layout_marginStart="16dp"
-            android:layout_marginEnd="16dp"/>
-
-    <TextView
-            android:id="@+id/__leak_canary_row_text"
-            android:layout_width="0dp"
-            android:layout_weight="1"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-
-    <com.github.moduth.blockcanary.ui.MoreDetailsView
-            android:id="@+id/__leak_canary_row_more"
-            android:layout_width="12dp"
-            android:layout_height="12dp"
-            android:layout_gravity="center_vertical"
-            android:layout_marginStart="16dp"
-            android:layout_marginEnd="16dp"/>
-
-</LinearLayout>
diff --git a/blockcanary-android/src/main/res/layout/block_canary_ref_top_row.xml b/blockcanary-android/src/main/res/layout/block_canary_ref_top_row.xml
deleted file mode 100644
index 7d34681..0000000
--- a/blockcanary-android/src/main/res/layout/block_canary_ref_top_row.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<TextView
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:id="@+id/__leak_canary_row_text"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="16dp"
-        android:textSize="18sp"
-        android:background="#84a6c5"
-        android:padding="16dp"
-        android:textColor="#ffffff" />
diff --git a/blockcanary-android/src/main/res/values-v14/themes.xml b/blockcanary-android/src/main/res/values-v14/themes.xml
deleted file mode 100644
index 0f875ae..0000000
--- a/blockcanary-android/src/main/res/values-v14/themes.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <style name="block_canary_BlockCanary.Base" parent="android:Theme.Holo">
-    </style>
-</resources>
\ No newline at end of file
diff --git a/blockcanary-android/src/main/res/values-v21/themes.xml b/blockcanary-android/src/main/res/values-v21/themes.xml
deleted file mode 100644
index d68c069..0000000
--- a/blockcanary-android/src/main/res/values-v21/themes.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <style name="block_canary_BlockCanary.Base" parent="android:Theme.Material">
-    </style>
-</resources>
\ No newline at end of file
diff --git a/blockcanary-android/src/main/res/values/strings.xml b/blockcanary-android/src/main/res/values/strings.xml
deleted file mode 100644
index 54860d1..0000000
--- a/blockcanary-android/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<resources>
-    <string name="app_name">BlockCanary</string>
-    <string name="display_activity_label">Blocks</string>
-    <string name="block_canary_share_leak">Share info</string>
-    <string name="block_canary_share_stack_dump">Share stack dump</string>
-    <string name="block_canary_share_with">Share with…</string>
-    <string name="block_canary_block_list_title">Blocks in %s</string>
-    <string name="block_canary_delete">Delete</string>
-    <string name="block_canary_delete_all">Delete all</string>
-    <string name="block_canary_class_has_blocked">blocked %s ms</string>
-    <string name="block_canary_notification_message">Click for more details</string>
-</resources>
diff --git a/blockcanary-android/src/main/res/values/themes.xml b/blockcanary-android/src/main/res/values/themes.xml
deleted file mode 100644
index 913cbfb..0000000
--- a/blockcanary-android/src/main/res/values/themes.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <style name="block_canary_BlockCanary.Base" parent="android:Theme">
-    </style>
-</resources>
\ No newline at end of file
diff --git a/blockcanary-core/.gitignore b/blockcanary-core/.gitignore
deleted file mode 100644
index 796b96d..0000000
--- a/blockcanary-core/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/build
diff --git a/blockcanary-core/build.gradle b/blockcanary-core/build.gradle
deleted file mode 100644
index 83af379..0000000
--- a/blockcanary-core/build.gradle
+++ /dev/null
@@ -1,24 +0,0 @@
-apply plugin: 'com.android.library'
-apply from: 'gradle-mvn-push.gradle'
-
-android {
-    compileSdkVersion LIBRARY_COMPILE_SDK_VERSION
-    buildToolsVersion LIBRARY_BUILD_TOOLS_VERSION
-
-    defaultConfig {
-        minSdkVersion LIBRARY_MIN_SDK_VERSION
-        targetSdkVersion LIBRARY_TARGET_SDK_VERSION
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-}
-
-dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
-}
diff --git a/blockcanary-core/gradle-mvn-push.gradle b/blockcanary-core/gradle-mvn-push.gradle
deleted file mode 100644
index a5fe642..0000000
--- a/blockcanary-core/gradle-mvn-push.gradle
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    task androidJavadocs(type: Javadoc) {
-        options.encoding = "utf-8"
-        source = android.sourceSets.main.java.srcDirs
-        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    }
-
-    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-        classifier = 'javadoc'
-        from androidJavadocs.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.sourceFiles
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocsJar
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-core/gradle.properties b/blockcanary-core/gradle.properties
deleted file mode 100644
index fc6afc5..0000000
--- a/blockcanary-core/gradle.properties
+++ /dev/null
@@ -1,18 +0,0 @@
-POM_NAME=Android BlockCanary Core Library
-POM_ARTIFACT_ID=blockcanary-core
-POM_PACKAGING=aar
-VERSION_NAME=1.2.1
-VERSION_CODE=10
-GROUP=com.github.moduth
-
-POM_DESCRIPTION=Android BlockCanary Library
-POM_URL=https://github.com/moduth/blockcanary
-POM_SCM_URL=https://github.com/moduth/blockcanary
-POM_SCM_CONNECTION=scm:https://github.com/moduth/blockcanary/block-canary.git
-POM_SCM_DEV_CONNECTION=scm:https://github.com/moduth/blockcanary/block-canary.git
-POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
-POM_LICENCE_DIST=repo
-POM_DEVELOPER_ID=moduth
-POM_DEVELOPER_NAME=moduth
-POM_DEVELOPER_URL=https://github.com/moduth
\ No newline at end of file
diff --git a/blockcanary-core/proguard-rules.pro b/blockcanary-core/proguard-rules.pro
deleted file mode 100644
index 359be20..0000000
--- a/blockcanary-core/proguard-rules.pro
+++ /dev/null
@@ -1,17 +0,0 @@
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in /Users/yifan/dev/sdk/adt-bundle-mac-sdk/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the proguardFiles
-# directive in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/blockcanary-core/src/main/AndroidManifest.xml b/blockcanary-core/src/main/AndroidManifest.xml
deleted file mode 100644
index 8fc6ecc..0000000
--- a/blockcanary-core/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.github.moduth.blockcanary.core">
-
-    <!-- To store the heap dumps and leak analysis results. -->
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
-
-    <application>
-
-    </application>
-
-</manifest>
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/BlockCanaryCore.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/BlockCanaryCore.java
deleted file mode 100644
index 8ec99a1..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/BlockCanaryCore.java
+++ /dev/null
@@ -1,119 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.os.Looper;
-
-import com.github.moduth.blockcanary.log.Block;
-
-import java.util.ArrayList;
-
-/**
- * BlockCanary internal core.
- *
- * @author [abner](github nimengbo), markzhai
- */
-public class BlockCanaryCore {
-
-    public LooperPrinter mainLooperPrinter;
-    public ThreadStackSampler threadStackSampler;
-    public CpuSampler cpuSampler;
-
-    private static BlockCanaryCore sInstance;
-    private static IBlockCanaryContext sBlockCanaryContext;
-
-    private OnBlockEventInterceptor mOnBlockEventInterceptor;
-
-    public BlockCanaryCore() {
-
-        threadStackSampler = new ThreadStackSampler(Looper.getMainLooper().getThread(),
-                sBlockCanaryContext.getConfigDumpIntervalMillis());
-        cpuSampler = new CpuSampler(sBlockCanaryContext.getConfigDumpIntervalMillis());
-
-        setMainLooperPrinter(new LooperPrinter(new BlockListener() {
-
-            @Override
-            public void onBlockEvent(long realTimeStart, long realTimeEnd,
-                                     long threadTimeStart, long threadTimeEnd) {
-                // Get recent thread-stack entries and cpu usage
-                ArrayList<String> threadStackEntries = threadStackSampler
-                        .getThreadStackEntries(realTimeStart, realTimeEnd);
-                // Log.d("BlockCanary", "threadStackEntries: " + threadStackEntries.size());
-                if (!threadStackEntries.isEmpty()) {
-                    Block block = Block.newInstance()
-                            .setMainThreadTimeCost(realTimeStart, realTimeEnd, threadTimeStart, threadTimeEnd)
-                            .setCpuBusyFlag(cpuSampler.isCpuBusy(realTimeStart, realTimeEnd))
-                            .setRecentCpuRate(cpuSampler.getCpuRateInfo())
-                            .setThreadStackEntries(threadStackEntries)
-                            .flushString();
-                    LogWriter.saveLooperLog(block.toString());
-
-                    if (getContext().isNeedDisplay() && mOnBlockEventInterceptor != null) {
-                        mOnBlockEventInterceptor.onBlockEvent(getContext().getContext(), block.timeStart);
-                    }
-                }
-            }
-        }, getContext().getConfigBlockThreshold()));
-        LogWriter.cleanOldFiles();
-    }
-
-    /**
-     * Get BlockCanaryCore singleton
-     *
-     * @return BlockCanaryCore instance
-     */
-    public static BlockCanaryCore get() {
-        if (sInstance == null) {
-            synchronized (BlockCanaryCore.class) {
-                if (sInstance == null) {
-                    sInstance = new BlockCanaryCore();
-                }
-            }
-        }
-        return sInstance;
-    }
-
-    /**
-     * set {@link IBlockCanaryContext} implementation
-     *
-     * @param blockCanaryContext blockCanaryContext
-     */
-    public static void setIBlockCanaryContext(IBlockCanaryContext blockCanaryContext) {
-        sBlockCanaryContext = blockCanaryContext;
-    }
-
-    public static IBlockCanaryContext getContext() {
-        return sBlockCanaryContext;
-    }
-
-    public void setOnBlockEventInterceptor(OnBlockEventInterceptor onBlockEventInterceptor) {
-        mOnBlockEventInterceptor = onBlockEventInterceptor;
-    }
-
-    public void setMainLooperPrinter(LooperPrinter looperPrinter) {
-        mainLooperPrinter = looperPrinter;
-    }
-
-    /**
-     * Because postDelayed maybe cause more delay than MonitorEnv.get().getConfigBlockThreshold()
-     * it maybe cause can not get Thread Task info when notify block event.
-     * So, is it be better to make delay time < MonitorEnv.get().getConfigBlockThreshold(),
-     * such as MonitorEnv.get().getConfigBlockThreshold() * 0.8f OR MonitorEnv.get().getConfigBlockThreshold() - 20 ?
-     *
-     * @return sample delay
-     */
-    long getSampleDelay() {
-        return (long) (BlockCanaryCore.getContext().getConfigBlockThreshold() * 0.8f);
-    }
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/BlockListener.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/BlockListener.java
deleted file mode 100644
index a4a9523..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/BlockListener.java
+++ /dev/null
@@ -1,19 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-interface BlockListener {
-    void onBlockEvent(long realStartTime, long realTimeEnd, long threadTimeStart,
-                      long threadTimeEnd);
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/CpuSampler.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
deleted file mode 100644
index 815d6e8..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
+++ /dev/null
@@ -1,212 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.util.Log;
-
-import com.github.moduth.blockcanary.log.Block;
-
-import java.io.BufferedReader;
-import java.io.FileInputStream;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.text.SimpleDateFormat;
-import java.util.LinkedHashMap;
-import java.util.Map;
-
-/**
- * CPU Sampler, dumps cpu usage information.
- * <p>
- * Created by markzhai on 2015/9/25.
- */
-class CpuSampler extends Sampler {
-
-    private static final String TAG = "CpuSampler";
-
-    /**
-     * TODO: Explain how we define cpu busy in README
-     */
-    private final int BUSY_TIME;
-    private static final int MAX_ENTRY_COUNT = 10;
-
-    private final LinkedHashMap<Long, String> mCpuInfoEntries = new LinkedHashMap<>();
-    private int mPid = 0;
-    private long mUserLast = 0;
-    private long mSystemLast = 0;
-    private long mIdleLast = 0;
-    private long mIoWaitLast = 0;
-    private long mTotalLast = 0;
-    private long mAppCpuTimeLast = 0;
-
-    public CpuSampler(long sampleIntervalMillis) {
-        super(sampleIntervalMillis);
-        BUSY_TIME = (int) (mSampleIntervalMillis * 1.2f);
-    }
-
-    @Override
-    public void start() {
-        super.start();
-        reset();
-    }
-
-    /**
-     * Get cpu rate information
-     *
-     * @return string show cpu rate information
-     */
-    public String getCpuRateInfo() {
-        StringBuilder sb = new StringBuilder();
-        final SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd HH:mm:ss.SSS");
-        synchronized (mCpuInfoEntries) {
-            for (Map.Entry<Long, String> entry : mCpuInfoEntries.entrySet()) {
-                long time = entry.getKey();
-                sb.append(dateFormat.format(time))
-                        .append(' ')
-                        .append(entry.getValue())
-                        .append(Block.SEPARATOR);
-            }
-        }
-        return sb.toString();
-    }
-
-    public boolean isCpuBusy(long start, long end) {
-        if (end - start > mSampleIntervalMillis) {
-            long s = start - mSampleIntervalMillis;
-            long e = start + mSampleIntervalMillis;
-            long last = 0;
-            synchronized (mCpuInfoEntries) {
-                for (Map.Entry<Long, String> entry : mCpuInfoEntries.entrySet()) {
-                    long time = entry.getKey();
-                    if (s < time && time < e) {
-                        if (last != 0 && time - last > BUSY_TIME) {
-                            return true;
-                        }
-                        last = time;
-                    }
-                }
-            }
-        }
-        return false;
-    }
-
-    @Override
-    protected void doSample() {
-        BufferedReader cpuReader = null;
-        BufferedReader pidReader = null;
-        try {
-            cpuReader = new BufferedReader(new InputStreamReader(
-                    new FileInputStream("/proc/stat")), 1000);
-            String cpuRate = cpuReader.readLine();
-            if (cpuRate == null) {
-                cpuRate = "";
-            }
-
-            if (mPid == 0) {
-                mPid = android.os.Process.myPid();
-            }
-            pidReader = new BufferedReader(new InputStreamReader(
-                    new FileInputStream("/proc/" + mPid + "/stat")), 1000);
-            String pidCpuRate = pidReader.readLine();
-            if (pidCpuRate == null) {
-                pidCpuRate = "";
-            }
-
-            parseCpuRate(cpuRate, pidCpuRate);
-        } catch (Throwable ex) {
-            Log.e(TAG, "doSample: ", ex);
-        } finally {
-            try {
-                if (cpuReader != null) {
-                    cpuReader.close();
-                }
-                if (pidReader != null) {
-                    pidReader.close();
-                }
-            } catch (IOException e) {
-                Log.e(TAG, "doSample: ", e);
-            }
-        }
-    }
-
-    private void reset() {
-        mUserLast = 0;
-        mSystemLast = 0;
-        mIdleLast = 0;
-        mIoWaitLast = 0;
-        mTotalLast = 0;
-        mAppCpuTimeLast = 0;
-    }
-
-    private void parseCpuRate(String cpuRate, String pidCpuRate) {
-        String[] cpuInfoArray = cpuRate.split(" ");
-        if (cpuInfoArray.length < 9) {
-            return;
-        }
-        // 从系统启动开始累计到当前时刻，用户态的CPU时间，不包含 nice值为负进程
-        long user = Long.parseLong(cpuInfoArray[2]);
-        // 从系统启动开始累计到当前时刻，nice值为负的进程所占用的CPU时间
-        long nice = Long.parseLong(cpuInfoArray[3]);
-        // 从系统启动开始累计到当前时刻，核心时间
-        long system = Long.parseLong(cpuInfoArray[4]);
-        // 从系统启动开始累计到当前时刻，除硬盘IO等待时间以外其它等待时间
-        long idle = Long.parseLong(cpuInfoArray[5]);
-        // 从系统启动开始累计到当前时刻，硬盘IO等待时间
-        long ioWait = Long.parseLong(cpuInfoArray[6]);
-        // CPU总时间 = 以上所有加上irq（硬中断）和softirq（软中断）的时间
-        long total = user + nice + system + idle + ioWait + Long.parseLong(cpuInfoArray[7]) + Long.parseLong(cpuInfoArray[8]);
-
-        String[] pidCpuInfos = pidCpuRate.split(" ");
-        if (pidCpuInfos.length < 17) {
-            return;
-        }
-
-        /*
-         * utime  Amount of time that this process has been scheduled in user mode
-         * stime  Amount of time that this process has been scheduled in kernel mode
-         * cutime Amount of time that this process's waited-for children have been scheduled in user mode
-         * cstime Amount of time that this process's waited-for children have been scheduled in kernel mode
-         * processCpuTime = utime + stime + cutime + cstime, which includes all its threads' cpu time
-         */
-        long appCpuTime = Long.parseLong(pidCpuInfos[13]) + Long.parseLong(pidCpuInfos[14])
-                + Long.parseLong(pidCpuInfos[15]) + Long.parseLong(pidCpuInfos[16]);
-
-        if (mTotalLast != 0) {
-            StringBuilder sb = new StringBuilder();
-            long idleTime = idle - mIdleLast;
-            long totalTime = total - mTotalLast;
-            sb.append("cpu:").append((totalTime - idleTime) * 100L / totalTime).append("% ")
-              .append("app:").append((appCpuTime - mAppCpuTimeLast) * 100L / totalTime).append("% ")
-              .append("[").append("user:").append((user - mUserLast) * 100L / totalTime).append("% ")
-              .append("system:").append((system - mSystemLast) * 100L / totalTime).append("% ")
-              .append("ioWait:").append((ioWait - mIoWaitLast) * 100L / totalTime).append("% ]");
-            synchronized (mCpuInfoEntries) {
-                mCpuInfoEntries.put(System.currentTimeMillis(), sb.toString());
-                if (mCpuInfoEntries.size() > MAX_ENTRY_COUNT) {
-                    for (Map.Entry<Long, String> entry : mCpuInfoEntries.entrySet()) {
-                        Long key = entry.getKey();
-                        mCpuInfoEntries.remove(key);
-                        break;
-                    }
-                }
-            }
-        }
-        mUserLast = user;
-        mSystemLast = system;
-        mIdleLast = idle;
-        mIoWaitLast = ioWait;
-        mTotalLast = total;
-
-        mAppCpuTimeLast = appCpuTime;
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/HandlerThread.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/HandlerThread.java
deleted file mode 100644
index 6307632..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/HandlerThread.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package com.github.moduth.blockcanary;
-
-import android.os.Handler;
-
-/**
- * Handler thread wrapper
- *
- * @author markzhai
- */
-class HandlerThread {
-
-    private static HandlerThreadWrapper sLoopThread = new HandlerThreadWrapper("loop");
-    private static HandlerThreadWrapper sWriteLogThread = new HandlerThreadWrapper("writelog");
-
-    private HandlerThread() {
-        throw new InstantiationError("Must not instantiate this class");
-    }
-
-    /**
-     * Get handler of looper thread
-     */
-    public static Handler getTimerThreadHandler() {
-        return sLoopThread.getHandler();
-    }
-
-    /**
-     * Get handler of log-writer thread
-     */
-    public static Handler getWriteLogFileThreadHandler() {
-        return sWriteLogThread.getHandler();
-    }
-
-    private static class HandlerThreadWrapper {
-        private Handler handler = null;
-
-        public HandlerThreadWrapper(String name) {
-            android.os.HandlerThread handlerThread = new android.os.HandlerThread("BlockCanaryThread_" + name);
-            handlerThread.start();
-            handler = new Handler(handlerThread.getLooper());
-        }
-
-        public Handler getHandler() {
-            return handler;
-        }
-    }
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/IBlockCanaryContext.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/IBlockCanaryContext.java
deleted file mode 100644
index 017d13d..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/IBlockCanaryContext.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.content.Context;
-
-import java.io.File;
-
-/**
- * interface defines {@link BlockCanaryCore} runtime environment.
- *
- * @author abner (nimengbo at github)
- */
-public interface IBlockCanaryContext {
-
-    int getConfigBlockThreshold();
-
-    boolean isNeedDisplay();
-
-    String getQualifier();
-
-    String getUid();
-
-    String getNetworkType();
-
-    Context getContext();
-
-    String getLogPath();
-
-    boolean zipLogFile(File[] src, File dest);
-
-    void uploadLogFile(File zippedFile);
-
-    String getStackFoldPrefix();
-
-    int getConfigDumpIntervalMillis();
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/LogWriter.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/LogWriter.java
deleted file mode 100644
index c46d61b..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/LogWriter.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.util.Log;
-
-import com.github.moduth.blockcanary.log.BlockCanaryInternals;
-
-import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.OutputStreamWriter;
-import java.text.SimpleDateFormat;
-
-/**
- * Log writer which runs in standalone thread.
- *
- * @author markzhai on 2015/9/25.
- */
-public class LogWriter {
-
-    private static final String TAG = "LogWriter";
-
-    private static final Object SAVE_DELETE_LOCK = new Object();
-    private static final SimpleDateFormat FILE_NAME_FORMATTER = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss.SSS");
-    private static final SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-    private static final long OBSOLETE_DURATION = 2 * 24 * 3600 * 1000L;
-
-    private LogWriter() {
-        throw new InstantiationError("Must not instantiate this class");
-    }
-
-    /**
-     * Save log to file
-     *
-     * @param str block log string
-     * @return log file path
-     */
-	public static String saveLooperLog(String str) {
-        String path;
-        synchronized (SAVE_DELETE_LOCK) {
-            path = saveLogToSDCard("looper", str);
-        }
-        return path;
-    }
-
-    /**
-     * Delete obsolete log files，see also {@code OBSOLETE_DURATION}
-     */
-    public static void cleanOldFiles() {
-        HandlerThread.getWriteLogFileThreadHandler().post(new Runnable() {
-            @Override
-            public void run() {
-                long now = System.currentTimeMillis();
-                File[] f = BlockCanaryInternals.getLogFiles();
-                if (f != null && f.length > 0) {
-                    synchronized (SAVE_DELETE_LOCK) {
-                        for (File aF : f) {
-                            if (now - aF.lastModified() > OBSOLETE_DURATION) {
-                                aF.delete();
-                            }
-                        }
-                    }
-                }
-            }
-        });
-    }
-
-    /**
-     * Delete all log files.
-     */
-    public static void deleteLogFiles() {
-        synchronized (SAVE_DELETE_LOCK) {
-            try {
-                File[] files = BlockCanaryInternals.getLogFiles();
-                if (files != null && files.length > 0) {
-                    for (File file : files) {
-                        file.delete();
-                    }
-                }
-            } catch (Throwable e) {
-                Log.e(TAG, "deleteLogFiles: ", e);
-            }
-        }
-    }
-
-    private static String saveLogToSDCard(String logFileName, String str) {
-        String path = "";
-        BufferedWriter writer = null;
-        try {
-            File file = BlockCanaryInternals.detectedBlockDirectory();
-            long time = System.currentTimeMillis();
-            path = file.getAbsolutePath() + "/" + logFileName + "-" + FILE_NAME_FORMATTER.format(time) + ".txt";
-            OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(path, true), "UTF-8");
-
-            writer = new BufferedWriter(out);
-            writer.write("\r\n**********************\r\n");
-            writer.write(TIME_FORMATTER.format(time) + "(write log time)");
-            writer.write("\r\n");
-            writer.write("\r\n");
-            writer.write(str);
-            writer.write("\r\n");
-            writer.flush();
-            writer.close();
-            writer = null;
-        } catch (Throwable t) {
-            Log.e(TAG, "saveLogToSDCard: ", t);
-        } finally {
-            try {
-                if (writer != null) {
-                    writer.close();
-                    writer = null;
-                }
-            } catch (Exception e) {
-                Log.e(TAG, "saveLogToSDCard: ", e);
-            }
-        }
-        return path;
-    }
-
-    public static File generateTempZipFile(String filename) {
-        return new File(BlockCanaryInternals.getPath() + "/" + filename + ".log.zip");
-    }
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/LooperPrinter.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/LooperPrinter.java
deleted file mode 100644
index 56e391f..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/LooperPrinter.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.os.SystemClock;
-import android.util.Printer;
-
-/**
- * LooperPrinter, uses message dispatch time to do monitoring.
- * <p/>
- * Created by markzhai on 2015/9/25.
- */
-class LooperPrinter implements Printer {
-
-    private static final int DEFAULT_BLOCK_THRESHOLD_MILLIS = 3000;
-
-    private long mBlockThresholdMillis = DEFAULT_BLOCK_THRESHOLD_MILLIS;
-    private long mStartTimeMillis = 0;
-    private long mStartThreadTimeMillis = 0;
-    private BlockListener mBlockListener = null;
-
-    private boolean mStartedPrinting = false;
-
-    public LooperPrinter(BlockListener blockListener, long blockThresholdMillis) {
-        if (blockListener == null) {
-            throw new IllegalArgumentException("blockListener should not be null.");
-        }
-        mBlockListener = blockListener;
-        mBlockThresholdMillis = blockThresholdMillis;
-    }
-
-    @Override
-    public void println(String x) {
-        if (!mStartedPrinting) {
-            mStartTimeMillis = System.currentTimeMillis();
-            mStartThreadTimeMillis = SystemClock.currentThreadTimeMillis();
-            mStartedPrinting = true;
-            startDump();
-        } else {
-            final long endTime = System.currentTimeMillis();
-            mStartedPrinting = false;
-            if (isBlock(endTime)) {
-                notifyBlockEvent(endTime);
-            }
-            stopDump();
-        }
-    }
-
-    private boolean isBlock(long endTime) {
-        return endTime - mStartTimeMillis > mBlockThresholdMillis;
-    }
-
-    private void notifyBlockEvent(final long endTime) {
-//        Log.d("BlockCanary", "notifyBlockEvent: " + endTime + " - " + mStartTimeMillis + ">" + mBlockThresholdMillis);
-        final long startTime = mStartTimeMillis;
-        final long startThreadTime = mStartThreadTimeMillis;
-        final long endThreadTime = SystemClock.currentThreadTimeMillis();
-        HandlerThread.getWriteLogFileThreadHandler().post(new Runnable() {
-            @Override
-            public void run() {
-                mBlockListener.onBlockEvent(startTime, endTime, startThreadTime, endThreadTime);
-            }
-        });
-    }
-
-    private void startDump() {
-        if (null != BlockCanaryCore.get().threadStackSampler) {
-            BlockCanaryCore.get().threadStackSampler.start();
-        }
-
-        if (null != BlockCanaryCore.get().cpuSampler) {
-            BlockCanaryCore.get().cpuSampler.start();
-        }
-    }
-
-    private void stopDump() {
-        if (null != BlockCanaryCore.get().threadStackSampler) {
-            BlockCanaryCore.get().threadStackSampler.stop();
-        }
-
-        if (null != BlockCanaryCore.get().cpuSampler) {
-            BlockCanaryCore.get().cpuSampler.stop();
-        }
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/OnBlockEventInterceptor.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/OnBlockEventInterceptor.java
deleted file mode 100644
index a54334b..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/OnBlockEventInterceptor.java
+++ /dev/null
@@ -1,12 +0,0 @@
-package com.github.moduth.blockcanary;
-
-import android.content.Context;
-
-/**
- * Created by markzhai on 16/1/22
- *
- * @author markzhai
- */
-public interface OnBlockEventInterceptor {
-    void onBlockEvent(Context context, String timeStart);
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/Sampler.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/Sampler.java
deleted file mode 100644
index 81e15bc..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/Sampler.java
+++ /dev/null
@@ -1,66 +0,0 @@
-package com.github.moduth.blockcanary;
-
-import java.util.concurrent.atomic.AtomicBoolean;
-
-/**
- * Common sampler defines sampling work flow.
- *
- * @author markzhai
- */
-public abstract class Sampler {
-
-    static final int DEFAULT_SAMPLE_INTERVAL_MILLIS = 300;
-
-    AtomicBoolean mIsDumping = new AtomicBoolean(false);
-
-    long mSampleIntervalMillis;
-
-    private Runnable mRunnable = new Runnable() {
-        @Override
-        public void run() {
-            doSample();
-
-            // If non-stop, doSample again after mSampleIntervalMillis elapses.
-            if (mIsDumping.get()) {
-                HandlerThread.getTimerThreadHandler().postDelayed(mRunnable,
-                        mSampleIntervalMillis);
-            }
-        }
-    };
-
-    public Sampler(long sampleIntervalMillis) {
-        if (0 == sampleIntervalMillis) {
-            sampleIntervalMillis = DEFAULT_SAMPLE_INTERVAL_MILLIS;
-        }
-        mSampleIntervalMillis = sampleIntervalMillis;
-    }
-
-    /**
-     * start sampling.
-     */
-    public void start() {
-        // exit if dumping
-        if (mIsDumping.get()) {
-            return;
-        }
-        mIsDumping.set(true);
-
-        HandlerThread.getTimerThreadHandler().removeCallbacks(mRunnable);
-        HandlerThread.getTimerThreadHandler().postDelayed(mRunnable,
-                BlockCanaryCore.get().getSampleDelay());
-    }
-
-    /**
-     * stop sampling
-     */
-    public void stop() {
-        // exit if not dumping
-        if (!mIsDumping.get()) {
-            return;
-        }
-        mIsDumping.set(false);
-        HandlerThread.getTimerThreadHandler().removeCallbacks(mRunnable);
-    }
-
-    abstract void doSample();
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/ThreadStackSampler.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/ThreadStackSampler.java
deleted file mode 100644
index d04671b..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/ThreadStackSampler.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import com.github.moduth.blockcanary.log.Block;
-
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.LinkedHashMap;
-import java.util.Locale;
-
-/**
- * {@link ThreadStackSampler} dumps main thread stack and saves last recent stack piece locally.
- * <p>
- * Created by markzhai on 2015/9/25.
- */
-class ThreadStackSampler extends Sampler {
-
-    private static final LinkedHashMap<Long, String> mThreadStackEntries = new LinkedHashMap<>();
-    private static final int DEFAULT_MAX_ENTRY_COUNT = 10;
-
-    private int mMaxEntryCount = DEFAULT_MAX_ENTRY_COUNT;
-
-    private Thread mThread;
-
-    public ThreadStackSampler(Thread thread, long sampleIntervalMillis) {
-        this(thread, DEFAULT_MAX_ENTRY_COUNT, sampleIntervalMillis);
-    }
-
-    public ThreadStackSampler(Thread thread, int maxEntryCount, long sampleIntervalMillis) {
-        super(sampleIntervalMillis);
-        mThread = thread;
-        mMaxEntryCount = maxEntryCount;
-    }
-
-    public ArrayList<String> getThreadStackEntries(long startTime, long endTime) {
-        SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd HH:mm:ss.SSS", Locale.US);
-        ArrayList<String> result = new ArrayList<>();
-        synchronized (mThreadStackEntries) {
-            for (Long entryTime : mThreadStackEntries.keySet()) {
-                if (startTime < entryTime && entryTime < endTime) {
-                    result.add(dateFormat.format(entryTime) + Block.SEPARATOR + Block.SEPARATOR + mThreadStackEntries.get(entryTime));
-                }
-            }
-        }
-        return result;
-    }
-
-    @Override
-    protected void doSample() {
-//        Log.d("BlockCanary", "sample thread stack: [" + mThreadStackEntries.size() + ", " + mMaxEntryCount + "]");
-        StringBuilder stringBuilder = new StringBuilder();
-
-        // Fetch thread stack info
-        for (StackTraceElement stackTraceElement : mThread.getStackTrace()) {
-            stringBuilder.append(stackTraceElement.toString())
-                    .append(Block.SEPARATOR);
-        }
-
-        // Eliminate obsolete entry
-        synchronized (mThreadStackEntries) {
-            if (mThreadStackEntries.size() == mMaxEntryCount && mMaxEntryCount > 0) {
-                mThreadStackEntries.remove(mThreadStackEntries.keySet().iterator().next());
-            }
-            mThreadStackEntries.put(System.currentTimeMillis(), stringBuilder.toString());
-        }
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/UploadMonitorLog.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/UploadMonitorLog.java
deleted file mode 100644
index 3132cae..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/UploadMonitorLog.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary;
-
-import android.util.Log;
-
-import com.github.moduth.blockcanary.log.BlockCanaryInternals;
-
-import java.io.File;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-
-/**
- * Upload monitor log.
- * <p>
- * Created by markzhai on 2015/9/25.
- */
-class UploadMonitorLog {
-
-    private static final String TAG = "UploadMonitorLog";
-    private static final SimpleDateFormat FORMAT = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
-
-    private UploadMonitorLog() {
-        throw new InstantiationError("Must not instantiate this class");
-    }
-
-    private static File zipFile() {
-        String timeString = Long.toString(System.currentTimeMillis());
-        try {
-            timeString = FORMAT.format(new Date());
-        } catch (Throwable e) {
-            Log.e(TAG, "zipFile: ", e);
-        }
-        File zippedFile = LogWriter.generateTempZipFile("Monitor_looper_" + timeString);
-        BlockCanaryCore.getContext().zipLogFile(BlockCanaryInternals.getLogFiles(), zippedFile);
-        LogWriter.deleteLogFiles();
-        return zippedFile;
-    }
-
-    public static void forceZipLogAndUpload() {
-        HandlerThread.getWriteLogFileThreadHandler().post(new Runnable() {
-            @Override
-            public void run() {
-                final File file = zipFile();
-                if (file.exists()) {
-                    BlockCanaryCore.getContext().uploadLogFile(file);
-                }
-            }
-        });
-    }
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java
deleted file mode 100644
index 0e05cf7..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java
+++ /dev/null
@@ -1,321 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.log;
-
-import android.content.Context;
-import android.content.pm.PackageInfo;
-import android.os.Build;
-import android.os.Build.VERSION;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-
-import com.github.moduth.blockcanary.BlockCanaryCore;
-
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.InputStreamReader;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-
-/**
- * @author markzhai on 15/9/27.
- */
-public final class Block {
-
-    private static final String TAG = "Block";
-
-    public static final String SEPARATOR = "\r\n";
-    public static final String KV = " = ";
-
-    public static final String KEY_QUA = "qualifier";
-    public static final String KEY_MODEL = "model";
-    public static final String KEY_API = "apilevel";
-    public static final String KEY_IMEI = "imei";
-    public static final String KEY_UID = "uid";
-    public static final String KEY_CPU_CORE = "cpuCore";
-    public static final String KEY_CPU_BUSY = "cpubusy";
-    public static final String KEY_CPU_RATE = "cpurate";
-    public static final String KEY_TIME_COST = "timecost";
-    public static final String KEY_THREAD_TIME_COST = "threadtimecost";
-    public static final String KEY_TIME_COST_START = "timestart";
-    public static final String KEY_TIME_COST_END = "timeend";
-    public static final String KEY_STACK = "stack";
-    public static final String KEY_PROCESS_NAME = "processName";
-    public static final String KEY_VERSION_NAME = "versionName";
-    public static final String KEY_VERSION_CODE = "versionCode";
-    public static final String KEY_NETWORK = "network";
-    public static final String KEY_TOTAL_MEMORY = "totalMemory";
-    public static final String KEY_FREE_MEMORY = "freeMemory";
-    public static final String NEW_INSTANCE = "newInstance: ";
-
-
-    public String qualifier;
-    public String model;
-    public String apiLevel = "";
-    public String imei = "";
-    public String uid;
-    public int cpuCoreNum;
-    public String processName;
-    public String versionName = "";
-    public int versionCode;
-    public String network;
-    public String freeMemory;
-    public String totalMemory;
-    public long timeCost;
-    public long threadTimeCost;
-    public String timeStart;
-    public String timeEnd;
-    public boolean cpuBusy;
-    public String cpuRateInfo;
-    public ArrayList<String> threadStackEntries = new ArrayList<String>();
-    public File logFile;
-
-    private StringBuilder basicSb = new StringBuilder();
-    private StringBuilder cpuSb = new StringBuilder();
-    private StringBuilder timeSb = new StringBuilder();
-    private StringBuilder stackSb = new StringBuilder();
-    private static final SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("MM-dd HH:mm:ss.SSS");
-    private static final String EMPTY_IMEI = "empty_imei";
-
-    private Block() {
-    }
-
-    public static Block newInstance() {
-        Block block = new Block();
-        Context context = BlockCanaryCore.getContext().getContext();
-        if (block.versionName == null || block.versionName.length() == 0) {
-            try {
-                PackageInfo info = context.getPackageManager().getPackageInfo(context.getPackageName(), 0);
-                block.versionCode = info.versionCode;
-                block.versionName = info.versionName;
-            } catch (Throwable e) {
-                Log.e(TAG, NEW_INSTANCE, e);
-            }
-        }
-
-        if (block.imei == null || block.imei.length() == 0) {
-            try {
-                TelephonyManager mTManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
-                block.imei = mTManager.getDeviceId();
-            } catch (Exception e) {
-                Log.e(TAG, NEW_INSTANCE, e);
-                block.imei = EMPTY_IMEI;
-            }
-        }
-        block.qualifier = BlockCanaryCore.getContext().getQualifier();
-        block.apiLevel = Build.VERSION.SDK_INT + " " + VERSION.RELEASE;
-        block.model = Build.MODEL;
-        block.uid = BlockCanaryCore.getContext().getUid();
-        block.cpuCoreNum = PerformanceUtils.getNumCores();
-        block.processName = ProcessUtils.myProcessName();
-        block.network = BlockCanaryCore.getContext().getNetworkType();
-        block.freeMemory = String.valueOf(PerformanceUtils.getFreeMemory());
-        block.totalMemory = String.valueOf(PerformanceUtils.getTotalMemory());
-        return block;
-    }
-
-    /**
-     * Create {@link Block} from saved log file.
-     *
-     * @param file looper log file
-     * @return LooperLog created from log file
-     */
-    public static Block newInstance(File file) {
-        Block block = new Block();
-        block.logFile = file;
-
-        BufferedReader reader = null;
-        try {
-            InputStreamReader in = new InputStreamReader(new FileInputStream(file), "UTF-8");
-
-            reader = new BufferedReader(in);
-            for (String line = reader.readLine(); line != null; line = reader.readLine()) {
-                if (line.startsWith(KEY_QUA)) {
-                    block.qualifier = line.split(KV)[1];
-                } else if (line.startsWith(KEY_MODEL)) {
-                    block.model = line.split(KV)[1];
-                } else if (line.startsWith(KEY_API)) {
-                    block.apiLevel = line.split(KV)[1];
-                } else if (line.startsWith(KEY_IMEI)) {
-                    block.imei = line.split(KV)[1];
-                } else if (line.startsWith(KEY_UID)) {
-                    block.uid = line.split(KV)[1];
-                } else if (line.startsWith(KEY_CPU_CORE)) {
-                    block.cpuCoreNum = Integer.valueOf(line.split(KV)[1]);
-                } else if (line.startsWith(KEY_PROCESS_NAME)) {
-                    block.processName = line.split(KV)[1];
-                } else if (line.startsWith(KEY_VERSION_NAME)) {
-                    block.versionName = line.split(KV)[1];
-                } else if (line.startsWith(KEY_VERSION_CODE)) {
-                    block.versionCode = Integer.valueOf(line.split(KV)[1]);
-                } else if (line.startsWith(KEY_NETWORK)) {
-                    block.network = line.split(KV)[1];
-                } else if (line.startsWith(KEY_TOTAL_MEMORY)) {
-                    block.totalMemory = line.split(KV)[1];
-                } else if (line.startsWith(KEY_FREE_MEMORY)) {
-                    block.freeMemory = line.split(KV)[1];
-                } else if (line.startsWith(KEY_CPU_BUSY)) {
-                    block.cpuBusy = Boolean.valueOf(line.split(KV)[1]);
-                } else if (line.startsWith(KEY_CPU_RATE)) {
-                    String[] split = line.split(KV);
-                    if (split.length > 1) {
-                        StringBuilder cpuRateSb = new StringBuilder(split[1]);
-                        cpuRateSb.append(line.split(KV)[1]).append(SEPARATOR);
-                        line = reader.readLine();
-
-                        // read until SEPARATOR appears
-                        while (line != null) {
-                            if (!line.equals("")) {
-                                cpuRateSb.append(line).append(SEPARATOR);
-                            } else {
-                                break;
-                            }
-                            line = reader.readLine();
-                        }
-                        block.cpuRateInfo = cpuRateSb.toString();
-                    }
-
-                } else if (line.startsWith(KEY_TIME_COST_START)) {
-                    block.timeStart = line.split(KV)[1];
-                } else if (line.startsWith(KEY_TIME_COST_END)) {
-                    block.timeEnd = line.split(KV)[1];
-                } else if (line.startsWith(KEY_TIME_COST)) {
-                    block.timeCost = Long.valueOf(line.split(KV)[1]);
-                } else if (line.startsWith(KEY_THREAD_TIME_COST)) {
-                    block.threadTimeCost = Long.valueOf(line.split(KV)[1]);
-                } else if (line.startsWith(KEY_STACK)) {
-                    StringBuilder stackSb = new StringBuilder(line.split(KV)[1]);
-                    line = reader.readLine();
-
-                    // read until file ends
-                    while (line != null) {
-                        if (!line.equals("")) {
-                            stackSb.append(line).append(SEPARATOR);
-                        } else if (stackSb.length() > 0) {
-                            // ignore continual blank lines
-                            block.threadStackEntries.add(stackSb.toString());
-                            stackSb = new StringBuilder();
-                        }
-                        line = reader.readLine();
-                    }
-                }
-            }
-            reader.close();
-            reader = null;
-        } catch (Throwable t) {
-            Log.e(TAG, NEW_INSTANCE, t);
-        } finally {
-            try {
-                if (reader != null) {
-                    reader.close();
-                    reader = null;
-                }
-            } catch (Exception e) {
-                Log.e(TAG, NEW_INSTANCE, e);
-            }
-        }
-        block.flushString();
-        return block;
-    }
-
-    public Block setCpuBusyFlag(boolean busy) {
-        cpuBusy = busy;
-        return this;
-    }
-
-    public Block setRecentCpuRate(String info) {
-        cpuRateInfo = info;
-        return this;
-    }
-
-    public Block setThreadStackEntries(ArrayList<String> threadStackEntries) {
-        this.threadStackEntries = threadStackEntries;
-        return this;
-    }
-
-    public Block setMainThreadTimeCost(long realTimeStart, long realTimeEnd, long threadTimeStart, long threadTimeEnd) {
-        timeCost = realTimeEnd - realTimeStart;
-        threadTimeCost = threadTimeEnd - threadTimeStart;
-        timeStart = TIME_FORMATTER.format(realTimeStart);
-        timeEnd = TIME_FORMATTER.format(realTimeEnd);
-        return this;
-    }
-
-    public Block flushString() {
-        String separator = SEPARATOR;
-        basicSb.append(KEY_QUA).append(KV).append(qualifier).append(separator);
-        basicSb.append(KEY_VERSION_NAME).append(KV).append(versionName).append(separator);
-        basicSb.append(KEY_VERSION_CODE).append(KV).append(versionCode).append(separator);
-        basicSb.append(KEY_IMEI).append(KV).append(imei).append(separator);
-        basicSb.append(KEY_UID).append(KV).append(uid).append(separator);
-        basicSb.append(KEY_NETWORK).append(KV).append(network).append(separator);
-        basicSb.append(KEY_MODEL).append(KV).append(Build.MODEL).append(separator);
-        basicSb.append(KEY_API).append(KV).append(apiLevel).append(separator);
-        basicSb.append(KEY_CPU_CORE).append(KV).append(cpuCoreNum).append(separator);
-        basicSb.append(KEY_PROCESS_NAME).append(KV).append(processName).append(separator);
-        basicSb.append(KEY_FREE_MEMORY).append(KV).append(freeMemory).append(separator);
-        basicSb.append(KEY_TOTAL_MEMORY).append(KV).append(totalMemory).append(separator);
-
-        timeSb.append(KEY_TIME_COST).append(KV).append(timeCost).append(separator);
-        timeSb.append(KEY_THREAD_TIME_COST).append(KV).append(threadTimeCost).append(separator);
-        timeSb.append(KEY_TIME_COST_START).append(KV).append(timeStart).append(separator);
-        timeSb.append(KEY_TIME_COST_END).append(KV).append(timeEnd).append(separator);
-
-        cpuSb.append(KEY_CPU_BUSY).append(KV).append(cpuBusy).append(separator);
-        cpuSb.append(KEY_CPU_RATE).append(KV).append(cpuRateInfo).append(separator);
-
-        if (threadStackEntries != null && !threadStackEntries.isEmpty()) {
-            StringBuilder temp = new StringBuilder();
-            for (String s : threadStackEntries) {
-                temp.append(s);
-                temp.append(separator);
-            }
-            stackSb.append(KEY_STACK).append(KV).append(temp.toString()).append(separator);
-        }
-        return this;
-    }
-
-    public String getBasicString() {
-        return basicSb.toString();
-    }
-
-    public String getCpuString() {
-        return cpuSb.toString();
-    }
-
-    public String getTimeString() {
-        return timeSb.toString();
-    }
-
-    public String getKeyStackString() {
-        String result = "";
-        for (String stackEntry : threadStackEntries) {
-            if (Character.isLetter(stackEntry.charAt(0))) {
-                String[] lines = stackEntry.split(Block.SEPARATOR);
-                for (String line : lines) {
-                    if (!line.startsWith("com.android") && !line.startsWith("java") && !line.startsWith("android")) {
-                        result = line.substring(line.indexOf('(') + 1, line.indexOf(')'));
-                        return result;
-                    }
-                }
-            }
-        }
-        return result;
-    }
-
-    public String toString() {
-        return String.valueOf(basicSb) + timeSb + cpuSb + stackSb;
-    }
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/BlockCanaryInternals.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/BlockCanaryInternals.java
deleted file mode 100644
index daa2505..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/BlockCanaryInternals.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.log;
-
-import android.os.Environment;
-
-import com.github.moduth.blockcanary.BlockCanaryCore;
-
-import java.io.File;
-import java.io.FilenameFilter;
-
-/**
- * @author markzhai on 15/9/27.
- */
-public final class BlockCanaryInternals {
-
-    private BlockCanaryInternals() {
-        throw new AssertionError();
-    }
-
-    public static String getPath() {
-        String state = Environment.getExternalStorageState();
-        String logPath = BlockCanaryCore.getContext() == null ? "" : BlockCanaryCore.getContext().getLogPath();
-
-        if (Environment.MEDIA_MOUNTED.equals(state) && Environment.getExternalStorageDirectory().canWrite()) {
-            return Environment.getExternalStorageDirectory().getPath() + logPath;
-        }
-        return Environment.getDataDirectory().getAbsolutePath() + BlockCanaryCore.getContext().getLogPath();
-    }
-
-    public static File detectedBlockDirectory() {
-        File directory = new File(getPath());
-        if (!directory.exists()) {
-            directory.mkdirs();
-        }
-        return directory;
-    }
-
-    public static File[] getLogFiles() {
-        File f = BlockCanaryInternals.detectedBlockDirectory();
-        if (f.exists() && f.isDirectory()) {
-            return f.listFiles(new BlockLogFileFilter());
-        }
-        return null;
-    }
-
-    static class BlockLogFileFilter implements FilenameFilter {
-
-        private String TYPE = ".txt";
-
-        public BlockLogFileFilter() {
-
-        }
-
-        @Override
-        public boolean accept(File dir, String filename) {
-            return filename.endsWith(TYPE);
-        }
-    }
-}
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/PerformanceUtils.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/PerformanceUtils.java
deleted file mode 100644
index 8829aff..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/PerformanceUtils.java
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.log;
-
-import android.app.ActivityManager;
-import android.content.Context;
-import android.util.Log;
-
-import com.github.moduth.blockcanary.BlockCanaryCore;
-
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileFilter;
-import java.io.FileReader;
-import java.io.IOException;
-import java.util.regex.Pattern;
-
-public class PerformanceUtils {
-    private static final String TAG = "PerformanceUtils";
-
-    private static int sCoreNum = 0;
-    private static long sTotalMemo = 0;
-
-    private PerformanceUtils() {
-        throw new InstantiationError("Must not instantiate this class");
-    }
-
-    /**
-     * Get cpu core number
-     *
-     * @return int cpu core number
-     */
-    public static int getNumCores() {
-        class CpuFilter implements FileFilter {
-            @Override
-            public boolean accept(File pathname) {
-                return Pattern.matches("cpu[0-9]", pathname.getName());
-            }
-        }
-
-        if (sCoreNum == 0) {
-            try {
-                // Get directory containing CPU info
-                File dir = new File("/sys/devices/system/cpu/");
-                // Filter to only list the devices we care about
-                File[] files = dir.listFiles(new CpuFilter());
-                // Return the number of cores (virtual CPU devices)
-                sCoreNum = files.length;
-            } catch (Exception e) {
-                Log.e(TAG, "getNumCores exception", e);
-                sCoreNum = 1;
-            }
-        }
-        return sCoreNum;
-    }
-
-    public static long getFreeMemory() {
-        ActivityManager am = (ActivityManager) BlockCanaryCore.getContext().getContext().getSystemService(Context.ACTIVITY_SERVICE);
-        ActivityManager.MemoryInfo mi = new ActivityManager.MemoryInfo();
-        am.getMemoryInfo(mi);
-        return mi.availMem / 1024;
-    }
-
-    public static long getTotalMemory() {
-        if (sTotalMemo == 0) {
-            String str1 = "/proc/meminfo";
-            String str2;
-            String[] arrayOfString;
-            long initial_memory = -1;
-            FileReader localFileReader = null;
-            try {
-                localFileReader = new FileReader(str1);
-                BufferedReader localBufferedReader = new BufferedReader(localFileReader, 8192);
-                str2 = localBufferedReader.readLine();
-
-                if (str2 != null) {
-                    arrayOfString = str2.split("\\s+");
-                    initial_memory = Integer.valueOf(arrayOfString[1]);
-                }
-                localBufferedReader.close();
-
-            } catch (IOException e) {
-                Log.e(TAG, "getTotalMemory exception = ", e);
-            } finally {
-                if (localFileReader != null) {
-                    try {
-                        localFileReader.close();
-                    } catch (IOException e) {
-                        Log.e(TAG, "close localFileReader exception = ", e);
-                    }
-                }
-            }
-            sTotalMemo = initial_memory;
-        }
-        return sTotalMemo;
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/ProcessUtils.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/ProcessUtils.java
deleted file mode 100644
index a9579dc..0000000
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/ProcessUtils.java
+++ /dev/null
@@ -1,58 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.github.moduth.blockcanary.log;
-
-import android.app.ActivityManager;
-import android.content.Context;
-
-import com.github.moduth.blockcanary.BlockCanaryCore;
-
-import java.util.List;
-
-public class ProcessUtils {
-
-    private static volatile String sProcessName;
-    private final static Object sNameLock = new Object();
-
-    private ProcessUtils() {
-        throw new InstantiationError("Must not instantiate this class");
-    }
-
-    public static String myProcessName() {
-        if (sProcessName != null) {
-            return sProcessName;
-        }
-        synchronized (sNameLock) {
-            if (sProcessName != null) {
-                return sProcessName;
-            }
-            sProcessName = obtainProcessName(BlockCanaryCore.getContext().getContext());
-            return sProcessName;
-        }
-    }
-
-    private static String obtainProcessName(Context context) {
-        final int pid = android.os.Process.myPid();
-        ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
-        List<ActivityManager.RunningAppProcessInfo> listTaskInfo = am.getRunningAppProcesses();
-        if (listTaskInfo != null && !listTaskInfo.isEmpty()) {
-            for (ActivityManager.RunningAppProcessInfo info : listTaskInfo) {
-                if (info != null && info.pid == pid) {
-                    return info.processName;
-                }
-            }
-        }
-        return null;
-    }
-}
diff --git a/blockcanary-core/src/main/res/values/int.xml b/blockcanary-core/src/main/res/values/int.xml
deleted file mode 100644
index e413f50..0000000
--- a/blockcanary-core/src/main/res/values/int.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <integer name="block_canary_max_stored_count">100</integer>
-</resources>
\ No newline at end of file
diff --git a/blockcanary-core/src/main/res/values/strings.xml b/blockcanary-core/src/main/res/values/strings.xml
deleted file mode 100644
index a83f04c..0000000
--- a/blockcanary-core/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<resources>
-    <string name="app_name">BlockCanary</string>
-</resources>
diff --git a/build.gradle b/build.gradle
deleted file mode 100644
index bc69a78..0000000
--- a/build.gradle
+++ /dev/null
@@ -1,24 +0,0 @@
-// Top-level build file where you can add configuration options common to all sub-projects/modules.
-
-buildscript {
-    repositories {
-        mavenCentral()
-        jcenter()
-    }
-    dependencies {
-        classpath 'com.android.tools.build:gradle:2.0.0'
-    }
-}
-
-allprojects {
-    repositories {
-        mavenCentral()
-        jcenter()
-    }
-    ext {
-        LIBRARY_COMPILE_SDK_VERSION = 22
-        LIBRARY_BUILD_TOOLS_VERSION = "23.0.2"
-        LIBRARY_MIN_SDK_VERSION = 8
-        LIBRARY_TARGET_SDK_VERSION = 21
-    }
-}
diff --git a/demo/.gitignore b/demo/.gitignore
deleted file mode 100644
index 796b96d..0000000
--- a/demo/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/build
diff --git a/demo/build.gradle b/demo/build.gradle
deleted file mode 100644
index 2ca7844..0000000
--- a/demo/build.gradle
+++ /dev/null
@@ -1,29 +0,0 @@
-apply plugin: 'com.android.application'
-
-android {
-    compileSdkVersion 23
-    buildToolsVersion "23.0.2"
-
-    defaultConfig {
-        applicationId "com.example.blockcanary"
-        minSdkVersion 8
-        targetSdkVersion 21
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-}
-
-dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
-    debugCompile project(':blockcanary-android')
-    releaseCompile project(':blockcanary-android-no-op')
-
-    compile 'com.android.support:appcompat-v7:23.1.1'
-    compile 'com.android.support:design:23.1.1'
-}
diff --git a/demo/proguard-rules.pro b/demo/proguard-rules.pro
deleted file mode 100644
index 359be20..0000000
--- a/demo/proguard-rules.pro
+++ /dev/null
@@ -1,17 +0,0 @@
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in /Users/yifan/dev/sdk/adt-bundle-mac-sdk/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the proguardFiles
-# directive in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
deleted file mode 100644
index 0b1d84b..0000000
--- a/demo/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.blockcanary">
-
-    <application
-        android:name=".DemoApplication"
-        android:allowBackup="true"
-        android:icon="@mipmap/ic_launcher"
-        android:label="@string/app_name"
-        android:theme="@style/ModuThreeHandsomeTheme">
-        <activity
-            android:name=".DemoActivity"
-            android:label="@string/app_name">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-                <category android:name="android.intent.category.LAUNCHER"/>
-                <category android:name="android.intent.category.DEFAULT"/>
-            </intent-filter>
-        </activity>
-
-    </application>
-
-</manifest>
diff --git a/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.java b/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.java
deleted file mode 100644
index 8283f1d..0000000
--- a/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.blockcanary;
-
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
-import android.util.Log;
-
-import com.github.moduth.blockcanary.BlockCanaryContext;
-
-/**
- * 监控环境的上下文实现
- * <p/>
- * Created by markzhai on 15/9/25.
- */
-public class AppBlockCanaryContext extends BlockCanaryContext {
-    private static final String TAG = "AppBlockCanaryContext";
-
-    /**
-     * 标示符，可以唯一标示该安装版本号，如版本+渠道名+编译平台
-     *
-     * @return apk唯一标示符
-     */
-    @Override
-    public String getQualifier() {
-        String qualifier = "";
-        try {
-            PackageInfo info = DemoApplication.getAppContext().getPackageManager()
-                    .getPackageInfo(DemoApplication.getAppContext().getPackageName(), 0);
-            qualifier += info.versionCode + "_" + info.versionName + "_YYB";
-        } catch (PackageManager.NameNotFoundException e) {
-            Log.e(TAG, "getQualifier exception", e);
-        }
-        return qualifier;
-    }
-
-    @Override
-    public String getUid() {
-        return "87224330";
-    }
-
-    @Override
-    public String getNetworkType() {
-        return "4G";
-    }
-
-    @Override
-    public int getConfigDuration() {
-        return 9999;
-    }
-
-    @Override
-    public int getConfigBlockThreshold() {
-        return 500;
-    }
-
-    @Override
-    public boolean isNeedDisplay() {
-        return BuildConfig.DEBUG;
-    }
-}
\ No newline at end of file
diff --git a/demo/src/main/java/com/example/blockcanary/DemoActivity.java b/demo/src/main/java/com/example/blockcanary/DemoActivity.java
deleted file mode 100644
index 70e31a5..0000000
--- a/demo/src/main/java/com/example/blockcanary/DemoActivity.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.blockcanary;
-
-import android.os.Bundle;
-import android.support.design.widget.FloatingActionButton;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.app.AppCompatActivity;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.View;
-
-public class DemoActivity extends AppCompatActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_demo);
-
-        getSupportFragmentManager().beginTransaction()
-                .add(R.id.container, DemoFragment.newInstance())
-                .commit();
-
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                showTipDlg();
-            }
-        });
-    }
-
-    private void showTipDlg() {
-        AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        builder.setTitle("Tip");
-        builder.setMessage(getResources().getString(R.string.hello_world));
-        builder.setNegativeButton("ok", null);
-        builder.show();
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_demo, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-        //noinspection SimplifiableIfStatement
-        if (id == R.id.action_settings) {
-            return true;
-        }
-
-        return super.onOptionsItemSelected(item);
-    }
-
-}
diff --git a/demo/src/main/java/com/example/blockcanary/DemoApplication.java b/demo/src/main/java/com/example/blockcanary/DemoApplication.java
deleted file mode 100644
index 9228a69..0000000
--- a/demo/src/main/java/com/example/blockcanary/DemoApplication.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.blockcanary;
-
-import android.app.Application;
-import android.content.Context;
-
-import com.github.moduth.blockcanary.BlockCanary;
-
-public class DemoApplication extends Application {
-
-    private static Context sContext;
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        sContext = this;
-        BlockCanary.install(this, new AppBlockCanaryContext()).start();
-    }
-
-    public static Context getAppContext() {
-        return sContext;
-    }
-}
diff --git a/demo/src/main/java/com/example/blockcanary/DemoFragment.java b/demo/src/main/java/com/example/blockcanary/DemoFragment.java
deleted file mode 100644
index 64df543..0000000
--- a/demo/src/main/java/com/example/blockcanary/DemoFragment.java
+++ /dev/null
@@ -1,121 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.blockcanary;
-
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.util.Log;
-
-import java.io.FileInputStream;
-import java.io.IOException;
-
-
-public class DemoFragment extends Fragment implements View.OnClickListener {
-
-    private static final String DEMO_FRAGMENT = "DemoFragment";
-
-    public static DemoFragment newInstance() {
-        return new DemoFragment();
-    }
-
-    @Override
-    public void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(final LayoutInflater inflater, final ViewGroup container, final Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.activity_main, null);
-    }
-
-    @Override
-    public void onViewCreated(final View view, @Nullable final Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-        Button button1 = (Button) view.findViewById(R.id.button1);
-        Button button2 = (Button) view.findViewById(R.id.button2);
-        Button button3 = (Button) view.findViewById(R.id.button3);
-
-        button1.setOnClickListener(this);
-        button2.setOnClickListener(this);
-        button3.setOnClickListener(this);
-    }
-
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-    }
-
-    @Override
-    public void onActivityCreated(@Nullable final Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-    }
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()) {
-            case R.id.button1:
-                try {
-                    Thread.sleep(2000);
-                } catch (InterruptedException e) {
-                    e.printStackTrace();
-                    Log.e(DEMO_FRAGMENT, "onClick of R.id.button1: ", e);
-                }
-                break;
-            case R.id.button2:
-                for (int i = 0; i < 100; ++i) {
-                    readFile();
-                }
-                break;
-            case R.id.button3:
-                double result = compute();
-                System.out.println(result);
-                break;
-            default:
-                break;
-        }
-    }
-
-    private static double compute() {
-        double result = 0;
-        for (int i = 0; i < 1000000; ++i) {
-            result += Math.acos(Math.cos(i));
-            result -= Math.asin(Math.sin(i));
-        }
-        return result;
-    }
-
-    private static void readFile() {
-        FileInputStream reader = null;
-        try {
-            reader = new FileInputStream("/proc/stat");
-            while (reader.read() != -1) ;
-        } catch (IOException e) {
-            Log.e(DEMO_FRAGMENT, "readFile: /proc/stat", e);
-        } finally {
-            if (reader != null) {
-                try {
-                    reader.close();
-                } catch (IOException e) {
-                    Log.e(DEMO_FRAGMENT, " on close reader ", e);
-                }
-            }
-        }
-    }
-}
diff --git a/demo/src/main/res/drawable/background_splash.xml b/demo/src/main/res/drawable/background_splash.xml
deleted file mode 100644
index 8ecd5eb..0000000
--- a/demo/src/main/res/drawable/background_splash.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <item
-        android:drawable="@android:color/white"/>
-
-    <item>
-        <bitmap
-            android:gravity="center"
-            android:src="@mipmap/ic_launcher"/>
-    </item>
-
-</layer-list>
\ No newline at end of file
diff --git a/demo/src/main/res/drawable/btn_nor.xml b/demo/src/main/res/drawable/btn_nor.xml
deleted file mode 100644
index e811509..0000000
--- a/demo/src/main/res/drawable/btn_nor.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:android="http://schemas.android.com/apk/res/android" >
-
-    <solid android:color="@color/material_blue" />
-
-    <corners
-        android:bottomLeftRadius="4dp"
-        android:bottomRightRadius="4dp"
-        android:topLeftRadius="4dp"
-        android:topRightRadius="4dp" />
-
-</shape>
\ No newline at end of file
diff --git a/demo/src/main/res/drawable/btn_pre.xml b/demo/src/main/res/drawable/btn_pre.xml
deleted file mode 100644
index 834b3ba..0000000
--- a/demo/src/main/res/drawable/btn_pre.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:android="http://schemas.android.com/apk/res/android" >
-
-    <solid android:color="@color/material_blue_dark" />
-
-    <corners
-        android:bottomLeftRadius="4dp"
-        android:bottomRightRadius="4dp"
-        android:topLeftRadius="4dp"
-        android:topRightRadius="4dp" />
-
-</shape>
\ No newline at end of file
diff --git a/demo/src/main/res/drawable/btn_select.xml b/demo/src/main/res/drawable/btn_select.xml
deleted file mode 100644
index a8a916a..0000000
--- a/demo/src/main/res/drawable/btn_select.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<selector xmlns:android="http://schemas.android.com/apk/res/android" >
-
-    <item android:state_focused="true" android:drawable="@drawable/btn_pre"></item>
-    <item android:state_pressed="true" android:drawable="@drawable/btn_pre"></item>
-    <item android:drawable="@drawable/btn_nor"></item>
-
-</selector>
\ No newline at end of file
diff --git a/demo/src/main/res/drawable/ic_done.png b/demo/src/main/res/drawable/ic_done.png
deleted file mode 100644
index bf5bc7e..0000000
Binary files a/demo/src/main/res/drawable/ic_done.png and /dev/null differ
diff --git a/demo/src/main/res/layout/activity_demo.xml b/demo/src/main/res/layout/activity_demo.xml
deleted file mode 100644
index 066c36a..0000000
--- a/demo/src/main/res/layout/activity_demo.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:fitsSystemWindows="false"
-              android:orientation="vertical">
-
-    <View
-        android:id="@+id/view_state_bar"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/state_bar_height"
-        android:background="@color/material_blue" />
-
-    <FrameLayout
-        android:layout_below="@+id/view_state_bar"
-        android:id="@+id/container"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:ignore="MergeRootFrame" />
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentRight="true"
-        android:layout_margin="16dp"
-        android:src="@drawable/ic_done"/>
-</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/layout/activity_main.xml b/demo/src/main/res/layout/activity_main.xml
deleted file mode 100644
index 5c5fdff..0000000
--- a/demo/src/main/res/layout/activity_main.xml
+++ /dev/null
@@ -1,107 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:orientation="vertical">
-
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/top_bar_height"
-        android:background="@color/material_blue">
-
-
-        <TextView
-            android:id="@+id/tv_title"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_centerInParent="true"
-            android:text="@string/app_name"
-            android:textColor="@android:color/white"
-            android:textSize="18sp"/>
-
-    </RelativeLayout>
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_marginTop="?attr/actionBarSize"
-        android:orientation="vertical"
-        android:padding="10dp">
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="1"
-            android:orientation="horizontal">
-
-
-            <Button
-                android:id="@+id/button1"
-                android:layout_width="0dp"
-                android:layout_height="match_parent"
-                android:layout_margin="5dp"
-                android:layout_weight="1"
-                android:background="@drawable/btn_select"
-                android:gravity="center"
-                android:text="@string/thread_waiting"
-                android:textColor="@android:color/white"
-                android:textSize="24sp"/>
-
-            <Button
-                android:id="@+id/button2"
-                android:layout_width="0dp"
-                android:layout_height="match_parent"
-                android:layout_margin="5dp"
-                android:layout_weight="1"
-                android:background="@drawable/btn_select"
-                android:gravity="center"
-                android:text="@string/io_waiting"
-                android:textColor="@android:color/white"
-                android:textSize="24sp"/>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="1"
-            android:orientation="horizontal">
-
-            <Button
-                android:id="@+id/button3"
-                android:layout_width="0dp"
-                android:layout_height="match_parent"
-                android:layout_margin="5dp"
-                android:layout_weight="1"
-                android:background="@drawable/btn_select"
-                android:gravity="center"
-                android:text="@string/cpu_busy"
-                android:textColor="@android:color/white"
-                android:textSize="24sp"/>
-
-            <Button
-                android:id="@+id/button4"
-                android:layout_width="0dp"
-                android:layout_height="match_parent"
-                android:layout_margin="5dp"
-                android:layout_weight="1"
-                android:background="@drawable/btn_select"
-                android:gravity="center"
-                android:text="@string/more"
-                android:textColor="@android:color/white"
-                android:textSize="24sp"/>
-        </LinearLayout>
-
-    </LinearLayout>
-
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentRight="true"
-        android:layout_margin="16dp"
-        android:src="@drawable/ic_done"/>
-
-
-</RelativeLayout>
\ No newline at end of file
diff --git a/demo/src/main/res/menu/menu_demo.xml b/demo/src/main/res/menu/menu_demo.xml
deleted file mode 100644
index 300f66a..0000000
--- a/demo/src/main/res/menu/menu_demo.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools" tools:context=".DemoActivity">
-    <item android:id="@+id/action_settings" android:title="@string/action_settings"
-        android:orderInCategory="100" />
-</menu>
diff --git a/demo/src/main/res/mipmap-xxhdpi/ic_launcher.png b/demo/src/main/res/mipmap-xxhdpi/ic_launcher.png
deleted file mode 100644
index 16854f6..0000000
Binary files a/demo/src/main/res/mipmap-xxhdpi/ic_launcher.png and /dev/null differ
diff --git a/demo/src/main/res/values-v19/dimens.xml b/demo/src/main/res/values-v19/dimens.xml
deleted file mode 100644
index efa0e56..0000000
--- a/demo/src/main/res/values-v19/dimens.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<resources>
-    <dimen name="state_bar_height">25dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-v19/styles.xml b/demo/src/main/res/values-v19/styles.xml
deleted file mode 100644
index f118a10..0000000
--- a/demo/src/main/res/values-v19/styles.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <style name="CjjBaseTheme" parent="Base.Theme.DesignDemo">
-        <item name="android:windowTranslucentStatus">true</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-v21/dimens.xml b/demo/src/main/res/values-v21/dimens.xml
deleted file mode 100644
index efa0e56..0000000
--- a/demo/src/main/res/values-v21/dimens.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<resources>
-    <dimen name="state_bar_height">25dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-v21/styles.xml b/demo/src/main/res/values-v21/styles.xml
deleted file mode 100644
index 8379325..0000000
--- a/demo/src/main/res/values-v21/styles.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<resources>
-
-    <style name="ModuThreeHandsomeTheme" parent="Base.Theme.DesignDemo">
-        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
-        <item name="android:statusBarColor">@android:color/transparent</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-v22/dimens.xml b/demo/src/main/res/values-v22/dimens.xml
deleted file mode 100644
index f23221a..0000000
--- a/demo/src/main/res/values-v22/dimens.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<resources>
-    <dimen name="state_bar_height">0dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-v22/styles.xml b/demo/src/main/res/values-v22/styles.xml
deleted file mode 100644
index 18db7a8..0000000
--- a/demo/src/main/res/values-v22/styles.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<resources>
-
-    <style name="ModuThreeHandsomeTheme" parent="Base.Theme.DesignDemo">
-        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
-        <item name="android:statusBarColor">@color/material_blue_dark</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-v23/dimens.xml b/demo/src/main/res/values-v23/dimens.xml
deleted file mode 100644
index f23221a..0000000
--- a/demo/src/main/res/values-v23/dimens.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<resources>
-    <dimen name="state_bar_height">0dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-v23/styles.xml b/demo/src/main/res/values-v23/styles.xml
deleted file mode 100644
index 18db7a8..0000000
--- a/demo/src/main/res/values-v23/styles.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<resources>
-
-    <style name="ModuThreeHandsomeTheme" parent="Base.Theme.DesignDemo">
-        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
-        <item name="android:statusBarColor">@color/material_blue_dark</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values-w820dp/dimens.xml b/demo/src/main/res/values-w820dp/dimens.xml
deleted file mode 100644
index 63fc816..0000000
--- a/demo/src/main/res/values-w820dp/dimens.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<resources>
-    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
-         (such as screen margins) for screens with more than 820dp of available width. This
-         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
-    <dimen name="activity_horizontal_margin">64dp</dimen>
-</resources>
diff --git a/demo/src/main/res/values-zh/strings.xml b/demo/src/main/res/values-zh/strings.xml
deleted file mode 100644
index 330278a..0000000
--- a/demo/src/main/res/values-zh/strings.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<resources>
-    <string name="app_name">BlockCanary</string>
-
-    <string name="hello_world">点击按钮后，会触发主线程耗时时间，从而被BlockCanary，并记录卡慢日志，弹出notification，可以点击对应消息查看</string>
-    <string name="thread_waiting">线程\n等待\n阻塞</string>
-    <string name="io_waiting">IO\n阻塞</string>
-    <string name="cpu_busy">计算\n阻塞</string>
-    <string name="more">尽请\n期待\n更多</string>
-    <string name="action_settings">Settings</string>
-</resources>
diff --git a/demo/src/main/res/values/colors.xml b/demo/src/main/res/values/colors.xml
deleted file mode 100644
index 95f5eeb..0000000
--- a/demo/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <color name="window_background">#FFF5F5F5</color>
-
-    <color name="material_blue">#2196F3</color>
-    <color name="material_blue_dark">#1976D2</color>
-</resources>
\ No newline at end of file
diff --git a/demo/src/main/res/values/dimens.xml b/demo/src/main/res/values/dimens.xml
deleted file mode 100644
index ad34f6b..0000000
--- a/demo/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<resources>
-    <!-- Default screen margins, per the Android Design guidelines. -->
-    <dimen name="activity_horizontal_margin">16dp</dimen>
-    <dimen name="activity_vertical_margin">16dp</dimen>
-
-    <dimen name="state_bar_height">0dp</dimen>
-    <dimen name="top_bar_height">48dp</dimen>
-    <dimen name="top_bar_btn_wh">48dp</dimen>
-    <dimen name="divider_height">0.5dp</dimen>
-</resources>
diff --git a/demo/src/main/res/values/strings.xml b/demo/src/main/res/values/strings.xml
deleted file mode 100644
index 1fa9032..0000000
--- a/demo/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<resources>
-    <string name="app_name">BlockCanary</string>
-
-    <string name="hello_world">After click button, main-thread consuming event will be triggered, which would be caught be BlockCanary, write to log file, and use notification to display</string>
-    <string name="thread_waiting">Thread\nwait\nblock</string>
-    <string name="io_waiting">IO\nblock</string>
-    <string name="cpu_busy">Computation\nblock</string>
-    <string name="more">Wait\nfor\nmore</string>
-    <string name="action_settings">Settings</string>
-</resources>
diff --git a/demo/src/main/res/values/styles.xml b/demo/src/main/res/values/styles.xml
deleted file mode 100644
index 5e0dd50..0000000
--- a/demo/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<resources>
-
-    <style name="CjjBaseTheme" parent="Base.Theme.DesignDemo">
-    </style>
-
-    <style name="Base.Theme.DesignDemo" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="colorPrimary">#2196F3</item>
-        <item name="colorPrimaryDark">#1976D2</item>
-        <item name="colorAccent">#F44336</item>
-        <item name="android:textColorPrimary">#ffffff</item>
-        <item name="android:windowBackground">@color/window_background</item>
-    </style>
-
-    <style name="ModuThreeHandsomeTheme" parent="Theme.AppCompat.Light.NoActionBar">
-    </style>
-</resources>
diff --git a/gradle.properties b/gradle.properties
deleted file mode 100644
index c4699a9..0000000
--- a/gradle.properties
+++ /dev/null
@@ -1,17 +0,0 @@
-## Project-wide Gradle settings.
-#
-# For more details on how to configure your build environment visit
-# http://www.gradle.org/docs/current/userguide/build_environment.html
-#
-# Specifies the JVM arguments used for the daemon process.
-# The setting is particularly useful for tweaking memory settings.
-# Default value: -Xmx10248m -XX:MaxPermSize=256m
-# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
-#
-# When configured, Gradle will run in incubating parallel mode.
-# This option should only be used with decoupled projects. More details, visit
-# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
-# org.gradle.parallel=true
-#Sat Mar 05 00:07:08 CST 2016
-systemProp.http.proxyHost=127.0.0.1
-systemProp.http.proxyPort=1080
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
deleted file mode 100644
index 2322723..0000000
Binary files a/gradle/wrapper/gradle-wrapper.jar and /dev/null differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
deleted file mode 100644
index 815f976..0000000
--- a/gradle/wrapper/gradle-wrapper.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-#Wed Apr 13 16:42:11 CST 2016
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
diff --git a/gradlew b/gradlew
deleted file mode 100755
index 91a7e26..0000000
--- a/gradlew
+++ /dev/null
@@ -1,164 +0,0 @@
-#!/usr/bin/env bash
-
-##############################################################################
-##
-##  Gradle start up script for UN*X
-##
-##############################################################################
-
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
-
-APP_NAME="Gradle"
-APP_BASE_NAME=`basename "$0"`
-
-# Use the maximum available, or set MAX_FD != -1 to use that value.
-MAX_FD="maximum"
-
-warn ( ) {
-    echo "$*"
-}
-
-die ( ) {
-    echo
-    echo "$*"
-    echo
-    exit 1
-}
-
-# OS specific support (must be 'true' or 'false').
-cygwin=false
-msys=false
-darwin=false
-case "`uname`" in
-  CYGWIN* )
-    cygwin=true
-    ;;
-  Darwin* )
-    darwin=true
-    ;;
-  MINGW* )
-    msys=true
-    ;;
-esac
-
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
-APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
-
-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
-
-# Determine the Java command to use to start the JVM.
-if [ -n "$JAVA_HOME" ] ; then
-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
-        # IBM's JDK on AIX uses strange locations for the executables
-        JAVACMD="$JAVA_HOME/jre/sh/java"
-    else
-        JAVACMD="$JAVA_HOME/bin/java"
-    fi
-    if [ ! -x "$JAVACMD" ] ; then
-        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-    fi
-else
-    JAVACMD="java"
-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-fi
-
-# Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
-    MAX_FD_LIMIT=`ulimit -H -n`
-    if [ $? -eq 0 ] ; then
-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
-            MAX_FD="$MAX_FD_LIMIT"
-        fi
-        ulimit -n $MAX_FD
-        if [ $? -ne 0 ] ; then
-            warn "Could not set maximum file descriptor limit: $MAX_FD"
-        fi
-    else
-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
-    fi
-fi
-
-# For Darwin, add options to specify how the application appears in the dock
-if $darwin; then
-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
-fi
-
-# For Cygwin, switch paths to Windows format before running java
-if $cygwin ; then
-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-
-    # We build the pattern for arguments to be converted via cygpath
-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
-    SEP=""
-    for dir in $ROOTDIRSRAW ; do
-        ROOTDIRS="$ROOTDIRS$SEP$dir"
-        SEP="|"
-    done
-    OURCYGPATTERN="(^($ROOTDIRS))"
-    # Add a user-defined pattern to the cygpath arguments
-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
-    fi
-    # Now convert the arguments - kludge to limit ourselves to /bin/sh
-    i=0
-    for arg in "$@" ; do
-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
-
-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
-        else
-            eval `echo args$i`="\"$arg\""
-        fi
-        i=$((i+1))
-    done
-    case $i in
-        (0) set -- ;;
-        (1) set -- "$args0" ;;
-        (2) set -- "$args0" "$args1" ;;
-        (3) set -- "$args0" "$args1" "$args2" ;;
-        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
-        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
-        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
-        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
-        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
-        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
-    esac
-fi
-
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
-}
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
-
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/gradlew.bat b/gradlew.bat
deleted file mode 100644
index 8a0b282..0000000
--- a/gradlew.bat
+++ /dev/null
@@ -1,90 +0,0 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
diff --git a/settings.gradle b/settings.gradle
deleted file mode 100644
index 8645dcd..0000000
--- a/settings.gradle
+++ /dev/null
@@ -1 +0,0 @@
-include ':demo', ':blockcanary-android-no-op', ':blockcanary-android', ':blockcanary-core'
\ No newline at end of file
