diff --git a/blockcanary-android-no-op/build.gradle b/blockcanary-android-no-op/build.gradle
index 83af379..a9c5810 100644
--- a/blockcanary-android-no-op/build.gradle
+++ b/blockcanary-android-no-op/build.gradle
@@ -1,13 +1,12 @@
 apply plugin: 'com.android.library'
-apply from: 'gradle-mvn-push.gradle'
+apply plugin: 'kotlin-android'
 
 android {
-    compileSdkVersion LIBRARY_COMPILE_SDK_VERSION
-    buildToolsVersion LIBRARY_BUILD_TOOLS_VERSION
+    compileSdkVersion 28
 
     defaultConfig {
-        minSdkVersion LIBRARY_MIN_SDK_VERSION
-        targetSdkVersion LIBRARY_TARGET_SDK_VERSION
+        minSdkVersion 17
+        targetSdkVersion 28
         versionCode 1
         versionName "1.0"
     }
@@ -17,8 +16,12 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+    buildToolsVersion '27.0.3'
 }
 
 dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
+    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
+}
+repositories {
+    mavenCentral()
 }
diff --git a/blockcanary-android-no-op/gradle-mvn-push.gradle b/blockcanary-android-no-op/gradle-mvn-push.gradle
deleted file mode 100644
index a5fe642..0000000
--- a/blockcanary-android-no-op/gradle-mvn-push.gradle
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    task androidJavadocs(type: Javadoc) {
-        options.encoding = "utf-8"
-        source = android.sourceSets.main.java.srcDirs
-        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    }
-
-    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-        classifier = 'javadoc'
-        from androidJavadocs.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.sourceFiles
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocsJar
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-android/build.gradle b/blockcanary-android/build.gradle
index d4fd912..0884bd2 100644
--- a/blockcanary-android/build.gradle
+++ b/blockcanary-android/build.gradle
@@ -1,13 +1,12 @@
 apply plugin: 'com.android.library'
-apply from: 'gradle-mvn-push.gradle'
+apply plugin: 'kotlin-android'
 
 android {
-    compileSdkVersion LIBRARY_COMPILE_SDK_VERSION
-    buildToolsVersion LIBRARY_BUILD_TOOLS_VERSION
+    compileSdkVersion 28
 
     defaultConfig {
-        minSdkVersion LIBRARY_MIN_SDK_VERSION
-        targetSdkVersion LIBRARY_TARGET_SDK_VERSION
+        minSdkVersion 17
+        targetSdkVersion 28
         versionCode 1
         versionName "1.0"
     }
@@ -17,9 +16,13 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+    buildToolsVersion '27.0.3'
 }
 
 dependencies {
-    compile fileTree(include: ['*.jar'], dir: 'libs')
     compile project(':blockcanary-core')
+    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
+}
+repositories {
+    mavenCentral()
 }
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
index 04eeb9c..c1ef2c2 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
@@ -39,7 +39,6 @@ private void show(Context context, String contentTitle, String contentText, Pend
             notification.when = System.currentTimeMillis();
             notification.flags |= Notification.FLAG_AUTO_CANCEL;
             notification.defaults = Notification.DEFAULT_SOUND;
-            notification.setLatestEventInfo(context, contentTitle, contentText, pendingIntent);
         } else {
             Notification.Builder builder = new Notification.Builder(context)
                     .setSmallIcon(R.drawable.block_canary_notification)
diff --git a/blockcanary-core/build.gradle b/blockcanary-core/build.gradle
index 83af379..a9c5810 100644
--- a/blockcanary-core/build.gradle
+++ b/blockcanary-core/build.gradle
@@ -1,13 +1,12 @@
 apply plugin: 'com.android.library'
-apply from: 'gradle-mvn-push.gradle'
+apply plugin: 'kotlin-android'
 
 android {
-    compileSdkVersion LIBRARY_COMPILE_SDK_VERSION
-    buildToolsVersion LIBRARY_BUILD_TOOLS_VERSION
+    compileSdkVersion 28
 
     defaultConfig {
-        minSdkVersion LIBRARY_MIN_SDK_VERSION
-        targetSdkVersion LIBRARY_TARGET_SDK_VERSION
+        minSdkVersion 17
+        targetSdkVersion 28
         versionCode 1
         versionName "1.0"
     }
@@ -17,8 +16,12 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+    buildToolsVersion '27.0.3'
 }
 
 dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
+    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
+}
+repositories {
+    mavenCentral()
 }
diff --git a/blockcanary-core/gradle-mvn-push.gradle b/blockcanary-core/gradle-mvn-push.gradle
deleted file mode 100644
index a5fe642..0000000
--- a/blockcanary-core/gradle-mvn-push.gradle
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    task androidJavadocs(type: Javadoc) {
-        options.encoding = "utf-8"
-        source = android.sourceSets.main.java.srcDirs
-        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    }
-
-    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-        classifier = 'javadoc'
-        from androidJavadocs.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.sourceFiles
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocsJar
-    }
-}
\ No newline at end of file
diff --git a/blockcanary-core/src/main/AndroidManifest.xml b/blockcanary-core/src/main/AndroidManifest.xml
index 8fc6ecc..05392c4 100644
--- a/blockcanary-core/src/main/AndroidManifest.xml
+++ b/blockcanary-core/src/main/AndroidManifest.xml
@@ -3,7 +3,6 @@
 
     <!-- To store the heap dumps and leak analysis results. -->
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
 
     <application>
 
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/CpuSampler.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
index 815d6e8..4466cc7 100644
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
+++ b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
@@ -102,41 +102,41 @@ public boolean isCpuBusy(long start, long end) {
 
     @Override
     protected void doSample() {
-        BufferedReader cpuReader = null;
-        BufferedReader pidReader = null;
-        try {
-            cpuReader = new BufferedReader(new InputStreamReader(
-                    new FileInputStream("/proc/stat")), 1000);
-            String cpuRate = cpuReader.readLine();
-            if (cpuRate == null) {
-                cpuRate = "";
-            }
-
-            if (mPid == 0) {
-                mPid = android.os.Process.myPid();
-            }
-            pidReader = new BufferedReader(new InputStreamReader(
-                    new FileInputStream("/proc/" + mPid + "/stat")), 1000);
-            String pidCpuRate = pidReader.readLine();
-            if (pidCpuRate == null) {
-                pidCpuRate = "";
-            }
-
-            parseCpuRate(cpuRate, pidCpuRate);
-        } catch (Throwable ex) {
-            Log.e(TAG, "doSample: ", ex);
-        } finally {
-            try {
-                if (cpuReader != null) {
-                    cpuReader.close();
-                }
-                if (pidReader != null) {
-                    pidReader.close();
-                }
-            } catch (IOException e) {
-                Log.e(TAG, "doSample: ", e);
-            }
-        }
+//        BufferedReader cpuReader = null;
+//        BufferedReader pidReader = null;
+//        try {
+//            cpuReader = new BufferedReader(new InputStreamReader(
+//                    new FileInputStream("/proc/stat")), 1000);
+//            String cpuRate = cpuReader.readLine();
+//            if (cpuRate == null) {
+//                cpuRate = "";
+//            }
+//
+//            if (mPid == 0) {
+//                mPid = android.os.Process.myPid();
+//            }
+//            pidReader = new BufferedReader(new InputStreamReader(
+//                    new FileInputStream("/proc/" + mPid + "/stat")), 1000);
+//            String pidCpuRate = pidReader.readLine();
+//            if (pidCpuRate == null) {
+//                pidCpuRate = "";
+//            }
+//
+//            parseCpuRate(cpuRate, pidCpuRate);
+//        } catch (Throwable ex) {
+//            Log.e(TAG, "doSample: ", ex);
+//        } finally {
+//            try {
+//                if (cpuReader != null) {
+//                    cpuReader.close();
+//                }
+//                if (pidReader != null) {
+//                    pidReader.close();
+//                }
+//            } catch (IOException e) {
+//                Log.e(TAG, "doSample: ", e);
+//            }
+//        }
     }
 
     private void reset() {
diff --git a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java
index 0e05cf7..df74be9 100644
--- a/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java
+++ b/blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java
@@ -42,7 +42,6 @@
     public static final String KEY_QUA = "qualifier";
     public static final String KEY_MODEL = "model";
     public static final String KEY_API = "apilevel";
-    public static final String KEY_IMEI = "imei";
     public static final String KEY_UID = "uid";
     public static final String KEY_CPU_CORE = "cpuCore";
     public static final String KEY_CPU_BUSY = "cpubusy";
@@ -64,7 +63,6 @@
     public String qualifier;
     public String model;
     public String apiLevel = "";
-    public String imei = "";
     public String uid;
     public int cpuCoreNum;
     public String processName;
@@ -104,16 +102,6 @@ public static Block newInstance() {
                 Log.e(TAG, NEW_INSTANCE, e);
             }
         }
-
-        if (block.imei == null || block.imei.length() == 0) {
-            try {
-                TelephonyManager mTManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
-                block.imei = mTManager.getDeviceId();
-            } catch (Exception e) {
-                Log.e(TAG, NEW_INSTANCE, e);
-                block.imei = EMPTY_IMEI;
-            }
-        }
         block.qualifier = BlockCanaryCore.getContext().getQualifier();
         block.apiLevel = Build.VERSION.SDK_INT + " " + VERSION.RELEASE;
         block.model = Build.MODEL;
@@ -148,8 +136,6 @@ public static Block newInstance(File file) {
                     block.model = line.split(KV)[1];
                 } else if (line.startsWith(KEY_API)) {
                     block.apiLevel = line.split(KV)[1];
-                } else if (line.startsWith(KEY_IMEI)) {
-                    block.imei = line.split(KV)[1];
                 } else if (line.startsWith(KEY_UID)) {
                     block.uid = line.split(KV)[1];
                 } else if (line.startsWith(KEY_CPU_CORE)) {
@@ -258,7 +244,6 @@ public Block flushString() {
         basicSb.append(KEY_QUA).append(KV).append(qualifier).append(separator);
         basicSb.append(KEY_VERSION_NAME).append(KV).append(versionName).append(separator);
         basicSb.append(KEY_VERSION_CODE).append(KV).append(versionCode).append(separator);
-        basicSb.append(KEY_IMEI).append(KV).append(imei).append(separator);
         basicSb.append(KEY_UID).append(KV).append(uid).append(separator);
         basicSb.append(KEY_NETWORK).append(KV).append(network).append(separator);
         basicSb.append(KEY_MODEL).append(KV).append(Build.MODEL).append(separator);
diff --git a/build.gradle b/build.gradle
index bc69a78..c6b781f 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,12 +1,15 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 
 buildscript {
+    ext.kotlin_version = '1.2.61'
     repositories {
         mavenCentral()
         jcenter()
+        google()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.0.0'
+        classpath 'com.android.tools.build:gradle:3.1.4'
+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
     }
 }
 
@@ -14,11 +17,7 @@ allprojects {
     repositories {
         mavenCentral()
         jcenter()
-    }
-    ext {
-        LIBRARY_COMPILE_SDK_VERSION = 22
-        LIBRARY_BUILD_TOOLS_VERSION = "23.0.2"
-        LIBRARY_MIN_SDK_VERSION = 8
-        LIBRARY_TARGET_SDK_VERSION = 21
+        google()
+        maven { url 'https://jitpack.io' }
     }
 }
diff --git a/demo/build.gradle b/demo/build.gradle
index 2ca7844..e5bcda8 100644
--- a/demo/build.gradle
+++ b/demo/build.gradle
@@ -1,13 +1,14 @@
 apply plugin: 'com.android.application'
+apply plugin: 'kotlin-android'
 
 android {
-    compileSdkVersion 23
-    buildToolsVersion "23.0.2"
+    compileSdkVersion 28
+    buildToolsVersion '27.0.3'
 
     defaultConfig {
         applicationId "com.example.blockcanary"
-        minSdkVersion 8
-        targetSdkVersion 21
+        minSdkVersion 17
+        targetSdkVersion 28
         versionCode 1
         versionName "1.0"
     }
@@ -20,10 +21,9 @@ android {
 }
 
 dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
-    debugCompile project(':blockcanary-android')
-    releaseCompile project(':blockcanary-android-no-op')
-
-    compile 'com.android.support:appcompat-v7:23.1.1'
-    compile 'com.android.support:design:23.1.1'
+    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
+    implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
+    implementation 'com.android.support:design:28.0.0-rc02'
+    implementation project(':blockcanary-android')
+    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
 }
diff --git a/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.java b/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.java
deleted file mode 100644
index 8283f1d..0000000
--- a/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.blockcanary;
-
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
-import android.util.Log;
-
-import com.github.moduth.blockcanary.BlockCanaryContext;
-
-/**
- * 监控环境的上下文实现
- * <p/>
- * Created by markzhai on 15/9/25.
- */
-public class AppBlockCanaryContext extends BlockCanaryContext {
-    private static final String TAG = "AppBlockCanaryContext";
-
-    /**
-     * 标示符，可以唯一标示该安装版本号，如版本+渠道名+编译平台
-     *
-     * @return apk唯一标示符
-     */
-    @Override
-    public String getQualifier() {
-        String qualifier = "";
-        try {
-            PackageInfo info = DemoApplication.getAppContext().getPackageManager()
-                    .getPackageInfo(DemoApplication.getAppContext().getPackageName(), 0);
-            qualifier += info.versionCode + "_" + info.versionName + "_YYB";
-        } catch (PackageManager.NameNotFoundException e) {
-            Log.e(TAG, "getQualifier exception", e);
-        }
-        return qualifier;
-    }
-
-    @Override
-    public String getUid() {
-        return "87224330";
-    }
-
-    @Override
-    public String getNetworkType() {
-        return "4G";
-    }
-
-    @Override
-    public int getConfigDuration() {
-        return 9999;
-    }
-
-    @Override
-    public int getConfigBlockThreshold() {
-        return 500;
-    }
-
-    @Override
-    public boolean isNeedDisplay() {
-        return BuildConfig.DEBUG;
-    }
-}
\ No newline at end of file
diff --git a/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.kt b/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.kt
new file mode 100644
index 0000000..a34921b
--- /dev/null
+++ b/demo/src/main/java/com/example/blockcanary/AppBlockCanaryContext.kt
@@ -0,0 +1,31 @@
+/*
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.blockcanary
+
+import com.github.moduth.blockcanary.BlockCanaryContext
+
+class AppBlockCanaryContext : BlockCanaryContext() {
+
+    override fun getQualifier() = "${BuildConfig.VERSION_CODE}_${BuildConfig.VERSION_NAME}_YYB"
+
+    override fun getUid() = "87224330"
+
+    override fun getNetworkType() = "4G"
+
+    override fun getConfigDuration() = 9999
+
+    override fun getConfigBlockThreshold() = 50
+
+    override fun isNeedDisplay() = BuildConfig.DEBUG
+}
\ No newline at end of file
diff --git a/demo/src/main/java/com/example/blockcanary/DemoActivity.java b/demo/src/main/java/com/example/blockcanary/DemoActivity.java
deleted file mode 100644
index 70e31a5..0000000
--- a/demo/src/main/java/com/example/blockcanary/DemoActivity.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.blockcanary;
-
-import android.os.Bundle;
-import android.support.design.widget.FloatingActionButton;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.app.AppCompatActivity;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.View;
-
-public class DemoActivity extends AppCompatActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_demo);
-
-        getSupportFragmentManager().beginTransaction()
-                .add(R.id.container, DemoFragment.newInstance())
-                .commit();
-
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                showTipDlg();
-            }
-        });
-    }
-
-    private void showTipDlg() {
-        AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        builder.setTitle("Tip");
-        builder.setMessage(getResources().getString(R.string.hello_world));
-        builder.setNegativeButton("ok", null);
-        builder.show();
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.menu_demo, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-        //noinspection SimplifiableIfStatement
-        if (id == R.id.action_settings) {
-            return true;
-        }
-
-        return super.onOptionsItemSelected(item);
-    }
-
-}
diff --git a/demo/src/main/java/com/example/blockcanary/DemoActivity.kt b/demo/src/main/java/com/example/blockcanary/DemoActivity.kt
new file mode 100644
index 0000000..862a2d9
--- /dev/null
+++ b/demo/src/main/java/com/example/blockcanary/DemoActivity.kt
@@ -0,0 +1,39 @@
+/*
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.blockcanary
+
+import android.Manifest
+import android.os.Bundle
+import android.support.v7.app.AppCompatActivity
+import com.tbruyelle.rxpermissions2.RxPermissions
+
+class DemoActivity : AppCompatActivity() {
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_demo)
+
+        supportFragmentManager.beginTransaction()
+                .add(R.id.container, DemoFragment.newInstance())
+                .commit()
+
+        if (BuildConfig.DEBUG) {
+            RxPermissions(this)
+                    .request(Manifest.permission.WRITE_EXTERNAL_STORAGE)
+                    .subscribe()
+        }
+
+    }
+
+}
diff --git a/demo/src/main/java/com/example/blockcanary/DemoApplication.java b/demo/src/main/java/com/example/blockcanary/DemoApplication.kt
similarity index 55%
rename from demo/src/main/java/com/example/blockcanary/DemoApplication.java
rename to demo/src/main/java/com/example/blockcanary/DemoApplication.kt
index 9228a69..7e299e9 100644
--- a/demo/src/main/java/com/example/blockcanary/DemoApplication.java
+++ b/demo/src/main/java/com/example/blockcanary/DemoApplication.kt
@@ -11,25 +11,24 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.example.blockcanary;
+package com.example.blockcanary
 
-import android.app.Application;
-import android.content.Context;
+import android.app.Application
+import android.content.Context
 
-import com.github.moduth.blockcanary.BlockCanary;
+import com.github.moduth.blockcanary.BlockCanary
 
-public class DemoApplication extends Application {
+class DemoApplication : Application() {
 
-    private static Context sContext;
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        sContext = this;
-        BlockCanary.install(this, new AppBlockCanaryContext()).start();
+    override fun onCreate() {
+        super.onCreate()
+        appContext = this
+        BlockCanary.install(this, AppBlockCanaryContext()).start()
     }
 
-    public static Context getAppContext() {
-        return sContext;
+    companion object {
+
+        var appContext: Context? = null
+            private set
     }
 }
diff --git a/demo/src/main/java/com/example/blockcanary/DemoFragment.java b/demo/src/main/java/com/example/blockcanary/DemoFragment.java
deleted file mode 100644
index 64df543..0000000
--- a/demo/src/main/java/com/example/blockcanary/DemoFragment.java
+++ /dev/null
@@ -1,121 +0,0 @@
-/*
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.blockcanary;
-
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.util.Log;
-
-import java.io.FileInputStream;
-import java.io.IOException;
-
-
-public class DemoFragment extends Fragment implements View.OnClickListener {
-
-    private static final String DEMO_FRAGMENT = "DemoFragment";
-
-    public static DemoFragment newInstance() {
-        return new DemoFragment();
-    }
-
-    @Override
-    public void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(final LayoutInflater inflater, final ViewGroup container, final Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.activity_main, null);
-    }
-
-    @Override
-    public void onViewCreated(final View view, @Nullable final Bundle savedInstanceState) {
-        super.onViewCreated(view, savedInstanceState);
-        Button button1 = (Button) view.findViewById(R.id.button1);
-        Button button2 = (Button) view.findViewById(R.id.button2);
-        Button button3 = (Button) view.findViewById(R.id.button3);
-
-        button1.setOnClickListener(this);
-        button2.setOnClickListener(this);
-        button3.setOnClickListener(this);
-    }
-
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-    }
-
-    @Override
-    public void onActivityCreated(@Nullable final Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-    }
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()) {
-            case R.id.button1:
-                try {
-                    Thread.sleep(2000);
-                } catch (InterruptedException e) {
-                    e.printStackTrace();
-                    Log.e(DEMO_FRAGMENT, "onClick of R.id.button1: ", e);
-                }
-                break;
-            case R.id.button2:
-                for (int i = 0; i < 100; ++i) {
-                    readFile();
-                }
-                break;
-            case R.id.button3:
-                double result = compute();
-                System.out.println(result);
-                break;
-            default:
-                break;
-        }
-    }
-
-    private static double compute() {
-        double result = 0;
-        for (int i = 0; i < 1000000; ++i) {
-            result += Math.acos(Math.cos(i));
-            result -= Math.asin(Math.sin(i));
-        }
-        return result;
-    }
-
-    private static void readFile() {
-        FileInputStream reader = null;
-        try {
-            reader = new FileInputStream("/proc/stat");
-            while (reader.read() != -1) ;
-        } catch (IOException e) {
-            Log.e(DEMO_FRAGMENT, "readFile: /proc/stat", e);
-        } finally {
-            if (reader != null) {
-                try {
-                    reader.close();
-                } catch (IOException e) {
-                    Log.e(DEMO_FRAGMENT, " on close reader ", e);
-                }
-            }
-        }
-    }
-}
diff --git a/demo/src/main/java/com/example/blockcanary/DemoFragment.kt b/demo/src/main/java/com/example/blockcanary/DemoFragment.kt
new file mode 100644
index 0000000..66a0cce
--- /dev/null
+++ b/demo/src/main/java/com/example/blockcanary/DemoFragment.kt
@@ -0,0 +1,101 @@
+/*
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.blockcanary
+
+import android.os.Bundle
+import android.support.v4.app.Fragment
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Button
+import java.io.FileInputStream
+import java.io.IOException
+
+
+class DemoFragment : Fragment(), View.OnClickListener {
+
+    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
+        return inflater.inflate(R.layout.activity_main, null)
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        val button1 = view.findViewById<View>(R.id.button1) as Button
+        val button2 = view.findViewById<View>(R.id.button2) as Button
+        val button3 = view.findViewById<View>(R.id.button3) as Button
+
+        button1.setOnClickListener(this)
+        button2.setOnClickListener(this)
+        button3.setOnClickListener(this)
+    }
+
+    override fun onClick(v: View) {
+        when (v.id) {
+            R.id.button1 -> try {
+                Thread.sleep(2000)
+            } catch (e: InterruptedException) {
+                e.printStackTrace()
+                Log.e(DEMO_FRAGMENT, "onClick of R.id.button1: ", e)
+            }
+
+            R.id.button2 -> for (i in 0..99) {
+                readFile()
+            }
+            R.id.button3 -> {
+                val result = compute()
+                println(result)
+            }
+            else -> {
+            }
+        }
+    }
+
+    companion object {
+
+        private val DEMO_FRAGMENT = "DemoFragment"
+
+        fun newInstance(): DemoFragment {
+            return DemoFragment()
+        }
+
+        private fun compute(): Double {
+            var result = 0.0
+            for (i in 0..999999) {
+                result += Math.acos(Math.cos(i.toDouble()))
+                result -= Math.asin(Math.sin(i.toDouble()))
+            }
+            return result
+        }
+
+        private fun readFile() {
+            var reader: FileInputStream? = null
+            try {
+                reader = FileInputStream("/proc/stat")
+                while (reader.read() != -1);
+            } catch (e: IOException) {
+                Log.e(DEMO_FRAGMENT, "readFile: /proc/stat", e)
+            } finally {
+                if (reader != null) {
+                    try {
+                        reader.close()
+                    } catch (e: IOException) {
+                        Log.e(DEMO_FRAGMENT, " on close reader ", e)
+                    }
+
+                }
+            }
+        }
+    }
+}
diff --git a/demo/src/main/res/layout/activity_demo.xml b/demo/src/main/res/layout/activity_demo.xml
index 066c36a..0b423d5 100644
--- a/demo/src/main/res/layout/activity_demo.xml
+++ b/demo/src/main/res/layout/activity_demo.xml
@@ -19,13 +19,4 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         tools:ignore="MergeRootFrame" />
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentRight="true"
-        android:layout_margin="16dp"
-        android:src="@drawable/ic_done"/>
 </RelativeLayout>
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 815f976..01344fc 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Apr 13 16:42:11 CST 2016
+#Sat Sep 08 20:53:15 EEST 2018
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
