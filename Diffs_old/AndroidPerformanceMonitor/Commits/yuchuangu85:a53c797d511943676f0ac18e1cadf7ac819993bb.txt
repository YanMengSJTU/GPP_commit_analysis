diff --git a/blockcanary-android/src/main/AndroidManifest.xml b/blockcanary-android/src/main/AndroidManifest.xml
index 455b227..1a65024 100644
--- a/blockcanary-android/src/main/AndroidManifest.xml
+++ b/blockcanary-android/src/main/AndroidManifest.xml
@@ -4,7 +4,7 @@
 
     <application>
         <activity
-            android:name="com.github.moduth.core.ui.DisplayActivity"
+            android:name=".core.ui.DisplayActivity"
             android:enabled="false"
             android:icon="@drawable/block_canary_icon"
             android:label="@string/block_canary_display_activity_label"
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
index 28a767b..bbe87ff 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
@@ -21,11 +21,11 @@
 import android.os.Looper;
 import android.preference.PreferenceManager;
 
-import com.github.moduth.core.BlockCanaryInternals;
-import com.github.moduth.core.DisplayService;
-import com.github.moduth.core.SingleThreadFactory;
-import com.github.moduth.core.Uploader;
-import com.github.moduth.core.ui.DisplayActivity;
+import com.github.moduth.blockcanary.core.BlockCanaryInternals;
+import com.github.moduth.blockcanary.core.DisplayService;
+import com.github.moduth.blockcanary.core.SingleThreadFactory;
+import com.github.moduth.blockcanary.core.Uploader;
+import com.github.moduth.blockcanary.core.ui.DisplayActivity;
 
 import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
index 74b6519..4cab0ed 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
@@ -18,7 +18,7 @@
 import android.content.Context;
 import android.util.Log;
 
-import com.github.moduth.core.BlockInterceptor;
+import com.github.moduth.blockcanary.core.BlockInterceptor;
 import com.github.moduth.blockcanary.internal.BlockInfo;
 
 import java.io.File;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/AbstractSampler.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/AbstractSampler.java
similarity index 91%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/AbstractSampler.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/AbstractSampler.java
index 8d961f7..1af8631 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/AbstractSampler.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/AbstractSampler.java
@@ -20,12 +20,12 @@
 /**
  * {@link AbstractSampler} sampler defines sampler work flow.
  */
-abstract class AbstractSampler {
+public abstract class AbstractSampler {
 
     private static final int DEFAULT_SAMPLE_INTERVAL = 300;
 
-    protected AtomicBoolean mShouldSample = new AtomicBoolean(false);
-    protected long mSampleInterval;
+    private AtomicBoolean mShouldSample = new AtomicBoolean(false);
+    long mSampleInterval;
 
     private Runnable mRunnable = new Runnable() {
         @Override
@@ -39,7 +39,7 @@ public void run() {
         }
     };
 
-    public AbstractSampler(long sampleInterval) {
+    AbstractSampler(long sampleInterval) {
         if (0 == sampleInterval) {
             sampleInterval = DEFAULT_SAMPLE_INTERVAL;
         }
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/BlockCanaryInternals.java
similarity index 95%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/BlockCanaryInternals.java
index 6c0bb0b..7ab61b1 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/BlockCanaryInternals.java
@@ -29,9 +29,9 @@
 
 public final class BlockCanaryInternals {
 
-    LooperMonitor monitor;
-    StackSampler stackSampler;
-    CpuSampler cpuSampler;
+    public LooperMonitor monitor;
+    public StackSampler stackSampler;
+    public CpuSampler cpuSampler;
 
     private static BlockCanaryInternals sInstance;
     private static BlockCanaryContext sContext;
@@ -80,7 +80,7 @@ public void onBlockEvent(long realTimeStart, long realTimeEnd,
      *
      * @return BlockCanaryInternals instance
      */
-    static BlockCanaryInternals getInstance() {
+    public static BlockCanaryInternals getInstance() {
         if (sInstance == null) {
             synchronized (BlockCanaryInternals.class) {
                 if (sInstance == null) {
@@ -104,7 +104,7 @@ public static BlockCanaryContext getContext() {
         return sContext;
     }
 
-    void addBlockInterceptor(BlockInterceptor blockInterceptor) {
+    public void addBlockInterceptor(BlockInterceptor blockInterceptor) {
         mInterceptorChain.add(blockInterceptor);
     }
 
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockInterceptor.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/BlockInterceptor.java
similarity index 95%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockInterceptor.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/BlockInterceptor.java
index cf6309a..415cf7f 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockInterceptor.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/BlockInterceptor.java
@@ -19,7 +19,7 @@
 
 import com.github.moduth.blockcanary.internal.BlockInfo;
 
-interface BlockInterceptor {
+public interface BlockInterceptor {
     void onBlock(Context context, BlockInfo blockInfo);
 
 
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/CpuSampler.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/CpuSampler.java
similarity index 97%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/CpuSampler.java
index 951789c..53d43f7 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/CpuSampler.java
@@ -29,7 +29,7 @@
 /**
  * Dumps cpu usage.
  */
-class CpuSampler extends AbstractSampler {
+public class CpuSampler extends AbstractSampler {
 
     private static final String TAG = "CpuSampler";
     private static final int BUFFER_SIZE = 1000;
@@ -49,7 +49,7 @@
     private long mTotalLast = 0;
     private long mAppCpuTimeLast = 0;
 
-    public CpuSampler(long sampleInterval) {
+    CpuSampler(long sampleInterval) {
         super(sampleInterval);
         BUSY_TIME = (int) (mSampleInterval * 1.2f);
     }
@@ -65,7 +65,7 @@ public void start() {
      *
      * @return string show cpu rate information
      */
-    public String getCpuRateInfo() {
+    String getCpuRateInfo() {
         StringBuilder sb = new StringBuilder();
         synchronized (mCpuInfoEntries) {
             for (Map.Entry<Long, String> entry : mCpuInfoEntries.entrySet()) {
@@ -79,7 +79,7 @@ public String getCpuRateInfo() {
         return sb.toString();
     }
 
-    public boolean isCpuBusy(long start, long end) {
+    boolean isCpuBusy(long start, long end) {
         if (end - start > mSampleInterval) {
             long s = start - mSampleInterval;
             long e = start + mSampleInterval;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/DisplayService.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/DisplayService.java
similarity index 98%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/DisplayService.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/DisplayService.java
index feba672..34efbe2 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/DisplayService.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/DisplayService.java
@@ -35,7 +35,7 @@
 import static android.os.Build.VERSION_CODES.HONEYCOMB;
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 
-final class DisplayService implements BlockInterceptor {
+public final class DisplayService implements BlockInterceptor {
 
     private static final String TAG = "DisplayService";
 
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/HandlerThreadFactory.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/HandlerThreadFactory.java
similarity index 88%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/HandlerThreadFactory.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/HandlerThreadFactory.java
index 824784d..f23868e 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/HandlerThreadFactory.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/HandlerThreadFactory.java
@@ -27,24 +27,24 @@ private HandlerThreadFactory() {
         throw new InstantiationError("Must not instantiate this class");
     }
 
-    public static Handler getTimerThreadHandler() {
+    static Handler getTimerThreadHandler() {
         return sLoopThread.getHandler();
     }
 
-    public static Handler getWriteLogThreadHandler() {
+    static Handler getWriteLogThreadHandler() {
         return sWriteLogThread.getHandler();
     }
 
     private static class HandlerThreadWrapper {
         private Handler handler = null;
 
-        public HandlerThreadWrapper(String threadName) {
+        HandlerThreadWrapper(String threadName) {
             HandlerThread handlerThread = new HandlerThread("BlockCanary-" + threadName);
             handlerThread.start();
             handler = new Handler(handlerThread.getLooper());
         }
 
-        public Handler getHandler() {
+        Handler getHandler() {
             return handler;
         }
     }
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/LogWriter.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/LogWriter.java
similarity index 96%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/LogWriter.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/LogWriter.java
index 3263632..a565a8d 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/LogWriter.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/LogWriter.java
@@ -50,7 +50,7 @@ private LogWriter() {
      * @param str block info string
      * @return log file path
      */
-    public static String save(String str) {
+    static String save(String str) {
         String path;
         synchronized (SAVE_DELETE_LOCK) {
             path = save("looper", str);
@@ -61,7 +61,7 @@ public static String save(String str) {
     /**
      * Delete obsolete log files, which is by default 2 days.
      */
-    public static void cleanObsolete() {
+    static void cleanObsolete() {
         HandlerThreadFactory.getWriteLogThreadHandler().post(new Runnable() {
             @Override
             public void run() {
@@ -137,7 +137,7 @@ private static String save(String logFileName, String str) {
         return path;
     }
 
-    public static File generateTempZip(String filename) {
+    static File generateTempZip(String filename) {
         return new File(BlockCanaryInternals.getPath() + "/" + filename + ".zip");
     }
 }
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/LooperMonitor.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/LooperMonitor.java
similarity index 100%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/LooperMonitor.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/LooperMonitor.java
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/PerformanceUtils.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/PerformanceUtils.java
index 2579337..49929ef 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/PerformanceUtils.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/PerformanceUtils.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.moduth.core;
+package com.github.moduth.blockcanary.core;
 
 import android.app.ActivityManager;
 import android.content.Context;
@@ -26,7 +26,7 @@
 import java.io.IOException;
 import java.util.regex.Pattern;
 
-class PerformanceUtils {
+public class PerformanceUtils {
     private static final String TAG = "PerformanceUtils";
 
     private static int sCoreNum = 0;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ProcessUtils.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ProcessUtils.java
index 82d8499..2918725 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ProcessUtils.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ProcessUtils.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.moduth.core;
+package com.github.moduth.blockcanary.core;
 
 import android.app.ActivityManager;
 import android.content.Context;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/SingleThreadFactory.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/SingleThreadFactory.java
similarity index 89%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/SingleThreadFactory.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/SingleThreadFactory.java
index 0048eaf..a9d9bd6 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/SingleThreadFactory.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/SingleThreadFactory.java
@@ -20,11 +20,11 @@
 /**
  * This is intended to only be used with a single thread executor.
  */
-final class SingleThreadFactory implements ThreadFactory {
+public final class SingleThreadFactory implements ThreadFactory {
 
     private final String threadName;
 
-    SingleThreadFactory(String threadName) {
+    public SingleThreadFactory(String threadName) {
         this.threadName = "BlockCanary-" + threadName;
     }
 
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/StackSampler.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/StackSampler.java
similarity index 89%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/StackSampler.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/StackSampler.java
index 221b545..dc9d8a3 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/StackSampler.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/StackSampler.java
@@ -23,7 +23,7 @@
 /**
  * Dumps thread stack.
  */
-class StackSampler extends AbstractSampler {
+public class StackSampler extends AbstractSampler {
 
     private static final int DEFAULT_MAX_ENTRY_COUNT = 100;
     private static final LinkedHashMap<Long, String> sStackMap = new LinkedHashMap<>();
@@ -31,17 +31,17 @@
     private int mMaxEntryCount = DEFAULT_MAX_ENTRY_COUNT;
     private Thread mCurrentThread;
 
-    public StackSampler(Thread thread, long sampleIntervalMillis) {
+    StackSampler(Thread thread, long sampleIntervalMillis) {
         this(thread, DEFAULT_MAX_ENTRY_COUNT, sampleIntervalMillis);
     }
 
-    public StackSampler(Thread thread, int maxEntryCount, long sampleIntervalMillis) {
+    private StackSampler(Thread thread, int maxEntryCount, long sampleIntervalMillis) {
         super(sampleIntervalMillis);
         mCurrentThread = thread;
         mMaxEntryCount = maxEntryCount;
     }
 
-    public ArrayList<String> getThreadStackEntries(long startTime, long endTime) {
+    ArrayList<String> getThreadStackEntries(long startTime, long endTime) {
         ArrayList<String> result = new ArrayList<>();
         synchronized (sStackMap) {
             for (Long entryTime : sStackMap.keySet()) {
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/Uploader.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/Uploader.java
similarity index 98%
rename from blockcanary-android/src/main/java/com/github/moduth/blockcanary/Uploader.java
rename to blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/Uploader.java
index 4da07f4..711b0f3 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/Uploader.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/Uploader.java
@@ -23,7 +23,7 @@
 import java.util.Locale;
 
 
-final class Uploader {
+public final class Uploader {
 
     private static final String TAG = "Uploader";
     private static final SimpleDateFormat FORMAT =
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUi.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUi.java
index 10e1393..cbe7dcf 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUi.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUi.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import android.content.res.Resources;
 import android.graphics.PorterDuffXfermode;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUtils.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUtils.java
index ab0cdae..764c57e 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUtils.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockCanaryUtils.java
@@ -1,10 +1,10 @@
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import android.text.TextUtils;
 
-import com.github.moduth.core.BlockCanaryInternals;
+import com.github.moduth.blockcanary.core.BlockCanaryInternals;
 import com.github.moduth.blockcanary.internal.BlockInfo;
-import com.github.moduth.core.ProcessUtils;
+import com.github.moduth.blockcanary.core.ProcessUtils;
 
 import java.util.LinkedList;
 import java.util.List;
@@ -28,7 +28,7 @@
     /**
      * Get key stack string to show as title in ui list.
      */
-    public static String concernStackString(BlockInfo blockInfo) {
+    static String concernStackString(BlockInfo blockInfo) {
         String result = "";
         for (String stackEntry : blockInfo.threadStackEntries) {
             if (Character.isLetter(stackEntry.charAt(0))) {
@@ -45,13 +45,13 @@ public static String concernStackString(BlockInfo blockInfo) {
         return result;
     }
 
-    public static boolean isBlockInfoValid(BlockInfo blockInfo) {
+    static boolean isBlockInfoValid(BlockInfo blockInfo) {
         boolean isValid = !TextUtils.isEmpty(blockInfo.timeStart);
         isValid = isValid && blockInfo.timeCost >= 0;
         return isValid;
     }
 
-    public static boolean isInWhiteList(BlockInfo info) {
+    static boolean isInWhiteList(BlockInfo info) {
         for (String stackEntry : info.threadStackEntries) {
             if (Character.isLetter(stackEntry.charAt(0))) {
                 String[] lines = stackEntry.split(BlockInfo.SEPARATOR);
@@ -67,7 +67,7 @@ public static boolean isInWhiteList(BlockInfo info) {
         return false;
     }
 
-    public static List<String> getConcernPackages() {
+    static List<String> getConcernPackages() {
         return CONCERN_LIST;
     }
 
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoCorruptException.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoCorruptException.java
index 0224830..3b89782 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoCorruptException.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoCorruptException.java
@@ -1,4 +1,4 @@
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import java.util.Locale;
 
@@ -6,14 +6,14 @@
  * @author markzhai on 16/8/24
  * @version 1.3.0
  */
-public class BlockInfoCorruptException extends Exception {
+class BlockInfoCorruptException extends Exception {
 
-    public BlockInfoCorruptException(BlockInfoEx blockInfo) {
+    BlockInfoCorruptException(BlockInfoEx blockInfo) {
         this(String.format(Locale.US,
                 "BlockInfo (%s) is corrupt.", blockInfo.logFile.getName()));
     }
 
-    public BlockInfoCorruptException(String detailMessage) {
+    private BlockInfoCorruptException(String detailMessage) {
         super(detailMessage);
     }
 }
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoEx.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoEx.java
index d332793..3adf9ea 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoEx.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/BlockInfoEx.java
@@ -1,4 +1,4 @@
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import android.util.Log;
 
@@ -13,8 +13,8 @@
 
     private static final String TAG = "BlockInfoEx";
 
-    public File logFile;
-    public String concernStackString;
+    File logFile;
+    String concernStackString;
 
     /**
      * Create {@link BlockInfoEx} from saved log file.
@@ -22,7 +22,7 @@
      * @param file looper log file
      * @return LooperLog created from log file
      */
-    public static BlockInfoEx newInstance(File file) {
+    static BlockInfoEx newInstance(File file) {
         BlockInfoEx blockInfo = new BlockInfoEx();
         blockInfo.logFile = file;
 
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DetailAdapter.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DetailAdapter.java
index 60496bb..c65d2cc 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DetailAdapter.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DetailAdapter.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import android.content.Context;
 import android.text.Html;
@@ -126,7 +126,7 @@ private String elementToHtmlString(String element, int position, boolean folding
         return htmlString;
     }
 
-    public void update(BlockInfo blockInfo) {
+    void update(BlockInfo blockInfo) {
         if (mBlockInfo != null && blockInfo.timeStart.equals(mBlockInfo.timeStart)) {
             // Same data, nothing to change.
             return;
@@ -137,7 +137,7 @@ public void update(BlockInfo blockInfo) {
         notifyDataSetChanged();
     }
 
-    public void toggleRow(int position) {
+    void toggleRow(int position) {
         mFoldings[position] = !mFoldings[position];
         notifyDataSetChanged();
     }
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayActivity.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayActivity.java
index 35177ce..7e3948a 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayActivity.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayActivity.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import android.app.ActionBar;
 import android.app.Activity;
@@ -43,8 +43,8 @@
 import android.widget.TextView;
 
 import com.github.moduth.blockcanary.BlockCanaryContext;
-import com.github.moduth.core.BlockCanaryInternals;
-import com.github.moduth.core.LogWriter;
+import com.github.moduth.blockcanary.core.BlockCanaryInternals;
+import com.github.moduth.blockcanary.core.LogWriter;
 import com.github.moduth.blockcanary.R;
 
 import java.io.File;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayConnectorView.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayConnectorView.java
index 48bdadc..0b0048c 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayConnectorView.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/DisplayConnectorView.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import android.content.Context;
 import android.graphics.Bitmap;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/MoreDetailsView.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/MoreDetailsView.java
index 1602c65..3d3ef91 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/MoreDetailsView.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/core/ui/MoreDetailsView.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.moduth.core.ui;
+package com.github.moduth.blockcanary.core.ui;
 
 import android.content.Context;
 import android.graphics.Canvas;
@@ -33,7 +33,8 @@ public MoreDetailsView(Context context, AttributeSet attrs) {
         mIconPaint.setColor(BlockCanaryUi.ROOT_COLOR);
     }
 
-    @Override protected void onDraw(Canvas canvas) {
+    @Override
+    protected void onDraw(Canvas canvas) {
         int width = getWidth();
         int height = getHeight();
         int halfHeight = height / 2;
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java
index ad0eec8..912c828 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java
@@ -22,9 +22,9 @@
 import android.telephony.TelephonyManager;
 import android.util.Log;
 
-import com.github.moduth.core.BlockCanaryInternals;
-import com.github.moduth.core.PerformanceUtils;
-import com.github.moduth.core.ProcessUtils;
+import com.github.moduth.blockcanary.core.BlockCanaryInternals;
+import com.github.moduth.blockcanary.core.PerformanceUtils;
+import com.github.moduth.blockcanary.core.ProcessUtils;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
diff --git a/blockcanary-android/src/main/res/layout/block_canary_ref_row.xml b/blockcanary-android/src/main/res/layout/block_canary_ref_row.xml
index 24f218b..932235b 100644
--- a/blockcanary-android/src/main/res/layout/block_canary_ref_row.xml
+++ b/blockcanary-android/src/main/res/layout/block_canary_ref_row.xml
@@ -6,7 +6,7 @@
     android:minHeight="48dp"
     android:orientation="horizontal">
 
-    <com.github.moduth.core.ui.DisplayConnectorView
+    <com.github.moduth.blockcanary.core.ui.DisplayConnectorView
         android:id="@+id/__leak_canary_row_connector"
         android:layout_width="16dp"
         android:layout_height="match_parent"
@@ -20,7 +20,7 @@
         android:layout_gravity="center_vertical"
         android:layout_weight="1"/>
 
-    <com.github.moduth.core.ui.MoreDetailsView
+    <com.github.moduth.blockcanary.core.ui.MoreDetailsView
         android:id="@+id/__leak_canary_row_more"
         android:layout_width="12dp"
         android:layout_height="12dp"
diff --git a/blockcanary-sample/build.gradle b/blockcanary-sample/build.gradle
index c3b5453..46c11ca 100644
--- a/blockcanary-sample/build.gradle
+++ b/blockcanary-sample/build.gradle
@@ -21,11 +21,11 @@ android {
 
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
-//    debugImplementation project(':blockcanary-android')
-//    releaseImplementation project(':blockcanary-android-no-op')
+    debugImplementation project(':blockcanary-android')
+    releaseImplementation project(':blockcanary-android-no-op')
 
-    debugImplementation 'com.github.yuchuangu85.AndroidPerformanceMonitor:blockcanary-android:v1.0'
-    releaseImplementation 'com.github.yuchuangu85.AndroidPerformanceMonitor:blockcanary-android-no-op:v1.0'
+//    debugImplementation 'com.github.yuchuangu85.AndroidPerformanceMonitor:blockcanary-android:v1.0'
+//    releaseImplementation 'com.github.yuchuangu85.AndroidPerformanceMonitor:blockcanary-android-no-op:v1.0'
 
     implementation 'com.android.support:appcompat-v7:28.0.0'
     implementation 'com.android.support:design:28.0.0'
