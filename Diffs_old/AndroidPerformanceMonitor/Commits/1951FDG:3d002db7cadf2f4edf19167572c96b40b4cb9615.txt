diff --git a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/AbstractSampler.java b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/AbstractSampler.java
index 5bf61e9..6b7e566 100644
--- a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/AbstractSampler.java
+++ b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/AbstractSampler.java
@@ -27,7 +27,7 @@
     protected AtomicBoolean mShouldSample = new AtomicBoolean(false);
     protected long mSampleInterval;
 
-    private Runnable mRunnable = new Runnable() {
+    private final Runnable mRunnable = new Runnable() {
         @Override
         public void run() {
             doSample();
diff --git a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
index d9660a9..0d9095e 100644
--- a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
+++ b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
@@ -36,7 +36,7 @@
     private static BlockCanaryInternals sInstance;
     private static BlockCanaryContext sContext;
 
-    private List<BlockInterceptor> mInterceptorChain = new LinkedList<>();
+    private final List<BlockInterceptor> mInterceptorChain = new LinkedList<>();
 
     public BlockCanaryInternals() {
 
@@ -151,7 +151,7 @@ static File detectedBlockDirectory() {
 
     private static class BlockLogFileFilter implements FilenameFilter {
 
-        private String TYPE = ".log";
+        private final String TYPE = ".log";
 
         BlockLogFileFilter() {
 
diff --git a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/CpuSampler.java b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
index 01f0455..de89b2f 100644
--- a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
+++ b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/CpuSampler.java
@@ -56,7 +56,7 @@ public CpuSampler(long sampleInterval) {
 
     @Override
     public void start() {
-        if (Build.VERSION.SDK_INT < 26) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {
             super.start();
             reset();
         }
diff --git a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/HandlerThreadFactory.java b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/HandlerThreadFactory.java
index e2b77cc..cf552be 100644
--- a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/HandlerThreadFactory.java
+++ b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/HandlerThreadFactory.java
@@ -20,8 +20,8 @@
 
 final class HandlerThreadFactory {
 
-    private static HandlerThreadWrapper sLoopThread = new HandlerThreadWrapper("loop");
-    private static HandlerThreadWrapper sWriteLogThread = new HandlerThreadWrapper("writer");
+    private static final HandlerThreadWrapper sLoopThread = new HandlerThreadWrapper("loop");
+    private static final HandlerThreadWrapper sWriteLogThread = new HandlerThreadWrapper("writer");
 
     private HandlerThreadFactory() {
         throw new InstantiationError("Must not instantiate this class");
@@ -36,7 +36,7 @@ public static Handler getWriteLogThreadHandler() {
     }
 
     private static class HandlerThreadWrapper {
-        private Handler handler;
+        private final Handler handler;
 
         public HandlerThreadWrapper(String threadName) {
             HandlerThread handlerThread = new HandlerThread("BlockCanary-" + threadName);
diff --git a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/StackSampler.java b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/StackSampler.java
index b6c6653..ca7cc2d 100644
--- a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/StackSampler.java
+++ b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/StackSampler.java
@@ -28,8 +28,8 @@
     private static final int DEFAULT_MAX_ENTRY_COUNT = 100;
     private static final LinkedHashMap<Long, String> sStackMap = new LinkedHashMap<>();
 
-    private int mMaxEntryCount = DEFAULT_MAX_ENTRY_COUNT;
-    private Thread mCurrentThread;
+    private final int mMaxEntryCount;
+    private final Thread mCurrentThread;
 
     public  StackTraceElement[] getTraceElements() {
         synchronized (sStackMap) {
diff --git a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java
index 67dd315..b7e9873 100644
--- a/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java
+++ b/blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java
@@ -63,10 +63,10 @@
     public static final String KEY_TOTAL_MEMORY = "totalMemory";
     public static final String KEY_FREE_MEMORY = "freeMemory";
 
-    public static String sQualifier;
-    public static String sModel;
-    public static String sApiLevel = "";
-    public static int sCpuCoreNum = -1;
+    public static final String sQualifier;
+    public static final String sModel;
+    public static final String sApiLevel;
+    public static final int sCpuCoreNum;
 
     public String qualifier;
     public String model;
@@ -90,10 +90,10 @@
     public ArrayList<String> threadStackEntries = new ArrayList<>();
     public StackTraceElement[] stackTraceElements ;
 
-    private StringBuilder basicSb = new StringBuilder();
-    private StringBuilder cpuSb = new StringBuilder();
-    private StringBuilder timeSb = new StringBuilder();
-    private StringBuilder stackSb = new StringBuilder();
+    private final StringBuilder basicSb = new StringBuilder();
+    private final StringBuilder cpuSb = new StringBuilder();
+    private final StringBuilder timeSb = new StringBuilder();
+    private final StringBuilder stackSb = new StringBuilder();
 
     static {
         sCpuCoreNum = PerformanceUtils.getNumCores();
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
index aa5bf48..a0b93f1 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
@@ -20,6 +20,7 @@
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.pm.PackageManager;
+import android.graphics.Color;
 import android.os.Build;
 import android.os.Looper;
 import android.preference.PreferenceManager;
@@ -39,7 +40,7 @@
     // these lines are originally copied from LeakCanary: Copyright (C) 2015 Square, Inc.
     private static final Executor fileIoExecutor = newSingleThreadExecutor("File-IO");
     private static BlockCanary sInstance;
-    private BlockCanaryInternals mBlockCanaryCore;
+    private final BlockCanaryInternals mBlockCanaryCore;
     private boolean mMonitorStarted = false;
 
     private BlockCanary() {
@@ -119,7 +120,9 @@ private static void createNotificationChannel(Context context) {
         if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             int importance = NotificationManager.IMPORTANCE_DEFAULT;
             NotificationChannel channel = new NotificationChannel(DisplayService.CHANNEL_ID, "Block Canary", importance);
+            channel.enableLights(true);
             channel.setDescription("Block Canary");
+            channel.setLightColor(Color.RED);
             // Register the channel with the system; you can't change the importance
             // or other notification behaviors after this
             NotificationManager notificationManager = context.getSystemService(NotificationManager.class);
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/DisplayService.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/DisplayService.java
index fc10be7..d30dc77 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/DisplayService.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/DisplayService.java
@@ -21,20 +21,12 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Build;
-import android.util.Log;
+import android.os.Build.VERSION;
+import android.os.Build.VERSION_CODES;
 
 import com.github.moduth.blockcanary.internal.BlockInfo;
 import com.github.moduth.blockcanary.ui.DisplayActivity;
 
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-
-import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
-import static android.os.Build.VERSION.SDK_INT;
-import static android.os.Build.VERSION_CODES.HONEYCOMB;
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
-import static android.os.Build.VERSION_CODES.LOLLIPOP;
-
 final class DisplayService implements BlockInterceptor {
 
     private static final String TAG = "DisplayService";
@@ -45,7 +37,7 @@ public void onBlock(Context context, BlockInfo blockInfo) {
         Intent intent = new Intent(context, DisplayActivity.class);
         intent.putExtra("show_latest", blockInfo.timeStart);
         intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
-        PendingIntent pendingIntent = PendingIntent.getActivity(context, 1, intent, FLAG_UPDATE_CURRENT);
+        PendingIntent pendingIntent = PendingIntent.getActivity(context, 1, intent, PendingIntent.FLAG_UPDATE_CURRENT);
         String contentTitle = context.getString(R.string.block_canary_class_has_blocked, blockInfo.timeStart);
         String contentText = context.getString(R.string.block_canary_notification_message);
         show(context, contentTitle, contentText, pendingIntent);
@@ -57,46 +49,31 @@ private void show(Context context, String contentTitle, String contentText, Pend
 
         if(notificationManager != null) {
             Notification notification;
-            if (SDK_INT < HONEYCOMB) {
-                notification = new Notification();
-                notification.icon = R.drawable.block_canary_notification;
-                notification.when = System.currentTimeMillis();
-                notification.flags |= Notification.FLAG_AUTO_CANCEL;
-                notification.defaults = Notification.DEFAULT_SOUND;
-                try {
-                    Method deprecatedMethod = notification.getClass().getMethod("setLatestEventInfo", Context.class, CharSequence.class, CharSequence.class, PendingIntent.class);
-                    deprecatedMethod.invoke(notification, context, contentTitle, contentText, pendingIntent);
-                } catch (NoSuchMethodException | IllegalAccessException | IllegalArgumentException
-                        | InvocationTargetException e) {
-                    Log.w(TAG, "Method not found", e);
-                }
+            Notification.Builder builder;
+            if(VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+                builder = new Notification.Builder(context, CHANNEL_ID)
+                        .setSmallIcon(R.drawable.block_canary_notification)
+                        .setWhen(System.currentTimeMillis())
+                        .setContentTitle(contentTitle)
+                        .setContentText(contentText)
+                        .setAutoCancel(true)
+                        .setContentIntent(pendingIntent)
+                        .setDefaults(Notification.DEFAULT_SOUND);
             } else {
-                Notification.Builder builder;
-                if(SDK_INT >= Build.VERSION_CODES.O) {
-                    builder = new Notification.Builder(context, CHANNEL_ID)
-                            .setSmallIcon(R.drawable.block_canary_notification)
-                            .setWhen(System.currentTimeMillis())
-                            .setContentTitle(contentTitle)
-                            .setContentText(contentText)
-                            .setAutoCancel(true)
-                            .setContentIntent(pendingIntent)
-                            .setDefaults(Notification.DEFAULT_SOUND);
-                } else {
-                    builder = new Notification.Builder(context)
-                            .setSmallIcon(R.drawable.block_canary_notification)
-                            .setWhen(System.currentTimeMillis())
-                            .setContentTitle(contentTitle)
-                            .setContentText(contentText)
-                            .setAutoCancel(true)
-                            .setContentIntent(pendingIntent)
-                            .setDefaults(Notification.DEFAULT_SOUND);
-                }
+                builder = new Notification.Builder(context)
+                        .setSmallIcon(R.drawable.block_canary_notification)
+                        .setWhen(System.currentTimeMillis())
+                        .setContentTitle(contentTitle)
+                        .setContentText(contentText)
+                        .setAutoCancel(true)
+                        .setContentIntent(pendingIntent)
+                        .setDefaults(Notification.DEFAULT_SOUND);
+            }
 
-                if (SDK_INT < JELLY_BEAN) {
-                    notification = builder.getNotification();
-                } else {
-                    notification = builder.build();
-                }
+            if (VERSION.SDK_INT < VERSION_CODES.JELLY_BEAN) {
+                notification = builder.getNotification();
+            } else {
+                notification = builder.build();
             }
             notificationManager.notify(0xDEAFBEEF, notification);
         }
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayActivity.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayActivity.java
index 79ce79c..7a1bf5f 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayActivity.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayActivity.java
@@ -57,7 +57,7 @@
 
     private static final String TAG = "DisplayActivity";
     private static final String SHOW_BLOCK_EXTRA = "show_latest";
-    public static final String SHOW_BLOCK_EXTRA_KEY = "BlockStartTime";
+    private static final String SHOW_BLOCK_EXTRA_KEY = "BlockStartTime";
 
     // empty until it's been first loaded.
     private List<BlockInfoEx> mBlockInfoEntries = new ArrayList<>();
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayConnectorView.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayConnectorView.java
index 0f09d47..e07e9af 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayConnectorView.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayConnectorView.java
@@ -53,7 +53,6 @@ public DisplayConnectorView(Context context, AttributeSet attrs) {
         type = Type.NODE;
     }
 
-    @SuppressWarnings("SuspiciousNameCombination")
     @Override
     protected void onDraw(Canvas canvas) {
         int width = getWidth();
diff --git a/blockcanary-sample/src/main/AndroidManifest.xml b/blockcanary-sample/src/main/AndroidManifest.xml
index fbf6d6b..6455486 100644
--- a/blockcanary-sample/src/main/AndroidManifest.xml
+++ b/blockcanary-sample/src/main/AndroidManifest.xml
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
-<manifest package="com.example.blockcanary"
+<manifest xmlns:tools="http://schemas.android.com/tools"
+    package="com.example.blockcanary"
           xmlns:android="http://schemas.android.com/apk/res/android">
 
     <application
@@ -7,7 +8,8 @@
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
-        android:theme="@style/ModuThreeHandsomeTheme">
+        android:theme="@style/ModuThreeHandsomeTheme"
+        tools:ignore="AllowBackup,GoogleAppIndexingWarning">
 
         <activity
             android:name=".DemoActivity"
diff --git a/blockcanary-sample/src/main/java/com/example/blockcanary/DemoActivity.java b/blockcanary-sample/src/main/java/com/example/blockcanary/DemoActivity.java
index 1c72795..4453b14 100644
--- a/blockcanary-sample/src/main/java/com/example/blockcanary/DemoActivity.java
+++ b/blockcanary-sample/src/main/java/com/example/blockcanary/DemoActivity.java
@@ -34,7 +34,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 .add(R.id.container, DemoFragment.newInstance())
                 .commit();
 
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+        FloatingActionButton fab = findViewById(R.id.fab);
         fab.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
diff --git a/blockcanary-sample/src/main/java/com/example/blockcanary/DemoFragment.java b/blockcanary-sample/src/main/java/com/example/blockcanary/DemoFragment.java
index 25b77ca..c4c2261 100644
--- a/blockcanary-sample/src/main/java/com/example/blockcanary/DemoFragment.java
+++ b/blockcanary-sample/src/main/java/com/example/blockcanary/DemoFragment.java
@@ -49,9 +49,9 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
     @Override
     public void onViewCreated(final View view, @Nullable final Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
-        Button button1 = (Button) view.findViewById(R.id.button1);
-        Button button2 = (Button) view.findViewById(R.id.button2);
-        Button button3 = (Button) view.findViewById(R.id.button3);
+        Button button1 = view.findViewById(R.id.button1);
+        Button button2 = view.findViewById(R.id.button2);
+        Button button3 = view.findViewById(R.id.button3);
 
         button1.setOnClickListener(this);
         button2.setOnClickListener(this);
diff --git a/blockcanary-sample/src/main/res/drawable-anydpi/ic_done.xml b/blockcanary-sample/src/main/res/drawable-anydpi/ic_done.xml
new file mode 100644
index 0000000..49929f4
--- /dev/null
+++ b/blockcanary-sample/src/main/res/drawable-anydpi/ic_done.xml
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="#FFFFFF">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M11,17h2v-6h-2v6zM12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,20c-4.41,0 -8,-3.59 -8,-8s3.59,-8 8,-8 8,3.59 8,8 -3.59,8 -8,8zM11,9h2L13,7h-2v2z"/>
+</vector>
diff --git a/blockcanary-sample/src/main/res/drawable-hdpi/ic_done.png b/blockcanary-sample/src/main/res/drawable-hdpi/ic_done.png
new file mode 100644
index 0000000..4c4b069
Binary files /dev/null and b/blockcanary-sample/src/main/res/drawable-hdpi/ic_done.png differ
diff --git a/blockcanary-sample/src/main/res/drawable-mdpi/ic_done.png b/blockcanary-sample/src/main/res/drawable-mdpi/ic_done.png
new file mode 100644
index 0000000..9883758
Binary files /dev/null and b/blockcanary-sample/src/main/res/drawable-mdpi/ic_done.png differ
diff --git a/blockcanary-sample/src/main/res/drawable-xhdpi/ic_done.png b/blockcanary-sample/src/main/res/drawable-xhdpi/ic_done.png
new file mode 100644
index 0000000..68e4365
Binary files /dev/null and b/blockcanary-sample/src/main/res/drawable-xhdpi/ic_done.png differ
diff --git a/blockcanary-sample/src/main/res/drawable-xxhdpi/ic_done.png b/blockcanary-sample/src/main/res/drawable-xxhdpi/ic_done.png
new file mode 100644
index 0000000..053ff40
Binary files /dev/null and b/blockcanary-sample/src/main/res/drawable-xxhdpi/ic_done.png differ
diff --git a/blockcanary-sample/src/main/res/drawable/btn_select.xml b/blockcanary-sample/src/main/res/drawable/btn_select.xml
index a8a916a..588f1ba 100644
--- a/blockcanary-sample/src/main/res/drawable/btn_select.xml
+++ b/blockcanary-sample/src/main/res/drawable/btn_select.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android" >
 
-    <item android:state_focused="true" android:drawable="@drawable/btn_pre"></item>
-    <item android:state_pressed="true" android:drawable="@drawable/btn_pre"></item>
-    <item android:drawable="@drawable/btn_nor"></item>
+    <item android:state_focused="true" android:drawable="@drawable/btn_pre" />
+    <item android:state_pressed="true" android:drawable="@drawable/btn_pre" />
+    <item android:drawable="@drawable/btn_nor" />
 
 </selector>
\ No newline at end of file
diff --git a/blockcanary-sample/src/main/res/drawable/ic_done.png b/blockcanary-sample/src/main/res/drawable/ic_done.png
deleted file mode 100644
index bf5bc7e..0000000
Binary files a/blockcanary-sample/src/main/res/drawable/ic_done.png and /dev/null differ
diff --git a/blockcanary-sample/src/main/res/drawable/ic_launcher_foreground.xml b/blockcanary-sample/src/main/res/drawable/ic_launcher_foreground.xml
new file mode 100644
index 0000000..a5547a3
--- /dev/null
+++ b/blockcanary-sample/src/main/res/drawable/ic_launcher_foreground.xml
@@ -0,0 +1,13 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="41.37931"
+    android:viewportHeight="41.37931"
+    android:tint="#000000">
+  <group android:translateX="8.689655"
+      android:translateY="8.689655">
+      <path
+          android:fillColor="#FF000000"
+          android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM4,12c0,-4.42 3.58,-8 8,-8 1.85,0 3.55,0.63 4.9,1.69L5.69,16.9C4.63,15.55 4,13.85 4,12zM12,20c-1.85,0 -3.55,-0.63 -4.9,-1.69L18.31,7.1C19.37,8.45 20,10.15 20,12c0,4.42 -3.58,8 -8,8z"/>
+  </group>
+</vector>
diff --git a/blockcanary-sample/src/main/res/layout/activity_main.xml b/blockcanary-sample/src/main/res/layout/activity_main.xml
index 5c5fdff..46bb797 100644
--- a/blockcanary-sample/src/main/res/layout/activity_main.xml
+++ b/blockcanary-sample/src/main/res/layout/activity_main.xml
@@ -17,7 +17,7 @@
             android:layout_centerInParent="true"
             android:text="@string/app_name"
             android:textColor="@android:color/white"
-            android:textSize="18sp"/>
+            android:textSize="18sp" />
 
     </RelativeLayout>
 
diff --git a/blockcanary-sample/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/blockcanary-sample/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
new file mode 100644
index 0000000..7353dbd
--- /dev/null
+++ b/blockcanary-sample/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@color/ic_launcher_background"/>
+    <foreground android:drawable="@drawable/ic_launcher_foreground"/>
+</adaptive-icon>
\ No newline at end of file
diff --git a/blockcanary-sample/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/blockcanary-sample/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
new file mode 100644
index 0000000..7353dbd
--- /dev/null
+++ b/blockcanary-sample/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@color/ic_launcher_background"/>
+    <foreground android:drawable="@drawable/ic_launcher_foreground"/>
+</adaptive-icon>
\ No newline at end of file
diff --git a/blockcanary-sample/src/main/res/mipmap-hdpi/ic_launcher.png b/blockcanary-sample/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000..fb04068
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-hdpi/ic_launcher_round.png b/blockcanary-sample/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000..fb04068
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-hdpi/ic_launcher_round.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-mdpi/ic_launcher.png b/blockcanary-sample/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000..4265ffb
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-mdpi/ic_launcher_round.png b/blockcanary-sample/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 0000000..4265ffb
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-mdpi/ic_launcher_round.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-xhdpi/ic_launcher.png b/blockcanary-sample/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000..d8ea51c
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/blockcanary-sample/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..d8ea51c
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-xxhdpi/ic_launcher.png b/blockcanary-sample/src/main/res/mipmap-xxhdpi/ic_launcher.png
index 16854f6..2a3e83d 100644
Binary files a/blockcanary-sample/src/main/res/mipmap-xxhdpi/ic_launcher.png and b/blockcanary-sample/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/blockcanary-sample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..2a3e83d
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/blockcanary-sample/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000..7d6b1dd
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/blockcanary-sample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/blockcanary-sample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000..7d6b1dd
Binary files /dev/null and b/blockcanary-sample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ
diff --git a/blockcanary-sample/src/main/res/values/ic_launcher_background.xml b/blockcanary-sample/src/main/res/values/ic_launcher_background.xml
new file mode 100644
index 0000000..c5d5899
--- /dev/null
+++ b/blockcanary-sample/src/main/res/values/ic_launcher_background.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="ic_launcher_background">#FFFFFF</color>
+</resources>
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index aaf6893..9b119f6 100644
--- a/build.gradle
+++ b/build.gradle
@@ -7,7 +7,7 @@ buildscript {
         google()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.4.1'
+        classpath 'com.android.tools.build:gradle:3.4.2'
     }
 }
 
diff --git a/gradle.properties b/gradle.properties
index 793545a..98f4adf 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,20 +1,19 @@
-## Project-wide Gradle settings.
-#
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
 # For more details on how to configure your build environment visit
 # http://www.gradle.org/docs/current/userguide/build_environment.html
-#
+
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
-# Default value: -Xmx10248m -XX:MaxPermSize=256m
-# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
-#
+org.gradle.jvmargs=-Xmx8192M
+
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
-# org.gradle.parallel=true
-#Sat Mar 05 00:07:08 CST 2016
-org.gradle.jvmargs=-Xmx8192M
-#org.gradle.jvmargs=-Xmx10248m -XX\:MaxPermSize\=512m -XX\:+HeapDumpOnOutOfMemoryError -Dfile.encoding\=UTF-8
+org.gradle.parallel=true
 org.gradle.daemon=true
 org.gradle.configureondemand=false
-org.gradle.parallel=true
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 2322723..87b738c 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index f9dee44..aadee1f 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,4 +1,4 @@
-#Wed Jun 26 23:56:27 WIB 2019
+#Mon Aug 12 14:46:31 CEST 2019
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
diff --git a/gradlew b/gradlew
index 9d82f78..af6708f 100755
--- a/gradlew
+++ b/gradlew
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/usr/bin/env sh
 
 ##############################################################################
 ##
@@ -6,20 +6,38 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m"'
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn ( ) {
+warn () {
     echo "$*"
 }
 
-die ( ) {
+die () {
     echo
     echo "$*"
     echo
@@ -30,6 +48,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,26 +59,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -85,7 +89,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -150,11 +154,19 @@ if $cygwin ; then
     esac
 fi
 
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
 }
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
 
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
+exec "$JAVACMD" "$@"
diff --git a/gradlew.bat b/gradlew.bat
index 8a0b282..0f8d593 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,90 +1,84 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windows variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
