diff --git a/blockcanary-android/build.gradle b/blockcanary-android/build.gradle
index 0884bd2..75c0c31 100644
--- a/blockcanary-android/build.gradle
+++ b/blockcanary-android/build.gradle
@@ -23,6 +23,3 @@ dependencies {
     compile project(':blockcanary-core')
     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
 }
-repositories {
-    mavenCentral()
-}
diff --git a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
index c1ef2c2..a6319ed 100644
--- a/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
+++ b/blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
@@ -2,20 +2,24 @@
 
 import android.annotation.TargetApi;
 import android.app.Notification;
+import android.app.NotificationChannel;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
 import android.content.Context;
 import android.content.Intent;
+import android.graphics.Color;
+
 import com.github.moduth.blockcanary.OnBlockEventInterceptor;
 import com.github.moduth.blockcanary.R;
 
 import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
 import static android.os.Build.VERSION.SDK_INT;
-import static android.os.Build.VERSION_CODES.HONEYCOMB;
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
+import static android.os.Build.VERSION_CODES.O;
 
 public class Notifier implements OnBlockEventInterceptor {
 
+    private static String BLOCK_CHANNEL_ID = "block_channel";
+
     @Override
     public void onBlockEvent(Context context, String timeStart) {
         Intent intent = new Intent(context, DisplayBlockActivity.class);
@@ -27,33 +31,38 @@ public void onBlockEvent(Context context, String timeStart) {
         show(context, contentTitle, contentText, pendingIntent);
     }
 
-    @TargetApi(HONEYCOMB)
+    @TargetApi(O)
     private void show(Context context, String contentTitle, String contentText, PendingIntent pendingIntent) {
-        NotificationManager notificationManager = (NotificationManager)
-                context.getSystemService(Context.NOTIFICATION_SERVICE);
-
-        Notification notification;
-        if (SDK_INT < HONEYCOMB) {
-            notification = new Notification();
-            notification.icon = R.drawable.block_canary_notification;
-            notification.when = System.currentTimeMillis();
-            notification.flags |= Notification.FLAG_AUTO_CANCEL;
-            notification.defaults = Notification.DEFAULT_SOUND;
+        NotificationManager notificationManager =
+                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+
+        NotificationChannel channel = notificationManager.getNotificationChannel(BLOCK_CHANNEL_ID);
+
+        if (channel == null) {
+            CharSequence channelName = "Block channel";
+            int importance = NotificationManager.IMPORTANCE_LOW;
+            NotificationChannel notificationChannel = new NotificationChannel(BLOCK_CHANNEL_ID, channelName, importance);
+            notificationChannel.enableLights(true);
+            notificationChannel.setLightColor(Color.RED);
+            notificationChannel.enableVibration(true);
+            notificationChannel.setVibrationPattern(new long[]{100, 200, 300, 400, 500, 400, 300, 200, 400});
+            notificationManager.createNotificationChannel(notificationChannel);
+        }
+
+        Notification.Builder builder;
+        if (SDK_INT >= O) {
+            builder = new Notification.Builder(context, BLOCK_CHANNEL_ID);
         } else {
-            Notification.Builder builder = new Notification.Builder(context)
-                    .setSmallIcon(R.drawable.block_canary_notification)
-                    .setWhen(System.currentTimeMillis())
-                    .setContentTitle(contentTitle)
-                    .setContentText(contentText)
-                    .setAutoCancel(true)
-                    .setContentIntent(pendingIntent)
-                    .setDefaults(Notification.DEFAULT_SOUND);
-            if (SDK_INT < JELLY_BEAN) {
-                notification = builder.getNotification();
-            } else {
-                notification = builder.build();
-            }
+            builder = new Notification.Builder(context);
         }
-        notificationManager.notify(0xDEAFBEEF, notification);
+
+        builder
+                .setSmallIcon(R.drawable.block_canary_notification)
+                .setContentTitle(contentTitle)
+                .setContentText(contentText)
+                .setContentIntent(pendingIntent)
+                .setPriority(Notification.PRIORITY_DEFAULT);
+
+        notificationManager.notify(0xDEAFBEEF, builder.build());
     }
 }
