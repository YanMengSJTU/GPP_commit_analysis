diff --git a/build.gradle b/build.gradle
index 0a0bad7..8b6d436 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.0.1'
+        classpath 'com.android.tools.build:gradle:1.1.0-rc1'
     }
 }
 
diff --git a/jobqueue/build.gradle b/jobqueue/build.gradle
index 08f0113..9c46948 100644
--- a/jobqueue/build.gradle
+++ b/jobqueue/build.gradle
@@ -6,13 +6,13 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.0.1'
+        classpath 'com.android.tools.build:gradle:1.1.0-rc1'
         classpath 'org.robolectric:robolectric-gradle-plugin:0.14.1'
     }
 }
 
 apply plugin: 'com.android.library'
-apply plugin: 'robolectric'
+//apply plugin: 'robolectric'
 
 repositories {
     jcenter()
@@ -63,16 +63,14 @@ android {
 
 dependencies {
     //compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
-
+    androidTestCompile 'junit:junit:4.12'
     androidTestCompile 'org.easytesting:fest-reflect:1.4.1'
     androidTestCompile 'org.easytesting:fest-util:1.2.5'
     androidTestCompile 'org.hamcrest:hamcrest-core:1.3'
-    androidTestCompile 'junit:junit:4.12'
     androidTestCompile('org.robolectric:robolectric:2.4') {
         exclude group: 'commons-logging', module: 'commons-logging'
         exclude group: 'org.apache.httpcomponents', module: 'httpclient'
     }
-
     testCompile 'org.easytesting:fest-reflect:1.4.1'
     testCompile 'org.easytesting:fest-util:1.2.5'
     testCompile 'org.hamcrest:hamcrest-core:1.3'
@@ -83,13 +81,14 @@ dependencies {
     }
 }
 
-robolectric {
-    // configure the set of classes for JUnit tests
-    include '**/*Test.class'
 
-    // configure max heap size of the test JVM
-    maxHeapSize = "2048m"
-}
+//robolectric {
+//    // configure the set of classes for JUnit tests
+//    include '**/*Test.class'
+//
+//    // configure max heap size of the test JVM
+//    maxHeapSize = "2048m"
+//}
 
 android.libraryVariants.all { variant ->
     def name = variant.name.capitalize()
