diff --git a/jobqueue/build.gradle b/jobqueue/build.gradle
index 9111165..25cf33f 100644
--- a/jobqueue/build.gradle
+++ b/jobqueue/build.gradle
@@ -65,7 +65,7 @@ dependencies {
     androidTestCompile 'org.easytesting:fest-util:1.2.5'
     androidTestCompile 'org.hamcrest:hamcrest-core:1.3'
     androidTestCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
-    androidTestCompile('org.robolectric:robolectric:2.4') {
+    androidTestCompile('org.robolectric:robolectric:3.0') {
         exclude group: 'commons-logging', module: 'commons-logging'
         exclude group: 'org.apache.httpcomponents', module: 'httpclient'
     }
@@ -75,7 +75,7 @@ dependencies {
     testCompile 'org.easytesting:fest-util:1.2.5'
     testCompile 'org.hamcrest:hamcrest-core:1.3'
     testCompile 'junit:junit:4.12'
-    testCompile('org.robolectric:robolectric:2.4') {
+    testCompile('org.robolectric:robolectric:3.0') {
         exclude group: 'commons-logging', module: 'commons-logging'
         exclude group: 'org.apache.httpcomponents', module: 'httpclient'
     }
diff --git a/jobqueue/src/main/AndroidManifest.xml b/jobqueue/src/main/AndroidManifest.xml
index 4187a07..a406737 100644
--- a/jobqueue/src/main/AndroidManifest.xml
+++ b/jobqueue/src/main/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
           package="co.alfabits.android.jobqueue"
-          android:versionCode="2"
-          android:versionName="1.1.3">
+          android:versionCode="114"
+          android:versionName="1.1.4">
     <application android:label="">
     </application>
 </manifest>
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddInBackgroundTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddInBackgroundTest.java
index 9f86e1a..0d65b44 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddInBackgroundTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddInBackgroundTest.java
@@ -8,6 +8,7 @@
 import co.alfabits.android.jobqueue.JobQueue;
 import co.alfabits.android.jobqueue.Params;
 import co.alfabits.android.jobqueue.test.jobs.DummyJob;
+
 import org.fest.reflect.core.*;
 import org.hamcrest.*;
 import org.junit.Test;
@@ -18,7 +19,7 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.atomic.AtomicLong;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class AddInBackgroundTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddedCountTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddedCountTest.java
index de53504..f09cbf6 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddedCountTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/AddedCountTest.java
@@ -12,7 +12,7 @@
 
 import static org.hamcrest.CoreMatchers.equalTo;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class AddedCountTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelInBackgroundTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelInBackgroundTest.java
index 2234a6a..2723d14 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelInBackgroundTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelInBackgroundTest.java
@@ -23,7 +23,7 @@
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class CancelInBackgroundTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelJobTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelJobTest.java
index 87dd731..8ebbf94 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelJobTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CancelJobTest.java
@@ -19,7 +19,7 @@
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class CancelJobTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ClearTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ClearTest.java
index 8573952..ce054a3 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ClearTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ClearTest.java
@@ -10,7 +10,7 @@
 import org.robolectric.*;
 import org.robolectric.annotation.Config;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class ClearTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ConsumerCountTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ConsumerCountTest.java
index 828a3e6..a522234 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ConsumerCountTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ConsumerCountTest.java
@@ -16,13 +16,13 @@
 import java.util.concurrent.Semaphore;
 import java.util.concurrent.TimeUnit;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class ConsumerCountTest extends JobManagerTestBase {
     @Test
     public void testMaxConsumerCount() throws Exception {
         int maxConsumerCount = 2;
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application)
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application)
                 .maxConsumerCount(maxConsumerCount)
                 .loadFactor(maxConsumerCount));
         Object runLock = new Object();
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CountTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CountTest.java
index fc74467..401f906 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CountTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/CountTest.java
@@ -10,7 +10,7 @@
 import org.robolectric.*;
 import org.robolectric.annotation.Config;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class CountTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayTest.java
index e245477..ff66353 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayTest.java
@@ -13,7 +13,7 @@
 import org.robolectric.*;
 import org.robolectric.annotation.Config;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class DelayTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayedRunTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayedRunTest.java
index 1c538f4..f7df8b0 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayedRunTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/DelayedRunTest.java
@@ -10,7 +10,7 @@
 import org.robolectric.*;
 import org.robolectric.annotation.Config;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class DelayedRunTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/GroupingTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/GroupingTest.java
index 64387d2..a5e7101 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/GroupingTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/GroupingTest.java
@@ -16,7 +16,7 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.atomic.AtomicInteger;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class GroupingTest extends JobManagerTestBase {
     @Test
@@ -45,7 +45,7 @@ public void testGrouping() throws Exception {
     @Test
     public void testGroupingRaceCondition() throws Exception {
         DummyNetworkUtilWithConnectivityEventSupport dummyNetworkUtil = new DummyNetworkUtilWithConnectivityEventSupport();
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application)
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application)
                 .minConsumerCount(5).maxConsumerCount(10)
                 .networkUtil(dummyNetworkUtil));
         dummyNetworkUtil.setHasNetwork(false, true);
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/InjectorTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/InjectorTest.java
index 4f48e81..cd50258 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/InjectorTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/InjectorTest.java
@@ -19,12 +19,12 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class InjectorTest extends JobManagerTestBase {
     @Test
     public void testInjector() throws Exception {
-        Configuration.Builder builder = new Configuration.Builder(Robolectric.application);
+        Configuration.Builder builder = new Configuration.Builder(RuntimeEnvironment.application);
         final JobManagerTestBase.ObjectReference injectedJobReference = new JobManagerTestBase.ObjectReference();
         final AtomicInteger injectionCallCount = new AtomicInteger(0);
         DependencyInjector dependencyInjector = new DependencyInjector() {
@@ -103,7 +103,7 @@ public void e(String s, Object... objects) {
                 //
             }
         };
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application).injector(dummyDependencyInjector).customLogger(customLogger));
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application).injector(dummyDependencyInjector).customLogger(customLogger));
         Throwable addException = null;
         try {
             jobManager.addJob(new DummyJob(new Params(0)));
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobManagerTestBase.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobManagerTestBase.java
index 196fff8..7285b01 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobManagerTestBase.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobManagerTestBase.java
@@ -6,6 +6,7 @@
 import org.fest.reflect.method.Invoker;
 import org.hamcrest.MatcherAssert;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.util.UUID;
@@ -25,14 +26,14 @@
 
 import static org.hamcrest.CoreMatchers.equalTo;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 public class JobManagerTestBase extends TestBase {
     protected JobManager createJobManager() {
-        return new JobManager(Robolectric.application, UUID.randomUUID().toString());
+        return new JobManager(RuntimeEnvironment.application, UUID.randomUUID().toString());
     }
 
     protected JobManager createJobManager(Configuration.Builder configurationBuilder) {
-        return new JobManager(Robolectric.application, configurationBuilder.id(UUID.randomUUID().toString()).build());
+        return new JobManager(RuntimeEnvironment.application, configurationBuilder.id(UUID.randomUUID().toString()).build());
     }
 
 
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobStatusTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobStatusTest.java
index 271601a..0929b94 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobStatusTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/JobStatusTest.java
@@ -17,14 +17,14 @@
 import java.util.List;
 import java.util.concurrent.CountDownLatch;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class JobStatusTest extends JobManagerTestBase {
     @Test
     public void testJobStatus() throws InterruptedException {
         DummyNetworkUtilWithConnectivityEventSupport networkUtil = new DummyNetworkUtilWithConnectivityEventSupport();
         networkUtil.setHasNetwork(false, true);
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application).networkUtil(networkUtil));
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application).networkUtil(networkUtil));
         jobManager.stop();
         List<Integer> networkRequiringJobIndices = new ArrayList<Integer>();
         Job[] jobs = new Job[] {
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/KeepAliveTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/KeepAliveTest.java
index dc252f8..88569e2 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/KeepAliveTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/KeepAliveTest.java
@@ -14,7 +14,7 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class KeepAliveTest extends JobManagerTestBase {
     @Test
@@ -22,9 +22,9 @@ public void testKeepAlive() throws Exception {
         int keepAlive = 3 + (int)(Math.random() * 5);
         DummyNetworkUtil networkUtilWithoutEventSupport = new DummyNetworkUtil();
         DummyNetworkUtilWithConnectivityEventSupport networkUtilWithEventSupport = new DummyNetworkUtilWithConnectivityEventSupport();
-        JobManager jobManager1 = createJobManager(new Configuration.Builder(Robolectric.application)
+        JobManager jobManager1 = createJobManager(new Configuration.Builder(RuntimeEnvironment.application)
                 .consumerKeepAlive(keepAlive).networkUtil(networkUtilWithoutEventSupport));
-        JobManager jobManager2 = createJobManager(new Configuration.Builder(Robolectric.application)
+        JobManager jobManager2 = createJobManager(new Configuration.Builder(RuntimeEnvironment.application)
                 .consumerKeepAlive(keepAlive)
                 .networkUtil(networkUtilWithEventSupport));
         //give it a little time to create first consumer
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/LoadFactorTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/LoadFactorTest.java
index 9f3fe45..425a472 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/LoadFactorTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/LoadFactorTest.java
@@ -20,7 +20,7 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class LoadFactorTest extends JobManagerTestBase {
     @Test
@@ -29,7 +29,7 @@ public void testLoadFactor() throws Exception {
         int maxConsumerCount = 5;
         int minConsumerCount = 2;
         int loadFactor = 5;
-        co.alfabits.android.jobqueue.JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application)
+        co.alfabits.android.jobqueue.JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application)
                 .maxConsumerCount(maxConsumerCount)
                 .minConsumerCount(minConsumerCount)
                 .customLogger(new CustomLogger() {
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/MultiThreadTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/MultiThreadTest.java
index 9047ddc..6e78970 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/MultiThreadTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/MultiThreadTest.java
@@ -21,14 +21,14 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class MultiThreadTest extends JobManagerTestBase {
     private static AtomicInteger multiThreadedJobCounter;
     @Test
     public void testMultiThreaded() throws Exception {
         multiThreadedJobCounter = new AtomicInteger(0);
-        final JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application)
+        final JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application)
             .loadFactor(3).maxConsumerCount(10));
         int limit = 200;
         ExecutorService executor = new ThreadPoolExecutor(20, 20, 60, TimeUnit.SECONDS, new ArrayBlockingQueue<Runnable>(limit));
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobTest.java
index e9cf643..1147ead 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobTest.java
@@ -11,13 +11,13 @@
 import org.robolectric.*;
 import org.robolectric.annotation.Config;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class NetworkJobTest extends JobManagerTestBase {
     @Test
     public void testNetworkJob() throws Exception {
         JobManagerTestBase.DummyNetworkUtil dummyNetworkUtil = new JobManagerTestBase.DummyNetworkUtil();
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application).networkUtil(dummyNetworkUtil));
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application).networkUtil(dummyNetworkUtil));
         jobManager.stop();
 
         DummyJob networkDummyJob = new DummyJob(new Params(5).requireNetwork());
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobWithConnectivityListenerTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobWithConnectivityListenerTest.java
index 02bfded..da85f9b 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobWithConnectivityListenerTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkJobWithConnectivityListenerTest.java
@@ -12,13 +12,13 @@
 
 import static org.hamcrest.CoreMatchers.equalTo;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class NetworkJobWithConnectivityListenerTest extends JobManagerTestBase {
     @Test
     public void testNetworkJobWithConnectivityListener() throws Exception {
         DummyNetworkUtilWithConnectivityEventSupport dummyNetworkUtil = new DummyNetworkUtilWithConnectivityEventSupport();
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application).networkUtil(dummyNetworkUtil));
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application).networkUtil(dummyNetworkUtil));
         dummyNetworkUtil.setHasNetwork(false, true);
         DummyJob dummyJob = new DummyJob(new Params(0).requireNetwork());
         long dummyJobId = jobManager.addJob(dummyJob);
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkNextJobTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkNextJobTest.java
index 80782b4..6938cdd 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkNextJobTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/NetworkNextJobTest.java
@@ -16,13 +16,13 @@
 import static org.hamcrest.CoreMatchers.notNullValue;
 import static org.hamcrest.CoreMatchers.nullValue;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class NetworkNextJobTest extends JobManagerTestBase {
     @Test
     public void testNetworkNextJob() throws Exception {
         DummyNetworkUtil dummyNetworkUtil = new DummyNetworkUtil();
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application).networkUtil(dummyNetworkUtil));
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application).networkUtil(dummyNetworkUtil));
         jobManager.stop();
         DummyJob dummyJob = new DummyJob(new Params(0).requireNetwork());
         long dummyJobId = jobManager.addJob(dummyJob);
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PersistentJobTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PersistentJobTest.java
index a7294ac..9319286 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PersistentJobTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PersistentJobTest.java
@@ -13,7 +13,7 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class PersistentJobTest extends JobManagerTestBase {
     //TEST parallel running
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PriorityTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PriorityTest.java
index 9dd02d0..720439a 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PriorityTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/PriorityTest.java
@@ -14,14 +14,14 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class PriorityTest extends JobManagerTestBase {
     private static CountDownLatch priorityRunLatch;
 
     @Test
     public void testPriority() throws Exception {
-        JobManager jobManager = createJobManager(new Configuration.Builder(Robolectric.application).maxConsumerCount(1));
+        JobManager jobManager = createJobManager(new Configuration.Builder(RuntimeEnvironment.application).maxConsumerCount(1));
         testPriority(jobManager, false);
     }
 
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ReRunWithLimitTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ReRunWithLimitTest.java
index 0dc81fc..83a9310 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ReRunWithLimitTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/ReRunWithLimitTest.java
@@ -9,7 +9,7 @@
 
 import static org.hamcrest.CoreMatchers.equalTo;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class ReRunWithLimitTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunFailingJobTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunFailingJobTest.java
index b8949cb..27e73aa 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunFailingJobTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunFailingJobTest.java
@@ -12,7 +12,7 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class RunFailingJobTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunManyNonPersistentTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunManyNonPersistentTest.java
index 9cb997f..cdcb089 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunManyNonPersistentTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/RunManyNonPersistentTest.java
@@ -12,7 +12,7 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class RunManyNonPersistentTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SessionIdTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SessionIdTest.java
index 9ce5992..b20fb88 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SessionIdTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SessionIdTest.java
@@ -14,7 +14,7 @@
 import org.robolectric.*;
 import org.robolectric.annotation.Config;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class SessionIdTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SlowOnAddedTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SlowOnAddedTest.java
index 657edd5..155f35d 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SlowOnAddedTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobmanager/SlowOnAddedTest.java
@@ -15,7 +15,7 @@
 import static org.hamcrest.CoreMatchers.equalTo;
 import static org.hamcrest.MatcherAssert.assertThat;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class SlowOnAddedTest extends JobManagerTestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedNonPersistentJobQueueTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedNonPersistentJobQueueTest.java
index 2cd0140..4c5a22f 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedNonPersistentJobQueueTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedNonPersistentJobQueueTest.java
@@ -9,7 +9,7 @@
 import co.alfabits.android.jobqueue.nonPersistentQueue.NonPersistentPriorityQueue;
 import co.alfabits.android.jobqueue.test.util.JobQueueFactory;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class CachedNonPersistentJobQueueTest extends JobQueueTestBase {
     public CachedNonPersistentJobQueueTest() {
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedPersistentJobQueueTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedPersistentJobQueueTest.java
index c45b6be..ff31a82 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedPersistentJobQueueTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/CachedPersistentJobQueueTest.java
@@ -3,20 +3,21 @@
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import co.alfabits.android.jobqueue.JobQueue;
 import co.alfabits.android.jobqueue.persistentQueue.sqlite.SqliteJobQueue;
 import co.alfabits.android.jobqueue.test.util.JobQueueFactory;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class CachedPersistentJobQueueTest extends JobQueueTestBase {
     public CachedPersistentJobQueueTest() {
         super(new JobQueueFactory() {
             @Override
             public JobQueue createNew(long sessionId, String id) {
-                return new SqliteJobQueue(Robolectric.application, sessionId, id, new SqliteJobQueue.JavaSerializer());
+                return new SqliteJobQueue(RuntimeEnvironment.application, sessionId, id, new SqliteJobQueue.JavaSerializer());
             }
         });
     }
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/JobParamsTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/JobParamsTest.java
index f496a26..ea6d525 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/JobParamsTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/JobParamsTest.java
@@ -13,7 +13,7 @@
 import static org.hamcrest.CoreMatchers.nullValue;
 import static org.hamcrest.MatcherAssert.assertThat;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class JobParamsTest extends TestBase {
     @Test
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/NonPersistentJobQueueTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/NonPersistentJobQueueTest.java
index 4dea048..72677f3 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/NonPersistentJobQueueTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/NonPersistentJobQueueTest.java
@@ -15,7 +15,7 @@
 import org.robolectric.*;
 import org.robolectric.annotation.Config;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class NonPersistentJobQueueTest extends JobQueueTestBase {
     public NonPersistentJobQueueTest() {
diff --git a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/SqliteJobQueueTest.java b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/SqliteJobQueueTest.java
index b3e8271..3c7ff48 100644
--- a/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/SqliteJobQueueTest.java
+++ b/jobqueue/src/test/java/co/alfabits/android/jobqueue/test/jobqueue/SqliteJobQueueTest.java
@@ -12,20 +12,21 @@
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.io.IOException;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 @RunWith(RobolectricTestRunner.class)
 public class SqliteJobQueueTest extends JobQueueTestBase {
     public SqliteJobQueueTest() {
         super(new JobQueueFactory() {
             @Override
             public JobQueue createNew(long sessionId, String id) {
-                return new SqliteJobQueue(Robolectric.application, sessionId, id, new SqliteJobQueue.JavaSerializer());
+                return new SqliteJobQueue(RuntimeEnvironment.application, sessionId, id, new SqliteJobQueue.JavaSerializer());
             }
         });
     }
@@ -47,7 +48,7 @@ public void testCustomSerializer() throws Exception {
                 return super.deserialize(bytes);
             }
         };
-        SqliteJobQueue jobQueue = new SqliteJobQueue(Robolectric.application, System.nanoTime(), "__" + System.nanoTime(),
+        SqliteJobQueue jobQueue = new SqliteJobQueue(RuntimeEnvironment.application, System.nanoTime(), "__" + System.nanoTime(),
                 jobSerializer);
         jobQueue.insert(createNewJobHolder(new Params(0)));
         calledForSerialize.await(1, TimeUnit.SECONDS);
