diff --git a/jobqueue/AndroidManifest.xml b/jobqueue/AndroidManifest.xml
index 7e37c4b..a2247b3 100644
--- a/jobqueue/AndroidManifest.xml
+++ b/jobqueue/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
           package="com.path.android.jobqueue"
-          android:versionCode="2"
-          android:versionName="1.1.2">
+          android:versionCode="3"
+          android:versionName="1.1.3">
     <application android:label="">
     </application>
 </manifest>
diff --git a/jobqueue/build.gradle b/jobqueue/build.gradle
index e6d5fbf..f4800c5 100644
--- a/jobqueue/build.gradle
+++ b/jobqueue/build.gradle
@@ -1,10 +1,11 @@
 import java.util.regex.Pattern
 task wrapper(type: Wrapper) {
-    gradleVersion = '1.10'
+    gradleVersion = '3.3'
 }
 
 apply plugin: 'maven'
 apply plugin: 'signing'
+apply plugin: 'com.github.dcendents.android-maven'
 
 buildscript {
     repositories {
@@ -12,7 +13,8 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:0.8.+'
+        classpath 'com.android.tools.build:gradle:2.3.0'
+        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
     }
 }
 
@@ -22,11 +24,11 @@ configurations {
     }
 }
 
-apply plugin: 'android-library'
+apply plugin: 'com.android.library'
 
 android {
     compileSdkVersion 19
-    buildToolsVersion "19.0.1"
+    buildToolsVersion "25.0.0"
     sourceSets {
         main {
             manifest.srcFile 'AndroidManifest.xml'
@@ -46,23 +48,25 @@ def manifestVersionName = matcher.group(1)
 println "version name:${manifestVersionName}"
 
 //create jar tasks
+
 android.libraryVariants.all { variant ->
     def name = variant.buildType.name
     println "checking variant ${name}"
-    if (name.equals(com.android.builder.BuilderConstants.DEBUG)) {
+    if (variant.buildType.isDebuggable()) {
         return; // Skip debug builds.
     }
     def suffix = name.capitalize()
     println "found release variant"
-    def jarTask = project.tasks.create(name: "jar${suffix}", type: Jar){
+    project.tasks.create(name: "jar${suffix}", type: Jar){
         dependsOn variant.javaCompile
         from variant.javaCompile.destinationDir
         from 'LICENSE.txt'
     }
-    def javadocTask = project.tasks.create(name: "javadoc${suffix}", type: Javadoc) {
+    project.tasks.create(name: "javadoc${suffix}", type: Javadoc) {
         source = variant.javaCompile.source
-        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
+        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
         classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
+        exclude 'com/google/**'
     }
 
     def javadocJarTask = project.tasks.create(name: "javadocJar${suffix}", type: Jar) {
@@ -71,86 +75,85 @@ android.libraryVariants.all { variant ->
     }
 
     def sourcesJarTask = project.tasks.create(name: "sourceJar${suffix}", type: Jar) {
-        from android.sourceSets.main.allSource
+        from android.sourceSets.main.getJava().getSrcDirs()
         classifier = 'sources'
     }
-    artifacts.add('archives', jarTask);
     artifacts.add('archives', javadocJarTask);
     artifacts.add('archives', sourcesJarTask);
 }
 //create jar tasks end
 
 
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment {
-                    MavenDeployment deployment -> signing.signPom(deployment)
-                }
-                println "sonatype username: ${sonatypeUsername}"
-
-                pom.artifactId = 'android-priority-jobqueue'
-
-                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
-                    authentication(userName: sonatypeUsername, password: sonotypePassword)
-                }
-
-                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
-                    authentication(userName: sonatypeUsername, password: sonotypePassword)
-                }
-
-                pom.project {
-                    modelVersion '4.0.0'
-                    groupId 'com.path'
-                    artifactId 'android-priority-jobqueue'
-                    packaging 'jar'
-                    name 'Android Priority Job Queue'
-                    version manifestVersionName
-                    description 'a Job Queue specifically written for Android to easily schedule jobs (tasks) that run in the background, improving UX and application stability.'
-                    url 'https://github.com/path/android-priority-jobqueue'
-
-                    parent {
-                        groupId 'org.sonatype.oss'
-                        artifactId 'oss-parent'
-                        version 7
-                    }
-
-                    scm {
-                        connection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
-                        developerConnection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
-                        url 'git@github.com:path/android-priority-jobqueue.git'
-                    }
-
-                    licenses {
-                        license {
-                            name 'The MIT License (MIT)'
-                            url 'http://opensource.org/licenses/MIT'
-                            distribution 'repo'
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id "yigit"
-                            name "Yigit Boyar"
-                        }
-                    }
-
-                    dependencies {
-                        dependency {
-                            groupId 'com.google.android'
-                            artifactId 'android'
-                            version '2.2.1'
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-}
+//afterEvaluate { project ->
+//    uploadArchives {
+//        repositories {
+//            mavenDeployer {
+//                beforeDeployment {
+//                    MavenDeployment deployment -> signing.signPom(deployment)
+//                }
+//                println "sonatype username: ${sonatypeUsername}"
+//
+//                pom.artifactId = 'android-priority-jobqueue'
+//
+//                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
+//                    authentication(userName: sonatypeUsername, password: sonotypePassword)
+//                }
+//
+//                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
+//                    authentication(userName: sonatypeUsername, password: sonotypePassword)
+//                }
+//
+//                pom.project {
+//                    modelVersion '4.0.0'
+//                    groupId 'com.path'
+//                    artifactId 'android-priority-jobqueue'
+//                    packaging 'jar'
+//                    name 'Android Priority Job Queue'
+//                    version manifestVersionName
+//                    description 'a Job Queue specifically written for Android to easily schedule jobs (tasks) that run in the background, improving UX and application stability.'
+//                    url 'https://github.com/path/android-priority-jobqueue'
+//
+//                    parent {
+//                        groupId 'org.sonatype.oss'
+//                        artifactId 'oss-parent'
+//                        version 7
+//                    }
+//
+//                    scm {
+//                        connection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
+//                        developerConnection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
+//                        url 'git@github.com:path/android-priority-jobqueue.git'
+//                    }
+//
+//                    licenses {
+//                        license {
+//                            name 'The MIT License (MIT)'
+//                            url 'http://opensource.org/licenses/MIT'
+//                            distribution 'repo'
+//                        }
+//                    }
+//
+//                    developers {
+//                        developer {
+//                            id "yigit"
+//                            name "Yigit Boyar"
+//                        }
+//                    }
+//
+//                    dependencies {
+//                        dependency {
+//                            groupId 'com.google.android'
+//                            artifactId 'android'
+//                            version '2.2.1'
+//                        }
+//                    }
+//                }
+//            }
+//        }
+//    }
+//
+//    signing {
+//        required { gradle.taskGraph.hasTask("uploadArchives") }
+//        sign configurations.archives
+//    }
+//}
diff --git a/jobqueue/gradle/wrapper/gradle-wrapper.properties b/jobqueue/gradle/wrapper/gradle-wrapper.properties
index 59739c3..e13d296 100644
--- a/jobqueue/gradle/wrapper/gradle-wrapper.properties
+++ b/jobqueue/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=http\://services.gradle.org/distributions/gradle-1.10-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
diff --git a/jobqueue/src/com/path/android/jobqueue/network/NetworkUtilImpl.java b/jobqueue/src/com/path/android/jobqueue/network/NetworkUtilImpl.java
index b5422a5..4e32f6c 100644
--- a/jobqueue/src/com/path/android/jobqueue/network/NetworkUtilImpl.java
+++ b/jobqueue/src/com/path/android/jobqueue/network/NetworkUtilImpl.java
@@ -7,6 +7,8 @@
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 
+import com.path.android.jobqueue.log.JqLog;
+
 /**
  * default implementation for network Utility to observe network events
  */
@@ -30,7 +32,12 @@ public void onReceive(Context context, Intent intent) {
     @Override
     public boolean isConnected(Context context) {
         ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
-        NetworkInfo netInfo = cm.getActiveNetworkInfo();
+        NetworkInfo netInfo = null;
+        try {
+            netInfo = cm.getActiveNetworkInfo();
+        } catch (SecurityException e) {
+            JqLog.e(e, "isConnected() no permission: android.permission.ACCESS_NETWORK_STATE.");
+        }
         return netInfo != null && netInfo.isConnectedOrConnecting();
     }
 
