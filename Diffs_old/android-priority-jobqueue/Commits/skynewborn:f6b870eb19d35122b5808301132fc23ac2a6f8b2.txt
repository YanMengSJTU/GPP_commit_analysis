diff --git a/jobqueue/build.gradle b/jobqueue/build.gradle
deleted file mode 100644
index e6d5fbf..0000000
--- a/jobqueue/build.gradle
+++ /dev/null
@@ -1,156 +0,0 @@
-import java.util.regex.Pattern
-task wrapper(type: Wrapper) {
-    gradleVersion = '1.10'
-}
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-buildscript {
-    repositories {
-        mavenCentral()
-    }
-
-    dependencies {
-        classpath 'com.android.tools.build:gradle:0.8.+'
-    }
-}
-
-configurations {
-    archives {
-        extendsFrom configurations.default
-    }
-}
-
-apply plugin: 'android-library'
-
-android {
-    compileSdkVersion 19
-    buildToolsVersion "19.0.1"
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src']
-            res.srcDirs = ['res']
-        }
-    }
-}
-
-//READ VERSION NAME
-def manifestFile = file("AndroidManifest.xml")
-def pattern = Pattern.compile("versionName=\"([\\d\\.\\w\\-]+)\"")
-def manifestText = manifestFile.getText()
-def matcher = pattern.matcher(manifestText)
-matcher.find()
-def manifestVersionName = matcher.group(1)
-println "version name:${manifestVersionName}"
-
-//create jar tasks
-android.libraryVariants.all { variant ->
-    def name = variant.buildType.name
-    println "checking variant ${name}"
-    if (name.equals(com.android.builder.BuilderConstants.DEBUG)) {
-        return; // Skip debug builds.
-    }
-    def suffix = name.capitalize()
-    println "found release variant"
-    def jarTask = project.tasks.create(name: "jar${suffix}", type: Jar){
-        dependsOn variant.javaCompile
-        from variant.javaCompile.destinationDir
-        from 'LICENSE.txt'
-    }
-    def javadocTask = project.tasks.create(name: "javadoc${suffix}", type: Javadoc) {
-        source = variant.javaCompile.source
-        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
-        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
-    }
-
-    def javadocJarTask = project.tasks.create(name: "javadocJar${suffix}", type: Jar) {
-        classifier = 'javadoc'
-        from 'build/docs/javadoc'
-    }
-
-    def sourcesJarTask = project.tasks.create(name: "sourceJar${suffix}", type: Jar) {
-        from android.sourceSets.main.allSource
-        classifier = 'sources'
-    }
-    artifacts.add('archives', jarTask);
-    artifacts.add('archives', javadocJarTask);
-    artifacts.add('archives', sourcesJarTask);
-}
-//create jar tasks end
-
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment {
-                    MavenDeployment deployment -> signing.signPom(deployment)
-                }
-                println "sonatype username: ${sonatypeUsername}"
-
-                pom.artifactId = 'android-priority-jobqueue'
-
-                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
-                    authentication(userName: sonatypeUsername, password: sonotypePassword)
-                }
-
-                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
-                    authentication(userName: sonatypeUsername, password: sonotypePassword)
-                }
-
-                pom.project {
-                    modelVersion '4.0.0'
-                    groupId 'com.path'
-                    artifactId 'android-priority-jobqueue'
-                    packaging 'jar'
-                    name 'Android Priority Job Queue'
-                    version manifestVersionName
-                    description 'a Job Queue specifically written for Android to easily schedule jobs (tasks) that run in the background, improving UX and application stability.'
-                    url 'https://github.com/path/android-priority-jobqueue'
-
-                    parent {
-                        groupId 'org.sonatype.oss'
-                        artifactId 'oss-parent'
-                        version 7
-                    }
-
-                    scm {
-                        connection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
-                        developerConnection 'scm:git:git@github.com:path/android-priority-jobqueue.git'
-                        url 'git@github.com:path/android-priority-jobqueue.git'
-                    }
-
-                    licenses {
-                        license {
-                            name 'The MIT License (MIT)'
-                            url 'http://opensource.org/licenses/MIT'
-                            distribution 'repo'
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id "yigit"
-                            name "Yigit Boyar"
-                        }
-                    }
-
-                    dependencies {
-                        dependency {
-                            groupId 'com.google.android'
-                            artifactId 'android'
-                            version '2.2.1'
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-}
diff --git a/jobqueue/gradle/wrapper/gradle-wrapper.jar b/jobqueue/gradle/wrapper/gradle-wrapper.jar
deleted file mode 100644
index 5838598..0000000
Binary files a/jobqueue/gradle/wrapper/gradle-wrapper.jar and /dev/null differ
diff --git a/jobqueue/gradle/wrapper/gradle-wrapper.properties b/jobqueue/gradle/wrapper/gradle-wrapper.properties
deleted file mode 100644
index 59739c3..0000000
--- a/jobqueue/gradle/wrapper/gradle-wrapper.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-#Thu Jan 30 14:19:18 PST 2014
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=http\://services.gradle.org/distributions/gradle-1.10-bin.zip
diff --git a/jobqueue/gradlew b/jobqueue/gradlew
deleted file mode 100755
index 91a7e26..0000000
--- a/jobqueue/gradlew
+++ /dev/null
@@ -1,164 +0,0 @@
-#!/usr/bin/env bash
-
-##############################################################################
-##
-##  Gradle start up script for UN*X
-##
-##############################################################################
-
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
-
-APP_NAME="Gradle"
-APP_BASE_NAME=`basename "$0"`
-
-# Use the maximum available, or set MAX_FD != -1 to use that value.
-MAX_FD="maximum"
-
-warn ( ) {
-    echo "$*"
-}
-
-die ( ) {
-    echo
-    echo "$*"
-    echo
-    exit 1
-}
-
-# OS specific support (must be 'true' or 'false').
-cygwin=false
-msys=false
-darwin=false
-case "`uname`" in
-  CYGWIN* )
-    cygwin=true
-    ;;
-  Darwin* )
-    darwin=true
-    ;;
-  MINGW* )
-    msys=true
-    ;;
-esac
-
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
-APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
-
-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
-
-# Determine the Java command to use to start the JVM.
-if [ -n "$JAVA_HOME" ] ; then
-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
-        # IBM's JDK on AIX uses strange locations for the executables
-        JAVACMD="$JAVA_HOME/jre/sh/java"
-    else
-        JAVACMD="$JAVA_HOME/bin/java"
-    fi
-    if [ ! -x "$JAVACMD" ] ; then
-        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-    fi
-else
-    JAVACMD="java"
-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-fi
-
-# Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
-    MAX_FD_LIMIT=`ulimit -H -n`
-    if [ $? -eq 0 ] ; then
-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
-            MAX_FD="$MAX_FD_LIMIT"
-        fi
-        ulimit -n $MAX_FD
-        if [ $? -ne 0 ] ; then
-            warn "Could not set maximum file descriptor limit: $MAX_FD"
-        fi
-    else
-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
-    fi
-fi
-
-# For Darwin, add options to specify how the application appears in the dock
-if $darwin; then
-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
-fi
-
-# For Cygwin, switch paths to Windows format before running java
-if $cygwin ; then
-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-
-    # We build the pattern for arguments to be converted via cygpath
-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
-    SEP=""
-    for dir in $ROOTDIRSRAW ; do
-        ROOTDIRS="$ROOTDIRS$SEP$dir"
-        SEP="|"
-    done
-    OURCYGPATTERN="(^($ROOTDIRS))"
-    # Add a user-defined pattern to the cygpath arguments
-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
-    fi
-    # Now convert the arguments - kludge to limit ourselves to /bin/sh
-    i=0
-    for arg in "$@" ; do
-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
-
-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
-        else
-            eval `echo args$i`="\"$arg\""
-        fi
-        i=$((i+1))
-    done
-    case $i in
-        (0) set -- ;;
-        (1) set -- "$args0" ;;
-        (2) set -- "$args0" "$args1" ;;
-        (3) set -- "$args0" "$args1" "$args2" ;;
-        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
-        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
-        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
-        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
-        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
-        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
-    esac
-fi
-
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
-}
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
-
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/jobqueue/gradlew.bat b/jobqueue/gradlew.bat
deleted file mode 100644
index aec9973..0000000
--- a/jobqueue/gradlew.bat
+++ /dev/null
@@ -1,90 +0,0 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
diff --git a/jobqueue/project.properties b/jobqueue/project.properties
index bee96c2..ada602f 100644
--- a/jobqueue/project.properties
+++ b/jobqueue/project.properties
@@ -12,5 +12,5 @@
 
 android.library=true
 # Project target.
-target=android-7
+target=android-21
 
diff --git a/jobqueue/src/com/path/android/jobqueue/persistentQueue/sqlite/SqliteJobQueue.java b/jobqueue/src/com/path/android/jobqueue/persistentQueue/sqlite/SqliteJobQueue.java
index eefc667..ac7e4a4 100644
--- a/jobqueue/src/com/path/android/jobqueue/persistentQueue/sqlite/SqliteJobQueue.java
+++ b/jobqueue/src/com/path/android/jobqueue/persistentQueue/sqlite/SqliteJobQueue.java
@@ -1,24 +1,26 @@
 package com.path.android.jobqueue.persistentQueue.sqlite;
 
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutput;
+import java.io.ObjectOutputStream;
+import java.util.Collection;
+
 import android.content.Context;
 import android.database.Cursor;
+import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteDoneException;
 import android.database.sqlite.SQLiteStatement;
+
 import com.path.android.jobqueue.BaseJob;
 import com.path.android.jobqueue.JobHolder;
 import com.path.android.jobqueue.JobManager;
 import com.path.android.jobqueue.JobQueue;
 import com.path.android.jobqueue.log.JqLog;
 
-import java.io.ByteArrayInputStream;
-import java.io.ByteArrayOutputStream;
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutput;
-import java.io.ObjectOutputStream;
-import java.util.Collection;
-
 /**
  * Persistent Job Queue that keeps its data in an sqlite database.
  */
@@ -53,11 +55,19 @@ public SqliteJobQueue(Context context, long sessionId, String id, JobSerializer
     @Override
     public long insert(JobHolder jobHolder) {
         SQLiteStatement stmt = sqlHelper.getInsertStatement();
-        long id;
+        long id = -1;
         synchronized (stmt) {
-            stmt.clearBindings();
-            bindValues(stmt, jobHolder);
-            id = stmt.executeInsert();
+            db.beginTransaction();
+            try {
+                stmt.clearBindings();
+                bindValues(stmt, jobHolder);
+                id = stmt.executeInsert();
+                db.setTransactionSuccessful();
+            } catch (SQLException e) {
+                JqLog.e(e, "called insert with sql exception.");
+            } finally {
+                db.endTransaction();
+            }
         }
         jobHolder.setId(id);
         return id;
@@ -92,11 +102,19 @@ public long insertOrReplace(JobHolder jobHolder) {
         }
         jobHolder.setRunningSessionId(JobManager.NOT_RUNNING_SESSION_ID);
         SQLiteStatement stmt = sqlHelper.getInsertOrReplaceStatement();
-        long id;
+        long id = -1;
         synchronized (stmt) {
-            stmt.clearBindings();
-            bindValues(stmt, jobHolder);
-            id = stmt.executeInsert();
+            db.beginTransaction();
+            try {
+                stmt.clearBindings();
+                bindValues(stmt, jobHolder);
+                id = stmt.executeInsert();
+                db.setTransactionSuccessful();
+            } catch (SQLException e) {
+                JqLog.e(e, "called insertOrReplace with sql exception.");
+            } finally {
+                db.endTransaction();
+            }
         }
         jobHolder.setId(id);
         return id;
@@ -117,9 +135,17 @@ public void remove(JobHolder jobHolder) {
     private void delete(Long id) {
         SQLiteStatement stmt = sqlHelper.getDeleteStatement();
         synchronized (stmt) {
-            stmt.clearBindings();
-            stmt.bindLong(1, id);
-            stmt.execute();
+            db.beginTransaction();
+            try {
+                stmt.clearBindings();
+                stmt.bindLong(1, id);
+                stmt.execute();
+                db.setTransactionSuccessful();
+            } catch (SQLException e) {
+                JqLog.e(e, "called delete with sql exception.");
+            } finally {
+                db.endTransaction();
+            }
         }
     }
 
@@ -270,7 +296,15 @@ public Long getNextJobDelayUntilNs(boolean hasNetwork) {
      */
     @Override
     public void clear() {
-        sqlHelper.truncate();
+        db.beginTransaction();
+        try {
+            sqlHelper.truncate();
+            db.setTransactionSuccessful();
+        } catch (SQLException e) {
+            JqLog.e(e, "called clear with sql exception.");
+        } finally {
+            db.endTransaction();
+        }
         readyJobsQueryCache.clear();
         nextJobsQueryCache.clear();
     }
@@ -280,11 +314,19 @@ private void onJobFetchedForRunning(JobHolder jobHolder) {
         jobHolder.setRunCount(jobHolder.getRunCount() + 1);
         jobHolder.setRunningSessionId(sessionId);
         synchronized (stmt) {
-            stmt.clearBindings();
-            stmt.bindLong(1, jobHolder.getRunCount());
-            stmt.bindLong(2, sessionId);
-            stmt.bindLong(3, jobHolder.getId());
-            stmt.execute();
+            db.beginTransaction();
+            try {
+                stmt.clearBindings();
+                stmt.bindLong(1, jobHolder.getRunCount());
+                stmt.bindLong(2, sessionId);
+                stmt.bindLong(3, jobHolder.getId());
+                stmt.execute();
+                db.setTransactionSuccessful();
+            } catch (SQLException e) {
+                JqLog.e(e, "called onJobFetchedForRunning with sql exception.");
+            } finally {
+                db.endTransaction();
+            }
         }
     }
 
