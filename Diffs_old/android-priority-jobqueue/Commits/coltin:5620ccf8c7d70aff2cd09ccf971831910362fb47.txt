diff --git a/jobqueue/build.gradle b/jobqueue/build.gradle
index 16f8407..775676f 100644
--- a/jobqueue/build.gradle
+++ b/jobqueue/build.gradle
@@ -36,15 +36,12 @@ configurations {
 
 dependencies {
     testCompile 'junit:junit:4.12'
-    testCompile "org.robolectric:robolectric:3.0-rc3"
+    testCompile "org.robolectric:robolectric:3.0"
     testCompile 'org.hamcrest:hamcrest-core:1.3'
     testCompile 'org.easytesting:fest-util:1.2.5'
     testCompile 'org.easytesting:fest-reflect:1.4.1'
-
 }
 
-
-
 android {
     compileSdkVersion 21
     buildToolsVersion "22.0.1"
diff --git a/jobqueue/src/test/java/com/path/android/jobqueue/test/jobmanager/RetryLogicTest.java b/jobqueue/src/test/java/com/path/android/jobqueue/test/jobmanager/RetryLogicTest.java
index cb8a309..08d0dbf 100644
--- a/jobqueue/src/test/java/com/path/android/jobqueue/test/jobmanager/RetryLogicTest.java
+++ b/jobqueue/src/test/java/com/path/android/jobqueue/test/jobmanager/RetryLogicTest.java
@@ -84,6 +84,13 @@ public void on(Job job) {
                         is(runCnt.incrementAndGet()));
             }
         };
+        retryProvider = new RetryProvider() {
+            @Override
+            public RetryConstraint build(Job job, Throwable throwable, int runCount,
+                    int maxRunCount) {
+                return RetryConstraint.RETRY;
+            }
+        };
         canRun = true;
         RetryJob job = new RetryJob(new Params(0).setPersistent(persistent));
         job.retryLimit = 10;
@@ -330,6 +337,9 @@ protected void onCancel() {
         @Override
         protected RetryConstraint shouldReRunOnThrowable(Throwable throwable, int runCount,
                 int maxRunCount) {
+            if (retryProvider != null) {
+                return retryProvider.build(this, throwable, runCount, maxRunCount);
+            }
             return RetryConstraint.createExponentialBackoff(runCount, 1000);
         }
 
