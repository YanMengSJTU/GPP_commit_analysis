diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthActivity.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthActivity.java
index d1d2510..f507991 100644
--- a/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthActivity.java
+++ b/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthActivity.java
@@ -123,11 +123,6 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 return super.shouldOverrideUrlLoading(view, url);
             }
 
-            @Override
-            public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {
-                handler.proceed();
-            }
-
             @Override
             public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
                 super.onReceivedError(view, errorCode, description, failingUrl);
diff --git a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
index 9f208f5..10410e7 100644
--- a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
+++ b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
@@ -163,16 +163,22 @@ public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAcc
         super.requestAccessToken(onRequestAccessTokenCompleteListener);
 
         AsyncTask<Activity, Void, String> task = new AsyncTask<Activity, Void, String>() {
+            Exception mException;
+
             @Override
             protected String doInBackground(Activity... params) {
-                String scope = "oauth2:" + Scopes.PLUS_LOGIN;
-                String token;
+                String scope = "oauth2:profile email";
+                String account = Plus.AccountApi.getAccountName(googleApiClient);
+                String token = null;
                 try {
                     token = GoogleAuthUtil.getToken(params[0],
-                            Plus.AccountApi.getAccountName(googleApiClient), scope);
+                            account, scope);
+                } catch (UserRecoverableAuthException e) {
+                    mConnectRequested = true;
+                    mActivity.startActivityForResult(e.getIntent(), REQUEST_AUTH);
                 } catch (Exception e) {
                     e.printStackTrace();
-                    return e.getMessage();
+                    mException = e;
                 }
                 return token;
             }
@@ -182,8 +188,9 @@ protected void onPostExecute(String token) {
                 if(token != null) {
                     ((OnRequestAccessTokenCompleteListener) mLocalListeners.get(REQUEST_ACCESS_TOKEN))
                             .onRequestAccessTokenComplete(getID(), new AccessToken(token, null));
-                } else {
-                    mLocalListeners.get(REQUEST_ACCESS_TOKEN).onError(getID(), REQUEST_ACCESS_TOKEN, token, null);
+                }
+                else if(mException != null) {
+                    mLocalListeners.get(REQUEST_ACCESS_TOKEN).onError(getID(), REQUEST_ACCESS_TOKEN, mException.getMessage(), mException);
                 }
             }
         };
