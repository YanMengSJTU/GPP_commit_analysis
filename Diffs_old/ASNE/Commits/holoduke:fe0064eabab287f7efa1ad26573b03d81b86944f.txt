diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthSocialNetwork.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthSocialNetwork.java
index 798862d..63cdf5c 100644
--- a/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthSocialNetwork.java
+++ b/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.core;
 
+import android.content.Context;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 
@@ -41,8 +42,8 @@
 
     protected Map<String, SocialNetworkAsyncTask> mRequests = new HashMap<String, SocialNetworkAsyncTask>();
 
-    protected OAuthSocialNetwork(Fragment fragment) {
-        super(fragment);
+    protected OAuthSocialNetwork(Fragment fragment, Context context) {
+        super(fragment,context);
     }
 
     protected void executeRequest(SocialNetworkAsyncTask request, Bundle params, String requestID) {
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
index 387e743..6060321 100644
--- a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
+++ b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
@@ -122,9 +122,9 @@
      *                 we will want to receice on onActivityResult in out SocialNetworkManager
      *                 fragment
      */
-    protected SocialNetwork(Fragment fragment) {
+    protected SocialNetwork(Fragment fragment, Context context) {
         mSocialNetworkManager = fragment;
-        mSharedPreferences = mSocialNetworkManager.getActivity().getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
+        mSharedPreferences = context.getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
     }
 
     //////////////////// LIFECYCLE ////////////////////
diff --git a/facebook/build.gradle b/facebook/build.gradle
index 9180eb3..5dbcea7 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -1,28 +1,19 @@
 apply plugin: 'com.android.library'
-apply from: '../maven_push.gradle'
+//apply from: '../maven_push.gradle'
 
 android {
     compileSdkVersion 21
-    buildToolsVersion '21.1.1'
+    buildToolsVersion '22.0.1'
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.facebook"
-        minSdkVersion 10
+        minSdkVersion 11
         targetSdkVersion 21
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            runProguard false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
     }
 }
 
 dependencies {
     compile fileTree(include: ['*.jar'], dir: 'libs')
-    compile 'com.android.support:appcompat-v7:21.0.2'
     compile project(':ASNECore')
-    compile 'com.facebook.android:facebook-android-sdk:3.19.1'
+    compile 'com.facebook.android:facebook-android-sdk:3.22.+'
+    //compile 'com.facebook.android:facebook-android-sdk:4.1.0'
 }
diff --git a/facebook/proguard-rules.pro b/facebook/proguard-rules.pro
index 92ddeef..233e838 100644
--- a/facebook/proguard-rules.pro
+++ b/facebook/proguard-rules.pro
@@ -14,4 +14,4 @@
 # class:
 #-keepclassmembers class fqcn.of.javascript.interface.for.webview {
 #   public *;
-#}
+#}
\ No newline at end of file
diff --git a/facebook/src/main/AndroidManifest.xml b/facebook/src/main/AndroidManifest.xml
index b9bb892..504cbec 100644
--- a/facebook/src/main/AndroidManifest.xml
+++ b/facebook/src/main/AndroidManifest.xml
@@ -1,7 +1,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.github.gorbin.asne.facebook"
-    xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    package="com.github.gorbin.asne.facebook">
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
 
diff --git a/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java b/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
index 57f514f..0bc29c5 100644
--- a/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
+++ b/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.facebook;
 
+import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.graphics.Bitmap;
@@ -71,6 +72,8 @@
  * @author Evgeny Gorbin (gorbin.e.o@gmail.com)
  */
 public class FacebookSocialNetwork extends SocialNetwork {
+
+    private String TAG = "asne_FacebookSocialNetwork";
     /*** Social network ID in asne modules, should be unique*/
     public static final int ID = 4;
 
@@ -82,6 +85,8 @@
     private String mPhotoPath;
     private String mStatus;
     private Bundle mBundle;
+    private Context mContext;
+    private Fragment mFragment;
     private ArrayList<String> permissions;
     private PendingAction mPendingAction = PendingAction.NONE;
     private Session.StatusCallback mSessionStatusCallback = new Session.StatusCallback() {
@@ -91,9 +96,11 @@ public void call(Session session, SessionState state, Exception exception) {
         }
     };
 
-    public FacebookSocialNetwork(Fragment fragment, ArrayList<String> permissions) {
-        super(fragment);
-        String applicationID = Utility.getMetadataApplicationId(fragment.getActivity());
+    public FacebookSocialNetwork(Fragment fragment, Context context, ArrayList<String> permissions) {
+        super(fragment,context);
+        mFragment = fragment;
+        mContext = context;
+        String applicationID = Utility.getMetadataApplicationId(context);
 
         if (applicationID == null) {
             throw new IllegalStateException("applicationID can't be null\n" +
@@ -102,6 +109,8 @@ public FacebookSocialNetwork(Fragment fragment, ArrayList<String> permissions) {
         this.permissions = permissions;
     }
 
+
+
     /**
      * Check is social network connected
      * @return true if connected to Facebook social network and false if not
@@ -120,15 +129,23 @@ public boolean isConnected() {
     public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
         super.requestLogin(onLoginCompleteListener);
 
+        Log.d(TAG, "request login");
+
         final Session openSession = mSessionTracker.getOpenSession();
 
         if (openSession != null) {
+            Log.d(TAG,"request login -> open session found");
             if (mLocalListeners.get(REQUEST_LOGIN) != null) {
                 mLocalListeners.get(REQUEST_LOGIN).onError(getID(), REQUEST_LOGIN, "Already loginned", null);
             }
         }
 
         Session currentSession = mSessionTracker.getSession();
+
+        if (currentSession != null) {
+            Log.d(TAG, "request login -> current session state " + currentSession.getState());
+        }
+
         if (currentSession == null || currentSession.getState().isClosed()) {
             mSessionTracker.setSession(null);
             Session session = new Session.Builder(mSocialNetworkManager.getActivity())
@@ -138,6 +155,9 @@ public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
         }
 
         if (!currentSession.isOpened()) {
+
+            Log.d(TAG, "request login -> current session isOpened");
+
             Session.OpenRequest openRequest;
             openRequest = new Session.OpenRequest(mSocialNetworkManager.getActivity());
 
@@ -145,7 +165,7 @@ public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
             if(permissions != null) {
                 openRequest.setPermissions(permissions);
             }
-            openRequest.setLoginBehavior(SessionLoginBehavior.SSO_WITH_FALLBACK);
+            openRequest.setLoginBehavior(SessionLoginBehavior.SUPPRESS_SSO);
             currentSession.openForRead(openRequest);
         }
     }
@@ -166,12 +186,33 @@ public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAcc
      */
     @Override
     public void logout() {
-        if (mSessionTracker == null) return;
 
-        final Session openSession = mSessionTracker.getOpenSession();
+        Log.d(TAG,"logout");
+
+        if (mSessionTracker == null){
+            Log.d(TAG,"logout failed. no Session tracker");
+            return;
+        }
+
+        Session openSession = mSessionTracker.getOpenSession();
 
         if (openSession != null) {
+            Log.d(TAG,"logout -> clear open session");
             openSession.closeAndClearTokenInformation();
+            openSession.close();
+        }
+
+        Session currentSession = mSessionTracker.getSession();
+
+        if (currentSession != null) {
+
+            Log.d(TAG,"logout -> clear current session");
+            currentSession.closeAndClearTokenInformation();
+            currentSession.close();
+        }
+
+        if (mFragment != null && mFragment.getActivity() != null) {
+            mApplicationId = Utility.getMetadataApplicationId(mFragment.getActivity());
         }
     }
 
@@ -376,15 +417,21 @@ public void requestPostLink(Bundle bundle, String message, OnPostingCompleteList
     @Override
     public void requestPostDialog(Bundle bundle, OnPostingCompleteListener onPostingCompleteListener) {
         super.requestPostDialog(bundle, onPostingCompleteListener);
-        if (FacebookDialog.canPresentShareDialog(mSocialNetworkManager.getActivity(),
+
+        if (mSocialNetworkManager.getActivity() == null){
+            Log.e(TAG,"error no activiy");
+        }
+
+        if (FacebookDialog.canPresentShareDialog(mContext,
                 FacebookDialog.ShareDialogFeature.SHARE_DIALOG)) {
-            FacebookDialog shareDialog = new FacebookDialog.ShareDialogBuilder(mSocialNetworkManager.getActivity())
+            FacebookDialog shareDialog = new FacebookDialog.ShareDialogBuilder((Activity)mContext)
                     .setLink(bundle.getString(BUNDLE_LINK))
                     .setDescription(bundle.getString(BUNDLE_MESSAGE))
                     .setName(bundle.getString(BUNDLE_NAME))
                     .setApplicationName(bundle.getString(BUNDLE_APP_NAME))
                     .setCaption(bundle.getString(BUNDLE_CAPTION))
                     .setPicture(bundle.getString(BUNDLE_PICTURE))
+
 //                    .setFriends(bundle.getStringArrayList(DIALOG_FRIENDS))
                     .build();
             mUILifecycleHelper.trackPendingDialogCall(shareDialog.present());
@@ -591,14 +638,20 @@ private void onSessionStateChange(Session session, SessionState state, Exception
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        mUILifecycleHelper = new UiLifecycleHelper(mSocialNetworkManager.getActivity(), mSessionStatusCallback);
-        mUILifecycleHelper.onCreate(savedInstanceState);
+        try {
+            mUILifecycleHelper = new UiLifecycleHelper((Activity)mContext, mSessionStatusCallback);
+            mUILifecycleHelper.onCreate(savedInstanceState);
+
+            initializeActiveSessionWithCachedToken((Activity)mContext);
+            finishInit();
+        }
+        catch(Exception e){
 
-        initializeActiveSessionWithCachedToken(mSocialNetworkManager.getActivity());
-        finishInit();
+        }
     }
 
     private boolean initializeActiveSessionWithCachedToken(Context context) {
+
         if (context == null) {
             return false;
         }
@@ -624,7 +677,13 @@ private void finishInit() {
     @Override
     public void onResume() {
         super.onResume();
-        mUILifecycleHelper.onResume();
+
+        try {
+            mUILifecycleHelper.onResume();
+        }
+        catch(Exception e){
+
+        }
     }
 
     /**
@@ -633,7 +692,13 @@ public void onResume() {
     @Override
     public void onPause() {
         super.onPause();
-        mUILifecycleHelper.onPause();
+
+        try {
+            mUILifecycleHelper.onPause();
+        }
+        catch(Exception e){
+
+        }
     }
 
     /**
@@ -642,7 +707,13 @@ public void onPause() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        mUILifecycleHelper.onDestroy();
+
+        try {
+            mUILifecycleHelper.onDestroy();
+        }
+        catch(Exception e){
+
+        }
     }
 
     /**
@@ -652,7 +723,12 @@ public void onDestroy() {
     @Override
     public void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
-        mUILifecycleHelper.onSaveInstanceState(outState);
+        try {
+            mUILifecycleHelper.onSaveInstanceState(outState);
+        }
+        catch(Exception e){
+
+        }
     }
 
     /**
@@ -680,12 +756,15 @@ public void onError(FacebookDialog.PendingCall pendingCall, Exception error, Bun
 
             @Override
             public void onComplete(FacebookDialog.PendingCall pendingCall, Bundle data) {
+
             }
         });
     }
 
     private void handlePendingAction() {
+
         PendingAction previouslyPendingAction = mPendingAction;
+
         // These actions may re-set pendingAction if they are still pending, but we assume they
         // will succeed.
         mPendingAction = PendingAction.NONE;
diff --git a/googleplus/build.gradle b/googleplus/build.gradle
index 60df4f9..46d1768 100644
--- a/googleplus/build.gradle
+++ b/googleplus/build.gradle
@@ -1,28 +1,16 @@
 apply plugin: 'com.android.library'
-apply from: '../maven_push.gradle'
 
 android {
     compileSdkVersion 21
-    buildToolsVersion "21.1.1"
+    buildToolsVersion '22.0.1'
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.googleplus"
-        minSdkVersion 10
+        minSdkVersion 11
         targetSdkVersion 21
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            runProguard false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
     }
 }
 
 dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:21.0.2'
-    compile('com.google.android.gms:play-services:4.3.23@aar') { exclude module: 'support-v4' }
     compile project(':ASNECore')
+    compile 'com.google.android.gms:play-services-plus:7.5.0'
 }
diff --git a/googleplus/src/main/AndroidManifest.xml b/googleplus/src/main/AndroidManifest.xml
index e415803..146fe66 100644
--- a/googleplus/src/main/AndroidManifest.xml
+++ b/googleplus/src/main/AndroidManifest.xml
@@ -4,11 +4,6 @@
     <!--<uses-sdk tools:node="replace" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
-    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
-
-    <application android:allowBackup="true">
-
-    </application>
+    <application android:allowBackup="true"></application>
 
 </manifest>
diff --git a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
index 442eaeb..f4d3577 100644
--- a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
+++ b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
@@ -22,12 +22,14 @@
 package com.github.gorbin.asne.googleplus;
 
 import android.app.Activity;
+import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Handler;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 
 import com.github.gorbin.asne.core.AccessToken;
 import com.github.gorbin.asne.core.SocialNetwork;
@@ -45,7 +47,7 @@
 import com.github.gorbin.asne.core.persons.SocialPerson;
 import com.google.android.gms.auth.GoogleAuthUtil;
 import com.google.android.gms.common.ConnectionResult;
-import com.google.android.gms.common.GooglePlayServicesClient;
+import com.google.android.gms.common.api.GoogleApiClient;
 import com.google.android.gms.common.Scopes;
 import com.google.android.gms.common.api.CommonStatusCodes;
 import com.google.android.gms.common.api.GoogleApiClient;
@@ -67,7 +69,7 @@
  * @author Anton Krasov
  * @author Evgeny Gorbin (gorbin.e.o@gmail.com)
  */
-public class GooglePlusSocialNetwork extends SocialNetwork implements GooglePlayServicesClient.ConnectionCallbacks, GooglePlayServicesClient.OnConnectionFailedListener, GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener {
+public class GooglePlusSocialNetwork extends SocialNetwork implements GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener {
 
     /*** Social network ID in asne modules, should be unique*/
     public static final int ID = 3;
@@ -86,8 +88,8 @@
     private boolean mConnectRequested;
     private Handler mHandler = new Handler();
 
-    public GooglePlusSocialNetwork(Fragment fragment) {
-        super(fragment);
+    public GooglePlusSocialNetwork(Fragment fragment, Context context) {
+        super(fragment, context);
     }
 
     /**
@@ -598,18 +600,23 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
      */
     @Override
     public void onConnected(Bundle bundle) {
-        if (mConnectRequested) {
-            if (mLocalListeners.get(REQUEST_LOGIN) != null) {
-                mSharedPreferences.edit().putBoolean(SAVE_STATE_KEY_IS_CONNECTED, true).commit();
-                ((OnLoginCompleteListener) mLocalListeners.get(REQUEST_LOGIN)).onLoginSuccess(getID());
-                return;
-            }
-            if (mLocalListeners.get(REQUEST_LOGIN) != null) {
-                mLocalListeners.get(REQUEST_LOGIN).onError(getID(), REQUEST_LOGIN,
-                        "get person == null", null);
+        try {
+            if (mConnectRequested) {
+                if (mLocalListeners.get(REQUEST_LOGIN) != null) {
+                    mSharedPreferences.edit().putBoolean(SAVE_STATE_KEY_IS_CONNECTED, true).commit();
+                    ((OnLoginCompleteListener) mLocalListeners.get(REQUEST_LOGIN)).onLoginSuccess(getID());
+                    return;
+                }
+                if (mLocalListeners.get(REQUEST_LOGIN) != null) {
+                    mLocalListeners.get(REQUEST_LOGIN).onError(getID(), REQUEST_LOGIN,
+                            "get person == null", null);
+                }
             }
+            mConnectRequested = false;
+        }
+        catch(Exception e){
+            Log.e(TAG, "error"+e);
         }
-        mConnectRequested = false;
     }
 
     /**
@@ -625,13 +632,13 @@ public void onConnectionSuspended(int i) {
         mConnectRequested = false;
     }
 
-    /**
-     * Called when the client is disconnected.
-     */
-    @Override
-    public void onDisconnected() {
-        mConnectRequested = false;
-    }
+//    /**
+//     * Called when the client is disconnected.
+//     */
+//    @Override
+//    public void onDisconnected() {
+//        mConnectRequested = false;
+//    }
 
     /**
      * Called when there was an error connecting the client to the service.
diff --git a/twitter/build.gradle b/twitter/build.gradle
index 5e1584c..652db25 100644
--- a/twitter/build.gradle
+++ b/twitter/build.gradle
@@ -1,28 +1,17 @@
 apply plugin: 'com.android.library'
-apply from: '../maven_push.gradle'
 
 android {
     compileSdkVersion 21
-    buildToolsVersion "21.1.1"
+    buildToolsVersion '22.0.1'
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.twitter"
-        minSdkVersion 10
+        minSdkVersion 11
         targetSdkVersion 21
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            runProguard false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
     }
 }
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:21.0.2'
     compile project(':ASNECore')
     compile 'org.twitter4j:twitter4j-core:4.0.2@jar'
 }
diff --git a/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java b/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
index fe30503..baec237 100644
--- a/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
+++ b/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.twitter;
 
+import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
@@ -82,8 +83,8 @@
     private Twitter mTwitter;
     private RequestToken mRequestToken;
 
-    public TwitterSocialNetwork(Fragment fragment, String consumerKey, String consumerSecret, String redirectURL) {
-        super(fragment);
+    public TwitterSocialNetwork(Fragment fragment, Context context, String consumerKey, String consumerSecret, String redirectURL) {
+        super(fragment,context);
 
         fConsumerKey = consumerKey;
         fConsumerSecret = consumerSecret;
@@ -484,14 +485,19 @@ protected Bundle doInBackground(Bundle... params) {
 
         @Override
         protected void onPostExecute(Bundle result) {
-            if (!handleRequestResult(result, REQUEST_LOGIN)) return;
+            try {
+                if (!handleRequestResult(result, REQUEST_LOGIN)) return;
+
+                if (result.containsKey(RESULT_OAUTH_LOGIN)) {
+                    Intent intent = new Intent(mSocialNetworkManager.getActivity(), OAuthActivity.class)
+                            .putExtra(OAuthActivity.PARAM_CALLBACK, fRedirectURL)
+                            .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, result.getString(RESULT_OAUTH_LOGIN));
 
-            if (result.containsKey(RESULT_OAUTH_LOGIN)) {
-                Intent intent = new Intent(mSocialNetworkManager.getActivity(), OAuthActivity.class)
-                        .putExtra(OAuthActivity.PARAM_CALLBACK, fRedirectURL)
-                        .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, result.getString(RESULT_OAUTH_LOGIN));
+                    mSocialNetworkManager.getActivity().startActivityForResult(intent, REQUEST_AUTH);
+                }
+            }
+            catch(Exception e){
 
-                mSocialNetworkManager.getActivity().startActivityForResult(intent, REQUEST_AUTH);
             }
         }
     }
diff --git a/vk/build.gradle b/vk/build.gradle
index 881f3b1..32d2356 100644
--- a/vk/build.gradle
+++ b/vk/build.gradle
@@ -1,28 +1,16 @@
 apply plugin: 'com.android.library'
-apply from: '../maven_push.gradle'
 
 android {
     compileSdkVersion 21
-    buildToolsVersion "21.1.1"
+    buildToolsVersion '22.0.1'
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.vk"
-        minSdkVersion 10
+        minSdkVersion 11
         targetSdkVersion 21
-        versionCode 1
-        versionName "1.0"
-    }
-    buildTypes {
-        release {
-            runProguard false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
     }
 }
 
 dependencies {
-    compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:21.0.2'
     compile project(':ASNECore')
     compile('com.vk:androidsdk:1.3.3@aar') { exclude module: 'support-v4' }
 }
diff --git a/vk/src/main/AndroidManifest.xml b/vk/src/main/AndroidManifest.xml
index 226b2eb..e4f096a 100644
--- a/vk/src/main/AndroidManifest.xml
+++ b/vk/src/main/AndroidManifest.xml
@@ -1,14 +1,9 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.github.gorbin.asne.vkontakte"
+    package="com.github.gorbin.asne.vk"
     xmlns:tools="http://schemas.android.com/tools">
     <!--<uses-sdk tools:node="replace" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
-
-    <application android:allowBackup="true">
-        <activity
-            android:name="com.vk.sdk.VKOpenAuthActivity"
-            />
-    </application>
+    <application android:allowBackup="true"></application>
 
 </manifest>
diff --git a/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java b/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
index 7986525..4ce7878 100644
--- a/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
+++ b/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
@@ -23,6 +23,7 @@
 
 import android.app.Activity;
 import android.app.AlertDialog;
+import android.content.Context;
 import android.content.Intent;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -138,8 +139,8 @@ public void onAcceptUserToken(VKAccessToken token) {
         }
     };
 
-    public VkSocialNetwork(Fragment fragment, String key, String[] permissions) {
-        super(fragment);
+    public VkSocialNetwork(Fragment fragment, Context context, String key, String[] permissions) {
+        super(fragment,context);
         this.key = key;
         this.permissions = permissions;
     }
@@ -239,7 +240,7 @@ public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAcc
         ((OnRequestAccessTokenCompleteListener) mLocalListeners.get(REQUEST_ACCESS_TOKEN))
                 .onRequestAccessTokenComplete(getID(),
                         new AccessToken(mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null),
-                        mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_SECRET, null)));
+                                mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_SECRET, null)));
     }
 
     /**
@@ -394,8 +395,14 @@ public void onComplete(VKResponse response) {
                 } catch (JSONException e) {
                     e.printStackTrace();
                 }
-                ((OnRequestDetailedSocialPersonCompleteListener) mLocalListeners.get(REQUEST_GET_DETAIL_PERSON))
-                        .onRequestDetailedSocialPersonSuccess(getID(), vkPerson);
+
+                try {
+                    ((OnRequestDetailedSocialPersonCompleteListener) mLocalListeners.get(REQUEST_GET_DETAIL_PERSON))
+                            .onRequestDetailedSocialPersonSuccess(getID(), vkPerson);
+                }
+                catch(NullPointerException e){
+                    e.printStackTrace();
+                }
             }
 
             @Override
@@ -808,6 +815,6 @@ public void onDestroy() {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         int sanitizedRequestCode = requestCode % 0x10000;
-        VKUIHelper.onActivityResult(sanitizedRequestCode, resultCode, data);
+        VKUIHelper.onActivityResult(activity,sanitizedRequestCode, resultCode, data);
     }
 }
