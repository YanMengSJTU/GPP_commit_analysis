diff --git a/.gitattributes b/.gitattributes
old mode 100644
new mode 100755
diff --git a/.gitignore b/.gitignore
old mode 100644
new mode 100755
diff --git a/ASNECore/.gitignore b/ASNECore/.gitignore
old mode 100644
new mode 100755
diff --git a/ASNECore/build.gradle b/ASNECore/build.gradle
old mode 100644
new mode 100755
index 6d98310..00ad143
--- a/ASNECore/build.gradle
+++ b/ASNECore/build.gradle
@@ -2,19 +2,19 @@ apply plugin: 'com.android.library'
 apply from: '../maven_push.gradle'
 
 android {
-    compileSdkVersion 21
-    buildToolsVersion '21.1.1'
+    compileSdkVersion 23
+    buildToolsVersion '23.0.2'
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.core"
-        minSdkVersion 10
-        targetSdkVersion 21
+        //applicationId "com.github.gorbin.asne.core"
+        minSdkVersion 15
+        targetSdkVersion 23
         versionCode 1
         versionName "1.0"
     }
     buildTypes {
         release {
-            runProguard false
+            minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
@@ -22,5 +22,5 @@ android {
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:21.0.2'
+    compile 'com.android.support:appcompat-v7:23.1.1'
 }
diff --git a/ASNECore/gradle.properties b/ASNECore/gradle.properties
old mode 100644
new mode 100755
diff --git a/ASNECore/libs/signpost-commonshttp4-1.2.1.1.jar b/ASNECore/libs/signpost-commonshttp4-1.2.1.1.jar
old mode 100644
new mode 100755
diff --git a/ASNECore/libs/signpost-core-1.2.1.1.jar b/ASNECore/libs/signpost-core-1.2.1.1.jar
old mode 100644
new mode 100755
diff --git a/ASNECore/proguard-rules.pro b/ASNECore/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/AndroidManifest.xml b/ASNECore/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index 412e064..9210a73
--- a/ASNECore/src/main/AndroidManifest.xml
+++ b/ASNECore/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.github.gorbin.asne.core"
     xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    <!--<uses-sdk tools:node="merge" />-->
 
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/AccessToken.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/AccessToken.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/Consts.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/Consts.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthActivity.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthActivity.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthSocialNetwork.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/OAuthSocialNetwork.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
old mode 100644
new mode 100755
index 6060321..1d56944
--- a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
+++ b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
@@ -127,6 +127,15 @@ protected SocialNetwork(Fragment fragment, Context context) {
         mSharedPreferences = context.getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
     }
 
+    /**
+     * @param socialMediaManager the SocialMediaManager fragment.
+     * @param context ant Activity or Application if not being called from a fragment
+     */
+    protected SocialNetwork(Fragment socialMediaManager, Context context) {
+        //we keep the fragment in case it is needed in future. it also minimises the changes required.
+        mSocialNetworkManager = socialMediaManager;
+        mSharedPreferences = context.getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
+    }
     //////////////////// LIFECYCLE ////////////////////
 
     /**
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetworkAsyncTask.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetworkAsyncTask.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetworkException.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetworkException.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetworkManager.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetworkManager.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnCheckIsFriendCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnCheckIsFriendCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnLoginCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnLoginCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnPostingCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnPostingCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestAccessTokenCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestAccessTokenCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestAddFriendCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestAddFriendCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestDetailedSocialPersonCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestDetailedSocialPersonCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestGetFriendsCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestGetFriendsCompleteListener.java
old mode 100644
new mode 100755
index 349810d..228fe4c
--- a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestGetFriendsCompleteListener.java
+++ b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestGetFriendsCompleteListener.java
@@ -24,7 +24,8 @@
 import com.github.gorbin.asne.core.listener.base.SocialNetworkListener;
 import com.github.gorbin.asne.core.persons.SocialPerson;
 
-import java.util.ArrayList;
+import java.util.List;
+
 /**
  * Interface definition for a callback to be invoked when friends list request complete.
  *
@@ -36,12 +37,12 @@
      * @param socialNetworkID id of social network where request was complete
      * @param friendsID array of friends list's user ids
      */
-    public void OnGetFriendsIdComplete(int socialNetworkID, String[] friendsID);
+    public void onGetFriendsIdComplete(int socialNetworkID, String[] friendsID);
 
     /**
      * Called when friends list request complete.
      * @param socialNetworkID id of social network where request was complete
      * @param socialFriends ArrayList of of friends list's social persons
      */
-    public void OnGetFriendsComplete(int socialNetworkID, ArrayList<SocialPerson> socialFriends);
+    public void onGetFriendsComplete(int socialNetworkID, List<SocialPerson> socialFriends);
 }
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestRemoveFriendCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestRemoveFriendCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestSocialPersonCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestSocialPersonCompleteListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestSocialPersonsCompleteListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestSocialPersonsCompleteListener.java
old mode 100644
new mode 100755
index e818278..a0f6500
--- a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestSocialPersonsCompleteListener.java
+++ b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/OnRequestSocialPersonsCompleteListener.java
@@ -24,7 +24,7 @@
 import com.github.gorbin.asne.core.listener.base.SocialNetworkListener;
 import com.github.gorbin.asne.core.persons.SocialPerson;
 
-import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Interface definition for a callback to be invoked when array of social person request complete.
@@ -37,5 +37,5 @@
      * @param socialNetworkID id of social network where request was complete
      * @param socialPersons ArrayList of requested {@link com.github.gorbin.asne.core.persons.SocialPerson}
      */
-    public void onRequestSocialPersonsSuccess(int socialNetworkID, ArrayList<SocialPerson> socialPersons);
+    public void onRequestSocialPersonsSuccess(int socialNetworkID, List<SocialPerson> socialPersons);
 }
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/base/SocialNetworkListener.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/listener/base/SocialNetworkListener.java
old mode 100644
new mode 100755
diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/persons/SocialPerson.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/persons/SocialPerson.java
old mode 100644
new mode 100755
diff --git a/ASNE/.gitignore b/ASNEDemo/.gitignore
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/.gitignore
rename to ASNEDemo/.gitignore
diff --git a/ASNE/build.gradle b/ASNEDemo/build.gradle
old mode 100644
new mode 100755
similarity index 73%
rename from ASNE/build.gradle
rename to ASNEDemo/build.gradle
index f93c920..98ea579
--- a/ASNE/build.gradle
+++ b/ASNEDemo/build.gradle
@@ -5,17 +5,17 @@ android {
         config {
         }
     }
-    compileSdkVersion 21
-    buildToolsVersion '21.1.1'
+    compileSdkVersion 23
+    buildToolsVersion '23.0.2'
     defaultConfig {
-        minSdkVersion 10
-        targetSdkVersion 21
+        minSdkVersion 15
+        targetSdkVersion 23
         versionCode 1
         versionName '1.0'
     }
     buildTypes {
         release {
-            runProguard false
+            minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
         }
     }
@@ -25,8 +25,8 @@ android {
 
 dependencies {
     compile fileTree(include: ['*.jar'], dir: 'libs')
-    compile 'com.android.support:appcompat-v7:21.0.2'
-    compile 'com.android.support:support-v4:21.0.2'
+    compile 'com.android.support:appcompat-v7:23.1.1'
+    compile 'com.android.support:support-v4:23.1.1'
     compile project(':ASNECore')
     compile project(':twitter')
     compile project(':linkedin')
diff --git a/ASNE/libs/bugsense-3.6.1.jar b/ASNEDemo/libs/bugsense-3.6.1.jar
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/libs/bugsense-3.6.1.jar
rename to ASNEDemo/libs/bugsense-3.6.1.jar
diff --git a/ASNE/libs/disklrucache-1.3.1.jar b/ASNEDemo/libs/disklrucache-1.3.1.jar
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/libs/disklrucache-1.3.1.jar
rename to ASNEDemo/libs/disklrucache-1.3.1.jar
diff --git a/ASNE/libs/picasso-2.2.0.jar b/ASNEDemo/libs/picasso-2.2.0.jar
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/libs/picasso-2.2.0.jar
rename to ASNEDemo/libs/picasso-2.2.0.jar
diff --git a/ASNE/proguard-rules.txt b/ASNEDemo/proguard-rules.txt
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/proguard-rules.txt
rename to ASNEDemo/proguard-rules.txt
diff --git a/ASNE/src/main/AndroidManifest.xml b/ASNEDemo/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/AndroidManifest.xml
rename to ASNEDemo/src/main/AndroidManifest.xml
diff --git a/ASNE/src/main/assets/logo.png b/ASNEDemo/src/main/assets/logo.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/assets/logo.png
rename to ASNEDemo/src/main/assets/logo.png
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/DetailedSocialInfoFragment.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/DetailedSocialInfoFragment.java
old mode 100644
new mode 100755
similarity index 98%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/DetailedSocialInfoFragment.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/DetailedSocialInfoFragment.java
index 75189bf..097ba39
--- a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/DetailedSocialInfoFragment.java
+++ b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/DetailedSocialInfoFragment.java
@@ -52,7 +52,7 @@
     public DetailedSocialInfoFragment() {
     }
 
-    public static DetailedSocialInfoFragment newInstannce(int socialNetworkId, String userId) {
+    public static DetailedSocialInfoFragment newInstance(int socialNetworkId, String userId) {
         DetailedSocialInfoFragment fragment = new DetailedSocialInfoFragment();
         Bundle args = new Bundle();
         args.putInt(Constants.NETWORK_ID, socialNetworkId);
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListAdapter.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListAdapter.java
old mode 100644
new mode 100755
similarity index 96%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListAdapter.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListAdapter.java
index 1a47e7e..4edeb84
--- a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListAdapter.java
+++ b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListAdapter.java
@@ -37,16 +37,16 @@
 import com.squareup.picasso.Callback;
 import com.squareup.picasso.Picasso;
 
-import java.util.ArrayList;
+import java.util.List;
 
 public class FriendsListAdapter extends BaseAdapter {
     private final Activity context;
     private ViewHolder holder;
-    private ArrayList<SocialPerson> friends;
+    private List<SocialPerson> friends;
     private int socialNetworkID;
     private boolean net_err;
 
-    public FriendsListAdapter(Activity context, ArrayList<SocialPerson> friends, int socialNetworkID) {
+    public FriendsListAdapter(Activity context, List<SocialPerson> friends, int socialNetworkID) {
         this.context = context;
         this.friends = friends;
         this.socialNetworkID = socialNetworkID;
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListFragment.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListFragment.java
old mode 100644
new mode 100755
similarity index 95%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListFragment.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListFragment.java
index db6e4cd..46eb75e
--- a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListFragment.java
+++ b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/FriendsListFragment.java
@@ -43,21 +43,21 @@
 import com.gorbin.androidsocialnetworksextended.asne.utils.ADialogs;
 import com.gorbin.androidsocialnetworksextended.asne.utils.Constants;
 
-import java.text.NumberFormat;
 import java.util.ArrayList;
+import java.util.List;
 
 public class FriendsListFragment extends Fragment implements OnRequestGetFriendsCompleteListener, AdapterView.OnItemClickListener {
     private SocialNetwork socialNetwork;
     private ListView listMenu;
     private int socialNetworkId;
-    private ArrayList<SocialPerson> socialPersons = new ArrayList<SocialPerson>();
+    private final List<SocialPerson> socialPersons = new ArrayList<SocialPerson>();
     private ADialogs editDialog;
     private ADialogs loadingDialog;
 
     public FriendsListFragment() {
     }
 
-    public static FriendsListFragment newInstannce(int id) {
+    public static FriendsListFragment newInstance(int id) {
         FriendsListFragment fragment = new FriendsListFragment();
         Bundle args = new Bundle();
         args.putInt(Constants.NETWORK_ID, id);
@@ -168,13 +168,14 @@ public void onADialogsCancel(DialogInterface dialog) {}
         }
     }
     @Override
-    public void OnGetFriendsIdComplete(int socialNetworkID, String[] friendsID) {
+    public void onGetFriendsIdComplete(int socialNetworkID, String[] friendsID) {
         ((MainActivity)getActivity()).getSupportActionBar().setTitle(friendsID.length + " Friends");
     }
 
     @Override
-    public void OnGetFriendsComplete(int socialNetworkID, ArrayList<SocialPerson> socialFriends) {
-        this.socialPersons = socialFriends;
+    public void onGetFriendsComplete(int socialNetworkID, List<SocialPerson> socialFriends) {
+        this.socialPersons.clear();
+        this.socialPersons.addAll(socialFriends);
         FriendsListAdapter adapter = new FriendsListAdapter(getActivity(), socialFriends, socialNetworkID);
         listMenu.setAdapter(adapter);
         loadingDialog.cancelProgress();
@@ -192,7 +193,7 @@ public void onError(int socialNetworkID, String requestID, String errorMessage,
     @Override
     public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
         if(socialNetworkId != 4) {
-            DetailedSocialInfoFragment friends = DetailedSocialInfoFragment.newInstannce(socialNetworkId, socialPersons.get(i).id);
+            DetailedSocialInfoFragment friends = DetailedSocialInfoFragment.newInstance(socialNetworkId, socialPersons.get(i).id);
             getActivity().getSupportFragmentManager().beginTransaction()
                     .addToBackStack("info")
                     .replace(R.id.container, friends)
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainActivity.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainActivity.java
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainActivity.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainActivity.java
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainFragment.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainFragment.java
old mode 100644
new mode 100755
similarity index 99%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainFragment.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainFragment.java
index b507648..a74ad1e
--- a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainFragment.java
+++ b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/MainFragment.java
@@ -376,7 +376,7 @@ public void onADialogsCancel(DialogInterface dialog) {
             socialCard.friends.setVisibility(View.VISIBLE);
             socialCard.friends.setOnClickListener(new View.OnClickListener() {
                 public void onClick(View view) {
-                    FriendsListFragment friends = FriendsListFragment.newInstannce(networkId);
+                    FriendsListFragment friends = FriendsListFragment.newInstance(networkId);
                     getActivity().getSupportFragmentManager().beginTransaction()
                             .addToBackStack("friends")
                             .replace(R.id.container, friends)
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/ADialogs.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/ADialogs.java
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/ADialogs.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/ADialogs.java
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/Constants.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/Constants.java
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/Constants.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/Constants.java
diff --git a/ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/SocialCard.java b/ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/SocialCard.java
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/SocialCard.java
rename to ASNEDemo/src/main/java/com/gorbin/androidsocialnetworksextended/asne/utils/SocialCard.java
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_facebook.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_facebook.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_facebook.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_facebook.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_friends.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_friends.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_friends.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_friends.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_googleplus.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_googleplus.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_googleplus.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_googleplus.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_instagram.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_instagram.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_instagram.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_instagram.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_launcher.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_launcher.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_launcher.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_launcher.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_linkedin.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_linkedin.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_linkedin.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_linkedin.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_odnoklassniki.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_odnoklassniki.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_odnoklassniki.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_odnoklassniki.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_share.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_share.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_share.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_share.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_twitter.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_twitter.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_twitter.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_twitter.png
diff --git a/ASNE/src/main/res/drawable-hdpi/ic_vk.png b/ASNEDemo/src/main/res/drawable-hdpi/ic_vk.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-hdpi/ic_vk.png
rename to ASNEDemo/src/main/res/drawable-hdpi/ic_vk.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_facebook.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_facebook.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_facebook.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_facebook.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_friends.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_friends.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_friends.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_friends.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_googleplus.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_googleplus.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_googleplus.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_googleplus.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_instagram.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_instagram.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_instagram.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_instagram.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_launcher.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_launcher.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_launcher.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_launcher.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_linkedin.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_linkedin.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_linkedin.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_linkedin.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_odnoklassniki.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_odnoklassniki.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_odnoklassniki.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_odnoklassniki.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_share.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_share.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_share.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_share.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_twitter.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_twitter.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_twitter.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_twitter.png
diff --git a/ASNE/src/main/res/drawable-mdpi/ic_vk.png b/ASNEDemo/src/main/res/drawable-mdpi/ic_vk.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-mdpi/ic_vk.png
rename to ASNEDemo/src/main/res/drawable-mdpi/ic_vk.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_facebook.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_facebook.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_facebook.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_facebook.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_friends.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_friends.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_friends.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_friends.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_googleplus.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_googleplus.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_googleplus.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_googleplus.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_instagram.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_instagram.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_instagram.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_instagram.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_launcher.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_launcher.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_launcher.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_launcher.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_linkedin.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_linkedin.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_linkedin.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_linkedin.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_odnoklassniki.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_odnoklassniki.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_odnoklassniki.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_odnoklassniki.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_share.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_share.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_share.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_share.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_twitter.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_twitter.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_twitter.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_twitter.png
diff --git a/ASNE/src/main/res/drawable-xhdpi/ic_vk.png b/ASNEDemo/src/main/res/drawable-xhdpi/ic_vk.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xhdpi/ic_vk.png
rename to ASNEDemo/src/main/res/drawable-xhdpi/ic_vk.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_facebook.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_facebook.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_facebook.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_facebook.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_friends.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_friends.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_friends.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_friends.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_googleplus.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_googleplus.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_googleplus.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_googleplus.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_instagram.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_instagram.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_instagram.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_instagram.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_launcher.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_launcher.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_launcher.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_launcher.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_linkedin.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_linkedin.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_linkedin.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_linkedin.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_odnoklassniki.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_odnoklassniki.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_odnoklassniki.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_odnoklassniki.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_share.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_share.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_share.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_share.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_twitter.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_twitter.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_twitter.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_twitter.png
diff --git a/ASNE/src/main/res/drawable-xxhdpi/ic_vk.png b/ASNEDemo/src/main/res/drawable-xxhdpi/ic_vk.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable-xxhdpi/ic_vk.png
rename to ASNEDemo/src/main/res/drawable-xxhdpi/ic_vk.png
diff --git a/ASNE/src/main/res/drawable/empty.png b/ASNEDemo/src/main/res/drawable/empty.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/empty.png
rename to ASNEDemo/src/main/res/drawable/empty.png
diff --git a/ASNE/src/main/res/drawable/error.png b/ASNEDemo/src/main/res/drawable/error.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/error.png
rename to ASNEDemo/src/main/res/drawable/error.png
diff --git a/ASNE/src/main/res/drawable/g_plus_user.jpg b/ASNEDemo/src/main/res/drawable/g_plus_user.jpg
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/g_plus_user.jpg
rename to ASNEDemo/src/main/res/drawable/g_plus_user.jpg
diff --git a/ASNE/src/main/res/drawable/instagram_user.jpg b/ASNEDemo/src/main/res/drawable/instagram_user.jpg
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/instagram_user.jpg
rename to ASNEDemo/src/main/res/drawable/instagram_user.jpg
diff --git a/ASNE/src/main/res/drawable/linkedin_user.png b/ASNEDemo/src/main/res/drawable/linkedin_user.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/linkedin_user.png
rename to ASNEDemo/src/main/res/drawable/linkedin_user.png
diff --git a/ASNE/src/main/res/drawable/ok_user.png b/ASNEDemo/src/main/res/drawable/ok_user.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/ok_user.png
rename to ASNEDemo/src/main/res/drawable/ok_user.png
diff --git a/ASNE/src/main/res/drawable/shadow.xml b/ASNEDemo/src/main/res/drawable/shadow.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/shadow.xml
rename to ASNEDemo/src/main/res/drawable/shadow.xml
diff --git a/ASNE/src/main/res/drawable/social_button_shadow.xml b/ASNEDemo/src/main/res/drawable/social_button_shadow.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/social_button_shadow.xml
rename to ASNEDemo/src/main/res/drawable/social_button_shadow.xml
diff --git a/ASNE/src/main/res/drawable/twitter_user.png b/ASNEDemo/src/main/res/drawable/twitter_user.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/twitter_user.png
rename to ASNEDemo/src/main/res/drawable/twitter_user.png
diff --git a/ASNE/src/main/res/drawable/user.png b/ASNEDemo/src/main/res/drawable/user.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/user.png
rename to ASNEDemo/src/main/res/drawable/user.png
diff --git a/ASNE/src/main/res/drawable/vk_user.png b/ASNEDemo/src/main/res/drawable/vk_user.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/drawable/vk_user.png
rename to ASNEDemo/src/main/res/drawable/vk_user.png
diff --git a/ASNE/src/main/res/layout/activity_main.xml b/ASNEDemo/src/main/res/layout/activity_main.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/activity_main.xml
rename to ASNEDemo/src/main/res/layout/activity_main.xml
diff --git a/ASNE/src/main/res/layout/card_social.xml b/ASNEDemo/src/main/res/layout/card_social.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/card_social.xml
rename to ASNEDemo/src/main/res/layout/card_social.xml
diff --git a/ASNE/src/main/res/layout/card_social_fragment.xml b/ASNEDemo/src/main/res/layout/card_social_fragment.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/card_social_fragment.xml
rename to ASNEDemo/src/main/res/layout/card_social_fragment.xml
diff --git a/ASNE/src/main/res/layout/dialog_image.xml b/ASNEDemo/src/main/res/layout/dialog_image.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/dialog_image.xml
rename to ASNEDemo/src/main/res/layout/dialog_image.xml
diff --git a/ASNE/src/main/res/layout/edit_text_dialog.xml b/ASNEDemo/src/main/res/layout/edit_text_dialog.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/edit_text_dialog.xml
rename to ASNEDemo/src/main/res/layout/edit_text_dialog.xml
diff --git a/ASNE/src/main/res/layout/fragment_social_network.xml b/ASNEDemo/src/main/res/layout/fragment_social_network.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/fragment_social_network.xml
rename to ASNEDemo/src/main/res/layout/fragment_social_network.xml
diff --git a/ASNE/src/main/res/layout/friend_row.xml b/ASNEDemo/src/main/res/layout/friend_row.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/friend_row.xml
rename to ASNEDemo/src/main/res/layout/friend_row.xml
diff --git a/ASNE/src/main/res/layout/list_fragment.xml b/ASNEDemo/src/main/res/layout/list_fragment.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/list_fragment.xml
rename to ASNEDemo/src/main/res/layout/list_fragment.xml
diff --git a/ASNE/src/main/res/layout/social_integration_progress.xml b/ASNEDemo/src/main/res/layout/social_integration_progress.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/layout/social_integration_progress.xml
rename to ASNEDemo/src/main/res/layout/social_integration_progress.xml
diff --git a/ASNE/src/main/res/menu/friend_menu.xml b/ASNEDemo/src/main/res/menu/friend_menu.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/menu/friend_menu.xml
rename to ASNEDemo/src/main/res/menu/friend_menu.xml
diff --git a/ASNE/src/main/res/menu/friends_list_menu.xml b/ASNEDemo/src/main/res/menu/friends_list_menu.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/menu/friends_list_menu.xml
rename to ASNEDemo/src/main/res/menu/friends_list_menu.xml
diff --git a/ASNE/src/main/res/menu/main.xml b/ASNEDemo/src/main/res/menu/main.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/menu/main.xml
rename to ASNEDemo/src/main/res/menu/main.xml
diff --git a/ASNE/src/main/res/raw/logo.png b/ASNEDemo/src/main/res/raw/logo.png
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/raw/logo.png
rename to ASNEDemo/src/main/res/raw/logo.png
diff --git a/ASNE/src/main/res/values-w820dp/dimens.xml b/ASNEDemo/src/main/res/values-w820dp/dimens.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/values-w820dp/dimens.xml
rename to ASNEDemo/src/main/res/values-w820dp/dimens.xml
diff --git a/ASNE/src/main/res/values/arrays.xml b/ASNEDemo/src/main/res/values/arrays.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/values/arrays.xml
rename to ASNEDemo/src/main/res/values/arrays.xml
diff --git a/ASNE/src/main/res/values/attrs.xml b/ASNEDemo/src/main/res/values/attrs.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/values/attrs.xml
rename to ASNEDemo/src/main/res/values/attrs.xml
diff --git a/ASNE/src/main/res/values/colors.xml b/ASNEDemo/src/main/res/values/colors.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/values/colors.xml
rename to ASNEDemo/src/main/res/values/colors.xml
diff --git a/ASNE/src/main/res/values/dimens.xml b/ASNEDemo/src/main/res/values/dimens.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/values/dimens.xml
rename to ASNEDemo/src/main/res/values/dimens.xml
diff --git a/ASNE/src/main/res/values/strings.xml b/ASNEDemo/src/main/res/values/strings.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/values/strings.xml
rename to ASNEDemo/src/main/res/values/strings.xml
diff --git a/ASNE/src/main/res/values/styles.xml b/ASNEDemo/src/main/res/values/styles.xml
old mode 100644
new mode 100755
similarity index 100%
rename from ASNE/src/main/res/values/styles.xml
rename to ASNEDemo/src/main/res/values/styles.xml
diff --git a/README.md b/README.md
old mode 100644
new mode 100755
index 5f275a9..9b9d493
--- a/README.md
+++ b/README.md
@@ -1,3 +1,4 @@
+<<<<<<< HEAD
 MODIFIED VERSION OF ASNE 
 
 Differences
@@ -154,6 +155,11 @@ if (socialNetwork != null && logged_in_network != -1 && socialNetwork.isConnecte
 
 
 
+=======
+Unfreeze project - merge all puls for master branch - current version was not tested - **NOT STABLE**
+
+**Sorry, but I freeze work on project for some time(I hope not long, nearly month) - too busy. I saw all Issues and will resolve them as soon as I can.** 
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
 
 
 ![enter image description here][1]
@@ -293,6 +299,8 @@ mSocialNetworkManager = (SocialNetworkManager) getFragmentManager().findFragment
 	if (mSocialNetworkManager == null) {
         mSocialNetworkManager = new SocialNetworkManager();
 		FacebookSocialNetwork fbNetwork = new FacebookSocialNetwork(this, fbScope);
+		//or from an activity
+		//FacebookSocialNetwork fbNetwork = new FacebookSocialNetwork(mSocialNetworkManager, this, fbScope);
         mSocialNetworkManager.addSocialNetwork(fbNetwork);
         getFragmentManager().beginTransaction().add(mSocialNetworkManager, SOCIAL_NETWORK_TAG).commit();
 	}
diff --git a/build.gradle b/build.gradle
old mode 100644
new mode 100755
index e0285cf..ce215da
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:0.13.+'
+        classpath 'com.android.tools.build:gradle:1.5.0'
     }
 }
 
diff --git a/build/intermediates/dex-cache/cache.xml b/build/intermediates/dex-cache/cache.xml
old mode 100644
new mode 100755
diff --git a/facebook/.gitignore b/facebook/.gitignore
old mode 100644
new mode 100755
diff --git a/facebook/build.gradle b/facebook/build.gradle
old mode 100644
new mode 100755
index 5dbcea7..9b8d197
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -2,18 +2,42 @@ apply plugin: 'com.android.library'
 //apply from: '../maven_push.gradle'
 
 android {
+<<<<<<< HEAD
     compileSdkVersion 21
     buildToolsVersion '22.0.1'
 
     defaultConfig {
         minSdkVersion 11
         targetSdkVersion 21
+=======
+    compileSdkVersion 23
+    buildToolsVersion '23.0.2'
+
+    defaultConfig {
+        //applicationId "com.github.gorbin.asne.facebook"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     }
 }
 
 dependencies {
     compile fileTree(include: ['*.jar'], dir: 'libs')
+<<<<<<< HEAD
     compile project(':ASNECore')
     compile 'com.facebook.android:facebook-android-sdk:3.22.+'
     //compile 'com.facebook.android:facebook-android-sdk:4.1.0'
+=======
+    compile 'com.android.support:appcompat-v7:23.1.1'
+    compile project(':ASNECore')
+    compile 'com.facebook.android:facebook-android-sdk:4.6.0'
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
 }
diff --git a/facebook/gradle.properties b/facebook/gradle.properties
old mode 100644
new mode 100755
diff --git a/facebook/proguard-rules.pro b/facebook/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/facebook/src/main/AndroidManifest.xml b/facebook/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
diff --git a/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookPerson.java b/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookPerson.java
old mode 100644
new mode 100755
diff --git a/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java b/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
old mode 100644
new mode 100755
index 0bc29c5..90cf633
--- a/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
+++ b/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2014 Evgeny Gorbin
+ * Copyright (c) 2016 Evgeny Gorbin
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy
  * of this software and associated documentation files (the "Software"), to deal
@@ -19,6 +19,7 @@
  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  * THE SOFTWARE.
  *******************************************************************************/
+
 package com.github.gorbin.asne.facebook;
 
 import android.app.Activity;
@@ -26,11 +27,24 @@
 import android.content.Intent;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
+import android.net.Uri;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.util.Log;
 
-import com.github.gorbin.asne.core.AccessToken;
+import com.facebook.CallbackManager;
+import com.facebook.FacebookCallback;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.internal.Utility;
+import com.facebook.login.LoginManager;
+import com.facebook.login.LoginResult;
+import com.facebook.share.ShareApi;
+import com.facebook.share.Sharer;
+import com.facebook.share.model.ShareLinkContent;
+import com.facebook.share.model.SharePhoto;
+import com.facebook.share.model.SharePhotoContent;
+import com.facebook.share.widget.ShareDialog;
 import com.github.gorbin.asne.core.SocialNetwork;
 import com.github.gorbin.asne.core.SocialNetworkException;
 import com.github.gorbin.asne.core.listener.OnCheckIsFriendCompleteListener;
@@ -44,63 +58,105 @@
 import com.github.gorbin.asne.core.listener.OnRequestSocialPersonCompleteListener;
 import com.github.gorbin.asne.core.listener.OnRequestSocialPersonsCompleteListener;
 import com.github.gorbin.asne.core.persons.SocialPerson;
-import com.facebook.FacebookAuthorizationException;
+
+import com.facebook.FacebookSdk;
 import com.facebook.FacebookException;
-import com.facebook.FacebookOperationCanceledException;
-import com.facebook.HttpMethod;
-import com.facebook.Request;
-import com.facebook.Response;
-import com.facebook.Session;
-import com.facebook.SessionDefaultAudience;
-import com.facebook.SessionLoginBehavior;
-import com.facebook.SessionState;
-import com.facebook.UiLifecycleHelper;
-import com.facebook.internal.SessionTracker;
-import com.facebook.internal.Utility;
-import com.facebook.model.GraphUser;
-import com.facebook.widget.FacebookDialog;
-import com.facebook.widget.WebDialog;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 /**
  * Class for Facebook social network integration
  *
- * @author Anton Krasov
  * @author Evgeny Gorbin (gorbin.e.o@gmail.com)
  */
 public class FacebookSocialNetwork extends SocialNetwork {
-
-    private String TAG = "asne_FacebookSocialNetwork";
     /*** Social network ID in asne modules, should be unique*/
     public static final int ID = 4;
 
     private static final String PERMISSION = "publish_actions";
-    private SessionTracker mSessionTracker;
-    private UiLifecycleHelper mUILifecycleHelper;
-    private String mApplicationId;
-    private SessionState mSessionState;
+    private Fragment fragment;
+    private CallbackManager callbackManager;
+    private com.github.gorbin.asne.core.AccessToken accessToken;
+    private ShareDialog shareDialog;
     private String mPhotoPath;
     private String mStatus;
     private Bundle mBundle;
-    private Context mContext;
-    private Fragment mFragment;
-    private ArrayList<String> permissions;
+    private List<String> permissions;
     private PendingAction mPendingAction = PendingAction.NONE;
-    private Session.StatusCallback mSessionStatusCallback = new Session.StatusCallback() {
+    private String requestID;
+    private FacebookCallback<LoginResult> LoginCallback = new FacebookCallback<LoginResult>() {
+        @Override
+        public void onSuccess(LoginResult loginResult) {
+            if (mLocalListeners.containsKey(REQUEST_LOGIN)) {
+                ((OnLoginCompleteListener) mLocalListeners.get(REQUEST_LOGIN)).onLoginSuccess(getID());
+                mLocalListeners.remove(REQUEST_LOGIN);
+            }
+            if(mPendingAction != PendingAction.NONE) {
+                handlePendingAction();
+            }
+            accessToken = new com.github.gorbin.asne.core.AccessToken(loginResult.getAccessToken().getToken(), null);
+
+        }
+
+        @Override
+        public void onCancel() {
+            if (mLocalListeners.containsKey(REQUEST_LOGIN)) {
+                mLocalListeners.get(REQUEST_LOGIN).onError(getID(), REQUEST_LOGIN, null, null);
+                mLocalListeners.remove(REQUEST_LOGIN);
+            }
+            if(mPendingAction != PendingAction.NONE) {
+                publishSuccess(requestID, "requestPermissions canceled");
+            }
+
+        }
+
+        @Override
+        public void onError(FacebookException exception) {
+
+            if (mLocalListeners.containsKey(REQUEST_LOGIN)) {
+                mLocalListeners.get(REQUEST_LOGIN).onError(getID(), REQUEST_LOGIN, exception.getMessage(), null);
+                mLocalListeners.remove(REQUEST_LOGIN);
+            }
+            if(mPendingAction != PendingAction.NONE) {
+                publishSuccess(requestID, exception.toString());
+            }
+        }
+    };
+    private FacebookCallback<Sharer.Result> ShareCallBack = new FacebookCallback<Sharer.Result>() {
+        @Override
+        public void onSuccess(Sharer.Result result) {
+            ((OnPostingCompleteListener) mLocalListeners.get(requestID)).onPostSuccessfully(getID());
+            mLocalListeners.remove(requestID);
+        }
+
+        @Override
+        public void onCancel() {
+            mLocalListeners.get(requestID).onError(getID(), requestID, "ShareDialog canceled", null);
+        }
+
         @Override
-        public void call(Session session, SessionState state, Exception exception) {
-            onSessionStateChange(session, state, exception);
+        public void onError(FacebookException error) {
+            mLocalListeners.get(requestID).onError(getID(), requestID, error.getLocalizedMessage(), null);
         }
     };
 
-    public FacebookSocialNetwork(Fragment fragment, Context context, ArrayList<String> permissions) {
-        super(fragment,context);
-        mFragment = fragment;
-        mContext = context;
-        String applicationID = Utility.getMetadataApplicationId(context);
+
+    //TODO: refactor to use an init that is shared by constructors
+    public FacebookSocialNetwork(Fragment fragment, Activity activity, ArrayList<String> permissions) {
+        super(fragment,activity);
+        this.fragment = fragment;
+        FacebookSdk.sdkInitialize(activity);
+        callbackManager = CallbackManager.Factory.create();
+        shareDialog = new ShareDialog(activity);
+        shareDialog.registerCallback(callbackManager, ShareCallBack);
+        String applicationID = Utility.getMetadataApplicationId(activity);
 
         if (applicationID == null) {
             throw new IllegalStateException("applicationID can't be null\n" +
@@ -108,8 +164,18 @@ public FacebookSocialNetwork(Fragment fragment, Context context, ArrayList<Strin
         }
         this.permissions = permissions;
     }
-
-
+//TODO
+//    public FacebookSocialNetwork(Fragment fragment, Context context, ArrayList<String> permissions) {
+//        super(fragment, context);
+//        FacebookSdk.sdkInitialize(fragment.getActivity().getApplicationContext());
+//        String applicationID = Utility.getMetadataApplicationId(context);
+//
+//        if (applicationID == null) {
+//            throw new IllegalStateException("applicationID can't be null\n" +
+//                    "Please check https://developers.facebook.com/docs/android/getting-started/");
+//        }
+//        this.permissions = permissions;
+//    }
 
     /**
      * Check is social network connected
@@ -117,8 +183,7 @@ public FacebookSocialNetwork(Fragment fragment, Context context, ArrayList<Strin
      */
     @Override
     public boolean isConnected() {
-        Session session = Session.getActiveSession();
-        return (session != null && session.isOpened());
+        return com.facebook.AccessToken.getCurrentAccessToken() != null;
     }
 
     /**
@@ -128,45 +193,17 @@ public boolean isConnected() {
     @Override
     public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
         super.requestLogin(onLoginCompleteListener);
+        LoginManager.getInstance().logInWithReadPermissions(fragment.getActivity(), permissions);
+        LoginManager.getInstance().registerCallback(callbackManager, LoginCallback);
+    }
 
-        Log.d(TAG, "request login");
-
-        final Session openSession = mSessionTracker.getOpenSession();
-
-        if (openSession != null) {
-            Log.d(TAG,"request login -> open session found");
-            if (mLocalListeners.get(REQUEST_LOGIN) != null) {
-                mLocalListeners.get(REQUEST_LOGIN).onError(getID(), REQUEST_LOGIN, "Already loginned", null);
-            }
-        }
-
-        Session currentSession = mSessionTracker.getSession();
-
-        if (currentSession != null) {
-            Log.d(TAG, "request login -> current session state " + currentSession.getState());
-        }
-
-        if (currentSession == null || currentSession.getState().isClosed()) {
-            mSessionTracker.setSession(null);
-            Session session = new Session.Builder(mSocialNetworkManager.getActivity())
-                    .setApplicationId(mApplicationId).build();
-            Session.setActiveSession(session);
-            currentSession = session;
-        }
-
-        if (!currentSession.isOpened()) {
-
-            Log.d(TAG, "request login -> current session isOpened");
-
-            Session.OpenRequest openRequest;
-            openRequest = new Session.OpenRequest(mSocialNetworkManager.getActivity());
-
-            openRequest.setDefaultAudience(SessionDefaultAudience.EVERYONE);
-            if(permissions != null) {
-                openRequest.setPermissions(permissions);
-            }
-            openRequest.setLoginBehavior(SessionLoginBehavior.SUPPRESS_SSO);
-            currentSession.openForRead(openRequest);
+    public void requestPublishEscalation() {
+        //Really want to ask for post permissions outside the normal expected route.
+        if(!com.facebook.AccessToken.getCurrentAccessToken().getPermissions().contains(PERMISSION)) {
+            Log.w("facebook login","requested publish");
+            LoginManager.getInstance().logInWithPublishPermissions(fragment, Collections.singletonList(PERMISSION));
+        } else {
+            Log.w("facebook login","no request needed");
         }
     }
 
@@ -177,8 +214,10 @@ public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
     @Override
     public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAccessTokenCompleteListener) {
         super.requestAccessToken(onRequestAccessTokenCompleteListener);
-        ((OnRequestAccessTokenCompleteListener) mLocalListeners.get(REQUEST_ACCESS_TOKEN))
-                .onRequestAccessTokenComplete(getID(), new AccessToken(Session.getActiveSession().getAccessToken(), null));
+        if(com.facebook.AccessToken.getCurrentAccessToken() != null) {
+            accessToken = new com.github.gorbin.asne.core.AccessToken(com.facebook.AccessToken.getCurrentAccessToken().getToken(), null);
+            ((OnRequestAccessTokenCompleteListener) mLocalListeners.get(REQUEST_ACCESS_TOKEN)).onRequestAccessTokenComplete(getID(), accessToken);
+        }
     }
 
     /**
@@ -186,34 +225,7 @@ public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAcc
      */
     @Override
     public void logout() {
-
-        Log.d(TAG,"logout");
-
-        if (mSessionTracker == null){
-            Log.d(TAG,"logout failed. no Session tracker");
-            return;
-        }
-
-        Session openSession = mSessionTracker.getOpenSession();
-
-        if (openSession != null) {
-            Log.d(TAG,"logout -> clear open session");
-            openSession.closeAndClearTokenInformation();
-            openSession.close();
-        }
-
-        Session currentSession = mSessionTracker.getSession();
-
-        if (currentSession != null) {
-
-            Log.d(TAG,"logout -> clear current session");
-            currentSession.closeAndClearTokenInformation();
-            currentSession.close();
-        }
-
-        if (mFragment != null && mFragment.getActivity() != null) {
-            mApplicationId = Utility.getMetadataApplicationId(mFragment.getActivity());
-        }
+        LoginManager.getInstance().logOut();
     }
 
     /**
@@ -229,9 +241,12 @@ public int getID() {
      * Method to get AccessToken of Facebook social network
      * @return {@link com.github.gorbin.asne.core.AccessToken}
      */
-	@Override
-    public AccessToken getAccessToken() {
-        return new AccessToken(Session.getActiveSession().getAccessToken(), null);
+    @Override
+    public com.github.gorbin.asne.core.AccessToken getAccessToken() {
+        if(com.facebook.AccessToken.getCurrentAccessToken() != null) {
+            accessToken = new com.github.gorbin.asne.core.AccessToken(com.facebook.AccessToken.getCurrentAccessToken().getToken(), null);
+        }
+        return accessToken;
     }
 
     /**
@@ -242,9 +257,7 @@ public AccessToken getAccessToken() {
     public void requestCurrentPerson(OnRequestSocialPersonCompleteListener onRequestSocialPersonCompleteListener) {
         super.requestCurrentPerson(onRequestSocialPersonCompleteListener);
 
-        final Session currentSession = mSessionTracker.getOpenSession();
-
-        if (currentSession == null) {
+        if (com.facebook.AccessToken.getCurrentAccessToken() == null) {
             if (mLocalListeners.get(REQUEST_GET_CURRENT_PERSON) != null) {
                 mLocalListeners.get(REQUEST_GET_CURRENT_PERSON).onError(getID(),
                         REQUEST_GET_PERSON, "Please login first", null);
@@ -252,25 +265,34 @@ public void requestCurrentPerson(OnRequestSocialPersonCompleteListener onRequest
             return;
         }
 
-        Request request = Request.newMeRequest(currentSession, new Request.GraphUserCallback() {
-            @Override
-            public void onCompleted(GraphUser me, Response response) {
-                if (response.getError() != null) {
-                    if (mLocalListeners.get(REQUEST_GET_CURRENT_PERSON) != null) {
-                        mLocalListeners.get(REQUEST_GET_CURRENT_PERSON).onError(
-                                getID(), REQUEST_GET_CURRENT_PERSON, response.getError().getErrorMessage()
-                                , null);
+        GraphRequest request = GraphRequest.newMeRequest(
+                com.facebook.AccessToken.getCurrentAccessToken(), new GraphRequest.GraphJSONObjectCallback() {
+                    @Override
+                    public void onCompleted(JSONObject me, GraphResponse response) {
+                        if (response.getError() != null) {
+                            if (mLocalListeners.get(REQUEST_GET_CURRENT_PERSON) != null) {
+                                mLocalListeners.get(REQUEST_GET_CURRENT_PERSON).onError(
+                                        getID(), REQUEST_GET_CURRENT_PERSON, response.getError().getErrorMessage(), null);
+                            }
+                            return;
+                        }
+                        if (mLocalListeners.get(REQUEST_GET_CURRENT_PERSON) != null) {
+                            SocialPerson socialPerson = new SocialPerson();
+                            try {
+                                getSocialPerson(socialPerson, me);
+                            } catch (JSONException e) {
+                                e.printStackTrace();
+                                mLocalListeners.get(REQUEST_GET_CURRENT_PERSON).onError(
+                                        getID(), REQUEST_GET_CURRENT_PERSON, e.getLocalizedMessage(), null);
+                            }
+                            ((OnRequestSocialPersonCompleteListener) mLocalListeners.get(REQUEST_GET_CURRENT_PERSON))
+                                    .onRequestSocialPersonSuccess(getID(), socialPerson);
+                        }
                     }
-                    return;
-                }
-                if (mLocalListeners.get(REQUEST_GET_CURRENT_PERSON) != null) {
-                    SocialPerson socialPerson = new SocialPerson();
-                    getSocialPerson(socialPerson, me);
-                    ((OnRequestSocialPersonCompleteListener) mLocalListeners.get(REQUEST_GET_CURRENT_PERSON))
-                            .onRequestSocialPersonSuccess(getID(), socialPerson);
-                }
-            }
-        });
+                });
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "id,name,email,link");
+        request.setParameters(parameters);
         request.executeAsync();
     }
 
@@ -291,11 +313,12 @@ public void requestSocialPerson(String userID, OnRequestSocialPersonCompleteList
      * @param userID array of user ids in social network
      * @param onRequestSocialPersonsCompleteListener listener for request ArrayList of {@link com.github.gorbin.asne.core.persons.SocialPerson}
      */
-	@Override
+    @Override
     public void requestSocialPersons(String[] userID, OnRequestSocialPersonsCompleteListener onRequestSocialPersonsCompleteListener) {
         throw new SocialNetworkException("requestSocialPersons isn't allowed for FacebookSocialNetwork");
     }
 
+    //TODO set up right link
     /**
      * Request user {@link com.github.gorbin.asne.facebook.FacebookPerson} by userId - detailed user data
      * @param userId user id in social network
@@ -304,69 +327,93 @@ public void requestSocialPersons(String[] userID, OnRequestSocialPersonsComplete
     @Override
     public void requestDetailedSocialPerson(String userId, OnRequestDetailedSocialPersonCompleteListener onRequestDetailedSocialPersonCompleteListener) {
         super.requestDetailedSocialPerson(userId, onRequestDetailedSocialPersonCompleteListener);
-        final Session currentSession = mSessionTracker.getOpenSession();
 
-        if (currentSession == null) {
-            if (mLocalListeners.get(REQUEST_GET_DETAIL_PERSON) != null) {
-                mLocalListeners.get(REQUEST_GET_DETAIL_PERSON).onError(getID(),
-                        REQUEST_GET_DETAIL_PERSON, "Please login first", null);
+        if(userId != null){
+            throw new SocialNetworkException("requestDetailedSocialPerson isn't allowed for FacebookSocialNetwork");
+        } else {
+            if (com.facebook.AccessToken.getCurrentAccessToken() == null) {
+                if (mLocalListeners.get(REQUEST_GET_DETAIL_PERSON) != null) {
+                    mLocalListeners.get(REQUEST_GET_DETAIL_PERSON).onError(getID(),
+                            REQUEST_GET_DETAIL_PERSON, "Please login first", null);
+                }
+                return;
             }
 
-            return;
+            GraphRequest request = GraphRequest.newMeRequest(
+                    com.facebook.AccessToken.getCurrentAccessToken(), new GraphRequest.GraphJSONObjectCallback() {
+                        @Override
+                        public void onCompleted(JSONObject me, GraphResponse response) {
+                            if (response.getError() != null) {
+                                if (mLocalListeners.get(REQUEST_GET_DETAIL_PERSON) != null) {
+                                    mLocalListeners.get(REQUEST_GET_DETAIL_PERSON).onError(
+                                            getID(), REQUEST_GET_DETAIL_PERSON, response.getError().getErrorMessage(), null);
+                                }
+                                return;
+                            }
+                            if (mLocalListeners.get(REQUEST_GET_DETAIL_PERSON) != null) {
+                                FacebookPerson facebookPerson = new FacebookPerson();
+                                try {
+                                    getDetailedSocialPerson(facebookPerson, me);
+                                } catch (JSONException e) {
+                                    e.printStackTrace();
+                                    mLocalListeners.get(REQUEST_GET_DETAIL_PERSON).onError(
+                                            getID(), REQUEST_GET_DETAIL_PERSON, e.getLocalizedMessage(), null);
+                                }
+                                ((OnRequestDetailedSocialPersonCompleteListener) mLocalListeners.get(REQUEST_GET_DETAIL_PERSON))
+                                        .onRequestDetailedSocialPersonSuccess(getID(), facebookPerson);
+                            }
+                        }
+                    });
+            Bundle parameters = new Bundle();
+            parameters.putString("fields", "id,name,email,link,about,bio,birthday," +
+                    "first_name,gender,hometown,is_verified,last_name,locale,middle_name," +
+                    "timezone,updated_time,verified,website,cover");
+            request.setParameters(parameters);
+            request.executeAsync();
         }
+    }
 
-        Request request = Request.newMeRequest(currentSession, new Request.GraphUserCallback() {
-            @Override
-            public void onCompleted(GraphUser me, Response response) {
-                if (response.getError() != null) {
-                    if (mLocalListeners.get(REQUEST_GET_DETAIL_PERSON) != null) {
-                        mLocalListeners.get(REQUEST_GET_DETAIL_PERSON).onError(
-                                getID(), REQUEST_GET_DETAIL_PERSON, response.getError().getErrorMessage()
-                                , null);
-                    }
-                    return;
-                }
 
-                if (mLocalListeners.get(REQUEST_GET_DETAIL_PERSON) != null) {
-                    FacebookPerson facebookPerson = new FacebookPerson();
-                    getDetailedSocialPerson(facebookPerson, me);
+    private SocialPerson getSocialPerson(SocialPerson socialPerson, JSONObject user) throws JSONException {
 
-                    ((OnRequestDetailedSocialPersonCompleteListener) mLocalListeners.get(REQUEST_GET_DETAIL_PERSON))
-                            .onRequestDetailedSocialPersonSuccess(getID(), facebookPerson);
-                }
+        if(user.has("id")) {
+            socialPerson.id = user.getString("id");
+            socialPerson.avatarURL = String.format("https://graph.facebook.com/%s/picture?type=large", user.getString("id"));
+            if(user.has("link")) {
+                socialPerson.profileURL = user.getString("link");
+            } else {
+                socialPerson.profileURL = String.format("https://www.facebook.com/", user.getString("id"));
             }
-        });
-        request.executeAsync();
-    }
-
-    private SocialPerson getSocialPerson(SocialPerson socialPerson, GraphUser user){
-        socialPerson.id = user.getId();
-        socialPerson.name = user.getName();
-        socialPerson.avatarURL = String.format("https://graph.facebook.com/%s/picture?type=large", user.getId());
-        if(user.getLink() != null) {
-            socialPerson.profileURL = user.getLink();
-        } else {
-            socialPerson.profileURL = String.format("https://www.facebook.com/", user.getId());
         }
-        if(user.getProperty("email") != null){
-            socialPerson.email = user.getProperty("email").toString();
+        if(user.has("name")) {
+            socialPerson.name = user.getString("name");
+        }
+        if(user.has("email")) {
+            socialPerson.email = user.getString("email");
         }
         return socialPerson;
     }
 
-	private FacebookPerson getDetailedSocialPerson(FacebookPerson facebookPerson, GraphUser user){
+    private FacebookPerson getDetailedSocialPerson(FacebookPerson facebookPerson, JSONObject user) throws JSONException {
         getSocialPerson(facebookPerson, user);
-        facebookPerson.firstName = user.getFirstName();
-        facebookPerson.middleName = user.getMiddleName();
-        facebookPerson.lastName = user.getLastName();
-        if(user.getProperty("gender") != null) {
-            facebookPerson.gender = user.getProperty("gender").toString();
+        if(user.has("first_name")) {
+            facebookPerson.firstName = user.getString("first_name");
+        }
+        if(user.has("middle_name")) {
+            facebookPerson.middleName = user.getString("middle_name");
         }
-        facebookPerson.birthday = user.getBirthday();
-        if(user.getLocation() != null) {
-            facebookPerson.city = user.getLocation().getProperty("name").toString();
+        if(user.has("last_name")) {
+            facebookPerson.lastName = user.getString("last_name");
+        }
+        if(user.has("gender")) {
+            facebookPerson.gender = user.getString("gender");
+        }
+        if(user.has("birthday")) {
+            facebookPerson.birthday = user.getString("birthday");
+        }
+        if(user.has("verified")) {
+            facebookPerson.verified = user.getString("verified");
         }
-        facebookPerson.verified = user.getProperty("verified").toString();
         return facebookPerson;
     }
 
@@ -379,7 +426,9 @@ private FacebookPerson getDetailedSocialPerson(FacebookPerson facebookPerson, Gr
     public void requestPostMessage(String message, OnPostingCompleteListener onPostingCompleteListener) {
         super.requestPostMessage(message, onPostingCompleteListener);
         mStatus = message;
+        requestID = REQUEST_POST_MESSAGE;
         performPublish(PendingAction.POST_STATUS_UPDATE);
+        postStatusUpdate(mStatus);
     }
 
     /**
@@ -393,7 +442,9 @@ public void requestPostPhoto(File photo, String message, OnPostingCompleteListen
         super.requestPostPhoto(photo, message, onPostingCompleteListener);
         mPhotoPath = photo.getAbsolutePath();
         mStatus = message;
+        requestID = REQUEST_POST_PHOTO;
         performPublish(PendingAction.POST_PHOTO);
+        postPhoto(mPhotoPath, message);
     }
 
     /**
@@ -406,7 +457,9 @@ public void requestPostPhoto(File photo, String message, OnPostingCompleteListen
     public void requestPostLink(Bundle bundle, String message, OnPostingCompleteListener onPostingCompleteListener) {
         super.requestPostLink(bundle, message, onPostingCompleteListener);
         mBundle = bundle;
+        requestID = REQUEST_POST_LINK;
         performPublish(PendingAction.POST_LINK);
+        postLink(mBundle);
     }
 
     /**
@@ -417,98 +470,36 @@ public void requestPostLink(Bundle bundle, String message, OnPostingCompleteList
     @Override
     public void requestPostDialog(Bundle bundle, OnPostingCompleteListener onPostingCompleteListener) {
         super.requestPostDialog(bundle, onPostingCompleteListener);
-
-        if (mSocialNetworkManager.getActivity() == null){
-            Log.e(TAG,"error no activiy");
-        }
-
-        if (FacebookDialog.canPresentShareDialog(mContext,
-                FacebookDialog.ShareDialogFeature.SHARE_DIALOG)) {
-            FacebookDialog shareDialog = new FacebookDialog.ShareDialogBuilder((Activity)mContext)
-                    .setLink(bundle.getString(BUNDLE_LINK))
-                    .setDescription(bundle.getString(BUNDLE_MESSAGE))
-                    .setName(bundle.getString(BUNDLE_NAME))
-                    .setApplicationName(bundle.getString(BUNDLE_APP_NAME))
-                    .setCaption(bundle.getString(BUNDLE_CAPTION))
-                    .setPicture(bundle.getString(BUNDLE_PICTURE))
-
-//                    .setFriends(bundle.getStringArrayList(DIALOG_FRIENDS))
+        Uri link = null;
+        Uri pictureLink = null;
+        if (ShareDialog.canShow(ShareLinkContent.class)) {
+            if (bundle.getString(BUNDLE_LINK) != null) {
+                link = Uri.parse(bundle.getString(BUNDLE_LINK));
+            } else {
+                Log.e("FaceboolSocialNetwork:", "requestPostDialog required URL to share!");
+            }
+            if (bundle.getString(BUNDLE_PICTURE) != null) {
+                pictureLink = Uri.parse(bundle.getString(BUNDLE_PICTURE));
+            }
+            ShareLinkContent linkContent = new ShareLinkContent.Builder()
+                    .setContentTitle(bundle.getString(BUNDLE_NAME))
+                    .setContentDescription(bundle.getString(BUNDLE_MESSAGE))
+                    .setContentUrl(link)
+                    .setImageUrl(pictureLink)
                     .build();
-            mUILifecycleHelper.trackPendingDialogCall(shareDialog.present());
+            shareDialog.show(linkContent);
         } else {
-            publishFeedDialog(bundle);
+            mLocalListeners.get(REQUEST_POST_DIALOG).onError(
+                    getID(), REQUEST_POST_DIALOG, "Can't show share dialog, check login or permissions", null);
         }
     }
 
-    private void publishFeedDialog(Bundle bundle) {
-        Bundle params = new Bundle();
-        params.putString("name", bundle.getString(BUNDLE_NAME));
-        params.putString("caption", bundle.getString(BUNDLE_CAPTION));
-        params.putString("description", bundle.getString(BUNDLE_MESSAGE));
-        params.putString("link", bundle.getString(BUNDLE_LINK));
-        params.putString("picture", bundle.getString(BUNDLE_PICTURE));
-
-        WebDialog feedDialog = (
-                new WebDialog.FeedDialogBuilder(mSocialNetworkManager.getActivity(),
-                        Session.getActiveSession(),
-                        params))
-                .setOnCompleteListener(new WebDialog.OnCompleteListener() {
-                    @Override
-                    public void onComplete(Bundle values,
-                                           FacebookException error) {
-                        if (error == null) {
-                            final String postId = values.getString("post_id");
-                            if (postId != null) {
-                                ((OnPostingCompleteListener) mLocalListeners.get(REQUEST_POST_DIALOG)).onPostSuccessfully(getID());
-                            } else {
-                                mLocalListeners.get(REQUEST_POST_DIALOG).onError(getID(),
-                                        REQUEST_POST_DIALOG, "Canceled", null);
-                            }
-                        } else {
-                            mLocalListeners.get(REQUEST_POST_DIALOG).onError(getID(),
-                                    REQUEST_POST_DIALOG, "Canceled: " + error.toString(), null);
-                        }
-                        mLocalListeners.remove(REQUEST_POST_DIALOG);
-                    }
-                })
-                .build();
-        feedDialog.show();
-    }
-
     private void performPublish(PendingAction action) {
-        Session session = Session.getActiveSession();
-        if (session != null) {
+        if(com.facebook.AccessToken.getCurrentAccessToken() != null) {
             mPendingAction = action;
-            if (session.isPermissionGranted(PERMISSION)) {
-                // We can do the action right away.
-                handlePendingAction();
-                return;
-            } else if (session.isOpened()) {
-                // We need to get new permissions, then complete the action when we get called back.
-                session.requestNewPublishPermissions(new Session.NewPermissionsRequest(mSocialNetworkManager.getActivity(), PERMISSION));
-                return;
-            }
-        }
-
-        if (action == PendingAction.POST_STATUS_UPDATE) {
-            if (mLocalListeners.get(REQUEST_POST_MESSAGE) != null) {
-                mLocalListeners.get(REQUEST_POST_MESSAGE).onError(getID(),
-                        REQUEST_POST_MESSAGE, "no session", null);
-            }
-        }
-
-        if (action == PendingAction.POST_PHOTO) {
-            if (mLocalListeners.get(REQUEST_POST_PHOTO) != null) {
-                mLocalListeners.get(REQUEST_POST_PHOTO).onError(getID(),
-                        REQUEST_POST_PHOTO, "no session", null);
-            }
-        }
-
-        if (action == PendingAction.POST_LINK) {
-            if (mLocalListeners.get(REQUEST_POST_LINK) != null) {
-                mLocalListeners.get(REQUEST_POST_LINK).onError(getID(),
-                        REQUEST_POST_LINK, "no session", null);
-            }
+        } else {
+            mLocalListeners.get(requestID).onError(getID(),
+                    requestID, "User should be logged first", null);
         }
     }
 
@@ -526,42 +517,62 @@ public void requestCheckIsFriend(String userID, OnCheckIsFriendCompleteListener
      * Get current user friends list
      * @param onRequestGetFriendsCompleteListener listener for getting list of current user friends
      */
-	@Override
+    //TODO: Pagination
+    @Override
     public void requestGetFriends(OnRequestGetFriendsCompleteListener onRequestGetFriendsCompleteListener) {
         super.requestGetFriends(onRequestGetFriendsCompleteListener);
-		final Session currentSession = mSessionTracker.getOpenSession();
 
-        if (currentSession == null) {
-            if (mLocalListeners.get(REQUEST_GET_FRIENDS) != null) {
-                mLocalListeners.get(REQUEST_GET_FRIENDS).onError(getID(),
-                        REQUEST_GET_FRIENDS, "Please login first", null);
+        if (com.facebook.AccessToken.getCurrentAccessToken() == null) {
+            if (mLocalListeners.get(REQUEST_GET_CURRENT_PERSON) != null) {
+                mLocalListeners.get(REQUEST_GET_CURRENT_PERSON).onError(getID(),
+                        REQUEST_GET_PERSON, "Please login first", null);
             }
-
             return;
         }
 
-        Request request = Request.newMyFriendsRequest(currentSession, new Request.GraphUserListCallback() {
-            @Override
-            public void onCompleted(List<GraphUser> users, Response response) {
-                String[] ids = new String[users.size()];
-                ArrayList<SocialPerson> socialPersons = new ArrayList<SocialPerson>();
-                SocialPerson socialPerson = new SocialPerson();
-                int i = 0;
-                for(GraphUser user : users) {
-                    getSocialPerson(socialPerson, user);
-                    socialPersons.add(socialPerson);
-                    socialPerson = new SocialPerson();
-                    ids[i] = user.getId();
-                    i++;
-                }
-                ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                        .OnGetFriendsIdComplete(getID(), ids);
-                ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                        .OnGetFriendsComplete(getID(), socialPersons);
-                mLocalListeners.remove(REQUEST_GET_FRIENDS);
-            }
-        });
+        GraphRequest request = GraphRequest.newMyFriendsRequest(
+                com.facebook.AccessToken.getCurrentAccessToken(), new GraphRequest.GraphJSONArrayCallback() {
+                    @Override
+                    public void onCompleted(JSONArray list, GraphResponse response) {
+                        if (response.getError() != null) {
+                            if (mLocalListeners.get(REQUEST_GET_FRIENDS) != null) {
+                                mLocalListeners.get(REQUEST_GET_FRIENDS).onError(
+                                        getID(), REQUEST_GET_FRIENDS, response.getError().getErrorMessage(), null);
+                            }
+                            return;
+                        }
+                        if (mLocalListeners.get(REQUEST_GET_FRIENDS) != null) {
+                            String[] ids = new String[list.length()];
+                            ArrayList<SocialPerson> socialPersons = new ArrayList<>();
+                            try {
+                                SocialPerson socialPerson = new SocialPerson();
+                                for(int i = 0; i < list.length(); i++) {
+                                    getSocialPerson(socialPerson, list.getJSONObject(i));
+                                    socialPersons.add(socialPerson);
+                                    socialPerson = new SocialPerson();
+                                    if(list.getJSONObject(i).has("id")) {
+                                        ids[i] = list.getJSONObject(i).getString("id");
+                                    }
+                                }
+                            } catch (JSONException e) {
+                                e.printStackTrace();
+                                mLocalListeners.get(REQUEST_GET_FRIENDS).onError(
+                                        getID(), REQUEST_GET_FRIENDS, e.getLocalizedMessage(), null);
+                            }
+
+
+
+                            ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS)).OnGetFriendsIdComplete(getID(),ids);
+                            ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS)).OnGetFriendsComplete(getID(),socialPersons);
+                            mLocalListeners.remove(REQUEST_GET_FRIENDS);
+                        }
+                    }
+                });
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "id,name,email,link");
+        request.setParameters(parameters);
         request.executeAsync();
+
     }
 
     /**
@@ -586,151 +597,6 @@ public void requestRemoveFriend(String userID, OnRequestRemoveFriendCompleteList
         throw new SocialNetworkException("requestRemoveFriend isn't allowed for FacebookSocialNetwork");
     }
 
-    private void onSessionStateChange(Session session, SessionState state, Exception exception) {
-
-        if (mSessionState == SessionState.OPENING && state == SessionState.OPENED) {
-            if (mLocalListeners.get(REQUEST_LOGIN) != null) {
-                ((OnLoginCompleteListener) mLocalListeners.get(REQUEST_LOGIN)).onLoginSuccess(getID());
-                mLocalListeners.remove(REQUEST_LOGIN);
-            }
-        }
-
-        if (state == SessionState.CLOSED_LOGIN_FAILED) {
-            if (mLocalListeners.get(REQUEST_LOGIN) != null) {
-                mLocalListeners.get(REQUEST_LOGIN).onError(getID(), REQUEST_LOGIN, exception.getMessage(), null);
-                mLocalListeners.remove(REQUEST_LOGIN);
-            }
-        }
-
-        mSessionState = state;
-
-        if (mPendingAction != PendingAction.NONE &&
-                (exception instanceof FacebookOperationCanceledException ||
-                        exception instanceof FacebookAuthorizationException)) {
-            mPendingAction = PendingAction.NONE;
-
-            if (mLocalListeners.get(REQUEST_POST_MESSAGE) != null) {
-                mLocalListeners.get(REQUEST_POST_MESSAGE).onError(getID(),
-                        REQUEST_POST_MESSAGE, "permission not granted", null);
-            }
-
-            if (mLocalListeners.get(REQUEST_POST_PHOTO) != null) {
-                mLocalListeners.get(REQUEST_POST_PHOTO).onError(getID(),
-                        REQUEST_POST_PHOTO, "permission not granted", null);
-            }
-
-            if (mLocalListeners.get(REQUEST_POST_LINK) != null) {
-                mLocalListeners.get(REQUEST_POST_LINK).onError(getID(),
-                        REQUEST_POST_LINK, "permission not granted", null);
-            }
-        }
-
-        if (session.isPermissionGranted(PERMISSION)
-                && state == SessionState.OPENED_TOKEN_UPDATED) {
-            handlePendingAction();
-        }
-    }
-
-    /**
-     * Overrided for connect facebook to activity
-     * @param savedInstanceState If the activity is being re-initialized after previously being shut down then this Bundle contains the data it most recently supplied in onSaveInstanceState(Bundle). Note: Otherwise it is null.
-     */
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        try {
-            mUILifecycleHelper = new UiLifecycleHelper((Activity)mContext, mSessionStatusCallback);
-            mUILifecycleHelper.onCreate(savedInstanceState);
-
-            initializeActiveSessionWithCachedToken((Activity)mContext);
-            finishInit();
-        }
-        catch(Exception e){
-
-        }
-    }
-
-    private boolean initializeActiveSessionWithCachedToken(Context context) {
-
-        if (context == null) {
-            return false;
-        }
-
-        Session session = Session.getActiveSession();
-        if (session != null) {
-            return session.isOpened();
-        }
-
-        mApplicationId = Utility.getMetadataApplicationId(context);
-        return mApplicationId != null && Session.openActiveSessionFromCache(context) != null;
-
-    }
-
-    private void finishInit() {
-        mSessionTracker = new SessionTracker(
-                mSocialNetworkManager.getActivity(), mSessionStatusCallback, null, false);
-    }
-
-    /**
-     * Overrided for facebook connect in resume activity
-     */
-    @Override
-    public void onResume() {
-        super.onResume();
-
-        try {
-            mUILifecycleHelper.onResume();
-        }
-        catch(Exception e){
-
-        }
-    }
-
-    /**
-     * Overrided for facebook connect in pause
-     */
-    @Override
-    public void onPause() {
-        super.onPause();
-
-        try {
-            mUILifecycleHelper.onPause();
-        }
-        catch(Exception e){
-
-        }
-    }
-
-    /**
-     * Overrided for destroying facebook session
-     */
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-
-        try {
-            mUILifecycleHelper.onDestroy();
-        }
-        catch(Exception e){
-
-        }
-    }
-
-    /**
-     * Overrided for facebook
-     * @param outState Bundle in which to place your saved state.
-     */
-    @Override
-    public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        try {
-            mUILifecycleHelper.onSaveInstanceState(outState);
-        }
-        catch(Exception e){
-
-        }
-    }
-
     /**
      * Overrided for facebook
      * @param requestCode The integer request code originally supplied to startActivityForResult(), allowing you to identify who this result came from.
@@ -740,31 +606,11 @@ public void onSaveInstanceState(Bundle outState) {
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
-        mUILifecycleHelper.onActivityResult(requestCode, resultCode, data, null);
-
-        Session session = Session.getActiveSession();
-        int sanitizedRequestCode = requestCode % 0x10000;
-        if (session != null) {
-            session.onActivityResult(mSocialNetworkManager.getActivity(), sanitizedRequestCode, resultCode, data);
-        }
-
-        mUILifecycleHelper.onActivityResult(requestCode, resultCode, data, new FacebookDialog.Callback() {
-            @Override
-            public void onError(FacebookDialog.PendingCall pendingCall, Exception error, Bundle data) {
-                Log.e("Activity", String.format("Error: %s", error.toString()));
-            }
-
-            @Override
-            public void onComplete(FacebookDialog.PendingCall pendingCall, Bundle data) {
-
-            }
-        });
+        callbackManager.onActivityResult(requestCode, resultCode, data);
     }
 
     private void handlePendingAction() {
-
         PendingAction previouslyPendingAction = mPendingAction;
-
         // These actions may re-set pendingAction if they are still pending, but we assume they
         // will succeed.
         mPendingAction = PendingAction.NONE;
@@ -783,56 +629,144 @@ private void handlePendingAction() {
     }
 
     private void postStatusUpdate(String message) {
-        if (isConnected() && Session.getActiveSession().isPermissionGranted(PERMISSION)){
-            Request request = Request
-                    .newStatusUpdateRequest(Session.getActiveSession(), message, null, null, new Request.Callback() {
-                        @Override
-                        public void onCompleted(Response response) {
-                            publishSuccess(REQUEST_POST_MESSAGE,
-                                    response.getError() == null ? null : response.getError().getErrorMessage());
-                        }
-                    });
-            request.executeAsync();
+        ShareLinkContent content = new ShareLinkContent.Builder()
+                .build();
+
+        if (ShareDialog.canShow(ShareLinkContent.class)) {
+            shareDialog.show(content);
         } else {
-            mPendingAction = PendingAction.POST_STATUS_UPDATE;
+            if(com.facebook.AccessToken.getCurrentAccessToken().getPermissions().contains(PERMISSION)){
+                ShareApi.share(content, new FacebookCallback<Sharer.Result>() {
+                    @Override
+                    public void onSuccess(Sharer.Result result) {
+                        Log.v("FACEBOOK_TEST", "share api success");
+                        publishSuccess(REQUEST_POST_MESSAGE, null);
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        Log.v("FACEBOOK_TEST", "share api cancel");
+                        publishSuccess(REQUEST_POST_MESSAGE, "postRequestMessage canceled");
+                    }
+
+                    @Override
+                    public void onError(FacebookException e) {
+                        Log.v("FACEBOOK_TEST", "share api error " + e);
+                        publishSuccess(REQUEST_POST_MESSAGE, e.toString());
+                    }
+                });
+            } else {
+                LoginManager.getInstance().logInWithPublishPermissions(
+                        fragment.getActivity(), Collections.singletonList(PERMISSION));//Arrays.asList("publish_actions"));
+            }
         }
     }
 
     private void postPhoto(final String path, final String message) {
-        if (Session.getActiveSession().isPermissionGranted(PERMISSION)){
-            Bitmap image = BitmapFactory.decodeFile(path);
-            Request request = Request.newUploadPhotoRequest(Session.getActiveSession(), image, new Request.Callback() {
-                @Override
-                public void onCompleted(Response response) {
-                    publishSuccess(REQUEST_POST_PHOTO,
-                            response.getError() == null ? null : response.getError().getErrorMessage());
-                }
-            });
-            if(message != null && message.length()>0) {
-                Bundle parameters = request.getParameters();
-                parameters.putString("message", message);
-                request.setParameters(parameters);
-            }
-            request.executeAsync();
+        Bitmap image = BitmapFactory.decodeFile(path);
+        SharePhoto photo = new SharePhoto.Builder()
+                .setBitmap(image)
+                .setCaption(message)
+                .build();
+        SharePhotoContent content = new SharePhotoContent.Builder()
+                .addPhoto(photo)
+                .build();
+
+        if (ShareDialog.canShow(SharePhotoContent.class)) {
+            shareDialog.show(content);
         } else {
-            mPendingAction = PendingAction.POST_PHOTO;
+            if(com.facebook.AccessToken.getCurrentAccessToken().getPermissions().contains(PERMISSION)){
+                ShareApi.share(content, new FacebookCallback<Sharer.Result>() {
+                    @Override
+                    public void onSuccess(Sharer.Result result) {
+                        Log.v("FACEBOOK_TEST", "share api success");
+                        publishSuccess(REQUEST_POST_PHOTO, null);
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        Log.v("FACEBOOK_TEST", "share api cancel");
+                        publishSuccess(REQUEST_POST_PHOTO, "postRequestPhoto canceled");
+                    }
+
+                    @Override
+                    public void onError(FacebookException e) {
+                        Log.v("FACEBOOK_TEST", "share api error " + e);
+                        publishSuccess(REQUEST_POST_PHOTO, e.toString());
+                    }
+                });
+            } else {
+                LoginManager.getInstance().logInWithPublishPermissions(
+                        fragment.getActivity(), Collections.singletonList(PERMISSION)); //Arrays.asList("publish_actions"));
+            }
         }
     }
 
     private void postLink(final Bundle bundle) {
-        if (Session.getActiveSession().isPermissionGranted(PERMISSION)){
-            Request request = new Request(Session.getActiveSession(), "me/feed", bundle,
-                    HttpMethod.POST, new Request.Callback(){
-                @Override
-                public void onCompleted(Response response) {
-                    publishSuccess(REQUEST_POST_LINK,
-                            response.getError() == null ? null : response.getError().getErrorMessage());
-                }
-            });
-            request.executeAsync();
+
+//        JSONObject object = new JSONObject();
+//        try {
+//            object.put("message", "wat");
+//        } catch (JSONException e) {
+//            e.printStackTrace();
+//        }
+//        GraphRequest request =  GraphRequest.newPostRequest(com.facebook.AccessToken.getCurrentAccessToken(), "me/feed",
+//                object, new GraphRequest.Callback(){
+//
+//                    @Override
+//                    public void onCompleted(GraphResponse response) {
+//                        Log.v("wat", response.toString());
+//                    }
+//                });
+//        request.executeAsync();
+
+        Uri link = null;
+        Uri pictureLink = null;
+        if (bundle.getString(BUNDLE_LINK) != null) {
+            link = Uri.parse(bundle.getString(BUNDLE_LINK));
         } else {
-            mPendingAction = PendingAction.POST_PHOTO;
+            Log.e("FaceboolSocialNetwork:", "requestPostLink required URL to share!");
+            publishSuccess(REQUEST_POST_LINK, "postRequestLink required URL to share!");
+        }
+        if (bundle.getString(BUNDLE_PICTURE) != null) {
+            pictureLink = Uri.parse(bundle.getString(BUNDLE_PICTURE));
         }
+        ShareLinkContent content = new ShareLinkContent.Builder()
+                .setContentTitle(bundle.getString(BUNDLE_NAME))
+                .setContentDescription(bundle.getString(BUNDLE_MESSAGE))
+                .setContentUrl(link)
+                .setImageUrl(pictureLink)
+                .build();
+
+        if (ShareDialog.canShow(ShareLinkContent.class)) {
+            shareDialog.show(content);
+        } else {
+            if(com.facebook.AccessToken.getCurrentAccessToken().getPermissions().contains(PERMISSION)){
+                ShareApi.share(content, new FacebookCallback<Sharer.Result>() {
+                    @Override
+                    public void onSuccess(Sharer.Result result) {
+                        Log.v("FACEBOOK_TEST", "share api success");
+                        publishSuccess(REQUEST_POST_LINK, null);
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        Log.v("FACEBOOK_TEST", "share api cancel");
+                        publishSuccess(REQUEST_POST_LINK, "postRequestLink canceled");
+                    }
+
+                    @Override
+                    public void onError(FacebookException e) {
+                        Log.v("FACEBOOK_TEST", "share api error " + e);
+                        publishSuccess(REQUEST_POST_LINK, e.toString());
+                    }
+                });
+            } else {
+                LoginManager.getInstance().logInWithPublishPermissions(
+                        fragment.getActivity(), Collections.singletonList("publish_actions"));
+            }
+        }
+
     }
 
     private void publishSuccess(String requestID, String error) {
diff --git a/googleplus/.gitignore b/googleplus/.gitignore
old mode 100644
new mode 100755
diff --git a/googleplus/build.gradle b/googleplus/build.gradle
old mode 100644
new mode 100755
index 46d1768..a960c9b
--- a/googleplus/build.gradle
+++ b/googleplus/build.gradle
@@ -1,16 +1,40 @@
 apply plugin: 'com.android.library'
 
 android {
+<<<<<<< HEAD
     compileSdkVersion 21
     buildToolsVersion '22.0.1'
 
     defaultConfig {
         minSdkVersion 11
         targetSdkVersion 21
+=======
+    compileSdkVersion 23
+    buildToolsVersion "21.1.1"
+
+    defaultConfig {
+        //applicationId "com.github.gorbin.asne.googleplus"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     }
 }
 
 dependencies {
+<<<<<<< HEAD
+=======
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile 'com.android.support:appcompat-v7:23.1.1'
+    compile('com.google.android.gms:play-services:6.5.+@aar') { exclude module: 'support-v4' }
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     compile project(':ASNECore')
     compile 'com.google.android.gms:play-services-plus:7.5.0'
 }
diff --git a/googleplus/gradle.properties b/googleplus/gradle.properties
old mode 100644
new mode 100755
diff --git a/googleplus/proguard-rules.pro b/googleplus/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/googleplus/src/main/AndroidManifest.xml b/googleplus/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index 146fe66..bfae956
--- a/googleplus/src/main/AndroidManifest.xml
+++ b/googleplus/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.github.gorbin.asne.googleplus"
     xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    <!--<uses-sdk tools:node="merge" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
     <application android:allowBackup="true"></application>
diff --git a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusPerson.java b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusPerson.java
old mode 100644
new mode 100755
diff --git a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
old mode 100644
new mode 100755
index f4d3577..2b106c7
--- a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
+++ b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.googleplus;
 
+import android.content.Context;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
@@ -92,6 +93,10 @@ public GooglePlusSocialNetwork(Fragment fragment, Context context) {
         super(fragment, context);
     }
 
+    public GooglePlusSocialNetwork(Fragment fragment, Context context) {
+        super(fragment, context);
+    }
+
     /**
      * Check is social network connected
      * @return true if connected to Google Plus social network and false if not
@@ -491,9 +496,9 @@ public void onResult(final People.LoadPeopleResult loadPeopleResult) {
                         } else {
                             if (mLocalListeners.get(REQUEST_GET_FRIENDS) != null) {
                                 ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                                        .OnGetFriendsIdComplete(getID(), ids.toArray(new String[ids.size()]));
+                                        .onGetFriendsIdComplete(getID(), ids.toArray(new String[ids.size()]));
                                 ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                                        .OnGetFriendsComplete(getID(), socialPersons);
+                                        .onGetFriendsComplete(getID(), socialPersons);
                                 mLocalListeners.remove(REQUEST_GET_FRIENDS);
                             }
                         }
@@ -580,7 +585,7 @@ public void onStop() {
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
-        int sanitizedRequestCode = requestCode % 0x10000;
+        int sanitizedRequestCode = requestCode & 0xFFFF;
         if (sanitizedRequestCode == REQUEST_AUTH) {
             if (resultCode == Activity.RESULT_OK && !googleApiClient.isConnected() && !googleApiClient.isConnecting()) {
                 // This time, connect should succeed.
diff --git a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/MomentUtil.java b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/MomentUtil.java
old mode 100644
new mode 100755
diff --git a/gradle.properties b/gradle.properties
old mode 100644
new mode 100755
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
old mode 100644
new mode 100755
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
old mode 100644
new mode 100755
index 9f020b5..174c98b
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Nov 19 17:27:01 NOVT 2014
+#Mon May 18 16:10:25 CEST 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.2.1-all.zip
diff --git a/gradlew b/gradlew
old mode 100644
new mode 100755
diff --git a/gradlew.bat b/gradlew.bat
old mode 100644
new mode 100755
diff --git a/instagram/.gitignore b/instagram/.gitignore
old mode 100644
new mode 100755
diff --git a/instagram/build.gradle b/instagram/build.gradle
old mode 100644
new mode 100755
index 441cf65..a921efa
--- a/instagram/build.gradle
+++ b/instagram/build.gradle
@@ -2,19 +2,19 @@ apply plugin: 'com.android.library'
 apply from: '../maven_push.gradle'
 
 android {
-    compileSdkVersion 21
+    compileSdkVersion 23
     buildToolsVersion "21.1.1"
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.instagram"
-        minSdkVersion 10
-        targetSdkVersion 21
+        //applicationId "com.github.gorbin.asne.instagram"
+        minSdkVersion 15
+        targetSdkVersion 23
         versionCode 1
         versionName "1.0"
     }
     buildTypes {
         release {
-            runProguard false
+            minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
@@ -22,6 +22,6 @@ android {
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:21.0.2'
+    compile 'com.android.support:appcompat-v7:23.1.1'
     compile project(':ASNECore')
 }
diff --git a/instagram/gradle.properties b/instagram/gradle.properties
old mode 100644
new mode 100755
diff --git a/instagram/proguard-rules.pro b/instagram/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/instagram/src/main/AndroidManifest.xml b/instagram/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index c68d338..8dfdc96
--- a/instagram/src/main/AndroidManifest.xml
+++ b/instagram/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.github.gorbin.asne.instagram"
     xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    <!--<uses-sdk tools:node="merge" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
     <application android:allowBackup="true"></application>
diff --git a/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramPerson.java b/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramPerson.java
old mode 100644
new mode 100755
diff --git a/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java b/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java
old mode 100644
new mode 100755
index 89892f9..ebb3c98
--- a/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java
+++ b/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java
@@ -79,17 +79,39 @@
     private static final String INSTAGRAM_APIURL = "https://api.instagram.com/v1";
     private static final String ERROR_CODE = "InstagramSocialNetwork.ERROR_CODE";
 //    private final String INSTAGRAM_CALLBACK_URL = "oauth://ASNE";
-    private final String authURLString;
-    private final String tokenURLString;
-    private final String clientId;
-    private final String clientSecret;
-    private final String redirectURL;
-    private boolean restart = false;
-    private Bundle requestBundle;
-
+    private final String mAuthURLString;
+    private final String mTokenURLString;
+    private final String mClientId;
+    private final String mClientSecret;
+    private final String mRedirectURL;
+    private boolean mRestart = false;
+    private Bundle mRequestBundle;
+
+    //TODO: refactor to use an init that is shared by constructors
     public InstagramSocialNetwork(Fragment fragment, String clientId, String clientSecret, String redirectURL, String scope) {
         super(fragment);
 
+        this.mClientId = clientId;
+        this.mClientSecret = clientSecret;
+        this.mRedirectURL = redirectURL;
+
+        if (TextUtils.isEmpty(clientId) || TextUtils.isEmpty(clientSecret)) {
+            throw new IllegalArgumentException("clientId and clientSecret are invalid");
+        }
+        if(scope == null) {
+            scope = "basic";
+        }
+        String INSTAGRAM_AUTHURL = "https://api.instagram.com/oauth/authorize/";
+        mAuthURLString = INSTAGRAM_AUTHURL + "?client_id=" + clientId + "&redirect_uri="
+                + redirectURL + "&response_type=code&display=touch&scope=" + scope;
+
+        mTokenURLString = INSTAGRAM_TOKENURL + "?client_id=" + clientId + "&client_secret="
+                + clientSecret + "&redirect_uri=" + redirectURL + "&grant_type=authorization_code";
+    }
+
+    public InstagramSocialNetwork(Fragment fragment, Context context, String clientId, String clientSecret, String redirectURL, String scope) {
+        super(fragment, context);
+
         this.clientId = clientId;
         this.clientSecret = clientSecret;
         this.redirectURL = redirectURL;
@@ -131,8 +153,8 @@ public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
 
     private void initInstagramLogin(){
         Intent intent = new Intent(mSocialNetworkManager.getActivity(), OAuthActivity.class)
-                .putExtra(OAuthActivity.PARAM_CALLBACK, redirectURL)
-                .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, authURLString);
+                .putExtra(OAuthActivity.PARAM_CALLBACK, mRedirectURL)
+                .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, mAuthURLString);
         mSocialNetworkManager.getActivity().startActivityForResult(intent, REQUEST_AUTH);
     }
 
@@ -162,7 +184,7 @@ public int getID() {
      */
     @Override
     public AccessToken getAccessToken() {
-        return new com.github.gorbin.asne.core.AccessToken(
+        return new AccessToken(
                 mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null),
                 null
         );
@@ -176,7 +198,7 @@ public AccessToken getAccessToken() {
     public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAccessTokenCompleteListener) {
         super.requestAccessToken(onRequestAccessTokenCompleteListener);
         ((OnRequestAccessTokenCompleteListener) mLocalListeners.get(REQUEST_ACCESS_TOKEN))
-                .onRequestAccessTokenComplete(getID(), new com.github.gorbin.asne.core.AccessToken(
+                .onRequestAccessTokenComplete(getID(), new AccessToken(
                         mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null),
                         null
                 ));
@@ -394,13 +416,13 @@ public void requestRemoveFriend(String userID, OnRequestRemoveFriendCompleteList
      */
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        int sanitizedRequestCode = requestCode % 0x10000;
+        int sanitizedRequestCode = requestCode & 0xFFFF;
         if (sanitizedRequestCode != REQUEST_AUTH) return;
         super.onActivityResult(requestCode, resultCode, data);
 
         Uri uri = data != null ? data.getData() : null;
 
-        if (uri != null && uri.toString().startsWith(redirectURL)) {
+        if (uri != null && uri.toString().startsWith(mRedirectURL)) {
             String parts[] = uri.toString().split("=");
             String verifier = parts[1];
             RequestLogin2AsyncTask requestLogin2AsyncTask = new RequestLogin2AsyncTask();
@@ -424,20 +446,19 @@ public void cancelLoginRequest() {
         super.cancelLoginRequest();
     }
 
-    private String streamToString(InputStream p_is) {
+    private String streamToString(InputStream is) {
         try {
-            BufferedReader m_br;
-            StringBuilder m_outString = new StringBuilder();
-            m_br = new BufferedReader(new InputStreamReader(p_is));
-            String m_read = m_br.readLine();
-            while(m_read != null) {
-                m_outString.append(m_read);
-                m_read =m_br.readLine();
+            StringBuilder outString = new StringBuilder();
+            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
+            String read = reader.readLine();
+            while (read != null) {
+                outString.append(read);
+                read = reader.readLine();
             }
-            return m_outString.toString();
+            return outString.toString();
         }
-        catch (Exception p_ex) {
-            p_ex.printStackTrace();
+        catch (Exception ex) {
+            ex.printStackTrace();
             return null;
         }
     }
@@ -472,10 +493,10 @@ private void checkConnectionErrors(HttpURLConnection connection) throws Exceptio
 
     private boolean checkTokenError(Bundle result) {
         if(result != null && result.containsKey(ERROR_CODE) && result.getString(ERROR_CODE).contains("400") && result.getString(ERROR_CODE).contains("OAuth")) {
-            restart = true;
-            requestBundle = result;
-            requestBundle.remove(ERROR_CODE);
-            requestBundle.remove(SocialNetworkAsyncTask.RESULT_ERROR);
+            mRestart = true;
+            mRequestBundle = result;
+            mRequestBundle.remove(ERROR_CODE);
+            mRequestBundle.remove(SocialNetworkAsyncTask.RESULT_ERROR);
             initInstagramLogin();
             return true;
         }
@@ -493,7 +514,7 @@ private boolean checkRequests(){
         return queryRequests;
     }
 
-    private void checkExeption(Exception e, Bundle result){
+    private void checkException(Exception e, Bundle result){
         if(e.getMessage().contains("ERROR CODE") && e.getMessage().contains("OAuth")){
             result.putString(ERROR_CODE, e.getMessage());
         } else {
@@ -502,31 +523,31 @@ private void checkExeption(Exception e, Bundle result){
     }
 
     private void restartRequests(){
-        restart = false;
+        mRestart = false;
         if(mLocalListeners.containsKey(REQUEST_GET_CURRENT_PERSON)){
             mRequests.remove(REQUEST_GET_CURRENT_PERSON);
-            executeRequest(new RequestGetSocialPersonAsyncTask(), requestBundle, REQUEST_GET_CURRENT_PERSON);
+            executeRequest(new RequestGetSocialPersonAsyncTask(), mRequestBundle, REQUEST_GET_CURRENT_PERSON);
         } else if (mLocalListeners.containsKey(REQUEST_GET_PERSON)) {
             mRequests.remove(REQUEST_GET_PERSON);
-            executeRequest(new RequestGetSocialPersonAsyncTask(), requestBundle, REQUEST_GET_PERSON);
+            executeRequest(new RequestGetSocialPersonAsyncTask(), mRequestBundle, REQUEST_GET_PERSON);
         } else if (mLocalListeners.containsKey(REQUEST_GET_DETAIL_PERSON)) {
             mRequests.remove(REQUEST_GET_DETAIL_PERSON);
-            executeRequest(new RequestGetDetailedPersonAsyncTask(), requestBundle, REQUEST_GET_DETAIL_PERSON);
+            executeRequest(new RequestGetDetailedPersonAsyncTask(), mRequestBundle, REQUEST_GET_DETAIL_PERSON);
         } else if(mLocalListeners.containsKey(REQUEST_GET_PERSONS)){
             mRequests.remove(REQUEST_GET_PERSONS);
-            executeRequest(new RequestSocialPersonsAsyncTask(), requestBundle, REQUEST_GET_PERSONS);
+            executeRequest(new RequestSocialPersonsAsyncTask(), mRequestBundle, REQUEST_GET_PERSONS);
         } else if(mRequests.containsKey(REQUEST_CHECK_IS_FRIEND)) {
             mRequests.remove(REQUEST_CHECK_IS_FRIEND);
-            executeRequest(new RequestCheckIsFriendAsyncTask(), requestBundle, REQUEST_CHECK_IS_FRIEND);
+            executeRequest(new RequestCheckIsFriendAsyncTask(), mRequestBundle, REQUEST_CHECK_IS_FRIEND);
         } else if(mRequests.containsKey(REQUEST_GET_FRIENDS)) {
             mRequests.remove(REQUEST_GET_FRIENDS);
-            executeRequest(new RequestGetFriendsAsyncTask(), requestBundle, REQUEST_GET_FRIENDS);
+            executeRequest(new RequestGetFriendsAsyncTask(), mRequestBundle, REQUEST_GET_FRIENDS);
         } else if(mRequests.containsKey(REQUEST_ADD_FRIEND)) {
             mRequests.remove(REQUEST_ADD_FRIEND);
-            executeRequest(new RequestAddFriendAsyncTask(), requestBundle, REQUEST_ADD_FRIEND);
+            executeRequest(new RequestAddFriendAsyncTask(), mRequestBundle, REQUEST_ADD_FRIEND);
         } else if(mRequests.containsKey(REQUEST_REMOVE_FRIEND)) {
             mRequests.remove(REQUEST_REMOVE_FRIEND);
-            executeRequest(new RequestGetFriendsAsyncTask(), requestBundle, REQUEST_REMOVE_FRIEND);
+            executeRequest(new RequestGetFriendsAsyncTask(), mRequestBundle, REQUEST_REMOVE_FRIEND);
         }
     }
 
@@ -554,16 +575,16 @@ protected Bundle doInBackground(Bundle... params) {
             Bundle result = new Bundle();
             try
             {
-                URL url = new URL(tokenURLString);
+                URL url = new URL(mTokenURLString);
                 HttpsURLConnection httpsURLConnection = (HttpsURLConnection) url.openConnection();
                 httpsURLConnection.setRequestMethod("POST");
                 httpsURLConnection.setDoInput(true);
                 httpsURLConnection.setDoOutput(true);
                 OutputStreamWriter outputStreamWriter = new OutputStreamWriter(httpsURLConnection.getOutputStream());
-                outputStreamWriter.write("client_id="+clientId+
-                        "&client_secret=" + clientSecret +
+                outputStreamWriter.write("client_id=" + mClientId +
+                        "&client_secret=" + mClientSecret +
                         "&grant_type=authorization_code" +
-                        "&redirect_uri=" + redirectURL +
+                        "&redirect_uri=" + mRedirectURL +
                         "&code=" + verifier);
                 outputStreamWriter.flush();
                 String response = streamToString(httpsURLConnection.getInputStream());
@@ -592,7 +613,7 @@ protected void onPostExecute(Bundle result) {
                     .putString(SAVE_STATE_KEY_OAUTH_REQUEST_TOKEN, result.getString(RESULT_REQUEST_TOKEN))
                     .apply();
             mRequests.remove(REQUEST_LOGIN2);
-            if (mLocalListeners.get(REQUEST_LOGIN) != null && !restart) {
+            if (mLocalListeners.get(REQUEST_LOGIN) != null && !mRestart) {
                 ((OnLoginCompleteListener) mLocalListeners.get(REQUEST_LOGIN)).onLoginSuccess(getID());
             }
             restartRequests();
@@ -633,7 +654,7 @@ protected Bundle doInBackground(Bundle... params) {
                 getSocialPerson(socialPerson, jsonResponse);
                 result.putParcelable(REQUEST_GET_PERSON, socialPerson);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
@@ -679,7 +700,7 @@ protected Bundle doInBackground(Bundle... params) {
                 getDetailedSocialPerson(instagramPerson, jsonResponse);
                 result.putParcelable(REQUEST_GET_DETAIL_PERSON, instagramPerson);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
@@ -720,7 +741,7 @@ protected Bundle doInBackground(Bundle... params) {
                     getSocialPerson(socialPerson, jsonResponse);
                     socialPersons.add(socialPerson);
                 } catch (Exception e) {
-                    checkExeption(e, result);
+                    checkException(e, result);
                 }
             }
             result.putParcelableArrayList(RESULT_USERS_ARRAY, socialPersons);
@@ -753,7 +774,7 @@ protected Bundle doInBackground(Bundle... params) {
                 result.putStringArray(RESULT_GET_FRIENDS_ID, ids.toArray(new String[ids.size()]));
                 result.putParcelableArrayList(RESULT_GET_FRIENDS, socialPersons);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
 
             return result;
@@ -776,7 +797,8 @@ private void getAllFriends(String urlString, final ArrayList<SocialPerson> socia
                 }
             }
             JSONArray jsonResponse = jsonObject.getJSONArray("data");
-            for(int i = 0; i < jsonResponse.length(); i++){
+            int length = jsonResponse.length();
+            for (int i = 0; i < length; i++) {
                 SocialPerson socialPerson = new SocialPerson();
                 getSocialPerson(socialPerson, jsonResponse.getJSONObject(i));
                 socialPersons.add(socialPerson);
@@ -795,10 +817,10 @@ protected void onPostExecute(Bundle result) {
                     result.getStringArray(RESULT_GET_FRIENDS_ID))) return;
 
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
+                    .onGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
             ArrayList<SocialPerson> socialPersons = result.getParcelableArrayList(RESULT_GET_FRIENDS);
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsComplete(getID(), socialPersons);
+                    .onGetFriendsComplete(getID(), socialPersons);
         }
     }
 
@@ -832,7 +854,7 @@ protected Bundle doInBackground(Bundle... params) {
                     result.putBoolean(RESULT_IS_FRIEND, false);
                 }
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
@@ -888,7 +910,7 @@ protected Bundle doInBackground(Bundle... params) {
                     result.putString(RESULT_ERROR, "REQUEST_ADD_FRIEND Error");
                 }
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
@@ -943,7 +965,7 @@ protected Bundle doInBackground(Bundle... params) {
                     result.putString(RESULT_ERROR, "REQUEST_ADD_FRIEND Error");
                 }
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
diff --git a/linkedin/.gitignore b/linkedin/.gitignore
old mode 100644
new mode 100755
diff --git a/linkedin/build.gradle b/linkedin/build.gradle
old mode 100644
new mode 100755
index 67f61a1..6bfa2ca
--- a/linkedin/build.gradle
+++ b/linkedin/build.gradle
@@ -2,19 +2,19 @@ apply plugin: 'com.android.library'
 apply from: '../maven_push.gradle'
 
 android {
-    compileSdkVersion 21
+    compileSdkVersion 23
     buildToolsVersion "21.1.1"
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.linkedin"
-        minSdkVersion 10
-        targetSdkVersion 21
+        //applicationId "com.github.gorbin.asne.linkedin"
+        minSdkVersion 15
+        targetSdkVersion 23
         versionCode 1
         versionName "1.0"
     }
     buildTypes {
         release {
-            runProguard false
+            minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
@@ -22,6 +22,6 @@ android {
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:21.0.2'
+    compile 'com.android.support:appcompat-v7:23.1.1'
     compile project(':ASNECore')
 }
diff --git a/linkedin/gradle.properties b/linkedin/gradle.properties
old mode 100644
new mode 100755
diff --git a/linkedin/libs/linkedin-j-android-1.0.jar b/linkedin/libs/linkedin-j-android-1.0.jar
old mode 100644
new mode 100755
diff --git a/linkedin/proguard-rules.pro b/linkedin/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/linkedin/src/main/AndroidManifest.xml b/linkedin/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index 08affb9..3c382a5
--- a/linkedin/src/main/AndroidManifest.xml
+++ b/linkedin/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.github.gorbin.asne.linkedin"
     xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    <!--<uses-sdk tools:node="merge" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
     <application android:allowBackup="true">
diff --git a/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java b/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java
old mode 100644
new mode 100755
index 0681337..b3425fb
--- a/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java
+++ b/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.linkedin;
 
+import android.content.Context;
 import android.app.Activity;
 import android.content.Intent;
 import android.net.Uri;
@@ -68,6 +69,8 @@
 import java.util.Set;
 import java.util.UUID;
 
+import javax.naming.Context;
+
 /**
  * Class for LinkedIn social network integration using LinkedIn-j library
  *
@@ -113,9 +116,22 @@
 
     private String mOAuthTokenSecret;
 
+    //TODO: refactor to use an init that is shared by constructors
     public LinkedInJSocialNetwork(Fragment fragment, String consumerKey, String consumerSecret, String permissions) {
         super(fragment);
 
+        if (TextUtils.isEmpty(consumerKey) || TextUtils.isEmpty(consumerSecret) || TextUtils.isEmpty(permissions)) {
+            throw new IllegalArgumentException("TextUtils.isEmpty(consumerKey) || TextUtils.isEmpty(consumerSecret) || TextUtils.isEmpty(permissions)");
+        }
+
+        mOAuthService = LinkedInOAuthServiceFactory.getInstance()
+                .createLinkedInOAuthService(consumerKey, consumerSecret, permissions);
+        mLinkedInApiClientFactory = LinkedInApiClientFactory.newInstance(consumerKey, consumerSecret);
+    }
+
+    public LinkedInJSocialNetwork(Fragment fragment, Context context, String consumerKey, String consumerSecret, String permissions) {
+        super(fragment, context);
+
         if (TextUtils.isEmpty(consumerKey) || TextUtils.isEmpty(consumerSecret) || TextUtils.isEmpty(permissions)) {
             throw new IllegalArgumentException("TextUtils.isEmpty(fConsumerKey) || TextUtils.isEmpty(fConsumerSecret) || TextUtils.isEmpty(fPermissions)");
         }
@@ -389,7 +405,7 @@ public void requestRemoveFriend(String userID, OnRequestRemoveFriendCompleteList
      */
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        int sanitizedRequestCode = requestCode % 0x10000;
+        int sanitizedRequestCode = requestCode & 0xFFFF;
         if (sanitizedRequestCode != REQUEST_AUTH) return;
 
         if (resultCode != Activity.RESULT_OK || data == null || data.getData() == null) {
@@ -761,10 +777,10 @@ protected void onPostExecute(Bundle result) {
                     result.getStringArray(RESULT_GET_FRIENDS_ID))) return;
 
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
+                    .onGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
             ArrayList<SocialPerson> socialPersons = result.getParcelableArrayList(RESULT_GET_FRIENDS);
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsComplete(getID(), socialPersons);
+                    .onGetFriendsComplete(getID(), socialPersons);
             mLocalListeners.remove(RESULT_GET_FRIENDS);
         }
     }
diff --git a/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInPerson.java b/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInPerson.java
old mode 100644
new mode 100755
diff --git a/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInSocialNetwork.java b/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInSocialNetwork.java
old mode 100644
new mode 100755
index 2d21474..74603b0
--- a/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInSocialNetwork.java
+++ b/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInSocialNetwork.java
@@ -26,6 +26,7 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.text.TextUtils;
+import android.text.format.DateUtils;
 
 import com.github.gorbin.asne.core.AccessToken;
 import com.github.gorbin.asne.core.OAuthActivity;
@@ -77,7 +78,7 @@
     private static final String SAVE_STATE_KEY_OAUTH_REQUEST_TOKEN = "LinkedInSocialNetwork.SAVE_STATE_KEY_OAUTH_SECRET";
     private static final String SAVE_STATE_KEY_EXPIRES_DATE = "LinkedInSocialNetwork.SAVE_STATE_KEY_EXPIRES_DATE";
 //    private final String LINKEDIN_OAUTH2_CALLBACK_URL = "https://asne";
-    private final String authURLString;
+    private final String mAuthURLString;
     private String LINKEDIN_API = "https://www.linkedin.com/uas/oauth2/authorization?response_type=code";
     private String LINKEDIN_TOKEN = "https://www.linkedin.com/uas/oauth2/accessToken?grant_type=authorization_code";
     private String LINKEDIN_V1_API = "https://api.linkedin.com/v1";
@@ -86,19 +87,19 @@
     private String COMMENT = "<comment>{0}</comment>";
     private String CONTENT = "<content><title>{0}</title><description>{1}</description>" +
             "<submitted-url>{2}</submitted-url><submitted-image-url>{3}</submitted-image-url></content>";
-    private String consumerKey;
-    private String consumerSecret;
-    private String redirectURL;
+    private String mConsumerKey;
+    private String mConsumerSecret;
+    private String mRedirectURL;
 
     public LinkedInSocialNetwork(Fragment fragment, String consumerKey, String consumerSecret, String redirectURL, String permissions) {
         super(fragment);
         if (TextUtils.isEmpty(consumerKey) || TextUtils.isEmpty(consumerSecret) || TextUtils.isEmpty(permissions)) {
             throw new IllegalArgumentException("TextUtils.isEmpty(ConsumerKey) || TextUtils.isEmpty(ConsumerSecret) || TextUtils.isEmpty(Permissions)");
         }
-        this.consumerKey = consumerKey;
-        this.consumerSecret = consumerSecret;
-        this.redirectURL = redirectURL;
-        authURLString = LINKEDIN_API + "&client_id=" + consumerKey + "&scope=" + permissions +
+        this.mConsumerKey = consumerKey;
+        this.mConsumerSecret = consumerSecret;
+        this.mRedirectURL = redirectURL;
+        this.mAuthURLString = LINKEDIN_API + "&client_id=" + consumerKey + "&scope=" + permissions +
                          "&state=" + REQUEST_AUTH + "&redirect_uri=" + redirectURL;
     }
     /**
@@ -109,8 +110,8 @@ public LinkedInSocialNetwork(Fragment fragment, String consumerKey, String consu
     public boolean isConnected() {
         String accessToken = mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null);
         String requestToken = mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_REQUEST_TOKEN, null);
-        Long expiresDate = mSharedPreferences.getLong(SAVE_STATE_KEY_EXPIRES_DATE, 0);
-        Boolean notExpired = expiresDate > 0 && Calendar.getInstance().getTimeInMillis() - 86400000 < expiresDate;
+        long expiresDate = mSharedPreferences.getLong(SAVE_STATE_KEY_EXPIRES_DATE, 0);
+        boolean notExpired = expiresDate > 0 && Calendar.getInstance().getTimeInMillis() - DateUtils.DAY_IN_MILLIS < expiresDate;
         return accessToken != null && requestToken != null && notExpired;
     }
 
@@ -122,8 +123,8 @@ public boolean isConnected() {
     public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
         super.requestLogin(onLoginCompleteListener);
         Intent intent = new Intent(mSocialNetworkManager.getActivity(), OAuthActivity.class)
-                .putExtra(OAuthActivity.PARAM_CALLBACK, redirectURL)
-                .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, authURLString);
+                .putExtra(OAuthActivity.PARAM_CALLBACK, mRedirectURL)
+                .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, mAuthURLString);
         mSocialNetworkManager.getActivity().startActivityForResult(intent, REQUEST_AUTH);
     }
 
@@ -154,7 +155,7 @@ public int getID() {
      */
     @Override
     public AccessToken getAccessToken() {
-        return new com.github.gorbin.asne.core.AccessToken(
+        return new AccessToken(
                 mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null),
                 null
         );
@@ -168,7 +169,7 @@ public AccessToken getAccessToken() {
     public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAccessTokenCompleteListener) {
         super.requestAccessToken(onRequestAccessTokenCompleteListener);
         ((OnRequestAccessTokenCompleteListener) mLocalListeners.get(REQUEST_ACCESS_TOKEN))
-                .onRequestAccessTokenComplete(getID(), new com.github.gorbin.asne.core.AccessToken(
+                .onRequestAccessTokenComplete(getID(), new AccessToken(
                         mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null),
                         null
                 ));
@@ -425,7 +426,8 @@ private void getAllFriends(String urlString, final ArrayList<SocialPerson> socia
                     + "&count=" + RequestGetFriendsAsyncTask.count;
         }
         JSONArray jsonResponse = jsonObject.getJSONArray("values");
-        for(int i = 0; i < jsonResponse.length(); i++){
+        int length = jsonResponse.length();
+        for (int i = 0; i < length; i++) {
             SocialPerson socialPerson = new SocialPerson();
             getSocialPerson(socialPerson, jsonResponse.getJSONObject(i));
             socialPersons.add(socialPerson);
@@ -465,13 +467,13 @@ public void requestRemoveFriend(String userID, OnRequestRemoveFriendCompleteList
      */
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        int sanitizedRequestCode = requestCode % 0x10000;
+        int sanitizedRequestCode = requestCode & 0xFFFF;
         if (sanitizedRequestCode != REQUEST_AUTH) return;
         super.onActivityResult(requestCode, resultCode, data);
 
         Uri uri = data != null ? data.getData() : null;
 
-        if (uri != null && uri.toString().startsWith(redirectURL.toLowerCase())) {
+        if (uri != null && uri.toString().startsWith(mRedirectURL.toLowerCase())) {
             String parts[] = uri.toString().split("=");
             String verifier = parts[1];
             verifier = verifier.substring(0, verifier.indexOf("&"));
@@ -496,20 +498,19 @@ public void cancelLoginRequest() {
         super.cancelLoginRequest();
     }
 
-    private String streamToString(InputStream p_is) {
+    private String streamToString(InputStream is) {
         try {
-            BufferedReader m_br;
-            StringBuilder m_outString = new StringBuilder();
-            m_br = new BufferedReader(new InputStreamReader(p_is));
-            String m_read = m_br.readLine();
-            while(m_read != null) {
-                m_outString.append(m_read);
-                m_read =m_br.readLine();
+            StringBuilder outString = new StringBuilder();
+            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
+            String read = reader.readLine();
+            while (read != null) {
+                outString.append(read);
+                read = reader.readLine();
             }
-            return m_outString.toString();
+            return outString.toString();
         }
-        catch (Exception p_ex) {
-            p_ex.printStackTrace();
+        catch (Exception ex) {
+            ex.printStackTrace();
             return null;
         }
     }
@@ -551,7 +552,7 @@ private void checkConnectionErrors(HttpsURLConnection connection) throws Excepti
         }
     }
 
-    private void checkExeption(Exception e, Bundle result){
+    private void checkException(Exception e, Bundle result){
         result.putString(SocialNetworkAsyncTask.RESULT_ERROR, e.getMessage());
     }
 
@@ -570,8 +571,8 @@ protected Bundle doInBackground(Bundle... params) {
             HttpsURLConnection httpsURLConnection = null;
             try
             {
-                String tokenURLString = LINKEDIN_TOKEN + "&code=" + verifier + "&redirect_uri=" + redirectURL +
-                        "&client_id=" + consumerKey + "&client_secret=" + consumerSecret;
+                String tokenURLString = LINKEDIN_TOKEN + "&code=" + verifier + "&redirect_uri=" + mRedirectURL +
+                        "&client_id=" + mConsumerKey + "&client_secret=" + mConsumerSecret;
 
                 URL url = new URL(tokenURLString);
                 httpsURLConnection = (HttpsURLConnection) url.openConnection();
@@ -656,7 +657,7 @@ protected Bundle doInBackground(Bundle... params) {
                 getSocialPerson(socialPerson, jsonObject);
                 result.putParcelable(REQUEST_GET_PERSON, socialPerson);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
@@ -704,7 +705,7 @@ protected Bundle doInBackground(Bundle... params) {
                 getDetailedSocialPerson(linkedinPerson, jsonObject);
                 result.putParcelable(REQUEST_GET_DETAIL_PERSON, linkedinPerson);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
@@ -749,7 +750,7 @@ protected Bundle doInBackground(Bundle... params) {
                 outputStreamWriter.flush();
                 checkConnectionErrors(connection);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
 
             return result;
@@ -804,7 +805,7 @@ protected Bundle doInBackground(Bundle... params) {
                 outputStreamWriter.flush();
                 checkConnectionErrors(connection);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
 
             return result;
@@ -892,7 +893,7 @@ protected Bundle doInBackground(Bundle... params) {
                 result.putStringArray(RESULT_GET_FRIENDS_ID, ids.toArray(new String[ids.size()]));
                 result.putParcelableArrayList(RESULT_GET_FRIENDS, socialPersons);
             } catch (Exception e) {
-                checkExeption(e, result);
+                checkException(e, result);
             }
             return result;
         }
@@ -903,10 +904,10 @@ protected void onPostExecute(Bundle result) {
                     result.getStringArray(RESULT_GET_FRIENDS_ID))) return;
 
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
+                    .onGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
             ArrayList<SocialPerson> socialPersons = result.getParcelableArrayList(RESULT_GET_FRIENDS);
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsComplete(getID(), socialPersons);
+                    .onGetFriendsComplete(getID(), socialPersons);
         }
     }
 
diff --git a/maven_push.gradle b/maven_push.gradle
old mode 100644
new mode 100755
diff --git a/odnoklassniki/.gitignore b/odnoklassniki/.gitignore
old mode 100644
new mode 100755
diff --git a/odnoklassniki/build.gradle b/odnoklassniki/build.gradle
old mode 100644
new mode 100755
index c3b58cf..7859598
--- a/odnoklassniki/build.gradle
+++ b/odnoklassniki/build.gradle
@@ -2,19 +2,19 @@ apply plugin: 'com.android.library'
 apply from: '../maven_push.gradle'
 
 android {
-    compileSdkVersion 21
+    compileSdkVersion 23
     buildToolsVersion "21.1.1"
 
     defaultConfig {
-        applicationId "com.github.gorbin.asne.odnoklassniki"
-        minSdkVersion 10
-        targetSdkVersion 21
+        //applicationId "com.github.gorbin.asne.odnoklassniki"
+        minSdkVersion 15
+        targetSdkVersion 23
         versionCode 1
         versionName "1.0"
     }
     buildTypes {
         release {
-            runProguard false
+            minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
@@ -22,6 +22,6 @@ android {
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:21.0.2'
+    compile 'com.android.support:appcompat-v7:23.1.1'
     compile project(':ASNECore')
 }
diff --git a/odnoklassniki/gradle.properties b/odnoklassniki/gradle.properties
old mode 100644
new mode 100755
diff --git a/odnoklassniki/libs/odnoklassniki-android-sdk.jar b/odnoklassniki/libs/odnoklassniki-android-sdk.jar
old mode 100644
new mode 100755
diff --git a/odnoklassniki/proguard-rules.pro b/odnoklassniki/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/odnoklassniki/src/main/AndroidManifest.xml b/odnoklassniki/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index b469958..7a067e8
--- a/odnoklassniki/src/main/AndroidManifest.xml
+++ b/odnoklassniki/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.github.gorbin.asne.odnoklassniki"
     xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    <!--<uses-sdk tools:node="merge" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
     <application android:allowBackup="true">
diff --git a/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkPerson.java b/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkPerson.java
old mode 100644
new mode 100755
diff --git a/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java b/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java
old mode 100644
new mode 100755
index 2ce2c56..95a2d53
--- a/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java
+++ b/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.odnoklassniki;
 
+import android.content.Context;
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
@@ -69,20 +70,35 @@
     private static final String USERID = "OkSocialNetwork.USERID";
     private static final String TOKEN = "OkSocialNetwork.TOKEN";
     private static final String ERROR_CODE = "OkSocialNetwork.ERROR_CODE";
-    private Activity activity;
-    private String userId;
-    private Bundle requestBundle;
+    private Activity mActivity;
+    private String mUserId;
+    private Bundle mRequestBundle;
 	private Odnoklassniki mOdnoklassniki;
-    private  String[] permissions;
-    private String appId;
-    private String appPublicKey;
-    private String appSecretKey;
+    private  String[] mPermissions;
+    private String mAppId;
+    private String mAppPublicKey;
+    private String mAppSecretKey;
 
+    //TODO: refactor to use an init that is shared by constructors
     public OkSocialNetwork(Fragment fragment, String appId, String appPublicKey, String appSecretKey, String[] permissions) {
         super(fragment);
         if (TextUtils.isEmpty(appId) || TextUtils.isEmpty(appPublicKey) || TextUtils.isEmpty(appSecretKey)) {
             throw new IllegalArgumentException("TextUtils.isEmpty(appId) || TextUtils.isEmpty(appPublicKey) || TextUtils.isEmpty(appSecretKey)");
         }
+        this.mAppId = appId;
+        this.mAppPublicKey = appPublicKey;
+        this.mAppSecretKey = appSecretKey;
+        this.mPermissions = permissions;
+        this.mActivity = mSocialNetworkManager.getActivity();
+        mOdnoklassniki = Odnoklassniki.createInstance(mActivity, appId, appSecretKey, appPublicKey);
+        mOdnoklassniki.setTokenRequestListener(this);
+    }
+
+    public OkSocialNetwork(Fragment fragment, Context context, String appId, String appPublicKey, String appSecretKey, String[] permissions) {
+        super(fragment, context);
+        if (TextUtils.isEmpty(appId) || TextUtils.isEmpty(appPublicKey) || TextUtils.isEmpty(appSecretKey)) {
+            throw new IllegalArgumentException("TextUtils.isEmpty(appId) || TextUtils.isEmpty(appPublicKey) || TextUtils.isEmpty(appSecretKey)");
+        }
         this.appId = appId;
         this.appPublicKey = appPublicKey;
         this.appSecretKey = appSecretKey;
@@ -107,6 +123,8 @@ public void onSuccess(String token) {
             return;
         }
 
+        Bundle requestBundle = mRequestBundle;
+
         if (mLocalListeners.containsKey(REQUEST_GET_DETAIL_PERSON)) {
             mRequests.remove(REQUEST_GET_DETAIL_PERSON);
             executeRequest(new RequestGetDetailedPersonAsyncTask(), requestBundle, REQUEST_GET_DETAIL_PERSON);
@@ -180,7 +198,7 @@ public boolean isConnected() {
     @Override
     public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
         super.requestLogin(onLoginCompleteListener);
-		mOdnoklassniki.requestAuthorization(activity, false, permissions);
+		mOdnoklassniki.requestAuthorization(mActivity, false, mPermissions);
     }
 
     /**
@@ -191,7 +209,7 @@ public void logout() {
         mSharedPreferences.edit()
                 .remove(TOKEN)
                 .apply();
-        mOdnoklassniki.clearTokens(activity);
+        mOdnoklassniki.clearTokens(mActivity);
 //        mOdnoklassniki.removeTokenRequestListener();
     }
 
@@ -228,10 +246,10 @@ public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAcc
 
     private boolean checkTokenError(Bundle result){
         if(result != null && result.containsKey(ERROR_CODE) && result.getString(ERROR_CODE).equals("102")) {
-            requestBundle = result;
-            requestBundle.remove(ERROR_CODE);
-            requestBundle.remove(SocialNetworkAsyncTask.RESULT_ERROR);
-            mOdnoklassniki.refreshToken(activity);
+            mRequestBundle = result;
+            mRequestBundle.remove(ERROR_CODE);
+            mRequestBundle.remove(SocialNetworkAsyncTask.RESULT_ERROR);
+            mOdnoklassniki.refreshToken(mActivity);
             return true;
         }
         return false;
@@ -243,7 +261,7 @@ private String requestIdPerson(Bundle result) throws IOException, JSONException
         String idResponse = mOdnoklassniki.request("users.getCurrentUser", idRequestParams, "get");
         JSONObject jsonObject = new JSONObject(idResponse);
         String id = jsonObject.getString("uid");
-        result.putString(USERID, userId);
+        result.putString(USERID, mUserId);
         return id;
     }
 
@@ -414,7 +432,8 @@ public void requestCheckIsFriend(final String userID, OnCheckIsFriendCompleteLis
             throw new SocialNetworkException("userID can't be null or empty");
         }
         Bundle args = new Bundle();
-        args.putString(RequestCheckIsFriendAsyncTask.PARAM_USER_ID, userID);         args.putString(USERID, userId);
+        args.putString(RequestCheckIsFriendAsyncTask.PARAM_USER_ID, userID);
+        args.putString(USERID, mUserId);
         executeRequest(new RequestCheckIsFriendAsyncTask(), args, REQUEST_CHECK_IS_FRIEND);
     }
 
@@ -503,7 +522,7 @@ protected Bundle doInBackground(Bundle... params) {
 
         @Override
         protected void onPostExecute(Bundle result) {
-            userId = result.getString(USERID);
+			mUserId = result.getString(USERID);
             if(checkTokenError(result)) return;
             SocialPerson socialPerson = result.getParcelable(REQUEST_GET_PERSON);
             if(result.containsKey(CURRENT) && result.getBoolean(CURRENT)){
@@ -608,7 +627,8 @@ protected Bundle doInBackground(Bundle... params) {
                     }
                 } else if (json instanceof JSONArray){
                     JSONArray jsonArray = new JSONArray(response);
-                    for (int i = 0; i < jsonArray.length(); i++) {
+                    int length = jsonArray.length();
+                    for (int i = 0; i < length; i++) {
                         getSocialPerson(socialPerson, jsonArray.getJSONObject(i));
                         socialPersons.add(socialPerson);
                         socialPerson = new SocialPerson();
@@ -629,7 +649,7 @@ protected void onPostExecute(Bundle result) {
             if (result.containsKey(FRIENDS)) {
                 if (!handleRequestResult(result, REQUEST_GET_FRIENDS)) return;
                 ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                        .OnGetFriendsComplete(getID(), socialPersons);
+                        .onGetFriendsComplete(getID(), socialPersons);
             } else {
                 if (!handleRequestResult(result, REQUEST_GET_PERSONS)) return;
                 ((OnRequestSocialPersonsCompleteListener) mLocalListeners.get(REQUEST_GET_PERSONS))
@@ -695,7 +715,8 @@ protected Bundle doInBackground(Bundle... params) {
                     }
                 } else if (json instanceof JSONArray){
                     JSONArray jsonArray = new JSONArray(response);
-                    for (int i = 0; i < jsonArray.length(); i++) {
+                    int length = jsonArray.length();
+                    for (int i = 0; i < length; i++) {
                         friendIds.add(jsonArray.getString(i));
                     }
                     result.putStringArray(RESULT_GET_FRIENDS_ID, friendIds.toArray(new String[friendIds.size()]));
@@ -715,7 +736,7 @@ protected void onPostExecute(Bundle result) {
             String[] friendsIds = result.getStringArray(RESULT_GET_FRIENDS_ID);
 
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                        .OnGetFriendsIdComplete(getID(), friendsIds);
+                        .onGetFriendsIdComplete(getID(), friendsIds);
             Bundle args = new Bundle();
             args.putStringArray(RequestSocialPersonsAsyncTask.PARAM_USER_ID, friendsIds);
             args.putBoolean(FRIENDS, true);
@@ -765,7 +786,7 @@ protected Bundle doInBackground(Bundle... params) {
 
         @Override
         protected void onPostExecute(Bundle result) {
-            userId = result.getString(USERID);
+            mUserId = result.getString(USERID);
             if(checkTokenError(result)) return;
             if (!handleRequestResult(result, REQUEST_CHECK_IS_FRIEND,
                     result.getString(RESULT_REQUESTED_ID))) return;
diff --git a/resources/128.png b/resources/128.png
old mode 100644
new mode 100755
diff --git a/resources/18.png b/resources/18.png
old mode 100644
new mode 100755
diff --git a/resources/50.png b/resources/50.png
old mode 100644
new mode 100755
diff --git a/resources/64.png b/resources/64.png
old mode 100644
new mode 100755
diff --git a/resources/fb.png b/resources/fb.png
old mode 100644
new mode 100755
diff --git a/resources/gp.png b/resources/gp.png
old mode 100644
new mode 100755
diff --git a/resources/header.png b/resources/header.png
old mode 100644
new mode 100755
diff --git a/resources/in.png b/resources/in.png
old mode 100644
new mode 100755
diff --git a/resources/main.png b/resources/main.png
old mode 100644
new mode 100755
diff --git a/resources/ok.png b/resources/ok.png
old mode 100644
new mode 100755
diff --git a/resources/recomended.png b/resources/recomended.png
old mode 100644
new mode 100755
diff --git a/resources/social512.png b/resources/social512.png
old mode 100644
new mode 100755
diff --git a/resources/twitter.png b/resources/twitter.png
old mode 100644
new mode 100755
diff --git a/resources/vk.png b/resources/vk.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.10.png b/resources/wiki-screenshots/screenshot.10.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.11.png b/resources/wiki-screenshots/screenshot.11.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.13.png b/resources/wiki-screenshots/screenshot.13.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.14.png b/resources/wiki-screenshots/screenshot.14.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.15.png b/resources/wiki-screenshots/screenshot.15.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.16.png b/resources/wiki-screenshots/screenshot.16.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.3.png b/resources/wiki-screenshots/screenshot.3.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.4.png b/resources/wiki-screenshots/screenshot.4.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.5.png b/resources/wiki-screenshots/screenshot.5.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.6.png b/resources/wiki-screenshots/screenshot.6.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.7.png b/resources/wiki-screenshots/screenshot.7.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.8.png b/resources/wiki-screenshots/screenshot.8.png
old mode 100644
new mode 100755
diff --git a/resources/wiki-screenshots/screenshot.9.png b/resources/wiki-screenshots/screenshot.9.png
old mode 100644
new mode 100755
diff --git a/settings.gradle b/settings.gradle
old mode 100644
new mode 100755
index 589d42c..55f1821
--- a/settings.gradle
+++ b/settings.gradle
@@ -1 +1 @@
-include ':ASNE', ':ASNECore', ':googleplus', ':linkedin', ':odnoklassniki', ':twitter', ':vk', ':facebook', ':instagram'
\ No newline at end of file
+include ':ASNEDemo', ':ASNECore', ':googleplus', ':linkedin', ':odnoklassniki', ':twitter', ':vk', ':facebook', ':instagram'
\ No newline at end of file
diff --git a/twitter/.gitignore b/twitter/.gitignore
old mode 100644
new mode 100755
diff --git a/twitter/build.gradle b/twitter/build.gradle
old mode 100644
new mode 100755
index 652db25..4f3fc9b
--- a/twitter/build.gradle
+++ b/twitter/build.gradle
@@ -1,17 +1,39 @@
 apply plugin: 'com.android.library'
 
 android {
+<<<<<<< HEAD
     compileSdkVersion 21
     buildToolsVersion '22.0.1'
 
     defaultConfig {
         minSdkVersion 11
         targetSdkVersion 21
+=======
+    compileSdkVersion 23
+    buildToolsVersion "21.1.1"
+
+    defaultConfig {
+        //applicationId "com.github.gorbin.asne.twitter"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     }
 }
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
+<<<<<<< HEAD
+=======
+    compile 'com.android.support:appcompat-v7:23.1.1'
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     compile project(':ASNECore')
     compile 'org.twitter4j:twitter4j-core:4.0.2@jar'
 }
diff --git a/twitter/gradle.properties b/twitter/gradle.properties
old mode 100644
new mode 100755
diff --git a/twitter/proguard-rules.pro b/twitter/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/twitter/src/main/AndroidManifest.xml b/twitter/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index aedb097..3670dea
--- a/twitter/src/main/AndroidManifest.xml
+++ b/twitter/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.github.gorbin.asne.twitter"
     xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    <!--<uses-sdk tools:node="merge" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
     <application android:allowBackup="true"></application>
diff --git a/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterPerson.java b/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterPerson.java
old mode 100644
new mode 100755
diff --git a/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java b/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
old mode 100644
new mode 100755
index baec237..4b1999b
--- a/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
+++ b/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
@@ -28,6 +28,7 @@
 import android.support.v4.app.Fragment;
 import android.text.TextUtils;
 
+import com.github.gorbin.asne.core.AccessToken;
 import com.github.gorbin.asne.core.OAuthActivity;
 import com.github.gorbin.asne.core.OAuthSocialNetwork;
 import com.github.gorbin.asne.core.SocialNetworkAsyncTask;
@@ -57,7 +58,6 @@
 import twitter4j.TwitterException;
 import twitter4j.TwitterFactory;
 import twitter4j.User;
-import twitter4j.auth.AccessToken;
 import twitter4j.auth.RequestToken;
 import twitter4j.conf.ConfigurationBuilder;
 
@@ -77,15 +77,37 @@
     // max 16 bit to use in startActivityForResult
     private static final int REQUEST_AUTH = UUID.randomUUID().hashCode() & 0xFFFF;
 //    private final String TWITTER_CALLBACK_URL = "oauth://ASNE";
-    private final String fConsumerKey;
-    private final String fConsumerSecret;
-    private String fRedirectURL;
+    private final String mConsumerKey;
+    private final String mConsumerSecret;
+    private String mRedirectURL;
     private Twitter mTwitter;
     private RequestToken mRequestToken;
 
     public TwitterSocialNetwork(Fragment fragment, Context context, String consumerKey, String consumerSecret, String redirectURL) {
         super(fragment,context);
 
+        mConsumerKey = consumerKey;
+        mConsumerSecret = consumerSecret;
+        mRedirectURL = redirectURL;
+
+
+        if (TextUtils.isEmpty(mConsumerKey) || TextUtils.isEmpty(mConsumerSecret)) {
+            throw new IllegalArgumentException("consumerKey and consumerSecret are invalid");
+        }
+        /*
+        *
+        * No authentication challenges found
+        * Relevant discussions can be found on the Internet at:
+        * http://www.google.co.jp/search?q=8e063946 or
+        * http://www.google.co.jp/search?q=ef59cf9f
+        *
+        * */
+        initTwitterClient();
+    }
+
+    public TwitterSocialNetwork(Fragment fragment, Context context, String consumerKey, String consumerSecret, String redirectURL) {
+        super(fragment, context);
+
         fConsumerKey = consumerKey;
         fConsumerSecret = consumerSecret;
         fRedirectURL = redirectURL;
@@ -107,8 +129,8 @@ public TwitterSocialNetwork(Fragment fragment, Context context, String consumerK
 
     private void initTwitterClient() {
         ConfigurationBuilder builder = new ConfigurationBuilder();
-        builder.setOAuthConsumerKey(fConsumerKey);
-        builder.setOAuthConsumerSecret(fConsumerSecret);
+        builder.setOAuthConsumerKey(mConsumerKey);
+        builder.setOAuthConsumerSecret(mConsumerSecret);
 
         String accessToken = mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null);
         String accessTokenSecret = mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_SECRET, null);
@@ -118,7 +140,7 @@ private void initTwitterClient() {
         if (TextUtils.isEmpty(accessToken) && TextUtils.isEmpty(accessTokenSecret)) {
             mTwitter = factory.getInstance();
         } else {
-            mTwitter = factory.getInstance(new AccessToken(accessToken, accessTokenSecret));
+            mTwitter = factory.getInstance(new twitter4j.auth.AccessToken(accessToken, accessTokenSecret));
         }
     }
 
@@ -172,8 +194,8 @@ public int getID() {
      * @return {@link com.github.gorbin.asne.core.AccessToken}
      */
     @Override
-    public com.github.gorbin.asne.core.AccessToken getAccessToken() {
-        return new com.github.gorbin.asne.core.AccessToken(
+    public AccessToken getAccessToken() {
+        return new AccessToken(
                 mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null),
                 mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_SECRET, null)
         );
@@ -187,7 +209,7 @@ public int getID() {
     public void requestAccessToken(OnRequestAccessTokenCompleteListener onRequestAccessTokenCompleteListener) {
         super.requestAccessToken(onRequestAccessTokenCompleteListener);
         ((OnRequestAccessTokenCompleteListener) mLocalListeners.get(REQUEST_ACCESS_TOKEN))
-                .onRequestAccessTokenComplete(getID(), new com.github.gorbin.asne.core.AccessToken(
+                .onRequestAccessTokenComplete(getID(), new AccessToken(
                         mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_TOKEN, null),
                         mSharedPreferences.getString(SAVE_STATE_KEY_OAUTH_SECRET, null)
                 ));
@@ -424,13 +446,13 @@ public void requestRemoveFriend(String userID, OnRequestRemoveFriendCompleteList
      */
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        int sanitizedRequestCode = requestCode % 0x10000;
+        int sanitizedRequestCode = requestCode & 0xFFFF;
         if (sanitizedRequestCode != REQUEST_AUTH) return;
         super.onActivityResult(requestCode, resultCode, data);
 
         Uri uri = data != null ? data.getData() : null;
 
-        if (uri != null && uri.toString().startsWith(fRedirectURL)) {
+        if (uri != null && uri.toString().startsWith(mRedirectURL)) {
             String verifier = uri.getQueryParameter(URL_TWITTER_OAUTH_VERIFIER);
 
             RequestLogin2AsyncTask requestLogin2AsyncTask = new RequestLogin2AsyncTask();
@@ -472,7 +494,7 @@ protected Bundle doInBackground(Bundle... params) {
             Bundle result = new Bundle();
 
             try {
-                mRequestToken = mTwitter.getOAuthRequestToken(fRedirectURL);
+                mRequestToken = mTwitter.getOAuthRequestToken(mRedirectURL);
                 Uri oauthLoginURL = Uri.parse(mRequestToken.getAuthenticationURL() + "&force_login=true");
 
                 result.putString(RESULT_OAUTH_LOGIN, oauthLoginURL.toString());
@@ -493,10 +515,17 @@ protected void onPostExecute(Bundle result) {
                             .putExtra(OAuthActivity.PARAM_CALLBACK, fRedirectURL)
                             .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, result.getString(RESULT_OAUTH_LOGIN));
 
+<<<<<<< HEAD
                     mSocialNetworkManager.getActivity().startActivityForResult(intent, REQUEST_AUTH);
                 }
             }
             catch(Exception e){
+=======
+            if (result.containsKey(RESULT_OAUTH_LOGIN)) {
+                Intent intent = new Intent(mSocialNetworkManager.getActivity(), OAuthActivity.class)
+                        .putExtra(OAuthActivity.PARAM_CALLBACK, mRedirectURL)
+                        .putExtra(OAuthActivity.PARAM_URL_TO_LOAD, result.getString(RESULT_OAUTH_LOGIN));
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
 
             }
         }
@@ -516,7 +545,7 @@ protected Bundle doInBackground(Bundle... params) {
             Bundle result = new Bundle();
 
             try {
-                AccessToken accessToken = mTwitter.getOAuthAccessToken(mRequestToken, verifier);
+                twitter4j.auth.AccessToken accessToken = mTwitter.getOAuthAccessToken(mRequestToken, verifier);
 
                 result.putString(RESULT_TOKEN, accessToken.getToken());
                 result.putString(RESULT_SECRET, accessToken.getTokenSecret());
@@ -789,10 +818,10 @@ protected void onPostExecute(Bundle result) {
                     result.getStringArray(RESULT_GET_FRIENDS_ID))) return;
 
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
+                    .onGetFriendsIdComplete(getID(), result.getStringArray(RESULT_GET_FRIENDS_ID));
             ArrayList<SocialPerson> socialPersons = result.getParcelableArrayList(RESULT_GET_FRIENDS);
             ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsComplete(getID(), socialPersons);
+                    .onGetFriendsComplete(getID(), socialPersons);
         }
     }
 
diff --git a/vk/.gitignore b/vk/.gitignore
old mode 100644
new mode 100755
diff --git a/vk/build.gradle b/vk/build.gradle
old mode 100644
new mode 100755
index 32d2356..f0555e0
--- a/vk/build.gradle
+++ b/vk/build.gradle
@@ -1,16 +1,39 @@
 apply plugin: 'com.android.library'
 
 android {
+<<<<<<< HEAD
     compileSdkVersion 21
     buildToolsVersion '22.0.1'
 
     defaultConfig {
         minSdkVersion 11
         targetSdkVersion 21
+=======
+    compileSdkVersion 23
+    buildToolsVersion "21.1.1"
+
+    defaultConfig {
+        //applicationId "com.github.gorbin.asne.vk"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     }
 }
 
 dependencies {
+<<<<<<< HEAD
+=======
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile 'com.android.support:appcompat-v7:23.1.1'
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     compile project(':ASNECore')
-    compile('com.vk:androidsdk:1.3.3@aar') { exclude module: 'support-v4' }
+    compile('com.vk:androidsdk:1.3.6@aar') { exclude module: 'support-v4' }
 }
diff --git a/vk/gradle.properties b/vk/gradle.properties
old mode 100644
new mode 100755
diff --git a/vk/proguard-rules.pro b/vk/proguard-rules.pro
old mode 100644
new mode 100755
diff --git a/vk/src/main/AndroidManifest.xml b/vk/src/main/AndroidManifest.xml
old mode 100644
new mode 100755
index e4f096a..1534b32
--- a/vk/src/main/AndroidManifest.xml
+++ b/vk/src/main/AndroidManifest.xml
@@ -1,7 +1,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.github.gorbin.asne.vk"
     xmlns:tools="http://schemas.android.com/tools">
-    <!--<uses-sdk tools:node="replace" />-->
+    <!--<uses-sdk tools:node="merge" />-->
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
     <application android:allowBackup="true"></application>
diff --git a/vk/src/main/java/com/github/gorbin/asne/vk/.VkSocialNetwork.java.swp b/vk/src/main/java/com/github/gorbin/asne/vk/.VkSocialNetwork.java.swp
new file mode 100755
index 0000000..9f22ea4
Binary files /dev/null and b/vk/src/main/java/com/github/gorbin/asne/vk/.VkSocialNetwork.java.swp differ
diff --git a/vk/src/main/java/com/github/gorbin/asne/vk/VKPerson.java b/vk/src/main/java/com/github/gorbin/asne/vk/VKPerson.java
old mode 100644
new mode 100755
diff --git a/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java b/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
old mode 100644
new mode 100755
index 4ce7878..1999921
--- a/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
+++ b/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
@@ -21,9 +21,13 @@
  *******************************************************************************/
 package com.github.gorbin.asne.vk;
 
+import android.content.Context;
 import android.app.Activity;
+<<<<<<< HEAD
 import android.app.AlertDialog;
 import android.content.Context;
+=======
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
 import android.content.Intent;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -85,17 +89,17 @@
     private static final String SAVE_STATE_KEY_OAUTH_SECRET = "VkSocialNetwork.SAVE_STATE_KEY_OAUTH_SECRET";
     private static final String SAVE_STATE_KEY_USER_ID = "VkSocialNetwork.SAVE_STATE_KEY_USER_ID";
     /*** Developer activity*/
-    private Activity activity;
+    private Activity mActivity;
     /*** VK app id*/
-    private String key;
+    private String mKey;
     /*** VK access token*/
-    private VKAccessToken accessToken;
+    private VKAccessToken mAccessToken;
     /*** Id of current user*/
-    private String userId;
+    private String mUserId;
     /*** Permissions array*/
-    private String[] permissions;
+    private String[] mPermissions;
     /*** VK SDK listener to catch authorization @see <a href="http://vkcom.github.io/vk-android-sdk/com/vk/sdk/VKSdkListener.html">VKSdkListener</a>*/
-    private final VKSdkListener vkSdkListener = new VKSdkListener() {
+    private final VKSdkListener mVkSdkListener = new VKSdkListener() {
         @Override
         public void onCaptchaError(VKError captchaError) {
             new VKCaptchaDialog(captchaError).show();
@@ -103,7 +107,7 @@ public void onCaptchaError(VKError captchaError) {
 
         @Override
         public void onTokenExpired(VKAccessToken expiredToken) {
-            VKSdk.authorize(permissions, true, false);
+            VKSdk.authorize(mPermissions, true, false);
         }
 
         @Override
@@ -113,8 +117,8 @@ public void onAccessDenied(VKError authorizationError) {
         }
 
         @Override
-        public void onReceiveNewToken(VKAccessToken newToken) {
-            accessToken = newToken;
+        public void onReceiveNewToken(VKAccessToken accessToken) {
+            mAccessToken = accessToken;
             mSharedPreferences.edit()
                     .putString(SAVE_STATE_KEY_OAUTH_TOKEN, accessToken.accessToken)
                     .putString(SAVE_STATE_KEY_OAUTH_SECRET, accessToken.secret)
@@ -124,23 +128,34 @@ public void onReceiveNewToken(VKAccessToken newToken) {
                 ((OnLoginCompleteListener) mLocalListeners.get(REQUEST_LOGIN)).onLoginSuccess(getID());
                 mLocalListeners.remove(REQUEST_LOGIN);
             }
-            userId = accessToken.userId;
+            mUserId = accessToken.userId;
         }
 
         @Override
-        public void onAcceptUserToken(VKAccessToken token) {
-            accessToken = token;
+        public void onAcceptUserToken(VKAccessToken accessToken) {
+            mAccessToken = accessToken;
             mSharedPreferences.edit()
                     .putString(SAVE_STATE_KEY_OAUTH_TOKEN, accessToken.accessToken)
                     .putString(SAVE_STATE_KEY_OAUTH_SECRET, accessToken.secret)
                     .putString(SAVE_STATE_KEY_USER_ID, accessToken.userId)
                     .apply();
-            userId = accessToken.userId;
+            mUserId = accessToken.userId;
         }
     };
 
+<<<<<<< HEAD
     public VkSocialNetwork(Fragment fragment, Context context, String key, String[] permissions) {
         super(fragment,context);
+=======
+    public VkSocialNetwork(Fragment fragment, String key, String[] permissions) {
+        super(fragment);
+        this.mKey = key;
+        this.mPermissions = permissions;
+    }
+
+    public VkSocialNetwork(Fragment fragment, Context context, String key, String[] permissions) {
+        super(fragment, context);
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
         this.key = key;
         this.permissions = permissions;
     }
@@ -162,7 +177,7 @@ private void requestIdPerson() {
             public void onComplete(VKResponse response) {
                 try {
                     JSONObject jsonResponse = response.json.getJSONArray("response").getJSONObject(0);
-                    userId = jsonResponse.getString("id");
+                    mUserId = jsonResponse.getString("id");
                 } catch (JSONException e) {
                     e.printStackTrace();
                 }
@@ -200,7 +215,7 @@ public boolean isConnected() {
     @Override
     public void requestLogin(OnLoginCompleteListener onLoginCompleteListener) {
         super.requestLogin(onLoginCompleteListener);
-        VKSdk.authorize(permissions);
+        VKSdk.authorize(mPermissions);
     }
 
     /**
@@ -334,7 +349,8 @@ public void onComplete(VKResponse response) {
                 try {
 
                     JSONArray jsonArray = response.json.getJSONArray("response");
-                    for (int i = 0; i < jsonArray.length(); i++) {
+                    int length = jsonArray.length();
+                    for (int i = 0; i < length; i++) {
                         getSocialPerson(socialPerson, jsonArray.getJSONObject(i));
                         socialPersons.add(socialPerson);
                         socialPerson = new SocialPerson();
@@ -541,7 +557,7 @@ public void requestPostMessage(String message, OnPostingCompleteListener onPosti
     public void requestPostPhoto(File photo, final String message, OnPostingCompleteListener onPostingCompleteListener) {
         super.requestPostPhoto(photo, message, onPostingCompleteListener);
         final Bitmap vkPhoto = getPhoto(photo);
-        VKRequest request = VKApi.uploadWallPhotoRequest(new VKUploadImage(vkPhoto, VKImageParameters.pngImage()), 0, Integer.parseInt(userId));
+        VKRequest request = VKApi.uploadWallPhotoRequest(new VKUploadImage(vkPhoto, VKImageParameters.pngImage()), 0, Integer.parseInt(mUserId));
         request.executeWithListener(new VKRequest.VKRequestListener() {
             @Override
             public void onComplete(VKResponse response) {
@@ -691,7 +707,8 @@ public void onComplete(VKResponse response) {
                     jsonResponse = response.json.getJSONObject("response");
                     JSONArray jsonArray = jsonResponse.getJSONArray("items");
                     ids = new String[jsonArray.length()];
-                    for (int i = 0; i < jsonArray.length(); i++) {
+                    int length = jsonArray.length();
+                    for (int i = 0; i < length; i++) {
                         ids[i] = jsonArray.getJSONObject(i).getString("id");
                         getSocialPerson(socialPerson, jsonArray.getJSONObject(i));
                         socialPersons.add(socialPerson);
@@ -701,9 +718,9 @@ public void onComplete(VKResponse response) {
                     e.printStackTrace();
                 }
                 ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                    .OnGetFriendsIdComplete(getID(), ids);
+                    .onGetFriendsIdComplete(getID(), ids);
                 ((OnRequestGetFriendsCompleteListener) mLocalListeners.get(REQUEST_GET_FRIENDS))
-                        .OnGetFriendsComplete(getID(), socialPersons);
+                        .onGetFriendsComplete(getID(), socialPersons);
                 mLocalListeners.remove(REQUEST_GET_FRIENDS);
             }
             @Override
@@ -775,13 +792,13 @@ public void onError(VKError error) {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        activity = mSocialNetworkManager.getActivity();
-        VKUIHelper.onCreate(activity);
-        VKSdk.initialize(vkSdkListener, key);
+        this.mActivity = mSocialNetworkManager.getActivity();
+        VKUIHelper.onCreate(mActivity);
+        VKSdk.initialize(mVkSdkListener, mKey);
         VKSdk.wakeUpSession();
         if(isConnected()) {
-            userId = mSharedPreferences.getString(SAVE_STATE_KEY_USER_ID, null);
-            if(userId == null){
+            mUserId = mSharedPreferences.getString(SAVE_STATE_KEY_USER_ID, null);
+            if (mUserId == null){
                 requestIdPerson();
             }
         }
@@ -793,7 +810,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void onResume() {
         super.onResume();
-        VKUIHelper.onResume(activity);
+        VKUIHelper.onResume(mActivity);
     }
 
     /**
@@ -802,7 +819,7 @@ public void onResume() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        VKUIHelper.onDestroy(activity);
+        VKUIHelper.onDestroy(mActivity);
     }
 
     /**
@@ -814,7 +831,12 @@ public void onDestroy() {
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
+<<<<<<< HEAD
         int sanitizedRequestCode = requestCode % 0x10000;
         VKUIHelper.onActivityResult(activity,sanitizedRequestCode, resultCode, data);
+=======
+        int sanitizedRequestCode = requestCode & 0xFFFF;
+        VKUIHelper.onActivityResult(sanitizedRequestCode, resultCode, data);
+>>>>>>> 91bf48d9fc2560400bc6210eb95a8eb68a76920f
     }
 }
