diff --git a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
index 387e743..3ef6417 100644
--- a/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
+++ b/ASNECore/src/main/java/com/github/gorbin/asne/core/SocialNetwork.java
@@ -127,6 +127,15 @@ protected SocialNetwork(Fragment fragment) {
         mSharedPreferences = mSocialNetworkManager.getActivity().getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
     }
 
+    /**
+     * @param socialMediaManager the SocialMediaManager fragment.
+     * @param context ant Activity or Application if not being called from a fragment
+     */
+    protected SocialNetwork(Fragment socialMediaManager, Context context) {
+        //we keep the fragment in case it is needed in future. it also minimises the changes required.
+        mSocialNetworkManager = socialMediaManager;
+        mSharedPreferences = context.getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
+    }
     //////////////////// LIFECYCLE ////////////////////
 
     /**
diff --git a/README.md b/README.md
index 5c04dde..064a9bc 100644
--- a/README.md
+++ b/README.md
@@ -139,6 +139,8 @@ mSocialNetworkManager = (SocialNetworkManager) getFragmentManager().findFragment
 	if (mSocialNetworkManager == null) {
         mSocialNetworkManager = new SocialNetworkManager();
 		FacebookSocialNetwork fbNetwork = new FacebookSocialNetwork(this, fbScope);
+		//or from an activity
+		//FacebookSocialNetwork fbNetwork = new FacebookSocialNetwork(mSocialNetworkManager, this, fbScope);
         mSocialNetworkManager.addSocialNetwork(fbNetwork);
         getFragmentManager().beginTransaction().add(mSocialNetworkManager, SOCIAL_NETWORK_TAG).commit();
 	}
diff --git a/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java b/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
index 57f514f..9baf82f 100644
--- a/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
+++ b/facebook/src/main/java/com/github/gorbin/asne/facebook/FacebookSocialNetwork.java
@@ -91,6 +91,7 @@ public void call(Session session, SessionState state, Exception exception) {
         }
     };
 
+    //TODO: refactor to use an init that is shared by constructors
     public FacebookSocialNetwork(Fragment fragment, ArrayList<String> permissions) {
         super(fragment);
         String applicationID = Utility.getMetadataApplicationId(fragment.getActivity());
@@ -102,6 +103,17 @@ public FacebookSocialNetwork(Fragment fragment, ArrayList<String> permissions) {
         this.permissions = permissions;
     }
 
+    public FacebookSocialNetwork(Fragment fragment, Context context, ArrayList<String> permissions) {
+        super(fragment, context);
+        String applicationID = Utility.getMetadataApplicationId(context);
+
+        if (applicationID == null) {
+            throw new IllegalStateException("applicationID can't be null\n" +
+                    "Please check https://developers.facebook.com/docs/android/getting-started/");
+        }
+        this.permissions = permissions;
+    }
+
     /**
      * Check is social network connected
      * @return true if connected to Facebook social network and false if not
diff --git a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
index 442eaeb..1d436ba 100644
--- a/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
+++ b/googleplus/src/main/java/com/github/gorbin/asne/googleplus/GooglePlusSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.googleplus;
 
+import android.content.Context;
 import android.app.Activity;
 import android.content.Intent;
 import android.net.Uri;
@@ -90,6 +91,10 @@ public GooglePlusSocialNetwork(Fragment fragment) {
         super(fragment);
     }
 
+    public GooglePlusSocialNetwork(Fragment fragment, Context context) {
+        super(fragment, context);
+    }
+
     /**
      * Check is social network connected
      * @return true if connected to Google Plus social network and false if not
diff --git a/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java b/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java
index 89892f9..5a32080 100644
--- a/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java
+++ b/instagram/src/main/java/com/github/gorbin/asne/instagram/InstagramSocialNetwork.java
@@ -87,6 +87,7 @@
     private boolean restart = false;
     private Bundle requestBundle;
 
+    //TODO: refactor to use an init that is shared by constructors
     public InstagramSocialNetwork(Fragment fragment, String clientId, String clientSecret, String redirectURL, String scope) {
         super(fragment);
 
@@ -108,6 +109,27 @@ public InstagramSocialNetwork(Fragment fragment, String clientId, String clientS
                 + clientSecret + "&redirect_uri=" + redirectURL + "&grant_type=authorization_code";
     }
 
+    public InstagramSocialNetwork(Fragment fragment, Context context, String clientId, String clientSecret, String redirectURL, String scope) {
+        super(fragment, context);
+
+        this.clientId = clientId;
+        this.clientSecret = clientSecret;
+        this.redirectURL = redirectURL;
+
+        if (TextUtils.isEmpty(clientId) || TextUtils.isEmpty(clientSecret)) {
+            throw new IllegalArgumentException("clientId and clientSecret are invalid");
+        }
+        if(scope == null) {
+            scope = "basic";
+        }
+        String INSTAGRAM_AUTHURL = "https://api.instagram.com/oauth/authorize/";
+        authURLString = INSTAGRAM_AUTHURL + "?client_id=" + clientId + "&redirect_uri="
+                + redirectURL + "&response_type=code&display=touch&scope=" + scope;
+
+        tokenURLString = INSTAGRAM_TOKENURL + "?client_id=" + clientId + "&client_secret="
+                + clientSecret + "&redirect_uri=" + redirectURL + "&grant_type=authorization_code";
+    }
+
     /**
      * Check is social network connected
      * @return true if connected to Instagram and false if not
diff --git a/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java b/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java
index 0681337..3112b91 100644
--- a/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java
+++ b/linkedin/src/main/java/com/github/gorbin/asne/linkedin/LinkedInJSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.linkedin;
 
+import android.content.Context;
 import android.app.Activity;
 import android.content.Intent;
 import android.net.Uri;
@@ -68,6 +69,8 @@
 import java.util.Set;
 import java.util.UUID;
 
+import javax.naming.Context;
+
 /**
  * Class for LinkedIn social network integration using LinkedIn-j library
  *
@@ -113,6 +116,7 @@
 
     private String mOAuthTokenSecret;
 
+    //TODO: refactor to use an init that is shared by constructors
     public LinkedInJSocialNetwork(Fragment fragment, String consumerKey, String consumerSecret, String permissions) {
         super(fragment);
 
@@ -125,6 +129,18 @@ public LinkedInJSocialNetwork(Fragment fragment, String consumerKey, String cons
         mLinkedInApiClientFactory = LinkedInApiClientFactory.newInstance(consumerKey, consumerSecret);
     }
 
+    public LinkedInJSocialNetwork(Fragment fragment, Context context, String consumerKey, String consumerSecret, String permissions) {
+        super(fragment, context);
+
+        if (TextUtils.isEmpty(consumerKey) || TextUtils.isEmpty(consumerSecret) || TextUtils.isEmpty(permissions)) {
+            throw new IllegalArgumentException("TextUtils.isEmpty(fConsumerKey) || TextUtils.isEmpty(fConsumerSecret) || TextUtils.isEmpty(fPermissions)");
+        }
+
+        mOAuthService = LinkedInOAuthServiceFactory.getInstance()
+                .createLinkedInOAuthService(consumerKey, consumerSecret, permissions);
+        mLinkedInApiClientFactory = LinkedInApiClientFactory.newInstance(consumerKey, consumerSecret);
+    }
+
     /**
      * Check is social network connected
      * @return true if connected to LinkedIn social network and false if not
diff --git a/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java b/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java
index 2ce2c56..ad39a78 100644
--- a/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java
+++ b/odnoklassniki/src/main/java/com/github/gorbin/asne/odnoklassniki/OkSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.odnoklassniki;
 
+import android.content.Context;
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
@@ -78,6 +79,7 @@
     private String appPublicKey;
     private String appSecretKey;
 
+    //TODO: refactor to use an init that is shared by constructors
     public OkSocialNetwork(Fragment fragment, String appId, String appPublicKey, String appSecretKey, String[] permissions) {
         super(fragment);
         if (TextUtils.isEmpty(appId) || TextUtils.isEmpty(appPublicKey) || TextUtils.isEmpty(appSecretKey)) {
@@ -92,6 +94,20 @@ public OkSocialNetwork(Fragment fragment, String appId, String appPublicKey, Str
         mOdnoklassniki.setTokenRequestListener(this);
     }
 
+    public OkSocialNetwork(Fragment fragment, Context context, String appId, String appPublicKey, String appSecretKey, String[] permissions) {
+        super(fragment, context);
+        if (TextUtils.isEmpty(appId) || TextUtils.isEmpty(appPublicKey) || TextUtils.isEmpty(appSecretKey)) {
+            throw new IllegalArgumentException("TextUtils.isEmpty(appId) || TextUtils.isEmpty(appPublicKey) || TextUtils.isEmpty(appSecretKey)");
+        }
+        this.appId = appId;
+        this.appPublicKey = appPublicKey;
+        this.appSecretKey = appSecretKey;
+        this.permissions = permissions;
+        activity = mSocialNetworkManager.getActivity();
+        mOdnoklassniki = Odnoklassniki.createInstance(activity, appId, appSecretKey, appPublicKey);
+        mOdnoklassniki.setTokenRequestListener(this);
+    }
+
     /**
      * Called after successful authorization
      * @param token token string of OK social network
diff --git a/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java b/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
index fe30503..0fa4d00 100644
--- a/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
+++ b/twitter/src/main/java/com/github/gorbin/asne/twitter/TwitterSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.twitter;
 
+import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
@@ -104,6 +105,28 @@ public TwitterSocialNetwork(Fragment fragment, String consumerKey, String consum
         initTwitterClient();
     }
 
+    public TwitterSocialNetwork(Fragment fragment, Context context, String consumerKey, String consumerSecret, String redirectURL) {
+        super(fragment, context);
+
+        fConsumerKey = consumerKey;
+        fConsumerSecret = consumerSecret;
+        fRedirectURL = redirectURL;
+
+
+        if (TextUtils.isEmpty(fConsumerKey) || TextUtils.isEmpty(fConsumerSecret)) {
+            throw new IllegalArgumentException("consumerKey and consumerSecret are invalid");
+        }
+        /*
+        *
+        * No authentication challenges found
+        * Relevant discussions can be found on the Internet at:
+        * http://www.google.co.jp/search?q=8e063946 or
+        * http://www.google.co.jp/search?q=ef59cf9f
+        *
+        * */
+        initTwitterClient();
+    }
+
     private void initTwitterClient() {
         ConfigurationBuilder builder = new ConfigurationBuilder();
         builder.setOAuthConsumerKey(fConsumerKey);
diff --git a/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java b/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
index 7986525..e07a866 100644
--- a/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
+++ b/vk/src/main/java/com/github/gorbin/asne/vk/VkSocialNetwork.java
@@ -21,6 +21,7 @@
  *******************************************************************************/
 package com.github.gorbin.asne.vk;
 
+import android.content.Context;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Intent;
@@ -144,6 +145,12 @@ public VkSocialNetwork(Fragment fragment, String key, String[] permissions) {
         this.permissions = permissions;
     }
 
+    public VkSocialNetwork(Fragment fragment, Context context, String key, String[] permissions) {
+        super(fragment, context);
+        this.key = key;
+        this.permissions = permissions;
+    }
+
     private static boolean stringToBool(String s) {
         if (s.equals("1"))
             return true;
