diff --git a/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.java b/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.java
index 6c47312..f47437f 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.java
@@ -1,41 +1,42 @@
 package me.dm7.barcodescanner.core;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
-import android.content.res.Configuration;
-import android.graphics.Point;
-import android.view.Display;
-import android.view.WindowManager;
+import android.content.pm.PackageManager;
+import android.hardware.Camera;
 
-public class DisplayUtils {
-    public static Point getScreenResolution(Context context) {
-        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
-        Display display = wm.getDefaultDisplay();
-        Point screenResolution = new Point();
-        if (android.os.Build.VERSION.SDK_INT >= 13) {
-            display.getSize(screenResolution);
-        } else {
-            screenResolution.set(display.getWidth(), display.getHeight());
+public class CameraUtils {
+    /** A safe way to get an instance of the Camera object. */
+    @SuppressLint("NewApi")
+    public static Camera getCameraInstance(){
+        Camera c = null;
+        try {
+            Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
+            for (int camNo = 0; camNo < Camera.getNumberOfCameras(); camNo++) {
+                Camera.getCameraInfo(camNo, cameraInfo);
+                if (cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_BACK) {
+                    c = Camera.open(camNo);
+                }else if(cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_FRONT){
+                    c = Camera.open(camNo);
+                }
+            }
+            if (c == null) {
+                c = Camera.open();
+            }
         }
-
-        return screenResolution;
+        catch (Exception e){
+            // Camera is not available (in use or does not exist)
+            e.printStackTrace();
+        }
+        return c; // returns null if camera is unavailable
     }
 
-    public static int getScreenOrientation(Context context)
-    {
-        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
-        Display display = wm.getDefaultDisplay();
-
-        int orientation = Configuration.ORIENTATION_UNDEFINED;
-        if(display.getWidth()==display.getHeight()){
-            orientation = Configuration.ORIENTATION_SQUARE;
-        } else{
-            if(display.getWidth() < display.getHeight()){
-                orientation = Configuration.ORIENTATION_PORTRAIT;
-            }else {
-                orientation = Configuration.ORIENTATION_LANDSCAPE;
-            }
+    public static boolean isFlashSupported(Context context){
+        PackageManager packageManager = context.getPackageManager();
+        // if device support camera flash?
+        if (packageManager.hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH)) {
+            return true;
         }
-        return orientation;
+        return false;
     }
-
 }
