diff --git a/timeattendance/build.gradle b/timeattendance/build.gradle
index fd54223..b552c80 100644
--- a/timeattendance/build.gradle
+++ b/timeattendance/build.gradle
@@ -24,4 +24,7 @@ dependencies {
     compile 'com.android.support:appcompat-v7:22.0.0'
     compile project(':zbar:zbar')
     compile 'mysql:mysql-connector-java:5.1.34'
+    compile 'com.google.code.gson:gson:2.2.4'
+    compile 'com.squareup.okhttp:okhttp:2.0.0'
+    compile 'com.loopj.android:android-async-http:1.4.6'
 }
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/GetExample.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/GetExample.java
new file mode 100644
index 0000000..4c9f28b
--- /dev/null
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/GetExample.java
@@ -0,0 +1,29 @@
+package com.coresolutions.timeattendance;
+
+import com.squareup.okhttp.OkHttpClient;
+import com.squareup.okhttp.Request;
+import com.squareup.okhttp.Response;
+
+import java.io.IOException;
+
+/**
+ * Created by Panupong on 20/3/2558.
+ */
+public class GetExample {
+    OkHttpClient client = new OkHttpClient();
+
+    String run(String url) throws IOException {
+        Request request = new Request.Builder()
+                .url(url)
+                .build();
+
+        Response response = client.newCall(request).execute();
+        return response.body().string();
+    }
+
+    public static void main(String[] args) throws IOException {
+        GetExample example = new GetExample();
+        String response = example.run("https://157.179.24.77/test.php");
+        System.out.println(response);
+    }
+}
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTask.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTask.java
new file mode 100644
index 0000000..cb8995f
--- /dev/null
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTask.java
@@ -0,0 +1,59 @@
+package com.coresolutions.timeattendance;
+
+import android.os.AsyncTask;
+import android.util.Log;
+
+import org.apache.http.HttpResponse;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.DefaultHttpClient;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+
+public class HttpTask extends AsyncTask<String, Integer, String> {
+
+    @Override
+    protected void onPreExecute() {
+        // Create Show ProgressBar
+    }
+
+    protected String doInBackground(String... urls)   {
+        String result = "";
+        try {
+
+            HttpGet httpGet = new HttpGet(urls[0]);
+            HttpClient client = new DefaultHttpClient();
+
+            HttpResponse response = client.execute(httpGet);
+
+            int statusCode = response.getStatusLine().getStatusCode();
+
+            if (statusCode == 200) {
+                InputStream inputStream = response.getEntity().getContent();
+                BufferedReader reader = new BufferedReader
+                        (new InputStreamReader(inputStream));
+                String line;
+                while ((line = reader.readLine()) != null) {
+                    result += line;
+                }
+            }
+
+        } catch (ClientProtocolException e) {
+
+        } catch (IOException e) {
+
+        }
+        return result;
+    }
+
+    protected void onPostExecute(String result)  {
+        // Dismiss ProgressBar
+        // updateWebView(result);
+        Log.e("aaa",result);
+    }
+
+}
\ No newline at end of file
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
index 913f20a..49c4f1b 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
@@ -1,14 +1,11 @@
 package com.coresolutions.timeattendance;
 
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.Context;
-import android.content.DialogInterface;
+
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
-import android.net.ConnectivityManager;
-import android.net.NetworkInfo;
+import android.os.AsyncTask;
+import android.preference.PreferenceActivity;
 import android.support.v7.app.ActionBarActivity;
 import android.os.Bundle;
 import android.util.Log;
@@ -17,37 +14,38 @@
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
+import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
-import android.os.NetworkOnMainThreadException;
-import org.json.JSONObject;
 
-import java.io.BufferedReader;
-import java.io.DataOutputStream;
+
+import com.loopj.android.http.AsyncHttpClient;
+import com.loopj.android.http.AsyncHttpResponseHandler;
+import com.squareup.okhttp.OkHttpClient;
+import com.squareup.okhttp.Request;
+import com.squareup.okhttp.Response;
+import com.squareup.okhttp.internal.spdy.Header;
+
+
 import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.net.HttpURLConnection;
-import java.net.InetSocketAddress;
-import java.net.MalformedURLException;
-import java.net.Socket;
-import java.net.SocketAddress;
-import java.net.URL;
-import java.net.URLConnection;
 import java.sql.Connection;
 import java.sql.DriverManager;
 import java.util.ArrayList;
+import java.util.List;
 import java.util.Locale;
 
 
+
 public class MainActivity extends ActionBarActivity {
     Intent intent;
 
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
+
         checkLocale();
 
         Button b1 = (Button) findViewById(R.id.button_start);
@@ -75,38 +73,12 @@ protected void onCreate(Bundle savedInstanceState) {
     }
     View.OnClickListener myhandler = new View.OnClickListener() {
         public void onClick(View v) {
-
-            try{ // Loading the MySQL Connector/J driver
-                Class.forName("com.mysql.jdbc.Driver");
-                System.out.println("com.mysql.jdbc.Driver");
-            }catch(ClassNotFoundException e){
-                System.out.println("Error while loading the Driver: " + e.getMessage());
-            }
-            System.out.println("MySQL Connect Example.");
-            Connection conn = null;
-            String url = "jdbc:mysql://157.179.24.77:3306/";
-            String dbName = "game";
-            String driver = "com.mysql.jdbc.Driver";
-            String userName = "root";
-            String password = "root";
-            try {
-                Class.forName(driver).newInstance();
-                conn = DriverManager.getConnection(url+dbName,userName,password);
-                Toast.makeText(getBaseContext(),
-                        "Connected to the database.", Toast.LENGTH_LONG)
-                        .show();
-                conn.close();
-                Toast.makeText(getBaseContext(),
-                        "Disconnected form the database.", Toast.LENGTH_LONG)
-                        .show();
-            } catch (Exception e) {
-                Toast.makeText(getBaseContext(),
-                        "Exception e = " , Toast.LENGTH_LONG)
-                        .show();
-                e.printStackTrace();
-            }
+            //pb.setVisibility(View.VISIBLE);
+            //new MyAsyncTask().execute("http://157.179.24.77/test.php");
         }
     };
+
+
     @Override
     public void onResume() {
         super.onResume();
@@ -164,80 +136,6 @@ public boolean checkOnline() {
 
         return true;
     }
-    public boolean isOnline() {
-        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
-        NetworkInfo netInfo = cm.getActiveNetworkInfo();
-        if (netInfo != null && netInfo.isConnected()) {
-            return true;
-        }
-        return false;
-    }
-    private boolean isOnTheInternet() {
-        try {
-            URLConnection urlConnection = new URL("http://157.179.24.77").openConnection();
-            urlConnection.setConnectTimeout(400);
-            urlConnection.connect();
-            return true;
-        } catch (Exception e) {
-            return false;
-        }
-    }
-
-    private boolean isHostRechable(String hostUrl) {
-        try {
-            URL url = new URL("http://" + hostUrl);
-            Toast.makeText(this, "ipaddress = " + url, Toast.LENGTH_SHORT).show();
-            final HttpURLConnection urlc = (HttpURLConnection) url.openConnection();
-            urlc.setRequestProperty("User-Agent", "Android Application");
-            urlc.setRequestProperty("Connection", "close");
-            urlc.setConnectTimeout(10 * 1000);
-            urlc.connect();
-            if (urlc.getResponseCode() == 200) {
-                return true;
-            }
-        } catch (Throwable e) {
-            e.printStackTrace();
-        }
-        return false;
-    }
-
-    public boolean isConnectedToServer(String url) {
-        try {
-            URL myUrl = new URL("http://" +url);
-            //Toast.makeText(this, "ipaddress = " + url, Toast.LENGTH_SHORT).show();
-            URLConnection connection = myUrl.openConnection();
-            connection.setConnectTimeout(10000);
-            connection.connect();
-            return true;
-        } catch (Exception e) {
-            // Handle your exceptions
-            return false;
-
-        }
-    }
-
-    public static boolean isHostReachable(String serverAddress, int serverTCPport, int timeoutMS){
-        boolean connected = false;
-        String sentence = "TCP Test #1n";
-        String modifiedSentence;
-        try {
-
-            Socket clientSocket = new Socket("192.168.18.116", 8080);
-            DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream());
-            BufferedReader inFromServer = new BufferedReader(new
-                    InputStreamReader(clientSocket.getInputStream()));
-            outToServer.writeBytes(sentence + 'n');
-            connected = true;
-            clientSocket.close();
-
-        } catch (Exception e) {
-           // printScr("TCP Error: " + e.toString());
-        }
-
-        return connected;
-    }
-
-
 
     public  void checkLocale(){
         //check locale
@@ -270,4 +168,7 @@ public  void checkState(){
             //startActivity(intent);
         }
     }
-}
\ No newline at end of file
+
+
+}
+
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/SettingActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/SettingActivity.java
index b05ea13..4223ad0 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/SettingActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/SettingActivity.java
@@ -13,6 +13,7 @@
 import android.widget.Spinner;
 import android.widget.Toast;
 
+import java.io.IOException;
 import java.util.Locale;
 
 /**
