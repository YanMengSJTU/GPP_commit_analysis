diff --git a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
index b2574c8..711fde9 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
@@ -32,7 +32,11 @@ public void setupLayout() {
     }
 
     public void startCamera() {
-        mCamera = CameraUtils.getCameraInstance();
+        startCamera(-1);
+    }
+
+    public void startCamera(int cameraId) {
+        mCamera = CameraUtils.getCameraInstance(cameraId);
         if(mCamera != null) {
             mViewFinderView.setupViewFinder();
             mPreview.setCamera(mCamera, this);
@@ -49,25 +53,20 @@ public void stopCamera() {
         }
     }
 
-    public synchronized Rect getFramingRectInPreview(int width, int height) {
+    public synchronized Rect getFramingRectInPreview(int previewWidth, int previewHeight) {
         if (mFramingRectInPreview == null) {
             Rect framingRect = mViewFinderView.getFramingRect();
-            if (framingRect == null) {
+            int viewFinderViewWidth = mViewFinderView.getWidth();
+            int viewFinderViewHeight = mViewFinderView.getHeight();
+            if (framingRect == null || viewFinderViewWidth == 0 || viewFinderViewHeight == 0) {
                 return null;
             }
-            Rect rect = new Rect(framingRect);
-            Point screenResolution = DisplayUtils.getScreenResolution(getContext());
-            Point cameraResolution = new Point(width, height);
 
-            if (cameraResolution == null || screenResolution == null) {
-                // Called early, before init even finished
-                return null;
-            }
-
-            rect.left = rect.left * cameraResolution.x / screenResolution.x;
-            rect.right = rect.right * cameraResolution.x / screenResolution.x;
-            rect.top = rect.top * cameraResolution.y / screenResolution.y;
-            rect.bottom = rect.bottom * cameraResolution.y / screenResolution.y;
+            Rect rect = new Rect(framingRect);
+            rect.left = rect.left * previewWidth / viewFinderViewWidth;
+            rect.right = rect.right * previewWidth / viewFinderViewWidth;
+            rect.top = rect.top * previewHeight / viewFinderViewHeight;
+            rect.bottom = rect.bottom * previewHeight / viewFinderViewHeight;
 
             mFramingRectInPreview = rect;
         }
@@ -75,7 +74,7 @@ public synchronized Rect getFramingRectInPreview(int width, int height) {
     }
 
     public void setFlash(boolean flag) {
-        if(mCamera != null && CameraUtils.isFlashSupported(mCamera)) {
+        if(CameraUtils.isFlashSupported(getContext()) && mCamera != null) {
             Camera.Parameters parameters = mCamera.getParameters();
             if(flag) {
                 if(parameters.getFlashMode().equals(Camera.Parameters.FLASH_MODE_TORCH)) {
@@ -93,7 +92,7 @@ public void setFlash(boolean flag) {
     }
 
     public boolean getFlash() {
-        if(mCamera != null && CameraUtils.isFlashSupported(mCamera)) {
+        if(CameraUtils.isFlashSupported(getContext()) && mCamera != null) {
             Camera.Parameters parameters = mCamera.getParameters();
             if(parameters.getFlashMode().equals(Camera.Parameters.FLASH_MODE_TORCH)) {
                 return true;
@@ -105,7 +104,7 @@ public boolean getFlash() {
     }
 
     public void toggleFlash() {
-        if(mCamera != null && CameraUtils.isFlashSupported(mCamera)) {
+        if(CameraUtils.isFlashSupported(getContext()) && mCamera != null) {
             Camera.Parameters parameters = mCamera.getParameters();
             if(parameters.getFlashMode().equals(Camera.Parameters.FLASH_MODE_TORCH)) {
                 parameters.setFlashMode(Camera.Parameters.FLASH_MODE_OFF);
@@ -121,4 +120,4 @@ public void setAutoFocus(boolean state) {
             mPreview.setAutoFocus(state);
         }
     }
-}
+}
\ No newline at end of file
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
index 71cab8c..bd6ae16 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
@@ -1,39 +1,37 @@
 package me.dm7.barcodescanner.core;
 
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.content.pm.PackageManager;
 import android.hardware.Camera;
-
-import java.util.List;
+import android.os.Build;
 
 public class CameraUtils {
     /** A safe way to get an instance of the Camera object. */
-    public static Camera getCameraInstance() {
+    @TargetApi(Build.VERSION_CODES.GINGERBREAD)
+    public static Camera getCameraInstance(int cameraId){
         Camera c = null;
         try {
-            c = Camera.open(); // attempt to get a Camera instance
+            // attempt to get a Camera instance
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD
+                    && cameraId >= 0 && cameraId < Camera.getNumberOfCameras()) {
+                c = Camera.open(cameraId);
+            } else {
+                c = Camera.open();
+            }
         }
-        catch (Exception e) {
+        catch (Exception e){
             // Camera is not available (in use or does not exist)
         }
         return c; // returns null if camera is unavailable
     }
 
-    public static boolean isFlashSupported(Camera camera) {
-        /* Credits: Top answer at http://stackoverflow.com/a/19599365/868173 */
-        if (camera != null) {
-            Camera.Parameters parameters = camera.getParameters();
-
-            if (parameters.getFlashMode() == null) {
-                return false;
-            }
-
-            List<String> supportedFlashModes = parameters.getSupportedFlashModes();
-            if (supportedFlashModes == null || supportedFlashModes.isEmpty() || supportedFlashModes.size() == 1 && supportedFlashModes.get(0).equals(Camera.Parameters.FLASH_MODE_OFF)) {
-                return false;
-            }
-        } else {
-            return false;
+    public static boolean isFlashSupported(Context context){
+        PackageManager packageManager = context.getPackageManager();
+        // if device support camera flash?
+        if (packageManager.hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH)) {
+            return true;
         }
-
-        return true;
+        return false;
     }
-}
+}
\ No newline at end of file
diff --git a/zbar/sample/build.gradle b/zbar/sample/build.gradle
index 020384b..763f606 100644
--- a/zbar/sample/build.gradle
+++ b/zbar/sample/build.gradle
@@ -1,8 +1,8 @@
 apply plugin: 'com.android.application'
 
 dependencies {
-    //compile project(":zbar:zbar")
-    compile 'me.dm7.barcodescanner:zbar:1.6.3'
+    compile project(":zbar:zbar")
+    //compile 'me.dm7.barcodescanner:zbar:1.6.3'
     compile supportLibraryDependency
     compile 'com.android.support:appcompat-v7:21.0.3'
 }
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
index 1a2be6e..5ba5c23 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
+++ b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
@@ -21,7 +21,7 @@ public void onCreate(Bundle state) {
     public void onResume() {
         super.onResume();
         mScannerView.setResultHandler(this);
-        mScannerView.startCamera();
+        mScannerView.startCamera(1);
     }
 
     @Override
@@ -32,8 +32,8 @@ public void onPause() {
 
     @Override
     public void handleResult(Result rawResult) {
-        Toast.makeText(this, "Contents = " + rawResult.getContents() +
+        Toast.makeText(this, "Contents1 = " + rawResult.getContents() +
                 ", Format = " + rawResult.getBarcodeFormat().getName(), Toast.LENGTH_SHORT).show();
-        mScannerView.startCamera();
+        mScannerView.startCamera(1);
     }
 }
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
index 5647ab5..1eb822d 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
+++ b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
@@ -23,14 +23,14 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
     public void onResume() {
         super.onResume();
         mScannerView.setResultHandler(this);
-        mScannerView.startCamera();
+        mScannerView.startCamera(1);
     }
 
     @Override
     public void handleResult(Result rawResult) {
         Toast.makeText(getActivity(), "Contents = " + rawResult.getContents() +
                 ", Format = " + rawResult.getBarcodeFormat().getName(), Toast.LENGTH_SHORT).show();
-        mScannerView.startCamera();
+        mScannerView.startCamera(1);
     }
 
     @Override
diff --git a/zbar/zbar/build.gradle b/zbar/zbar/build.gradle
index 8f7f054..0b0a5ed 100644
--- a/zbar/zbar/build.gradle
+++ b/zbar/zbar/build.gradle
@@ -9,8 +9,8 @@ ext {
 }
 
 dependencies {
-    //compile project(":core")
-    compile 'me.dm7.barcodescanner:core:1.6.3'
+    compile project(":core")
+    //compile 'me.dm7.barcodescanner:core:1.6.3'
     compile fileTree(dir: 'libs', include: '*.jar')
 }
 
