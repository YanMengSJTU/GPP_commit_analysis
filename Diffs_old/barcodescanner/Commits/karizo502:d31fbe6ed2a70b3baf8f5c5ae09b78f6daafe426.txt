diff --git a/build.gradle b/build.gradle
index 1eb929a..e7e3b6c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -40,7 +40,7 @@ subprojects {
                 }
 
                 defaultConfig {
-                    minSdkVersion 9
+                    minSdkVersion 11
                     targetSdkVersion 21
                     versionCode 163
                     versionName "1.6.3"
diff --git a/timeattendance/build.gradle b/timeattendance/build.gradle
index 83b5ab9..5e64c26 100644
--- a/timeattendance/build.gradle
+++ b/timeattendance/build.gradle
@@ -22,6 +22,8 @@ android {
 repositories {
     maven {
         url "https://repo.commonsware.com.s3.amazonaws.com"
+        mavenCentral()
+        mavenLocal()
     }
 }
 
@@ -29,9 +31,9 @@ dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     compile 'com.android.support:appcompat-v7:22.0.0'
     compile project(':zbar:zbar')
-    compile 'mysql:mysql-connector-java:5.1.34'
     compile 'com.google.code.gson:gson:2.2.4'
     compile 'com.squareup.okhttp:okhttp:2.0.0'
     compile 'com.loopj.android:android-async-http:1.4.6'
-    compile 'com.commonsware.cwac:camera:0.6.+'
+    compile 'com.github.markushi:circlebutton:1.1'
+    compile 'com.android.support:support-v4:22.0.0'
 }
diff --git a/timeattendance/src/main/AndroidManifest.xml b/timeattendance/src/main/AndroidManifest.xml
index a55721a..8a767dc 100644
--- a/timeattendance/src/main/AndroidManifest.xml
+++ b/timeattendance/src/main/AndroidManifest.xml
@@ -10,11 +10,13 @@
 
     <application
         android:allowBackup="true"
+        android:name="com.coresolutions.timeattendance.GlobalClass"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:theme="@style/AppTheme" >
         <activity
             android:name=".SplashActivity"
+            android:screenOrientation="portrait"
             android:label="@string/app_name" >
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -22,11 +24,12 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-        <activity android:name=".MainActivity" android:label="@string/app_name"/>
+        <activity android:name=".MainActivity" android:screenOrientation="portrait"  android:label="@string/app_name"/>
         <activity android:name=".SettingActivity" android:screenOrientation="portrait" android:label="@string/app_name"/>
         <activity android:name=".SimpleScannerActivity" android:screenOrientation="portrait" android:label="@string/app_name" />
         <activity android:name=".CaptureActivity" android:screenOrientation="portrait" android:label="@string/app_name" />
-        <activity android:name=".CamTestActivity"  android:label="@string/app_name" />
+        <activity android:name=".CamTestActivity" android:screenOrientation="portrait"  android:label="@string/app_name" />
+        <activity android:name=".HttpTaskActivity" android:screenOrientation="portrait"  android:label="@string/app_name" />
     </application>
 
 </manifest>
diff --git a/timeattendance/src/main/ic_start-web.png b/timeattendance/src/main/ic_start-web.png
new file mode 100644
index 0000000..1a75337
Binary files /dev/null and b/timeattendance/src/main/ic_start-web.png differ
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java
index 09fb1a2..11bed5e 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java
@@ -7,40 +7,55 @@
 
 import android.app.Activity;
 import android.content.ContentValues;
+import android.content.SharedPreferences;
 import android.graphics.PixelFormat;
 import android.hardware.Camera;
 import android.net.Uri;
 import android.os.Bundle;
+import android.os.Handler;
 import android.provider.MediaStore;
+import android.util.Log;
 import android.view.SurfaceHolder;
 import android.view.SurfaceView;
 import android.view.View;
 import android.widget.Button;
+import android.widget.TextView;
 import android.widget.Toast;
 
+import junit.framework.Test;
+
 public class CaptureActivity extends Activity implements SurfaceHolder.Callback,Camera.ShutterCallback,Camera.PictureCallback{
 
     Camera camera;
     SurfaceView surfaceView;
     SurfaceHolder surfaceHolder;
-    boolean previewing = false;
+    Button chk_in,chk_out;
+    TextView countdownTextView;
+    Handler timerUpdateHandler;
+    boolean timerRunning = false;
+    int currentTime = 4;
 
 
     /** Called when the activity is first created. */
     @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
+    public void onCreate(Bundle state) {
+        super.onCreate(state);
         setContentView(R.layout.camera);
 
-        Button buttonStartCameraPreview = (Button)findViewById(R.id.startcamerapreview);
-        Button buttonStopCameraPreview = (Button)findViewById(R.id.stopcamerapreview);
-
         getWindow().setFormat(PixelFormat.UNKNOWN);
-        surfaceView = (SurfaceView)findViewById(R.id.surfaceview);
+        surfaceView = (SurfaceView)findViewById(R.id.CameraView);
         surfaceHolder = surfaceView.getHolder();
         surfaceHolder.addCallback(this);
         surfaceHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
-        camera = Camera.open();
+
+        countdownTextView = (TextView) findViewById(R.id.CountDownTextView);
+        countdownTextView.setText("");
+        chk_in = (Button) findViewById(R.id.button_chk_in);
+        chk_out = (Button) findViewById(R.id.button_chk_out);
+        timerUpdateHandler = new Handler();
+
+        SharedPreferences settings = getSharedPreferences("ConfigFile", 0);
+        camera = Camera.open(settings.getInt("capture", 0));
 
         surfaceView.setOnClickListener(new View.OnClickListener() {
 
@@ -50,70 +65,71 @@ public void onClick(View arg0) {
             }
         });
 
-
-        buttonStartCameraPreview.setOnClickListener(new Button.OnClickListener(){
-
+        chk_in.setOnClickListener(new Button.OnClickListener(){
             @Override
             public void onClick(View v) {
-                // TODO Auto-generated method stub
-                if(!previewing){
-                    camera = Camera.open();
-                    if (camera != null){
-                        try {
-                            camera.setPreviewDisplay(surfaceHolder);
-                            camera.setDisplayOrientation(90);
-                            camera.startPreview();
-                            previewing = true;
-                        } catch (IOException e) {
-                            // TODO Auto-generated catch block
-                            e.printStackTrace();
-                        }
-                    }
+                if (!timerRunning) {
+                    countdownTextView.setText("" + currentTime);
+                    timerRunning = true;
+                    timerUpdateHandler.post(timerUpdateTask);
                 }
             }});
-
-        buttonStopCameraPreview.setOnClickListener(new Button.OnClickListener() {
-
+        chk_out.setOnClickListener(new Button.OnClickListener(){
             @Override
             public void onClick(View v) {
-                // TODO Auto-generated method stub
-                if (camera != null && previewing) {
-                    camera.stopPreview();
-                    camera.release();
-                    camera = null;
-                    previewing = false;
+                if (!timerRunning) {
+                    countdownTextView.setText("" + currentTime);
+                    timerRunning = true;
+                    timerUpdateHandler.post(timerUpdateTask);
                 }
-            }
-        });
-
+            }});
     }
 
+
     @Override
     public void onPause() {
         super.onPause();
         camera.stopPreview();
     }
 
+    private Runnable timerUpdateTask = new Runnable() {
+        public void run() {
+            if (currentTime > 1) {
+                currentTime--;
+                timerUpdateHandler.postDelayed(timerUpdateTask, 1000);
+            } else {
+                camera.takePicture(null, null, CaptureActivity.this);
+                timerRunning = false;
+                currentTime = 4;
+            }
+            if(timerRunning){countdownTextView.setText("" + currentTime);}
+            else{countdownTextView.setText("");}
+        }
+    };
 
     @Override
     public void onPictureTaken(byte[] data, Camera camera) {
-        //Here, we chose internal storage
-        //Uri imageFileUri = getContentResolver().insert(
-        //        MediaStore.Images.Media.EXTERNAL_CONTENT_URI, new ContentValues());
+        Uri imageFileUri = getContentResolver().insert(
+            MediaStore.Images.Media.EXTERNAL_CONTENT_URI, new ContentValues());
         try {
-            FileOutputStream out = openFileOutput("picture1.jpg", Activity.MODE_PRIVATE);
-            //OutputStream out = getContentResolver().openOutputStream(imageFileUri);
-            out.write(data);
-            out.flush();
-            out.close();
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
+          OutputStream imageFileOS = getContentResolver().openOutputStream(
+                  imageFileUri);
+          imageFileOS.write(data);
+          imageFileOS.flush();
+          imageFileOS.close();
+
+          Toast t = Toast.makeText(this, "Saved JPEG!", Toast.LENGTH_SHORT);
+          t.show();
+            final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
+            globalVariable.setState("capture");
+            CaptureActivity.this.finish();
+
+        } catch (Exception e) {
+          Toast t = Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT);
+          t.show();
         }
         camera.startPreview();
-    }
-
+      }
     @Override
     public void surfaceChanged(SurfaceHolder holder, int format, int width,
                                int height) {
@@ -140,8 +156,7 @@ public void surfaceCreated(SurfaceHolder holder) {
 
     @Override
     public void surfaceDestroyed(SurfaceHolder holder) {
-
-
+        Log.i("PREVIEW", "surfaceDestroyed");
     }
 
     @Override
@@ -151,4 +166,21 @@ public void onShutter() {
     public void onCancelClick(View v) {
         finish();
     }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        camera.release();
+        Log.d("CAMERA", "Destroy");
+    }
+
+    @Override
+    public void onBackPressed() {
+        super.onBackPressed();
+        //Toast.makeText(this, "555", Toast.LENGTH_SHORT).show();
+        this.finish();
+        final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
+        globalVariable.setState("main");
+    }
+
 }
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/GetExample.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/GetExample.java
deleted file mode 100644
index 4c9f28b..0000000
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/GetExample.java
+++ /dev/null
@@ -1,29 +0,0 @@
-package com.coresolutions.timeattendance;
-
-import com.squareup.okhttp.OkHttpClient;
-import com.squareup.okhttp.Request;
-import com.squareup.okhttp.Response;
-
-import java.io.IOException;
-
-/**
- * Created by Panupong on 20/3/2558.
- */
-public class GetExample {
-    OkHttpClient client = new OkHttpClient();
-
-    String run(String url) throws IOException {
-        Request request = new Request.Builder()
-                .url(url)
-                .build();
-
-        Response response = client.newCall(request).execute();
-        return response.body().string();
-    }
-
-    public static void main(String[] args) throws IOException {
-        GetExample example = new GetExample();
-        String response = example.run("https://157.179.24.77/test.php");
-        System.out.println(response);
-    }
-}
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/GlobalClass.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/GlobalClass.java
new file mode 100644
index 0000000..43ee2d0
--- /dev/null
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/GlobalClass.java
@@ -0,0 +1,34 @@
+package com.coresolutions.timeattendance;
+
+/**
+ * Created by Panupong on 26/3/2558.
+ */
+import android.app.Application;
+
+public class GlobalClass extends Application{
+    private String state;
+    private String empid;
+
+
+    public String getState() {
+
+        return state;
+    }
+
+    public void setState(String cState) {
+
+        state = cState;
+
+    }
+
+    public String getEmpID() {
+
+        return empid;
+    }
+
+    public void setEmpID(String cEmpID) {
+
+        empid = cEmpID;
+    }
+
+}
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTask.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTask.java
deleted file mode 100644
index cb8995f..0000000
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTask.java
+++ /dev/null
@@ -1,59 +0,0 @@
-package com.coresolutions.timeattendance;
-
-import android.os.AsyncTask;
-import android.util.Log;
-
-import org.apache.http.HttpResponse;
-import org.apache.http.client.ClientProtocolException;
-import org.apache.http.client.HttpClient;
-import org.apache.http.client.methods.HttpGet;
-import org.apache.http.impl.client.DefaultHttpClient;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-
-public class HttpTask extends AsyncTask<String, Integer, String> {
-
-    @Override
-    protected void onPreExecute() {
-        // Create Show ProgressBar
-    }
-
-    protected String doInBackground(String... urls)   {
-        String result = "";
-        try {
-
-            HttpGet httpGet = new HttpGet(urls[0]);
-            HttpClient client = new DefaultHttpClient();
-
-            HttpResponse response = client.execute(httpGet);
-
-            int statusCode = response.getStatusLine().getStatusCode();
-
-            if (statusCode == 200) {
-                InputStream inputStream = response.getEntity().getContent();
-                BufferedReader reader = new BufferedReader
-                        (new InputStreamReader(inputStream));
-                String line;
-                while ((line = reader.readLine()) != null) {
-                    result += line;
-                }
-            }
-
-        } catch (ClientProtocolException e) {
-
-        } catch (IOException e) {
-
-        }
-        return result;
-    }
-
-    protected void onPostExecute(String result)  {
-        // Dismiss ProgressBar
-        // updateWebView(result);
-        Log.e("aaa",result);
-    }
-
-}
\ No newline at end of file
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTaskActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTaskActivity.java
new file mode 100644
index 0000000..33167b9
--- /dev/null
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/HttpTaskActivity.java
@@ -0,0 +1,106 @@
+package com.coresolutions.timeattendance;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.util.EntityUtils;
+
+import android.app.Activity;
+import android.opengl.Visibility;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.Menu;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+public class HttpTaskActivity extends Activity implements OnClickListener{
+
+    private EditText value;
+    private Button btn;
+    private ProgressBar pb;
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.task);
+        value=(EditText)findViewById(R.id.editText1);
+        btn=(Button)findViewById(R.id.button1);
+        pb=(ProgressBar)findViewById(R.id.progressBar1);
+        pb.setVisibility(View.GONE);
+        btn.setOnClickListener(this);
+    }
+
+
+
+    public void onClick(View v) {
+        // TODO Auto-generated method stub
+        if(value.getText().toString().length()<1){
+
+            // out of range
+            Toast.makeText(this, "please enter something", Toast.LENGTH_LONG).show();
+        }else{
+            pb.setVisibility(View.VISIBLE);
+            new MyAsyncTask().execute(value.getText().toString());
+        }
+
+
+    }
+
+    private class MyAsyncTask extends AsyncTask<String, Integer, Double>{
+
+        @Override
+        protected Double doInBackground(String... params) {
+            // TODO Auto-generated method stub
+            postData(params[0]);
+            return null;
+        }
+
+        protected void onPostExecute(Double result){
+            pb.setVisibility(View.GONE);
+            Toast.makeText(getApplicationContext(), "command sent", Toast.LENGTH_LONG).show();
+        }
+        protected void onProgressUpdate(Integer... progress){
+            pb.setProgress(progress[0]);
+        }
+
+        public void postData(String valueIWantToSend) {
+            // Create a new HttpClient and Post Header
+            HttpClient httpclient = new DefaultHttpClient();
+            HttpPost httppost = new HttpPost("http://157.179.24.77/test.php");
+
+            try {
+                // Add your data
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
+                nameValuePairs.add(new BasicNameValuePair("myHttpData", valueIWantToSend));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
+
+                // Execute HTTP Post Request
+                HttpResponse response = httpclient.execute(httppost);
+                String actual = EntityUtils.toString(response.getEntity());
+                Log.v("test", "Your data: " +actual); //response data
+                //Toast.makeText(getApplicationContext(), "data = "+ actual, Toast.LENGTH_LONG).show();
+            } catch (ClientProtocolException e) {
+                Log.v("test", "Error: " +e.getMessage());
+                //Toast.makeText(getApplicationContext(), "Error 1", Toast.LENGTH_LONG).show();
+            } catch (IOException e) {
+                Log.v("test", "Error: " +e.getMessage());
+                //Toast.makeText(getApplicationContext(), "Error 2", Toast.LENGTH_LONG).show();
+            }
+        }
+
+    }
+}
\ No newline at end of file
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
index 0b58bfa..ad0fb87 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
@@ -5,32 +5,32 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
+import android.graphics.PorterDuff;
 import android.os.AsyncTask;
-import android.preference.PreferenceActivity;
 import android.support.v7.app.ActionBarActivity;
 import android.os.Bundle;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
+import android.view.MotionEvent;
 import android.view.View;
 import android.widget.Button;
-import android.widget.EditText;
-import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
 
 
-import com.loopj.android.http.AsyncHttpClient;
-import com.loopj.android.http.AsyncHttpResponseHandler;
-import com.squareup.okhttp.OkHttpClient;
-import com.squareup.okhttp.Request;
-import com.squareup.okhttp.Response;
-import com.squareup.okhttp.internal.spdy.Header;
-
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.protocol.HTTP;
+import org.apache.http.util.EntityUtils;
 
 import java.io.IOException;
-import java.sql.Connection;
-import java.sql.DriverManager;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Locale;
@@ -39,23 +39,63 @@
 
 public class MainActivity extends ActionBarActivity {
     Intent intent;
+    TextView status;
+    String[] data;
+    String state;
 
+    public String getState() {
+        return state;
+    }
 
+    public void setState(String c_state) {
+        this.state = c_state;
+    }
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
+        final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
+        globalVariable.setState("main");
 
         checkLocale();
 
-        Button b1 = (Button) findViewById(R.id.button_start);
-        b1.setOnClickListener(myhandler);
-        TextView status = (TextView) findViewById(R.id.txt_status);
+        Button b0 = (Button) findViewById(R.id.button_start);
+
+        b0.setOnTouchListener(new View.OnTouchListener() {
+
+            public boolean onTouch(View v, MotionEvent event) {
+                switch (event.getAction()) {
+                    case MotionEvent.ACTION_DOWN: {
+                        v.getBackground().setColorFilter(0xe0f47521, PorterDuff.Mode.SRC_ATOP);
+                        v.invalidate();
+                        intent = new Intent(MainActivity.this, SimpleScannerActivity.class);
+                        startActivity(intent);
+                        break;
+                    }
+                    case MotionEvent.ACTION_UP: {
+                        v.getBackground().clearColorFilter();
+                        v.invalidate();
+                        break;
+                    }
+                }
+                return false;
+            }
+        });
+        //b0.setOnClickListener(myhandler0);
+
+        Button b1 = (Button) findViewById(R.id.button_scan);
+        b1.setOnClickListener(myhandler1);
+
+        Button b2 = (Button) findViewById(R.id.button_camera);
+        b2.setOnClickListener(myhandler2);
+
+        Button b3 = (Button) findViewById(R.id.button_task);
+        b3.setOnClickListener(myhandler3);
+
+        status = (TextView) findViewById(R.id.txt_status);
         if (checkSetting() == true) {
             if (checkOnline() == true) {
-                intent = new Intent(this, CaptureActivity.class);
-                startActivity(intent);
                 status.setText(R.string.status_online);
             } else {
                 status.setText(R.string.status_offline);
@@ -72,21 +112,36 @@ protected void onCreate(Bundle savedInstanceState) {
         //editor.putInt("flag", val+1);
         //editor.commit();
     }
-    View.OnClickListener myhandler = new View.OnClickListener() {
+    View.OnClickListener myhandler0 = new View.OnClickListener() {
         public void onClick(View v) {
-            //pb.setVisibility(View.VISIBLE);
-            //new MyAsyncTask().execute("http://157.179.24.77/test.php");
             intent = new Intent(MainActivity.this, SimpleScannerActivity.class);
             startActivity(intent);
         }
     };
-
+    View.OnClickListener myhandler1 = new View.OnClickListener() {
+        public void onClick(View v) {
+            intent = new Intent(MainActivity.this, SimpleScannerActivity.class);
+            startActivity(intent);
+        }
+    };
+    View.OnClickListener myhandler2 = new View.OnClickListener() {
+        public void onClick(View v) {
+            intent = new Intent(MainActivity.this, CaptureActivity.class);
+            startActivity(intent);
+        }
+    };
+    View.OnClickListener myhandler3 = new View.OnClickListener() {
+        public void onClick(View v) {
+            intent = new Intent(MainActivity.this, HttpTaskActivity.class);
+            startActivity(intent);
+        }
+    };
 
     @Override
     public void onResume() {
         super.onResume();
         checkLocale();
-        //checkState();
+        checkState();
 
     }
 
@@ -136,7 +191,7 @@ public boolean checkSetting() {
     public boolean checkOnline() {
         SharedPreferences settings = getSharedPreferences("ConfigFile", 0);
         String ipAddress = settings.getString("ipaddress", "");
-
+        //status.setText("Your NAME: "+data[1]+" "+data[3]);
         return true;
     }
 
@@ -160,18 +215,15 @@ public  void checkLocale(){
     }
 
     public  void checkState(){
-        SharedPreferences settings = getSharedPreferences("ConfigFile", 0);
-        String state = settings.getString("state", "main");
-        Toast.makeText(this, state, Toast.LENGTH_SHORT).show();
-        if(state.equals("scanner")){
-            intent = new Intent(this, CamTestActivity.class);
-            startActivity(intent);
-        }else if(state.equals("capture")){
-            intent = new Intent(this, SimpleScannerActivity.class);
+
+        final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
+        Toast.makeText(this, globalVariable.getState(), Toast.LENGTH_SHORT).show();
+        if(globalVariable.getState().equals("scan")){
+            //new MyTask().execute(globalVariable.getEmpID().toString());
+            intent = new Intent(getApplicationContext(), CaptureActivity.class);
             startActivity(intent);
-        }else{
-            //intent = new Intent(this, MainActivity.class);
-            //startActivity(intent);
+        }else if(globalVariable.getState().equals("capture")){
+            globalVariable.setState("main");
         }
     }
 
@@ -184,6 +236,52 @@ public static void restartActivity(Activity act){
 
     }
 
+    private class MyTask extends AsyncTask<String, Integer, Double>{
+
+        @Override
+        protected Double doInBackground(String... params) {
+            // TODO Auto-generated method stub
+            postData(params[0]);
+            return null;
+        }
+
+        protected void onPostExecute(Double result) {
+            //pb.setVisibility(View.GONE);
+            Toast.makeText(getApplicationContext(), ""+data[1]+" "+data[3], Toast.LENGTH_LONG).show();
+            //status.setText(""+data[1]+" "+data[3]);
+        }
+        protected void onProgressUpdate(Integer... progress){
+            //pb.setProgress(progress[0]);
+        }
+
+        public void postData(String valueIWantToSend) {
+            // Create a new HttpClient and Post Header
+            HttpClient httpclient = new DefaultHttpClient();
+            HttpPost httppost = new HttpPost("http://157.179.24.77/timeattendance/connect_base.php");
+
+            try {
+                // Add your data
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
+                nameValuePairs.add(new BasicNameValuePair("action", "emp_profile"));
+                nameValuePairs.add(new BasicNameValuePair("emp_id", valueIWantToSend));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs,"UTF-8"));
+
+                // Execute HTTP Post Request
+                HttpResponse response = httpclient.execute(httppost);
+                String actual = EntityUtils.toString(response.getEntity(), HTTP.UTF_8);
+                Log.v("test", "Your data: " +actual); //response data
+                data = actual.split("[|]");
+                Log.v("test", "Your NAME: " +data[1]+" "+data[3]); //response data
+
+            } catch (ClientProtocolException e) {
+                Log.v("test", "Error: " + e.getMessage());
+            } catch (IOException e) {
+                Log.v("test", "Error: " + e.getMessage());
+            }
+        }
+
+    }
+
 }
 
 
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java
index ae56159..3471a63 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java
@@ -42,14 +42,17 @@ public void handleResult(Result rawResult) {
         //this.finish();
         //intent = new Intent(getApplicationContext(), CaptureActivity.class);
         //startActivity(intent);
-        SharedPreferences settings = getSharedPreferences("ConfigFile", 0);
-        SharedPreferences.Editor editor;
+        final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
+        globalVariable.setState("scan");
 
-        editor = settings.edit();
-        editor.putString("userid",rawResult.getContents().toString() );
-        editor.putString("state","scanner" );
-        editor.commit();
         this.finish();
 
     }
+
+    @Override
+    public void onBackPressed() {
+        super.onBackPressed();
+        //Toast.makeText(this, "555", Toast.LENGTH_SHORT).show();
+        this.finish();
+    }
 }
diff --git a/timeattendance/src/main/res/drawable/round_button.xml b/timeattendance/src/main/res/drawable/round_button.xml
index deba585..9c0aea5 100644
--- a/timeattendance/src/main/res/drawable/round_button.xml
+++ b/timeattendance/src/main/res/drawable/round_button.xml
@@ -1,9 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle" >
-
-    <solid android:color="#eeffffff" />
-
-    <corners android:radius="10dip" />
-
-</shape>
\ No newline at end of file
+    android:shape="oval">
+    <solid android:color="#ff1cdc00"/>
+    <stroke android:width="2dp" android:color="#fff" />
+</shape>
diff --git a/timeattendance/src/main/res/layout/activity_main.xml b/timeattendance/src/main/res/layout/activity_main.xml
index 0413c76..80c5279 100644
--- a/timeattendance/src/main/res/layout/activity_main.xml
+++ b/timeattendance/src/main/res/layout/activity_main.xml
@@ -1,9 +1,13 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
-    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
     android:paddingRight="@dimen/activity_horizontal_margin"
     android:paddingTop="@dimen/activity_vertical_margin"
-    android:paddingBottom="@dimen/activity_vertical_margin" tools:context=".MainActivity">
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    tools:context=".MainActivity">
 
 
     <TextView android:text="@string/hello_world"
@@ -13,16 +17,53 @@
         android:layout_alignParentLeft="false"
         android:layout_alignParentRight="true" />
 
+    <at.markushi.ui.CircleButton
+        android:layout_width="100dip"
+        android:layout_height="100dip"
+        android:text="Start"
+        android:src="@mipmap/ic_start"
+        app:cb_color="#ff1cdc00"
+        app:cb_pressedRingWidth="8dip" />
+
+    <Button
+        android:layout_width="100dp"
+        android:layout_height="100dp"
+        android:id="@+id/button_start"
+        android:background="@drawable/round_button"
+        android:gravity="center_vertical|center_horizontal"
+        android:text="Start"
+        android:textColor="#fff"
+        android:layout_above="@+id/button_camera"
+        android:layout_centerHorizontal="true"
+        android:layout_marginBottom="94dp" />
+
     <Button
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/action_start"
-        android:id="@+id/button_start"
-        android:layout_alignParentTop="false"
+        android:text="Scan"
+        android:id="@+id/button_scan"
         android:layout_alignWithParentIfMissing="false"
-        android:layout_alignParentRight="false"
-        android:layout_alignParentBottom="false"
-        android:layout_alignParentLeft="false"
-        android:layout_centerInParent="true" />
+        android:layout_alignTop="@+id/button_camera"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true" />
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Camera"
+        android:id="@+id/button_camera"
+        android:layout_alignWithParentIfMissing="false"
+        android:layout_alignTop="@+id/button_task"
+        android:layout_alignRight="@+id/button_start"
+        android:layout_alignEnd="@+id/button_start" />
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Task"
+        android:id="@+id/button_task"
+        android:layout_alignWithParentIfMissing="false"
+        android:layout_alignParentBottom="true"
+        android:layout_alignRight="@+id/txt_status" />
 
 </RelativeLayout>
diff --git a/timeattendance/src/main/res/layout/camera.xml b/timeattendance/src/main/res/layout/camera.xml
index 1a633f4..2320fa9 100644
--- a/timeattendance/src/main/res/layout/camera.xml
+++ b/timeattendance/src/main/res/layout/camera.xml
@@ -3,32 +3,37 @@
     android:orientation="vertical"
     android:layout_width="fill_parent"
     android:layout_height="fill_parent"
-    >
-
-    <SurfaceView
-        android:id="@+id/surfaceview"
-        android:layout_width="fill_parent"
+    android:weightSum="1">
+    <FrameLayout android:id="@+id/FrameLayout01"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:clipChildren="false"
-        android:layout_weight="1" />
+        android:layout_weight="0.93">
 
-    <TextView
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="Hello"
-        />
+        <SurfaceView android:id="@+id/CameraView"
+            android:layout_width="310dp"
+            android:layout_height="413dp"
+            android:layout_gravity="center"></SurfaceView>
 
-    <Button
-        android:id="@+id/startcamerapreview"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="- Start Camera Preview -"
-        />
+        <TextView android:id="@+id/CountDownTextView"
+            android:textSize="100dip"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:text="3"></TextView>
+
+        <Button
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:id="@+id/button_chk_out"
+            android:text="check out"
+            android:layout_gravity="right|bottom" />
+
+        <Button android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:id="@+id/button_chk_in"
+            android:text="check in"
+            android:layout_gravity="left|bottom"></Button>
+
+    </FrameLayout>
 
-    <Button
-        android:id="@+id/stopcamerapreview"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="- Stop Camera Preview -"
-        />
 </LinearLayout>
\ No newline at end of file
diff --git a/timeattendance/src/main/res/layout/task.xml b/timeattendance/src/main/res/layout/task.xml
new file mode 100644
index 0000000..07f8259
--- /dev/null
+++ b/timeattendance/src/main/res/layout/task.xml
@@ -0,0 +1,49 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+
+    <TextView
+        android:id="@+id/textView1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="20dp"
+        android:text="Enter Something Below:"
+        android:textAppearance="?android:attr/textAppearanceLarge" />
+
+    <EditText
+        android:id="@+id/editText1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/textView1"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="30dp"
+        android:ems="10"
+        android:hint=""
+        >
+
+        <requestFocus />
+    </EditText>
+
+    <ProgressBar
+        android:id="@+id/progressBar1"
+        style="?android:attr/progressBarStyleLarge"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/editText1"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="24dp" />
+
+    <Button
+        android:id="@+id/button1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignLeft="@+id/textView1"
+        android:layout_alignRight="@+id/editText1"
+        android:layout_below="@+id/progressBar1"
+        android:layout_marginTop="24dp"
+        android:text="Submit" />
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/timeattendance/src/main/res/mipmap-mdpi/ic_start.png b/timeattendance/src/main/res/mipmap-mdpi/ic_start.png
new file mode 100644
index 0000000..b097a0d
Binary files /dev/null and b/timeattendance/src/main/res/mipmap-mdpi/ic_start.png differ
diff --git a/timeattendance/src/main/res/mipmap-xhdpi/ic_start.png b/timeattendance/src/main/res/mipmap-xhdpi/ic_start.png
new file mode 100644
index 0000000..bf3908b
Binary files /dev/null and b/timeattendance/src/main/res/mipmap-xhdpi/ic_start.png differ
diff --git a/timeattendance/src/main/res/mipmap-xxhdpi/ic_start.png b/timeattendance/src/main/res/mipmap-xxhdpi/ic_start.png
new file mode 100644
index 0000000..0cd33d4
Binary files /dev/null and b/timeattendance/src/main/res/mipmap-xxhdpi/ic_start.png differ
diff --git a/timeattendance/src/main/res/mipmap-xxxhdpi/ic_start.png b/timeattendance/src/main/res/mipmap-xxxhdpi/ic_start.png
new file mode 100644
index 0000000..c49eead
Binary files /dev/null and b/timeattendance/src/main/res/mipmap-xxxhdpi/ic_start.png differ
