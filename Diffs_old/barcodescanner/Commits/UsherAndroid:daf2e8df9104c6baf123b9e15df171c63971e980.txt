diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
index b9c4fb0..b066e25 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
@@ -28,7 +28,6 @@
     private boolean mShouldScaleToFill = true;
     private Camera.PreviewCallback mPreviewCallback;
     private float mAspectTolerance = 0.1f;
-    private static final int MINIMUM_SIZE_HEIGHT = 480;
 
     public CameraPreview(Context context, CameraWrapper cameraWrapper, Camera.PreviewCallback previewCallback) {
         super(context);
@@ -253,10 +252,7 @@ public int getDisplayOrientation() {
         for (Camera.Size size : sizes) {
             double ratio = (double) size.width / size.height;
             if (Math.abs(ratio - targetRatio) > mAspectTolerance) continue;
-            /*ADD another minimum height check condition
-            https://github.com/dm77/barcodescanner/issues/287
-            */
-            if (Math.abs(size.height - targetHeight) < minDiff && size.height >= MINIMUM_SIZE_HEIGHT) {
+            if (Math.abs(size.height - targetHeight) < minDiff) {
                 optimalSize = size;
                 minDiff = Math.abs(size.height - targetHeight);
             }
@@ -266,7 +262,7 @@ public int getDisplayOrientation() {
         if (optimalSize == null) {
             minDiff = Double.MAX_VALUE;
             for (Camera.Size size : sizes) {
-                if (Math.abs(size.height - targetHeight) < minDiff && size.height >= MINIMUM_SIZE_HEIGHT) {//ADD another minimum height check condition
+                if (Math.abs(size.height - targetHeight) < minDiff) {
                     optimalSize = size;
                     minDiff = Math.abs(size.height - targetHeight);
                 }
