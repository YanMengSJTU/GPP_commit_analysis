diff --git a/build.gradle b/build.gradle
index 03ba833..4c0b21c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,6 +1,7 @@
 apply from: 'dependencies.gradle'
 
 buildscript {
+    ext.kotlin_version = '1.1.4-3'
     repositories {
         mavenCentral()
         jcenter()
@@ -8,6 +9,7 @@ buildscript {
 
     dependencies {
         classpath 'com.android.tools.build:gradle:3.0.0-beta4'
+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
     }
 }
 
diff --git a/core/build.gradle b/core/build.gradle
index cc4dabe..03c3d13 100644
--- a/core/build.gradle
+++ b/core/build.gradle
@@ -1,4 +1,5 @@
 apply plugin: 'com.android.library'
+apply plugin: 'kotlin-android'
 
 ext {
     isLibrary = true
@@ -10,4 +11,8 @@ ext {
 
 dependencies {
     compile libraries.support_v4
+    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
+}
+repositories {
+    mavenCentral()
 }
diff --git a/dependencies.gradle b/dependencies.gradle
index 6f553ad..879f11d 100644
--- a/dependencies.gradle
+++ b/dependencies.gradle
@@ -1,7 +1,7 @@
 ext.versions = [
-        compile_sdk   : 25,
-        min_sdk       : 14,
-        target_sdk    : 25,
+        compile_sdk   : 26,
+        min_sdk       : 19,
+        target_sdk    : 26,
         build_tools   : "25.0.2",
         support_lib   : "25.3.1",
         zxing         : "3.3.0",
diff --git a/zbar-sample/build.gradle b/zbar-sample/build.gradle
index c5e0ed3..f6ed478 100644
--- a/zbar-sample/build.gradle
+++ b/zbar-sample/build.gradle
@@ -1,4 +1,5 @@
 apply plugin: 'com.android.application'
+apply plugin: 'kotlin-android'
 
 dependencies {
     //compile project(":zbar")
@@ -6,6 +7,7 @@ dependencies {
     compile libraries.support_v4
     compile libraries.appcompat_v7
     compile libraries.design_support
+    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
 }
 
 android {
@@ -13,3 +15,6 @@ android {
         applicationId "${project.group}.zbar.sample"
     }
 }
+repositories {
+    mavenCentral()
+}
diff --git a/zbar-sample/src/main/res/values/ids.xml b/zbar-sample/src/main/res/values/ids.xml
index 1b582b6..5ad5498 100644
--- a/zbar-sample/src/main/res/values/ids.xml
+++ b/zbar-sample/src/main/res/values/ids.xml
@@ -4,4 +4,4 @@
     <item type="id" name="menu_auto_focus" />
     <item type="id" name="menu_formats" />
     <item type="id" name="menu_camera_selector" />
-</resources>
\ No newline at end of file
+</resources>
diff --git a/zbar/build.gradle b/zbar/build.gradle
index ee1c61e..64a4ec0 100644
--- a/zbar/build.gradle
+++ b/zbar/build.gradle
@@ -1,4 +1,5 @@
 apply plugin: 'com.android.library'
+apply plugin: 'kotlin-android'
 
 ext {
     isLibrary = true
@@ -12,4 +13,8 @@ dependencies {
     //compile project(":core")
     compile libraries.barcodescanner_core
     compile fileTree(dir: 'libs', include: '*.jar')
+    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
+}
+repositories {
+    mavenCentral()
 }
diff --git a/zxing-sample/build.gradle b/zxing-sample/build.gradle
index fb6b9ff..4dada5b 100644
--- a/zxing-sample/build.gradle
+++ b/zxing-sample/build.gradle
@@ -1,11 +1,14 @@
 apply plugin: 'com.android.application'
+apply plugin: 'kotlin-android'
 
 dependencies {
     //compile project(":zxing")
+    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
     compile libraries.barcodescanner_zxing
     compile libraries.support_v4
     compile libraries.appcompat_v7
     compile libraries.design_support
+    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
 }
 
 android {
@@ -13,3 +16,8 @@ android {
         applicationId "${project.group}.zxing.sample"
     }
 }
+repositories {
+    mavenCentral()
+}
+
+apply plugin: 'kotlin-android-extensions'
diff --git a/zxing-sample/src/main/AndroidManifest.xml b/zxing-sample/src/main/AndroidManifest.xml
index ab98927..01c3bc1 100644
--- a/zxing-sample/src/main/AndroidManifest.xml
+++ b/zxing-sample/src/main/AndroidManifest.xml
@@ -1,59 +1,64 @@
 <?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="me.dm7.barcodescanner.zxing.sample">
 
-<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="me.dm7.barcodescanner.zxing.sample">
-  <uses-permission android:name="android.permission.CAMERA" />
+    <uses-permission android:name="android.permission.CAMERA" />
 
-  <application android:allowBackup="true"
-        android:label="@string/app_name"
-        android:icon="@drawable/ic_launcher">
-        <activity android:name=".MainActivity"
-                  android:theme="@style/AppTheme"
-                  android:label="@string/app_name">
+    <application
+        android:allowBackup="true"
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name">
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:theme="@style/AppTheme">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
+
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-
-        <activity android:name=".FullScannerActivity"
-                  android:theme="@style/AppOverlayTheme"
-                  android:uiOptions="splitActionBarWhenNarrow"
-                  android:label="@string/scanner_activity">
-            <meta-data android:name="android.support.UI_OPTIONS"
-                       android:value="splitActionBarWhenNarrow" />
-        </activity>
-
-        <activity android:name=".FullScannerFragmentActivity"
-                  android:theme="@style/AppOverlayTheme"
-                  android:uiOptions="splitActionBarWhenNarrow"
-                  android:label="@string/scanner_fragment_activity">
-            <meta-data android:name="android.support.UI_OPTIONS"
-                       android:value="splitActionBarWhenNarrow" />
+        <activity
+            android:name=".FullScannerActivity"
+            android:label="@string/scanner_activity"
+            android:theme="@style/AppOverlayTheme"
+            android:uiOptions="splitActionBarWhenNarrow">
+            <meta-data
+                android:name="android.support.UI_OPTIONS"
+                android:value="splitActionBarWhenNarrow" />
         </activity>
-
-        <activity android:name=".SimpleScannerActivity"
-                android:theme="@style/AppOverlayTheme"
-                android:label="@string/simple_scanner_activity">
+        <activity
+            android:name=".FullScannerFragmentActivity"
+            android:label="@string/scanner_fragment_activity"
+            android:theme="@style/AppOverlayTheme"
+            android:uiOptions="splitActionBarWhenNarrow">
+            <meta-data
+                android:name="android.support.UI_OPTIONS"
+                android:value="splitActionBarWhenNarrow" />
         </activity>
-
-        <activity android:name=".SimpleScannerFragmentActivity"
-                android:theme="@style/AppOverlayTheme"
-                android:label="@string/simple_scanner_fragment_activity">
-        </activity>
-
-        <activity android:name=".FullScreenScannerFragmentActivity"
-                  android:theme="@style/AppOverlayTheme"
-                android:label="@string/full_screen_scanner_fragment_activity">
-      </activity>
-
-      <activity android:name=".CustomViewFinderScannerActivity"
-                android:theme="@style/AppTheme"
-                android:label="@string/custom_view_finder_scanner_activity">
-      </activity>
-
-      <activity android:name=".ScalingScannerActivity"
-                android:theme="@style/AppTheme"
-                android:label="@string/scaling_scanner_activity">
-      </activity>
+        <activity
+            android:name=".SimpleScannerActivity"
+            android:label="@string/simple_scanner_activity"
+            android:theme="@style/AppOverlayTheme"></activity>
+        <activity
+            android:name=".SimpleScannerFragmentActivity"
+            android:label="@string/simple_scanner_fragment_activity"
+            android:theme="@style/AppOverlayTheme"></activity>
+        <activity
+            android:name=".FullScreenScannerFragmentActivity"
+            android:label="@string/full_screen_scanner_fragment_activity"
+            android:theme="@style/AppOverlayTheme"></activity>
+        <activity
+            android:name=".CustomViewFinderScannerActivity"
+            android:label="@string/custom_view_finder_scanner_activity"
+            android:theme="@style/AppTheme"></activity>
+        <activity
+            android:name=".ScalingScannerActivity"
+            android:label="@string/scaling_scanner_activity"
+            android:theme="@style/AppTheme"></activity>
+        <activity
+            android:name=".AttendanceListActivity"
+            android:label="@string/app_name"></activity>
     </application>
-</manifest>
\ No newline at end of file
+
+</manifest>
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/AttendanceListActivity.kt b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/AttendanceListActivity.kt
new file mode 100644
index 0000000..a6e1d80
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/AttendanceListActivity.kt
@@ -0,0 +1,12 @@
+package me.dm7.barcodescanner.zxing.sample
+
+import android.support.v7.app.AppCompatActivity
+import android.os.Bundle
+
+class AttendanceListActivity : AppCompatActivity() {
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_attendance_list)
+    }
+}
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.java
deleted file mode 100644
index ed80d56..0000000
--- a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package me.dm7.barcodescanner.zxing.sample;
-
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.view.MenuItem;
-
-public class BaseScannerActivity extends AppCompatActivity {
-    public void setupToolbar() {
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-        final ActionBar ab = getSupportActionBar();
-        if(ab != null) {
-            ab.setDisplayHomeAsUpEnabled(true);
-        }
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            // Respond to the action bar's Up/Home button
-            case android.R.id.home:
-                finish();
-                return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-}
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.kt b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.kt
new file mode 100644
index 0000000..c612edf
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.kt
@@ -0,0 +1,26 @@
+package me.dm7.barcodescanner.zxing.sample
+
+import android.support.v7.app.ActionBar
+import android.support.v7.app.AppCompatActivity
+import android.support.v7.widget.Toolbar
+import android.view.MenuItem
+
+open class BaseScannerActivity : AppCompatActivity() {
+    fun setupToolbar() {
+        val toolbar = findViewById(R.id.toolbar) as Toolbar
+        setSupportActionBar(toolbar)
+        val ab = supportActionBar
+        ab?.setDisplayHomeAsUpEnabled(true)
+    }
+
+    override fun onOptionsItemSelected(item: MenuItem): Boolean {
+        when (item.itemId) {
+        // Respond to the action bar's Up/Home button
+            android.R.id.home -> {
+                finish()
+                return true
+            }
+        }
+        return super.onOptionsItemSelected(item)
+    }
+}
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/Data.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/Data.java
deleted file mode 100644
index cd327ef..0000000
--- a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/Data.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package me.dm7.barcodescanner.zxing.sample;
-
-import java.util.Date;
-
-public class Data {
-    public String barcode;
-    public Date date;
-
-    public Data() {}
-
-    public Data(String barcode, Date date) {
-        this.barcode = barcode;
-        this.date = date;
-    }
-
-}
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
deleted file mode 100644
index 5c4430b..0000000
--- a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
+++ /dev/null
@@ -1,235 +0,0 @@
-package me.dm7.barcodescanner.zxing.sample;
-
-import android.media.Ringtone;
-import android.media.RingtoneManager;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v4.app.DialogFragment;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.view.MenuItemCompat;
-import android.util.Log;
-import android.util.Pair;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.ViewGroup;
-
-import com.google.zxing.BarcodeFormat;
-import com.google.zxing.Result;
-
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.List;
-
-import me.dm7.barcodescanner.zxing.ZXingScannerView;
-
-public class FullScannerActivity extends BaseScannerActivity implements MessageDialogFragment.MessageDialogListener,
-        ZXingScannerView.ResultHandler, FormatSelectorDialogFragment.FormatSelectorDialogListener,
-        CameraSelectorDialogFragment.CameraSelectorDialogListener {
-
-    private static final String TAG = "FullScannerActivity";
-
-    private static final String FLASH_STATE = "FLASH_STATE";
-    private static final String AUTO_FOCUS_STATE = "AUTO_FOCUS_STATE";
-    private static final String SELECTED_FORMATS = "SELECTED_FORMATS";
-    private static final String CAMERA_ID = "CAMERA_ID";
-    private ZXingScannerView mScannerView;
-    private boolean mFlash;
-    private boolean mAutoFocus;
-    private ArrayList<Integer> mSelectedIndices;
-    private int mCameraId = -1;
-
-    private ArrayList<Pair<String, Date>> results;
-
-    @Override
-    public void onCreate(Bundle state) {
-        super.onCreate(state);
-        if (state != null) {
-            mFlash = state.getBoolean(FLASH_STATE, false);
-            mAutoFocus = state.getBoolean(AUTO_FOCUS_STATE, true);
-            mSelectedIndices = state.getIntegerArrayList(SELECTED_FORMATS);
-            mCameraId = state.getInt(CAMERA_ID, -1);
-        } else {
-            mFlash = false;
-            mAutoFocus = true;
-            mSelectedIndices = null;
-            mCameraId = -1;
-        }
-
-        setContentView(R.layout.activity_simple_scanner);
-        setupToolbar();
-
-        ViewGroup contentFrame = (ViewGroup) findViewById(R.id.content_frame);
-        mScannerView = new ZXingScannerView(this);
-        setupFormats();
-        contentFrame.addView(mScannerView);
-
-        // setup firebase
-        results = new ArrayList<Pair<String, Date>>();
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        mScannerView.setResultHandler(this);
-        mScannerView.startCamera(mCameraId);
-        mScannerView.setFlash(mFlash);
-        mScannerView.setAutoFocus(mAutoFocus);
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        outState.putBoolean(FLASH_STATE, mFlash);
-        outState.putBoolean(AUTO_FOCUS_STATE, mAutoFocus);
-        outState.putIntegerArrayList(SELECTED_FORMATS, mSelectedIndices);
-        outState.putInt(CAMERA_ID, mCameraId);
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        MenuItem menuItem;
-
-        if (mFlash) {
-            menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_on);
-        } else {
-            menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_off);
-        }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
-
-
-        if (mAutoFocus) {
-            menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_on);
-        } else {
-            menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_off);
-        }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
-
-        menuItem = menu.add(Menu.NONE, R.id.menu_formats, 0, R.string.formats);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
-
-        menuItem = menu.add(Menu.NONE, R.id.menu_camera_selector, 0, R.string.select_camera);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
-
-        return super.onCreateOptionsMenu(menu);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle presses on the action bar items
-        switch (item.getItemId()) {
-            case R.id.menu_flash:
-                mFlash = !mFlash;
-                if (mFlash) {
-                    item.setTitle(R.string.flash_on);
-                } else {
-                    item.setTitle(R.string.flash_off);
-                }
-                mScannerView.setFlash(mFlash);
-                return true;
-            case R.id.menu_auto_focus:
-                mAutoFocus = !mAutoFocus;
-                if (mAutoFocus) {
-                    item.setTitle(R.string.auto_focus_on);
-                } else {
-                    item.setTitle(R.string.auto_focus_off);
-                }
-                mScannerView.setAutoFocus(mAutoFocus);
-                return true;
-            case R.id.menu_formats:
-                DialogFragment fragment = FormatSelectorDialogFragment.newInstance(this, mSelectedIndices);
-                fragment.show(getSupportFragmentManager(), "format_selector");
-                return true;
-            case R.id.menu_camera_selector:
-                mScannerView.stopCamera();
-                DialogFragment cFragment = CameraSelectorDialogFragment.newInstance(this, mCameraId);
-                cFragment.show(getSupportFragmentManager(), "camera_selector");
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-    }
-
-    @Override
-    public void handleResult(Result rawResult) {
-        try {
-            Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
-            Ringtone r = RingtoneManager.getRingtone(getApplicationContext(), notification);
-            r.play();
-        } catch (Exception e) {
-        }
-
-        showMessageDialog("Contents = " + rawResult.getText() + ", Format = " + rawResult.getBarcodeFormat().toString());
-        appendResults(rawResult.getText(), new Date());
-    }
-
-    private void appendResults(String barcode, Date date) {
-        results.add(new Pair<>(barcode, date));
-    }
-
-    public void showMessageDialog(String message) {
-        DialogFragment fragment = MessageDialogFragment.newInstance("Scan Results", message, this);
-        fragment.show(getSupportFragmentManager(), "scan_results");
-    }
-
-    public void closeMessageDialog() {
-        closeDialog("scan_results");
-    }
-
-    public void closeFormatsDialog() {
-        closeDialog("format_selector");
-    }
-
-    public void closeDialog(String dialogName) {
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        DialogFragment fragment = (DialogFragment) fragmentManager.findFragmentByTag(dialogName);
-        if (fragment != null) {
-            fragment.dismiss();
-        }
-    }
-
-    @Override
-    public void onDialogPositiveClick(DialogFragment dialog) {
-        // Resume the camera
-        mScannerView.resumeCameraPreview(this);
-    }
-
-    @Override
-    public void onFormatsSaved(ArrayList<Integer> selectedIndices) {
-        mSelectedIndices = selectedIndices;
-        setupFormats();
-    }
-
-    @Override
-    public void onCameraSelected(int cameraId) {
-        mCameraId = cameraId;
-        mScannerView.startCamera(mCameraId);
-        mScannerView.setFlash(mFlash);
-        mScannerView.setAutoFocus(mAutoFocus);
-    }
-
-    public void setupFormats() {
-        List<BarcodeFormat> formats = new ArrayList<BarcodeFormat>();
-
-        if (mSelectedIndices == null || mSelectedIndices.isEmpty()) {
-            mSelectedIndices = new ArrayList<Integer>();
-            for (int i = 0; i < ZXingScannerView.ALL_FORMATS.size(); i++) {
-                mSelectedIndices.add(i);
-            }
-        }
-
-        for (int index : mSelectedIndices) {
-            formats.add(ZXingScannerView.ALL_FORMATS.get(index));
-        }
-        if (mScannerView != null) {
-            mScannerView.setFormats(formats);
-        }
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        mScannerView.stopCamera();
-        closeMessageDialog();
-        closeFormatsDialog();
-    }
-}
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.kt b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.kt
new file mode 100644
index 0000000..655be21
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.kt
@@ -0,0 +1,277 @@
+package me.dm7.barcodescanner.zxing.sample
+
+import android.content.ClipData
+import android.content.ClipboardManager
+import android.content.Context
+import android.content.Intent
+import android.media.Ringtone
+import android.media.RingtoneManager
+import android.net.Uri
+import android.os.Bundle
+import android.os.Handler
+import android.support.v4.app.DialogFragment
+import android.support.v4.app.FragmentManager
+import android.support.v4.view.MenuItemCompat
+import android.util.Log
+import android.util.Pair
+import android.view.Menu
+import android.view.MenuItem
+import android.view.ViewGroup
+import android.widget.Toast
+
+import com.google.zxing.BarcodeFormat
+import com.google.zxing.Result
+
+import java.util.ArrayList
+import java.util.Date
+
+import me.dm7.barcodescanner.zxing.ZXingScannerView
+import java.text.SimpleDateFormat
+
+class FullScannerActivity : BaseScannerActivity(), MessageDialogFragment.MessageDialogListener, ZXingScannerView.ResultHandler, FormatSelectorDialogFragment.FormatSelectorDialogListener, CameraSelectorDialogFragment.CameraSelectorDialogListener {
+    private var mScannerView: ZXingScannerView? = null
+    private var mFlash: Boolean = false
+    private var mAutoFocus: Boolean = false
+    private var mSelectedIndices: ArrayList<Int>? = null
+    private var mCameraId = -1
+    private var handler: Handler? = null
+
+    private var results = ArrayList<Pair<String, Date>>()
+
+    public override fun onCreate(state: Bundle?) {
+        super.onCreate(state)
+
+        // setup the configurations
+        if (state != null) {
+            mFlash = state.getBoolean(FLASH_STATE, false)
+            mAutoFocus = state.getBoolean(AUTO_FOCUS_STATE, true)
+            mSelectedIndices = state.getIntegerArrayList(SELECTED_FORMATS)
+            mCameraId = state.getInt(CAMERA_ID, -1)
+        } else {
+            mFlash = false
+            mAutoFocus = true
+            mSelectedIndices = null
+            mCameraId = -1
+        }
+
+        setContentView(R.layout.activity_simple_scanner)
+        setupToolbar()
+
+        val contentFrame = findViewById(R.id.content_frame) as ViewGroup
+        mScannerView = ZXingScannerView(this)
+        setupFormats()
+        contentFrame.addView(mScannerView)
+        handler = Handler()
+    }
+
+    public override fun onResume() {
+        super.onResume()
+        mScannerView!!.setResultHandler(this)
+        mScannerView!!.startCamera(mCameraId)
+        mScannerView!!.flash = mFlash
+        mScannerView!!.setAutoFocus(mAutoFocus)
+    }
+
+    public override fun onSaveInstanceState(outState: Bundle) {
+        super.onSaveInstanceState(outState)
+        outState.putBoolean(FLASH_STATE, mFlash)
+        outState.putBoolean(AUTO_FOCUS_STATE, mAutoFocus)
+        outState.putIntegerArrayList(SELECTED_FORMATS, mSelectedIndices)
+        outState.putInt(CAMERA_ID, mCameraId)
+    }
+
+    override fun onCreateOptionsMenu(menu: Menu): Boolean {
+        var menuItem: MenuItem
+
+        if (mFlash) {
+            menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_on)
+        } else {
+            menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_off)
+        }
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER)
+
+
+        if (mAutoFocus) {
+            menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_on)
+        } else {
+            menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_off)
+        }
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER)
+
+        // disable: format option force using only COBRA
+//        menuItem = menu.add(Menu.NONE, R.id.menu_formats, 0, R.string.formats)
+//        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER)
+
+        menuItem = menu.add(Menu.NONE, R.id.menu_camera_selector, 0, R.string.select_camera)
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER)
+
+        menuItem = menu.add(Menu.NONE, R.id.menu_attendance_list, 0, R.string.attendance_list)
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER)
+
+        return super.onCreateOptionsMenu(menu)
+    }
+
+    override fun onOptionsItemSelected(item: MenuItem): Boolean {
+        // Handle presses on the action bar items
+        when (item.itemId) {
+            R.id.menu_flash -> {
+                mFlash = !mFlash
+                if (mFlash) {
+                    item.setTitle(R.string.flash_on)
+                } else {
+                    item.setTitle(R.string.flash_off)
+                }
+                mScannerView!!.flash = mFlash
+                return true
+            }
+            R.id.menu_auto_focus -> {
+                mAutoFocus = !mAutoFocus
+                if (mAutoFocus) {
+                    item.setTitle(R.string.auto_focus_on)
+                } else {
+                    item.setTitle(R.string.auto_focus_off)
+                }
+                mScannerView!!.setAutoFocus(mAutoFocus)
+                return true
+            }
+            R.id.menu_formats -> {
+                val fragment = FormatSelectorDialogFragment.newInstance(this, mSelectedIndices)
+                fragment.show(supportFragmentManager, "format_selector")
+                return true
+            }
+            R.id.menu_camera_selector -> {
+                mScannerView!!.stopCamera()
+                val cFragment = CameraSelectorDialogFragment.newInstance(this, mCameraId)
+                cFragment.show(supportFragmentManager, "camera_selector")
+                return true
+            }
+            R.id.menu_attendance_list -> {
+                val intent = Intent(applicationContext, AttendanceListActivity::class.java)
+                startActivity(intent)
+                return true
+            }
+            else -> return super.onOptionsItemSelected(item)
+        }
+    }
+
+    override fun handleResult(rawResult: Result) {
+        try {
+            val notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)
+            val r = RingtoneManager.getRingtone(applicationContext, notification)
+            r.play()
+        } catch (e: Exception) {
+        }
+
+        appendResults(rawResult.text, Date())
+        copyResults()
+        showMessageDialog("Copied ${results.size} rows to clipboard")
+    }
+
+    private fun appendResults(barcode: String, date: Date) {
+        results.add(Pair(barcode, date))
+    }
+
+    private fun copyResults() {
+        val dformat = SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
+
+        val str = StringBuilder()
+        str.append("<html><body><table>")
+        for (res in results) {
+            str.append("<tr>")
+            str.append("<td>${res.first}</td>")
+            str.append("<td>${getStudentID(res.first)}</td>")
+            str.append("<td>${dformat.format(res.second)}</td>")
+            str.append("</tr>")
+        }
+        str.append("</table></body></html>")
+
+        val html = str.toString()
+        val clipboard = getSystemService(Context.CLIPBOARD_SERVICE) as ClipboardManager
+        val data = ClipData.newHtmlText("html", html, html)
+        clipboard.setPrimaryClip(data)
+    }
+
+    private fun getStudentID(barcode: String): String {
+        return barcode.substring(5, 13)
+    }
+
+    fun showMessageDialog(message: String) {
+        handler!!.post({
+            Toast.makeText(this, message, Toast.LENGTH_SHORT).show()
+        })
+
+        handler!!.postDelayed({
+            mScannerView!!.resumeCameraPreview(this)
+        }, 1000)
+
+//        val fragment = MessageDialogFragment.newInstance("Scan Results", message, this)
+//        fragment.show(supportFragmentManager, "scan_results")
+    }
+
+    fun closeMessageDialog() {
+        closeDialog("scan_results")
+    }
+
+    fun closeFormatsDialog() {
+        closeDialog("format_selector")
+    }
+
+    fun closeDialog(dialogName: String) {
+        val fragmentManager = supportFragmentManager
+        val fragment = fragmentManager.findFragmentByTag(dialogName) as DialogFragment
+        fragment?.dismiss()
+    }
+
+    override fun onDialogPositiveClick(dialog: DialogFragment) {
+        // Resume the camera
+        mScannerView!!.resumeCameraPreview(this)
+    }
+
+    override fun onFormatsSaved(selectedIndices: ArrayList<Int>) {
+        mSelectedIndices = selectedIndices
+        setupFormats()
+    }
+
+    override fun onCameraSelected(cameraId: Int) {
+        mCameraId = cameraId
+        mScannerView!!.startCamera(mCameraId)
+        mScannerView!!.flash = mFlash
+        mScannerView!!.setAutoFocus(mAutoFocus)
+    }
+
+    fun setupFormats() {
+        val formats = ArrayList<BarcodeFormat>()
+
+//        if (mSelectedIndices == null || mSelectedIndices!!.isEmpty()) {
+//            mSelectedIndices = ArrayList<Int>()
+//            for (i in ZXingScannerView.ALL_FORMATS.indices) {
+//                mSelectedIndices!!.add(i)
+//            }
+//        }
+
+        // force using only 1: CODBRA
+        for (index in listOf(1)) {
+            formats.add(ZXingScannerView.ALL_FORMATS[index])
+        }
+        if (mScannerView != null) {
+            mScannerView!!.setFormats(formats)
+        }
+    }
+
+    public override fun onPause() {
+        super.onPause()
+        mScannerView!!.stopCamera()
+        closeMessageDialog()
+        closeFormatsDialog()
+    }
+
+    companion object {
+
+        private val TAG = "FullScannerActivity"
+
+        private val FLASH_STATE = "FLASH_STATE"
+        private val AUTO_FOCUS_STATE = "AUTO_FOCUS_STATE"
+        private val SELECTED_FORMATS = "SELECTED_FORMATS"
+        private val CAMERA_ID = "CAMERA_ID"
+    }
+}
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java
deleted file mode 100644
index d85fa01..0000000
--- a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java
+++ /dev/null
@@ -1,85 +0,0 @@
-package me.dm7.barcodescanner.zxing.sample;
-
-import android.Manifest;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.os.Bundle;
-import android.support.v4.app.ActivityCompat;
-import android.support.v4.content.ContextCompat;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.view.View;
-import android.widget.Toast;
-
-public class MainActivity extends AppCompatActivity {
-    private static final int ZXING_CAMERA_PERMISSION = 1;
-    private Class<?> mClss;
-
-    @Override
-    public void onCreate(Bundle state) {
-        super.onCreate(state);
-        setContentView(R.layout.activity_main);
-        setupToolbar();
-    }
-
-    public void setupToolbar() {
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-    }
-
-    public void launchSimpleActivity(View v) {
-        launchActivity(SimpleScannerActivity.class);
-    }
-
-    public void launchSimpleFragmentActivity(View v) {
-        launchActivity(SimpleScannerFragmentActivity.class);
-    }
-
-    public void launchFullActivity(View v) {
-        launchActivity(FullScannerActivity.class);
-    }
-
-    public void launchFullFragmentActivity(View v) {
-        launchActivity(FullScannerFragmentActivity.class);
-    }
-
-    public void launchFullScreenScannerFragmentActivity(View v) {
-        launchActivity(FullScreenScannerFragmentActivity.class);
-    }
-
-    public void launchCustomViewFinderScannerActivity(View v) {
-        launchActivity(CustomViewFinderScannerActivity.class);
-    }
-
-    public void launchScalingScannerActivity(View v) {
-        launchActivity(ScalingScannerActivity.class);
-    }
-
-    public void launchActivity(Class<?> clss) {
-        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
-                != PackageManager.PERMISSION_GRANTED) {
-            mClss = clss;
-            ActivityCompat.requestPermissions(this,
-                    new String[]{Manifest.permission.CAMERA}, ZXING_CAMERA_PERMISSION);
-        } else {
-            Intent intent = new Intent(this, clss);
-            startActivity(intent);
-        }
-    }
-
-    @Override
-    public void onRequestPermissionsResult(int requestCode,  String permissions[], int[] grantResults) {
-        switch (requestCode) {
-            case ZXING_CAMERA_PERMISSION:
-                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-                    if(mClss != null) {
-                        Intent intent = new Intent(this, mClss);
-                        startActivity(intent);
-                    }
-                } else {
-                    Toast.makeText(this, "Please grant camera permission to use the QR Scanner", Toast.LENGTH_SHORT).show();
-                }
-                return;
-        }
-    }
-}
\ No newline at end of file
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.kt b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.kt
new file mode 100644
index 0000000..4e9d76a
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.kt
@@ -0,0 +1,53 @@
+package me.dm7.barcodescanner.zxing.sample
+
+import android.Manifest
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.os.Bundle
+import android.support.v4.app.ActivityCompat
+import android.support.v4.content.ContextCompat
+import android.support.v7.app.AppCompatActivity
+import android.support.v7.widget.Toolbar
+import android.view.View
+import android.widget.Toast
+
+class MainActivity : AppCompatActivity() {
+    private var mClss: Class<*>? = null
+
+    public override fun onCreate(state: Bundle?) {
+        super.onCreate(state)
+        setContentView(R.layout.activity_main)
+        launchActivity(FullScannerActivity::class.java)
+    }
+
+    fun launchActivity(clss: Class<*>) {
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {
+            mClss = clss
+            ActivityCompat.requestPermissions(this,
+                    arrayOf(Manifest.permission.CAMERA), ZXING_CAMERA_PERMISSION)
+        } else {
+            val intent = Intent(this, clss)
+            startActivity(intent)
+        }
+    }
+
+    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<String>, grantResults: IntArray) {
+        when (requestCode) {
+            ZXING_CAMERA_PERMISSION -> {
+                if (grantResults.size > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                    if (mClss != null) {
+                        val intent = Intent(this, mClss)
+                        startActivity(intent)
+                    }
+                } else {
+                    Toast.makeText(this, "Please grant camera permission to use the QR Scanner", Toast.LENGTH_SHORT).show()
+                }
+                return
+            }
+        }
+    }
+
+    companion object {
+        private val ZXING_CAMERA_PERMISSION = 1
+    }
+}
diff --git a/zxing-sample/src/main/res/layout/activity_attendance_list.xml b/zxing-sample/src/main/res/layout/activity_attendance_list.xml
new file mode 100644
index 0000000..9489c98
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_attendance_list.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="me.dm7.barcodescanner.zxing.sample.AttendanceListActivity">
+
+    <ListView
+        android:id="@+id/attedanceListView"
+        android:layout_width="368dp"
+        android:layout_height="495dp"
+        android:layout_marginBottom="8dp"
+        android:layout_marginEnd="8dp"
+        android:layout_marginStart="8dp"
+        android:layout_marginTop="8dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</android.support.constraint.ConstraintLayout>
diff --git a/zxing-sample/src/main/res/layout/activity_full_scanner.xml b/zxing-sample/src/main/res/layout/activity_full_scanner.xml
index eb66dd7..051f775 100644
--- a/zxing-sample/src/main/res/layout/activity_full_scanner.xml
+++ b/zxing-sample/src/main/res/layout/activity_full_scanner.xml
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
@@ -9,14 +8,15 @@
     <FrameLayout
         android:id="@+id/content_frame"
         android:layout_width="match_parent"
-        android:layout_height="match_parent" />
+        android:layout_height="match_parent">
+    </FrameLayout>
 
     <android.support.v7.widget.Toolbar
         android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
         android:layout_gravity="top"
-        android:minHeight="?attr/actionBarSize"
         android:background="@color/actionbar_opacity"
-        app:theme="@style/TransparentToolbar"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"/>
-</FrameLayout>
\ No newline at end of file
+        android:minHeight="?attr/actionBarSize"
+        app:theme="@style/TransparentToolbar" />
+</FrameLayout>
diff --git a/zxing-sample/src/main/res/layout/activity_main.xml b/zxing-sample/src/main/res/layout/activity_main.xml
index 2ef55d3..287b73a 100644
--- a/zxing-sample/src/main/res/layout/activity_main.xml
+++ b/zxing-sample/src/main/res/layout/activity_main.xml
@@ -17,42 +17,4 @@
             android:layout_height="wrap_content"/>
     </android.support.design.widget.AppBarLayout>
 
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-        <LinearLayout
-                  android:orientation="vertical"
-                  android:layout_width="match_parent"
-                  android:layout_height="match_parent"
-                  android:gravity="center">
-            <Button android:layout_height="wrap_content"
-                    android:layout_width="match_parent"
-                    android:text="@string/simple_activity_sample"
-                    android:onClick="launchSimpleActivity" />
-            <Button android:layout_height="wrap_content"
-                    android:layout_width="match_parent"
-                    android:text="@string/simple_fragment_sample"
-                    android:onClick="launchSimpleFragmentActivity" />
-            <Button android:layout_height="wrap_content"
-                    android:layout_width="match_parent"
-                    android:text="@string/activity_sample"
-                    android:onClick="launchFullActivity" />
-            <Button android:layout_height="wrap_content"
-                    android:layout_width="match_parent"
-                    android:text="@string/fragment_sample"
-                    android:onClick="launchFullFragmentActivity" />
-            <Button android:layout_height="wrap_content"
-                android:layout_width="match_parent"
-                android:text="@string/full_screen_sample"
-                android:onClick="launchFullScreenScannerFragmentActivity" />
-            <Button android:layout_height="wrap_content"
-                    android:layout_width="match_parent"
-                    android:text="@string/custom_view_finder_sample"
-                    android:onClick="launchCustomViewFinderScannerActivity" />
-            <Button android:layout_height="wrap_content"
-                    android:layout_width="match_parent"
-                    android:text="@string/scaling_sample"
-                    android:onClick="launchScalingScannerActivity" />
-        </LinearLayout>
-    </ScrollView>
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/zxing-sample/src/main/res/values/ids.xml b/zxing-sample/src/main/res/values/ids.xml
index 1b582b6..4aaaeee 100644
--- a/zxing-sample/src/main/res/values/ids.xml
+++ b/zxing-sample/src/main/res/values/ids.xml
@@ -1,7 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <item type="id" name="menu_flash" />
-    <item type="id" name="menu_auto_focus" />
-    <item type="id" name="menu_formats" />
-    <item type="id" name="menu_camera_selector" />
-</resources>
\ No newline at end of file
+    <item name="menu_flash" type="id" />
+    <item name="menu_auto_focus" type="id" />
+    <item name="menu_formats" type="id" />
+    <item name="menu_camera_selector" type="id" />
+    <item name="menu_attendance_list" type="id" />
+</resources>
diff --git a/zxing-sample/src/main/res/values/strings.xml b/zxing-sample/src/main/res/values/strings.xml
index 1b6867f..be3a417 100644
--- a/zxing-sample/src/main/res/values/strings.xml
+++ b/zxing-sample/src/main/res/values/strings.xml
@@ -24,5 +24,6 @@
     <string name="select_camera">Select a Camera</string>
     <string name="ok_button">OK</string>
     <string name="cancel_button">Cancel</string>
+    <string name="attendance_list">Attendance List</string>
     <bool name="cameraPreviewShouldFillView">true</bool>
 </resources>
diff --git a/zxing/build.gradle b/zxing/build.gradle
index 0496a8e..e96b078 100644
--- a/zxing/build.gradle
+++ b/zxing/build.gradle
@@ -1,4 +1,5 @@
 apply plugin: 'com.android.library'
+apply plugin: 'kotlin-android'
 
 ext {
     isLibrary = true
@@ -12,4 +13,8 @@ dependencies {
     //compile project(":core")
     compile libraries.barcodescanner_core
     compile libraries.zxing_core
+    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
+}
+repositories {
+    mavenCentral()
 }
