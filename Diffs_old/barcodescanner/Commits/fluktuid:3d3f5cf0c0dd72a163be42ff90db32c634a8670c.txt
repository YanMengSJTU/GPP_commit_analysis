diff --git a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.kt b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.kt
index 3245905..a829779 100644
--- a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.kt
+++ b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.kt
@@ -16,11 +16,9 @@ import java.util.*
 class ZXingScannerView : BarcodeScannerView {
 
     private var mMultiFormatReader: MultiFormatReader? = null
-    private var mFormats: List<BarcodeFormat>? = null
     private var mResultHandler: ResultHandler? = null
 
-    val formats: Collection<BarcodeFormat>
-        get() = mFormats ?: ALL_FORMATS
+    private var mFormats: Collection<BarcodeFormat> = ALL_FORMATS
 
     constructor(context: Context) : super(context)
 
@@ -41,16 +39,15 @@ class ZXingScannerView : BarcodeScannerView {
 
     private fun initMultiFormatReader() {
         val hints = EnumMap<DecodeHintType, Any>(DecodeHintType::class.java)
-        hints.put(DecodeHintType.POSSIBLE_FORMATS, formats)
+        hints[DecodeHintType.POSSIBLE_FORMATS] = mFormats
         mMultiFormatReader = MultiFormatReader()
         mMultiFormatReader!!.setHints(hints)
     }
 
     override fun onPreviewFrame(data: ByteArray, camera: Camera) {
+        mResultHandler ?: return
+
         var mData = data
-        if (mResultHandler == null) {
-            return
-        }
 
         try {
             val parameters = camera.parameters
@@ -129,15 +126,12 @@ class ZXingScannerView : BarcodeScannerView {
     fun buildLuminanceSource(data: ByteArray, width: Int, height: Int): PlanarYUVLuminanceSource? {
         val rect = getFramingRectInPreview(width, height) ?: return null
         // Go ahead and assume it's YUV rather than die.
-        var source: PlanarYUVLuminanceSource? = null
-
-        try {
-            source = PlanarYUVLuminanceSource(data, width, height, rect.left, rect.top,
+        return try {
+            PlanarYUVLuminanceSource(data, width, height, rect.left, rect.top,
                     rect.width(), rect.height(), false)
         } catch (e: Exception) {
+            null
         }
-
-        return source
     }
 
     interface ResultHandler {
