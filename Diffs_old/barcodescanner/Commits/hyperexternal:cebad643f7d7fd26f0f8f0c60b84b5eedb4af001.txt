diff --git a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
index 86c7c3f..6449b7f 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
@@ -5,7 +5,6 @@
 import android.graphics.Color;
 import android.graphics.Rect;
 import android.hardware.Camera;
-import android.os.Build;
 import android.support.annotation.ColorInt;
 import android.util.AttributeSet;
 import android.view.Gravity;
@@ -15,7 +14,9 @@
 
 public abstract class BarcodeScannerView extends FrameLayout implements Camera.PreviewCallback  {
 
-    private static final float ASPECT_TOLERANCE_HUAWEI = 0.5f;
+    private static final float NORMAL_ASPECT_TOLERANCE = 0.1f;
+    private static final float TABLET_ASPECT_TOLERANCE = 0.3f;
+    private static final float HUAWEI_ASPECT_TOLERANCE = 0.5f;
 
     private CameraWrapper mCameraWrapper;
     private CameraPreview mPreview;
@@ -38,6 +39,7 @@
     private float mBorderAlpha = 1.0f;
     private int mViewFinderOffset = 0;
     private float mAspectTolerance = 0.1f;
+    private boolean isTablet = false;
 
     public BarcodeScannerView(Context context) {
         super(context);
@@ -81,7 +83,7 @@ public final void setupLayout(CameraWrapper cameraWrapper) {
         removeAllViews();
 
         mPreview = new CameraPreview(getContext(), cameraWrapper, this);
-        setAspectTolerance(mPreview);
+        setupAspectTolerance(mPreview);
         mPreview.setShouldScaleToFill(mShouldScaleToFill);
         if (!mShouldScaleToFill) {
             RelativeLayout relativeLayout = new RelativeLayout(getContext());
@@ -101,17 +103,19 @@ public final void setupLayout(CameraWrapper cameraWrapper) {
         }
     }
 
-    private void setAspectTolerance(CameraPreview mPreview) {
-        if (isHuaweiLenovoPhones()) { //hard coded huawei and lenovo phones https://github.com/dm77/barcodescanner
-            mPreview.setAspectTolerance(ASPECT_TOLERANCE_HUAWEI);
+    private void setupAspectTolerance(CameraPreview mPreview) {
+        if (isTablet) {
+            setAspectTolerance(TABLET_ASPECT_TOLERANCE);
+        } else if (PhoneAspectToleranceDecider.isHuaweiOrLenovo()) { //hard coded huawei and lenovo phones https://github.com/dm77/barcodescanner
+            setAspectTolerance(HUAWEI_ASPECT_TOLERANCE);
         } else {
-            mPreview.setAspectTolerance(mAspectTolerance);
+            setAspectTolerance(NORMAL_ASPECT_TOLERANCE);
         }
+        mPreview.setAspectTolerance(mAspectTolerance);
     }
 
-    private boolean isHuaweiLenovoPhones() {
-        String manufacturer = Build.MANUFACTURER;
-        return "HUAWEI".equalsIgnoreCase(manufacturer) || "Lenovo".equalsIgnoreCase(manufacturer);
+    public void setTablet(boolean tablet) {
+        isTablet = tablet;
     }
 
     /**
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/PhoneAspectToleranceDecider.java b/core/src/main/java/me/dm7/barcodescanner/core/PhoneAspectToleranceDecider.java
new file mode 100644
index 0000000..94ad93a
--- /dev/null
+++ b/core/src/main/java/me/dm7/barcodescanner/core/PhoneAspectToleranceDecider.java
@@ -0,0 +1,11 @@
+package me.dm7.barcodescanner.core;
+
+import android.os.Build;
+
+class PhoneAspectToleranceDecider {
+
+    static boolean isHuaweiOrLenovo() {
+        String manufacturer = Build.MANUFACTURER;
+        return "HUAWEI".equalsIgnoreCase(manufacturer) || "Lenovo".equalsIgnoreCase(manufacturer);
+    }
+}
