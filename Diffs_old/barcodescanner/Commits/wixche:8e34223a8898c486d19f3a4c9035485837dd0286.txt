diff --git a/CHANGELOG.md b/CHANGELOG.md
index 658ee4a..162a066 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,4 +1,44 @@
 # Change Log
 
+## [1.9.13] - February  16, 2019
+* Update plugin, build tools and library versions
+* Min SDK version is now 14
+* Upload artifacts to jcenter/bintray instead of Maven central/Sonatype
+
+## [1.9.8] - August 18, 2017
+* One more attempt to fix Nexus 5x portrait scanning problems
+
+## [1.9.7] - August 2, 2017
+* Fix everything that was broken since 1.9.5 (Relevant issues: #336, #315, #339, #338)
+
+## [1.9.6] - August 1, 2017
+* Revert changes from 1.9.5 as it causes more harm than good (See #336)
+
+## [1.9.5] - July 28, 2017
+* Fix incorrectly rotated data on Nexus 5x devices. Thanks to @rramprasad for the pull request #315
+
+## [1.9.4] - July 15, 2017
+* Add ability to customize aspect ratio tolerance that is used in figuring out the optimal camera preview size. This is just a temporary fix for #249,#287,#293
+
+## [1.9.3] - May 27, 2017
+* Add ability to customize view finder with custom attributes. See #285 for more info. Thanks to @albinpoignot for the pull request
+
+## [1.9.2] - May 13, 2017
+* Add support for AZTEC codes in ZXing: #299, #288.
+
+## [1.9.1] - April 8, 2017
+* Add ability to scan inverted/negative codes with ZXing. Thanks to @manijshrestha for this pull request #265
+
+## [1.9] - July 25, 2016
+* Scale camera preview when the view size isn't full screen. Thanks to @xolan for this pull request PR #219
+* Fix inverted camera in devices with differently oriented back and forward facing cameras. Thanks to @thadcodes for PR #191
+* Add ability switch view finder view to square. Thanks to @squeeish for PR #163
+
+## [1.8.4] - Dec 30, 2015
+* Improve performance by opening camera and handling preview frames in a separate HandlerThread (#1, #99)
+* Do not automatically stopCamera after a result is found #115
+* Update samples to use Material Theme and make sure all samples use the FullScreen theme
+* Update gradle wrapper to v2.10, gradle plugin to v1.5.0, buildToolsVersion to v23.0.2 and targetSdkVersion 23
+
 ## [1.8.3] - October 3, 2015
-Rebuild ZBar libraries with position independent code (#123,#119,#94).
+* Rebuild ZBar libraries with position independent code (#123,#119,#94).
diff --git a/README.md b/README.md
index 46e384d..aa3b48a 100644
--- a/README.md
+++ b/README.md
@@ -5,9 +5,17 @@ Android library projects that provides easy to use and extensible Barcode Scanne
 
 Screenshots
 ===========
-![Portrait](https://raw.github.com/dm77/barcodescanner/master/screenshots/portrait_small.png)
+<img src="https://raw.github.com/dm77/barcodescanner/master/screenshots/main_activity.png" width="266">
+<img src="https://raw.github.com/dm77/barcodescanner/master/screenshots/scanner.png" width="266">
+<img src="https://raw.github.com/dm77/barcodescanner/master/screenshots/scan_results.png" width="266">
 
-![Landscape](https://raw.github.com/dm77/barcodescanner/master/screenshots/landscape_small.png)
+
+Minor BREAKING CHANGE in 1.8.4
+==============================
+Version 1.8.4 introduces a couple of new changes:
+
+* Open Camera and handle preview frames in a separate HandlerThread (#1, #99): Though this has worked fine in my testing on 3 devices, I would advise you to test on your own devices before blindly releasing apps with this version. If you run into any issues please file a bug report.
+* Do not automatically stopCamera after a result is found #115: This means that upon a successful scan only the cameraPreview is stopped but the camera is not released. So previously if your code was calling mScannerView.startCamera() in the handleResult() method, please replace that with a call to mScannerView.resumeCameraPreview(this);
 
 ZXing
 =====
@@ -17,7 +25,12 @@ Installation
 
 Add the following dependency to your build.gradle file.
 
-`compile 'me.dm7.barcodescanner:zxing:1.8.3'`
+```
+repositories {
+   jcenter()
+}
+implementation 'me.dm7.barcodescanner:zxing:1.9.13'
+```
 
 Simple Usage
 ------------
@@ -59,17 +72,20 @@ public class SimpleScannerActivity extends Activity implements ZXingScannerView.
         // Do something with the result here
         Log.v(TAG, rawResult.getText()); // Prints scan results
         Log.v(TAG, rawResult.getBarcodeFormat().toString()); // Prints the scan format (qrcode, pdf417 etc.)
+
+        // If you would like to resume scanning, call this method below:
+        mScannerView.resumeCameraPreview(this);
     }
 }
 
 ```
 
-Please take a look at the [zxing/sample] (https://github.com/dm77/barcodescanner/tree/master/zxing/sample) project for a full working example.
+Please take a look at the [zxing-sample](https://github.com/dm77/barcodescanner/tree/master/zxing-sample) project for a full working example.
 
 Advanced Usage
 --------------
 
-Take a look at the [ScannerActivity.java] (https://github.com/dm77/barcodescanner/blob/master/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerActivity.java) or [ScannerFragment.java] (https://github.com/dm77/barcodescanner/blob/master/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragment.java) classes to get an idea on advanced usage.
+Take a look at the [FullScannerActivity.java](https://github.com/dm77/barcodescanner/blob/master/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java) or [FullScannerFragment.java](https://github.com/dm77/barcodescanner/blob/master/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragment.java) classes to get an idea on advanced usage.
 
 Interesting methods on the ZXingScannerView include:
 
@@ -89,6 +105,17 @@ void startCamera(int cameraId);
 
 Specify front-facing or rear-facing cameras by using the `void startCamera(int cameraId);` method.
 
+
+For HUAWEI mobile phone like P9, P10, when scanning using the default settings, it won't work due to the
+"preview size",  please adjust the parameter as below:
+
+```java
+mScannerView = (ZXingScannerView) findViewById(R.id.zx_view);
+
+// this paramter will make your HUAWEI phone works great!
+mScannerView.setAspectTolerance(0.5f);
+```
+
 Supported Formats:
 
 ```java
@@ -115,7 +142,12 @@ Installation
 
 Add the following dependency to your build.gradle file.
 
-`compile 'me.dm7.barcodescanner:zbar:1.8.3'`
+```
+repositories {
+   jcenter()
+}
+implementation 'me.dm7.barcodescanner:zbar:1.9.13'
+```
 
 Simple Usage
 ------------
@@ -157,18 +189,21 @@ public class SimpleScannerActivity extends Activity implements ZBarScannerView.R
         // Do something with the result here
         Log.v(TAG, rawResult.getContents()); // Prints scan results
         Log.v(TAG, rawResult.getBarcodeFormat().getName()); // Prints the scan format (qrcode, pdf417 etc.)
+
+        // If you would like to resume scanning, call this method below:
+        mScannerView.resumeCameraPreview(this);
     }
 }
 
 ```
 
-Please take a look at the [zbar/sample] (https://github.com/dm77/barcodescanner/tree/master/zbar/sample)  project for a full working example.
+Please take a look at the [zbar-sample](https://github.com/dm77/barcodescanner/tree/master/zbar-sample)  project for a full working example.
 
 Advanced Usage
 --------------
 
 
-Take a look at the [ScannerActivity.java] (https://github.com/dm77/barcodescanner/blob/master/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java) or [ScannerFragment.java] (https://github.com/dm77/barcodescanner/blob/master/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragment.java) classes to get an idea on advanced usage.
+Take a look at the [FullScannerActivity.java](https://github.com/dm77/barcodescanner/blob/master/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerActivity.java) or [FullScannerFragment.java](https://github.com/dm77/barcodescanner/blob/master/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragment.java) classes to get an idea on advanced usage.
 
 Interesting methods on the ZBarScannerView include:
 
@@ -201,7 +236,7 @@ BarcodeFormat.DATABAR_EXP
 BarcodeFormat.CODABAR
 BarcodeFormat.CODE39
 BarcodeFormat.PDF417
-BarcodeFormat.QRCODE
+BarcodeFormat.QR_CODE
 BarcodeFormat.CODE93
 BarcodeFormat.CODE128
 ```
diff --git a/build.gradle b/build.gradle
index 12ad13b..12d3c19 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,26 +1,28 @@
+apply from: 'dependencies.gradle'
+
 buildscript {
     repositories {
-        mavenCentral()
+        jcenter()
+        google()
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.1.0'
+        classpath 'com.android.tools.build:gradle:3.3.1'
+        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
+        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
     }
 }
 
 allprojects {
     group = 'me.dm7.barcodescanner'
-    version = '1.8.3'
+    version = '1.9.13'
 
     repositories {
-        mavenCentral()
-        maven {
-            url 'https://oss.sonatype.org/content/groups/public'
-        }
+        google()
+        jcenter()
     }
 
     ext {
-        supportLibraryDependency = 'com.android.support:support-v4:23.0.1'
         isLibrary = false
     }
 }
@@ -30,8 +32,8 @@ subprojects {
         ext.pluginContainer = project.getPlugins()
         if(ext.pluginContainer.hasPlugin("com.android.application") || ext.pluginContainer.hasPlugin("com.android.library")) {
             android {
-                compileSdkVersion 23
-                buildToolsVersion '23.0.1'
+                compileSdkVersion versions.compile_sdk
+                buildToolsVersion versions.build_tools
 
                 android {
                     lintOptions {
@@ -40,37 +42,26 @@ subprojects {
                 }
 
                 defaultConfig {
-                    minSdkVersion 9
-                    targetSdkVersion 23
-                    versionCode 183
-                    versionName "1.8.3"
+                    minSdkVersion versions.min_sdk
+                    targetSdkVersion versions.target_sdk
+                    versionCode 1913
+                    versionName "1.9.13"
                 }
             }
         }
-        if(project.isLibrary && rootProject.hasProperty('sonatypeUsername') && rootProject.hasProperty('sonatypePassword')) {
-            configure(project) {
-                apply plugin: 'maven'
-                apply plugin: 'signing'
 
-                signing {
-                    required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
-                    sign configurations.archives
-                }
-
-                uploadArchives {
-                    repositories.mavenDeployer {
-                        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                        repository(url: sonatypeRepo) {
-                            authentication(userName: sonatypeUsername , password: sonatypePassword)
-                            releases(updatePolicy: 'always')
-                        }
+        Properties properties = new Properties()
+        properties.load(project.rootProject.file('local.properties').newDataInputStream())
+        def bintrayUser = properties.getProperty('bintray.user')
+        def bintrayApikey = properties.getProperty('bintray.apikey')
 
-                        snapshotRepository(url: sonatypeSnapshotRepo) {
-                            authentication(userName: sonatypeUsername , password: sonatypePassword)
-                            snapshots(updatePolicy: 'always')
-                        }
+        if(project.isLibrary && bintrayUser?.trim() && bintrayApikey?.trim()) {
+            configure(project) {
+                apply plugin: 'com.github.dcendents.android-maven'
+                group = project.group                               // Maven Group ID for the artifact
 
+                install {
+                    repositories.mavenInstaller {
                         pom.project {
                             name project.pomName
                             version project.version
@@ -104,7 +95,55 @@ subprojects {
                         }
                     }
                 }
+
+                apply plugin: 'com.jfrog.bintray'
+
+                version = '1.9.13'
+
+                if (project.hasProperty("android")) { // Android libraries
+                    task sourcesJar(type: Jar) {
+                        classifier = 'sources'
+                        from android.sourceSets.main.java.srcDirs
+                    }
+                } else { // Java libraries
+                    task sourcesJar(type: Jar, dependsOn: classes) {
+                        classifier = 'sources'
+                        from sourceSets.main.allSource
+                    }
+                }
+
+
+                artifacts {
+                    archives sourcesJar
+                }
+
+                bintray {
+                    user = properties.getProperty("bintray.user")
+                    key = properties.getProperty("bintray.apikey")
+
+                    configurations = ['archives']
+                    pkg {
+                        repo = 'maven'
+                        name = 'me.dm7.barcodescanner:' + project.pomArtifactId
+                        desc = 'Barcode Scanner Libraries for Android'
+                        websiteUrl = 'https://github.com/dm77/barcodescanner'
+                        vcsUrl = 'https://github.com/dm77/barcodescanner.git'
+                        licenses = ["Apache-2.0"]
+                        publish = true
+                        publicDownloadNumbers = true
+                        version {
+                            desc = 'Barcode Scanner Libraries for Android'
+                            gpg {
+                                sign = false
+                            }
+                        }
+                    }
+                }
             }
         }
     }
 }
+
+task wrapper(type: Wrapper) {
+    gradleVersion = '4.10.1'
+}
diff --git a/core/build.gradle b/core/build.gradle
index e9897ae..81a385b 100644
--- a/core/build.gradle
+++ b/core/build.gradle
@@ -9,11 +9,5 @@ ext {
 }
 
 dependencies {
-    compile supportLibraryDependency
-}
-
-android {
-    defaultConfig {
-        //applicationId "${project.group}.core"
-    }
+    implementation libraries.support_v4
 }
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
index 7fdc1c0..b14749c 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
@@ -1,9 +1,11 @@
 package me.dm7.barcodescanner.core;
 
 import android.content.Context;
+import android.content.res.TypedArray;
 import android.graphics.Color;
 import android.graphics.Rect;
 import android.hardware.Camera;
+import android.support.annotation.ColorInt;
 import android.util.AttributeSet;
 import android.view.Gravity;
 import android.view.View;
@@ -11,30 +13,83 @@
 import android.widget.RelativeLayout;
 
 public abstract class BarcodeScannerView extends FrameLayout implements Camera.PreviewCallback  {
-    private Camera mCamera;
+
+    private CameraWrapper mCameraWrapper;
     private CameraPreview mPreview;
     private IViewFinder mViewFinderView;
     private Rect mFramingRectInPreview;
+    private CameraHandlerThread mCameraHandlerThread;
+    private Boolean mFlashState;
+    private boolean mAutofocusState = true;
+    private boolean mShouldScaleToFill = true;
+
+    private boolean mIsLaserEnabled = true;
+    @ColorInt private int mLaserColor = getResources().getColor(R.color.viewfinder_laser);
+    @ColorInt private int mBorderColor = getResources().getColor(R.color.viewfinder_border);
+    private int mMaskColor = getResources().getColor(R.color.viewfinder_mask);
+    private int mBorderWidth = getResources().getInteger(R.integer.viewfinder_border_width);
+    private int mBorderLength = getResources().getInteger(R.integer.viewfinder_border_length);
+    private boolean mRoundedCorner = false;
+    private int mCornerRadius = 0;
+    private boolean mSquaredFinder = false;
+    private float mBorderAlpha = 1.0f;
+    private int mViewFinderOffset = 0;
+    private float mAspectTolerance = 0.1f;
 
     public BarcodeScannerView(Context context) {
         super(context);
-        setupLayout();
+        init();
     }
 
     public BarcodeScannerView(Context context, AttributeSet attributeSet) {
         super(context, attributeSet);
-        setupLayout();
-    }
 
-    public final void setupLayout() {
-        mPreview = new CameraPreview(getContext());
-        RelativeLayout relativeLayout = new RelativeLayout(getContext());
-        relativeLayout.setGravity(Gravity.CENTER);
-        relativeLayout.setBackgroundColor(Color.BLACK);
-        relativeLayout.addView(mPreview);
-        addView(relativeLayout);
+        TypedArray a = context.getTheme().obtainStyledAttributes(
+                attributeSet,
+                R.styleable.BarcodeScannerView,
+                0, 0);
+
+        try {
+            setShouldScaleToFill(a.getBoolean(R.styleable.BarcodeScannerView_shouldScaleToFill, true));
+            mIsLaserEnabled = a.getBoolean(R.styleable.BarcodeScannerView_laserEnabled, mIsLaserEnabled);
+            mLaserColor = a.getColor(R.styleable.BarcodeScannerView_laserColor, mLaserColor);
+            mBorderColor = a.getColor(R.styleable.BarcodeScannerView_borderColor, mBorderColor);
+            mMaskColor = a.getColor(R.styleable.BarcodeScannerView_maskColor, mMaskColor);
+            mBorderWidth = a.getDimensionPixelSize(R.styleable.BarcodeScannerView_borderWidth, mBorderWidth);
+            mBorderLength = a.getDimensionPixelSize(R.styleable.BarcodeScannerView_borderLength, mBorderLength);
+
+            mRoundedCorner = a.getBoolean(R.styleable.BarcodeScannerView_roundedCorner, mRoundedCorner);
+            mCornerRadius = a.getDimensionPixelSize(R.styleable.BarcodeScannerView_cornerRadius, mCornerRadius);
+            mSquaredFinder = a.getBoolean(R.styleable.BarcodeScannerView_squaredFinder, mSquaredFinder);
+            mBorderAlpha = a.getFloat(R.styleable.BarcodeScannerView_borderAlpha, mBorderAlpha);
+            mViewFinderOffset = a.getDimensionPixelSize(R.styleable.BarcodeScannerView_finderOffset, mViewFinderOffset);
+        } finally {
+            a.recycle();
+        }
+
+        init();
+    }
 
+    private void init() {
         mViewFinderView = createViewFinderView(getContext());
+    }
+
+    public final void setupLayout(CameraWrapper cameraWrapper) {
+        removeAllViews();
+
+        mPreview = new CameraPreview(getContext(), cameraWrapper, this);
+        mPreview.setAspectTolerance(mAspectTolerance);
+        mPreview.setShouldScaleToFill(mShouldScaleToFill);
+        if (!mShouldScaleToFill) {
+            RelativeLayout relativeLayout = new RelativeLayout(getContext());
+            relativeLayout.setGravity(Gravity.CENTER);
+            relativeLayout.setBackgroundColor(Color.BLACK);
+            relativeLayout.addView(mPreview);
+            addView(relativeLayout);
+        } else {
+            addView(mPreview);
+        }
+
         if (mViewFinderView instanceof View) {
             addView((View) mViewFinderView);
         } else {
@@ -51,32 +106,117 @@ public final void setupLayout() {
      * @return {@link android.view.View} that implements {@link ViewFinderView}
      */
     protected IViewFinder createViewFinderView(Context context) {
-        return new ViewFinderView(context);
+        ViewFinderView viewFinderView = new ViewFinderView(context);
+        viewFinderView.setBorderColor(mBorderColor);
+        viewFinderView.setLaserColor(mLaserColor);
+        viewFinderView.setLaserEnabled(mIsLaserEnabled);
+        viewFinderView.setBorderStrokeWidth(mBorderWidth);
+        viewFinderView.setBorderLineLength(mBorderLength);
+        viewFinderView.setMaskColor(mMaskColor);
+
+        viewFinderView.setBorderCornerRounded(mRoundedCorner);
+        viewFinderView.setBorderCornerRadius(mCornerRadius);
+        viewFinderView.setSquareViewFinder(mSquaredFinder);
+        viewFinderView.setViewFinderOffset(mViewFinderOffset);
+        return viewFinderView;
+    }
+
+    public void setLaserColor(int laserColor) {
+        mLaserColor = laserColor;
+        mViewFinderView.setLaserColor(mLaserColor);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setMaskColor(int maskColor) {
+        mMaskColor = maskColor;
+        mViewFinderView.setMaskColor(mMaskColor);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setBorderColor(int borderColor) {
+        mBorderColor = borderColor;
+        mViewFinderView.setBorderColor(mBorderColor);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setBorderStrokeWidth(int borderStrokeWidth) {
+        mBorderWidth = borderStrokeWidth;
+        mViewFinderView.setBorderStrokeWidth(mBorderWidth);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setBorderLineLength(int borderLineLength) {
+        mBorderLength = borderLineLength;
+        mViewFinderView.setBorderLineLength(mBorderLength);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setLaserEnabled(boolean isLaserEnabled) {
+        mIsLaserEnabled = isLaserEnabled;
+        mViewFinderView.setLaserEnabled(mIsLaserEnabled);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setIsBorderCornerRounded(boolean isBorderCornerRounded) {
+        mRoundedCorner = isBorderCornerRounded;
+        mViewFinderView.setBorderCornerRounded(mRoundedCorner);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setBorderCornerRadius(int borderCornerRadius) {
+        mCornerRadius = borderCornerRadius;
+        mViewFinderView.setBorderCornerRadius(mCornerRadius);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setSquareViewFinder(boolean isSquareViewFinder) {
+        mSquaredFinder = isSquareViewFinder;
+        mViewFinderView.setSquareViewFinder(mSquaredFinder);
+        mViewFinderView.setupViewFinder();
+    }
+    public void setBorderAlpha(float borderAlpha) {
+        mBorderAlpha = borderAlpha;
+        mViewFinderView.setBorderAlpha(mBorderAlpha);
+        mViewFinderView.setupViewFinder();
     }
 
     public void startCamera(int cameraId) {
-        startCamera(CameraUtils.getCameraInstance(cameraId));
+        if(mCameraHandlerThread == null) {
+            mCameraHandlerThread = new CameraHandlerThread(this);
+        }
+        mCameraHandlerThread.startCamera(cameraId);
     }
 
-    public void startCamera(Camera camera) {
-        mCamera = camera;
-        if(mCamera != null) {
+    public void setupCameraPreview(CameraWrapper cameraWrapper) {
+        mCameraWrapper = cameraWrapper;
+        if(mCameraWrapper != null) {
+            setupLayout(mCameraWrapper);
             mViewFinderView.setupViewFinder();
-            mPreview.setCamera(mCamera, this);
-            mPreview.initCameraPreview();
+            if(mFlashState != null) {
+                setFlash(mFlashState);
+            }
+            setAutoFocus(mAutofocusState);
         }
     }
 
     public void startCamera() {
-        startCamera(CameraUtils.getCameraInstance());
+        startCamera(CameraUtils.getDefaultCameraId());
     }
 
     public void stopCamera() {
-        if(mCamera != null) {
+        if(mCameraWrapper != null) {
             mPreview.stopCameraPreview();
             mPreview.setCamera(null, null);
-            mCamera.release();
-            mCamera = null;
+            mCameraWrapper.mCamera.release();
+            mCameraWrapper = null;
+        }
+        if(mCameraHandlerThread != null) {
+            mCameraHandlerThread.quit();
+            mCameraHandlerThread = null;
+        }
+    }
+
+    public void stopCameraPreview() {
+        if(mPreview != null) {
+            mPreview.stopCameraPreview();
+        }
+    }
+
+    protected void resumeCameraPreview() {
+        if(mPreview != null) {
+            mPreview.showCameraPreview();
         }
     }
 
@@ -90,10 +230,16 @@ public synchronized Rect getFramingRectInPreview(int previewWidth, int previewHe
             }
 
             Rect rect = new Rect(framingRect);
-            rect.left = rect.left * previewWidth / viewFinderViewWidth;
-            rect.right = rect.right * previewWidth / viewFinderViewWidth;
-            rect.top = rect.top * previewHeight / viewFinderViewHeight;
-            rect.bottom = rect.bottom * previewHeight / viewFinderViewHeight;
+
+            if(previewWidth < viewFinderViewWidth) {
+                rect.left = rect.left * previewWidth / viewFinderViewWidth;
+                rect.right = rect.right * previewWidth / viewFinderViewWidth;
+            }
+
+            if(previewHeight < viewFinderViewHeight) {
+                rect.top = rect.top * previewHeight / viewFinderViewHeight;
+                rect.bottom = rect.bottom * previewHeight / viewFinderViewHeight;
+            }
 
             mFramingRectInPreview = rect;
         }
@@ -101,9 +247,10 @@ public synchronized Rect getFramingRectInPreview(int previewWidth, int previewHe
     }
 
     public void setFlash(boolean flag) {
-        if(mCamera != null && CameraUtils.isFlashSupported(mCamera)) {
+        mFlashState = flag;
+        if(mCameraWrapper != null && CameraUtils.isFlashSupported(mCameraWrapper.mCamera)) {
 
-            Camera.Parameters parameters = mCamera.getParameters();
+            Camera.Parameters parameters = mCameraWrapper.mCamera.getParameters();
             if(flag) {
                 if(parameters.getFlashMode().equals(Camera.Parameters.FLASH_MODE_TORCH)) {
                     return;
@@ -115,13 +262,13 @@ public void setFlash(boolean flag) {
                 }
                 parameters.setFlashMode(Camera.Parameters.FLASH_MODE_OFF);
             }
-            mCamera.setParameters(parameters);
+            mCameraWrapper.mCamera.setParameters(parameters);
         }
     }
 
     public boolean getFlash() {
-        if(mCamera != null && CameraUtils.isFlashSupported(mCamera)) {
-            Camera.Parameters parameters = mCamera.getParameters();
+        if(mCameraWrapper != null && CameraUtils.isFlashSupported(mCameraWrapper.mCamera)) {
+            Camera.Parameters parameters = mCameraWrapper.mCamera.getParameters();
             if(parameters.getFlashMode().equals(Camera.Parameters.FLASH_MODE_TORCH)) {
                 return true;
             } else {
@@ -132,20 +279,60 @@ public boolean getFlash() {
     }
 
     public void toggleFlash() {
-        if(mCamera != null && CameraUtils.isFlashSupported(mCamera)) {
-            Camera.Parameters parameters = mCamera.getParameters();
+        if(mCameraWrapper != null && CameraUtils.isFlashSupported(mCameraWrapper.mCamera)) {
+            Camera.Parameters parameters = mCameraWrapper.mCamera.getParameters();
             if(parameters.getFlashMode().equals(Camera.Parameters.FLASH_MODE_TORCH)) {
                 parameters.setFlashMode(Camera.Parameters.FLASH_MODE_OFF);
             } else {
                 parameters.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH);
             }
-            mCamera.setParameters(parameters);
+            mCameraWrapper.mCamera.setParameters(parameters);
         }
     }
 
     public void setAutoFocus(boolean state) {
+        mAutofocusState = state;
         if(mPreview != null) {
             mPreview.setAutoFocus(state);
         }
     }
+
+    public void setShouldScaleToFill(boolean shouldScaleToFill) {
+        mShouldScaleToFill = shouldScaleToFill;
+    }
+
+    public void setAspectTolerance(float aspectTolerance) {
+        mAspectTolerance = aspectTolerance;
+    }
+
+    public byte[] getRotatedData(byte[] data, Camera camera) {
+        Camera.Parameters parameters = camera.getParameters();
+        Camera.Size size = parameters.getPreviewSize();
+        int width = size.width;
+        int height = size.height;
+
+        int rotationCount = getRotationCount();
+
+        if(rotationCount == 1 || rotationCount == 3) {
+            for (int i = 0; i < rotationCount; i++) {
+                byte[] rotatedData = new byte[data.length];
+                for (int y = 0; y < height; y++) {
+                    for (int x = 0; x < width; x++)
+                        rotatedData[x * height + height - y - 1] = data[x + y * width];
+                }
+                data = rotatedData;
+                int tmp = width;
+                width = height;
+                height = tmp;
+            }
+        }
+
+        return data;
+    }
+
+    public int getRotationCount() {
+        int displayOrientation = mPreview.getDisplayOrientation();
+        return displayOrientation / 90;
+    }
 }
+
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.java
new file mode 100644
index 0000000..2d4bcee
--- /dev/null
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.java
@@ -0,0 +1,37 @@
+package me.dm7.barcodescanner.core;
+
+
+import android.hardware.Camera;
+import android.os.Handler;
+import android.os.HandlerThread;
+import android.os.Looper;
+
+// This code is mostly based on the top answer here: http://stackoverflow.com/questions/18149964/best-use-of-handlerthread-over-other-similar-classes
+public class CameraHandlerThread extends HandlerThread {
+    private static final String LOG_TAG = "CameraHandlerThread";
+
+    private BarcodeScannerView mScannerView;
+
+    public CameraHandlerThread(BarcodeScannerView scannerView) {
+        super("CameraHandlerThread");
+        mScannerView = scannerView;
+        start();
+    }
+
+    public void startCamera(final int cameraId) {
+        Handler localHandler = new Handler(getLooper());
+        localHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                final Camera camera = CameraUtils.getCameraInstance(cameraId);
+                Handler mainHandler = new Handler(Looper.getMainLooper());
+                mainHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        mScannerView.setupCameraPreview(CameraWrapper.getWrapper(camera, cameraId));
+                    }
+                });
+            }
+        });
+    }
+}
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
index 5f42fe0..b066e25 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
@@ -11,6 +11,7 @@
 import android.view.Surface;
 import android.view.SurfaceHolder;
 import android.view.SurfaceView;
+import android.view.View;
 import android.view.ViewGroup;
 import android.view.WindowManager;
 
@@ -19,37 +20,43 @@
 public class CameraPreview extends SurfaceView implements SurfaceHolder.Callback {
     private static final String TAG = "CameraPreview";
 
-    private Camera mCamera;
+    private CameraWrapper mCameraWrapper;
     private Handler mAutoFocusHandler;
     private boolean mPreviewing = true;
     private boolean mAutoFocus = true;
     private boolean mSurfaceCreated = false;
+    private boolean mShouldScaleToFill = true;
     private Camera.PreviewCallback mPreviewCallback;
+    private float mAspectTolerance = 0.1f;
 
-    public CameraPreview(Context context) {
+    public CameraPreview(Context context, CameraWrapper cameraWrapper, Camera.PreviewCallback previewCallback) {
         super(context);
+        init(cameraWrapper, previewCallback);
     }
 
-    public CameraPreview(Context context, AttributeSet attrs) {
+    public CameraPreview(Context context, AttributeSet attrs, CameraWrapper cameraWrapper, Camera.PreviewCallback previewCallback) {
         super(context, attrs);
+        init(cameraWrapper, previewCallback);
     }
 
-    public void setCamera(Camera camera, Camera.PreviewCallback previewCallback) {
-        mCamera = camera;
-        mPreviewCallback = previewCallback;
+    public void init(CameraWrapper cameraWrapper, Camera.PreviewCallback previewCallback) {
+        setCamera(cameraWrapper, previewCallback);
         mAutoFocusHandler = new Handler();
+        getHolder().addCallback(this);
+        getHolder().setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
     }
 
-    public void initCameraPreview() {
-        if(mCamera != null) {
-            getHolder().addCallback(this);
-            getHolder().setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
-            if(mPreviewing) {
-                requestLayout();
-            } else {
-                showCameraPreview();
-            }
-        }
+    public void setCamera(CameraWrapper cameraWrapper, Camera.PreviewCallback previewCallback) {
+        mCameraWrapper = cameraWrapper;
+        mPreviewCallback = previewCallback;
+    }
+
+    public void setShouldScaleToFill(boolean scaleToFill) {
+        mShouldScaleToFill = scaleToFill;
+    }
+
+    public void setAspectTolerance(float aspectTolerance) {
+        mAspectTolerance = aspectTolerance;
     }
 
     @Override
@@ -73,14 +80,15 @@ public void surfaceDestroyed(SurfaceHolder surfaceHolder) {
     }
 
     public void showCameraPreview() {
-        if(mCamera != null) {
+        if(mCameraWrapper != null) {
             try {
+                getHolder().addCallback(this);
                 mPreviewing = true;
                 setupCameraParameters();
-                mCamera.setPreviewDisplay(getHolder());
-                mCamera.setDisplayOrientation(getDisplayOrientation());
-                mCamera.setOneShotPreviewCallback(mPreviewCallback);
-                mCamera.startPreview();
+                mCameraWrapper.mCamera.setPreviewDisplay(getHolder());
+                mCameraWrapper.mCamera.setDisplayOrientation(getDisplayOrientation());
+                mCameraWrapper.mCamera.setOneShotPreviewCallback(mPreviewCallback);
+                mCameraWrapper.mCamera.startPreview();
                 if(mAutoFocus) {
                     if (mSurfaceCreated) { // check if surface created before using autofocus
                         safeAutoFocus();
@@ -96,7 +104,7 @@ public void showCameraPreview() {
 
     public void safeAutoFocus() {
         try {
-            mCamera.autoFocus(autoFocusCB);
+            mCameraWrapper.mCamera.autoFocus(autoFocusCB);
         } catch (RuntimeException re) {
             // Horrible hack to deal with autofocus errors on Sony devices
             // See https://github.com/dm77/barcodescanner/issues/7 for example
@@ -105,12 +113,13 @@ public void safeAutoFocus() {
     }
 
     public void stopCameraPreview() {
-        if(mCamera != null) {
+        if(mCameraWrapper != null) {
             try {
                 mPreviewing = false;
-                mCamera.cancelAutoFocus();
-                mCamera.setOneShotPreviewCallback(null);
-                mCamera.stopPreview();
+                getHolder().removeCallback(this);
+                mCameraWrapper.mCamera.cancelAutoFocus();
+                mCameraWrapper.mCamera.setOneShotPreviewCallback(null);
+                mCameraWrapper.mCamera.stopPreview();
             } catch(Exception e) {
                 Log.e(TAG, e.toString(), e);
             }
@@ -119,9 +128,9 @@ public void stopCameraPreview() {
 
     public void setupCameraParameters() {
         Camera.Size optimalSize = getOptimalPreviewSize();
-        Camera.Parameters parameters = mCamera.getParameters();
+        Camera.Parameters parameters = mCameraWrapper.mCamera.getParameters();
         parameters.setPreviewSize(optimalSize.width, optimalSize.height);
-        mCamera.setParameters(parameters);
+        mCameraWrapper.mCamera.setParameters(parameters);
         adjustViewSize(optimalSize);
     }
 
@@ -137,6 +146,7 @@ private void adjustViewSize(Camera.Size cameraSize) {
         }
     }
 
+    @SuppressWarnings("SuspiciousNameCombination")
     private Point convertSizeToLandscapeOrientation(Point size) {
         if (getDisplayOrientation() % 180 == 0) {
             return size;
@@ -145,21 +155,55 @@ private Point convertSizeToLandscapeOrientation(Point size) {
         }
     }
 
+    @SuppressWarnings("SuspiciousNameCombination")
     private void setViewSize(int width, int height) {
         ViewGroup.LayoutParams layoutParams = getLayoutParams();
+        int tmpWidth;
+        int tmpHeight;
         if (getDisplayOrientation() % 180 == 0) {
-            layoutParams.width = width;
-            layoutParams.height = height;
+            tmpWidth = width;
+            tmpHeight = height;
         } else {
-            layoutParams.width = height;
-            layoutParams.height = width;
+            tmpWidth = height;
+            tmpHeight = width;
+        }
+
+        if (mShouldScaleToFill) {
+            int parentWidth = ((View) getParent()).getWidth();
+            int parentHeight = ((View) getParent()).getHeight();
+            float ratioWidth = (float) parentWidth / (float) tmpWidth;
+            float ratioHeight = (float) parentHeight / (float) tmpHeight;
+
+            float compensation;
+
+            if (ratioWidth > ratioHeight) {
+                compensation = ratioWidth;
+            } else {
+                compensation = ratioHeight;
+            }
+
+            tmpWidth = Math.round(tmpWidth * compensation);
+            tmpHeight = Math.round(tmpHeight * compensation);
         }
+
+        layoutParams.width = tmpWidth;
+        layoutParams.height = tmpHeight;
         setLayoutParams(layoutParams);
     }
 
     public int getDisplayOrientation() {
+        if (mCameraWrapper == null) {
+            //If we don't have a camera set there is no orientation so return dummy value
+            return 0;
+        }
+
         Camera.CameraInfo info = new Camera.CameraInfo();
-        Camera.getCameraInfo(Camera.CameraInfo.CAMERA_FACING_BACK, info);
+        if(mCameraWrapper.mCameraId == -1) {
+            Camera.getCameraInfo(Camera.CameraInfo.CAMERA_FACING_BACK, info);
+        } else {
+            Camera.getCameraInfo(mCameraWrapper.mCameraId, info);
+        }
+
         WindowManager wm = (WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE);
         Display display = wm.getDefaultDisplay();
 
@@ -183,11 +227,11 @@ public int getDisplayOrientation() {
     }
 
     private Camera.Size getOptimalPreviewSize() {
-        if(mCamera == null) {
+        if(mCameraWrapper == null) {
             return null;
         }
 
-        List<Camera.Size> sizes = mCamera.getParameters().getSupportedPreviewSizes();
+        List<Camera.Size> sizes = mCameraWrapper.mCamera.getParameters().getSupportedPreviewSizes();
         int w = getWidth();
         int h = getHeight();
         if (DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
@@ -196,7 +240,6 @@ public int getDisplayOrientation() {
             w = portraitWidth;
         }
 
-        final double ASPECT_TOLERANCE = 0.1;
         double targetRatio = (double) w / h;
         if (sizes == null) return null;
 
@@ -208,7 +251,7 @@ public int getDisplayOrientation() {
         // Try to find an size match aspect ratio and size
         for (Camera.Size size : sizes) {
             double ratio = (double) size.width / size.height;
-            if (Math.abs(ratio - targetRatio) > ASPECT_TOLERANCE) continue;
+            if (Math.abs(ratio - targetRatio) > mAspectTolerance) continue;
             if (Math.abs(size.height - targetHeight) < minDiff) {
                 optimalSize = size;
                 minDiff = Math.abs(size.height - targetHeight);
@@ -229,7 +272,7 @@ public int getDisplayOrientation() {
     }
 
     public void setAutoFocus(boolean state) {
-        if(mCamera != null && mPreviewing) {
+        if(mCameraWrapper != null && mPreviewing) {
             if(state == mAutoFocus) {
                 return;
             }
@@ -243,14 +286,14 @@ public void setAutoFocus(boolean state) {
                 }
             } else {
                 Log.v(TAG, "Cancelling autofocus");
-                mCamera.cancelAutoFocus();
+                mCameraWrapper.mCamera.cancelAutoFocus();
             }
         }
     }
 
     private Runnable doAutoFocus = new Runnable() {
         public void run() {
-            if(mCamera != null && mPreviewing && mAutoFocus && mSurfaceCreated) {
+            if(mCameraWrapper != null && mPreviewing && mAutoFocus && mSurfaceCreated) {
                 safeAutoFocus();
             }
         }
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
index e3116a2..599bd5f 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
@@ -7,7 +7,22 @@
 public class CameraUtils {
     /** A safe way to get an instance of the Camera object. */
     public static Camera getCameraInstance() {
-        return getCameraInstance(-1);
+        return getCameraInstance(getDefaultCameraId());
+    }
+
+    /** Favor back-facing camera by default. If none exists, fallback to whatever camera is available **/
+    public static int getDefaultCameraId() {
+        int numberOfCameras = Camera.getNumberOfCameras();
+        Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
+        int defaultCameraId = -1;
+        for (int i = 0; i < numberOfCameras; i++) {
+            defaultCameraId = i;
+            Camera.getCameraInfo(i, cameraInfo);
+            if (cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_BACK) {
+                return i;
+            }
+        }
+        return defaultCameraId;
     }
 
     /** A safe way to get an instance of the Camera object. */
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.java
new file mode 100644
index 0000000..c030a01
--- /dev/null
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.java
@@ -0,0 +1,25 @@
+package me.dm7.barcodescanner.core;
+
+import android.hardware.Camera;
+import android.support.annotation.NonNull;
+
+public class CameraWrapper {
+    public final Camera mCamera;
+    public final int mCameraId;
+
+    private CameraWrapper(@NonNull Camera camera, int cameraId) {
+        if (camera == null) {
+            throw new NullPointerException("Camera cannot be null");
+        }
+        this.mCamera = camera;
+        this.mCameraId = cameraId;
+    }
+
+    public static CameraWrapper getWrapper(Camera camera, int cameraId) {
+        if (camera == null) {
+            return null;
+        } else {
+            return new CameraWrapper(camera, cameraId);
+        }
+    }
+}
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/IViewFinder.java b/core/src/main/java/me/dm7/barcodescanner/core/IViewFinder.java
index 78c3ee4..a6caaa4 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/IViewFinder.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/IViewFinder.java
@@ -3,6 +3,19 @@
 import android.graphics.Rect;
 
 public interface IViewFinder {
+
+    void setLaserColor(int laserColor);
+    void setMaskColor(int maskColor);
+    void setBorderColor(int borderColor);
+    void setBorderStrokeWidth(int borderStrokeWidth);
+    void setBorderLineLength(int borderLineLength);
+    void setLaserEnabled(boolean isLaserEnabled);
+
+    void setBorderCornerRounded(boolean isBorderCornersRounded);
+    void setBorderAlpha(float alpha);
+    void setBorderCornerRadius(int borderCornersRadius);
+    void setViewFinderOffset(int offset);
+    void setSquareViewFinder(boolean isSquareViewFinder);
     /**
      * Method that executes when Camera preview is starting.
      * It is recommended to update framing rect here and invalidate view after that. <br/>
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java b/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java
index 743ecbc..307a8a4 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java
@@ -3,7 +3,9 @@
 import android.content.Context;
 import android.content.res.Configuration;
 import android.graphics.Canvas;
+import android.graphics.CornerPathEffect;
 import android.graphics.Paint;
+import android.graphics.Path;
 import android.graphics.Point;
 import android.graphics.Rect;
 import android.util.AttributeSet;
@@ -14,18 +16,14 @@
 
     private Rect mFramingRect;
 
-    private static final int MIN_FRAME_WIDTH = 240;
-    private static final int MIN_FRAME_HEIGHT = 240;
+    private static final float PORTRAIT_WIDTH_RATIO = 6f/8;
+    private static final float PORTRAIT_WIDTH_HEIGHT_RATIO = 0.75f;
 
-    private static final float LANDSCAPE_WIDTH_RATIO = 5f/8;
     private static final float LANDSCAPE_HEIGHT_RATIO = 5f/8;
-    private static final int LANDSCAPE_MAX_FRAME_WIDTH = (int) (1920 * LANDSCAPE_WIDTH_RATIO); // = 5/8 * 1920
-    private static final int LANDSCAPE_MAX_FRAME_HEIGHT = (int) (1080 * LANDSCAPE_HEIGHT_RATIO); // = 5/8 * 1080
+    private static final float LANDSCAPE_WIDTH_HEIGHT_RATIO = 1.4f;
+    private static final int MIN_DIMENSION_DIFF = 50;
 
-    private static final float PORTRAIT_WIDTH_RATIO = 7f/8;
-    private static final float PORTRAIT_HEIGHT_RATIO = 3f/8;
-    private static final int PORTRAIT_MAX_FRAME_WIDTH = (int) (1080 * PORTRAIT_WIDTH_RATIO); // = 7/8 * 1080
-    private static final int PORTRAIT_MAX_FRAME_HEIGHT = (int) (1920 * PORTRAIT_HEIGHT_RATIO); // = 3/8 * 1920
+    private static final float DEFAULT_SQUARE_DIMENSION_RATIO = 5f / 8;
 
     private static final int[] SCANNER_ALPHA = {0, 64, 128, 192, 255, 192, 128, 64};
     private int scannerAlpha;
@@ -42,14 +40,18 @@
     protected Paint mFinderMaskPaint;
     protected Paint mBorderPaint;
     protected int mBorderLineLength;
+    protected boolean mSquareViewFinder;
+    private boolean mIsLaserEnabled;
+    private float mBordersAlpha;
+    private int mViewFinderOffset = 0;
 
     public ViewFinderView(Context context) {
         super(context);
         init();
     }
 
-    public ViewFinderView(Context context, AttributeSet attrs) {
-        super(context, attrs);
+    public ViewFinderView(Context context, AttributeSet attributeSet) {
+        super(context, attributeSet);
         init();
     }
 
@@ -68,26 +70,71 @@ private void init() {
         mBorderPaint.setColor(mDefaultBorderColor);
         mBorderPaint.setStyle(Paint.Style.STROKE);
         mBorderPaint.setStrokeWidth(mDefaultBorderStrokeWidth);
+        mBorderPaint.setAntiAlias(true);
 
         mBorderLineLength = mDefaultBorderLineLength;
     }
 
+    @Override
     public void setLaserColor(int laserColor) {
         mLaserPaint.setColor(laserColor);
     }
+
+    @Override
     public void setMaskColor(int maskColor) {
         mFinderMaskPaint.setColor(maskColor);
     }
+
+    @Override
     public void setBorderColor(int borderColor) {
         mBorderPaint.setColor(borderColor);
     }
+
+    @Override
     public void setBorderStrokeWidth(int borderStrokeWidth) {
         mBorderPaint.setStrokeWidth(borderStrokeWidth);
     }
+
+    @Override
     public void setBorderLineLength(int borderLineLength) {
         mBorderLineLength = borderLineLength;
     }
 
+    @Override
+    public void setLaserEnabled(boolean isLaserEnabled) { mIsLaserEnabled = isLaserEnabled; }
+
+    @Override
+    public void setBorderCornerRounded(boolean isBorderCornersRounded) {
+        if (isBorderCornersRounded) {
+            mBorderPaint.setStrokeJoin(Paint.Join.ROUND);
+        } else {
+            mBorderPaint.setStrokeJoin(Paint.Join.BEVEL);
+        }
+    }
+
+    @Override
+    public void setBorderAlpha(float alpha) {
+        int colorAlpha = (int) (255 * alpha);
+        mBordersAlpha = alpha;
+        mBorderPaint.setAlpha(colorAlpha);
+    }
+
+    @Override
+    public void setBorderCornerRadius(int borderCornersRadius) {
+        mBorderPaint.setPathEffect(new CornerPathEffect(borderCornersRadius));
+    }
+
+    @Override
+    public void setViewFinderOffset(int offset) {
+        mViewFinderOffset = offset;
+    }
+
+    // TODO: Need a better way to configure this. Revisit when working on 2.0
+    @Override
+    public void setSquareViewFinder(boolean set) {
+        mSquareViewFinder = set;
+    }
+
     public void setupViewFinder() {
         updateFramingRect();
         invalidate();
@@ -99,51 +146,72 @@ public Rect getFramingRect() {
 
     @Override
     public void onDraw(Canvas canvas) {
-        if(mFramingRect == null) {
+        if(getFramingRect() == null) {
             return;
         }
 
         drawViewFinderMask(canvas);
         drawViewFinderBorder(canvas);
-        drawLaser(canvas);
+
+        if (mIsLaserEnabled) {
+            drawLaser(canvas);
+        }
     }
 
     public void drawViewFinderMask(Canvas canvas) {
         int width = canvas.getWidth();
         int height = canvas.getHeight();
-
-        canvas.drawRect(0, 0, width, mFramingRect.top, mFinderMaskPaint);
-        canvas.drawRect(0, mFramingRect.top, mFramingRect.left, mFramingRect.bottom + 1, mFinderMaskPaint);
-        canvas.drawRect(mFramingRect.right + 1, mFramingRect.top, width, mFramingRect.bottom + 1, mFinderMaskPaint);
-        canvas.drawRect(0, mFramingRect.bottom + 1, width, height, mFinderMaskPaint);
+        Rect framingRect = getFramingRect();
+        
+        canvas.drawRect(0, 0, width, framingRect.top, mFinderMaskPaint);
+        canvas.drawRect(0, framingRect.top, framingRect.left, framingRect.bottom + 1, mFinderMaskPaint);
+        canvas.drawRect(framingRect.right + 1, framingRect.top, width, framingRect.bottom + 1, mFinderMaskPaint);
+        canvas.drawRect(0, framingRect.bottom + 1, width, height, mFinderMaskPaint);
     }
 
     public void drawViewFinderBorder(Canvas canvas) {
-        canvas.drawLine(mFramingRect.left - 1, mFramingRect.top - 1, mFramingRect.left - 1, mFramingRect.top - 1 + mBorderLineLength, mBorderPaint);
-        canvas.drawLine(mFramingRect.left - 1, mFramingRect.top - 1, mFramingRect.left - 1 + mBorderLineLength, mFramingRect.top - 1, mBorderPaint);
-
-        canvas.drawLine(mFramingRect.left - 1, mFramingRect.bottom + 1, mFramingRect.left - 1, mFramingRect.bottom + 1 - mBorderLineLength, mBorderPaint);
-        canvas.drawLine(mFramingRect.left - 1, mFramingRect.bottom + 1, mFramingRect.left - 1 + mBorderLineLength, mFramingRect.bottom + 1, mBorderPaint);
-
-        canvas.drawLine(mFramingRect.right + 1, mFramingRect.top - 1, mFramingRect.right + 1, mFramingRect.top - 1 + mBorderLineLength, mBorderPaint);
-        canvas.drawLine(mFramingRect.right + 1, mFramingRect.top - 1, mFramingRect.right + 1 - mBorderLineLength, mFramingRect.top - 1, mBorderPaint);
-
-        canvas.drawLine(mFramingRect.right + 1, mFramingRect.bottom + 1, mFramingRect.right + 1, mFramingRect.bottom + 1 - mBorderLineLength, mBorderPaint);
-        canvas.drawLine(mFramingRect.right + 1, mFramingRect.bottom + 1, mFramingRect.right + 1 - mBorderLineLength, mFramingRect.bottom + 1, mBorderPaint);
+        Rect framingRect = getFramingRect();
+
+        // Top-left corner
+        Path path = new Path();
+        path.moveTo(framingRect.left, framingRect.top + mBorderLineLength);
+        path.lineTo(framingRect.left, framingRect.top);
+        path.lineTo(framingRect.left + mBorderLineLength, framingRect.top);
+        canvas.drawPath(path, mBorderPaint);
+
+        // Top-right corner
+        path.moveTo(framingRect.right, framingRect.top + mBorderLineLength);
+        path.lineTo(framingRect.right, framingRect.top);
+        path.lineTo(framingRect.right - mBorderLineLength, framingRect.top);
+        canvas.drawPath(path, mBorderPaint);
+
+        // Bottom-right corner
+        path.moveTo(framingRect.right, framingRect.bottom - mBorderLineLength);
+        path.lineTo(framingRect.right, framingRect.bottom);
+        path.lineTo(framingRect.right - mBorderLineLength, framingRect.bottom);
+        canvas.drawPath(path, mBorderPaint);
+
+        // Bottom-left corner
+        path.moveTo(framingRect.left, framingRect.bottom - mBorderLineLength);
+        path.lineTo(framingRect.left, framingRect.bottom);
+        path.lineTo(framingRect.left + mBorderLineLength, framingRect.bottom);
+        canvas.drawPath(path, mBorderPaint);
     }
 
     public void drawLaser(Canvas canvas) {
+        Rect framingRect = getFramingRect();
+        
         // Draw a red "laser scanner" line through the middle to show decoding is active
         mLaserPaint.setAlpha(SCANNER_ALPHA[scannerAlpha]);
         scannerAlpha = (scannerAlpha + 1) % SCANNER_ALPHA.length;
-        int middle = mFramingRect.height() / 2 + mFramingRect.top;
-        canvas.drawRect(mFramingRect.left + 2, middle - 1, mFramingRect.right - 1, middle + 2, mLaserPaint);
+        int middle = framingRect.height() / 2 + framingRect.top;
+        canvas.drawRect(framingRect.left + 2, middle - 1, framingRect.right - 1, middle + 2, mLaserPaint);
 
         postInvalidateDelayed(ANIMATION_DELAY,
-                mFramingRect.left - POINT_SIZE,
-                mFramingRect.top - POINT_SIZE,
-                mFramingRect.right + POINT_SIZE,
-                mFramingRect.bottom + POINT_SIZE);
+                framingRect.left - POINT_SIZE,
+                framingRect.top - POINT_SIZE,
+                framingRect.right + POINT_SIZE,
+                framingRect.bottom + POINT_SIZE);
     }
 
     @Override
@@ -157,27 +225,35 @@ public synchronized void updateFramingRect() {
         int height;
         int orientation = DisplayUtils.getScreenOrientation(getContext());
 
-        if(orientation != Configuration.ORIENTATION_PORTRAIT) {
-            width = findDesiredDimensionInRange(LANDSCAPE_WIDTH_RATIO, viewResolution.x, MIN_FRAME_WIDTH, LANDSCAPE_MAX_FRAME_WIDTH);
-            height = findDesiredDimensionInRange(LANDSCAPE_HEIGHT_RATIO, viewResolution.y, MIN_FRAME_HEIGHT, LANDSCAPE_MAX_FRAME_HEIGHT);
+        if(mSquareViewFinder) {
+            if(orientation != Configuration.ORIENTATION_PORTRAIT) {
+                height = (int) (getHeight() * DEFAULT_SQUARE_DIMENSION_RATIO);
+                width = height;
+            } else {
+                width = (int) (getWidth() * DEFAULT_SQUARE_DIMENSION_RATIO);
+                height = width;
+            }
         } else {
-            width = findDesiredDimensionInRange(PORTRAIT_WIDTH_RATIO, viewResolution.x, MIN_FRAME_WIDTH, PORTRAIT_MAX_FRAME_WIDTH);
-            height = findDesiredDimensionInRange(PORTRAIT_HEIGHT_RATIO, viewResolution.y, MIN_FRAME_HEIGHT, PORTRAIT_MAX_FRAME_HEIGHT);
+            if(orientation != Configuration.ORIENTATION_PORTRAIT) {
+                height = (int) (getHeight() * LANDSCAPE_HEIGHT_RATIO);
+                width = (int) (LANDSCAPE_WIDTH_HEIGHT_RATIO * height);
+            } else {
+                width = (int) (getWidth() * PORTRAIT_WIDTH_RATIO);
+                height = (int) (PORTRAIT_WIDTH_HEIGHT_RATIO * width);
+            }
         }
 
-        int leftOffset = (viewResolution.x - width) / 2;
-        int topOffset = (viewResolution.y - height) / 2;
-        mFramingRect = new Rect(leftOffset, topOffset, leftOffset + width, topOffset + height);
-    }
-
-    private static int findDesiredDimensionInRange(float ratio, int resolution, int hardMin, int hardMax) {
-        int dim = (int) (ratio * resolution);
-        if (dim < hardMin) {
-            return hardMin;
+        if(width > getWidth()) {
+            width = getWidth() - MIN_DIMENSION_DIFF;
         }
-        if (dim > hardMax) {
-            return hardMax;
+
+        if(height > getHeight()) {
+            height = getHeight() - MIN_DIMENSION_DIFF;
         }
-        return dim;
+
+        int leftOffset = (viewResolution.x - width) / 2;
+        int topOffset = (viewResolution.y - height) / 2;
+        mFramingRect = new Rect(leftOffset + mViewFinderOffset, topOffset + mViewFinderOffset, leftOffset + width - mViewFinderOffset, topOffset + height - mViewFinderOffset);
     }
 }
+
diff --git a/core/src/main/res/layout/merge_camera_preview_view_finder.xml b/core/src/main/res/layout/merge_camera_preview_view_finder.xml
deleted file mode 100644
index 8584c43..0000000
--- a/core/src/main/res/layout/merge_camera_preview_view_finder.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<merge xmlns:android="http://schemas.android.com/apk/res/android">
-    <me.dm7.barcodescannerview.CameraPreview
-         android:id="@+id/camera_preview"
-         android:layout_width="fill_parent"
-         android:layout_height="fill_parent"/>
-    <me.dm7.barcodescannerview.ViewFinderView
-        android:id="@+id/view_finder_view"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent" />
-</merge>
diff --git a/core/src/main/res/values/attrs.xml b/core/src/main/res/values/attrs.xml
new file mode 100644
index 0000000..8e7485e
--- /dev/null
+++ b/core/src/main/res/values/attrs.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="BarcodeScannerView">
+        <attr name="shouldScaleToFill" format="boolean" />
+        <attr name="laserEnabled" format="boolean" />
+        <attr name="laserColor" format="color" />
+        <attr name="borderColor" format="color" />
+        <attr name="maskColor" format="color" />
+        <attr name="borderWidth" format="dimension" />
+        <attr name="borderLength" format="dimension" />
+        <attr name="roundedCorner" format="boolean" />
+        <attr name="cornerRadius" format="dimension" />
+        <attr name="squaredFinder" format="boolean" />
+        <attr name="borderAlpha" format="float" />
+        <attr name="finderOffset" format="dimension" />
+    </declare-styleable>
+</resources>
diff --git a/dependencies.gradle b/dependencies.gradle
new file mode 100644
index 0000000..4d12d78
--- /dev/null
+++ b/dependencies.gradle
@@ -0,0 +1,19 @@
+ext.versions = [
+        compile_sdk   : 28,
+        min_sdk       : 14,
+        target_sdk    : 28,
+        build_tools   : "28.0.3",
+        support_lib   : "28.0.0",
+        zxing         : "3.3.3",
+        barcodescanner: "1.9.13"
+]
+
+ext.libraries = [
+        support_v4          : "com.android.support:support-v4:$versions.support_lib",
+        appcompat_v7        : "com.android.support:appcompat-v7:$versions.support_lib",
+        design_support      : "com.android.support:design:$versions.support_lib",
+        zxing_core          : "com.google.zxing:core:$versions.zxing",
+        barcodescanner_core : "me.dm7.barcodescanner:core:$versions.barcodescanner",
+        barcodescanner_zbar : "me.dm7.barcodescanner:zbar:$versions.barcodescanner",
+        barcodescanner_zxing: "me.dm7.barcodescanner:zxing:$versions.barcodescanner"
+]
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 0087cd3..62bf09c 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 0573dea..fe39a2c 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Dec 17 06:07:23 MST 2014
+#Sat Feb 16 12:53:17 MST 2019
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
diff --git a/gradlew b/gradlew
index 91a7e26..4453cce 100755
--- a/gradlew
+++ b/gradlew
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/usr/bin/env sh
 
 ##############################################################################
 ##
@@ -6,12 +6,30 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
@@ -30,6 +48,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,31 +59,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
-APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -90,7 +89,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -114,6 +113,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
@@ -154,11 +154,19 @@ if $cygwin ; then
     esac
 fi
 
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
+# Escape application args
+save ( ) {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
 }
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
 
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
+exec "$JAVACMD" "$@"
diff --git a/gradlew.bat b/gradlew.bat
index 8a0b282..e95643d 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,90 +1,84 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windows variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/screenshots/landscape.png b/screenshots/landscape.png
deleted file mode 100644
index 5ed6f4a..0000000
Binary files a/screenshots/landscape.png and /dev/null differ
diff --git a/screenshots/landscape_small.png b/screenshots/landscape_small.png
deleted file mode 100644
index 7b52ee5..0000000
Binary files a/screenshots/landscape_small.png and /dev/null differ
diff --git a/screenshots/main_activity.png b/screenshots/main_activity.png
new file mode 100644
index 0000000..433380f
Binary files /dev/null and b/screenshots/main_activity.png differ
diff --git a/screenshots/portrait.png b/screenshots/portrait.png
deleted file mode 100644
index 3406dbb..0000000
Binary files a/screenshots/portrait.png and /dev/null differ
diff --git a/screenshots/portrait_small.png b/screenshots/portrait_small.png
deleted file mode 100644
index 73e311e..0000000
Binary files a/screenshots/portrait_small.png and /dev/null differ
diff --git a/screenshots/scan_results.png b/screenshots/scan_results.png
new file mode 100644
index 0000000..b451e1a
Binary files /dev/null and b/screenshots/scan_results.png differ
diff --git a/screenshots/scanner.png b/screenshots/scanner.png
new file mode 100644
index 0000000..e1b8810
Binary files /dev/null and b/screenshots/scanner.png differ
diff --git a/settings.gradle b/settings.gradle
index a70b2f9..8b363d8 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1 +1 @@
-include "core", "zxing:zxing", "zxing:sample", "zbar:zbar", "zbar:sample"
\ No newline at end of file
+include "core", "zxing", "zxing-sample", "zbar", "zbar-sample"
diff --git a/zbar-sample/build.gradle b/zbar-sample/build.gradle
new file mode 100644
index 0000000..00fb0b3
--- /dev/null
+++ b/zbar-sample/build.gradle
@@ -0,0 +1,15 @@
+apply plugin: 'com.android.application'
+
+dependencies {
+//    implementation project(":zbar")
+    implementation libraries.barcodescanner_zbar
+    implementation libraries.support_v4
+    implementation libraries.appcompat_v7
+    implementation libraries.design_support
+}
+
+android {
+    defaultConfig {
+        applicationId "${project.group}.zbar.sample"
+    }
+}
diff --git a/zbar/sample/src/main/AndroidManifest.xml b/zbar-sample/src/main/AndroidManifest.xml
similarity index 93%
rename from zbar/sample/src/main/AndroidManifest.xml
rename to zbar-sample/src/main/AndroidManifest.xml
index 84bb944..1b5a9c0 100644
--- a/zbar/sample/src/main/AndroidManifest.xml
+++ b/zbar-sample/src/main/AndroidManifest.xml
@@ -15,7 +15,7 @@
             </intent-filter>
         </activity>
 
-        <activity android:name=".ScannerActivity"
+        <activity android:name=".FullScannerActivity"
                   android:theme="@style/AppOverlayTheme"
                   android:uiOptions="splitActionBarWhenNarrow"
                   android:label="@string/scanner_activity">
@@ -23,7 +23,7 @@
                        android:value="splitActionBarWhenNarrow" />
         </activity>
 
-        <activity android:name=".ScannerFragmentActivity"
+        <activity android:name=".FullScannerFragmentActivity"
                   android:theme="@style/AppOverlayTheme"
                   android:uiOptions="splitActionBarWhenNarrow"
                   android:label="@string/scanner_fragment_activity">
diff --git a/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/BaseScannerActivity.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/BaseScannerActivity.java
new file mode 100644
index 0000000..0655793
--- /dev/null
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/BaseScannerActivity.java
@@ -0,0 +1,28 @@
+package me.dm7.barcodescanner.zbar.sample;
+
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.MenuItem;
+
+public class BaseScannerActivity extends AppCompatActivity {
+    public void setupToolbar() {
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        final ActionBar ab = getSupportActionBar();
+        if(ab != null) {
+            ab.setDisplayHomeAsUpEnabled(true);
+        }
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            // Respond to the action bar's Up/Home button
+            case android.R.id.home:
+                finish();
+                return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+}
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/CameraSelectorDialogFragment.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/CameraSelectorDialogFragment.java
similarity index 100%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/CameraSelectorDialogFragment.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/CameraSelectorDialogFragment.java
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FormatSelectorDialogFragment.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FormatSelectorDialogFragment.java
similarity index 100%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FormatSelectorDialogFragment.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FormatSelectorDialogFragment.java
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerActivity.java
similarity index 93%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerActivity.java
index ef683a2..a3db043 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerActivity.java
@@ -7,9 +7,10 @@
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.view.MenuItemCompat;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.view.Menu;
 import android.view.MenuItem;
+import android.view.ViewGroup;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -18,7 +19,7 @@
 import me.dm7.barcodescanner.zbar.Result;
 import me.dm7.barcodescanner.zbar.ZBarScannerView;
 
-public class ScannerActivity extends ActionBarActivity implements MessageDialogFragment.MessageDialogListener,
+public class FullScannerActivity extends BaseScannerActivity implements MessageDialogFragment.MessageDialogListener,
         ZBarScannerView.ResultHandler, FormatSelectorDialogFragment.FormatSelectorDialogListener,
         CameraSelectorDialogFragment.CameraSelectorDialogListener {
     private static final String FLASH_STATE = "FLASH_STATE";
@@ -46,9 +47,12 @@ public void onCreate(Bundle state) {
             mCameraId = -1;
         }
 
+        setContentView(R.layout.activity_full_scanner);
+        setupToolbar();
+        ViewGroup contentFrame = (ViewGroup) findViewById(R.id.content_frame);
         mScannerView = new ZBarScannerView(this);
         setupFormats();
-        setContentView(mScannerView);
+        contentFrame.addView(mScannerView);
     }
 
     @Override
@@ -78,7 +82,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
 
         if(mAutoFocus) {
@@ -86,13 +90,13 @@ public boolean onCreateOptionsMenu(Menu menu) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_formats, 0, R.string.formats);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_camera_selector, 0, R.string.select_camera);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         return super.onCreateOptionsMenu(menu);
     }
@@ -167,9 +171,7 @@ public void closeDialog(String dialogName) {
     @Override
     public void onDialogPositiveClick(DialogFragment dialog) {
         // Resume the camera
-        mScannerView.startCamera(mCameraId);
-        mScannerView.setFlash(mFlash);
-        mScannerView.setAutoFocus(mAutoFocus);
+        mScannerView.resumeCameraPreview(this);
     }
 
     @Override
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragment.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragment.java
similarity index 96%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragment.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragment.java
index fe5ebfe..f64f8f6 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragment.java
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragment.java
@@ -22,7 +22,7 @@
 import me.dm7.barcodescanner.zbar.Result;
 import me.dm7.barcodescanner.zbar.ZBarScannerView;
 
-public class ScannerFragment extends Fragment implements MessageDialogFragment.MessageDialogListener,
+public class FullScannerFragment extends Fragment implements MessageDialogFragment.MessageDialogListener,
         ZBarScannerView.ResultHandler, FormatSelectorDialogFragment.FormatSelectorDialogListener,
         CameraSelectorDialogFragment.CameraSelectorDialogListener {
     private static final String FLASH_STATE = "FLASH_STATE";
@@ -69,7 +69,7 @@ public void onCreateOptionsMenu (Menu menu, MenuInflater inflater) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
 
         if(mAutoFocus) {
@@ -77,13 +77,13 @@ public void onCreateOptionsMenu (Menu menu, MenuInflater inflater) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_formats, 0, R.string.formats);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_camera_selector, 0, R.string.select_camera);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
     }
 
     @Override
@@ -174,9 +174,7 @@ public void closeDialog(String dialogName) {
     @Override
     public void onDialogPositiveClick(DialogFragment dialog) {
         // Resume the camera
-        mScannerView.startCamera(mCameraId);
-        mScannerView.setFlash(mFlash);
-        mScannerView.setAutoFocus(mAutoFocus);
+        mScannerView.resumeCameraPreview(this);
     }
 
     @Override
diff --git a/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragmentActivity.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragmentActivity.java
new file mode 100644
index 0000000..352d722
--- /dev/null
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragmentActivity.java
@@ -0,0 +1,12 @@
+package me.dm7.barcodescanner.zbar.sample;
+
+import android.os.Bundle;
+
+public class FullScannerFragmentActivity extends BaseScannerActivity {
+    @Override
+    public void onCreate(Bundle state) {
+        super.onCreate(state);
+        setContentView(R.layout.activity_full_scanner_fragment);
+        setupToolbar();
+    }
+}
\ No newline at end of file
diff --git a/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MainActivity.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MainActivity.java
new file mode 100644
index 0000000..a8cb01a
--- /dev/null
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MainActivity.java
@@ -0,0 +1,73 @@
+package me.dm7.barcodescanner.zbar.sample;
+
+import android.Manifest;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.widget.Toast;
+
+public class MainActivity extends AppCompatActivity {
+    private static final int ZBAR_CAMERA_PERMISSION = 1;
+    private Class<?> mClss;
+
+    @Override
+    public void onCreate(Bundle state) {
+        super.onCreate(state);
+        setContentView(R.layout.activity_main);
+        setupToolbar();
+    }
+
+    public void setupToolbar() {
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+    }
+
+    public void launchSimpleActivity(View v) {
+        launchActivity(SimpleScannerActivity.class);
+    }
+
+    public void launchSimpleFragmentActivity(View v) {
+        launchActivity(SimpleScannerFragmentActivity.class);
+    }
+
+    public void launchFullActivity(View v) {
+        launchActivity(FullScannerActivity.class);
+    }
+
+    public void launchFullFragmentActivity(View v) {
+        launchActivity(FullScannerFragmentActivity.class);
+    }
+
+    public void launchActivity(Class<?> clss) {
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
+                != PackageManager.PERMISSION_GRANTED) {
+            mClss = clss;
+            ActivityCompat.requestPermissions(this,
+                    new String[]{Manifest.permission.CAMERA}, ZBAR_CAMERA_PERMISSION);
+        } else {
+            Intent intent = new Intent(this, clss);
+            startActivity(intent);
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode,  String permissions[], int[] grantResults) {
+        switch (requestCode) {
+            case ZBAR_CAMERA_PERMISSION:
+                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                    if(mClss != null) {
+                        Intent intent = new Intent(this, mClss);
+                        startActivity(intent);
+                    }
+                } else {
+                    Toast.makeText(this, "Please grant camera permission to use the QR Scanner", Toast.LENGTH_SHORT).show();
+                }
+                return;
+        }
+    }
+}
\ No newline at end of file
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MessageDialogFragment.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MessageDialogFragment.java
similarity index 100%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MessageDialogFragment.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MessageDialogFragment.java
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
similarity index 50%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
index 1a2be6e..fb40235 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerActivity.java
@@ -1,20 +1,24 @@
 package me.dm7.barcodescanner.zbar.sample;
 
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.os.Handler;
+import android.view.ViewGroup;
 import android.widget.Toast;
 
 import me.dm7.barcodescanner.zbar.Result;
 import me.dm7.barcodescanner.zbar.ZBarScannerView;
 
-public class SimpleScannerActivity extends ActionBarActivity implements ZBarScannerView.ResultHandler {
+public class SimpleScannerActivity extends BaseScannerActivity implements ZBarScannerView.ResultHandler {
     private ZBarScannerView mScannerView;
 
     @Override
     public void onCreate(Bundle state) {
         super.onCreate(state);
+        setContentView(R.layout.activity_simple_scanner);
+        setupToolbar();
+        ViewGroup contentFrame = (ViewGroup) findViewById(R.id.content_frame);
         mScannerView = new ZBarScannerView(this);
-        setContentView(mScannerView);
+        contentFrame.addView(mScannerView);
     }
 
     @Override
@@ -34,6 +38,16 @@ public void onPause() {
     public void handleResult(Result rawResult) {
         Toast.makeText(this, "Contents = " + rawResult.getContents() +
                 ", Format = " + rawResult.getBarcodeFormat().getName(), Toast.LENGTH_SHORT).show();
-        mScannerView.startCamera();
+        // Note:
+        // * Wait 2 seconds to resume the preview.
+        // * On older devices continuously stopping and resuming camera preview can result in freezing the app.
+        // * I don't know why this is the case but I don't have the time to figure out.
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                mScannerView.resumeCameraPreview(SimpleScannerActivity.this);
+            }
+        }, 2000);
     }
 }
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
similarity index 68%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
index 5647ab5..82a10b8 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragment.java
@@ -1,6 +1,7 @@
 package me.dm7.barcodescanner.zbar.sample;
 
 import android.os.Bundle;
+import android.os.Handler;
 import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -30,7 +31,17 @@ public void onResume() {
     public void handleResult(Result rawResult) {
         Toast.makeText(getActivity(), "Contents = " + rawResult.getContents() +
                 ", Format = " + rawResult.getBarcodeFormat().getName(), Toast.LENGTH_SHORT).show();
-        mScannerView.startCamera();
+        // Note:
+        // * Wait 2 seconds to resume the preview.
+        // * On older devices continuously stopping and resuming camera preview can result in freezing the app.
+        // * I don't know why this is the case but I don't have the time to figure out.
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                mScannerView.resumeCameraPreview(SimpleScannerFragment.this);
+            }
+        }, 2000);
     }
 
     @Override
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragmentActivity.java b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragmentActivity.java
similarity index 65%
rename from zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragmentActivity.java
rename to zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragmentActivity.java
index 7f3b553..e737c64 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragmentActivity.java
+++ b/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/SimpleScannerFragmentActivity.java
@@ -1,12 +1,12 @@
 package me.dm7.barcodescanner.zbar.sample;
 
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
 
-public class SimpleScannerFragmentActivity extends ActionBarActivity {
+public class SimpleScannerFragmentActivity extends BaseScannerActivity {
     @Override
     public void onCreate(Bundle state) {
         super.onCreate(state);
         setContentView(R.layout.activity_simple_scanner_fragment);
+        setupToolbar();
     }
 }
\ No newline at end of file
diff --git a/zbar/sample/src/main/res/drawable-hdpi/ic_launcher.png b/zbar-sample/src/main/res/drawable-hdpi/ic_launcher.png
similarity index 100%
rename from zbar/sample/src/main/res/drawable-hdpi/ic_launcher.png
rename to zbar-sample/src/main/res/drawable-hdpi/ic_launcher.png
diff --git a/zbar/sample/src/main/res/drawable-mdpi/ic_launcher.png b/zbar-sample/src/main/res/drawable-mdpi/ic_launcher.png
similarity index 100%
rename from zbar/sample/src/main/res/drawable-mdpi/ic_launcher.png
rename to zbar-sample/src/main/res/drawable-mdpi/ic_launcher.png
diff --git a/zbar/sample/src/main/res/drawable-xhdpi/ic_launcher.png b/zbar-sample/src/main/res/drawable-xhdpi/ic_launcher.png
similarity index 100%
rename from zbar/sample/src/main/res/drawable-xhdpi/ic_launcher.png
rename to zbar-sample/src/main/res/drawable-xhdpi/ic_launcher.png
diff --git a/zbar/sample/src/main/res/drawable-xxhdpi/ic_launcher.png b/zbar-sample/src/main/res/drawable-xxhdpi/ic_launcher.png
similarity index 100%
rename from zbar/sample/src/main/res/drawable-xxhdpi/ic_launcher.png
rename to zbar-sample/src/main/res/drawable-xxhdpi/ic_launcher.png
diff --git a/zbar-sample/src/main/res/layout/activity_full_scanner.xml b/zbar-sample/src/main/res/layout/activity_full_scanner.xml
new file mode 100644
index 0000000..eb66dd7
--- /dev/null
+++ b/zbar-sample/src/main/res/layout/activity_full_scanner.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/content_frame"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zbar-sample/src/main/res/layout/activity_full_scanner_fragment.xml b/zbar-sample/src/main/res/layout/activity_full_scanner_fragment.xml
new file mode 100644
index 0000000..64f0559
--- /dev/null
+++ b/zbar-sample/src/main/res/layout/activity_full_scanner_fragment.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <fragment android:name="me.dm7.barcodescanner.zbar.sample.FullScannerFragment"
+              android:id="@+id/scanner_fragment"
+              android:layout_weight="1"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zbar-sample/src/main/res/layout/activity_main.xml b/zbar-sample/src/main/res/layout/activity_main.xml
new file mode 100644
index 0000000..f23aea0
--- /dev/null
+++ b/zbar-sample/src/main/res/layout/activity_main.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <android.support.design.widget.AppBarLayout
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"/>
+    </android.support.design.widget.AppBarLayout>
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center">
+        <Button android:layout_height="wrap_content"
+                android:layout_width="match_parent"
+                android:text="@string/simple_activity_sample"
+                android:onClick="launchSimpleActivity" />
+        <Button android:layout_height="wrap_content"
+                android:layout_width="match_parent"
+                android:text="@string/simple_fragment_sample"
+                android:onClick="launchSimpleFragmentActivity" />
+        <Button android:layout_height="wrap_content"
+                android:layout_width="match_parent"
+                android:text="@string/activity_sample"
+                android:onClick="launchFullActivity" />
+        <Button android:layout_height="wrap_content"
+                android:layout_width="match_parent"
+                android:text="@string/fragment_sample"
+                android:onClick="launchFullFragmentActivity" />
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/zbar-sample/src/main/res/layout/activity_simple_scanner.xml b/zbar-sample/src/main/res/layout/activity_simple_scanner.xml
new file mode 100644
index 0000000..eb66dd7
--- /dev/null
+++ b/zbar-sample/src/main/res/layout/activity_simple_scanner.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/content_frame"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zbar-sample/src/main/res/layout/activity_simple_scanner_fragment.xml b/zbar-sample/src/main/res/layout/activity_simple_scanner_fragment.xml
new file mode 100644
index 0000000..321c8f0
--- /dev/null
+++ b/zbar-sample/src/main/res/layout/activity_simple_scanner_fragment.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <fragment android:name="me.dm7.barcodescanner.zbar.sample.SimpleScannerFragment"
+              android:id="@+id/scanner_fragment"
+              android:layout_weight="1"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zbar-sample/src/main/res/values/colors.xml b/zbar-sample/src/main/res/values/colors.xml
new file mode 100644
index 0000000..1a64799
--- /dev/null
+++ b/zbar-sample/src/main/res/values/colors.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="actionbar_opacity">#33000000</color>
+    <color name="primary">#3F51B5</color>
+    <color name="primary_dark">#303F9F</color>
+    <color name="primary_light">#C5CAE9</color>
+    <color name="accent">#E040FB</color>
+    <color name="primary_text">#212121</color>
+    <color name="secondary_text">#727272</color>
+    <color name="icons">#FFFFFF</color>
+    <color name="divider">#B6B6B6</color>
+</resources>
\ No newline at end of file
diff --git a/zbar/sample/src/main/res/values/ids.xml b/zbar-sample/src/main/res/values/ids.xml
similarity index 100%
rename from zbar/sample/src/main/res/values/ids.xml
rename to zbar-sample/src/main/res/values/ids.xml
diff --git a/zbar/sample/src/main/res/values/strings.xml b/zbar-sample/src/main/res/values/strings.xml
similarity index 100%
rename from zbar/sample/src/main/res/values/strings.xml
rename to zbar-sample/src/main/res/values/strings.xml
diff --git a/zbar-sample/src/main/res/values/styles.xml b/zbar-sample/src/main/res/values/styles.xml
new file mode 100644
index 0000000..abab8ed
--- /dev/null
+++ b/zbar-sample/src/main/res/values/styles.xml
@@ -0,0 +1,36 @@
+<resources>
+    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="colorPrimary">@color/primary</item>
+        <!-- darker variant for the status bar and contextual app bars -->
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <!--   theme UI controls like checkboxes and text fields e.g. FloatActionButton -->
+        <item name="colorAccent">@color/accent</item>
+        <!-- Title Text Color -->
+        <item name="android:textColorPrimary">@color/primary_text</item>
+        <!-- color of the menu overflow icon (three vertical dots) -->
+        <item name="android:textColorSecondary">@color/secondary_text</item>
+    </style>
+
+    <style name="AppOverlayTheme" parent="@style/Theme.AppCompat.Light">
+        <item name="windowNoTitle">true</item>
+        <item name="windowActionBar">false</item>
+        <item name="android:windowFullscreen">true</item>
+        <item name="android:windowContentOverlay">@null</item>
+
+        <item name="colorPrimary">@color/primary</item>
+        <!-- darker variant for the status bar and contextual app bars -->
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <!--   theme UI controls like checkboxes and text fields e.g. FloatActionButton -->
+        <item name="colorAccent">@color/accent</item>
+        <!-- Title Text Color -->
+        <item name="android:textColorPrimary">@color/primary_text</item>
+        <!-- color of the menu overflow icon (three vertical dots) -->
+        <item name="android:textColorSecondary">@color/secondary_text</item>
+    </style>
+
+    <style name="TransparentToolbar" parent="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
+        <item name="android:windowActionBarOverlay">true</item>
+        <!-- Support Library compability -->
+        <item name="windowActionBarOverlay">true</item>
+    </style>
+</resources>
diff --git a/zbar/zbar/build.gradle b/zbar/build.gradle
similarity index 54%
rename from zbar/zbar/build.gradle
rename to zbar/build.gradle
index 1bfc7ac..f0b4ee1 100644
--- a/zbar/zbar/build.gradle
+++ b/zbar/build.gradle
@@ -9,13 +9,7 @@ ext {
 }
 
 dependencies {
-    //compile project(":core")
-    compile 'me.dm7.barcodescanner:core:1.8.3'
-    compile fileTree(dir: 'libs', include: '*.jar')
-}
-
-android {
-    defaultConfig {
-        //applicationId "${project.group}.zbar"
-    }
+//    api project(":core")
+    api libraries.barcodescanner_core
+    api fileTree(dir: 'libs', include: '*.jar')
 }
diff --git a/zbar/zbar/libs/zbar.jar b/zbar/libs/zbar.jar
similarity index 100%
rename from zbar/zbar/libs/zbar.jar
rename to zbar/libs/zbar.jar
diff --git a/zbar/sample/build.gradle b/zbar/sample/build.gradle
deleted file mode 100644
index d5ecd08..0000000
--- a/zbar/sample/build.gradle
+++ /dev/null
@@ -1,14 +0,0 @@
-apply plugin: 'com.android.application'
-
-dependencies {
-    //compile project(":zbar:zbar")
-    compile 'me.dm7.barcodescanner:zbar:1.8.3'
-    compile supportLibraryDependency
-    compile 'com.android.support:appcompat-v7:23.0.1'
-}
-
-android {
-    defaultConfig {
-        applicationId "${project.group}.zbar.sample"
-    }
-}
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MainActivity.java b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MainActivity.java
deleted file mode 100644
index 1d3b3fd..0000000
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/MainActivity.java
+++ /dev/null
@@ -1,34 +0,0 @@
-package me.dm7.barcodescanner.zbar.sample;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
-import android.view.View;
-
-public class MainActivity extends ActionBarActivity {
-    @Override
-    public void onCreate(Bundle state) {
-        super.onCreate(state);
-        setContentView(R.layout.activity_main);
-    }
-
-    public void launchSimpleActivity(View v) {
-        Intent intent = new Intent(this, SimpleScannerActivity.class);
-        startActivity(intent);
-    }
-
-    public void launchSimpleFragmentActivity(View v) {
-        Intent intent = new Intent(this, SimpleScannerFragmentActivity.class);
-        startActivity(intent);
-    }
-
-    public void launchActivity(View v) {
-        Intent intent = new Intent(this, ScannerActivity.class);
-        startActivity(intent);
-    }
-
-    public void launchFragmentActivity(View v) {
-        Intent intent = new Intent(this, ScannerFragmentActivity.class);
-        startActivity(intent);
-    }
-}
\ No newline at end of file
diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragmentActivity.java b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragmentActivity.java
deleted file mode 100644
index 282ae6e..0000000
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragmentActivity.java
+++ /dev/null
@@ -1,12 +0,0 @@
-package me.dm7.barcodescanner.zbar.sample;
-
-import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
-
-public class ScannerFragmentActivity extends ActionBarActivity {
-    @Override
-    public void onCreate(Bundle state) {
-        super.onCreate(state);
-        setContentView(R.layout.activity_scanner_fragment);
-    }
-}
\ No newline at end of file
diff --git a/zbar/sample/src/main/res/layout/activity_main.xml b/zbar/sample/src/main/res/layout/activity_main.xml
deleted file mode 100644
index 8b30617..0000000
--- a/zbar/sample/src/main/res/layout/activity_main.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:gravity="center">
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/simple_activity_sample"
-            android:onClick="launchSimpleActivity" />
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/simple_fragment_sample"
-            android:onClick="launchSimpleFragmentActivity" />
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/activity_sample"
-            android:onClick="launchActivity" />
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/fragment_sample"
-            android:onClick="launchFragmentActivity" />
-</LinearLayout>
\ No newline at end of file
diff --git a/zbar/sample/src/main/res/layout/activity_scanner_fragment.xml b/zbar/sample/src/main/res/layout/activity_scanner_fragment.xml
deleted file mode 100644
index 97477d6..0000000
--- a/zbar/sample/src/main/res/layout/activity_scanner_fragment.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-    <fragment android:name="me.dm7.barcodescanner.zbar.sample.ScannerFragment"
-              android:id="@+id/scanner_fragment"
-              android:layout_weight="1"
-              android:layout_width="match_parent"
-              android:layout_height="0dip" />
-</LinearLayout>
diff --git a/zbar/sample/src/main/res/layout/activity_simple_scanner_fragment.xml b/zbar/sample/src/main/res/layout/activity_simple_scanner_fragment.xml
deleted file mode 100644
index 8962b1d..0000000
--- a/zbar/sample/src/main/res/layout/activity_simple_scanner_fragment.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-    <fragment android:name="me.dm7.barcodescanner.zbar.sample.SimpleScannerFragment"
-              android:id="@+id/scanner_fragment"
-              android:layout_weight="1"
-              android:layout_width="match_parent"
-              android:layout_height="0dip" />
-</LinearLayout>
diff --git a/zbar/sample/src/main/res/values/colors.xml b/zbar/sample/src/main/res/values/colors.xml
deleted file mode 100644
index 424abd1..0000000
--- a/zbar/sample/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>    
-    <color name="actionbar_opacity">#DD000000</color>
-</resources>
\ No newline at end of file
diff --git a/zbar/sample/src/main/res/values/styles.xml b/zbar/sample/src/main/res/values/styles.xml
deleted file mode 100644
index 310d451..0000000
--- a/zbar/sample/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<resources>
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-    </style>
-
-    <!-- Base application theme. -->
-    <style name="AppOverlayTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-        <item name="android:windowActionBarOverlay">true</item>
-        <item name="android:actionBarStyle">@style/ActionBarStyle.Transparent</item>
-
-        <!-- Support library compatibility -->
-        <item name="windowActionBarOverlay">true</item>
-    </style>
-
-    <style name="ActionBarStyle.Transparent" parent="@android:Widget.ActionBar">
-        <item name="android:background">#99000000</item>
-        <item name="android:titleTextStyle">@style/ActionBarStyle.Transparent.TitleTextStyle</item>
-        <item name="android:backgroundSplit">#99000000</item>
-    </style>
-
-    <style name="ActionBarStyle.Transparent.TitleTextStyle" parent="@android:style/TextAppearance.Holo.Widget.ActionBar.Title">
-        <item name="android:textColor">@android:color/white</item>
-    </style>
-
-</resources>
diff --git a/zbar/zbar/src/main/AndroidManifest.xml b/zbar/src/main/AndroidManifest.xml
similarity index 100%
rename from zbar/zbar/src/main/AndroidManifest.xml
rename to zbar/src/main/AndroidManifest.xml
diff --git a/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/BarcodeFormat.java b/zbar/src/main/java/me/dm7/barcodescanner/zbar/BarcodeFormat.java
similarity index 100%
rename from zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/BarcodeFormat.java
rename to zbar/src/main/java/me/dm7/barcodescanner/zbar/BarcodeFormat.java
diff --git a/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/Result.java b/zbar/src/main/java/me/dm7/barcodescanner/zbar/Result.java
similarity index 100%
rename from zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/Result.java
rename to zbar/src/main/java/me/dm7/barcodescanner/zbar/Result.java
diff --git a/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java b/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java
new file mode 100644
index 0000000..439bac6
--- /dev/null
+++ b/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java
@@ -0,0 +1,157 @@
+package me.dm7.barcodescanner.zbar;
+
+import android.content.Context;
+import android.content.res.Configuration;
+import android.graphics.Rect;
+import android.hardware.Camera;
+import android.os.Handler;
+import android.os.Looper;
+import android.text.TextUtils;
+import android.util.AttributeSet;
+import android.util.Log;
+
+import net.sourceforge.zbar.Config;
+import net.sourceforge.zbar.Image;
+import net.sourceforge.zbar.ImageScanner;
+import net.sourceforge.zbar.Symbol;
+import net.sourceforge.zbar.SymbolSet;
+
+import java.nio.charset.StandardCharsets;
+import java.util.Collection;
+import java.util.List;
+
+import me.dm7.barcodescanner.core.BarcodeScannerView;
+import me.dm7.barcodescanner.core.DisplayUtils;
+
+public class ZBarScannerView extends BarcodeScannerView {
+    private static final String TAG = "ZBarScannerView";
+
+    public interface ResultHandler {
+        public void handleResult(Result rawResult);
+    }
+
+    static {
+        System.loadLibrary("iconv");
+    }
+
+    private ImageScanner mScanner;
+    private List<BarcodeFormat> mFormats;
+    private ResultHandler mResultHandler;
+
+    public ZBarScannerView(Context context) {
+        super(context);
+        setupScanner();
+    }
+
+    public ZBarScannerView(Context context, AttributeSet attributeSet) {
+        super(context, attributeSet);
+        setupScanner();
+    }
+
+    public void setFormats(List<BarcodeFormat> formats) {
+        mFormats = formats;
+        setupScanner();
+    }
+
+    public void setResultHandler(ResultHandler resultHandler) {
+        mResultHandler = resultHandler;
+    }
+
+    public Collection<BarcodeFormat> getFormats() {
+        if(mFormats == null) {
+            return BarcodeFormat.ALL_FORMATS;
+        }
+        return mFormats;
+    }
+
+    public void setupScanner() {
+        mScanner = new ImageScanner();
+        mScanner.setConfig(0, Config.X_DENSITY, 3);
+        mScanner.setConfig(0, Config.Y_DENSITY, 3);
+
+        mScanner.setConfig(Symbol.NONE, Config.ENABLE, 0);
+        for(BarcodeFormat format : getFormats()) {
+            mScanner.setConfig(format.getId(), Config.ENABLE, 1);
+        }
+    }
+
+    @Override
+    public void onPreviewFrame(byte[] data, Camera camera) {
+        if(mResultHandler == null) {
+            return;
+        }
+
+        try {
+            Camera.Parameters parameters = camera.getParameters();
+            Camera.Size size = parameters.getPreviewSize();
+            int width = size.width;
+            int height = size.height;
+
+            if (DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
+                int rotationCount = getRotationCount();
+                if (rotationCount == 1 || rotationCount == 3) {
+                    int tmp = width;
+                    width = height;
+                    height = tmp;
+                }
+                data = getRotatedData(data, camera);
+            }
+
+            Rect rect = getFramingRectInPreview(width, height);
+            Image barcode = new Image(width, height, "Y800");
+            barcode.setData(data);
+            barcode.setCrop(rect.left, rect.top, rect.width(), rect.height());
+
+            int result = mScanner.scanImage(barcode);
+
+            if (result != 0) {
+                SymbolSet syms = mScanner.getResults();
+                final Result rawResult = new Result();
+                for (Symbol sym : syms) {
+                    // In order to retreive QR codes containing null bytes we need to
+                    // use getDataBytes() rather than getData() which uses C strings.
+                    // Weirdly ZBar transforms all data to UTF-8, even the data returned
+                    // by getDataBytes() so we have to decode it as UTF-8.
+                    String symData;
+                    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.KITKAT) {
+                        symData = new String(sym.getDataBytes(), StandardCharsets.UTF_8);
+                    } else {
+                        symData = sym.getData();
+                    }
+                    if (!TextUtils.isEmpty(symData)) {
+                        rawResult.setContents(symData);
+                        rawResult.setBarcodeFormat(BarcodeFormat.getFormatById(sym.getType()));
+                        break;
+                    }
+                }
+
+                Handler handler = new Handler(Looper.getMainLooper());
+                handler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        // Stopping the preview can take a little long.
+                        // So we want to set result handler to null to discard subsequent calls to
+                        // onPreviewFrame.
+                        ResultHandler tmpResultHandler = mResultHandler;
+                        mResultHandler = null;
+                        
+                        stopCameraPreview();
+                        if (tmpResultHandler != null) {
+                            tmpResultHandler.handleResult(rawResult);
+                        }
+                    }
+                });
+            } else {
+                camera.setOneShotPreviewCallback(this);
+            }
+        } catch(RuntimeException e) {
+            // TODO: Terrible hack. It is possible that this method is invoked after camera is released.
+            Log.e(TAG, e.toString(), e);
+        }
+    }
+
+    public void resumeCameraPreview(ResultHandler resultHandler) {
+        mResultHandler = resultHandler;
+        super.resumeCameraPreview();
+    }
+}
diff --git a/zbar/zbar/src/main/jniLibs/arm64-v8a/libiconv.so b/zbar/src/main/jniLibs/arm64-v8a/libiconv.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/arm64-v8a/libiconv.so
rename to zbar/src/main/jniLibs/arm64-v8a/libiconv.so
diff --git a/zbar/zbar/src/main/jniLibs/arm64-v8a/libzbarjni.so b/zbar/src/main/jniLibs/arm64-v8a/libzbarjni.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/arm64-v8a/libzbarjni.so
rename to zbar/src/main/jniLibs/arm64-v8a/libzbarjni.so
diff --git a/zbar/zbar/src/main/jniLibs/armeabi-v7a/libiconv.so b/zbar/src/main/jniLibs/armeabi-v7a/libiconv.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/armeabi-v7a/libiconv.so
rename to zbar/src/main/jniLibs/armeabi-v7a/libiconv.so
diff --git a/zbar/zbar/src/main/jniLibs/armeabi-v7a/libzbarjni.so b/zbar/src/main/jniLibs/armeabi-v7a/libzbarjni.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/armeabi-v7a/libzbarjni.so
rename to zbar/src/main/jniLibs/armeabi-v7a/libzbarjni.so
diff --git a/zbar/zbar/src/main/jniLibs/armeabi/libiconv.so b/zbar/src/main/jniLibs/armeabi/libiconv.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/armeabi/libiconv.so
rename to zbar/src/main/jniLibs/armeabi/libiconv.so
diff --git a/zbar/zbar/src/main/jniLibs/armeabi/libzbarjni.so b/zbar/src/main/jniLibs/armeabi/libzbarjni.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/armeabi/libzbarjni.so
rename to zbar/src/main/jniLibs/armeabi/libzbarjni.so
diff --git a/zbar/zbar/src/main/jniLibs/mips/libiconv.so b/zbar/src/main/jniLibs/mips/libiconv.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/mips/libiconv.so
rename to zbar/src/main/jniLibs/mips/libiconv.so
diff --git a/zbar/zbar/src/main/jniLibs/mips/libzbarjni.so b/zbar/src/main/jniLibs/mips/libzbarjni.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/mips/libzbarjni.so
rename to zbar/src/main/jniLibs/mips/libzbarjni.so
diff --git a/zbar/zbar/src/main/jniLibs/mips64/libiconv.so b/zbar/src/main/jniLibs/mips64/libiconv.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/mips64/libiconv.so
rename to zbar/src/main/jniLibs/mips64/libiconv.so
diff --git a/zbar/zbar/src/main/jniLibs/mips64/libzbarjni.so b/zbar/src/main/jniLibs/mips64/libzbarjni.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/mips64/libzbarjni.so
rename to zbar/src/main/jniLibs/mips64/libzbarjni.so
diff --git a/zbar/zbar/src/main/jniLibs/x86/libiconv.so b/zbar/src/main/jniLibs/x86/libiconv.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/x86/libiconv.so
rename to zbar/src/main/jniLibs/x86/libiconv.so
diff --git a/zbar/zbar/src/main/jniLibs/x86/libzbarjni.so b/zbar/src/main/jniLibs/x86/libzbarjni.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/x86/libzbarjni.so
rename to zbar/src/main/jniLibs/x86/libzbarjni.so
diff --git a/zbar/zbar/src/main/jniLibs/x86_64/libiconv.so b/zbar/src/main/jniLibs/x86_64/libiconv.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/x86_64/libiconv.so
rename to zbar/src/main/jniLibs/x86_64/libiconv.so
diff --git a/zbar/zbar/src/main/jniLibs/x86_64/libzbarjni.so b/zbar/src/main/jniLibs/x86_64/libzbarjni.so
similarity index 100%
rename from zbar/zbar/src/main/jniLibs/x86_64/libzbarjni.so
rename to zbar/src/main/jniLibs/x86_64/libzbarjni.so
diff --git a/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java b/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java
deleted file mode 100644
index e4640e9..0000000
--- a/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java
+++ /dev/null
@@ -1,118 +0,0 @@
-package me.dm7.barcodescanner.zbar;
-
-import android.content.Context;
-import android.content.res.Configuration;
-import android.graphics.Rect;
-import android.hardware.Camera;
-import android.text.TextUtils;
-import android.util.AttributeSet;
-
-import net.sourceforge.zbar.Config;
-import net.sourceforge.zbar.Image;
-import net.sourceforge.zbar.ImageScanner;
-import net.sourceforge.zbar.Symbol;
-import net.sourceforge.zbar.SymbolSet;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.EnumMap;
-import java.util.List;
-import java.util.Map;
-
-import me.dm7.barcodescanner.core.BarcodeScannerView;
-import me.dm7.barcodescanner.core.DisplayUtils;
-
-public class ZBarScannerView extends BarcodeScannerView {
-    public interface ResultHandler {
-        public void handleResult(Result rawResult);
-    }
-
-    static {
-        System.loadLibrary("iconv");
-    }
-
-    private ImageScanner mScanner;
-    private List<BarcodeFormat> mFormats;
-    private ResultHandler mResultHandler;
-
-    public ZBarScannerView(Context context) {
-        super(context);
-        setupScanner();
-    }
-
-    public ZBarScannerView(Context context, AttributeSet attributeSet) {
-        super(context, attributeSet);
-        setupScanner();
-    }
-
-    public void setFormats(List<BarcodeFormat> formats) {
-        mFormats = formats;
-        setupScanner();
-    }
-
-    public void setResultHandler(ResultHandler resultHandler) {
-        mResultHandler = resultHandler;
-    }
-
-    public Collection<BarcodeFormat> getFormats() {
-        if(mFormats == null) {
-            return BarcodeFormat.ALL_FORMATS;
-        }
-        return mFormats;
-    }
-
-    public void setupScanner() {
-        mScanner = new ImageScanner();
-        mScanner.setConfig(0, Config.X_DENSITY, 3);
-        mScanner.setConfig(0, Config.Y_DENSITY, 3);
-
-        mScanner.setConfig(Symbol.NONE, Config.ENABLE, 0);
-        for(BarcodeFormat format : getFormats()) {
-            mScanner.setConfig(format.getId(), Config.ENABLE, 1);
-        }
-    }
-
-    @Override
-    public void onPreviewFrame(byte[] data, Camera camera) {
-        Camera.Parameters parameters = camera.getParameters();
-        Camera.Size size = parameters.getPreviewSize();
-        int width = size.width;
-        int height = size.height;
-
-        if(DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
-            byte[] rotatedData = new byte[data.length];
-            for (int y = 0; y < height; y++) {
-                for (int x = 0; x < width; x++)
-                    rotatedData[x * height + height - y - 1] = data[x + y * width];
-            }
-            int tmp = width;
-            width = height;
-            height = tmp;
-            data = rotatedData;
-        }
-
-        Image barcode = new Image(width, height, "Y800");
-        barcode.setData(data);
-
-        int result = mScanner.scanImage(barcode);
-
-        if (result != 0) {
-            stopCamera();
-            if(mResultHandler != null) {
-                SymbolSet syms = mScanner.getResults();
-                Result rawResult = new Result();
-                for (Symbol sym : syms) {
-                    String symData = sym.getData();
-                    if (!TextUtils.isEmpty(symData)) {
-                        rawResult.setContents(symData);
-                        rawResult.setBarcodeFormat(BarcodeFormat.getFormatById(sym.getType()));
-                        break;
-                    }
-                }
-                mResultHandler.handleResult(rawResult);
-            }
-        } else {
-            camera.setOneShotPreviewCallback(this);
-        }
-    }
-}
\ No newline at end of file
diff --git a/zxing-sample/build.gradle b/zxing-sample/build.gradle
new file mode 100644
index 0000000..f46d1d8
--- /dev/null
+++ b/zxing-sample/build.gradle
@@ -0,0 +1,15 @@
+apply plugin: 'com.android.application'
+
+dependencies {
+//    implementation project(":zxing")
+    implementation libraries.barcodescanner_zxing
+    implementation libraries.support_v4
+    implementation libraries.appcompat_v7
+    implementation libraries.design_support
+}
+
+android {
+    defaultConfig {
+        applicationId "${project.group}.zxing.sample"
+    }
+}
diff --git a/zxing/sample/src/main/AndroidManifest.xml b/zxing-sample/src/main/AndroidManifest.xml
similarity index 76%
rename from zxing/sample/src/main/AndroidManifest.xml
rename to zxing-sample/src/main/AndroidManifest.xml
index 269e607..ab98927 100644
--- a/zxing/sample/src/main/AndroidManifest.xml
+++ b/zxing-sample/src/main/AndroidManifest.xml
@@ -15,7 +15,7 @@
             </intent-filter>
         </activity>
 
-        <activity android:name=".ScannerActivity"
+        <activity android:name=".FullScannerActivity"
                   android:theme="@style/AppOverlayTheme"
                   android:uiOptions="splitActionBarWhenNarrow"
                   android:label="@string/scanner_activity">
@@ -23,7 +23,7 @@
                        android:value="splitActionBarWhenNarrow" />
         </activity>
 
-        <activity android:name=".ScannerFragmentActivity"
+        <activity android:name=".FullScannerFragmentActivity"
                   android:theme="@style/AppOverlayTheme"
                   android:uiOptions="splitActionBarWhenNarrow"
                   android:label="@string/scanner_fragment_activity">
@@ -42,8 +42,18 @@
         </activity>
 
         <activity android:name=".FullScreenScannerFragmentActivity"
-                android:theme="@style/AppFullScreenTheme"
+                  android:theme="@style/AppOverlayTheme"
                 android:label="@string/full_screen_scanner_fragment_activity">
-          </activity>
+      </activity>
+
+      <activity android:name=".CustomViewFinderScannerActivity"
+                android:theme="@style/AppTheme"
+                android:label="@string/custom_view_finder_scanner_activity">
+      </activity>
+
+      <activity android:name=".ScalingScannerActivity"
+                android:theme="@style/AppTheme"
+                android:label="@string/scaling_scanner_activity">
+      </activity>
     </application>
 </manifest>
\ No newline at end of file
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.java
new file mode 100644
index 0000000..ed80d56
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/BaseScannerActivity.java
@@ -0,0 +1,28 @@
+package me.dm7.barcodescanner.zxing.sample;
+
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.MenuItem;
+
+public class BaseScannerActivity extends AppCompatActivity {
+    public void setupToolbar() {
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        final ActionBar ab = getSupportActionBar();
+        if(ab != null) {
+            ab.setDisplayHomeAsUpEnabled(true);
+        }
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            // Respond to the action bar's Up/Home button
+            case android.R.id.home:
+                finish();
+                return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+}
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/CameraSelectorDialogFragment.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/CameraSelectorDialogFragment.java
similarity index 100%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/CameraSelectorDialogFragment.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/CameraSelectorDialogFragment.java
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/CustomViewFinderScannerActivity.java
similarity index 75%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerActivity.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/CustomViewFinderScannerActivity.java
index 079898e..d49a0ee 100644
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerActivity.java
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/CustomViewFinderScannerActivity.java
@@ -6,9 +6,10 @@
 import android.graphics.Paint;
 import android.graphics.Rect;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.os.Handler;
 import android.util.AttributeSet;
 import android.util.TypedValue;
+import android.view.ViewGroup;
 import android.widget.Toast;
 
 import com.google.zxing.Result;
@@ -17,19 +18,23 @@
 import me.dm7.barcodescanner.core.ViewFinderView;
 import me.dm7.barcodescanner.zxing.ZXingScannerView;
 
-public class SimpleScannerActivity extends ActionBarActivity implements ZXingScannerView.ResultHandler {
+public class CustomViewFinderScannerActivity extends BaseScannerActivity implements ZXingScannerView.ResultHandler {
     private ZXingScannerView mScannerView;
 
     @Override
     public void onCreate(Bundle state) {
         super.onCreate(state);
+        setContentView(R.layout.activity_custom_view_finder_scanner);
+        setupToolbar();
+
+        ViewGroup contentFrame = (ViewGroup) findViewById(R.id.content_frame);
         mScannerView = new ZXingScannerView(this) {
             @Override
             protected IViewFinder createViewFinderView(Context context) {
                 return new CustomViewFinderView(context);
             }
         };
-        setContentView(mScannerView);
+        contentFrame.addView(mScannerView);
     }
 
     @Override
@@ -49,7 +54,18 @@ public void onPause() {
     public void handleResult(Result rawResult) {
         Toast.makeText(this, "Contents = " + rawResult.getText() +
                 ", Format = " + rawResult.getBarcodeFormat().toString(), Toast.LENGTH_SHORT).show();
-        mScannerView.startCamera();
+
+        // Note:
+        // * Wait 2 seconds to resume the preview.
+        // * On older devices continuously stopping and resuming camera preview can result in freezing the app.
+        // * I don't know why this is the case but I don't have the time to figure out.
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                mScannerView.resumeCameraPreview(CustomViewFinderScannerActivity.this);
+            }
+        }, 2000);
     }
 
     private static class CustomViewFinderView extends ViewFinderView {
@@ -73,6 +89,7 @@ private void init() {
             float textPixelSize = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP,
                     TRADE_MARK_TEXT_SIZE_SP, getResources().getDisplayMetrics());
             PAINT.setTextSize(textPixelSize);
+            setSquareViewFinder(true);
         }
 
         @Override
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FormatSelectorDialogFragment.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FormatSelectorDialogFragment.java
similarity index 100%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FormatSelectorDialogFragment.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FormatSelectorDialogFragment.java
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
similarity index 93%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerActivity.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
index e656d1f..ec15b78 100644
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerActivity.java
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
@@ -7,9 +7,9 @@
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.view.MenuItemCompat;
-import android.support.v7.app.ActionBarActivity;
 import android.view.Menu;
 import android.view.MenuItem;
+import android.view.ViewGroup;
 
 import com.google.zxing.BarcodeFormat;
 import com.google.zxing.Result;
@@ -19,7 +19,7 @@
 
 import me.dm7.barcodescanner.zxing.ZXingScannerView;
 
-public class ScannerActivity extends ActionBarActivity implements MessageDialogFragment.MessageDialogListener,
+public class FullScannerActivity extends BaseScannerActivity implements MessageDialogFragment.MessageDialogListener,
         ZXingScannerView.ResultHandler, FormatSelectorDialogFragment.FormatSelectorDialogListener,
         CameraSelectorDialogFragment.CameraSelectorDialogListener {
     private static final String FLASH_STATE = "FLASH_STATE";
@@ -47,9 +47,13 @@ public void onCreate(Bundle state) {
             mCameraId = -1;
         }
 
+        setContentView(R.layout.activity_simple_scanner);
+        setupToolbar();
+
+        ViewGroup contentFrame = (ViewGroup) findViewById(R.id.content_frame);
         mScannerView = new ZXingScannerView(this);
         setupFormats();
-        setContentView(mScannerView);
+        contentFrame.addView(mScannerView);
     }
 
     @Override
@@ -79,7 +83,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
 
         if(mAutoFocus) {
@@ -87,13 +91,13 @@ public boolean onCreateOptionsMenu(Menu menu) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_formats, 0, R.string.formats);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_camera_selector, 0, R.string.select_camera);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         return super.onCreateOptionsMenu(menu);
     }
@@ -168,9 +172,7 @@ public void closeDialog(String dialogName) {
     @Override
     public void onDialogPositiveClick(DialogFragment dialog) {
         // Resume the camera
-        mScannerView.startCamera(mCameraId);
-        mScannerView.setFlash(mFlash);
-        mScannerView.setAutoFocus(mAutoFocus);
+        mScannerView.resumeCameraPreview(this);
     }
 
     @Override
@@ -211,4 +213,4 @@ public void onPause() {
         closeMessageDialog();
         closeFormatsDialog();
     }
-}
\ No newline at end of file
+}
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragment.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragment.java
similarity index 96%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragment.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragment.java
index 6ee13a2..fc22686 100644
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragment.java
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragment.java
@@ -23,7 +23,7 @@
 
 import me.dm7.barcodescanner.zxing.ZXingScannerView;
 
-public class ScannerFragment extends Fragment implements MessageDialogFragment.MessageDialogListener,
+public class FullScannerFragment extends Fragment implements MessageDialogFragment.MessageDialogListener,
         ZXingScannerView.ResultHandler, FormatSelectorDialogFragment.FormatSelectorDialogListener,
         CameraSelectorDialogFragment.CameraSelectorDialogListener {
     private static final String FLASH_STATE = "FLASH_STATE";
@@ -70,7 +70,7 @@ public void onCreateOptionsMenu (Menu menu, MenuInflater inflater) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
 
         if(mAutoFocus) {
@@ -78,13 +78,13 @@ public void onCreateOptionsMenu (Menu menu, MenuInflater inflater) {
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_off);
         }
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_formats, 0, R.string.formats);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
         menuItem = menu.add(Menu.NONE, R.id.menu_camera_selector, 0, R.string.select_camera);
-        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_ALWAYS);
+        MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
     }
 
     @Override
@@ -175,9 +175,7 @@ public void closeDialog(String dialogName) {
     @Override
     public void onDialogPositiveClick(DialogFragment dialog) {
         // Resume the camera
-        mScannerView.startCamera(mCameraId);
-        mScannerView.setFlash(mFlash);
-        mScannerView.setAutoFocus(mAutoFocus);
+        mScannerView.resumeCameraPreview(this);
     }
 
     @Override
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragmentActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragmentActivity.java
new file mode 100644
index 0000000..16839e7
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragmentActivity.java
@@ -0,0 +1,12 @@
+package me.dm7.barcodescanner.zxing.sample;
+
+import android.os.Bundle;
+
+public class FullScannerFragmentActivity extends BaseScannerActivity {
+    @Override
+    public void onCreate(Bundle state) {
+        super.onCreate(state);
+        setContentView(R.layout.activity_full_scanner_fragment);
+        setupToolbar();
+    }
+}
\ No newline at end of file
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScreenScannerFragmentActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScreenScannerFragmentActivity.java
similarity index 68%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScreenScannerFragmentActivity.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScreenScannerFragmentActivity.java
index 82c5e67..886e38e 100644
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScreenScannerFragmentActivity.java
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScreenScannerFragmentActivity.java
@@ -2,9 +2,9 @@
 
 
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
-public class FullScreenScannerFragmentActivity extends ActionBarActivity {
+public class FullScreenScannerFragmentActivity extends AppCompatActivity {
     @Override
     public void onCreate(Bundle state) {
         super.onCreate(state);
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java
new file mode 100644
index 0000000..d85fa01
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java
@@ -0,0 +1,85 @@
+package me.dm7.barcodescanner.zxing.sample;
+
+import android.Manifest;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.widget.Toast;
+
+public class MainActivity extends AppCompatActivity {
+    private static final int ZXING_CAMERA_PERMISSION = 1;
+    private Class<?> mClss;
+
+    @Override
+    public void onCreate(Bundle state) {
+        super.onCreate(state);
+        setContentView(R.layout.activity_main);
+        setupToolbar();
+    }
+
+    public void setupToolbar() {
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+    }
+
+    public void launchSimpleActivity(View v) {
+        launchActivity(SimpleScannerActivity.class);
+    }
+
+    public void launchSimpleFragmentActivity(View v) {
+        launchActivity(SimpleScannerFragmentActivity.class);
+    }
+
+    public void launchFullActivity(View v) {
+        launchActivity(FullScannerActivity.class);
+    }
+
+    public void launchFullFragmentActivity(View v) {
+        launchActivity(FullScannerFragmentActivity.class);
+    }
+
+    public void launchFullScreenScannerFragmentActivity(View v) {
+        launchActivity(FullScreenScannerFragmentActivity.class);
+    }
+
+    public void launchCustomViewFinderScannerActivity(View v) {
+        launchActivity(CustomViewFinderScannerActivity.class);
+    }
+
+    public void launchScalingScannerActivity(View v) {
+        launchActivity(ScalingScannerActivity.class);
+    }
+
+    public void launchActivity(Class<?> clss) {
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
+                != PackageManager.PERMISSION_GRANTED) {
+            mClss = clss;
+            ActivityCompat.requestPermissions(this,
+                    new String[]{Manifest.permission.CAMERA}, ZXING_CAMERA_PERMISSION);
+        } else {
+            Intent intent = new Intent(this, clss);
+            startActivity(intent);
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode,  String permissions[], int[] grantResults) {
+        switch (requestCode) {
+            case ZXING_CAMERA_PERMISSION:
+                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                    if(mClss != null) {
+                        Intent intent = new Intent(this, mClss);
+                        startActivity(intent);
+                    }
+                } else {
+                    Toast.makeText(this, "Please grant camera permission to use the QR Scanner", Toast.LENGTH_SHORT).show();
+                }
+                return;
+        }
+    }
+}
\ No newline at end of file
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MessageDialogFragment.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MessageDialogFragment.java
similarity index 100%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MessageDialogFragment.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MessageDialogFragment.java
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScalingScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScalingScannerActivity.java
new file mode 100644
index 0000000..75fbcbf
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScalingScannerActivity.java
@@ -0,0 +1,74 @@
+package me.dm7.barcodescanner.zxing.sample;
+
+import android.os.Bundle;
+import android.os.Handler;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Toast;
+
+import com.google.zxing.Result;
+
+import me.dm7.barcodescanner.zxing.ZXingScannerView;
+
+public class ScalingScannerActivity extends BaseScannerActivity implements ZXingScannerView.ResultHandler {
+    private static final String FLASH_STATE = "FLASH_STATE";
+
+    private ZXingScannerView mScannerView;
+    private boolean mFlash;
+
+    @Override
+    public void onCreate(Bundle state) {
+        super.onCreate(state);
+        setContentView(R.layout.activity_scaling_scanner);
+        setupToolbar();
+        ViewGroup contentFrame = (ViewGroup) findViewById(R.id.content_frame);
+        mScannerView = new ZXingScannerView(this);
+        contentFrame.addView(mScannerView);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        mScannerView.setResultHandler(this);
+        // You can optionally set aspect ratio tolerance level
+        // that is used in calculating the optimal Camera preview size
+        mScannerView.setAspectTolerance(0.2f);
+        mScannerView.startCamera();
+        mScannerView.setFlash(mFlash);
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        mScannerView.stopCamera();
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putBoolean(FLASH_STATE, mFlash);
+    }
+
+    @Override
+    public void handleResult(Result rawResult) {
+        Toast.makeText(this, "Contents = " + rawResult.getText() +
+                ", Format = " + rawResult.getBarcodeFormat().toString(), Toast.LENGTH_SHORT).show();
+
+        // Note:
+        // * Wait 2 seconds to resume the preview.
+        // * On older devices continuously stopping and resuming camera preview can result in freezing the app.
+        // * I don't know why this is the case but I don't have the time to figure out.
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                mScannerView.resumeCameraPreview(ScalingScannerActivity.this);
+            }
+        }, 2000);
+    }
+
+    public void toggleFlash(View v) {
+        mFlash = !mFlash;
+        mScannerView.setFlash(mFlash);
+    }
+}
\ No newline at end of file
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerActivity.java
new file mode 100644
index 0000000..88ac069
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerActivity.java
@@ -0,0 +1,56 @@
+package me.dm7.barcodescanner.zxing.sample;
+
+import android.os.Bundle;
+import android.os.Handler;
+import android.view.ViewGroup;
+import android.widget.Toast;
+
+import com.google.zxing.Result;
+
+import me.dm7.barcodescanner.zxing.ZXingScannerView;
+
+public class SimpleScannerActivity extends BaseScannerActivity implements ZXingScannerView.ResultHandler {
+    private ZXingScannerView mScannerView;
+
+    @Override
+    public void onCreate(Bundle state) {
+        super.onCreate(state);
+        setContentView(R.layout.activity_simple_scanner);
+        setupToolbar();
+
+        ViewGroup contentFrame = (ViewGroup) findViewById(R.id.content_frame);
+        mScannerView = new ZXingScannerView(this);
+        contentFrame.addView(mScannerView);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        mScannerView.setResultHandler(this);
+        mScannerView.startCamera();
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        mScannerView.stopCamera();
+    }
+
+    @Override
+    public void handleResult(Result rawResult) {
+        Toast.makeText(this, "Contents = " + rawResult.getText() +
+                ", Format = " + rawResult.getBarcodeFormat().toString(), Toast.LENGTH_SHORT).show();
+
+        // Note:
+        // * Wait 2 seconds to resume the preview.
+        // * On older devices continuously stopping and resuming camera preview can result in freezing the app.
+        // * I don't know why this is the case but I don't have the time to figure out.
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                mScannerView.resumeCameraPreview(SimpleScannerActivity.this);
+            }
+        }, 2000);
+    }
+}
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
similarity index 68%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
index 54c5a5a..a590f62 100644
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
@@ -1,6 +1,7 @@
 package me.dm7.barcodescanner.zxing.sample;
 
 import android.os.Bundle;
+import android.os.Handler;
 import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -31,7 +32,17 @@ public void onResume() {
     public void handleResult(Result rawResult) {
         Toast.makeText(getActivity(), "Contents = " + rawResult.getText() +
                 ", Format = " + rawResult.getBarcodeFormat().toString(), Toast.LENGTH_SHORT).show();
-        mScannerView.startCamera();
+        // Note:
+        // * Wait 2 seconds to resume the preview.
+        // * On older devices continuously stopping and resuming camera preview can result in freezing the app.
+        // * I don't know why this is the case but I don't have the time to figure out.
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                mScannerView.resumeCameraPreview(SimpleScannerFragment.this);
+            }
+        }, 2000);
     }
 
     @Override
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragmentActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragmentActivity.java
similarity index 65%
rename from zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragmentActivity.java
rename to zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragmentActivity.java
index d182e22..e1778f9 100644
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragmentActivity.java
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragmentActivity.java
@@ -1,12 +1,12 @@
 package me.dm7.barcodescanner.zxing.sample;
 
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
 
-public class SimpleScannerFragmentActivity extends ActionBarActivity {
+public class SimpleScannerFragmentActivity extends BaseScannerActivity {
     @Override
     public void onCreate(Bundle state) {
         super.onCreate(state);
         setContentView(R.layout.activity_simple_scanner_fragment);
+        setupToolbar();
     }
 }
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/drawable-hdpi/ic_launcher.png b/zxing-sample/src/main/res/drawable-hdpi/ic_launcher.png
similarity index 100%
rename from zxing/sample/src/main/res/drawable-hdpi/ic_launcher.png
rename to zxing-sample/src/main/res/drawable-hdpi/ic_launcher.png
diff --git a/zxing/sample/src/main/res/drawable-mdpi/ic_launcher.png b/zxing-sample/src/main/res/drawable-mdpi/ic_launcher.png
similarity index 100%
rename from zxing/sample/src/main/res/drawable-mdpi/ic_launcher.png
rename to zxing-sample/src/main/res/drawable-mdpi/ic_launcher.png
diff --git a/zxing/sample/src/main/res/drawable-xhdpi/ic_launcher.png b/zxing-sample/src/main/res/drawable-xhdpi/ic_launcher.png
similarity index 100%
rename from zxing/sample/src/main/res/drawable-xhdpi/ic_launcher.png
rename to zxing-sample/src/main/res/drawable-xhdpi/ic_launcher.png
diff --git a/zxing/sample/src/main/res/drawable-xxhdpi/ic_launcher.png b/zxing-sample/src/main/res/drawable-xxhdpi/ic_launcher.png
similarity index 100%
rename from zxing/sample/src/main/res/drawable-xxhdpi/ic_launcher.png
rename to zxing-sample/src/main/res/drawable-xxhdpi/ic_launcher.png
diff --git a/zxing-sample/src/main/res/layout-land/activity_scaling_scanner.xml b/zxing-sample/src/main/res/layout-land/activity_scaling_scanner.xml
new file mode 100644
index 0000000..ebfaebb
--- /dev/null
+++ b/zxing-sample/src/main/res/layout-land/activity_scaling_scanner.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <android.support.design.widget.AppBarLayout
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"/>
+    </android.support.design.widget.AppBarLayout>
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <FrameLayout
+            android:id="@+id/content_frame"
+            android:layout_weight="1"
+            android:layout_width="0dp"
+            android:layout_height="match_parent" />
+        <LinearLayout
+            android:orientation="vertical"
+            android:gravity="center"
+            android:background="#222"
+            android:layout_width="150dp"
+            android:layout_height="match_parent">
+            <Button
+                android:text="@string/toggle_flash"
+                android:onClick="toggleFlash"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"/>
+        </LinearLayout>
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/zxing-sample/src/main/res/layout/activity_custom_view_finder_scanner.xml b/zxing-sample/src/main/res/layout/activity_custom_view_finder_scanner.xml
new file mode 100644
index 0000000..eb66dd7
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_custom_view_finder_scanner.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/content_frame"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zxing-sample/src/main/res/layout/activity_full_scanner.xml b/zxing-sample/src/main/res/layout/activity_full_scanner.xml
new file mode 100644
index 0000000..eb66dd7
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_full_scanner.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/content_frame"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zxing-sample/src/main/res/layout/activity_full_scanner_fragment.xml b/zxing-sample/src/main/res/layout/activity_full_scanner_fragment.xml
new file mode 100644
index 0000000..1d3c224
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_full_scanner_fragment.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <fragment android:name="me.dm7.barcodescanner.zxing.sample.FullScannerFragment"
+              android:id="@+id/scanner_fragment"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/layout/activity_full_screen_scanner_fragment.xml b/zxing-sample/src/main/res/layout/activity_full_screen_scanner_fragment.xml
similarity index 89%
rename from zxing/sample/src/main/res/layout/activity_full_screen_scanner_fragment.xml
rename to zxing-sample/src/main/res/layout/activity_full_screen_scanner_fragment.xml
index a852e5f..9cd7937 100644
--- a/zxing/sample/src/main/res/layout/activity_full_screen_scanner_fragment.xml
+++ b/zxing-sample/src/main/res/layout/activity_full_screen_scanner_fragment.xml
@@ -5,7 +5,7 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
-    <fragment android:name="me.dm7.barcodescanner.zxing.sample.ScannerFragment"
+    <fragment android:name="me.dm7.barcodescanner.zxing.sample.FullScannerFragment"
         android:id="@+id/scanner_fragment"
         android:layout_width="match_parent"
         android:layout_height="match_parent" />
diff --git a/zxing-sample/src/main/res/layout/activity_main.xml b/zxing-sample/src/main/res/layout/activity_main.xml
new file mode 100644
index 0000000..2ef55d3
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_main.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <android.support.design.widget.AppBarLayout
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"/>
+    </android.support.design.widget.AppBarLayout>
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <LinearLayout
+                  android:orientation="vertical"
+                  android:layout_width="match_parent"
+                  android:layout_height="match_parent"
+                  android:gravity="center">
+            <Button android:layout_height="wrap_content"
+                    android:layout_width="match_parent"
+                    android:text="@string/simple_activity_sample"
+                    android:onClick="launchSimpleActivity" />
+            <Button android:layout_height="wrap_content"
+                    android:layout_width="match_parent"
+                    android:text="@string/simple_fragment_sample"
+                    android:onClick="launchSimpleFragmentActivity" />
+            <Button android:layout_height="wrap_content"
+                    android:layout_width="match_parent"
+                    android:text="@string/activity_sample"
+                    android:onClick="launchFullActivity" />
+            <Button android:layout_height="wrap_content"
+                    android:layout_width="match_parent"
+                    android:text="@string/fragment_sample"
+                    android:onClick="launchFullFragmentActivity" />
+            <Button android:layout_height="wrap_content"
+                android:layout_width="match_parent"
+                android:text="@string/full_screen_sample"
+                android:onClick="launchFullScreenScannerFragmentActivity" />
+            <Button android:layout_height="wrap_content"
+                    android:layout_width="match_parent"
+                    android:text="@string/custom_view_finder_sample"
+                    android:onClick="launchCustomViewFinderScannerActivity" />
+            <Button android:layout_height="wrap_content"
+                    android:layout_width="match_parent"
+                    android:text="@string/scaling_sample"
+                    android:onClick="launchScalingScannerActivity" />
+        </LinearLayout>
+    </ScrollView>
+</LinearLayout>
\ No newline at end of file
diff --git a/zxing-sample/src/main/res/layout/activity_scaling_scanner.xml b/zxing-sample/src/main/res/layout/activity_scaling_scanner.xml
new file mode 100644
index 0000000..75f9ec3
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_scaling_scanner.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <android.support.design.widget.AppBarLayout
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"/>
+    </android.support.design.widget.AppBarLayout>
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <FrameLayout
+            android:id="@+id/content_frame"
+            android:layout_weight="1"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent" />
+        <LinearLayout
+            android:orientation="horizontal"
+            android:gravity="center"
+            android:background="#222"
+            android:layout_width="match_parent"
+            android:layout_height="150dp">
+            <Button
+                android:text="@string/toggle_flash"
+                android:layout_weight="1"
+                android:onClick="toggleFlash"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"/>
+        </LinearLayout>
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/zxing-sample/src/main/res/layout/activity_simple_scanner.xml b/zxing-sample/src/main/res/layout/activity_simple_scanner.xml
new file mode 100644
index 0000000..eb66dd7
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_simple_scanner.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/content_frame"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zxing-sample/src/main/res/layout/activity_simple_scanner_fragment.xml b/zxing-sample/src/main/res/layout/activity_simple_scanner_fragment.xml
new file mode 100644
index 0000000..e06d09e
--- /dev/null
+++ b/zxing-sample/src/main/res/layout/activity_simple_scanner_fragment.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <fragment android:name="me.dm7.barcodescanner.zxing.sample.SimpleScannerFragment"
+          android:id="@+id/scanner_fragment"
+          android:layout_weight="1"
+          android:layout_width="match_parent"
+          android:layout_height="match_parent" />
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_gravity="top"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/actionbar_opacity"
+        app:theme="@style/TransparentToolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+</FrameLayout>
\ No newline at end of file
diff --git a/zxing-sample/src/main/res/values/colors.xml b/zxing-sample/src/main/res/values/colors.xml
new file mode 100644
index 0000000..f509d89
--- /dev/null
+++ b/zxing-sample/src/main/res/values/colors.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>    
+    <color name="actionbar_opacity">#33000000</color>
+    <color name="primary">#3F51B5</color>
+    <color name="primary_dark">#303F9F</color>
+    <color name="primary_light">#C5CAE9</color>
+    <color name="accent">#E040FB</color>
+    <color name="primary_text">#212121</color>
+    <color name="secondary_text">#727272</color>
+    <color name="icons">#FFFFFF</color>
+    <color name="divider">#B6B6B6</color>
+</resources>
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/values/ids.xml b/zxing-sample/src/main/res/values/ids.xml
similarity index 100%
rename from zxing/sample/src/main/res/values/ids.xml
rename to zxing-sample/src/main/res/values/ids.xml
diff --git a/zxing/sample/src/main/res/values/strings.xml b/zxing-sample/src/main/res/values/strings.xml
similarity index 78%
rename from zxing/sample/src/main/res/values/strings.xml
rename to zxing-sample/src/main/res/values/strings.xml
index e0b0333..1b6867f 100644
--- a/zxing/sample/src/main/res/values/strings.xml
+++ b/zxing-sample/src/main/res/values/strings.xml
@@ -3,6 +3,8 @@
     <string name="scanner_activity">ZXing Scanner - Full Activity</string>
     <string name="scanner_fragment_activity">ZXing Scanner - Full Fragment Activity</string>
     <string name="simple_scanner_activity">ZXing Scanner - Simple Activity</string>
+    <string name="custom_view_finder_scanner_activity">ZXing Scanner - Custom View Finder Activity</string>
+    <string name="scaling_scanner_activity">ZXing Scanner - Scaling Activity</string>
     <string name="simple_scanner_fragment_activity">ZXing Scanner - Simple Fragment Activity</string>
     <string name="full_screen_scanner_fragment_activity">ZXing Scanner - Full Screen Fragment Activity</string>
     <string name="simple_activity_sample">Simple Activity Sample</string>
@@ -10,6 +12,8 @@
     <string name="activity_sample">Full Activity Sample</string>
     <string name="fragment_sample">Full Fragment Sample</string>
     <string name="full_screen_sample">Full Screen Fragment Sample</string>
+    <string name="custom_view_finder_sample">Custom View Finder Sample</string>
+    <string name="scaling_sample">Scaling Sample</string>
     <string name="toggle_flash">Flash</string>
     <string name="flash_on">Flash [ON]</string>
     <string name="flash_off">Flash [OFF]</string>
@@ -20,4 +24,5 @@
     <string name="select_camera">Select a Camera</string>
     <string name="ok_button">OK</string>
     <string name="cancel_button">Cancel</string>
+    <bool name="cameraPreviewShouldFillView">true</bool>
 </resources>
diff --git a/zxing-sample/src/main/res/values/styles.xml b/zxing-sample/src/main/res/values/styles.xml
new file mode 100644
index 0000000..abab8ed
--- /dev/null
+++ b/zxing-sample/src/main/res/values/styles.xml
@@ -0,0 +1,36 @@
+<resources>
+    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="colorPrimary">@color/primary</item>
+        <!-- darker variant for the status bar and contextual app bars -->
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <!--   theme UI controls like checkboxes and text fields e.g. FloatActionButton -->
+        <item name="colorAccent">@color/accent</item>
+        <!-- Title Text Color -->
+        <item name="android:textColorPrimary">@color/primary_text</item>
+        <!-- color of the menu overflow icon (three vertical dots) -->
+        <item name="android:textColorSecondary">@color/secondary_text</item>
+    </style>
+
+    <style name="AppOverlayTheme" parent="@style/Theme.AppCompat.Light">
+        <item name="windowNoTitle">true</item>
+        <item name="windowActionBar">false</item>
+        <item name="android:windowFullscreen">true</item>
+        <item name="android:windowContentOverlay">@null</item>
+
+        <item name="colorPrimary">@color/primary</item>
+        <!-- darker variant for the status bar and contextual app bars -->
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <!--   theme UI controls like checkboxes and text fields e.g. FloatActionButton -->
+        <item name="colorAccent">@color/accent</item>
+        <!-- Title Text Color -->
+        <item name="android:textColorPrimary">@color/primary_text</item>
+        <!-- color of the menu overflow icon (three vertical dots) -->
+        <item name="android:textColorSecondary">@color/secondary_text</item>
+    </style>
+
+    <style name="TransparentToolbar" parent="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
+        <item name="android:windowActionBarOverlay">true</item>
+        <!-- Support Library compability -->
+        <item name="windowActionBarOverlay">true</item>
+    </style>
+</resources>
diff --git a/zxing/zxing/build.gradle b/zxing/build.gradle
similarity index 56%
rename from zxing/zxing/build.gradle
rename to zxing/build.gradle
index 9155dd0..c6fb3e4 100644
--- a/zxing/zxing/build.gradle
+++ b/zxing/build.gradle
@@ -9,13 +9,7 @@ ext {
 }
 
 dependencies {
-    //compile project(":core")
-    compile 'me.dm7.barcodescanner:core:1.8.3'
-    compile 'com.google.zxing:core:3.2.1'
-}
-
-android {
-    defaultConfig {
-        //applicationId "${project.group}.zxing"
-    }
+//    api project(":core")
+    api libraries.barcodescanner_core
+    api libraries.zxing_core
 }
diff --git a/zxing/sample/build.gradle b/zxing/sample/build.gradle
deleted file mode 100644
index 702d1dc..0000000
--- a/zxing/sample/build.gradle
+++ /dev/null
@@ -1,14 +0,0 @@
-apply plugin: 'com.android.application'
-
-dependencies {
-    //compile project(":zxing:zxing")
-    compile 'me.dm7.barcodescanner:zxing:1.8.3'
-    compile supportLibraryDependency
-    compile 'com.android.support:appcompat-v7:23.0.1'
-}
-
-android {
-    defaultConfig {
-        applicationId "${project.group}.zxing.sample"
-    }
-}
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java b/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java
deleted file mode 100644
index ffe6fca..0000000
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/MainActivity.java
+++ /dev/null
@@ -1,39 +0,0 @@
-package me.dm7.barcodescanner.zxing.sample;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
-import android.view.View;
-
-public class MainActivity extends ActionBarActivity {
-    @Override
-    public void onCreate(Bundle state) {
-        super.onCreate(state);
-        setContentView(R.layout.activity_main);
-    }
-
-    public void launchSimpleActivity(View v) {
-        Intent intent = new Intent(this, SimpleScannerActivity.class);
-        startActivity(intent);
-    }
-
-    public void launchSimpleFragmentActivity(View v) {
-        Intent intent = new Intent(this, SimpleScannerFragmentActivity.class);
-        startActivity(intent);
-    }
-
-    public void launchActivity(View v) {
-        Intent intent = new Intent(this, ScannerActivity.class);
-        startActivity(intent);
-    }
-
-    public void launchFragmentActivity(View v) {
-        Intent intent = new Intent(this, ScannerFragmentActivity.class);
-        startActivity(intent);
-    }
-
-    public void launchFullScreenScannerFragmentActivity(View v) {
-        Intent intent = new Intent(this, FullScreenScannerFragmentActivity.class);
-        startActivity(intent);
-    }
-}
\ No newline at end of file
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragmentActivity.java b/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragmentActivity.java
deleted file mode 100644
index 92317b9..0000000
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragmentActivity.java
+++ /dev/null
@@ -1,12 +0,0 @@
-package me.dm7.barcodescanner.zxing.sample;
-
-import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
-
-public class ScannerFragmentActivity extends ActionBarActivity {
-    @Override
-    public void onCreate(Bundle state) {
-        super.onCreate(state);
-        setContentView(R.layout.activity_scanner_fragment);
-    }
-}
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/layout/activity_main.xml b/zxing/sample/src/main/res/layout/activity_main.xml
deleted file mode 100644
index 6743760..0000000
--- a/zxing/sample/src/main/res/layout/activity_main.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:gravity="center">
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/simple_activity_sample"
-            android:onClick="launchSimpleActivity" />
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/simple_fragment_sample"
-            android:onClick="launchSimpleFragmentActivity" />
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/activity_sample"
-            android:onClick="launchActivity" />
-    <Button android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:text="@string/fragment_sample"
-            android:onClick="launchFragmentActivity" />
-    <Button android:layout_height="wrap_content"
-        android:layout_width="match_parent"
-        android:text="@string/full_screen_sample"
-        android:onClick="launchFullScreenScannerFragmentActivity" />
-</LinearLayout>
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/layout/activity_scanner_fragment.xml b/zxing/sample/src/main/res/layout/activity_scanner_fragment.xml
deleted file mode 100644
index 05ea74f..0000000
--- a/zxing/sample/src/main/res/layout/activity_scanner_fragment.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-    <fragment android:name="me.dm7.barcodescanner.zxing.sample.ScannerFragment"
-              android:id="@+id/scanner_fragment"
-              android:layout_weight="1"
-              android:layout_width="match_parent"
-              android:layout_height="0dip" />
-</LinearLayout>
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/layout/activity_simple_scanner_fragment.xml b/zxing/sample/src/main/res/layout/activity_simple_scanner_fragment.xml
deleted file mode 100644
index d56c4a1..0000000
--- a/zxing/sample/src/main/res/layout/activity_simple_scanner_fragment.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:orientation="vertical"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-    <fragment android:name="me.dm7.barcodescanner.zxing.sample.SimpleScannerFragment"
-              android:id="@+id/scanner_fragment"
-              android:layout_weight="1"
-              android:layout_width="match_parent"
-              android:layout_height="0dip" />
-</LinearLayout>
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/values/colors.xml b/zxing/sample/src/main/res/values/colors.xml
deleted file mode 100644
index 424abd1..0000000
--- a/zxing/sample/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>    
-    <color name="actionbar_opacity">#DD000000</color>
-</resources>
\ No newline at end of file
diff --git a/zxing/sample/src/main/res/values/styles.xml b/zxing/sample/src/main/res/values/styles.xml
deleted file mode 100644
index 515020e..0000000
--- a/zxing/sample/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<resources>
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-    </style>
-
-    <!-- Base application theme. -->
-    <style name="AppOverlayTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-        <item name="android:windowActionBarOverlay">true</item>
-        <item name="android:actionBarStyle">@style/ActionBarStyle.Transparent</item>
-
-        <!-- Support library compatibility -->
-        <item name="windowActionBarOverlay">true</item>
-    </style>
-
-    <style name="AppFullScreenTheme" parent="@style/Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowNoTitle">true</item>
-        <item name="windowActionBar">false</item>
-        <item name="android:windowFullscreen">true</item>
-        <item name="android:windowContentOverlay">@null</item>
-    </style>
-
-    <style name="ActionBarStyle.Transparent" parent="@android:Widget.ActionBar">
-        <item name="android:background">#99000000</item>
-        <item name="android:titleTextStyle">@style/ActionBarStyle.Transparent.TitleTextStyle</item>
-        <item name="android:backgroundSplit">#99000000</item>
-    </style>
-
-    <style name="ActionBarStyle.Transparent.TitleTextStyle" parent="@android:style/TextAppearance.Holo.Widget.ActionBar.Title">
-        <item name="android:textColor">@android:color/white</item>
-    </style>
-
-</resources>
diff --git a/zxing/zxing/src/main/AndroidManifest.xml b/zxing/src/main/AndroidManifest.xml
similarity index 100%
rename from zxing/zxing/src/main/AndroidManifest.xml
rename to zxing/src/main/AndroidManifest.xml
diff --git a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
new file mode 100644
index 0000000..d1717ba
--- /dev/null
+++ b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
@@ -0,0 +1,198 @@
+package me.dm7.barcodescanner.zxing;
+
+import android.content.Context;
+import android.content.res.Configuration;
+import android.graphics.Rect;
+import android.hardware.Camera;
+import android.os.Handler;
+import android.os.Looper;
+import android.util.AttributeSet;
+import android.util.Log;
+
+import com.google.zxing.BarcodeFormat;
+import com.google.zxing.BinaryBitmap;
+import com.google.zxing.DecodeHintType;
+import com.google.zxing.LuminanceSource;
+import com.google.zxing.MultiFormatReader;
+import com.google.zxing.NotFoundException;
+import com.google.zxing.PlanarYUVLuminanceSource;
+import com.google.zxing.ReaderException;
+import com.google.zxing.Result;
+import com.google.zxing.common.HybridBinarizer;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.EnumMap;
+import java.util.List;
+import java.util.Map;
+
+import me.dm7.barcodescanner.core.BarcodeScannerView;
+import me.dm7.barcodescanner.core.DisplayUtils;
+
+public class ZXingScannerView extends BarcodeScannerView {
+    private static final String TAG = "ZXingScannerView";
+
+    public interface ResultHandler {
+        void handleResult(Result rawResult);
+    }
+
+    private MultiFormatReader mMultiFormatReader;
+    public static final List<BarcodeFormat> ALL_FORMATS = new ArrayList<>();
+    private List<BarcodeFormat> mFormats;
+    private ResultHandler mResultHandler;
+
+    static {
+        ALL_FORMATS.add(BarcodeFormat.AZTEC);
+        ALL_FORMATS.add(BarcodeFormat.CODABAR);
+        ALL_FORMATS.add(BarcodeFormat.CODE_39);
+        ALL_FORMATS.add(BarcodeFormat.CODE_93);
+        ALL_FORMATS.add(BarcodeFormat.CODE_128);
+        ALL_FORMATS.add(BarcodeFormat.DATA_MATRIX);
+        ALL_FORMATS.add(BarcodeFormat.EAN_8);
+        ALL_FORMATS.add(BarcodeFormat.EAN_13);
+        ALL_FORMATS.add(BarcodeFormat.ITF);
+        ALL_FORMATS.add(BarcodeFormat.MAXICODE);
+        ALL_FORMATS.add(BarcodeFormat.PDF_417);
+        ALL_FORMATS.add(BarcodeFormat.QR_CODE);
+        ALL_FORMATS.add(BarcodeFormat.RSS_14);
+        ALL_FORMATS.add(BarcodeFormat.RSS_EXPANDED);
+        ALL_FORMATS.add(BarcodeFormat.UPC_A);
+        ALL_FORMATS.add(BarcodeFormat.UPC_E);
+        ALL_FORMATS.add(BarcodeFormat.UPC_EAN_EXTENSION);
+    }
+
+    public ZXingScannerView(Context context) {
+        super(context);
+        initMultiFormatReader();
+    }
+
+    public ZXingScannerView(Context context, AttributeSet attributeSet) {
+        super(context, attributeSet);
+        initMultiFormatReader();
+    }
+
+    public void setFormats(List<BarcodeFormat> formats) {
+        mFormats = formats;
+        initMultiFormatReader();
+    }
+
+    public void setResultHandler(ResultHandler resultHandler) {
+        mResultHandler = resultHandler;
+    }
+
+    public Collection<BarcodeFormat> getFormats() {
+        if(mFormats == null) {
+            return ALL_FORMATS;
+        }
+        return mFormats;
+    }
+
+    private void initMultiFormatReader() {
+        Map<DecodeHintType,Object> hints = new EnumMap<>(DecodeHintType.class);
+        hints.put(DecodeHintType.POSSIBLE_FORMATS, getFormats());
+        mMultiFormatReader = new MultiFormatReader();
+        mMultiFormatReader.setHints(hints);
+    }
+
+    @Override
+    public void onPreviewFrame(byte[] data, Camera camera) {
+        if(mResultHandler == null) {
+            return;
+        }
+        
+        try {
+            Camera.Parameters parameters = camera.getParameters();
+            Camera.Size size = parameters.getPreviewSize();
+            int width = size.width;
+            int height = size.height;
+
+            if (DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
+                int rotationCount = getRotationCount();
+                if (rotationCount == 1 || rotationCount == 3) {
+                    int tmp = width;
+                    width = height;
+                    height = tmp;
+                }
+                data = getRotatedData(data, camera);
+            }
+
+            Result rawResult = null;
+            PlanarYUVLuminanceSource source = buildLuminanceSource(data, width, height);
+
+            if (source != null) {
+                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
+                try {
+                    rawResult = mMultiFormatReader.decodeWithState(bitmap);
+                } catch (ReaderException re) {
+                    // continue
+                } catch (NullPointerException npe) {
+                    // This is terrible
+                } catch (ArrayIndexOutOfBoundsException aoe) {
+
+                } finally {
+                    mMultiFormatReader.reset();
+                }
+
+                if (rawResult == null) {
+                    LuminanceSource invertedSource = source.invert();
+                    bitmap = new BinaryBitmap(new HybridBinarizer(invertedSource));
+                    try {
+                        rawResult = mMultiFormatReader.decodeWithState(bitmap);
+                    } catch (NotFoundException e) {
+                        // continue
+                    } finally {
+                        mMultiFormatReader.reset();
+                    }
+                }
+            }
+
+            final Result finalRawResult = rawResult;
+
+            if (finalRawResult != null) {
+                Handler handler = new Handler(Looper.getMainLooper());
+                handler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        // Stopping the preview can take a little long.
+                        // So we want to set result handler to null to discard subsequent calls to
+                        // onPreviewFrame.
+                        ResultHandler tmpResultHandler = mResultHandler;
+                        mResultHandler = null;
+
+                        stopCameraPreview();
+                        if (tmpResultHandler != null) {
+                            tmpResultHandler.handleResult(finalRawResult);
+                        }
+                    }
+                });
+            } else {
+                camera.setOneShotPreviewCallback(this);
+            }
+        } catch(RuntimeException e) {
+            // TODO: Terrible hack. It is possible that this method is invoked after camera is released.
+            Log.e(TAG, e.toString(), e);
+        }
+    }
+
+    public void resumeCameraPreview(ResultHandler resultHandler) {
+        mResultHandler = resultHandler;
+        super.resumeCameraPreview();
+    }
+
+    public PlanarYUVLuminanceSource buildLuminanceSource(byte[] data, int width, int height) {
+        Rect rect = getFramingRectInPreview(width, height);
+        if (rect == null) {
+            return null;
+        }
+        // Go ahead and assume it's YUV rather than die.
+        PlanarYUVLuminanceSource source = null;
+
+        try {
+            source = new PlanarYUVLuminanceSource(data, width, height, rect.left, rect.top,
+                    rect.width(), rect.height(), false);
+        } catch(Exception e) {
+        }
+
+        return source;
+    }
+}
diff --git a/zxing/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java b/zxing/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
deleted file mode 100644
index fc1933d..0000000
--- a/zxing/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
+++ /dev/null
@@ -1,149 +0,0 @@
-package me.dm7.barcodescanner.zxing;
-
-import android.content.Context;
-import android.content.res.Configuration;
-import android.graphics.Rect;
-import android.hardware.Camera;
-import android.util.AttributeSet;
-
-import com.google.zxing.BarcodeFormat;
-import com.google.zxing.BinaryBitmap;
-import com.google.zxing.DecodeHintType;
-import com.google.zxing.MultiFormatReader;
-import com.google.zxing.PlanarYUVLuminanceSource;
-import com.google.zxing.ReaderException;
-import com.google.zxing.Result;
-import com.google.zxing.common.HybridBinarizer;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.EnumMap;
-import java.util.List;
-import java.util.Map;
-
-import me.dm7.barcodescanner.core.BarcodeScannerView;
-import me.dm7.barcodescanner.core.DisplayUtils;
-
-public class ZXingScannerView extends BarcodeScannerView {
-    public interface ResultHandler {
-        public void handleResult(Result rawResult);
-    }
-
-    private MultiFormatReader mMultiFormatReader;
-    public static final List<BarcodeFormat> ALL_FORMATS = new ArrayList<BarcodeFormat>();
-    private List<BarcodeFormat> mFormats;
-    private ResultHandler mResultHandler;
-
-    static {
-        ALL_FORMATS.add(BarcodeFormat.UPC_A);
-        ALL_FORMATS.add(BarcodeFormat.UPC_E);
-        ALL_FORMATS.add(BarcodeFormat.EAN_13);
-        ALL_FORMATS.add(BarcodeFormat.EAN_8);
-        ALL_FORMATS.add(BarcodeFormat.RSS_14);
-        ALL_FORMATS.add(BarcodeFormat.CODE_39);
-        ALL_FORMATS.add(BarcodeFormat.CODE_93);
-        ALL_FORMATS.add(BarcodeFormat.CODE_128);
-        ALL_FORMATS.add(BarcodeFormat.ITF);
-        ALL_FORMATS.add(BarcodeFormat.CODABAR);
-        ALL_FORMATS.add(BarcodeFormat.QR_CODE);
-        ALL_FORMATS.add(BarcodeFormat.DATA_MATRIX);
-        ALL_FORMATS.add(BarcodeFormat.PDF_417);
-    }
-
-    public ZXingScannerView(Context context) {
-        super(context);
-        initMultiFormatReader();
-    }
-
-    public ZXingScannerView(Context context, AttributeSet attributeSet) {
-        super(context, attributeSet);
-        initMultiFormatReader();
-    }
-
-    public void setFormats(List<BarcodeFormat> formats) {
-        mFormats = formats;
-        initMultiFormatReader();
-    }
-
-    public void setResultHandler(ResultHandler resultHandler) {
-        mResultHandler = resultHandler;
-    }
-
-    public Collection<BarcodeFormat> getFormats() {
-        if(mFormats == null) {
-            return ALL_FORMATS;
-        }
-        return mFormats;
-    }
-
-    private void initMultiFormatReader() {
-        Map<DecodeHintType,Object> hints = new EnumMap<DecodeHintType,Object>(DecodeHintType.class);
-        hints.put(DecodeHintType.POSSIBLE_FORMATS, getFormats());
-        mMultiFormatReader = new MultiFormatReader();
-        mMultiFormatReader.setHints(hints);
-    }
-
-    @Override
-    public void onPreviewFrame(byte[] data, Camera camera) {
-        Camera.Parameters parameters = camera.getParameters();
-        Camera.Size size = parameters.getPreviewSize();
-        int width = size.width;
-        int height = size.height;
-
-        if(DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
-            byte[] rotatedData = new byte[data.length];
-            for (int y = 0; y < height; y++) {
-                for (int x = 0; x < width; x++)
-                    rotatedData[x * height + height - y - 1] = data[x + y * width];
-            }
-            int tmp = width;
-            width = height;
-            height = tmp;
-            data = rotatedData;
-        }
-
-        Result rawResult = null;
-        PlanarYUVLuminanceSource source = buildLuminanceSource(data, width, height);
-
-        if(source != null) {
-            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
-            try {
-                rawResult = mMultiFormatReader.decodeWithState(bitmap);
-            } catch (ReaderException re) {
-                // continue
-            } catch (NullPointerException npe) {
-                // This is terrible
-            } catch (ArrayIndexOutOfBoundsException aoe) {
-
-            } finally {
-                mMultiFormatReader.reset();
-            }
-        }
-
-        if (rawResult != null) {
-            stopCamera();
-            if(mResultHandler != null) {
-                mResultHandler.handleResult(rawResult);
-            }
-        } else {
-            camera.setOneShotPreviewCallback(this);
-        }
-    }
-
-    public PlanarYUVLuminanceSource buildLuminanceSource(byte[] data, int width, int height) {
-        Rect rect = getFramingRectInPreview(width, height);
-        if (rect == null) {
-            return null;
-        }
-        // Go ahead and assume it's YUV rather than die.
-        PlanarYUVLuminanceSource source = null;
-
-        try {
-            source = new PlanarYUVLuminanceSource(data, width, height, rect.left, rect.top,
-                    rect.width(), rect.height(), false);
-        } catch(Exception e) {
-        }
-
-        return source;
-    }
-}
\ No newline at end of file
