diff --git a/zxing/build.gradle b/zxing/build.gradle
index 1ae1bb3..3759063 100644
--- a/zxing/build.gradle
+++ b/zxing/build.gradle
@@ -12,6 +12,6 @@ ext {
 
 dependencies {
     //compile project(":core")
-    compile 'com.github.pasanw.barcodescanner:core:2.0.8'
+    compile 'com.github.pasanw.barcodescanner:core:2.1.1'
     compile 'com.google.zxing:core:3.2.1'
 }
diff --git a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
index 0a57494..3c170dd 100644
--- a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
+++ b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
@@ -1,6 +1,7 @@
 package me.dm7.barcodescanner.zxing;
 
 import android.content.Context;
+import android.content.res.Configuration;
 import android.graphics.Rect;
 import android.hardware.Camera;
 import android.os.Handler;
@@ -24,6 +25,7 @@
 import java.util.Map;
 
 import me.dm7.barcodescanner.core.BarcodeScannerView;
+import me.dm7.barcodescanner.core.DisplayUtils;
 
 public class ZXingScannerView extends BarcodeScannerView {
     public interface CameraStatusCallback {
@@ -116,6 +118,37 @@ public void run() {
             int width = size.width;
             int height = size.height;
 
+            int displayOrientation = mPreview.getDisplayOrientation();
+            int rotationCount = 0;
+            switch (displayOrientation) {
+                case 0:
+                    rotationCount = 0;
+                    break;
+                case 90:
+                    rotationCount = 1;
+                    break;
+                case 180:
+                    rotationCount = 2;
+                    break;
+                case 270:
+                    rotationCount = 3;
+                    break;
+            }
+
+            for (int i = 0; i < rotationCount; i++) {
+                if (DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
+                    byte[] rotatedData = new byte[data.length];
+                    for (int y = 0; y < height; y++) {
+                        for (int x = 0; x < width; x++)
+                            rotatedData[x * height + height - y - 1] = data[x + y * width];
+                    }
+                    int tmp = width;
+                    width = height;
+                    height = tmp;
+                    data = rotatedData;
+                }
+            }
+
             Result rawResult = null;
             PlanarYUVLuminanceSource source = buildLuminanceSource(data, width, height);
 
