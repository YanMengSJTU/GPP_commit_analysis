diff --git a/README.md b/README.md
index 857c7bf..24bfee5 100644
--- a/README.md
+++ b/README.md
@@ -17,7 +17,7 @@ Installation
 
 Add the following dependency to your build.gradle file.
 
-compile 'me.dm7.barcodescanner:zxing:1.0'
+compile 'me.dm7.barcodescanner:zxing:1.5'
 
 Simple Usage
 ------------
@@ -110,7 +110,7 @@ Installation
 
 Add the following dependency to your build.gradle file.
 
-compile 'me.dm7.barcodescanner:zbar:1.0'
+compile 'me.dm7.barcodescanner:zbar:1.5'
 
 Simple Usage
 ------------
@@ -208,6 +208,13 @@ Almost all of the code for these library projects is based on:
 2. The ZXing project: https://github.com/zxing/zxing
 3. The ZBar Android SDK: http://sourceforge.net/projects/zbar/files/AndroidSDK/
 
+Contributors
+============
+
+* [Rking788](https://github.com/Rking788)
+* [furedal](https://github.com/furedal)
+* [Yarikx](https://github.com/Yarikx)
+
 License
 =======
 Apache License, Version 2.0
diff --git a/core/build.gradle b/core/build.gradle
index 8b224e8..dc4f74e 100644
--- a/core/build.gradle
+++ b/core/build.gradle
@@ -9,11 +9,11 @@ ext {
 }
 
 dependencies {
-    compile ext.supportLibraryDependency
+    compile supportLibraryDependency
 }
 
 android {
     defaultConfig {
-        packageName "${project.group}.core"
+        applicationId "${project.group}.core"
     }
-}
\ No newline at end of file
+}
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
index 1f1b2a6..dfdee10 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
@@ -5,6 +5,7 @@
 import android.graphics.Point;
 import android.graphics.Rect;
 import android.hardware.Camera;
+import android.os.AsyncTask;
 import android.util.AttributeSet;
 import android.view.Gravity;
 import android.widget.FrameLayout;
@@ -40,7 +41,11 @@ public void setupLayout() {
     }
 
     public void startCamera() {
-        mCamera = CameraUtils.getCameraInstance();
+        startCamera(-1);
+    }
+
+    public void startCamera(int cameraId) {
+        mCamera = CameraUtils.getCameraInstance(cameraId);
         if(mCamera != null) {
             mViewFinderView.setupViewFinder();
             mPreview.setCamera(mCamera, this);
@@ -57,25 +62,20 @@ public void stopCamera() {
         }
     }
 
-    public synchronized Rect getFramingRectInPreview(int width, int height) {
+    public synchronized Rect getFramingRectInPreview(int previewWidth, int previewHeight) {
         if (mFramingRectInPreview == null) {
             Rect framingRect = mViewFinderView.getFramingRect();
-            if (framingRect == null) {
+            int viewFinderViewWidth = mViewFinderView.getWidth();
+            int viewFinderViewHeight = mViewFinderView.getHeight();
+            if (framingRect == null || viewFinderViewWidth == 0 || viewFinderViewHeight == 0) {
                 return null;
             }
-            Rect rect = new Rect(framingRect);
-            Point screenResolution = DisplayUtils.getScreenResolution(getContext());
-            Point cameraResolution = new Point(width, height);
 
-            if (cameraResolution == null || screenResolution == null) {
-                // Called early, before init even finished
-                return null;
-            }
-
-            rect.left = rect.left * cameraResolution.x / screenResolution.x;
-            rect.right = rect.right * cameraResolution.x / screenResolution.x;
-            rect.top = rect.top * cameraResolution.y / screenResolution.y;
-            rect.bottom = rect.bottom * cameraResolution.y / screenResolution.y;
+            Rect rect = new Rect(framingRect);
+            rect.left = rect.left * previewWidth / viewFinderViewWidth;
+            rect.right = rect.right * previewWidth / viewFinderViewWidth;
+            rect.top = rect.top * previewHeight / viewFinderViewHeight;
+            rect.bottom = rect.bottom * previewHeight / viewFinderViewHeight;
 
             mFramingRectInPreview = rect;
         }
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
index 5863d40..2a57a0a 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
@@ -22,6 +22,7 @@
     private Handler mAutoFocusHandler;
     private boolean mPreviewing = true;
     private boolean mAutoFocus = true;
+    private boolean mSurfaceCreated = false;
     private Camera.PreviewCallback mPreviewCallback;
 
     public CameraPreview(Context context) {
@@ -52,7 +53,7 @@ public void initCameraPreview() {
 
     @Override
     public void surfaceCreated(SurfaceHolder surfaceHolder) {
-        showCameraPreview();
+        mSurfaceCreated = true;
     }
 
     @Override
@@ -66,6 +67,7 @@ public void surfaceChanged(SurfaceHolder surfaceHolder, int i, int i2, int i3) {
 
     @Override
     public void surfaceDestroyed(SurfaceHolder surfaceHolder) {
+        mSurfaceCreated = false;
         stopCameraPreview();
     }
 
@@ -227,7 +229,7 @@ public void setAutoFocus(boolean state) {
 
     private Runnable doAutoFocus = new Runnable() {
         public void run() {
-            if(mCamera != null && mPreviewing && mAutoFocus) {
+            if(mCamera != null && mPreviewing && mAutoFocus && mSurfaceCreated) {
                 mCamera.autoFocus(autoFocusCB);
             }
         }
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
index f3f3791..9c650af 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
@@ -1,15 +1,24 @@
 package me.dm7.barcodescanner.core;
 
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.pm.PackageManager;
 import android.hardware.Camera;
+import android.os.Build;
 
 public class CameraUtils {
     /** A safe way to get an instance of the Camera object. */
-    public static Camera getCameraInstance(){
+    @TargetApi(Build.VERSION_CODES.GINGERBREAD)
+    public static Camera getCameraInstance(int cameraId){
         Camera c = null;
         try {
-            c = Camera.open(); // attempt to get a Camera instance
+            // attempt to get a Camera instance
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD
+                && cameraId >= 0 && cameraId < Camera.getNumberOfCameras()) {
+              c = Camera.open(cameraId);
+            } else {
+              c = Camera.open();
+            }
         }
         catch (Exception e){
             // Camera is not available (in use or does not exist)
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java b/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java
index a8b793c..9b44f81 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/ViewFinderView.java
@@ -4,7 +4,6 @@
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.graphics.Canvas;
-import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Point;
 import android.graphics.Rect;
@@ -43,7 +42,7 @@ public ViewFinderView(Context context, AttributeSet attrs) {
     }
 
     public void setupViewFinder() {
-        initFramingRect();
+        updateFramingRect();
         invalidate();
     }
 
@@ -115,9 +114,14 @@ public void drawLaser(Canvas canvas) {
                 mFramingRect.bottom + POINT_SIZE);
     }
 
-    public synchronized void initFramingRect() {
-        Point screenResolution = DisplayUtils.getScreenResolution(getContext());
-        if (screenResolution == null) {
+    @Override
+    protected void onSizeChanged(int xNew, int yNew, int xOld, int yOld) {
+        updateFramingRect();
+    }
+
+    public synchronized void updateFramingRect() {
+        Point viewResolution = new Point(getWidth(), getHeight());
+        if (viewResolution == null) {
             return;
         }
         int width;
@@ -125,15 +129,15 @@ public synchronized void initFramingRect() {
         int orientation = DisplayUtils.getScreenOrientation(getContext());
 
         if(orientation != Configuration.ORIENTATION_PORTRAIT) {
-            width = findDesiredDimensionInRange(LANDSCAPE_WIDTH_RATIO, screenResolution.x, MIN_FRAME_WIDTH, LANDSCAPE_MAX_FRAME_WIDTH);
-            height = findDesiredDimensionInRange(LANDSCAPE_HEIGHT_RATIO, screenResolution.y, MIN_FRAME_HEIGHT, LANDSCAPE_MAX_FRAME_HEIGHT);
+            width = findDesiredDimensionInRange(LANDSCAPE_WIDTH_RATIO, viewResolution.x, MIN_FRAME_WIDTH, LANDSCAPE_MAX_FRAME_WIDTH);
+            height = findDesiredDimensionInRange(LANDSCAPE_HEIGHT_RATIO, viewResolution.y, MIN_FRAME_HEIGHT, LANDSCAPE_MAX_FRAME_HEIGHT);
         } else {
-            width = findDesiredDimensionInRange(PORTRAIT_WIDTH_RATIO, screenResolution.x, MIN_FRAME_WIDTH, PORTRAIT_MAX_FRAME_WIDTH);
-            height = findDesiredDimensionInRange(PORTRAIT_HEIGHT_RATIO, screenResolution.y, MIN_FRAME_HEIGHT, PORTRAIT_MAX_FRAME_HEIGHT);
+            width = findDesiredDimensionInRange(PORTRAIT_WIDTH_RATIO, viewResolution.x, MIN_FRAME_WIDTH, PORTRAIT_MAX_FRAME_WIDTH);
+            height = findDesiredDimensionInRange(PORTRAIT_HEIGHT_RATIO, viewResolution.y, MIN_FRAME_HEIGHT, PORTRAIT_MAX_FRAME_HEIGHT);
         }
 
-        int leftOffset = (screenResolution.x - width) / 2;
-        int topOffset = (screenResolution.y - height) / 2;
+        int leftOffset = (viewResolution.x - width) / 2;
+        int topOffset = (viewResolution.y - height) / 2;
         mFramingRect = new Rect(leftOffset, topOffset, leftOffset + width, topOffset + height);
     }
 
diff --git a/zbar/sample/build.gradle b/zbar/sample/build.gradle
index 1ea177e..f78f976 100644
--- a/zbar/sample/build.gradle
+++ b/zbar/sample/build.gradle
@@ -1,13 +1,14 @@
 apply plugin: 'android'
 
 dependencies {
-    compile 'me.dm7.barcodescanner:zbar:1.0'
+    //compile project(":zbar:zbar")
+    compile 'me.dm7.barcodescanner:zbar:1.5'
     compile supportLibraryDependency
-    compile 'com.android.support:appcompat-v7:19.0.1'
+    compile 'com.android.support:appcompat-v7:20.0.0'
 }
 
 android {
     defaultConfig {
-        packageName "${project.group}.zbar.sample"
+        applicationId "${project.group}.zbar.sample"
     }
 }
diff --git a/zbar/sample/src/main/res/layout/activity_scanner_fragment.xml b/zbar/sample/src/main/res/layout/activity_scanner_fragment.xml
index 05ea74f..97477d6 100644
--- a/zbar/sample/src/main/res/layout/activity_scanner_fragment.xml
+++ b/zbar/sample/src/main/res/layout/activity_scanner_fragment.xml
@@ -5,9 +5,9 @@
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
-    <fragment android:name="me.dm7.barcodescanner.zxing.sample.ScannerFragment"
+    <fragment android:name="me.dm7.barcodescanner.zbar.sample.ScannerFragment"
               android:id="@+id/scanner_fragment"
               android:layout_weight="1"
               android:layout_width="match_parent"
               android:layout_height="0dip" />
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/zbar/sample/src/main/res/layout/activity_simple_scanner_fragment.xml b/zbar/sample/src/main/res/layout/activity_simple_scanner_fragment.xml
index d56c4a1..8962b1d 100644
--- a/zbar/sample/src/main/res/layout/activity_simple_scanner_fragment.xml
+++ b/zbar/sample/src/main/res/layout/activity_simple_scanner_fragment.xml
@@ -5,9 +5,9 @@
               android:orientation="vertical"
               android:layout_width="match_parent"
               android:layout_height="match_parent">
-    <fragment android:name="me.dm7.barcodescanner.zxing.sample.SimpleScannerFragment"
+    <fragment android:name="me.dm7.barcodescanner.zbar.sample.SimpleScannerFragment"
               android:id="@+id/scanner_fragment"
               android:layout_weight="1"
               android:layout_width="match_parent"
               android:layout_height="0dip" />
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/zbar/zbar/build.gradle b/zbar/zbar/build.gradle
index 9229fe3..a4eaffe 100644
--- a/zbar/zbar/build.gradle
+++ b/zbar/zbar/build.gradle
@@ -9,7 +9,8 @@ ext {
 }
 
 dependencies {
-    compile 'me.dm7.barcodescanner:core:1.0'
+    //compile project(":core")
+    compile 'me.dm7.barcodescanner:core:1.5'
     compile fileTree(dir: 'libs', include: '*.jar')
 }
 
@@ -20,9 +21,10 @@ android {
     defaultConfig {
         minSdkVersion 14
         targetSdkVersion 21
+        applicationId "${project.group}.zbar"
     }
 
     lintOptions {
         abortOnError false
     }
-}
\ No newline at end of file
+}
diff --git a/zbar/zbar/libs/armeabi-v7a.jar b/zbar/zbar/libs/armeabi-v7a.jar
index 24a054b..3dcaf20 100644
Binary files a/zbar/zbar/libs/armeabi-v7a.jar and b/zbar/zbar/libs/armeabi-v7a.jar differ
diff --git a/zbar/zbar/libs/armeabi.jar b/zbar/zbar/libs/armeabi.jar
index 8390d60..14830ee 100644
Binary files a/zbar/zbar/libs/armeabi.jar and b/zbar/zbar/libs/armeabi.jar differ
diff --git a/zbar/zbar/libs/x86.jar b/zbar/zbar/libs/x86.jar
index b5f176c..37ebf41 100644
Binary files a/zbar/zbar/libs/x86.jar and b/zbar/zbar/libs/x86.jar differ
diff --git a/zxing/sample/build.gradle b/zxing/sample/build.gradle
index 359d289..43260b6 100644
--- a/zxing/sample/build.gradle
+++ b/zxing/sample/build.gradle
@@ -1,13 +1,14 @@
 apply plugin: 'android'
 
 dependencies {
-    compile 'me.dm7.barcodescanner:zxing:1.0'
+    //compile project(":zxing:zxing")
+    compile 'me.dm7.barcodescanner:zxing:1.5'
     compile supportLibraryDependency
-    compile 'com.android.support:appcompat-v7:19.0.1'
+    compile 'com.android.support:appcompat-v7:20.0.0'
 }
 
 android {
     defaultConfig {
-        packageName "${project.group}.zxing.sample"
+        applicationId "${project.group}.zxing.sample"
     }
 }
diff --git a/zxing/zxing/build.gradle b/zxing/zxing/build.gradle
index 30b83a1..eef194f 100644
--- a/zxing/zxing/build.gradle
+++ b/zxing/zxing/build.gradle
@@ -9,12 +9,13 @@ ext {
 }
 
 dependencies {
-    compile 'me.dm7.barcodescanner:core:1.0'
-    compile 'com.google.zxing:core:2.2'
+    //compile project(":core")
+    compile 'me.dm7.barcodescanner:core:1.5'
+    compile 'com.google.zxing:core:3.1.0'
 }
 
 android {
     defaultConfig {
-        packageName "${project.group}.zxing"
+        applicationId "${project.group}.zxing"
     }
 }
