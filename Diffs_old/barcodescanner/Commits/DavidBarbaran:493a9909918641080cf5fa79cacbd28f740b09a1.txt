diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.java
deleted file mode 100644
index 2d4bcee..0000000
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.java
+++ /dev/null
@@ -1,37 +0,0 @@
-package me.dm7.barcodescanner.core;
-
-
-import android.hardware.Camera;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-
-// This code is mostly based on the top answer here: http://stackoverflow.com/questions/18149964/best-use-of-handlerthread-over-other-similar-classes
-public class CameraHandlerThread extends HandlerThread {
-    private static final String LOG_TAG = "CameraHandlerThread";
-
-    private BarcodeScannerView mScannerView;
-
-    public CameraHandlerThread(BarcodeScannerView scannerView) {
-        super("CameraHandlerThread");
-        mScannerView = scannerView;
-        start();
-    }
-
-    public void startCamera(final int cameraId) {
-        Handler localHandler = new Handler(getLooper());
-        localHandler.post(new Runnable() {
-            @Override
-            public void run() {
-                final Camera camera = CameraUtils.getCameraInstance(cameraId);
-                Handler mainHandler = new Handler(Looper.getMainLooper());
-                mainHandler.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        mScannerView.setupCameraPreview(CameraWrapper.getWrapper(camera, cameraId));
-                    }
-                });
-            }
-        });
-    }
-}
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.kt b/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.kt
new file mode 100644
index 0000000..b0f86de
--- /dev/null
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraHandlerThread.kt
@@ -0,0 +1,26 @@
+package me.dm7.barcodescanner.core
+
+import android.os.Handler
+import android.os.HandlerThread
+import android.os.Looper
+
+// This code is mostly based on the top answer here: http://stackoverflow.com/questions/18149964/best-use-of-handlerthread-over-other-similar-classes
+class CameraHandlerThread constructor(private val mScannerView: BarcodeScannerView) : HandlerThread(LOG_TAG) {
+
+    companion object {
+        const val LOG_TAG = "CameraHandlerThread"
+    }
+
+    init {
+        start()
+    }
+
+    fun startCamera(cameraId: Int) {
+        val localHandler = Handler(looper)
+        localHandler.post {
+            val camera = CameraUtils.getCameraInstance(cameraId)
+            val mainHandler = Handler(Looper.getMainLooper())
+            mainHandler.post { mScannerView.setupCameraPreview(CameraWrapper.getWrapper(camera, cameraId)) }
+        }
+    }
+}
\ No newline at end of file
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.java
deleted file mode 100644
index c030a01..0000000
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package me.dm7.barcodescanner.core;
-
-import android.hardware.Camera;
-import android.support.annotation.NonNull;
-
-public class CameraWrapper {
-    public final Camera mCamera;
-    public final int mCameraId;
-
-    private CameraWrapper(@NonNull Camera camera, int cameraId) {
-        if (camera == null) {
-            throw new NullPointerException("Camera cannot be null");
-        }
-        this.mCamera = camera;
-        this.mCameraId = cameraId;
-    }
-
-    public static CameraWrapper getWrapper(Camera camera, int cameraId) {
-        if (camera == null) {
-            return null;
-        } else {
-            return new CameraWrapper(camera, cameraId);
-        }
-    }
-}
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.kt b/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.kt
new file mode 100644
index 0000000..ec4ad93
--- /dev/null
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraWrapper.kt
@@ -0,0 +1,23 @@
+package me.dm7.barcodescanner.core
+
+import android.hardware.Camera
+
+class CameraWrapper private constructor(var mCamera: Camera?, val mCameraId: Int) {
+
+    init {
+        if (mCamera == null) {
+            throw NullPointerException("Camera cannot be null")
+        }
+    }
+
+    companion object {
+
+        fun getWrapper(camera: Camera?, cameraId: Int): CameraWrapper? {
+            return if (camera == null) {
+                null
+            } else {
+                CameraWrapper(camera, cameraId)
+            }
+        }
+    }
+}
\ No newline at end of file
