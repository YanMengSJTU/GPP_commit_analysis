diff --git a/core/src/main/java/me/dm7/barcodescanner/core/activity/QRCodeScannerActivity.java b/core/src/main/java/me/dm7/barcodescanner/core/activity/QRCodeScannerActivity.java
index 91f7e72..1f0155c 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/activity/QRCodeScannerActivity.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/activity/QRCodeScannerActivity.java
@@ -5,6 +5,7 @@
 import android.content.pm.PackageManager;
 import android.net.Uri;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v4.app.ActivityCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
@@ -36,18 +37,19 @@
     public static final String SKIP_TITLE = "skiptitle";
     public static final String MESSAGE = "message";
 
-    ZXingScannerView mScannerView;
-    TextView messageInfo;
+    private ZXingScannerView scannerView;
+    private TextView messageInfo;
+    private Toolbar toolbar;
 
     private static final String FLASH_STATE = "FLASH_STATE";
     private static final String AUTO_FOCUS_STATE = "AUTO_FOCUS_STATE";
     private static final String SELECTED_FORMATS = "SELECTED_FORMATS";
     private static final String CAMERA_ID = "CAMERA_ID";
-    private boolean mFlash;
-    private boolean mAutoFocus;
-    private ArrayList<Integer> mSelectedIndices;
-    private int mCameraId = -1;
 
+    private boolean flash;
+    private boolean autoFocus;
+    private ArrayList<Integer> mSelectedIndices;
+    private int cameraId = -1;
 
     public static final int RESULT_GET_MESSAGE = 1;
     public static final int RESULT_SKIP_QRCODE = 2;
@@ -55,10 +57,8 @@
 
     private boolean isPermissionRequested = false;
 
-    String message;
-    String skip_title = "";
-
-    Toolbar toolbar;
+    private String message;
+    private String skipTitle = "";
 
     @Override
     protected void onCreate(Bundle state) {
@@ -74,21 +74,19 @@ protected void onCreate(Bundle state) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
-        if (TextUtils.isEmpty(skip_title)) {
+        if (TextUtils.isEmpty(skipTitle)) {
             return super.onCreateOptionsMenu(menu);
         } else {
             getMenuInflater().inflate(R.menu.menu_open_and_start_class, menu);
-            menu.getItem(0).setTitle(skip_title);
+            menu.getItem(0).setTitle(skipTitle);
             return true;
         }
     }
 
-
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         // Handle presses on the action bar items
 
-
         if (item.getItemId() == R.id.fora_de_sala) {
             setResult(RESULT_SKIP_QRCODE);
             finish();
@@ -98,7 +96,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
             return true;
         }
 
-
         return super.onOptionsItemSelected(item);
     }
 
@@ -113,7 +110,7 @@ protected void onResume() {
     }
 
     @Override
-    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
         isPermissionRequested = false;
         if (requestCode == REQUEST_CAMERA_PERMISSION
                 && grantResults.length == 1
@@ -130,7 +127,7 @@ private void initViews(Bundle state) {
         setContentView(R.layout.activity_qrcode_preview);
 
         toolbar = (Toolbar) findViewById(R.id.toolbar);
-        toolbar.getBackground().setAlpha(0);
+        toolbar.getBackground().mutate().setAlpha(0);
 
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
@@ -147,39 +144,39 @@ private void initViews(Bundle state) {
         }
 
         if (b.containsKey(SKIP_TITLE)) {
-            skip_title = getIntent().getExtras().getString(SKIP_TITLE);
+            skipTitle = getIntent().getExtras().getString(SKIP_TITLE);
         }
 
-        mScannerView = (ZXingScannerView) findViewById(R.id.scanner_view);
+        scannerView = (ZXingScannerView) findViewById(R.id.scanner_view);
         setupFormats();
 
         if (state != null) {
-            mFlash = state.getBoolean(FLASH_STATE, false);
-            mAutoFocus = state.getBoolean(AUTO_FOCUS_STATE, true);
+            flash = state.getBoolean(FLASH_STATE, false);
+            autoFocus = state.getBoolean(AUTO_FOCUS_STATE, true);
             mSelectedIndices = state.getIntegerArrayList(SELECTED_FORMATS);
-            mCameraId = state.getInt(CAMERA_ID, -1);
+            cameraId = state.getInt(CAMERA_ID, -1);
         } else {
-            mFlash = false;
-            mAutoFocus = true;
+            flash = false;
+            autoFocus = true;
             mSelectedIndices = null;
-            mCameraId = -1;
+            cameraId = -1;
         }
     }
 
     @Override
     protected void onSaveInstanceState(Bundle outState) {
-        outState.putBoolean(FLASH_STATE, mFlash);
-        outState.putBoolean(AUTO_FOCUS_STATE, mAutoFocus);
+        outState.putBoolean(FLASH_STATE, flash);
+        outState.putBoolean(AUTO_FOCUS_STATE, autoFocus);
         outState.putIntegerArrayList(SELECTED_FORMATS, mSelectedIndices);
-        outState.putInt(CAMERA_ID, mCameraId);
+        outState.putInt(CAMERA_ID, cameraId);
         super.onSaveInstanceState(outState);
     }
 
     private void initCamera() {
-        mScannerView.setAutoFocus(mAutoFocus);
-        mScannerView.setFlash(mFlash);
-        mScannerView.setResultHandler(this);
-        mScannerView.startCamera();
+        scannerView.setAutoFocus(autoFocus);
+        scannerView.setFlash(flash);
+        scannerView.setResultHandler(this);
+        scannerView.startCamera();
     }
 
     @Override
@@ -196,9 +193,10 @@ public boolean handleResult(Result rawResult) {
     }
 
     public void setupFormats() {
-        List<BarcodeFormat> formats = new ArrayList<BarcodeFormat>();
+        List<BarcodeFormat> formats = new ArrayList<>();
+
         if (mSelectedIndices == null || mSelectedIndices.isEmpty()) {
-            mSelectedIndices = new ArrayList<Integer>();
+            mSelectedIndices = new ArrayList<>();
             for (int i = 0; i < ZXingScannerView.ALL_FORMATS.size(); i++) {
                 mSelectedIndices.add(i);
             }
@@ -207,8 +205,9 @@ public void setupFormats() {
         for (int index : mSelectedIndices) {
             formats.add(ZXingScannerView.ALL_FORMATS.get(index));
         }
-        if (mScannerView != null) {
-            mScannerView.setFormats(formats);
+
+        if (scannerView != null) {
+            scannerView.setFormats(formats);
         }
     }
 
@@ -216,8 +215,8 @@ public void setupFormats() {
     protected void onPause() {
         super.onPause();
 
-        if (mScannerView != null) {
-            mScannerView.stopCamera();
+        if (scannerView != null) {
+            scannerView.stopCamera();
         }
     }
 
