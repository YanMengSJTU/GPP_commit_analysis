diff --git a/README.md b/README.md
index 896b4f1..f0456d7 100644
--- a/README.md
+++ b/README.md
@@ -1,220 +1,87 @@
-Introduction
-============
+# Introduction
 
-Android library projects that provides easy to use and extensible Barcode Scanner views based on ZXing and ZBar.
+Android library projects that provides easy to use and extensible Barcode Scanner views based on ZXing.
 
-Screenshots
-===========
-![Portrait](https://raw.github.com/dm77/barcodescanner/master/screenshots/portrait_small.png)
+This library is a fork of [barcodescanner][1] by [dm77][2]. It removes support for the ZBar scanner and instead only relies on ZXing. Furthermore it adds the possibility to use an Android View as custom HUD.
 
-![Landscape](https://raw.github.com/dm77/barcodescanner/master/screenshots/landscape_small.png)
+# Installation
 
-ZXing
-=====
+Add the following dependency to your build system:
 
-Installation
-------------
+**Group** `com.taig.android`
+**Artifact** `barcode-scanner`
+**Version** `1.0.0`
 
-Add the following dependency to your build.gradle file.
+And also make sure to add my custom content resolver:
 
-compile 'me.dm7.barcodescanner:zxing:1.6'
+`http://taig.github.io/repository`
 
-Simple Usage
-------------
+Full example for sbt:
 
-1.) Add camera permission to your AndroidManifest.xml file:
+````scala
+resolvers += Resolver.url( "Taig", url( "http://taig.github.io/repository" ) )( ivyStylePatterns )
 
-```xml
-<uses-permission android:name="android.permission.CAMERA" />
-```
+libraryDependencies += "com.taig.android" %% "barcode-scanner" % "1.0.0"
+````
 
-2.) A very basic activity would look like this:
-
-```java
-public class SimpleScannerActivity extends Activity implements ZXingScannerView.ResultHandler {
-    private ZXingScannerView mScannerView;
+# Usage
 
-    @Override
-    public void onCreate(Bundle state) {
-        super.onCreate(state);
-        mScannerView = new ZXingScannerView(this);   // Programmatically initialize the scanner view
-        setContentView(mScannerView);                // Set the scanner view as the content view
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        mScannerView.setResultHandler(this); // Register ourselves as a handler for scan results.
-        mScannerView.startCamera();          // Start camera on resume
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        mScannerView.stopCamera();           // Stop camera on pause
-    }
-
-    @Override
-    public void handleResult(Result rawResult) {
-        // Do something with the result here
-        Log.v(TAG, rawResult.getText()); // Prints scan results
-        Log.v(TAG, rawResult.getBarcodeFormat().toString()); // Prints the scan format (qrcode, pdf417 etc.)
-    }
-}
-
-```
-
-Please take a look at the [zxing/sample] (https://github.com/dm77/barcodescanner/tree/master/zxing/sample) project for a full working example.
-
-Advanced Usage
---------------
-
-Take a look at the [ScannerActivity.java] (https://github.com/dm77/barcodescanner/blob/master/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerActivity.java) or [ScannerFragment.java] (https://github.com/dm77/barcodescanner/blob/master/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/ScannerFragment.java) classes to get an idea on advanced usage.
-
-Interesting methods on the ZXingScannerView include:
-
-```java
-// Toggle flash:
-void setFlash(boolean);
-
-// Toogle autofocus:
-void setAutoFocus(boolean);
-
-// Specify interested barcode formats:
-void setFormats(List<BarcodeFormat> formats);
-```
-
-Supported Formats:
-
-```java
-BarcodeFormat.UPC_A
-BarcodeFormat.UPC_E
-BarcodeFormat.EAN_13
-BarcodeFormat.EAN_8
-BarcodeFormat.RSS_14
-BarcodeFormat.CODE_39
-BarcodeFormat.CODE_93
-BarcodeFormat.CODE_128
-BarcodeFormat.ITF
-BarcodeFormat.CODABAR
-BarcodeFormat.QR_CODE
-BarcodeFormat.DATA_MATRIX
-BarcodeFormat.PDF_417
-```
-
-ZBar
-====
-
-Installation
-------------
-
-Add the following dependency to your build.gradle file.
-
-compile 'me.dm7.barcodescanner:zbar:1.6'
-
-Simple Usage
-------------
-
-1.) Add camera permission to your AndroidManifest.xml file:
+Add camera permission to your `AndroidManifest.xml` file:
 
 ```xml
 <uses-permission android:name="android.permission.CAMERA" />
 ```
+## Basic
 
-2.) A very basic activity would look like this:
+Activity setup:
 
 ```java
-public class SimpleScannerActivity extends Activity implements ZBarScannerView.ResultHandler {
-    private ZBarScannerView mScannerView;
+public class SimpleScannerActivity extends Activity implements BarcodeScannerView.ResultHandler {
+    private BarcodeScannerView mScannerView;
 
     @Override
     public void onCreate(Bundle state) {
         super.onCreate(state);
-        mScannerView = new ZBarScannerView(this);    // Programmatically initialize the scanner view
-        setContentView(mScannerView);                // Set the scanner view as the content view
+
+        mScannerView = new BarcodeScannerView(this);   // Programmatically initialize the scanner view
+        setContentView(mScannerView);                  // Set the scanner view as the content view
     }
 
     @Override
     public void onResume() {
         super.onResume();
+
         mScannerView.setResultHandler(this); // Register ourselves as a handler for scan results.
         mScannerView.startCamera();          // Start camera on resume
     }
 
     @Override
     public void onPause() {
+
         super.onPause();
         mScannerView.stopCamera();           // Stop camera on pause
     }
 
     @Override
     public void handleResult(Result rawResult) {
+
         // Do something with the result here
-        Log.v(TAG, rawResult.getContents()); // Prints scan results
-        Log.v(TAG, rawResult.getBarcodeFormat().getName()); // Prints the scan format (qrcode, pdf417 etc.)
+        Log.v(TAG, rawResult.getText()); // Prints scan results
+        Log.v(TAG, rawResult.getBarcodeFormat().toString()); // Prints the scan format (qrcode, pdf417 etc.)
     }
 }
-
-```
-
-Please take a look at the [zbar/sample] (https://github.com/dm77/barcodescanner/tree/master/zbar/sample)  project for a full working example.
-
-Advanced Usage
---------------
-
-
-Take a look at the [ScannerActivity.java] (https://github.com/dm77/barcodescanner/blob/master/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java) or [ScannerFragment.java] (https://github.com/dm77/barcodescanner/blob/master/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerFragment.java) classes to get an idea on advanced usage.
-
-Interesting methods on the ZBarScannerView include:
-
-```java
-// Toggle flash:
-void setFlash(boolean);
-
-// Toogle autofocus:
-void setAutoFocus(boolean);
-
-// Specify interested barcode formats:
-void setFormats(List<BarcodeFormat> formats);
 ```
 
-Supported Formats:
+## Advanced
 
-```
-BarcodeFormat.PARTIAL
-BarcodeFormat.EAN8
-BarcodeFormat.UPCE
-BarcodeFormat.ISBN10
-BarcodeFormat.UPCA
-BarcodeFormat.EAN13
-BarcodeFormat.ISBN13
-BarcodeFormat.I25
-BarcodeFormat.DATABAR
-BarcodeFormat.DATABAR_EXP
-BarcodeFormat.CODABAR
-BarcodeFormat.CODE39
-BarcodeFormat.PDF417
-BarcodeFormat.QRCODE
-BarcodeFormat.CODE93
-BarcodeFormat.CODE128
-```
-
-Credits
-=======
 
-Almost all of the code for these library projects is based on:
+## More
 
-1. CameraPreview app from Android SDK APIDemos
-2. The ZXing project: https://github.com/zxing/zxing
-3. The ZBar Android SDK: http://sourceforge.net/projects/zbar/files/AndroidSDK/
+For more details about flash and autofocus you should have a look at the original [documentation][1].
 
-Contributors
-============
+# License
 
-* [Rking788](https://github.com/Rking788)
-* [furedal](https://github.com/furedal)
-* [Yarikx](https://github.com/Yarikx)
-
-License
-=======
 Apache License, Version 2.0
+
+[1]: https://github.com/dm77/barcodescanner
+[2]: https://github.com/dm77
