diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
index 56aff17..287b829 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
@@ -82,7 +82,11 @@ public void showCameraPreview() {
                 mCamera.setOneShotPreviewCallback(mPreviewCallback);
                 mCamera.startPreview();
                 if(mAutoFocus) {
-                    mCamera.autoFocus(autoFocusCB);
+                    if (mSurfaceCreated) { // check if surface created before using autofocus
+                        mCamera.autoFocus(autoFocusCB);
+                    } else {
+                        scheduleAutoFocus(); // wait 1 sec and then do check again
+                    }
                 }
             } catch (Exception e) {
                 Log.e(TAG, e.toString(), e);
@@ -222,8 +226,12 @@ public void setAutoFocus(boolean state) {
             }
             mAutoFocus = state;
             if(mAutoFocus) {
-                Log.v(TAG, "Starting autofocus");
-                mCamera.autoFocus(autoFocusCB);
+                if (mSurfaceCreated) { // check if surface created before using autofocus
+                    Log.v(TAG, "Starting autofocus");
+                    mCamera.autoFocus(autoFocusCB);
+                } else {
+                    scheduleAutoFocus(); // wait 1 sec and then do check again
+                }
             } else {
                 Log.v(TAG, "Cancelling autofocus");
                 mCamera.cancelAutoFocus();
@@ -242,7 +250,11 @@ public void run() {
     // Mimic continuous auto-focusing
     Camera.AutoFocusCallback autoFocusCB = new Camera.AutoFocusCallback() {
         public void onAutoFocus(boolean success, Camera camera) {
-            mAutoFocusHandler.postDelayed(doAutoFocus, 1000);
+            scheduleAutoFocus();
         }
     };
-}
\ No newline at end of file
+
+    private void scheduleAutoFocus() {
+        mAutoFocusHandler.postDelayed(doAutoFocus, 1000);
+    }
+}
