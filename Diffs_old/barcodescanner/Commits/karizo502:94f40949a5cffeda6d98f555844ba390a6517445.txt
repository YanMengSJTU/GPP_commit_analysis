diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java
index 11bed5e..e7c2222 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/CaptureActivity.java
@@ -3,6 +3,7 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
+import java.util.ArrayList;
 import java.util.List;
 
 import android.app.Activity;
@@ -11,6 +12,7 @@
 import android.graphics.PixelFormat;
 import android.hardware.Camera;
 import android.net.Uri;
+import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Handler;
 import android.provider.MediaStore;
@@ -24,6 +26,17 @@
 
 import junit.framework.Test;
 
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.protocol.HTTP;
+import org.apache.http.util.EntityUtils;
+
 public class CaptureActivity extends Activity implements SurfaceHolder.Callback,Camera.ShutterCallback,Camera.PictureCallback{
 
     Camera camera;
@@ -42,6 +55,10 @@ public void onCreate(Bundle state) {
         super.onCreate(state);
         setContentView(R.layout.camera);
 
+        TextView txt_name = (TextView) findViewById(R.id.txt_name);
+        final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
+        txt_name.setText(globalVariable.getName());
+
         getWindow().setFormat(PixelFormat.UNKNOWN);
         surfaceView = (SurfaceView)findViewById(R.id.CameraView);
         surfaceHolder = surfaceView.getHolder();
@@ -61,7 +78,7 @@ public void onCreate(Bundle state) {
 
             @Override
             public void onClick(View arg0) {
-                camera.takePicture(CaptureActivity.this, null, null, CaptureActivity.this);
+                //camera.takePicture(CaptureActivity.this, null, null, CaptureActivity.this);
             }
         });
 
@@ -85,7 +102,11 @@ public void onClick(View v) {
             }});
     }
 
-
+    @Override
+    public void onResume() {
+        super.onResume();
+        camera.startPreview();
+    }
     @Override
     public void onPause() {
         super.onPause();
@@ -118,15 +139,15 @@ public void onPictureTaken(byte[] data, Camera camera) {
           imageFileOS.flush();
           imageFileOS.close();
 
-          Toast t = Toast.makeText(this, "Saved JPEG!", Toast.LENGTH_SHORT);
-          t.show();
+            Toast.makeText(this, "Saved JPEG!", Toast.LENGTH_SHORT).show();
             final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
             globalVariable.setState("capture");
-            CaptureActivity.this.finish();
+            String emp_id = globalVariable.getEmpID();
+            //Toast.makeText(this, globalVariable.getEmpID().toString(), Toast.LENGTH_SHORT).show();
+            new MyTask().execute(emp_id);
 
         } catch (Exception e) {
-          Toast t = Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT);
-          t.show();
+          Toast.makeText(this, e.getMessage(), Toast.LENGTH_SHORT).show();
         }
         camera.startPreview();
       }
@@ -183,4 +204,47 @@ public void onBackPressed() {
         globalVariable.setState("main");
     }
 
+    private class MyTask extends AsyncTask<String, Integer, Double> {
+
+        @Override
+        protected Double doInBackground(String... params) {
+            // TODO Auto-generated method stub
+            postData(params[0]);
+            return null;
+        }
+
+        protected void onPostExecute(Double result) {
+            //pb.setVisibility(View.GONE);
+            //Toast.makeText(getApplicationContext(), ""+data[1]+" "+data[3], Toast.LENGTH_LONG).show();
+            CaptureActivity.this.finish();
+        }
+        protected void onProgressUpdate(Integer... progress){
+            //pb.setProgress(progress[0]);
+        }
+
+        public void postData(String valueIWantToSend) {
+            // Create a new HttpClient and Post Header
+            HttpClient httpclient = new DefaultHttpClient();
+            HttpPost httppost = new HttpPost("http://157.179.24.77/timeattendance/connect_base.php");
+
+            try {
+                // Add your data
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
+                nameValuePairs.add(new BasicNameValuePair("action", "time_attendance"));
+                nameValuePairs.add(new BasicNameValuePair("emp_id", valueIWantToSend));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs,"UTF-8"));
+
+                // Execute HTTP Post Request
+                HttpResponse response = httpclient.execute(httppost);
+                String actual = EntityUtils.toString(response.getEntity(), HTTP.UTF_8);
+                Log.v("test", "Your capture data: " + actual); //response data
+            } catch (ClientProtocolException e) {
+                Log.v("test", "Error: " + e.getMessage());
+            } catch (IOException e) {
+                Log.v("test", "Error: " + e.getMessage());
+            }
+        }
+
+    }
+
 }
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/GlobalClass.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/GlobalClass.java
index 43ee2d0..229d414 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/GlobalClass.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/GlobalClass.java
@@ -8,7 +8,7 @@
 public class GlobalClass extends Application{
     private String state;
     private String empid;
-
+    private String name;
 
     public String getState() {
 
@@ -30,5 +30,15 @@ public void setEmpID(String cEmpID) {
 
         empid = cEmpID;
     }
+    public String getName() {
+
+        return name;
+    }
+
+    public void setName(String cName) {
+
+        name = cName;
+
+    }
 
 }
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
index ad0fb87..4ae119a 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/MainActivity.java
@@ -15,6 +15,7 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.Button;
+import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -40,7 +41,6 @@
 public class MainActivity extends ActionBarActivity {
     Intent intent;
     TextView status;
-    String[] data;
     String state;
 
     public String getState() {
@@ -217,9 +217,9 @@ public  void checkLocale(){
     public  void checkState(){
 
         final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
-        Toast.makeText(this, globalVariable.getState(), Toast.LENGTH_SHORT).show();
+        //Toast.makeText(this, globalVariable.getState(), Toast.LENGTH_SHORT).show();
+        //Toast.makeText(this, globalVariable.getEmpID(), Toast.LENGTH_SHORT).show();
         if(globalVariable.getState().equals("scan")){
-            //new MyTask().execute(globalVariable.getEmpID().toString());
             intent = new Intent(getApplicationContext(), CaptureActivity.class);
             startActivity(intent);
         }else if(globalVariable.getState().equals("capture")){
@@ -236,51 +236,6 @@ public static void restartActivity(Activity act){
 
     }
 
-    private class MyTask extends AsyncTask<String, Integer, Double>{
-
-        @Override
-        protected Double doInBackground(String... params) {
-            // TODO Auto-generated method stub
-            postData(params[0]);
-            return null;
-        }
-
-        protected void onPostExecute(Double result) {
-            //pb.setVisibility(View.GONE);
-            Toast.makeText(getApplicationContext(), ""+data[1]+" "+data[3], Toast.LENGTH_LONG).show();
-            //status.setText(""+data[1]+" "+data[3]);
-        }
-        protected void onProgressUpdate(Integer... progress){
-            //pb.setProgress(progress[0]);
-        }
-
-        public void postData(String valueIWantToSend) {
-            // Create a new HttpClient and Post Header
-            HttpClient httpclient = new DefaultHttpClient();
-            HttpPost httppost = new HttpPost("http://157.179.24.77/timeattendance/connect_base.php");
-
-            try {
-                // Add your data
-                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
-                nameValuePairs.add(new BasicNameValuePair("action", "emp_profile"));
-                nameValuePairs.add(new BasicNameValuePair("emp_id", valueIWantToSend));
-                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs,"UTF-8"));
-
-                // Execute HTTP Post Request
-                HttpResponse response = httpclient.execute(httppost);
-                String actual = EntityUtils.toString(response.getEntity(), HTTP.UTF_8);
-                Log.v("test", "Your data: " +actual); //response data
-                data = actual.split("[|]");
-                Log.v("test", "Your NAME: " +data[1]+" "+data[3]); //response data
-
-            } catch (ClientProtocolException e) {
-                Log.v("test", "Error: " + e.getMessage());
-            } catch (IOException e) {
-                Log.v("test", "Error: " + e.getMessage());
-            }
-        }
-
-    }
 
 }
 
diff --git a/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java b/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java
index 3471a63..ab56b98 100644
--- a/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java
+++ b/timeattendance/src/main/java/com/coresolutions/timeattendance/SimpleScannerActivity.java
@@ -2,16 +2,38 @@
 
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v7.app.ActionBarActivity;
+import android.util.Log;
+import android.view.View;
+import android.widget.ProgressBar;
 import android.widget.Toast;
 
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.HttpClient;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.message.BasicNameValuePair;
+import org.apache.http.protocol.HTTP;
+import org.apache.http.util.EntityUtils;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
 import me.dm7.barcodescanner.zbar.Result;
 import me.dm7.barcodescanner.zbar.ZBarScannerView;
 
 public class SimpleScannerActivity extends ActionBarActivity implements ZBarScannerView.ResultHandler {
     private ZBarScannerView mScannerView;
     Intent intent;
+    String[] data;
+    String state;
+    //private ProgressBar pb;
 
     @Override
     public void onCreate(Bundle state) {
@@ -44,9 +66,9 @@ public void handleResult(Result rawResult) {
         //startActivity(intent);
         final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
         globalVariable.setState("scan");
-
-        this.finish();
-
+        globalVariable.setEmpID(rawResult.getContents());
+        new MyTask().execute(rawResult.getContents());
+        //this.finish();
     }
 
     @Override
@@ -55,4 +77,53 @@ public void onBackPressed() {
         //Toast.makeText(this, "555", Toast.LENGTH_SHORT).show();
         this.finish();
     }
+
+    private class MyTask extends AsyncTask<String, Integer, Double> {
+
+        @Override
+        protected Double doInBackground(String... params) {
+            // TODO Auto-generated method stub
+            postData(params[0]);
+            return null;
+        }
+
+        protected void onPostExecute(Double result) {
+            //pb.setVisibility(View.GONE);
+            //Toast.makeText(getApplicationContext(), ""+data[1]+" "+data[3], Toast.LENGTH_LONG).show();
+            //status.setText(""+data[1]+" "+data[3]);
+            final GlobalClass globalVariable = (GlobalClass) getApplicationContext();
+            globalVariable.setName(data[1] + " " + data[3]);
+            SimpleScannerActivity.this.finish();
+        }
+        protected void onProgressUpdate(Integer... progress){
+            //pb.setProgress(progress[0]);
+        }
+
+        public void postData(String valueIWantToSend) {
+            // Create a new HttpClient and Post Header
+            HttpClient httpclient = new DefaultHttpClient();
+            HttpPost httppost = new HttpPost("http://157.179.24.77/timeattendance/connect_base.php");
+
+            try {
+                // Add your data
+                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
+                nameValuePairs.add(new BasicNameValuePair("action", "emp_profile"));
+                nameValuePairs.add(new BasicNameValuePair("emp_id", valueIWantToSend));
+                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs,"UTF-8"));
+
+                // Execute HTTP Post Request
+                HttpResponse response = httpclient.execute(httppost);
+                String actual = EntityUtils.toString(response.getEntity(), HTTP.UTF_8);
+                Log.v("test", "Your scanner data: " + actual); //response data
+                data = actual.split("[|]");
+                Log.v("test", "Your NAME: " +data[1]+" "+data[3]); //response data
+
+            } catch (ClientProtocolException e) {
+                Log.v("test", "Error: " + e.getMessage());
+            } catch (IOException e) {
+                Log.v("test", "Error: " + e.getMessage());
+            }
+        }
+
+    }
 }
diff --git a/timeattendance/src/main/res/layout/activity_main.xml b/timeattendance/src/main/res/layout/activity_main.xml
index 80c5279..2299867 100644
--- a/timeattendance/src/main/res/layout/activity_main.xml
+++ b/timeattendance/src/main/res/layout/activity_main.xml
@@ -17,13 +17,13 @@
         android:layout_alignParentLeft="false"
         android:layout_alignParentRight="true" />
 
-    <at.markushi.ui.CircleButton
+<!--    <at.markushi.ui.CircleButton
         android:layout_width="100dip"
         android:layout_height="100dip"
         android:text="Start"
         android:src="@mipmap/ic_start"
         app:cb_color="#ff1cdc00"
-        app:cb_pressedRingWidth="8dip" />
+        app:cb_pressedRingWidth="8dip" /> -->
 
     <Button
         android:layout_width="100dp"
diff --git a/timeattendance/src/main/res/layout/camera.xml b/timeattendance/src/main/res/layout/camera.xml
index 2320fa9..1c1253c 100644
--- a/timeattendance/src/main/res/layout/camera.xml
+++ b/timeattendance/src/main/res/layout/camera.xml
@@ -4,22 +4,23 @@
     android:layout_width="fill_parent"
     android:layout_height="fill_parent"
     android:weightSum="1">
+
     <FrameLayout android:id="@+id/FrameLayout01"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_weight="0.93">
+        android:layout_height="match_parent">
 
-        <SurfaceView android:id="@+id/CameraView"
-            android:layout_width="310dp"
-            android:layout_height="413dp"
-            android:layout_gravity="center"></SurfaceView>
-
-        <TextView android:id="@+id/CountDownTextView"
-            android:textSize="100dip"
+        <TextView android:id="@+id/txt_name"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:text="3"></TextView>
+            android:layout_gravity="center_horizontal|top"
+            android:text="555"
+            android:textSize="20dip"></TextView>
+
+        <Button android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:id="@+id/button_chk_in"
+            android:text="check in"
+            android:layout_gravity="left|bottom"></Button>
 
         <Button
             android:layout_width="wrap_content"
@@ -28,11 +29,17 @@
             android:text="check out"
             android:layout_gravity="right|bottom" />
 
-        <Button android:layout_width="wrap_content"
+        <SurfaceView android:id="@+id/CameraView"
+            android:layout_width="310dp"
+            android:layout_height="413dp"
+            android:layout_gravity="center"></SurfaceView>
+
+        <TextView android:id="@+id/CountDownTextView"
+            android:textSize="200dip"
+            android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:id="@+id/button_chk_in"
-            android:text="check in"
-            android:layout_gravity="left|bottom"></Button>
+            android:layout_gravity="center"
+            android:text="3"></TextView>
 
     </FrameLayout>
 
