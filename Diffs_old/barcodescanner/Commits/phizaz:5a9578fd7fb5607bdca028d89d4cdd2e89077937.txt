diff --git a/build.gradle b/build.gradle
index 31235da..03ba833 100644
--- a/build.gradle
+++ b/build.gradle
@@ -7,7 +7,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.3'
+        classpath 'com.android.tools.build:gradle:3.0.0-beta4'
     }
 }
 
@@ -18,7 +18,7 @@ allprojects {
     repositories {
         mavenCentral()
         maven {
-            url 'https://oss.sonatype.org/content/groups/public'
+            url "https://maven.google.com"
         }
     }
 
diff --git a/dependencies.gradle b/dependencies.gradle
index 075b1dd..6f553ad 100644
--- a/dependencies.gradle
+++ b/dependencies.gradle
@@ -1,6 +1,6 @@
 ext.versions = [
         compile_sdk   : 25,
-        min_sdk       : 9,
+        min_sdk       : 14,
         target_sdk    : 25,
         build_tools   : "25.0.2",
         support_lib   : "25.3.1",
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index cd0aa28..f6536d7 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Sat Apr 08 11:44:39 MDT 2017
+#Wed Sep 06 18:29:04 ICT 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-3.4.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/Data.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/Data.java
new file mode 100644
index 0000000..cd327ef
--- /dev/null
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/Data.java
@@ -0,0 +1,16 @@
+package me.dm7.barcodescanner.zxing.sample;
+
+import java.util.Date;
+
+public class Data {
+    public String barcode;
+    public Date date;
+
+    public Data() {}
+
+    public Data(String barcode, Date date) {
+        this.barcode = barcode;
+        this.date = date;
+    }
+
+}
diff --git a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
index ec15b78..5c4430b 100644
--- a/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
+++ b/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java
@@ -7,6 +7,8 @@
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.view.MenuItemCompat;
+import android.util.Log;
+import android.util.Pair;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.ViewGroup;
@@ -15,6 +17,7 @@
 import com.google.zxing.Result;
 
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.List;
 
 import me.dm7.barcodescanner.zxing.ZXingScannerView;
@@ -22,6 +25,9 @@
 public class FullScannerActivity extends BaseScannerActivity implements MessageDialogFragment.MessageDialogListener,
         ZXingScannerView.ResultHandler, FormatSelectorDialogFragment.FormatSelectorDialogListener,
         CameraSelectorDialogFragment.CameraSelectorDialogListener {
+
+    private static final String TAG = "FullScannerActivity";
+
     private static final String FLASH_STATE = "FLASH_STATE";
     private static final String AUTO_FOCUS_STATE = "AUTO_FOCUS_STATE";
     private static final String SELECTED_FORMATS = "SELECTED_FORMATS";
@@ -32,10 +38,12 @@
     private ArrayList<Integer> mSelectedIndices;
     private int mCameraId = -1;
 
+    private ArrayList<Pair<String, Date>> results;
+
     @Override
     public void onCreate(Bundle state) {
         super.onCreate(state);
-        if(state != null) {
+        if (state != null) {
             mFlash = state.getBoolean(FLASH_STATE, false);
             mAutoFocus = state.getBoolean(AUTO_FOCUS_STATE, true);
             mSelectedIndices = state.getIntegerArrayList(SELECTED_FORMATS);
@@ -54,6 +62,9 @@ public void onCreate(Bundle state) {
         mScannerView = new ZXingScannerView(this);
         setupFormats();
         contentFrame.addView(mScannerView);
+
+        // setup firebase
+        results = new ArrayList<Pair<String, Date>>();
     }
 
     @Override
@@ -78,7 +89,7 @@ public void onSaveInstanceState(Bundle outState) {
     public boolean onCreateOptionsMenu(Menu menu) {
         MenuItem menuItem;
 
-        if(mFlash) {
+        if (mFlash) {
             menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_on);
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_flash, 0, R.string.flash_off);
@@ -86,7 +97,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
         MenuItemCompat.setShowAsAction(menuItem, MenuItem.SHOW_AS_ACTION_NEVER);
 
 
-        if(mAutoFocus) {
+        if (mAutoFocus) {
             menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_on);
         } else {
             menuItem = menu.add(Menu.NONE, R.id.menu_auto_focus, 0, R.string.auto_focus_off);
@@ -108,7 +119,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.menu_flash:
                 mFlash = !mFlash;
-                if(mFlash) {
+                if (mFlash) {
                     item.setTitle(R.string.flash_on);
                 } else {
                     item.setTitle(R.string.flash_off);
@@ -117,7 +128,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
             case R.id.menu_auto_focus:
                 mAutoFocus = !mAutoFocus;
-                if(mAutoFocus) {
+                if (mAutoFocus) {
                     item.setTitle(R.string.auto_focus_on);
                 } else {
                     item.setTitle(R.string.auto_focus_off);
@@ -144,8 +155,15 @@ public void handleResult(Result rawResult) {
             Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
             Ringtone r = RingtoneManager.getRingtone(getApplicationContext(), notification);
             r.play();
-        } catch (Exception e) {}
+        } catch (Exception e) {
+        }
+
         showMessageDialog("Contents = " + rawResult.getText() + ", Format = " + rawResult.getBarcodeFormat().toString());
+        appendResults(rawResult.getText(), new Date());
+    }
+
+    private void appendResults(String barcode, Date date) {
+        results.add(new Pair<>(barcode, date));
     }
 
     public void showMessageDialog(String message) {
@@ -164,7 +182,7 @@ public void closeFormatsDialog() {
     public void closeDialog(String dialogName) {
         FragmentManager fragmentManager = getSupportFragmentManager();
         DialogFragment fragment = (DialogFragment) fragmentManager.findFragmentByTag(dialogName);
-        if(fragment != null) {
+        if (fragment != null) {
             fragment.dismiss();
         }
     }
@@ -191,17 +209,18 @@ public void onCameraSelected(int cameraId) {
 
     public void setupFormats() {
         List<BarcodeFormat> formats = new ArrayList<BarcodeFormat>();
-        if(mSelectedIndices == null || mSelectedIndices.isEmpty()) {
+
+        if (mSelectedIndices == null || mSelectedIndices.isEmpty()) {
             mSelectedIndices = new ArrayList<Integer>();
-            for(int i = 0; i < ZXingScannerView.ALL_FORMATS.size(); i++) {
+            for (int i = 0; i < ZXingScannerView.ALL_FORMATS.size(); i++) {
                 mSelectedIndices.add(i);
             }
         }
 
-        for(int index : mSelectedIndices) {
+        for (int index : mSelectedIndices) {
             formats.add(ZXingScannerView.ALL_FORMATS.get(index));
         }
-        if(mScannerView != null) {
+        if (mScannerView != null) {
             mScannerView.setFormats(formats);
         }
     }
