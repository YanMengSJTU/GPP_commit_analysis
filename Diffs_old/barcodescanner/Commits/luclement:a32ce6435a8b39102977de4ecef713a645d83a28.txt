diff --git a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java
index c6dd381..1386a55 100644
--- a/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java
+++ b/zbar/sample/src/main/java/me/dm7/barcodescanner/zbar/sample/ScannerActivity.java
@@ -6,6 +6,7 @@
 import android.media.Ringtone;
 import android.media.RingtoneManager;
 import android.net.Uri;
+import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.FragmentManager;
@@ -27,6 +28,7 @@
 import java.net.URLEncoder;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.ExecutionException;
 
 import me.dm7.barcodescanner.zbar.BarcodeFormat;
 import me.dm7.barcodescanner.zbar.Result;
@@ -153,34 +155,75 @@ public void handleResult(Result rawResult) {
             Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
             Ringtone r = RingtoneManager.getRingtone(getApplicationContext(), notification);
             r.play();
-        } catch (Exception e) {}
+        } catch (Exception e) {
+        }
         //showMessageDialog("Contents = " + rawResult.getContents() + ", Format = " + rawResult.getBarcodeFormat().getName());
         List<String> blocked = new ArrayList<>();
         Intent i = new Intent(Intent.ACTION_VIEW);
-        showDialog("Launch" + rawResult.getContents() + "?",i,rawResult.getContents(),blocked);
-        finish();
-        Intent p = getIntent();
-        startActivity(p);
-
+        String res = "";
+        if (Patterns.WEB_URL.matcher(rawResult.getContents()).matches()) {
+            try {
+                res = new sendRequest().execute(rawResult.getContents()).get();
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            } catch (ExecutionException e) {
+                e.printStackTrace();
+            }
+        } else{
+            showMessageDialog("Not a Valid URL");
+        }
+        if(res.equals("204")){
+            i.setData(Uri.parse(rawResult.getContents()));
+            startActivity(i);
+        } else {
+            showDialog("Launch" + rawResult.getContents() + "?", i, rawResult.getContents(), blocked);
+        }
     }
-    public void onLaunchBrowser(Intent i, String url, List<String> blocked)
-    {
 
-        if(Patterns.WEB_URL.matcher(url).matches()&& !blocked.contains(url)){
+    public void onLaunchBrowser(Intent i, String url, List<String> blocked) {
+        if (Patterns.WEB_URL.matcher(url).matches()) {
             i.setData(Uri.parse(url));
             startActivity(i);
         } else {
             showMessageDialog("Not a Valid URL or Is blocked");
         }
+
     }
+    private class sendRequest extends AsyncTask<String, String, String> {
+        protected String doInBackground(String... arg){
+            String result;
+            StringBuffer sb = new StringBuffer();
+            InputStream is = null;
+            String baseURL = "https://sb-ssl.google.com/safebrowsing/api/lookup";
+
+            String arguments = "";
+            try {
+                arguments += URLEncoder.encode("client", "UTF-8") + "=" + URLEncoder.encode("InfoSec", "UTF-8") + "&";
+                arguments += URLEncoder.encode("key", "UTF-8") + "=" + URLEncoder.encode("AIzaSyCCn9EpFwEk0rnnrxgQue9H40iGI_z2rBw", "UTF-8") + "&";
+                arguments += URLEncoder.encode("appver", "UTF-8") + "=" + URLEncoder.encode("1.5.2", "UTF-8") + "&";
+                arguments += URLEncoder.encode("pver", "UTF-8") + "=" + URLEncoder.encode("3.1", "UTF-8") + "&";
+                arguments += URLEncoder.encode("url", "UTF-8") + "=" + URLEncoder.encode(arg[0], "UTF-8");
+
+                // Construct the url object representing cgi script
+                URL url = new URL(baseURL + "?" + arguments);
+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
+                sb.append(connection.getResponseCode());
+            } catch(IOException e){
 
-    public void onBlock(List<String> blocked, String url) {
-        if (!blocked.contains(url))
-        {
-            blocked.add(url);
-        }
+            }
+            result = sb.toString();
+            if (is != null) {
+                try {
+                    is.close();
+                } catch (IOException e) {
+                    //Log.i(TAG, "Error closing InputStream");
+                }
+            }
 
+            return result;
+        }
     }
+
     public void showDialog(String title, final Intent i, final String url, final List<String> blocked) {
         AlertDialog.Builder builder = new AlertDialog.Builder(this);
         builder.setMessage(title)
@@ -201,36 +244,12 @@ public void onClick(DialogInterface dialog, int id) {
         alert.show();
     }
 
-    public String checkURL(String arg) throws IOException {
-        String result;
-        StringBuffer sb = new StringBuffer();
-        InputStream is = null;
-
-        String baseURL="https://sb-ssl.google.com/safebrowsing/api/lookup";
-
-        String arguments = "";
-        arguments += URLEncoder.encode("client", "UTF-8") + "=" + URLEncoder.encode("InfoSec", "UTF-8") + "&";
-        arguments += URLEncoder.encode("key", "UTF-8") + "=" + URLEncoder.encode("AIzaSyCCn9EpFwEk0rnnrxgQue9H40iGI_z2rBw", "UTF-8") + "&";
-        arguments += URLEncoder.encode("appver", "UTF-8") + "=" + URLEncoder.encode("1.5.2", "UTF-8") + "&";
-        arguments += URLEncoder.encode("pver", "UTF-8") + "=" + URLEncoder.encode("3.1", "UTF-8") + "&";
-        arguments += URLEncoder.encode("url", "UTF-8") + "=" + URLEncoder.encode(arg, "UTF-8");
-
-        // Construct the url object representing cgi script
-        URL url = new URL(baseURL + "?" + arguments);
-
-        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
-        sb.append(connection.getResponseCode());
-        result = sb.toString();
-        if (is != null) {
-            try {
-                is.close();
-            }
-            catch (IOException e) {
-                //Log.i(TAG, "Error closing InputStream");
-            }
+    public void onBlock(List<String> blocked, String url) {
+        if (!blocked.contains(url))
+        {
+            blocked.add(url);
         }
 
-        return result;
     }
 
     public void showMessageDialog(String message) {
