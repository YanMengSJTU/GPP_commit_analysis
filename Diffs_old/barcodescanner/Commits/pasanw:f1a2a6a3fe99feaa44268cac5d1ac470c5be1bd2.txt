diff --git a/core/build.gradle b/core/build.gradle
index ba39e82..cab10bb 100644
--- a/core/build.gradle
+++ b/core/build.gradle
@@ -12,4 +12,5 @@ ext {
 
 dependencies {
     compile supportLibraryDependency
+    compile 'com.google.zxing:android-core:3.2.1'
 }
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
index a123733..67675b3 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
@@ -15,6 +15,8 @@
 import android.view.ViewGroup;
 import android.view.WindowManager;
 
+import com.google.zxing.client.android.camera.CameraConfigurationUtils;
+
 import java.util.List;
 
 public class CameraPreview extends SurfaceView implements SurfaceHolder.Callback {
@@ -122,16 +124,17 @@ public void stopCameraPreview() {
     }
 
     public void setupCameraParameters() {
-        Camera.Size optimalSize = getOptimalPreviewSize();
         Camera.Parameters parameters = mCameraWrapper.mCamera.getParameters();
-        parameters.setPreviewSize(optimalSize.width, optimalSize.height);
+        Point optimalSize = CameraConfigurationUtils.findBestPreviewSizeValue(parameters, DisplayUtils.getScreenResolution(getContext()));
+        parameters.setPreviewSize(optimalSize.x, optimalSize.y);
         mCameraWrapper.mCamera.setParameters(parameters);
-        adjustViewSize(optimalSize);
+
+        adjustViewSize(optimalSize.x, optimalSize.y);
     }
 
-    private void adjustViewSize(Camera.Size cameraSize) {
+    private void adjustViewSize(int width, int height) {
         Point previewSize = convertSizeToLandscapeOrientation(new Point(getWidth(), getHeight()));
-        float cameraRatio = ((float) cameraSize.width) / cameraSize.height;
+        float cameraRatio = ((float) width) / height;
         float screenRatio = ((float) previewSize.x) / previewSize.y;
 
         if (screenRatio > cameraRatio) {
diff --git a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
index aa300a3..0a57494 100644
--- a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
+++ b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
@@ -1,7 +1,6 @@
 package me.dm7.barcodescanner.zxing;
 
 import android.content.Context;
-import android.content.res.Configuration;
 import android.graphics.Rect;
 import android.hardware.Camera;
 import android.os.Handler;
@@ -25,7 +24,6 @@
 import java.util.Map;
 
 import me.dm7.barcodescanner.core.BarcodeScannerView;
-import me.dm7.barcodescanner.core.DisplayUtils;
 
 public class ZXingScannerView extends BarcodeScannerView {
     public interface CameraStatusCallback {
@@ -36,7 +34,7 @@
     private boolean cameraReady = false;
 
     public interface ResultHandler {
-        public void handleResult(Result rawResult);
+        void handleResult(Result rawResult);
     }
 
     private MultiFormatReader mMultiFormatReader;
@@ -118,18 +116,6 @@ public void run() {
             int width = size.width;
             int height = size.height;
 
-            if (DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
-                byte[] rotatedData = new byte[data.length];
-                for (int y = 0; y < height; y++) {
-                    for (int x = 0; x < width; x++)
-                        rotatedData[x * height + height - y - 1] = data[x + y * width];
-                }
-                int tmp = width;
-                width = height;
-                height = tmp;
-                data = rotatedData;
-            }
-
             Result rawResult = null;
             PlanarYUVLuminanceSource source = buildLuminanceSource(data, width, height);
 
