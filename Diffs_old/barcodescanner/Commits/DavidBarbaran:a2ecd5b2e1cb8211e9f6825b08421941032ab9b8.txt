diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
deleted file mode 100644
index 599bd5f..0000000
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.java
+++ /dev/null
@@ -1,63 +0,0 @@
-package me.dm7.barcodescanner.core;
-
-import android.hardware.Camera;
-
-import java.util.List;
-
-public class CameraUtils {
-    /** A safe way to get an instance of the Camera object. */
-    public static Camera getCameraInstance() {
-        return getCameraInstance(getDefaultCameraId());
-    }
-
-    /** Favor back-facing camera by default. If none exists, fallback to whatever camera is available **/
-    public static int getDefaultCameraId() {
-        int numberOfCameras = Camera.getNumberOfCameras();
-        Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
-        int defaultCameraId = -1;
-        for (int i = 0; i < numberOfCameras; i++) {
-            defaultCameraId = i;
-            Camera.getCameraInfo(i, cameraInfo);
-            if (cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_BACK) {
-                return i;
-            }
-        }
-        return defaultCameraId;
-    }
-
-    /** A safe way to get an instance of the Camera object. */
-    public static Camera getCameraInstance(int cameraId) {
-        Camera c = null;
-        try {
-            if(cameraId == -1) {
-                c = Camera.open(); // attempt to get a Camera instance
-            } else {
-                c = Camera.open(cameraId); // attempt to get a Camera instance
-            }
-        }
-        catch (Exception e) {
-            // Camera is not available (in use or does not exist)
-        }
-        return c; // returns null if camera is unavailable
-    }
-
-    public static boolean isFlashSupported(Camera camera) {
-        /* Credits: Top answer at http://stackoverflow.com/a/19599365/868173 */
-        if (camera != null) {
-            Camera.Parameters parameters = camera.getParameters();
-
-            if (parameters.getFlashMode() == null) {
-                return false;
-            }
-
-            List<String> supportedFlashModes = parameters.getSupportedFlashModes();
-            if (supportedFlashModes == null || supportedFlashModes.isEmpty() || supportedFlashModes.size() == 1 && supportedFlashModes.get(0).equals(Camera.Parameters.FLASH_MODE_OFF)) {
-                return false;
-            }
-        } else {
-            return false;
-        }
-
-        return true;
-    }
-}
\ No newline at end of file
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.kt b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.kt
new file mode 100644
index 0000000..71194b1
--- /dev/null
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraUtils.kt
@@ -0,0 +1,57 @@
+package me.dm7.barcodescanner.core
+
+import android.hardware.Camera
+import java.lang.Exception
+
+object CameraUtils {
+
+    fun getCameraInstance(): Camera? {
+        return getCameraInstance(getDefaultCameraId())
+    }
+
+    fun getCameraInstance(cameraId: Int): Camera? {
+        var c: Camera? = null
+        try {
+            c = if (cameraId == -1) {
+                Camera.open() // attempt to get a Camera instance
+            } else {
+                Camera.open(cameraId) // attempt to get a Camera instance
+            }
+        } catch (e: Exception) {
+            // Camera is not available (in use or does not exist)
+        }
+        return c // returns null if camera is unavailable
+    }
+
+    fun getDefaultCameraId(): Int {
+        val numberOfCameras = Camera.getNumberOfCameras()
+        val cameraInfo = Camera.CameraInfo()
+        var defaultCameraId = -1
+        for (i in 0..numberOfCameras) {
+            defaultCameraId = i
+            Camera.getCameraInfo(i, cameraInfo)
+            if (cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_BACK) {
+                return i
+            }
+        }
+        return defaultCameraId
+    }
+
+    fun isFlashSupported(camera: Camera?): Boolean {
+        if (camera != null) {
+            val parameters = camera.parameters
+
+            if (parameters.flashMode == null) {
+                return false
+            }
+
+            val supportedFlashModes = parameters.supportedFlashModes
+            if (supportedFlashModes == null || supportedFlashModes.isEmpty() || supportedFlashModes.size == 1 && supportedFlashModes[0] == Camera.Parameters.FLASH_MODE_OFF) {
+                return false
+            }
+        } else {
+            return false
+        }
+        return true
+    }
+}
\ No newline at end of file
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.java b/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.java
deleted file mode 100644
index 6c47312..0000000
--- a/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.java
+++ /dev/null
@@ -1,41 +0,0 @@
-package me.dm7.barcodescanner.core;
-
-import android.content.Context;
-import android.content.res.Configuration;
-import android.graphics.Point;
-import android.view.Display;
-import android.view.WindowManager;
-
-public class DisplayUtils {
-    public static Point getScreenResolution(Context context) {
-        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
-        Display display = wm.getDefaultDisplay();
-        Point screenResolution = new Point();
-        if (android.os.Build.VERSION.SDK_INT >= 13) {
-            display.getSize(screenResolution);
-        } else {
-            screenResolution.set(display.getWidth(), display.getHeight());
-        }
-
-        return screenResolution;
-    }
-
-    public static int getScreenOrientation(Context context)
-    {
-        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
-        Display display = wm.getDefaultDisplay();
-
-        int orientation = Configuration.ORIENTATION_UNDEFINED;
-        if(display.getWidth()==display.getHeight()){
-            orientation = Configuration.ORIENTATION_SQUARE;
-        } else{
-            if(display.getWidth() < display.getHeight()){
-                orientation = Configuration.ORIENTATION_PORTRAIT;
-            }else {
-                orientation = Configuration.ORIENTATION_LANDSCAPE;
-            }
-        }
-        return orientation;
-    }
-
-}
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.kt b/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.kt
new file mode 100644
index 0000000..9e6d09c
--- /dev/null
+++ b/core/src/main/java/me/dm7/barcodescanner/core/DisplayUtils.kt
@@ -0,0 +1,36 @@
+package me.dm7.barcodescanner.core
+
+import android.content.Context
+import android.content.res.Configuration
+import android.graphics.Point
+import android.view.WindowManager
+
+object DisplayUtils {
+
+    fun getScreenResolution(context: Context): Point {
+        val wm = context.getSystemService(Context.WINDOW_SERVICE) as WindowManager
+        val display = wm.defaultDisplay
+        val screenResolution = Point()
+        if (android.os.Build.VERSION.SDK_INT >= 13) {
+            display.getSize(screenResolution)
+        } else {
+            screenResolution.set(display.width, display.height)
+        }
+        return screenResolution
+    }
+
+    fun getScreenOrientation(context: Context): Int {
+        val wm = context.getSystemService(Context.WINDOW_SERVICE) as WindowManager
+        val display = wm.defaultDisplay
+
+        return if (display.width == display.height) {
+            Configuration.ORIENTATION_SQUARE
+        } else {
+            if (display.width < display.height) {
+                Configuration.ORIENTATION_PORTRAIT
+            } else {
+                Configuration.ORIENTATION_LANDSCAPE
+            }
+        }
+    }
+}
\ No newline at end of file
diff --git a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
index d1717ba..a8d205a 100644
--- a/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
+++ b/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
@@ -106,7 +106,7 @@ public void onPreviewFrame(byte[] data, Camera camera) {
             int width = size.width;
             int height = size.height;
 
-            if (DisplayUtils.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
+            if (DisplayUtils.INSTANCE.getScreenOrientation(getContext()) == Configuration.ORIENTATION_PORTRAIT) {
                 int rotationCount = getRotationCount();
                 if (rotationCount == 1 || rotationCount == 3) {
                     int tmp = width;
