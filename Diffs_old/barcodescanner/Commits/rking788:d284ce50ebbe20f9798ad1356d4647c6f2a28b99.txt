diff --git a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
index 7fdc1c0..be5b523 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/BarcodeScannerView.java
@@ -1,6 +1,7 @@
 package me.dm7.barcodescanner.core;
 
 import android.content.Context;
+import android.content.res.TypedArray;
 import android.graphics.Color;
 import android.graphics.Rect;
 import android.hardware.Camera;
@@ -15,9 +16,16 @@
     private CameraPreview mPreview;
     private IViewFinder mViewFinderView;
     private Rect mFramingRectInPreview;
+    protected boolean mStretchCameraToFill = false;
 
     public BarcodeScannerView(Context context) {
+        this(context, false);
+    }
+
+    public BarcodeScannerView(Context context, boolean stretchCameraToFill) {
         super(context);
+        mStretchCameraToFill = stretchCameraToFill;
+
         setupLayout();
     }
 
@@ -28,6 +36,7 @@ public BarcodeScannerView(Context context, AttributeSet attributeSet) {
 
     public final void setupLayout() {
         mPreview = new CameraPreview(getContext());
+        mPreview.setStretchToFill(mStretchCameraToFill);
         RelativeLayout relativeLayout = new RelativeLayout(getContext());
         relativeLayout.setGravity(Gravity.CENTER);
         relativeLayout.setBackgroundColor(Color.BLACK);
@@ -148,4 +157,15 @@ public void setAutoFocus(boolean state) {
             mPreview.setAutoFocus(state);
         }
     }
+
+    public void setStretchCameraToFill(boolean stretchCameraToFill) {
+        mStretchCameraToFill = stretchCameraToFill;
+        if (mPreview != null) {
+            mPreview.setStretchToFill(mStretchCameraToFill);
+        }
+    }
+
+    public boolean shouldStretchCameraToFill() {
+        return mStretchCameraToFill;
+    }
 }
diff --git a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
index 5f42fe0..1bebe1c 100644
--- a/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
+++ b/core/src/main/java/me/dm7/barcodescanner/core/CameraPreview.java
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.res.Configuration;
+import android.content.res.TypedArray;
 import android.graphics.Point;
 import android.hardware.Camera;
 import android.os.Handler;
@@ -24,14 +25,32 @@
     private boolean mPreviewing = true;
     private boolean mAutoFocus = true;
     private boolean mSurfaceCreated = false;
+    private boolean mStretchToFill = false;
     private Camera.PreviewCallback mPreviewCallback;
 
     public CameraPreview(Context context) {
+        this(context, false);
+    }
+
+    public CameraPreview(Context context, boolean stretchToFill) {
         super(context);
+        mStretchToFill = stretchToFill;
     }
 
-    public CameraPreview(Context context, AttributeSet attrs) {
-        super(context, attrs);
+    public CameraPreview(Context context, AttributeSet attributeSet) {
+        super(context, attributeSet);
+
+        TypedArray attrs = context.getTheme().obtainStyledAttributes(
+                attributeSet,
+                R.styleable.CameraPreview,
+                0, 0);
+
+        try {
+            mStretchToFill = attrs.getBoolean(R.styleable.CameraPreview_stretchToFill, false);
+        }
+        finally {
+            attrs.recycle();
+        }
     }
 
     public void setCamera(Camera camera, Camera.PreviewCallback previewCallback) {
@@ -118,6 +137,10 @@ public void stopCameraPreview() {
     }
 
     public void setupCameraParameters() {
+        if (mStretchToFill) {
+            return;
+        }
+
         Camera.Size optimalSize = getOptimalPreviewSize();
         Camera.Parameters parameters = mCamera.getParameters();
         parameters.setPreviewSize(optimalSize.width, optimalSize.height);
@@ -266,4 +289,12 @@ public void onAutoFocus(boolean success, Camera camera) {
     private void scheduleAutoFocus() {
         mAutoFocusHandler.postDelayed(doAutoFocus, 1000);
     }
+
+    public void setStretchToFill(boolean stretchToFill) {
+        mStretchToFill = stretchToFill;
+    }
+
+    public boolean shouldStretchToFill() {
+        return mStretchToFill;
+    }
 }
diff --git a/core/src/main/res/values/attrs.xml b/core/src/main/res/values/attrs.xml
new file mode 100644
index 0000000..a907fda
--- /dev/null
+++ b/core/src/main/res/values/attrs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="CameraPreview">
+        <attr name="stretchToFill" format="boolean" />
+    </declare-styleable>
+</resources>
\ No newline at end of file
diff --git a/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java b/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java
index e4640e9..71cf279 100644
--- a/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java
+++ b/zbar/zbar/src/main/java/me/dm7/barcodescanner/zbar/ZBarScannerView.java
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.res.Configuration;
+import android.content.res.TypedArray;
 import android.graphics.Rect;
 import android.hardware.Camera;
 import android.text.TextUtils;
@@ -36,12 +37,31 @@
     private ResultHandler mResultHandler;
 
     public ZBarScannerView(Context context) {
-        super(context);
+        this(context, false);
+    }
+
+    public ZBarScannerView(Context context, boolean stretchCameraToFill) {
+        super(context, stretchCameraToFill);
+
         setupScanner();
     }
 
     public ZBarScannerView(Context context, AttributeSet attributeSet) {
         super(context, attributeSet);
+
+        // See if stretchCameraToFill was specified in the XML layout file
+        TypedArray attrs = context.getTheme().obtainStyledAttributes(
+                attributeSet,
+                R.styleable.ZBarScannerView,
+                0, 0);
+
+        try {
+            setStretchCameraToFill(attrs.getBoolean(R.styleable.ZBarScannerView_stretchCameraToFill, false));
+        }
+        finally {
+            attrs.recycle();
+        }
+
         setupScanner();
     }
 
diff --git a/zbar/zbar/src/main/res/values/attrs.xml b/zbar/zbar/src/main/res/values/attrs.xml
new file mode 100644
index 0000000..21d855f
--- /dev/null
+++ b/zbar/zbar/src/main/res/values/attrs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="ZBarScannerView">
+        <attr name="stretchCameraToFill" format="boolean" />
+    </declare-styleable>
+</resources>
\ No newline at end of file
diff --git a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java b/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
index 54c5a5a..70816da 100644
--- a/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
+++ b/zxing/sample/src/main/java/me/dm7/barcodescanner/zxing/sample/SimpleScannerFragment.java
@@ -16,7 +16,7 @@
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        mScannerView = new ZXingScannerView(getActivity());
+        mScannerView = new ZXingScannerView(getActivity(), false);
         return mScannerView;
     }
 
diff --git a/zxing/sample/src/main/res/layout/activity_scanner_fragment_with_headerfooter.xml b/zxing/sample/src/main/res/layout/activity_scanner_fragment_with_headerfooter.xml
new file mode 100644
index 0000000..592aff2
--- /dev/null
+++ b/zxing/sample/src/main/res/layout/activity_scanner_fragment_with_headerfooter.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="160dp"
+        android:textSize="20sp"
+        android:text="Top Text View"
+        android:gravity="center"
+        android:textStyle="bold"/>
+    <fragment android:name="me.dm7.barcodescanner.zxing.sample.SimpleScannerFragment"
+        android:id="@+id/scanner_fragment"
+        android:layout_weight="1"
+        android:layout_width="match_parent"
+        android:layout_height="0dip" />
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="80sp"
+        android:text="Bottom Text View"
+        android:textSize="20sp"
+        android:gravity="center"
+        android:textStyle="bold"/>
+</LinearLayout>
\ No newline at end of file
diff --git a/zxing/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java b/zxing/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
index fc1933d..05a3c1d 100644
--- a/zxing/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
+++ b/zxing/zxing/src/main/java/me/dm7/barcodescanner/zxing/ZXingScannerView.java
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.res.Configuration;
+import android.content.res.TypedArray;
 import android.graphics.Rect;
 import android.hardware.Camera;
 import android.util.AttributeSet;
@@ -51,12 +52,31 @@
     }
 
     public ZXingScannerView(Context context) {
-        super(context);
+        this(context, false);
+    }
+
+    public ZXingScannerView(Context context, boolean stretchCameraToFill) {
+        super(context, stretchCameraToFill);
+
         initMultiFormatReader();
     }
 
     public ZXingScannerView(Context context, AttributeSet attributeSet) {
         super(context, attributeSet);
+
+        // See if stretchCameraToFill was specified in the XML layout file
+        TypedArray attrs = context.getTheme().obtainStyledAttributes(
+                attributeSet,
+                R.styleable.ZXingScannerView,
+                0, 0);
+
+        try {
+            setStretchCameraToFill(attrs.getBoolean(R.styleable.ZXingScannerView_stretchCameraToFill, false));
+        }
+        finally {
+            attrs.recycle();
+        }
+
         initMultiFormatReader();
     }
 
diff --git a/zxing/zxing/src/main/res/values/attrs.xml b/zxing/zxing/src/main/res/values/attrs.xml
new file mode 100644
index 0000000..a213865
--- /dev/null
+++ b/zxing/zxing/src/main/res/values/attrs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="ZXingScannerView">
+        <attr name="stretchCameraToFill" format="boolean" />
+    </declare-styleable>
+</resources>
\ No newline at end of file
