diff --git a/Autobahn/src/de/tavendo/autobahn/WebSocket.java b/Autobahn/src/de/tavendo/autobahn/WebSocket.java
index a7562c5..aedb802 100644
--- a/Autobahn/src/de/tavendo/autobahn/WebSocket.java
+++ b/Autobahn/src/de/tavendo/autobahn/WebSocket.java
@@ -86,6 +86,13 @@
 	    * @param payload    pong message payload or null (empty payload).
 	    */
 	   public void onPongMessage(byte[] payload);
+	   /**
+	    * Fired when a ping message has been received.
+	    * 
+	    * @param payload    ping message payload or null (empty payload).
+	    * @retrun byte[]    reply pong message with it as payload. if return null replay with ping.payload.
+	    */
+	   public byte[] onPingMessage(byte[] payload);
    }
 
    public void connect(String wsUri, ConnectionHandler wsHandler) throws WebSocketException;
diff --git a/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java b/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java
index 934d1d5..be5c55c 100644
--- a/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java
+++ b/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java
@@ -421,9 +421,17 @@ public void handleMessage(Message msg) {
                WebSocketMessage.Ping ping = (WebSocketMessage.Ping) msg.obj;
                if (DEBUG) Log.d(TAG, "WebSockets Ping received");
 
+               byte[] payload = null;
+               if (mWsHandler != null) {
+                   payload = mWsHandler.onPingMessage(ping.mPayload);
+                } else {
+                   if (DEBUG) Log.d(TAG, "could not call onPongMessage() .. handler already NULL");
+                }
+               
                // reply with Pong
                WebSocketMessage.Pong pong = new WebSocketMessage.Pong();
-               pong.mPayload = ping.mPayload;
+               if (payload != null) pong.mPayload = payload;
+               else pong.mPayload = ping.mPayload;
                mWriter.forward(pong);
 
             } else if (msg.obj instanceof WebSocketMessage.Pong) {
diff --git a/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java b/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java
index 1937040..8986d00 100644
--- a/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java
+++ b/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java
@@ -74,5 +74,14 @@ public void onBinaryMessage(byte[] payload) {
     */
    public void onPongMessage(byte[] payload) {
    }
+   /**
+    * Fired when a ping message has been received.
+    * 
+    * @param payload    ping message payload or null (empty payload).
+    * @retrun byte[]    reply pong message with it as payload. if return null replay with ping.payload.
+    */
+   public byte[] onPingMessage(byte[] payload) {
+	   return null;
+   }
 
 }
