diff --git a/Autobahn/src/de/tavendo/autobahn/WebSocket.java b/Autobahn/src/de/tavendo/autobahn/WebSocket.java
index 44dade8..e846bce 100644
--- a/Autobahn/src/de/tavendo/autobahn/WebSocket.java
+++ b/Autobahn/src/de/tavendo/autobahn/WebSocket.java
@@ -77,9 +77,16 @@
 	   /**
 	    * Fired when a binary message has been received.
 	    *
-	    * @param payload    Binar message payload or null (empty payload).
+	    * @param payload    Binary message payload or null (empty payload).
 	    */
 	   public void onBinaryMessage(byte[] payload);
+
+       /**
+        * Fired when a PONG message is received from the server.
+        *
+        * @param payload    Binary message payload or null (empty payload).
+        */
+       public void onPongMessage(byte[] payload);
    }
 
    public void connect(String wsUri, ConnectionHandler wsHandler) throws WebSocketException;
@@ -89,4 +96,5 @@
    public void sendBinaryMessage(byte[] payload);
    public void sendRawTextMessage(byte[] payload);
    public void sendTextMessage(String payload);
+   public void sendPingMessage(byte[] payload);
 }
diff --git a/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java b/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java
index 876d388..e424dac 100644
--- a/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java
+++ b/Autobahn/src/de/tavendo/autobahn/WebSocketConnection.java
@@ -18,18 +18,19 @@
 
 package de.tavendo.autobahn;
 
+import android.os.Handler;
+import android.os.HandlerThread;
+import android.os.Message;
+import android.util.Log;
+
+import org.apache.http.message.BasicNameValuePair;
+
 import java.io.IOException;
 import java.net.InetSocketAddress;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.nio.channels.SocketChannel;
 import java.util.List;
-import org.apache.http.message.BasicNameValuePair;
-
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Message;
-import android.util.Log;
 
 public class WebSocketConnection implements WebSocket {
 
@@ -155,6 +156,10 @@ public void sendBinaryMessage(byte[] payload) {
    }
 
 
+   public void sendPingMessage(byte[] payload) {
+       mWriter.forward(new WebSocketMessage.Ping(payload));
+   }
+
    public boolean isConnected() {
       return mTransportChannel != null && mTransportChannel.isConnected();
    }
@@ -419,10 +424,13 @@ public void handleMessage(Message msg) {
 
             } else if (msg.obj instanceof WebSocketMessage.Pong) {
 
-               @SuppressWarnings("unused")
-               WebSocketMessage.Pong pong = (WebSocketMessage.Pong) msg.obj;
+               final WebSocketMessage.Pong pongMessage = (WebSocketMessage.Pong) msg.obj;
 
-               if (DEBUG) Log.d(TAG, "WebSockets Pong received");
+               if (mWsHandler != null) {
+                  mWsHandler.onPongMessage(pongMessage.mPayload);
+               } else {
+                  if (DEBUG) Log.d(TAG, "could not call onPongMessage() .. handler already NULL");
+               }
 
             } else if (msg.obj instanceof WebSocketMessage.Close) {
 
diff --git a/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java b/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java
index bfe343d..62cb604 100644
--- a/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java
+++ b/Autobahn/src/de/tavendo/autobahn/WebSocketConnectionHandler.java
@@ -67,4 +67,11 @@ public void onRawTextMessage(byte[] payload) {
    public void onBinaryMessage(byte[] payload) {
    }
 
+   /**
+    * Fired when a PONG message is received from the server.
+    *
+    * @param payload    Binary message payload or null (empty payload).
+    */
+   public void onPongMessage(byte[] payload) {
+   }
 }
