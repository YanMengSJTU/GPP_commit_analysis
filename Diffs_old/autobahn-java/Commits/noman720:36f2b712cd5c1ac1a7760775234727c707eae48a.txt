diff --git a/autobahn/src/main/java/io/crossbar/autobahn/websocket/WebSocketConnection.java b/autobahn/src/main/java/io/crossbar/autobahn/websocket/WebSocketConnection.java
index 782ef3f..e7d5a7d 100644
--- a/autobahn/src/main/java/io/crossbar/autobahn/websocket/WebSocketConnection.java
+++ b/autobahn/src/main/java/io/crossbar/autobahn/websocket/WebSocketConnection.java
@@ -28,6 +28,7 @@
 import java.util.concurrent.TimeUnit;
 
 import javax.net.SocketFactory;
+import javax.net.ssl.SSLSocket;
 import javax.net.ssl.SSLSocketFactory;
 
 import io.crossbar.autobahn.utils.ABLogger;
@@ -124,6 +125,10 @@ public void run() {
                     mSocket = SocketFactory.getDefault().createSocket();
                 }
 
+                if (mOptions.getEnableTls()){
+                    enableTLSOnSocket(mSocket);
+                }
+
                 // the following will block until connection was established or
                 // an error occurred!
                 mSocket.connect(new InetSocketAddress(mWsHost, mWsPort),
@@ -674,4 +679,14 @@ private void createReader() throws IOException {
 
         LOGGER.d("WS reader created and started");
     }
+
+    /**
+     * Enable TLS manually on socket. It's basically need for android api level < 20.
+     * @param socket
+     */
+    private void enableTLSOnSocket(Socket socket) {
+        if(socket != null && (socket instanceof SSLSocket)) {
+            ((SSLSocket)socket).setEnabledProtocols(new String[] {"TLSv1.1", "TLSv1.2"});
+        }
+    }
 }
diff --git a/autobahn/src/main/java/io/crossbar/autobahn/websocket/types/WebSocketOptions.java b/autobahn/src/main/java/io/crossbar/autobahn/websocket/types/WebSocketOptions.java
index 1af75bd..58a4bbc 100644
--- a/autobahn/src/main/java/io/crossbar/autobahn/websocket/types/WebSocketOptions.java
+++ b/autobahn/src/main/java/io/crossbar/autobahn/websocket/types/WebSocketOptions.java
@@ -28,6 +28,7 @@
     private boolean mValidateIncomingUtf8;
     private boolean mMaskClientFrames;
     private int mReconnectInterval;
+    private boolean mEnableTls;
 
 
     /**
@@ -44,6 +45,7 @@ public WebSocketOptions() {
         mValidateIncomingUtf8 = true;
         mMaskClientFrames = true;
         mReconnectInterval = 0;  // no reconnection by default
+        mEnableTls = false;
     }
 
     /**
@@ -62,6 +64,7 @@ public WebSocketOptions(WebSocketOptions other) {
         mValidateIncomingUtf8 = other.mValidateIncomingUtf8;
         mMaskClientFrames = other.mMaskClientFrames;
         mReconnectInterval = other.mReconnectInterval;
+        mEnableTls = other.mEnableTls;
     }
 
     /**
@@ -262,4 +265,12 @@ public void setReconnectInterval(int reconnectInterval) {
     public int getReconnectInterval() {
         return mReconnectInterval;
     }
+
+    public boolean getEnableTls() {
+        return mEnableTls;
+    }
+
+    public void setEnableTls(boolean enable) {
+        this.mEnableTls = enable;
+    }
 }
