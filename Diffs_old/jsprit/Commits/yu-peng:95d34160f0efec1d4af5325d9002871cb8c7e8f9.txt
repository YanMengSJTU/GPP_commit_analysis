diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/ruin/AbstractRuinStrategy.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/ruin/AbstractRuinStrategy.java
index 37552b35f..c6e0436fb 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/ruin/AbstractRuinStrategy.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/ruin/AbstractRuinStrategy.java
@@ -22,8 +22,13 @@
 import com.graphhopper.jsprit.core.algorithm.ruin.listener.RuinListener;
 import com.graphhopper.jsprit.core.algorithm.ruin.listener.RuinListeners;
 import com.graphhopper.jsprit.core.problem.VehicleRoutingProblem;
+import com.graphhopper.jsprit.core.problem.job.Delivery;
 import com.graphhopper.jsprit.core.problem.job.Job;
+import com.graphhopper.jsprit.core.problem.job.Pickup;
 import com.graphhopper.jsprit.core.problem.solution.route.VehicleRoute;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.DeliverService;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.PickupService;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
 import com.graphhopper.jsprit.core.util.RandomNumberGeneration;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -63,6 +68,37 @@ protected AbstractRuinStrategy(VehicleRoutingProblem vrp) {
     @Override
     public Collection<Job> ruin(Collection<VehicleRoute> vehicleRoutes) {
         ruinListeners.ruinStarts(vehicleRoutes);
+
+        for (VehicleRoute route : vehicleRoutes) {
+            if (route.isEmpty())
+                continue;
+            TourActivity actBefore = route.getStart();
+            TourActivity actToEval = null;
+            for (TourActivity act : route.getActivities()) {
+                if (actToEval == null) {
+                    actToEval = act;
+                    continue;
+                }
+
+                actBefore = actToEval;
+                actToEval = act;
+
+                if (actToEval instanceof PickupService) {
+                    ((Pickup) ((PickupService) actToEval).getJob()).setPairedDelivery(null);
+                }
+                if (actToEval instanceof DeliverService) {
+                    ((Delivery) ((DeliverService) actToEval).getJob()).setPairedPickup(null);
+                }
+
+                if (actBefore instanceof PickupService && actToEval instanceof DeliverService) {
+                    ((Delivery) ((DeliverService) actToEval).getJob())
+                            .setPairedPickup(((PickupService) actBefore).getJob());
+                    ((Pickup) ((PickupService) actBefore).getJob())
+                            .setPairedDelivery(((DeliverService) actToEval).getJob());
+                }
+            }
+        }
+        
         Collection<Job> unassigned = ruinRoutes(vehicleRoutes);
         logger.trace("ruin: [ruined={}]", unassigned.size());
         ruinListeners.ruinEnds(vehicleRoutes, unassigned);
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java
index f31b25ef2..ba1558aaf 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java
@@ -24,6 +24,8 @@
  * @author schroeder
  */
 public class Delivery extends Service {
+    
+    private Service pairedPickup;
 
     public static class Builder extends Service.Builder<Delivery> {
 
@@ -68,5 +70,12 @@ public Delivery build() {
         super(builder);
 
     }
+    
+    public Service getPairedPickup() {
+        return pairedPickup;
+    }
 
+    public void setPairedPickup(Service pairedPickup) {
+        this.pairedPickup = pairedPickup;
+    }
 }
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java
index 2a893d5f0..e53657110 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java
@@ -24,6 +24,8 @@
  * @author schroeder
  */
 public class Pickup extends Service {
+    
+    private Service pairedDelivery;
 
     public static class Builder extends Service.Builder<Pickup> {
 
@@ -69,5 +71,12 @@ public Pickup build() {
     Pickup(Builder builder) {
         super(builder);
     }
+    
+    public Service getPairedDelivery() {
+        return pairedDelivery;
+    }
 
+    public void setPairedDelivery(Service pairedDelivery) {
+        this.pairedDelivery = pairedDelivery;
+    }
 }
