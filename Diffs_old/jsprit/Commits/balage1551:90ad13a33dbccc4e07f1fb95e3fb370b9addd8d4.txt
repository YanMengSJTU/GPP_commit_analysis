diff --git a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/CapacityTest.java b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/CapacityTest.java
index 847acc014..a3208db2d 100644
--- a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/CapacityTest.java
+++ b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/CapacityTest.java
@@ -26,6 +26,24 @@
 
 public class CapacityTest {
 
+    @Test
+    public void getNegativeShouldReturnCorrectCapacity() {
+        Capacity cap = Capacity.Builder.newInstance().addDimension(0, 2).addDimension(1, -3).build();
+        Capacity neg = cap.getNegativeDimensions();
+        Assert.assertEquals(2, neg.getNuOfDimensions());
+        Assert.assertEquals(0, neg.get(0));
+        Assert.assertEquals(-3, neg.get(1));
+    }
+
+    @Test
+    public void getPositiveShouldReturnCorrectCapacity() {
+        Capacity cap = Capacity.Builder.newInstance().addDimension(0, 2).addDimension(1, -3).build();
+        Capacity pos = cap.getPositiveDimensions();
+        Assert.assertEquals(2, pos.getNuOfDimensions());
+        Assert.assertEquals(2, pos.get(0));
+        Assert.assertEquals(0, pos.get(1));
+    }
+
     @Test
     public void whenSettingSimplyOneCapDimension_nuOfDimensionMustBeCorrect() {
         Capacity.Builder capBuilder = Capacity.Builder.newInstance();
diff --git a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/DeliveryTest.java b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/DeliveryTest.java
index 2246d75d6..7d7df1b29 100644
--- a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/DeliveryTest.java
+++ b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/DeliveryTest.java
@@ -17,6 +17,7 @@
  */
 package com.graphhopper.jsprit.core.problem.job;
 
+import com.graphhopper.jsprit.core.problem.Capacity;
 import com.graphhopper.jsprit.core.problem.Location;
 import org.junit.Assert;
 import org.junit.Test;
@@ -42,6 +43,16 @@ public void whenAddingTwoCapDimension_nuOfDimsShouldBeTwo() {
 
     }
 
+    @Test
+    public void sizeAtStartAndEndShouldBeCorrect() {
+        Delivery one = new Delivery.Builder("s").setLocation(Location.newInstance("foofoo"))
+            .addSizeDimension(0, 2)
+            .addSizeDimension(1, 4)
+            .build();
+        assertTrue(one.getSizeAtStart().equals(one.getSize()));
+        assertTrue(one.getSizeAtEnd().equals(Capacity.Builder.newInstance().addDimension(0, 0).addDimension(1, 0).build()));
+    }
+
     @Test
     public void whenPickupIsBuiltWithoutSpecifyingCapacity_itShouldHvCapWithOneDimAndDimValOfZero() {
         Delivery one = new Delivery.Builder("s").setLocation(Location.newInstance("foofoo"))
diff --git a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/PickupTest.java b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/PickupTest.java
index 9c1e9a7d3..5757441e7 100644
--- a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/PickupTest.java
+++ b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/PickupTest.java
@@ -17,6 +17,7 @@
  */
 package com.graphhopper.jsprit.core.problem.job;
 
+import com.graphhopper.jsprit.core.problem.Capacity;
 import com.graphhopper.jsprit.core.problem.Location;
 import org.junit.Assert;
 import org.junit.Test;
@@ -42,6 +43,16 @@ public void whenAddingTwoCapDimension_nuOfDimsShouldBeTwo() {
 
     }
 
+    @Test
+    public void sizeAtStartAndEndShouldBeCorrect() {
+        Pickup one = new Pickup.Builder("s").setLocation(Location.newInstance("foofoo"))
+            .addSizeDimension(0, 2)
+            .addSizeDimension(1, 4)
+            .build();
+        assertTrue(one.getSizeAtEnd().equals(one.getSize()));
+        assertTrue(one.getSizeAtStart().equals(Capacity.Builder.newInstance().addDimension(0, 0).addDimension(1, 0).build()));
+    }
+
     @Test
     public void whenPickupIsBuiltWithoutSpecifyingCapacity_itShouldHvCapWithOneDimAndDimValOfZero() {
         Pickup one = new Pickup.Builder("s").setLocation(Location.newInstance("foofoo"))
diff --git a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ServiceTest.java b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ServiceTest.java
index db3ba4519..bc1481966 100644
--- a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ServiceTest.java
+++ b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ServiceTest.java
@@ -17,6 +17,7 @@
  */
 package com.graphhopper.jsprit.core.problem.job;
 
+import com.graphhopper.jsprit.core.problem.Capacity;
 import com.graphhopper.jsprit.core.problem.Location;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.TimeWindow;
 import org.junit.Assert;
@@ -73,6 +74,16 @@ public void whenAddingTwoCapDimension_nuOfDimsShouldBeTwo() {
         assertEquals(2, one.getSize().getNuOfDimensions());
     }
 
+    @Test
+    public void sizeAtStartAndEndShouldBeCorrect() {
+        Service one = new Service.Builder("s").setLocation(Location.newInstance("foofoo"))
+            .addSizeDimension(0, 2)
+            .addSizeDimension(1, 4)
+            .build();
+        assertTrue(one.getSizeAtEnd().equals(one.getSize()));
+        assertTrue(one.getSizeAtStart().equals(Capacity.Builder.newInstance().addDimension(0, 0).addDimension(1, 0).build()));
+    }
+
     @Test
     public void whenShipmentIsBuiltWithoutSpecifyingCapacity_itShouldHvCapWithOneDimAndDimValOfZero() {
         Service one = new Service.Builder("s").setLocation(Location.newInstance("foofoo"))
diff --git a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ShipmentTest.java b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ShipmentTest.java
index 884f403e9..afa1a5b7d 100644
--- a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ShipmentTest.java
+++ b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/job/ShipmentTest.java
@@ -17,6 +17,7 @@
  */
 package com.graphhopper.jsprit.core.problem.job;
 
+import com.graphhopper.jsprit.core.problem.Capacity;
 import com.graphhopper.jsprit.core.problem.Location;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.TimeWindow;
 import com.graphhopper.jsprit.core.util.Coordinate;
@@ -40,6 +41,15 @@ public void whenTwoShipmentsHaveTheSameId_theyReferencesShouldBeUnEqual() {
         assertTrue(one != two);
     }
 
+    @Test
+    public void sizeAtStartAndEndShouldBeCorrect() {
+        Shipment one = Shipment.Builder.newInstance("s").addSizeDimension(0, 10).addSizeDimension(1, 5).setPickupLocation(Location.Builder.newInstance().setId("foo").build()).
+            setDeliveryLocation(TestUtils.loc("foofoo")).setPickupServiceTime(10).setDeliveryServiceTime(20).build();
+        Capacity cap = Capacity.Builder.newInstance().addDimension(0, 0).addDimension(1, 0).build();
+        assertTrue(one.getSizeAtStart().equals(cap));
+        assertTrue(one.getSizeAtEnd().equals(cap));
+    }
+
     @Test
     public void whenTwoShipmentsHaveTheSameId_theyShouldBeEqual() {
         Shipment one = Shipment.Builder.newInstance("s").addSizeDimension(0, 10).setPickupLocation(Location.Builder.newInstance().setId("foo").build()).
