diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java
index bd4764ca9..1547bfdef 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java
@@ -43,12 +43,15 @@
 import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.StringColumnType;
 import com.graphhopper.jsprit.core.reporting.route.ActivityCostPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityLoadChangePrinterColumn;
+import com.graphhopper.jsprit.core.reporting.route.ActivityOperationTimePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ArrivalTimePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.EndTimePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.HumanReadableArrivalTimePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.HumanReadableEndTimePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.JobNamePrinterColumn;
+import com.graphhopper.jsprit.core.reporting.route.JobPriorityPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.route.JobTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.LoacationPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.RouteCostPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.RouteLoadPrinterColumn;
@@ -277,14 +280,21 @@ private static void printVerbose(PrintWriter out, VehicleRoutingProblem problem,
     private static void printVerbose2(PrintWriter out, VehicleRoutingProblem problem, VehicleRoutingProblemSolution solution) {
 
         PrinterColumnList<RoutePrinterContext> columns = new PrinterColumnList<>("Detailed route");
-        columns.addColumn(new RouteNumberPrinterColumn()).addColumn(new VehicleNamePrinterColumn())
-        .addColumn(new ActivityTypePrinterColumn()).addColumn(new JobNamePrinterColumn(b -> b.withMinWidth(10)))
-        .addColumn(new ActivityLoadChangePrinterColumn()).addColumn(new RouteLoadPrinterColumn())
-        .addColumn(new LoacationPrinterColumn()).addColumn(new ArrivalTimePrinterColumn())
-        .addColumn(new EndTimePrinterColumn()).addColumn(new HumanReadableArrivalTimePrinterColumn())
-        .addColumn(new HumanReadableEndTimePrinterColumn().withOrigin(LocalDateTime.now()))
-        .addColumn(new TransportCostPrinterColumn()).addColumn(new ActivityCostPrinterColumn())
-        .addColumn(new RouteCostPrinterColumn());
+        columns
+        .addColumn(new RouteNumberPrinterColumn())
+                        .addColumn(new VehicleNamePrinterColumn())
+        .addColumn(new ActivityTypePrinterColumn())
+                        .addColumn(new JobNamePrinterColumn(b -> b.withMinWidth(10))).addColumn(new JobTypePrinterColumn())
+                        .addColumn(new JobPriorityPrinterColumn()).addColumn(new ActivityLoadChangePrinterColumn())
+                        .addColumn(new RouteLoadPrinterColumn()).addColumn(new LoacationPrinterColumn())
+        .addColumn(new ActivityOperationTimePrinterColumn())
+        .addColumn(new ArrivalTimePrinterColumn())
+        .addColumn(new EndTimePrinterColumn())
+                        .addColumn(new HumanReadableArrivalTimePrinterColumn())
+                        .addColumn(new HumanReadableEndTimePrinterColumn().withOrigin(LocalDateTime.now()))
+                        .addColumn(new TransportCostPrinterColumn()).addColumn(new ActivityCostPrinterColumn())
+                        .addColumn(new RouteCostPrinterColumn())
+        ;
 
         ConfigurableTablePrinter<RoutePrinterContext> tablePrinter = new ConfigurableTablePrinter<>(columns);
         int routeNu = 1;
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/ActivityOperationTimePrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/ActivityOperationTimePrinterColumn.java
new file mode 100644
index 000000000..951877a40
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/ActivityOperationTimePrinterColumn.java
@@ -0,0 +1,32 @@
+package com.graphhopper.jsprit.core.reporting.route;
+
+import java.util.function.Consumer;
+
+import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
+import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.ColumnDefinition;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.ColumnDefinition.Builder;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.IntColumnType;
+
+public class ActivityOperationTimePrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, Integer> {
+
+    public ActivityOperationTimePrinterColumn() {
+        super();
+    }
+
+    public ActivityOperationTimePrinterColumn(Consumer<Builder> decorator) {
+        super(decorator);
+    }
+
+    @Override
+    public ColumnDefinition.Builder getColumnBuilder() {
+        return new ColumnDefinition.Builder(new IntColumnType("-"), "opTime");
+    }
+
+    @Override
+    public Integer getData(RoutePrinterContext context) {
+        TourActivity act = context.getActivity();
+        return (int) act.getOperationTime();
+    }
+
+}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobPriorityPrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobPriorityPrinterColumn.java
new file mode 100644
index 000000000..dc72f454d
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobPriorityPrinterColumn.java
@@ -0,0 +1,42 @@
+package com.graphhopper.jsprit.core.reporting.route;
+
+import java.util.function.Consumer;
+
+import com.graphhopper.jsprit.core.problem.job.Job;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.JobActivity;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
+import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.Alignment;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.ColumnDefinition;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.ColumnDefinition.Builder;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.StringColumnType;
+
+public class JobPriorityPrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String> {
+
+    private static final String[] PRIORITY_NAMES = new String[] { "", "HIGH", "MEDIUM", "LOW" };
+
+    public JobPriorityPrinterColumn() {
+        super();
+    }
+
+    public JobPriorityPrinterColumn(Consumer<Builder> decorator) {
+        super(decorator);
+    }
+
+    @Override
+    public ColumnDefinition.Builder getColumnBuilder() {
+        return new ColumnDefinition.Builder(new StringColumnType("-"), "priority").withAlignment(Alignment.CENTER);
+    }
+
+    @Override
+    public String getData(RoutePrinterContext context) {
+        TourActivity act = context.getActivity();
+        if (act instanceof JobActivity) {
+            Job job = ((JobActivity) context.getActivity()).getJob();
+            return PRIORITY_NAMES[job.getPriority()];
+        } else {
+            return null;
+        }
+    }
+
+}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobTypePrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobTypePrinterColumn.java
new file mode 100644
index 000000000..65ddb4bec
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobTypePrinterColumn.java
@@ -0,0 +1,39 @@
+package com.graphhopper.jsprit.core.reporting.route;
+
+import java.util.function.Consumer;
+
+import com.graphhopper.jsprit.core.problem.job.Job;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.JobActivity;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
+import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.ColumnDefinition;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.ColumnDefinition.Builder;
+import com.graphhopper.jsprit.core.reporting.DynamicTableDefinition.StringColumnType;
+
+public class JobTypePrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String> {
+
+    public JobTypePrinterColumn() {
+        super();
+    }
+
+    public JobTypePrinterColumn(Consumer<Builder> decorator) {
+        super(decorator);
+    }
+
+    @Override
+    public ColumnDefinition.Builder getColumnBuilder() {
+        return new ColumnDefinition.Builder(new StringColumnType("-"), "job type");
+    }
+
+    @Override
+    public String getData(RoutePrinterContext context) {
+        TourActivity act = context.getActivity();
+        if (act instanceof JobActivity) {
+            Job job = ((JobActivity) context.getActivity()).getJob();
+            return job.getClass().getSimpleName();
+        } else {
+            return null;
+        }
+    }
+
+}
