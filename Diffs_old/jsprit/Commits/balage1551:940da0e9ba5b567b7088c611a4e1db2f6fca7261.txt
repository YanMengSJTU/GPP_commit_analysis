diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java
index 02ca45b59..8acb5f486 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/SolutionPrinter.java
@@ -27,6 +27,7 @@
 import java.util.stream.Collectors;
 
 import com.graphhopper.jsprit.core.problem.VehicleRoutingProblem;
+import com.graphhopper.jsprit.core.problem.VehicleRoutingProblem.FleetSize;
 import com.graphhopper.jsprit.core.problem.job.Job;
 import com.graphhopper.jsprit.core.problem.solution.VehicleRoutingProblemSolution;
 import com.graphhopper.jsprit.core.problem.solution.route.VehicleRoute;
@@ -215,6 +216,8 @@ public static void printSummary(PrintWriter out, VehicleRoutingProblem problem,
 
         DynamicTablePrinter problemTablePrinter = new DynamicTablePrinter(problemTableDef);
         problemTablePrinter.addRow().add("fleetsize").add(problem.getFleetSize());
+        problemTablePrinter.addRow().add("maxNoVehicles")
+                        .add(problem.getFleetSize() == FleetSize.FINITE ? problem.getVehicles().size() : "unlimited");
         problemTablePrinter.addSeparator();
         problemTablePrinter.addRow().add("noJobs").add(problem.getJobs().values().size());
         for (Entry<Class<? extends Job>, Long> jc : getNuOfJobs(problem).entrySet()) {
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java
index 133768628..8c0b65059 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java
@@ -6,15 +6,15 @@
 
 import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.PrinterColumnList;
+import com.graphhopper.jsprit.core.reporting.job.JobNamePrinterColumn;
+import com.graphhopper.jsprit.core.reporting.job.JobPriorityPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.job.JobTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityCostPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityDurationPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityLoadChangePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ArrivalTimePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.EndTimePrinterColumn;
-import com.graphhopper.jsprit.core.reporting.route.JobNamePrinterColumn;
-import com.graphhopper.jsprit.core.reporting.route.JobPriorityPrinterColumn;
-import com.graphhopper.jsprit.core.reporting.route.JobTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.LoacationPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.OperationDurationPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.RouteCostPrinterColumn;
@@ -35,6 +35,7 @@
  * @author balage
  *
  */
+@SuppressWarnings("unchecked")
 public class SolutionPrintColumnLists {
 
     /**
@@ -66,7 +67,7 @@
         minimalSet.add(RouteNumberPrinterColumn.class);
         minimalSet.add(VehicleNamePrinterColumn.class);
         minimalSet.add(ActivityTypePrinterColumn.class);
-        minimalSet.add(JobNamePrinterColumn.class);
+        minimalSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobNamePrinterColumn.class);
         minimalSet.add(ArrivalTimePrinterColumn.class);
         minimalSet.add(EndTimePrinterColumn.class);
         minimalSet.add(RouteCostPrinterColumn.class);
@@ -76,7 +77,7 @@
         defaultSet.add(RouteNumberPrinterColumn.class);
         defaultSet.add(VehicleNamePrinterColumn.class);
         defaultSet.add(ActivityTypePrinterColumn.class);
-        defaultSet.add(JobNamePrinterColumn.class);
+        defaultSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobNamePrinterColumn.class);
         defaultSet.add(LoacationPrinterColumn.class);
         defaultSet.add(ActivityLoadChangePrinterColumn.class);
         defaultSet.add(OperationDurationPrinterColumn.class);
@@ -92,9 +93,9 @@
         verboseSet.add(VehicleNamePrinterColumn.class);
         verboseSet.add(ActivityTypePrinterColumn.class);
 
-        verboseSet.add(JobNamePrinterColumn.class);
-        verboseSet.add(JobTypePrinterColumn.class);
-        verboseSet.add(JobPriorityPrinterColumn.class);
+        verboseSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobNamePrinterColumn.class);
+        verboseSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobTypePrinterColumn.class);
+        verboseSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobPriorityPrinterColumn.class);
 
         verboseSet.add(LoacationPrinterColumn.class);
         verboseSet.add(ActivityLoadChangePrinterColumn.class);
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobNamePrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobNamePrinterColumn.java
index 33919c687..f141152ed 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobNamePrinterColumn.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobNamePrinterColumn.java
@@ -1,10 +1,9 @@
-package com.graphhopper.jsprit.core.reporting.route;
+package com.graphhopper.jsprit.core.reporting.job;
 
 import java.util.function.Consumer;
 
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
 import com.graphhopper.jsprit.core.problem.job.Job;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.JobActivity;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
 import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnDefinition;
 import com.graphhopper.jsprit.core.reporting.columndefinition.StringColumnType;
@@ -19,7 +18,7 @@
  *
  * @author balage
  */
-public class JobNamePrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String, JobNamePrinterColumn> {
+public class JobNamePrinterColumn<T extends JobPrinterContext> extends AbstractPrinterColumn<T, String, JobNamePrinterColumn<T>> {
 
     /**
      * Constructor.
@@ -46,14 +45,9 @@ protected String getDefaultTitle() {
     }
 
     @Override
-    public String getData(RoutePrinterContext context) {
-        TourActivity act = context.getActivity();
-        if (act instanceof JobActivity) {
-            Job job = ((JobActivity) context.getActivity()).getJob();
-            return job.getId();
-        } else {
-            return null;
-        }
+    public String getData(T context) {
+        AbstractJob job = context.getJob();
+        return job == null ? null : job.getId();
     }
 
 }
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobPrinterContext.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobPrinterContext.java
new file mode 100644
index 000000000..08e1bc591
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobPrinterContext.java
@@ -0,0 +1,21 @@
+package com.graphhopper.jsprit.core.reporting.job;
+
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
+import com.graphhopper.jsprit.core.reporting.PrinterContext;
+
+/**
+ * The context of the detailed route printer columns.
+ *
+ * <p>
+ * This is a semi-mutable class: only the activity could be altered. Therefore
+ * for each route a new instance should be created.
+ * </p>
+ *
+ * @author balage
+ *
+ */
+public interface JobPrinterContext extends PrinterContext {
+
+    public AbstractJob getJob();
+
+}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobPriorityPrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobPriorityPrinterColumn.java
index b22337afd..524bdd7d8 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobPriorityPrinterColumn.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobPriorityPrinterColumn.java
@@ -1,10 +1,9 @@
-package com.graphhopper.jsprit.core.reporting.route;
+package com.graphhopper.jsprit.core.reporting.job;
 
 import java.util.function.Consumer;
 
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
 import com.graphhopper.jsprit.core.problem.job.Job;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.JobActivity;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
 import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnAlignment;
 import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnDefinition;
@@ -21,7 +20,8 @@
  *
  * @author balage
  */
-public class JobPriorityPrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String, JobPriorityPrinterColumn> {
+public class JobPriorityPrinterColumn<T extends JobPrinterContext>
+                extends AbstractPrinterColumn<T, String, JobPriorityPrinterColumn<T>> {
 
     private static final String[] PRIORITY_NAMES = new String[] { "", "HIGH", "MEDIUM", "LOW" };
 
@@ -50,14 +50,9 @@ protected String getDefaultTitle() {
     }
 
     @Override
-    public String getData(RoutePrinterContext context) {
-        TourActivity act = context.getActivity();
-        if (act instanceof JobActivity) {
-            Job job = ((JobActivity) context.getActivity()).getJob();
-            return PRIORITY_NAMES[job.getPriority()];
-        } else {
-            return null;
-        }
+    public String getData(T context) {
+        AbstractJob job = context.getJob();
+        return job == null ? null : PRIORITY_NAMES[job.getPriority()];
     }
 
 }
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobTypePrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobTypePrinterColumn.java
index b4b50062b..e51a1c7bb 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobTypePrinterColumn.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/job/JobTypePrinterColumn.java
@@ -1,10 +1,8 @@
-package com.graphhopper.jsprit.core.reporting.route;
+package com.graphhopper.jsprit.core.reporting.job;
 
 import java.util.function.Consumer;
 
-import com.graphhopper.jsprit.core.problem.job.Job;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.JobActivity;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
 import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnDefinition;
 import com.graphhopper.jsprit.core.reporting.columndefinition.StringColumnType;
@@ -19,7 +17,7 @@
  *
  * @author balage
  */
-public class JobTypePrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String, JobTypePrinterColumn> {
+public class JobTypePrinterColumn<T extends JobPrinterContext> extends AbstractPrinterColumn<T, String, JobTypePrinterColumn<T>> {
 
     /**
      * Constructor.
@@ -46,14 +44,9 @@ protected String getDefaultTitle() {
     }
 
     @Override
-    public String getData(RoutePrinterContext context) {
-        TourActivity act = context.getActivity();
-        if (act instanceof JobActivity) {
-            Job job = ((JobActivity) context.getActivity()).getJob();
-            return job.getClass().getSimpleName();
-        } else {
-            return null;
-        }
+    public String getData(JobPrinterContext context) {
+        AbstractJob job = context.getJob();
+        return job == null ? null : job.getClass().getSimpleName();
     }
 
 }
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/RoutePrinterContext.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/RoutePrinterContext.java
index 08ec51c19..28c74ba4a 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/RoutePrinterContext.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/RoutePrinterContext.java
@@ -1,9 +1,11 @@
 package com.graphhopper.jsprit.core.reporting.route;
 
 import com.graphhopper.jsprit.core.problem.VehicleRoutingProblem;
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
 import com.graphhopper.jsprit.core.problem.solution.route.VehicleRoute;
+import com.graphhopper.jsprit.core.problem.solution.route.activity.JobActivity;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.TourActivity;
-import com.graphhopper.jsprit.core.reporting.PrinterContext;
+import com.graphhopper.jsprit.core.reporting.job.JobPrinterContext;
 
 /**
  * The context of the detailed route printer columns.
@@ -16,7 +18,7 @@
  * @author balage
  *
  */
-public class RoutePrinterContext implements PrinterContext {
+public class RoutePrinterContext implements JobPrinterContext {
 
     // The route id
     private int routeNr;
@@ -83,4 +85,9 @@ public VehicleRoutingProblem getProblem() {
         return problem;
     }
 
+    @Override
+    public AbstractJob getJob() {
+        return (getActivity() instanceof JobActivity) ? ((JobActivity) getActivity()).getJob() : null;
+    }
+
 }
