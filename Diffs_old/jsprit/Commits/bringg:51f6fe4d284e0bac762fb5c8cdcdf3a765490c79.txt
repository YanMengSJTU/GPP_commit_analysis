diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/recreate/JobInsertionCostsCalculatorBuilder.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/recreate/JobInsertionCostsCalculatorBuilder.java
index 1135adb88..712c0916d 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/recreate/JobInsertionCostsCalculatorBuilder.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/algorithm/recreate/JobInsertionCostsCalculatorBuilder.java
@@ -301,6 +301,7 @@ public double getCosts(JobInsertionContext iContext, TourActivity prevAct, TourA
         switcher.put(Pickup.class, serviceInsertion);
         switcher.put(Delivery.class, serviceInsertion);
         switcher.put(Break.class, breakInsertionCalculator);
+        switcher.put(ShipmentWithMutablePickupDeliverOptions.class, shipmentInsertion);
 
         CalculatorPlusListeners calculatorPlusListeners = new CalculatorPlusListeners(switcher);
         if (configLocal != null) {
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/ShipmentWithMutablePickupDeliverOptions.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/ShipmentWithMutablePickupDeliverOptions.java
new file mode 100644
index 000000000..02a6ad157
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/ShipmentWithMutablePickupDeliverOptions.java
@@ -0,0 +1,26 @@
+package com.graphhopper.jsprit.core.problem.job;
+
+
+import com.graphhopper.jsprit.core.problem.Location;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class ShipmentWithMutablePickupDeliverOptions extends Shipment {
+    List<Location> pickupPossibleLocations = new ArrayList<>();
+    List<Location> deliverPossibleLocations = new ArrayList<>();
+
+    public ShipmentWithMutablePickupDeliverOptions(Builder builder, List<Location> pickupPossibleLocations, List<Location> deliverPossibleLocations) {
+        super(builder);
+        this.pickupPossibleLocations.addAll(pickupPossibleLocations);
+        this.deliverPossibleLocations.addAll(deliverPossibleLocations);
+    }
+
+    public List<Location> getDeliverPossibleLocations() {
+        return deliverPossibleLocations;
+    }
+
+    public List<Location> getPickupPossibleLocations() {
+        return pickupPossibleLocations;
+    }
+}
