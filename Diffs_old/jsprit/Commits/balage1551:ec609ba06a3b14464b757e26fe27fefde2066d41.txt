diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/BreakActivity.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/BreakActivity.java
index 598ca4d76..1a779507b 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/BreakActivity.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/BreakActivity.java
@@ -40,7 +40,7 @@ protected BreakActivity(Break aBreak) {
 //        counter++;
     }
 
-    protected BreakActivity(BreakActivity breakActivity) {
+    public BreakActivity(BreakActivity breakActivity) {
         super(breakActivity);
     }
 
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverServiceDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverServiceDEPRECATED.java
index f546ef00f..e1faf440c 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverServiceDEPRECATED.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverServiceDEPRECATED.java
@@ -23,9 +23,14 @@
 public final class DeliverServiceDEPRECATED extends DeliveryActivityNEW {
 
     public DeliverServiceDEPRECATED(Delivery delivery) {
-        super(delivery, delivery.getName(), delivery.getLocation(), delivery.getServiceDuration(), Capacity.invert(delivery.getSize()));
+        super(delivery, delivery.getType(), delivery.getLocation(), delivery.getServiceDuration(), Capacity.invert(delivery.getSize()));
     }
 
+    public DeliverServiceDEPRECATED(DeliverServiceDEPRECATED sourceActivity) {
+        super(sourceActivity);
+    }
+
+
     @Override
     public Delivery getJob() {
         return (Delivery) super.getJob();
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverShipmentDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverShipmentDEPRECATED.java
index fbee69fd8..0e78fb4f7 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverShipmentDEPRECATED.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverShipmentDEPRECATED.java
@@ -26,4 +26,9 @@ public DeliverShipmentDEPRECATED(Shipment shipment) {
         super(shipment, "deliverShipment", shipment.getDeliveryLocation(), shipment.getDeliveryServiceTime(), Capacity.invert(shipment.getSize()));
     }
 
+    public DeliverShipmentDEPRECATED(DeliverShipmentDEPRECATED sourceActivity) {
+        super(sourceActivity);
+    }
+
+
 }
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java
index 028e47762..c0ba772ae 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java
@@ -28,7 +28,7 @@ public DeliveryActivityNEW(AbstractJob job, String name, Location location, doub
         super(job, name, location, operationTime, capacity);
     }
 
-    public DeliveryActivityNEW(JobActivity sourceActivity) {
+    public DeliveryActivityNEW(DeliveryActivityNEW sourceActivity) {
         super(sourceActivity);
     }
 
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java
index d2bf7299d..e1e1f4d92 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java
@@ -27,7 +27,7 @@ public ExchangeActivityNEW(AbstractJob job, String name, Location location, doub
         super(job, name, location, operationTime, capacity);
     }
 
-    public ExchangeActivityNEW(JobActivity sourceActivity) {
+    public ExchangeActivityNEW(ExchangeActivityNEW sourceActivity) {
         super(sourceActivity);
     }
 
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/JobActivity.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/JobActivity.java
index e415a436a..b0181ec34 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/JobActivity.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/JobActivity.java
@@ -42,5 +42,45 @@ public double getOperationTime() {
         return operationTime;
     }
 
+    /*
+     * (non-Javadoc)
+     *
+     * @see java.lang.Object#hashCode()
+     */
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + ((getJob() == null) ? 0 : getJob().hashCode());
+        return result;
+    }
+
+    /*
+     * (non-Javadoc)
+     *
+     * @see java.lang.Object#equals(java.lang.Object)
+     */
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        JobActivity other = (JobActivity) obj;
+        if (job == null) {
+            if (other.getJob() != null) {
+                return false;
+            }
+        } else if (!job.equals(other.getJob())) {
+            return false;
+        }
+        return true;
+    }
+
 
 }
\ No newline at end of file
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupActivityNEW.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupActivityNEW.java
index dd551d0d6..bd00751ab 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupActivityNEW.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupActivityNEW.java
@@ -27,7 +27,7 @@ public PickupActivityNEW(AbstractJob job, String name, Location location, double
         super(job, name, location, operationTime, capacity);
     }
 
-    public PickupActivityNEW(JobActivity sourceActivity) {
+    public PickupActivityNEW(PickupActivityNEW sourceActivity) {
         super(sourceActivity);
     }
 
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupServiceDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupServiceDEPRECATED.java
index dd6407732..8e8cf21e2 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupServiceDEPRECATED.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupServiceDEPRECATED.java
@@ -23,9 +23,17 @@
 
 
     public PickupServiceDEPRECATED(Service service) {
-        super(service, service.getName(), service.getLocation(), service.getServiceDuration(), service.getSize());
+        super(service, service.getType(), service.getLocation(), service.getServiceDuration(), service.getSize());
     }
 
+
+
+    public PickupServiceDEPRECATED(PickupServiceDEPRECATED sourceActivity) {
+        super(sourceActivity);
+    }
+
+
+
     @Override
     public Service getJob() {
         return (Service) super.getJob();
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupShipmentDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupShipmentDEPRECATED.java
index 90c86cd8e..9417e3a78 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupShipmentDEPRECATED.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupShipmentDEPRECATED.java
@@ -25,4 +25,10 @@ public PickupShipmentDEPRECATED(Shipment shipment) {
         super(shipment, "pickupShipment", shipment.getPickupLocation(), shipment.getPickupServiceTime(), shipment.getSize());
     }
 
+    public PickupShipmentDEPRECATED(PickupShipmentDEPRECATED sourceActivity) {
+        super(sourceActivity);
+    }
+
+
+
 }
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ServiceActivityNEW.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ServiceActivityNEW.java
index 8fa220c3d..61454e3cf 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ServiceActivityNEW.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ServiceActivityNEW.java
@@ -28,7 +28,7 @@ public ServiceActivityNEW(AbstractJob job, String name, Location location, doubl
         super(job, name, location, operationTime, capacity);
     }
 
-    public ServiceActivityNEW(JobActivity sourceActivity) {
+    public ServiceActivityNEW(ServiceActivityNEW sourceActivity) {
         super(sourceActivity);
     }
 
diff --git a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/algorithm/recreate/TestInserter.java b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/algorithm/recreate/TestInserter.java
index 3e0b3e696..1443e44dc 100644
--- a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/algorithm/recreate/TestInserter.java
+++ b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/algorithm/recreate/TestInserter.java
@@ -104,6 +104,7 @@ public void whenInsertingServiceAndRouteIsOpen_itInsertsCorrectlyAndSwitchesEndL
         when(iData.getSelectedVehicle()).thenReturn(vehicle);
 
         VehicleRoutingProblem vehicleRoutingProblem = mock(VehicleRoutingProblem.class);
+// REMARK - Balage1551 - This one is throwing a mockito exception, I don't understand why.
         when(vehicleRoutingProblem.copyAndGetActivities(serviceToInsert)).thenReturn(getTourActivities(serviceToInsert));
 
         Inserter inserter = new Inserter(mock(InsertionListeners.class), vehicleRoutingProblem);
diff --git a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/solution/route/TestVehicleRoute.java b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/solution/route/TestVehicleRoute.java
index 745ca3982..8d812ea8a 100644
--- a/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/solution/route/TestVehicleRoute.java
+++ b/jsprit-core/src/test/java/com/graphhopper/jsprit/core/problem/solution/route/TestVehicleRoute.java
@@ -348,7 +348,7 @@ public void whenAddingDelivery_itShouldBeAdded() {
         VehicleRoute route = VehicleRoute.Builder.newInstance(vehicle).addDelivery(delivery).build();
 
         TourActivity act = route.getActivities().get(0);
-        assertTrue(act.getName().equals("delivery"));
+        assertEquals("delivery", act.getName());
         assertTrue(act instanceof DeliverServiceDEPRECATED);
         assertTrue(((JobActivity) act).getJob() instanceof Delivery);
 
