diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java
index ac79de93d..36190ed64 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Delivery.java
@@ -18,7 +18,6 @@
 package com.graphhopper.jsprit.core.problem.job;
 
 import com.graphhopper.jsprit.core.problem.SizeDimension;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.DeliverServiceDEPRECATED;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.DeliveryActivityNEW;
 
 /**
@@ -54,15 +53,9 @@ protected Delivery createInstance() {
     @Override
     protected DeliveryActivityNEW createActivity(
                     BuilderBase<? extends AbstractSingleActivityJob<?>, ?> builder) {
-        if (TheBigRedButton.PUSHED) {
             return new DeliveryActivityNEW(this, builder.type, builder.location,
                             builder.serviceTime,
                             builder.getCapacity().invert(), builder.timeWindows.getTimeWindows());
-        } else {
-            return new DeliverServiceDEPRECATED(this, builder.type, builder.location,
-                            builder.serviceTime,
-                            builder.getCapacity().invert(), builder.timeWindows.getTimeWindows());
-        }
     }
 
     @Override
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java
index 53ffc750f..91993668e 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Pickup.java
@@ -18,7 +18,6 @@
 package com.graphhopper.jsprit.core.problem.job;
 
 import com.graphhopper.jsprit.core.problem.solution.route.activity.PickupActivityNEW;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.PickupServiceDEPRECATED;
 
 /**
  * Pickup extends Service and is intended to model a Service where smth is LOADED (i.e. picked up) to a transport unit.
@@ -52,14 +51,8 @@ protected Pickup createInstance() {
     @Override
     protected PickupActivityNEW createActivity(
                     AbstractSingleActivityJob.BuilderBase<? extends AbstractSingleActivityJob<?>, ?> builder) {
-        if (TheBigRedButton.PUSHED) {
             return new PickupActivityNEW(this, builder.type, builder.location, builder.serviceTime,
                             builder.getCapacity(), builder.timeWindows.getTimeWindows());
-        } else {
-            return new PickupServiceDEPRECATED(this, builder.type, builder.location,
-                            builder.serviceTime,
-                            builder.getCapacity(), builder.timeWindows.getTimeWindows());
-        }
     }
 
     @SuppressWarnings("unchecked")
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Shipment.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Shipment.java
index db1a85162..1a6eb2ead 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Shipment.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/Shipment.java
@@ -21,10 +21,8 @@
 
 import com.graphhopper.jsprit.core.problem.Location;
 import com.graphhopper.jsprit.core.problem.SizeDimension;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.DeliverShipmentDEPRECATED;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.DeliveryActivityNEW;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.PickupActivityNEW;
-import com.graphhopper.jsprit.core.problem.solution.route.activity.PickupShipmentDEPRECATED;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.TimeWindow;
 import com.graphhopper.jsprit.core.problem.solution.route.activity.TimeWindowsImpl;
 
@@ -301,31 +299,25 @@ protected Shipment createInstance() {
     protected void createActivities(JobBuilder<?, ?> builder) {
         Builder shipmentBuilder = (Builder) builder;
         JobActivityList list = new SequentialJobActivityList(this);
-        if (TheBigRedButton.PUSHED) {
-            list.addActivity(new PickupActivityNEW(this, "pickupShipment",
-                            shipmentBuilder.getPickupLocation(),
-                            shipmentBuilder.getPickupServiceTime(), shipmentBuilder.getCapacity(),
-                            shipmentBuilder.getPickupTimeWindows().getTimeWindows()));
-            list.addActivity(new DeliveryActivityNEW(this, "deliverShipment",
-                            shipmentBuilder.getDeliveryLocation(),
-                            shipmentBuilder.getDeliveryServiceTime(),
-                            shipmentBuilder.getCapacity().invert(),
-                            shipmentBuilder.getDeliveryTimeWindows().getTimeWindows()));
-        } else {
-            list.addActivity(new PickupShipmentDEPRECATED(this, shipmentBuilder));
-            list.addActivity(new DeliverShipmentDEPRECATED(this, shipmentBuilder));
-        }
+        list.addActivity(new PickupActivityNEW(this, "pickupShipment",
+                        shipmentBuilder.getPickupLocation(),
+                        shipmentBuilder.getPickupServiceTime(), shipmentBuilder.getCapacity(),
+                        shipmentBuilder.getPickupTimeWindows().getTimeWindows()));
+        list.addActivity(new DeliveryActivityNEW(this, "deliverShipment",
+                        shipmentBuilder.getDeliveryLocation(),
+                        shipmentBuilder.getDeliveryServiceTime(),
+                        shipmentBuilder.getCapacity().invert(),
+                        shipmentBuilder.getDeliveryTimeWindows().getTimeWindows()));
+
         setActivities(list);
     }
 
     public PickupActivityNEW getPickupActivity() {
-        return (PickupActivityNEW) getActivityList().findByType(PickupShipmentDEPRECATED.NAME)
-                        .get();
+        return (PickupActivityNEW) getActivityList().findByType("pickupShipment").get();
     }
 
     public DeliveryActivityNEW getDeliveryActivity() {
-        return (DeliveryActivityNEW) getActivityList().findByType(DeliverShipmentDEPRECATED.NAME)
-                        .get();
+        return (DeliveryActivityNEW) getActivityList().findByType("deliverShipment").get();
     }
 
     // =================== DEPRECATED GETTERS
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/TheBigRedButton.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/TheBigRedButton.java
deleted file mode 100644
index d7f2a9794..000000000
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/job/TheBigRedButton.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package com.graphhopper.jsprit.core.problem.job;
-
-public class TheBigRedButton {
-    public static boolean PUSHED = true;
-}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverServiceDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverServiceDEPRECATED.java
deleted file mode 100644
index be9393265..000000000
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverServiceDEPRECATED.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Licensed to GraphHopper GmbH under one or more contributor
- * license agreements. See the NOTICE file distributed with this work for
- * additional information regarding copyright ownership.
- *
- * GraphHopper GmbH licenses this file to you under the Apache License,
- * Version 2.0 (the "License"); you may not use this file except in
- * compliance with the License. You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.graphhopper.jsprit.core.problem.solution.route.activity;
-
-import java.util.Collection;
-
-import com.graphhopper.jsprit.core.problem.Location;
-import com.graphhopper.jsprit.core.problem.SizeDimension;
-import com.graphhopper.jsprit.core.problem.job.AbstractJob;
-import com.graphhopper.jsprit.core.problem.job.Delivery;
-
-public final class DeliverServiceDEPRECATED extends DeliveryActivityNEW {
-
-    public DeliverServiceDEPRECATED(AbstractJob job, String name, Location location,
-                    double operationTime, SizeDimension capacity,
-                    Collection<TimeWindow> timeWindows) {
-        super(job, name, location, operationTime, capacity, timeWindows);
-    }
-
-    public DeliverServiceDEPRECATED(DeliverServiceDEPRECATED sourceActivity) {
-        super(sourceActivity);
-    }
-
-    @Override
-    public Delivery getJob() {
-        return (Delivery) super.getJob();
-    }
-
-}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverShipmentDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverShipmentDEPRECATED.java
deleted file mode 100644
index dfbba2952..000000000
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliverShipmentDEPRECATED.java
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Licensed to GraphHopper GmbH under one or more contributor
- * license agreements. See the NOTICE file distributed with this work for
- * additional information regarding copyright ownership.
- *
- * GraphHopper GmbH licenses this file to you under the Apache License,
- * Version 2.0 (the "License"); you may not use this file except in
- * compliance with the License. You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.graphhopper.jsprit.core.problem.solution.route.activity;
-
-import com.graphhopper.jsprit.core.problem.job.Shipment;
-import com.graphhopper.jsprit.core.problem.job.Shipment.BuilderBase;
-
-public final class DeliverShipmentDEPRECATED extends DeliveryActivityNEW {
-
-    public static final String NAME = "deliverShipment";
-
-    public DeliverShipmentDEPRECATED(Shipment shipment,
-                                     BuilderBase<? extends Shipment, ?> builder) {
-        super(shipment, NAME, builder.getDeliveryLocation(), builder.getDeliveryServiceTime(),
-            builder.getCapacity().invert(),
-            builder.getDeliveryTimeWindows().getTimeWindows());
-    }
-
-    public DeliverShipmentDEPRECATED(DeliverShipmentDEPRECATED sourceActivity) {
-        super(sourceActivity);
-    }
-
-}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java
index 342bc7d69..4d913c9f9 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/DeliveryActivityNEW.java
@@ -21,6 +21,7 @@
 
 import com.graphhopper.jsprit.core.problem.Location;
 import com.graphhopper.jsprit.core.problem.SizeDimension;
+import com.graphhopper.jsprit.core.problem.SizeDimension.SizeDimensionSign;
 import com.graphhopper.jsprit.core.problem.job.AbstractJob;
 
 public class DeliveryActivityNEW extends JobActivity {
@@ -28,7 +29,8 @@
 
     public DeliveryActivityNEW(AbstractJob job, String name, Location location,
                     double operationTime, SizeDimension capacity, Collection<TimeWindow> timeWindows) {
-        super(job, name, location, operationTime, capacity, timeWindows);
+        super(job, name, location, operationTime, capacity.sign() == SizeDimensionSign.POSITIVE
+                        ? capacity.invert() : capacity, timeWindows);
     }
 
     public DeliveryActivityNEW(DeliveryActivityNEW sourceActivity) {
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java
index f7fc39dd9..8b51f68ae 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/ExchangeActivityNEW.java
@@ -17,17 +17,23 @@
  */
 package com.graphhopper.jsprit.core.problem.solution.route.activity;
 
-import com.graphhopper.jsprit.core.problem.SizeDimension;
+import java.util.Collection;
+
 import com.graphhopper.jsprit.core.problem.Location;
+import com.graphhopper.jsprit.core.problem.SizeDimension;
 import com.graphhopper.jsprit.core.problem.job.AbstractJob;
 
-import java.util.Collection;
-
 public class ExchangeActivityNEW extends JobActivity {
 
     public ExchangeActivityNEW(AbstractJob job, String name, Location location,
-                               double operationTime, SizeDimension capacity, Collection<TimeWindow> timeWindows) {
-        super(job, name, location, operationTime, capacity, timeWindows);
+                    double operationTime, SizeDimension size, Collection<TimeWindow> timeWindows) {
+        super(job, name, location, operationTime, size, timeWindows);
+    }
+
+    public ExchangeActivityNEW(AbstractJob job, String name, Location location,
+                    double operationTime, SizeDimension deliverySize, SizeDimension backhaulSize,
+                    Collection<TimeWindow> timeWindows) {
+        this(job, name, location, operationTime, backhaulSize.subtract(deliverySize), timeWindows);
     }
 
     public ExchangeActivityNEW(ExchangeActivityNEW sourceActivity) {
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupServiceDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupServiceDEPRECATED.java
deleted file mode 100644
index 383f4477a..000000000
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupServiceDEPRECATED.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Licensed to GraphHopper GmbH under one or more contributor
- * license agreements. See the NOTICE file distributed with this work for
- * additional information regarding copyright ownership.
- *
- * GraphHopper GmbH licenses this file to you under the Apache License,
- * Version 2.0 (the "License"); you may not use this file except in
- * compliance with the License. You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.graphhopper.jsprit.core.problem.solution.route.activity;
-
-import java.util.Collection;
-
-import com.graphhopper.jsprit.core.problem.Location;
-import com.graphhopper.jsprit.core.problem.SizeDimension;
-import com.graphhopper.jsprit.core.problem.job.AbstractJob;
-import com.graphhopper.jsprit.core.problem.job.AbstractSingleActivityJob;
-
-public final class PickupServiceDEPRECATED extends PickupActivityNEW {
-
-
-    public PickupServiceDEPRECATED(PickupServiceDEPRECATED sourceActivity) {
-        super(sourceActivity);
-    }
-
-    public PickupServiceDEPRECATED(AbstractJob job, String name, Location location,
-                    double operationTime, SizeDimension capacity,
-                    Collection<TimeWindow> timeWindows) {
-        super(job, name, location, operationTime, capacity, timeWindows);
-    }
-
-    @SuppressWarnings("unchecked")
-    @Override
-    public AbstractSingleActivityJob<PickupActivityNEW> getJob() {
-        return (AbstractSingleActivityJob<PickupActivityNEW>) super.getJob();
-    }
-
-}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupShipmentDEPRECATED.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupShipmentDEPRECATED.java
deleted file mode 100644
index c637928be..000000000
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/problem/solution/route/activity/PickupShipmentDEPRECATED.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Licensed to GraphHopper GmbH under one or more contributor
- * license agreements. See the NOTICE file distributed with this work for
- * additional information regarding copyright ownership.
- *
- * GraphHopper GmbH licenses this file to you under the Apache License,
- * Version 2.0 (the "License"); you may not use this file except in
- * compliance with the License. You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.graphhopper.jsprit.core.problem.solution.route.activity;
-
-import com.graphhopper.jsprit.core.problem.job.Shipment;
-import com.graphhopper.jsprit.core.problem.job.Shipment.BuilderBase;
-
-public final class PickupShipmentDEPRECATED extends PickupActivityNEW {
-
-    public static final String NAME = "pickupShipment";
-
-    public PickupShipmentDEPRECATED(Shipment shipment, BuilderBase<? extends Shipment, ?> builder) {
-        super(shipment, NAME, builder.getPickupLocation(),
-            builder.getPickupServiceTime(), builder.getCapacity(),
-            builder.getPickupTimeWindows().getTimeWindows());
-    }
-
-    public PickupShipmentDEPRECATED(PickupShipmentDEPRECATED sourceActivity) {
-        super(sourceActivity);
-    }
-
-}
