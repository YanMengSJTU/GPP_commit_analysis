diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java
index 8c0b65059..133768628 100644
--- a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/columndefinition/SolutionPrintColumnLists.java
@@ -6,15 +6,15 @@
 
 import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.PrinterColumnList;
-import com.graphhopper.jsprit.core.reporting.job.JobNamePrinterColumn;
-import com.graphhopper.jsprit.core.reporting.job.JobPriorityPrinterColumn;
-import com.graphhopper.jsprit.core.reporting.job.JobTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityCostPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityDurationPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityLoadChangePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ActivityTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.ArrivalTimePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.EndTimePrinterColumn;
+import com.graphhopper.jsprit.core.reporting.route.JobNamePrinterColumn;
+import com.graphhopper.jsprit.core.reporting.route.JobPriorityPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.route.JobTypePrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.LoacationPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.OperationDurationPrinterColumn;
 import com.graphhopper.jsprit.core.reporting.route.RouteCostPrinterColumn;
@@ -35,7 +35,6 @@
  * @author balage
  *
  */
-@SuppressWarnings("unchecked")
 public class SolutionPrintColumnLists {
 
     /**
@@ -67,7 +66,7 @@
         minimalSet.add(RouteNumberPrinterColumn.class);
         minimalSet.add(VehicleNamePrinterColumn.class);
         minimalSet.add(ActivityTypePrinterColumn.class);
-        minimalSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobNamePrinterColumn.class);
+        minimalSet.add(JobNamePrinterColumn.class);
         minimalSet.add(ArrivalTimePrinterColumn.class);
         minimalSet.add(EndTimePrinterColumn.class);
         minimalSet.add(RouteCostPrinterColumn.class);
@@ -77,7 +76,7 @@
         defaultSet.add(RouteNumberPrinterColumn.class);
         defaultSet.add(VehicleNamePrinterColumn.class);
         defaultSet.add(ActivityTypePrinterColumn.class);
-        defaultSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobNamePrinterColumn.class);
+        defaultSet.add(JobNamePrinterColumn.class);
         defaultSet.add(LoacationPrinterColumn.class);
         defaultSet.add(ActivityLoadChangePrinterColumn.class);
         defaultSet.add(OperationDurationPrinterColumn.class);
@@ -93,9 +92,9 @@
         verboseSet.add(VehicleNamePrinterColumn.class);
         verboseSet.add(ActivityTypePrinterColumn.class);
 
-        verboseSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobNamePrinterColumn.class);
-        verboseSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobTypePrinterColumn.class);
-        verboseSet.add((Class<? extends AbstractPrinterColumn<RoutePrinterContext, ?, ?>>) JobPriorityPrinterColumn.class);
+        verboseSet.add(JobNamePrinterColumn.class);
+        verboseSet.add(JobTypePrinterColumn.class);
+        verboseSet.add(JobPriorityPrinterColumn.class);
 
         verboseSet.add(LoacationPrinterColumn.class);
         verboseSet.add(ActivityLoadChangePrinterColumn.class);
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobNamePrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobNamePrinterColumn.java
new file mode 100644
index 000000000..d58fafbe9
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobNamePrinterColumn.java
@@ -0,0 +1,53 @@
+package com.graphhopper.jsprit.core.reporting.route;
+
+import java.util.function.Consumer;
+
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
+import com.graphhopper.jsprit.core.problem.job.Job;
+import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnDefinition;
+import com.graphhopper.jsprit.core.reporting.columndefinition.StringColumnType;
+
+/**
+ * Name (id) of the job.
+ *
+ * <p>
+ * This column provides the {@linkplain Job#getId()} of the associated job of
+ * the activity for job activities and null for other route activities.
+ * </p>
+ *
+ * @author balage
+ */
+public class JobNamePrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String, JobNamePrinterColumn> {
+
+    /**
+     * Constructor.
+     */
+    public JobNamePrinterColumn() {
+        super();
+    }
+
+    /**
+     * Constructor with a post creation decorator provided.
+     */
+    public JobNamePrinterColumn(Consumer<ColumnDefinition.Builder> decorator) {
+        super(decorator);
+    }
+
+    @Override
+    public ColumnDefinition.Builder getColumnBuilder() {
+        return new ColumnDefinition.Builder(new StringColumnType("-"));
+    }
+
+    @Override
+    protected String getDefaultTitle() {
+        return "job name";
+    }
+
+    @Override
+    public String getData(RoutePrinterContext context) {
+        AbstractJob job = context.getJob();
+        return job == null ? null : job.getId();
+    }
+
+}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobPriorityPrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobPriorityPrinterColumn.java
new file mode 100644
index 000000000..6846f4ece
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobPriorityPrinterColumn.java
@@ -0,0 +1,57 @@
+package com.graphhopper.jsprit.core.reporting.route;
+
+import java.util.function.Consumer;
+
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
+import com.graphhopper.jsprit.core.problem.job.Job;
+import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnAlignment;
+import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnDefinition;
+import com.graphhopper.jsprit.core.reporting.columndefinition.StringColumnType;
+
+/**
+ * Priority of the job.
+ *
+ * <p>
+ * This column provides the named (LOW, MEDIUM, HIGH) representation of
+ * {@linkplain Job#getPriority()} of the associated job of the activity for job
+ * activities and null for other route activities.
+ * </p>
+ *
+ * @author balage
+ */
+public class JobPriorityPrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String, JobPriorityPrinterColumn> {
+
+    private static final String[] PRIORITY_NAMES = new String[] { "", "HIGH", "MEDIUM", "LOW" };
+
+    /**
+     * Constructor.
+     */
+    public JobPriorityPrinterColumn() {
+        super();
+    }
+
+    /**
+     * Constructor with a post creation decorator provided.
+     */
+    public JobPriorityPrinterColumn(Consumer<ColumnDefinition.Builder> decorator) {
+        super(decorator);
+    }
+
+    @Override
+    public ColumnDefinition.Builder getColumnBuilder() {
+        return new ColumnDefinition.Builder(new StringColumnType("-")).withAlignment(ColumnAlignment.CENTER);
+    }
+
+    @Override
+    protected String getDefaultTitle() {
+        return "priority";
+    }
+
+    @Override
+    public String getData(RoutePrinterContext context) {
+        AbstractJob job = context.getJob();
+        return job == null ? null : PRIORITY_NAMES[job.getPriority()];
+    }
+
+}
diff --git a/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobTypePrinterColumn.java b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobTypePrinterColumn.java
new file mode 100644
index 000000000..670160eea
--- /dev/null
+++ b/jsprit-core/src/main/java/com/graphhopper/jsprit/core/reporting/route/JobTypePrinterColumn.java
@@ -0,0 +1,52 @@
+package com.graphhopper.jsprit.core.reporting.route;
+
+import java.util.function.Consumer;
+
+import com.graphhopper.jsprit.core.problem.job.AbstractJob;
+import com.graphhopper.jsprit.core.reporting.AbstractPrinterColumn;
+import com.graphhopper.jsprit.core.reporting.columndefinition.ColumnDefinition;
+import com.graphhopper.jsprit.core.reporting.columndefinition.StringColumnType;
+
+/**
+ * Priority of the job.
+ *
+ * <p>
+ * This column provides the simple class name of the associated job of the
+ * activity for job activities and null for other route activities.
+ * </p>
+ *
+ * @author balage
+ */
+public class JobTypePrinterColumn extends AbstractPrinterColumn<RoutePrinterContext, String, JobTypePrinterColumn> {
+
+    /**
+     * Constructor.
+     */
+    public JobTypePrinterColumn() {
+        super();
+    }
+
+    /**
+     * Constructor with a post creation decorator provided.
+     */
+    public JobTypePrinterColumn(Consumer<ColumnDefinition.Builder> decorator) {
+        super(decorator);
+    }
+
+    @Override
+    public ColumnDefinition.Builder getColumnBuilder() {
+        return new ColumnDefinition.Builder(new StringColumnType("-"));
+    }
+
+    @Override
+    protected String getDefaultTitle() {
+        return "job type";
+    }
+
+    @Override
+    public String getData(RoutePrinterContext context) {
+        AbstractJob job = context.getJob();
+        return job == null ? null : job.getClass().getSimpleName();
+    }
+
+}
