diff --git a/.idea/copyright/Apache_2___Google.xml b/.idea/copyright/Apache_2___Google.xml
deleted file mode 100644
index eee6f0138..000000000
--- a/.idea/copyright/Apache_2___Google.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<component name="CopyrightManager">
-  <copyright>
-    <option name="myName" value="Apache 2 - Google" />
-    <option name="notice" value="Copyright 2018 Google LLC&#10;&#10;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#10;you may not use this file except in compliance with the License.&#10;You may obtain a copy of the License at&#10;&#10;     http://www.apache.org/licenses/LICENSE-2.0&#10;&#10;Unless required by applicable law or agreed to in writing, software&#10;distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;See the License for the specific language governing permissions and&#10;limitations under the License." />
-  </copyright>
-</component>
\ No newline at end of file
diff --git a/.idea/copyright/profiles_settings.xml b/.idea/copyright/profiles_settings.xml
deleted file mode 100644
index 0d00e3247..000000000
--- a/.idea/copyright/profiles_settings.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<component name="CopyrightManager">
-  <settings>
-    <module2copyright>
-      <element module="All" copyright="Apache 2 - Google" />
-    </module2copyright>
-    <LanguageOptions name="__TEMPLATE__">
-      <option name="block" value="false" />
-    </LanguageOptions>
-  </settings>
-</component>
\ No newline at end of file
diff --git a/.idea/runConfigurations/Firestore_Integration_Tests.xml b/.idea/runConfigurations/Firestore_Integration_Tests.xml
deleted file mode 100644
index f9c2ad5a0..000000000
--- a/.idea/runConfigurations/Firestore_Integration_Tests.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<component name="ProjectRunConfigurationManager">
-  <configuration default="false" name="Firestore Integration Tests" type="AndroidTestRunConfigurationType" factoryName="Android Instrumented Tests">
-    <module name="firebase-firestore" />
-    <option name="TESTING_TYPE" value="1" />
-    <option name="INSTRUMENTATION_RUNNER_CLASS" value="" />
-    <option name="METHOD_NAME" value="" />
-    <option name="CLASS_NAME" value="" />
-    <option name="PACKAGE_NAME" value="com.google.firebase.firestore" />
-    <option name="EXTRA_OPTIONS" value="" />
-    <option name="CLEAR_LOGCAT" value="false" />
-    <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
-    <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
-    <option name="FORCE_STOP_RUNNING_APP" value="true" />
-    <option name="TARGET_SELECTION_MODE" value="SHOW_DIALOG" />
-    <option name="USE_LAST_SELECTED_DEVICE" value="false" />
-    <option name="PREFERRED_AVD" value="" />
-    <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />
-    <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />
-    <option name="DEBUGGER_TYPE" value="Auto" />
-    <Auto>
-      <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
-      <option name="SHOW_STATIC_VARS" value="true" />
-      <option name="WORKING_DIR" value="" />
-      <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
-      <option name="SHOW_OPTIMIZED_WARNING" value="true" />
-    </Auto>
-    <Hybrid>
-      <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
-      <option name="SHOW_STATIC_VARS" value="true" />
-      <option name="WORKING_DIR" value="" />
-      <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
-      <option name="SHOW_OPTIMIZED_WARNING" value="true" />
-    </Hybrid>
-    <Java />
-    <Native>
-      <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
-      <option name="SHOW_STATIC_VARS" value="true" />
-      <option name="WORKING_DIR" value="" />
-      <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
-      <option name="SHOW_OPTIMIZED_WARNING" value="true" />
-    </Native>
-    <Profilers>
-      <option name="ADVANCED_PROFILING_ENABLED" value="false" />
-    </Profilers>
-    <method>
-      <option name="Android.Gradle.BeforeRunTask" enabled="true" />
-      <option name="com.android.instantApps.provision.BeforeRunTask" enabled="true" clearCache="false" clearProvisionedDevices="false" myTimestamp="1535475311190" />
-    </method>
-  </configuration>
-</component>
\ No newline at end of file
diff --git a/.idea/runConfigurations/Firestore_Unit_Tests.xml b/.idea/runConfigurations/Firestore_Unit_Tests.xml
deleted file mode 100644
index 5bfd8accf..000000000
--- a/.idea/runConfigurations/Firestore_Unit_Tests.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<component name="ProjectRunConfigurationManager">
-  <configuration default="false" name="Firestore Unit Tests" type="AndroidJUnit" factoryName="Android JUnit">
-    <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
-    <module name="firebase-firestore" />
-    <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
-    <option name="ALTERNATIVE_JRE_PATH" />
-    <option name="PACKAGE_NAME" />
-    <option name="MAIN_CLASS_NAME" value="" />
-    <option name="METHOD_NAME" value="" />
-    <option name="TEST_OBJECT" value="directory" />
-    <option name="VM_PARAMETERS" value="-ea" />
-    <option name="PARAMETERS" value="" />
-    <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$/firebase-firestore" />
-    <option name="ENV_VARIABLES" />
-    <option name="PASS_PARENT_ENVS" value="true" />
-    <option name="TEST_SEARCH_SCOPE">
-      <value defaultName="singleModule" />
-    </option>
-    <envs />
-    <dir value="$PROJECT_DIR$/firebase-firestore/src/test/java/com/google/firebase" />
-    <patterns />
-    <method />
-  </configuration>
-</component>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/assets/MavenPro-Medium.ttf b/firebase-inappmessaging-display/src/main/assets/MavenPro-Medium.ttf
new file mode 100644
index 000000000..8b2f8b156
Binary files /dev/null and b/firebase-inappmessaging-display/src/main/assets/MavenPro-Medium.ttf differ
diff --git a/firebase-inappmessaging-display/src/main/assets/NotoSans-Regular.ttf b/firebase-inappmessaging-display/src/main/assets/NotoSans-Regular.ttf
new file mode 100644
index 000000000..9dd10199b
Binary files /dev/null and b/firebase-inappmessaging-display/src/main/assets/NotoSans-Regular.ttf differ
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/BindingWrapperFactory.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/BindingWrapperFactory.java
index 1bb9af6a4..a2405cbbd 100644
--- a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/BindingWrapperFactory.java
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/BindingWrapperFactory.java
@@ -35,29 +35,36 @@
   }
 
   public BindingWrapper createImageBindingWrapper(
-      InAppMessageLayoutConfig config, InAppMessage inAppMessage) {
-    InAppMessageComponent inAppMessageComponent =
-        DaggerInAppMessageComponent.builder()
+      InAppMessageLayoutConfig config,
+      InAppMessage inAppMessage
+  ) {
+    InAppMessageComponent inAppMessageComponent = DaggerInAppMessageComponent.builder()
             .inflaterModule(new InflaterModule(inAppMessage, config, application))
             .build();
+
     return inAppMessageComponent.imageBindingWrapper();
   }
 
   public BindingWrapper createModalBindingWrapper(
-      InAppMessageLayoutConfig config, InAppMessage inAppMessage) {
-    InAppMessageComponent inAppMessageComponent =
-        DaggerInAppMessageComponent.builder()
+      InAppMessageLayoutConfig config,
+      InAppMessage inAppMessage
+  ) {
+    InAppMessageComponent inAppMessageComponent = DaggerInAppMessageComponent.builder()
             .inflaterModule(new InflaterModule(inAppMessage, config, application))
             .build();
-    return inAppMessageComponent.modalBindingWrapper();
+
+    return inAppMessageComponent.customModalBindingWrapper();
   }
 
   public BindingWrapper createBannerBindingWrapper(
-      InAppMessageLayoutConfig config, InAppMessage inAppMessage) {
-    InAppMessageComponent inAppMessageComponent =
-        DaggerInAppMessageComponent.builder()
+      InAppMessageLayoutConfig config,
+      InAppMessage inAppMessage
+  ) {
+    InAppMessageComponent inAppMessageComponent = DaggerInAppMessageComponent.builder()
             .inflaterModule(new InflaterModule(inAppMessage, config, application))
             .build();
+
     return inAppMessageComponent.bannerBindingWrapper();
   }
-}
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/CircleTransform.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/CircleTransform.java
new file mode 100644
index 000000000..90a260daf
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/CircleTransform.java
@@ -0,0 +1,44 @@
+package com.google.firebase.inappmessaging.display.internal;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+
+import com.squareup.picasso.Transformation;
+
+public class CircleTransform implements Transformation {
+    @Override
+    public Bitmap transform(Bitmap source) {
+        int size = Math.min(source.getWidth(), source.getHeight());
+
+        int x = (source.getWidth() - size) / 2;
+        int y = (source.getHeight() - size) / 2;
+
+        Bitmap squaredBitmap = Bitmap.createBitmap(source, x, y, size, size);
+        if (squaredBitmap != source) {
+            source.recycle();
+        }
+
+        Bitmap bitmap = Bitmap.createBitmap(size, size, source.getConfig());
+
+        Canvas canvas = new Canvas(bitmap);
+        Paint paint = new Paint();
+        BitmapShader shader = new BitmapShader(squaredBitmap,
+                BitmapShader.TileMode.CLAMP, BitmapShader.TileMode.CLAMP);
+        paint.setShader(shader);
+        paint.setAntiAlias(true);
+
+        float r = size / 2f;
+        canvas.drawCircle(r, r, r, paint);
+
+        squaredBitmap.recycle();
+        return bitmap;
+    }
+
+    @Override
+    public String key() {
+        return "circle";
+    }
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/FiamImageLoader.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/FiamImageLoader.java
index 70fe795b2..d4bc0cbfc 100644
--- a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/FiamImageLoader.java
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/FiamImageLoader.java
@@ -29,40 +29,43 @@
  */
 @FirebaseAppScope
 public class FiamImageLoader {
-  private final Picasso picasso;
 
-  @Inject
-  FiamImageLoader(Picasso picasso) {
-    this.picasso = picasso;
-  }
+    private final Picasso picasso;
 
-  public FiamImageRequestCreator load(@Nullable String imageUrl) {
-    return new FiamImageRequestCreator(picasso.load(imageUrl));
-  }
-
-  public void cancelTag(Class c) {
-    picasso.cancelTag(c);
-  }
-
-  public static class FiamImageRequestCreator {
-    private final RequestCreator mRequestCreator;
-
-    public FiamImageRequestCreator(RequestCreator requestCreator) {
-      mRequestCreator = requestCreator;
+    @Inject
+    FiamImageLoader(Picasso picasso) {
+        this.picasso = picasso;
     }
 
-    public FiamImageRequestCreator placeholder(int placeholderResId) {
-      mRequestCreator.placeholder(placeholderResId);
-      return this;
+    public FiamImageRequestCreator load(@Nullable String imageUrl) {
+        final RequestCreator creator = picasso.load(imageUrl).transform(new CircleTransform());
+        return new FiamImageRequestCreator(creator);
     }
 
-    public FiamImageRequestCreator tag(Class c) {
-      mRequestCreator.tag(c);
-      return this;
+    public void cancelTag(Class c) {
+        picasso.cancelTag(c);
     }
 
-    public void into(ImageView imageView, Callback callback) {
-      mRequestCreator.into(imageView, callback);
+    public static class FiamImageRequestCreator {
+        private final RequestCreator mRequestCreator;
+
+        public FiamImageRequestCreator(RequestCreator requestCreator) {
+            mRequestCreator = requestCreator;
+        }
+
+        public FiamImageRequestCreator placeholder(int placeholderResId) {
+            mRequestCreator.placeholder(placeholderResId);
+            return this;
+        }
+
+        public FiamImageRequestCreator tag(Class c) {
+            mRequestCreator.tag(c);
+            return this;
+        }
+
+        public void into(ImageView imageView, Callback callback) {
+            mRequestCreator.into(imageView, callback);
+        }
     }
-  }
-}
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/bindingwrappers/CustomModalBindingWrapper.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/bindingwrappers/CustomModalBindingWrapper.java
new file mode 100644
index 000000000..74cb66f29
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/bindingwrappers/CustomModalBindingWrapper.java
@@ -0,0 +1,258 @@
+package com.google.firebase.inappmessaging.display.internal.bindingwrappers;
+
+import android.annotation.SuppressLint;
+import android.graphics.Color;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.GradientDrawable;
+import android.os.Build;
+import android.support.annotation.NonNull;
+import android.support.annotation.RestrictTo;
+import android.support.annotation.VisibleForTesting;
+import android.support.constraint.ConstraintLayout;
+import android.text.TextUtils;
+import android.util.DisplayMetrics;
+import android.util.TypedValue;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewTreeObserver;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ScrollView;
+import android.widget.TextView;
+
+import com.google.firebase.inappmessaging.display.R;
+import com.google.firebase.inappmessaging.display.internal.InAppMessageLayoutConfig;
+import com.google.firebase.inappmessaging.display.internal.injection.scopes.InAppMessageScope;
+import com.google.firebase.inappmessaging.display.internal.layout.custom.FiamConstraintLayout;
+import com.google.firebase.inappmessaging.model.InAppMessage;
+
+import javax.inject.Inject;
+
+/* @hide */
+@InAppMessageScope
+public class CustomModalBindingWrapper extends BindingWrapper {
+
+    private FiamConstraintLayout layoutModalRoot;
+    private ConstraintLayout layoutModal;
+
+    private ScrollView modalScrollMessage;
+
+    private TextView modalTitle;
+    private TextView modalMessage;
+
+    private Button modalAction;
+    private Button modalCollapse;
+
+    private ImageView modalImage;
+
+    private ViewTreeObserver.OnGlobalLayoutListener layoutListener = new ScrollViewAdjustableListener();
+
+    @Inject
+    @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP)
+    public CustomModalBindingWrapper(InAppMessageLayoutConfig config, LayoutInflater inflater, InAppMessage message) {
+        super(config, inflater, message);
+    }
+
+    @NonNull
+    @Override
+    public ViewTreeObserver.OnGlobalLayoutListener inflate(
+            View.OnClickListener actionListener,
+            View.OnClickListener dismissOnClickListener
+    ) {
+        @SuppressLint("InflateParams")
+        View root = inflater.inflate(R.layout.layout_modal, null);
+
+        layoutModalRoot = root.findViewById(R.id.layoutModalRoot);
+        layoutModal = root.findViewById(R.id.layoutModal);
+        modalScrollMessage = root.findViewById(R.id.modalScrollMessage);
+        modalTitle = root.findViewById(R.id.modalTitle);
+        modalMessage = root.findViewById(R.id.modalMessage);
+        modalAction = root.findViewById(R.id.modalAction);
+        modalCollapse = root.findViewById(R.id.modalCollapse);
+        modalImage = root.findViewById(R.id.modalImage);
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            layoutModal.setElevation(dpToPixels(3));
+            modalImage.setElevation(dpToPixels(3));
+        }
+
+        setMessage(message);
+        setLayoutConfig(config);
+        setDismissListener(dismissOnClickListener);
+        setActionListener(actionListener);
+
+        setModalColorOverrides();
+        setButtonColorOverrides();
+
+        return layoutListener;
+    }
+
+    @NonNull
+    @Override
+    public ImageView getImageView() {
+        return modalImage;
+    }
+
+    @NonNull
+    @Override
+    public ViewGroup getRootView() {
+        return layoutModalRoot;
+    }
+
+    @NonNull
+    @Override
+    public View getDialogView() {
+        return layoutModal;
+    }
+
+    @NonNull
+    @Override
+    public InAppMessageLayoutConfig getConfig() {
+        return config;
+    }
+
+    @NonNull
+    public Button getActionButton() {
+        return modalAction;
+    }
+
+    @NonNull
+    public View getCollapseButton() {
+        return modalCollapse;
+    }
+
+    private void setMessage(InAppMessage message) {
+        if (TextUtils.isEmpty(message.getImageUrl())) {
+            modalImage.setVisibility(View.GONE);
+        } else {
+            modalImage.setVisibility(View.VISIBLE);
+        }
+
+        if (message.getTitle() != null) {
+            if (!TextUtils.isEmpty(message.getTitle().getText())) {
+                modalTitle.setVisibility(View.VISIBLE);
+                modalTitle.setText(message.getTitle().getText());
+            } else {
+                modalTitle.setVisibility(View.GONE);
+            }
+
+            if (!TextUtils.isEmpty(message.getTitle().getHexColor())) {
+                modalTitle.setTextColor(Color.parseColor(message.getTitle().getHexColor()));
+            }
+        }
+
+        if (message.getBody() != null && !TextUtils.isEmpty(message.getBody().getText())) {
+            modalScrollMessage.setVisibility(View.VISIBLE);
+        } else {
+            modalScrollMessage.setVisibility(View.GONE);
+        }
+
+        if (message.getBody() != null) {
+            if (!TextUtils.isEmpty(message.getBody().getText())) {
+                modalMessage.setVisibility(View.VISIBLE);
+                modalMessage.setText(message.getBody().getText());
+            } else {
+                modalMessage.setVisibility(View.GONE);
+            }
+
+            if (!TextUtils.isEmpty(message.getBody().getHexColor())) {
+                modalMessage.setTextColor(Color.parseColor(message.getBody().getHexColor()));
+            }
+        }
+    }
+
+    private void setLayoutConfig(InAppMessageLayoutConfig config) {
+        modalImage.setMaxHeight(config.getMaxImageHeight());
+        modalImage.setMaxWidth(config.getMaxImageWidth());
+    }
+
+    private void setDismissListener(View.OnClickListener dismissListener) {
+        modalCollapse.setOnClickListener(dismissListener);
+        layoutModalRoot.setDismissListener(dismissListener);
+    }
+
+    private void setActionListener(View.OnClickListener actionListener) {
+        modalAction.setOnClickListener(actionListener);
+    }
+
+    private void setButtonColorOverrides() {
+        // Set the background color of the getAction button to be the FIAM color. We do this explicitly
+        // to
+        // allow for a rounded modal (b/c overloaded background for shape and color)
+
+        if (modalAction != null
+                && message.getActionButton() != null
+                && message.getActionButton().getButtonHexColor() != null) {
+            int buttonColor = Color.parseColor(message.getActionButton().getButtonHexColor());
+
+            // Tint the button based on the background color
+            Drawable buttonDrawable = generateDrawableButton(buttonColor);
+            modalAction.setBackground(buttonDrawable);
+
+            if (modalCollapse != null) {
+                modalCollapse.setTextColor(buttonColor);
+            }
+
+            if (message.getActionButton() != null && message.getActionButton().getText() != null) {
+                if (!TextUtils.isEmpty(message.getActionButton().getText().getText())) {
+                    modalAction.setVisibility(View.VISIBLE);
+                    modalAction.setText(message.getActionButton().getText().getText());
+                } else {
+                    modalAction.setVisibility(View.GONE);
+                }
+                String buttonTextColorStr = message.getActionButton().getText().getHexColor();
+
+                if (!TextUtils.isEmpty(buttonTextColorStr)) {
+                    modalAction.setTextColor(Color.parseColor(buttonTextColorStr));
+                }
+            }
+        } else {
+            if (modalAction != null) {
+                modalAction.setVisibility(View.GONE);
+            }
+        }
+    }
+
+    private GradientDrawable generateDrawableButton(int color) {
+        GradientDrawable shape = new GradientDrawable();
+        shape.setShape(GradientDrawable.RECTANGLE);
+        shape.setCornerRadius(dpToPixels(50));
+        shape.setColor(color);
+        return shape;
+    }
+
+    private void setModalColorOverrides() {
+        // Set the background color of the Modal to be the FIAM color. We do this explicitly to
+        // allow for a rounded modal (b/c overloaded background for shape and color)
+        if (layoutModal != null) {
+            setGradientDrawableBgColor(layoutModal, message.getBackgroundHexColor());
+        }
+    }
+
+    @VisibleForTesting
+    public void setLayoutListener(ViewTreeObserver.OnGlobalLayoutListener listener) {
+        layoutListener = listener;
+    }
+
+    /** Convert a value in "dp" to a "px" value for the current display. */
+    private int dpToPixels(int dp) {
+        if (getDialogView().getContext() == null) {
+            return 0;
+        }
+
+        final DisplayMetrics displayMetrics = getDialogView().getContext()
+                .getResources()
+                .getDisplayMetrics();
+
+        return (int) Math.floor(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, displayMetrics));
+    }
+
+    public class ScrollViewAdjustableListener implements ViewTreeObserver.OnGlobalLayoutListener {
+        @Override
+        public void onGlobalLayout() {
+            modalImage.getViewTreeObserver().removeOnGlobalLayoutListener(this);
+        }
+    }
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/injection/components/InAppMessageComponent.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/injection/components/InAppMessageComponent.java
index 18a570065..8bae0b1d1 100644
--- a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/injection/components/InAppMessageComponent.java
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/injection/components/InAppMessageComponent.java
@@ -15,6 +15,7 @@
 package com.google.firebase.inappmessaging.display.internal.injection.components;
 
 import com.google.firebase.inappmessaging.display.internal.bindingwrappers.BannerBindingWrapper;
+import com.google.firebase.inappmessaging.display.internal.bindingwrappers.CustomModalBindingWrapper;
 import com.google.firebase.inappmessaging.display.internal.bindingwrappers.ImageBindingWrapper;
 import com.google.firebase.inappmessaging.display.internal.bindingwrappers.ModalBindingWrapper;
 import com.google.firebase.inappmessaging.display.internal.injection.modules.InflaterModule;
@@ -25,12 +26,17 @@
 @InAppMessageScope
 @Component(modules = {InflaterModule.class})
 public interface InAppMessageComponent {
+
   @InAppMessageScope
   ImageBindingWrapper imageBindingWrapper();
 
   @InAppMessageScope
   ModalBindingWrapper modalBindingWrapper();
 
+  @InAppMessageScope
+  CustomModalBindingWrapper customModalBindingWrapper();
+
   @InAppMessageScope
   BannerBindingWrapper bannerBindingWrapper();
-}
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/FiamConstraintLayout.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/FiamConstraintLayout.java
new file mode 100644
index 000000000..6d395e6b0
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/FiamConstraintLayout.java
@@ -0,0 +1,42 @@
+package com.google.firebase.inappmessaging.display.internal.layout.custom;
+
+import android.content.Context;
+import android.support.constraint.ConstraintLayout;
+import android.util.AttributeSet;
+import android.view.KeyEvent;
+
+import com.google.firebase.inappmessaging.display.internal.layout.BackButtonLayout;
+import com.google.firebase.inappmessaging.display.internal.layout.util.BackButtonHandler;
+
+public class FiamConstraintLayout extends ConstraintLayout implements BackButtonLayout {
+
+    private BackButtonHandler mBackHandler;
+
+    public FiamConstraintLayout(Context context) {
+        super(context);
+    }
+
+    public FiamConstraintLayout(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public FiamConstraintLayout(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+    }
+
+    @Override
+    public void setDismissListener(OnClickListener listener) {
+        mBackHandler = new BackButtonHandler(this, listener);
+    }
+
+    @Override
+    public boolean dispatchKeyEvent(KeyEvent event) {
+        Boolean handled = mBackHandler.dispatchKeyEvent(event);
+        if (handled != null) {
+            return handled;
+        } else {
+            return super.dispatchKeyEvent(event);
+        }
+    }
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/SubheadTextView.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/SubheadTextView.java
new file mode 100644
index 000000000..f471ad2f0
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/SubheadTextView.java
@@ -0,0 +1,40 @@
+package com.google.firebase.inappmessaging.display.internal.layout.custom;
+
+import android.content.Context;
+import android.graphics.Typeface;
+import android.support.v7.widget.AppCompatTextView;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+
+import com.google.firebase.inappmessaging.display.R;
+
+public class SubheadTextView extends AppCompatTextView {
+
+    public SubheadTextView(Context context) {
+        super(context);
+        setupFont(context);
+    }
+
+    public SubheadTextView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        setupFont(context);
+    }
+
+    public SubheadTextView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        setupFont(context);
+    }
+
+    private void setupFont(Context context) {
+        setTextColor(getResources().getColor(R.color.black_80));
+        setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.subhead));
+
+        try {
+            Typeface face = Typeface.createFromAsset(context.getAssets(), "fonts/NotoSans-Regular.ttf");
+            setTypeface(face);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/TitleTextView.java b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/TitleTextView.java
new file mode 100644
index 000000000..9cec94af4
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/java/com/google/firebase/inappmessaging/display/internal/layout/custom/TitleTextView.java
@@ -0,0 +1,41 @@
+package com.google.firebase.inappmessaging.display.internal.layout.custom;
+
+import android.content.Context;
+import android.graphics.Typeface;
+import android.support.v7.widget.AppCompatTextView;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+
+import com.google.firebase.inappmessaging.display.R;
+
+public class TitleTextView extends AppCompatTextView {
+
+    public TitleTextView(Context context) {
+        super(context);
+        setupFont(context);
+    }
+
+    public TitleTextView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        setupFont(context);
+    }
+
+    public TitleTextView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        setupFont(context);
+    }
+
+    private void setupFont(Context context) {
+        setTextColor(getResources().getColor(R.color.black_87));
+        setTextSize(TypedValue.COMPLEX_UNIT_PX, getResources().getDimension(R.dimen.title));
+        setAllCaps(true);
+
+        try {
+            Typeface face = Typeface.createFromAsset(context.getAssets(), "fonts/MavenPro-Medium.ttf");
+            setTypeface(face);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+}
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/drawable/bg_rounded.xml b/firebase-inappmessaging-display/src/main/res/drawable/bg_rounded.xml
new file mode 100644
index 000000000..4382a6af6
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/res/drawable/bg_rounded.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android">
+  <solid
+      android:color="#FFF"/>
+  <corners
+      android:radius="14dp"/>
+  <padding
+      android:left="0dp"
+      android:top="0dp"
+      android:right="0dp"
+      android:bottom="0dp" />
+</shape>
diff --git a/firebase-inappmessaging-display/src/main/res/layout/layout_modal.xml b/firebase-inappmessaging-display/src/main/res/layout/layout_modal.xml
new file mode 100644
index 000000000..ca97f4ae6
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/res/layout/layout_modal.xml
@@ -0,0 +1,105 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.firebase.inappmessaging.display.internal.layout.custom.FiamConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/layoutModalRoot"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:clipToPadding="false"
+    tools:background="#BDBDBD">
+
+    <android.support.constraint.Guideline
+        android:id="@+id/right_guideline"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        app:layout_constraintGuide_percent=".90"/>
+
+    <android.support.constraint.Guideline
+        android:id="@+id/left_guideline"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        app:layout_constraintGuide_percent=".10"/>
+
+    <android.support.constraint.ConstraintLayout
+        android:id="@+id/layoutModal"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:minHeight="150dp"
+        android:padding="16dp"
+        android:background="@drawable/bg_rounded"
+        android:orientation="vertical"
+        app:layout_constraintStart_toStartOf="@id/left_guideline"
+        app:layout_constraintEnd_toEndOf="@id/right_guideline"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent">
+
+        <com.google.firebase.inappmessaging.display.internal.layout.custom.TitleTextView
+            android:id="@+id/modalTitle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:layout_marginTop="62dp"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            tools:text="Title"/>
+
+        <ScrollView
+            android:id="@+id/modalScrollMessage"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="12dp"
+            app:layout_constraintHeight_max="150dp"
+            app:layout_constrainedHeight="true"
+            app:layout_constraintTop_toBottomOf="@id/modalTitle">
+
+            <com.google.firebase.inappmessaging.display.internal.layout.custom.SubheadTextView
+                android:id="@+id/modalMessage"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_horizontal"
+                tools:text="Message Body"/>
+
+        </ScrollView>
+
+        <Button
+            android:id="@+id/modalAction"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="8dp"
+            android:layout_marginEnd="8dp"
+            android:layout_marginTop="16dp"
+            android:layout_gravity="center_horizontal"
+            android:theme="@style/FiamUI.Button"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/modalScrollMessage"
+            tools:text="Action"/>
+
+        <Button
+            android:id="@+id/modalCollapse"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:theme="@style/FiamUI.Button.Flat"
+            android:text="@string/close"
+            app:layout_constraintTop_toBottomOf="@id/modalAction"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"/>
+
+    </android.support.constraint.ConstraintLayout>
+
+    <ImageView
+        android:id="@+id/modalImage"
+        android:layout_width="0dp"
+        android:layout_height="130dp"
+        android:contentDescription="@null"
+        app:layout_constraintStart_toStartOf="@id/layoutModal"
+        app:layout_constraintEnd_toEndOf="@id/layoutModal"
+        app:layout_constraintBottom_toTopOf="@id/layoutModal"
+        app:layout_constraintTop_toTopOf="@id/layoutModal"/>
+
+</com.google.firebase.inappmessaging.display.internal.layout.custom.FiamConstraintLayout>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/values-de/strings.xml b/firebase-inappmessaging-display/src/main/res/values-de/strings.xml
new file mode 100644
index 000000000..973ad7e01
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/res/values-de/strings.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="close">schließen</string>
+</resources>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/values-en/strings.xml b/firebase-inappmessaging-display/src/main/res/values-en/strings.xml
new file mode 100644
index 000000000..a5c3218bf
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/res/values-en/strings.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="close">Close</string>
+</resources>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/values-es/strings.xml b/firebase-inappmessaging-display/src/main/res/values-es/strings.xml
new file mode 100644
index 000000000..dd5967e71
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/res/values-es/strings.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="close">Cerrar</string>
+</resources>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/values-pt/strings.xml b/firebase-inappmessaging-display/src/main/res/values-pt/strings.xml
new file mode 100644
index 000000000..96e82fbcf
--- /dev/null
+++ b/firebase-inappmessaging-display/src/main/res/values-pt/strings.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="close">Fechar</string>
+</resources>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/values/colors.xml b/firebase-inappmessaging-display/src/main/res/values/colors.xml
index 55344e519..f28ad7207 100644
--- a/firebase-inappmessaging-display/src/main/res/values/colors.xml
+++ b/firebase-inappmessaging-display/src/main/res/values/colors.xml
@@ -1,3 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
+    <color name="black_8">#14000000</color>
+    <color name="black_15">#26000000</color>
+    <color name="black_54">#8a000000</color>
+    <color name="black_65">#a6000000</color>
+    <color name="black_80">#cc000000</color>
+    <color name="black_87">#de000000</color>
 </resources>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/values/dimen.xml b/firebase-inappmessaging-display/src/main/res/values/dimen.xml
index 04706d081..5b22d726a 100644
--- a/firebase-inappmessaging-display/src/main/res/values/dimen.xml
+++ b/firebase-inappmessaging-display/src/main/res/values/dimen.xml
@@ -1,14 +1,17 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-  <dimen name="minImageHeight">50dp</dimen>
-  <dimen name="minImageWidth">50dp</dimen>
+    <dimen name="minImageHeight">50dp</dimen>
+    <dimen name="minImageWidth">50dp</dimen>
 
-  <dimen name="paddingSmall">16dp</dimen>
+    <dimen name="paddingSmall">16dp</dimen>
 
-  <item name="modalPortraitHeightPct" format="float" type="dimen">0.80</item>
-  <item name="modalPortraitWidthPct" format="float" type="dimen">0.85</item>
+    <dimen name="subhead">16sp</dimen>
+    <dimen name="title">20sp</dimen>
 
-  <!-- In portrait, banner fills available. -->
-  <item name="bannerWeightSum" format="float" type="dimen">1.0</item>
-  <item name="bannerContentWeight" format="float" type="dimen">1.0</item>
-</resources>
+    <item name="modalPortraitHeightPct" format="float" type="dimen">0.80</item>
+    <item name="modalPortraitWidthPct" format="float" type="dimen">0.85</item>
+
+    <!-- In portrait, banner fills available. -->
+    <item name="bannerWeightSum" format="float" type="dimen">1.0</item>
+    <item name="bannerContentWeight" format="float" type="dimen">1.0</item>
+</resources>
\ No newline at end of file
diff --git a/firebase-inappmessaging-display/src/main/res/values/strings.xml b/firebase-inappmessaging-display/src/main/res/values/strings.xml
index e8f4f1da5..7e3b172eb 100644
--- a/firebase-inappmessaging-display/src/main/res/values/strings.xml
+++ b/firebase-inappmessaging-display/src/main/res/values/strings.xml
@@ -1,5 +1,6 @@
 <resources>
   <!-- String resources go here -->
-  <string name="modal_content_descriptor">modal</string>
-  <string name="modal_inner_content_descriptor">modal inner</string>
+  <string name="modal_content_descriptor" translatable="false">modal</string>
+  <string name="modal_inner_content_descriptor" translatable="false">modal inner</string>
+  <string name="close">Close</string>
 </resources>
diff --git a/firebase-inappmessaging-display/src/main/res/values/styles.xml b/firebase-inappmessaging-display/src/main/res/values/styles.xml
index e2288b698..d220b4440 100644
--- a/firebase-inappmessaging-display/src/main/res/values/styles.xml
+++ b/firebase-inappmessaging-display/src/main/res/values/styles.xml
@@ -1,6 +1,6 @@
 <resources>
 
-    <style name="FiamUI" parent="Theme.AppCompat.Light"></style>
+    <style name="FiamUI" parent="Theme.AppCompat.Light"/>
 
     <style name="FiamUI.ModalBody" parent="@style/Base.TextAppearance.AppCompat.Body1">
         <item name="android:layout_width">wrap_content</item>
@@ -63,4 +63,16 @@
         <item name="android:textStyle">bold</item>
         <item name="android:textSize">24sp</item>
     </style>
+
+    <style name="FiamUI.Button">
+        <item name="android:minHeight">56dp</item>
+        <item name="android:minWidth">112dp</item>
+        <item name="android:buttonStyle">@style/Widget.AppCompat.Button.Colored</item>
+    </style>
+
+    <style name="FiamUI.Button.Flat" parent="FiamUI.Button">
+        <item name="android:buttonStyle">@style/Widget.AppCompat.Button.Borderless.Colored</item>
+        <item name="android:textColor">@android:color/primary_text_light</item>
+    </style>
+
 </resources>
