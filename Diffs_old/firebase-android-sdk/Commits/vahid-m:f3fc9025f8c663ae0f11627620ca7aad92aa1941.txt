diff --git a/firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java b/firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java
index 14423cf5e..785a0e133 100644
--- a/firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java
+++ b/firebase-config/src/main/java/com/google/firebase/remoteconfig/FirebaseRemoteConfig.java
@@ -33,8 +33,6 @@
 import com.google.firebase.remoteconfig.internal.ConfigGetParameterHandler;
 import com.google.firebase.remoteconfig.internal.ConfigMetadataClient;
 import com.google.firebase.remoteconfig.internal.DefaultsXmlParser;
-
-import java.net.Proxy;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Iterator;
diff --git a/firebase-config/src/main/java/com/google/firebase/remoteconfig/RemoteConfigComponent.java b/firebase-config/src/main/java/com/google/firebase/remoteconfig/RemoteConfigComponent.java
index a6235c8d7..6fcde844e 100644
--- a/firebase-config/src/main/java/com/google/firebase/remoteconfig/RemoteConfigComponent.java
+++ b/firebase-config/src/main/java/com/google/firebase/remoteconfig/RemoteConfigComponent.java
@@ -34,8 +34,6 @@
 import com.google.firebase.remoteconfig.internal.ConfigMetadataClient;
 import com.google.firebase.remoteconfig.internal.ConfigStorageClient;
 import com.google.firebase.remoteconfig.internal.LegacyConfigsHandler;
-
-import java.net.Proxy;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Random;
@@ -233,7 +231,9 @@ ConfigFetchHttpClient getFrcBackendApiClient(
         namespace,
         metadataClient.getFetchTimeoutInSeconds(),
         NETWORK_CONNECTION_TIMEOUT_IN_SECONDS,
-        metadataClient.getProxyServer());
+        metadataClient.getProxyType(),
+        metadataClient.getProxyHost(),
+        metadataClient.getProxyPort());
   }
 
   @VisibleForTesting
diff --git a/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java b/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java
index 02eb36544..c4bfb0889 100644
--- a/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java
+++ b/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigFetchHttpClient.java
@@ -53,6 +53,7 @@
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.net.HttpURLConnection;
+import java.net.InetSocketAddress;
 import java.net.Proxy;
 import java.net.URL;
 import java.net.URLConnection;
@@ -87,7 +88,10 @@
   private final String namespace;
   private final long connectTimeoutInSeconds;
   private final long readTimeoutInSeconds;
-  private final Proxy proxy;
+  private final Proxy.Type proxyType;
+  private final String proxyHost;
+  private final int proxyPort;
+
 
   /** Creates a client for {@link #fetch}ing data from the Firebase Remote Config server. */
   public ConfigFetchHttpClient(
@@ -97,7 +101,9 @@ public ConfigFetchHttpClient(
         String namespace,
         long connectTimeoutInSeconds,
         long readTimeoutInSeconds,
-        @Nullable Proxy proxy) {
+        Proxy.Type proxyType,
+        String proxyHost,
+        int proxyPort) {
     this.context = context;
     this.appId = appId;
     this.apiKey = apiKey;
@@ -105,7 +111,9 @@ public ConfigFetchHttpClient(
     this.namespace = namespace;
     this.connectTimeoutInSeconds = connectTimeoutInSeconds;
     this.readTimeoutInSeconds = readTimeoutInSeconds;
-    this.proxy = proxy;
+    this.proxyType = proxyType;
+    this.proxyHost = proxyHost;
+    this.proxyPort = proxyPort;
   }
 
   /** Used to verify that the timeout is being set correctly. */
@@ -139,7 +147,12 @@ private static String extractProjectNumberFromAppId(String gmpAppId) {
   HttpURLConnection createHttpURLConnection() throws FirebaseRemoteConfigException {
     try {
       URL url = new URL(getFetchUrl(projectNumber, namespace));
-      return (HttpURLConnection) (proxy == null ? url.openConnection() : url.openConnection(proxy));
+      if (proxyType == Proxy.Type.DIRECT) {
+        return (HttpURLConnection) url.openConnection();
+      } else {
+        InetSocketAddress sa = new InetSocketAddress(proxyHost, proxyPort);
+        return (HttpURLConnection) url.openConnection(new Proxy(proxyType, sa));
+      }
     } catch (IOException e) {
       throw new FirebaseRemoteConfigException(e.getMessage());
     }
diff --git a/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigMetadataClient.java b/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigMetadataClient.java
index 9dc5f6933..e73af406f 100644
--- a/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigMetadataClient.java
+++ b/firebase-config/src/main/java/com/google/firebase/remoteconfig/internal/ConfigMetadataClient.java
@@ -98,18 +98,17 @@ public long getMinimumFetchIntervalInSeconds() {
         MINIMUM_FETCH_INTERVAL_IN_SECONDS_KEY, DEFAULT_MINIMUM_FETCH_INTERVAL_IN_SECONDS);
   }
 
-  @Nullable
-  public Proxy getProxyServer() {
+  public Proxy.Type getProxyType() {
     int proxyType = frcMetadata.getInt(PROXY_TYPE_KEY, Proxy.Type.DIRECT.ordinal());
-    if (proxyType == Proxy.Type.DIRECT.ordinal()) {
-      return null;
-    }
+    return Proxy.Type.values()[proxyType];
+  }
 
-    InetSocketAddress sa = new InetSocketAddress(
-            frcMetadata.getString(PROXY_HOST_KEY, ""),
-            frcMetadata.getInt(PROXY_PORT_KEY, 0));
+  public String getProxyHost() {
+    return frcMetadata.getString(PROXY_HOST_KEY, "");
+  }
 
-    return new Proxy(Proxy.Type.values()[proxyType], sa);
+  public int getProxyPort() {
+    return frcMetadata.getInt(PROXY_PORT_KEY, 0);
   }
 
   @LastFetchStatus
