diff --git a/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/Publisher.groovy b/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/Publisher.groovy
index 311e16263..425c592f9 100644
--- a/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/Publisher.groovy
+++ b/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/Publisher.groovy
@@ -48,7 +48,7 @@ class Publisher {
     /** Determines the version to publish a project with. */
     String determineVersion(Project p) {
         if(projectsToPublish.empty || projectsToPublish.contains(p)) {
-            return renderVersion(p.version.toString(), mode)
+            return renderVersion(p.version, mode)
         }
         if (p.hasProperty('latestReleasedVersion')) {
             return p.latestReleasedVersion
diff --git a/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/PublishingPlugin.groovy b/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/PublishingPlugin.groovy
index 46972bc15..0b28dbaae 100644
--- a/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/PublishingPlugin.groovy
+++ b/buildSrc/src/main/groovy/com/google/firebase/gradle/plugins/publish/PublishingPlugin.groovy
@@ -101,7 +101,19 @@ class PublishingPlugin implements Plugin<Project> {
                 sub.publishing {
                     repositories {
                         maven {
+                            /* build to build directory
                             url = "file://$rootProject.buildDir/m2repository"
+                            */
+
+                            /*
+                            * to publish to artifactory
+                            * example: ./gradlew publishAllToBuildDir -Pusername="test" -Ppassword="***"
+                             */
+                            url 'https://maven.oddrun.ir/artifactory/commons/'
+                            credentials {
+                                username project.properties.getOrDefault('username', '')
+                                password project.properties.getOrDefault('password', '')
+                            }
                             name = 'BuildDir'
                         }
                     }
@@ -111,12 +123,12 @@ class PublishingPlugin implements Plugin<Project> {
 
                             artifactId = firebaseLibrary.artifactId.get()
                             groupId = firebaseLibrary.groupId.get()
-                            if (firebaseLibrary.publishSources) {
+                            /*if (firebaseLibrary.publishSources) {
                                 artifact sub.tasks.create("sourcesJar", Jar) {
                                     from sub.android.sourceSets.main.java.srcDirs
                                     classifier "sources"
                                 }
-                            }
+                            }*/
                             firebaseLibrary.applyPomCustomization(pom)
                             publisher.decorate(sub, it)
                         }
diff --git a/root-project.gradle b/root-project.gradle
index 5b0435869..e9cd51bc4 100644
--- a/root-project.gradle
+++ b/root-project.gradle
@@ -36,6 +36,7 @@ buildscript {
         classpath 'digital.wup:android-maven-publish:3.6.2'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
         classpath 'org.jlleitschuh.gradle:ktlint-gradle:7.1.0'
+        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.9.7"
     }
 }
 
@@ -63,6 +64,9 @@ firebaseContinuousIntegration {
 }
 
 configure(subprojects) {
+    apply plugin: 'digital.wup.android-maven-publish'
+    apply plugin: 'com.jfrog.artifactory'
+
     repositories {
         google()
         jcenter()
