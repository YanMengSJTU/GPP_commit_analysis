diff --git a/firebase-database/ktx/ktx.gradle b/firebase-database/ktx/ktx.gradle
index 3454a029b..68dff5b9f 100644
--- a/firebase-database/ktx/ktx.gradle
+++ b/firebase-database/ktx/ktx.gradle
@@ -49,6 +49,7 @@ dependencies {
     implementation project(':firebase-database')
     implementation 'androidx.annotation:annotation:1.1.0'
     implementation 'com.google.android.gms:play-services-tasks:17.0.0'
+    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1'
 
     androidTestImplementation 'junit:junit:4.12'
     androidTestImplementation "com.google.truth:truth:$googleTruthVersion"
diff --git a/firebase-database/ktx/src/main/kotlin/com/google/firebase/database/ktx/Database.kt b/firebase-database/ktx/src/main/kotlin/com/google/firebase/database/ktx/Database.kt
index 13fb986de..b925b4c53 100644
--- a/firebase-database/ktx/src/main/kotlin/com/google/firebase/database/ktx/Database.kt
+++ b/firebase-database/ktx/src/main/kotlin/com/google/firebase/database/ktx/Database.kt
@@ -16,14 +16,19 @@ package com.google.firebase.database.ktx
 
 import androidx.annotation.Keep
 import com.google.firebase.FirebaseApp
-import com.google.firebase.database.DataSnapshot
-import com.google.firebase.database.GenericTypeIndicator
-import com.google.firebase.database.FirebaseDatabase
 import com.google.firebase.components.Component
 import com.google.firebase.components.ComponentRegistrar
-
+import com.google.firebase.database.DataSnapshot
+import com.google.firebase.database.DatabaseError
+import com.google.firebase.database.FirebaseDatabase
+import com.google.firebase.database.GenericTypeIndicator
+import com.google.firebase.database.Query
+import com.google.firebase.database.ValueEventListener
 import com.google.firebase.ktx.Firebase
 import com.google.firebase.platforminfo.LibraryVersionComponent
+import kotlinx.coroutines.suspendCancellableCoroutine
+import kotlin.coroutines.resume
+import kotlin.coroutines.resumeWithException
 
 /** Returns the [FirebaseDatabase] instance of the default [FirebaseApp]. */
 val Firebase.database: FirebaseDatabase
@@ -37,7 +42,7 @@ fun Firebase.database(app: FirebaseApp): FirebaseDatabase = FirebaseDatabase.get
 
 /** Returns the [FirebaseDatabase] instance of the given [FirebaseApp] and [url]. */
 fun Firebase.database(app: FirebaseApp, url: String): FirebaseDatabase =
-FirebaseDatabase.getInstance(app, url)
+    FirebaseDatabase.getInstance(app, url)
 
 /**
  * Returns the content of the DataSnapshot converted to a POJO.
@@ -49,11 +54,32 @@ inline fun <reified T> DataSnapshot.getValue(): T? {
     return getValue(object : GenericTypeIndicator<T>() {})
 }
 
+/**
+ * Awaits for data from Query converted to a POJO without blocking a thread.
+ */
+suspend fun <T> Query.getValue(type: Class<T>): T? {
+    return suspendCancellableCoroutine { continuation ->
+        val eventListener = object : ValueEventListener {
+            override fun onDataChange(snapshot: DataSnapshot) {
+                continuation.resume(snapshot.getValue(type))
+            }
+
+            override fun onCancelled(error: DatabaseError) {
+                continuation.resumeWithException(error.toException())
+            }
+        }
+        continuation.invokeOnCancellation {
+            removeEventListener(eventListener)
+        }
+        addListenerForSingleValueEvent(eventListener)
+    }
+}
+
 internal const val LIBRARY_NAME: String = "fire-db-ktx"
 
 /** @suppress */
 @Keep
 class FirebaseDatabaseKtxRegistrar : ComponentRegistrar {
     override fun getComponents(): List<Component<*>> =
-            listOf(LibraryVersionComponent.create(LIBRARY_NAME, BuildConfig.VERSION_NAME))
+        listOf(LibraryVersionComponent.create(LIBRARY_NAME, BuildConfig.VERSION_NAME))
 }
