diff --git a/CHANGELOG.md b/CHANGELOG.md
index 113b42064..c432fe9cb 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -4,6 +4,7 @@ Release notes for RoboSpice
 Version 1.5.0 (planned)
 -------------
 
+* Add a new Robospice-Retrofit2 extension which supports a new Retrofit2 library
 * TODO : finish migrating samples to gradle and release.
 * TODO : inject requests in listeners
 * TODO : inject service in requests
diff --git a/CHANGELOG.md~ b/CHANGELOG.md~
deleted file mode 100644
index d24b93559..000000000
--- a/CHANGELOG.md~
+++ /dev/null
@@ -1,421 +0,0 @@
-Release notes for RoboSpice
-===========================
-
-Version 1.5.0 (planned)
--------------
-
-* TODO : finish migrating samples to gradle and release.
-* TODO : inject requests in listeners
-* TODO : inject service in requests
-
-Version 1.4.13 (Planned July 2014)
---------------
-
-Team 
-* Nikola Keskinov joined the RoboSpice Team. Welcome Niko !
-
-Enhancements
-
-* Requests are not retried anymore when network is down. https://github.com/stephanenicolas/robospice/pull/291. Thx to softwaremaverick for fixing this bug.
-* SpiceService's executor core threads can now be exceeded and customized and are disposable. Thx to Jorge Vila for this feature. https://github.com/stephanenicolas/robospice/pull/304
-* The OrmLite extension now notifies foreign objects for changes (instead of root only): https://github.com/stephanenicolas/robospice/issues/240. Thx to @agrebnev.
-
-Bug fixes
-
-* Fix a potential concurrent issue in the request processor : listeners could be lost when added simultanously. Thanks to seva-ask for this fix : https://github.com/stephanenicolas/robospice/pull/296
-* Fix a potential multiple unbindings in SpiceManager : https://github.com/stephanenicolas/robospice/pull/301. Thanks to seva-ask
-* Fix a potential concurrent issue,removing listeners could be impossible in some rare cases. Thx to seva-ask. https://github.com/stephanenicolas/robospice/pull/318
-* RetrofitGsonSpiceService object persister was buggy. Thx to keirongulrajani. https://github.com/stephanenicolas/robospice/issues/272
-* Fixed an ANR when app started with screen off. Thx to Colin Lee. https://github.com/stephanenicolas/robospice/issues/270
-* Fixed ConcurrentModificationException. Thx to escarti. https://github.com/stephanenicolas/robospice/issues/91
-* Fixed a bug in SpiceNotificationService. Thx to kaivnlp. https://github.com/stephanenicolas/robospice/issues/299
-* Cancelling methods by key didn't work. Thx to Pierre Degand. https://github.com/stephanenicolas/robospice/issues/251
-
-Version 1.4.12 (April 17th 2014)
---------------
-
-Enhancements
-
-* Updated Retrofit extension to use Retrofit version 1.5.1
-* Updated OkHttp extension to use OkHttp version 1.5.4
-* Updated Google Http Client extension to use Google Http Client version 1.18.0-rc
-
-Bug fixes
-
-* Bug fix : add proper synchronization to DefaultRequestProcessor stop/execute
-* Fix a few bugs in spice list: when network was off, thumbnails were reloaded incorrectly.
-* Bug fix: close InputStream in RetrofitObjectPersister. PR: #268, Thx to György Dancsi
-* Bug fix: corrected cache prefix generation. PR: #277, Thx to Pierre Degand
-
-Version 1.4.11 (January 16th 2014)
---------------
-
-Enhancements
-
-* Refactor of RoboSpice core dependencies. Thx to Isuski. https://github.com/octo-online/robospice/issues/245
-* General maven plugin and dependencies upgrade.
-* Correct api targetting problem for executors in ui spicelist.
-
-Bug fixes 
-
-* Request dropped when stopping the SpiceManager. Thx to Dorian Cussen. https://github.com/octo-online/robospice/issues/246 
-* Bug in RequestProcessor stop mechanism. Thx to Isuski. https://github.com/octo-online/robospice/issues/244
-* Minor Javadoc enhancements
-
-Version 1.4.10 (January 9th 2014)
---------------
-
-Enhancements 
-
-* upgrade to maven android plugin version 3.8.1
-* spicemanager: always use isStarted() when checking if started. Pull request #214. Thx to Giorgos Kylafas for fixing the bug. https://github.com/octo-online/robospice/pull/214 
-* Updated android-maven-plugin to fix build. Pull request #235. Thx to Tanner Perrien for fixing he bug. https://github.com/octo-online/robospice/pull/235
-* Add retrofit jackson 2 converter. Merged pull request Vlad omihaz : https://github.com/octo-online/robospice/pull/239
-* Update all dependencies. Fix issue #238. Jackson dependency for spring android will remain 2.2.3. Jackson 2.3.1 needs Android SDK 9+.
-* Optimized RoboSpice UI Spice List. Thanks to Cyril Mottier for pushing this. 
-
-Bug fixes
-
-* Bug fix : NPE in execute. Fix issue #221. Thx to Daniel Novak.
-* Bug fix : Incorrect behaviour in addListenerIfPending. Fix issue #215. Thx to Isuski
-* Bug fix : Fixed context leak in the event that the manager is not stopped. Pull request #233. Thx to Tanner Perrien.
-* Bug fix : Many threads blocked in PausablePriorityBlockingQueue.take. Fix issue #220. Thx to Nicolas Poirier.
-* Bug fix : ConcurrentModificationException in RequestProcessor. Fix issue 91. Pull request #242. Thx to softwaremaverick and Fernando Franco Gíraldez.
-
-Version 1.4.9 (October 23rd 2013)
--------------
-
-* Issue #200. App crash "Bad notification for startForeground". Thx to Mathieu-Castets, DanielNovak and Giorgos Kylafas for reporting, debugging and testing.
-
-Version 1.4.8 (October 10th 2013)
--------------
-* Issue #195. Remove all library support dependencies for easier setup. Thx to Bogdan Zurac for reporting the issue.
-* Issue #192. A method has been made static in Google Http Java Client module. Thx to Vselod Ivanov for its patch.
-* Issue #191. In some cases, requests where not aggregated properly. Thx to Vselod Ivanov its patch.
-
-* Internal feature : RS tests are faster.
-
-Version 1.4.7 (September 21th 2013)
--------------
-
-** Enhancements
-* New OkHttp module that allows to use OkHttpClient inside a RoboSpice request.
-* Notifications now work correctly on Android 4.3 when service is going to background. Thx to Andrew Clark and others for this.
-* New SpiceService monitoring system initiated by Andrew Clark. A new sample has been added : robospice-sample-core-monitor to demonstrate how to use this feature.
-
-** Bug fixes
-* Documentation has been updated in RS Starter Guide thanks to Mathieu Castets.
-* removeDataFromCache now returns a future for possible sync. Thanks to sergej-koscejev for the fix in pull request https://github.com/octo-online/robospice/pull/185
-* Better handling of aggregation in SpiceManager that caused a memory leak with many identical SpiceRequests. Thanks to seva-ask. Pull request https://github.com/octo-online/robospice/pull/182
-* Issue #189 by Vsevolod Ivanov (seva ask): fix for fast switching. https://github.com/octo-online/robospice/pull/189
-* A NPE could be sent when notifying listeners of a request not found when screen was turned on. 
-
-Version 1.4.6 (July 18th 2013)
--------------
-
-** Enhancements
-* Google Http Client module now has pre-set services for Jackson,Jackson2 and Gson.
-* Complete refactor of the core of RoboSpice : Request processor has now been split into distinct entities. Thx to Andrew Clark. pull request #160
-* addListenerIfPending can now notify when no pending request has been found. Thx to Andrew Clark. pull request #160
-* Fix RoboSpiceContentProvider to declare single item URI type as ITEM rather than DIRECTORY. Thx to Joel Steres. Pull request #151
-* Remove constraint that ormlite extension cacheKey type matches POJO id type. Thx to Joel Steres. Pull request #145
-* Update of the starter guide on GitHub. Issue https://github.com/octo-online/robospice/issues/162. Thks to Bobby-Jackson for this fix.
-* Remove code duplication from RetrofitObjectPersister.loadDataFromCache and instead use readCacheDataFromFile. https://github.com/octo-online/robospice/pull/138. Thx to Jasco.
-* Gradle support, demoed in RoboSpice samples. 
-* Fix argument names in RoboSpiceDatabaseHelper.onUpdate. https://github.com/octo-online/robospice/pull/146. Thx to Joel Jasco for this fix.
-* Fixed exception when writing to cache with an uncached service. https://github.com/octo-online/robospice/pull/135. Thx to Andrew Clark.
-* DefaultRetryPolicy getDelayBeforeRetry returns fixed value of 0. https://github.com/octo-online/robospice/issues/129. Thx to Joel Jasco
-* EasyMock 3.2 is used in RS 1.4.6, making the interface ICacheManager obsolete.
-* General upgrades of dependencies
-
-** Bug fixes
-* Spelling correction in logs by Joel Steres
-* Pull requests 134 : https://github.com/octo-online/robospice/pull/134 by Andrew Clark
-* Pull requests 140 : https://github.com/octo-online/robospice/pull/140 by Andrew Clark
-* SpiceManager could not be re-started properly. Bug fixed by issue https://github.com/octo-online/robospice/issues/128, thx to Bobby Jackson.
-* Remove RequestCancellationListener after requests https://github.com/octo-online/robospice/pull/148. Thx to Michael Greifeneder
-* FIX simple binary/text/bitmap requests indicated success completion when file not found orconnection failed (Issue 126). Thx to Andrew Clark
-
-Version 1.4.5 (June 24th 2013)
--------------
-** Enhancements
-* Enhanced threading model for the SpiceManager and SpiceService. Decreased priority to increase UI Thread performance and 
-enhance user experience.
-* Add isDataInCache and getDateOfDataInCache to spiceManager. Thx to Onyx Mueller and Mathieu Castets for suggesting this feature.
-* BitmapRequests, SimpleTextRequests have non final methods to allow developpers to extend them
-* SpiceList APIs have been changed to allow multiple images per cell view in a list. Thx to Andrea Altobelli for submitting the feature.
-
-** Bug fixes
-* Cache folder creation is now thread safe.
-* Correct bug of cache removal when there cache folder doesn't exist or is empty.
-* SpiceArrayAdapter's getView method is not final any more to allow subclasses to customize adapters (adding sections for instance).
-Thanks to Christopher Parola for this suggestion.
-
-Version 1.4.4 (June 4th 2013)
--------------
-* Bug fix release: 
-Request priorization would fail on SDK 8 due to JDK 5 backward compatibility issues.
-This bug is solved. RS is still compatible with Android SDK 8+.
-
-Version 1.4.3 (June 3rd 2013)
--------------
-** New module : AndroidORMLiteContentProvider
-* Integration with AndroidORMLiteContentProvider
-https://github.com/jakenjarvis/Android-OrmLiteContentProvider
-
-** Features :
-* RoboSpice drops support for SDK 6 and 7. SDK 8+ required.
-* Upgrade to android maven plugin 3.6.0, adt 22, and SDK 17.
-* Request priority management is now built into RoboSpice.
-Requests with higher priority will get executed first. This is only taken into account for requests that exceed the number of threads of RoboSpice Service, otherwise this is not used.
-https://github.com/octo-online/robospice/issues/99
-Thanks to Volley for inspiring us on this feature. Richard Hyndman and Nick Butcher suggested us to add this a while ago.. Thx Google ! :)
-* Add cachekey sanitation. Sanitation can be used to safely convert strings to cache keys persisted on a file system. Issue https://github.com/octo-online/robospice/issues/97  
-* Retry Policy is now built into RoboSpice. Requests default to a non null retry policy that can be customized.
-https://github.com/octo-online/robospice/issues/99
-* RoboSpice file caching now uses a customizable cache folder to store data. https://github.com/octo-online/robospice/issues/103. Thx to David Sobreira Marques for this feature. 
-* new SpiceManager method : putDataInCache, equivalent to putInCache but synchronous.
-* Retrofit module's API improved. RetrofitSpiceRequest optimize creation of retrofit services. Thx to Jake Wharton for his feedback on this module.
-
-** Bug fixes : 
-* RoboSpice can now clean file cache at startup using removeAllDataFromCache. https://github.com/octo-online/robospice/issues/98.
-Thx to David Sobreira Marques for this bug fix.
-
-
-Version 1.4.2 (May 20th 2013)
--------------
-** New module : Retrofit 
-* New Retrofit module added to RoboSpice !! It is now very easy to use Retrofit
-https://github.com/square/retrofit
-
-** Features :
-* New method "putInCache" added to spiceManager. 
-Thanks to Christopher Jenkins fur suggesting this feature in https://github.com/octo-online/robospice/issues/75.
-
-** Bugs :
-* Spice Manager : getDataFromCache, addToCache and cancel will work even if network is down. This bug was mentionned by dkraus in https://github.com/octo-online/robospice/issues/67
-* Content Provider module added to ease creation of ContentProviders backed by an ORMLite Database. (still in beta, waiting for AndroidORMLite to be released on central).
-
-Version 1.4.1 (May 11 2013)
--------------
-
-* RoboSpice core :
-** Support for null RequestListener. Thx to chrisjenx. Issue #48
-** Issue #62. Thanks to doridori.
-
-* RoboSpice cache : 
-** DurationInMillis constants names were confusing (even for contributors !!). We got that clear now.
-** Added LRU ObjectPersister from David Stemmer, Mike Jancola
-** Added BitmapRequest to ease getting Bitmap data 
-** More testing.
-
-* Spring Android module : 
-** Add Jackson 2.1 support. Feature suggested by James Campbell.
-** Fixed issue https://github.com/octo-online/robospice/issues/80. Thx to Aaron Pickard
-
-* Google Http Java Client for Android module : 
-** minor changes
-
-* ORM-Lite module : 
-** #Issue 93 solved thanks to Aaron Pickard
-** https://github.com/octo-online/robospice/issues/93
-
-* UI SpiceList module :
-** UI SpiceList APIs got refactored. The new API is not backward compatible but is much more simple and elegant to implement.
-** UI SpiceList now uses the BitmapRequest from the core module to download bitmap and cache them scaled and downsampled.
-** Thx to Sergej Koščejev for adding parent parameter in view creation https://github.com/octo-online/robospice/pull/76
-
-A beta version of Retrofit module is also available on the github repo.
-
-Version 1.4.0 (February 8 2013)
--------------
-
-Enhancements : 
-
-* Riccardo Ciovati joined the team.
-* Added removeAllDataFromCache overload in spice manager : thx to Kaan Meralan
-* Added retrofit module with tests and samples
-* Enhanced cancel mechanism
-* Enhanced core testing and extension testing.
-* Added first UI module in RoboSpice to create ListViews using RoboSpice.
-* CacheKey is now of type Object and not String anymore. Thx to Fernando Franco Gíraldez for his pull request.
-* Added dedicated services to each module. They provide all configurations out of the box for processing web services and caching.
-* Enhanced NetworkStateChecker interface in order to refine permission checking and allow real processing of request that
-are not related to networking.
-* Peer review of multi tasking aspects of RoboSpice by Henri Tremblay.
-* Hosted on Sonar's Nemo.
-
-Documentation : 
-* Added documentation on Wiki pages for Advanced RoboSpice usages and FAQ, samples, maven and non maven setup, software design, contributors, etc.
-* Added samples for most of the RoboSpice extensions.
-* Added maven site
-* Added repository branch on GitHub to assist non maven users to setup RoboSpice.
-* Enhanced javadocs
-
-Bug fix :
-
-* Minor bugs of undesired aggregation of offline requests solved. Thanks to djusv.
-* Minor bugs solved in persistence module.
-* Minor bug in GsonObjectPersister solved. Thx to Alessio Bianchi. 
-
-For contributors :
- 
-* Completely reviewed maven structure. Introduction of an easier extension mechanism and simpler samples. Thx to pommedeterresauté
-* All project layouts inside RoboSpice are mavenized
-* Added wiki pages for contributors, common tasks and so on.
-
-
-Version 1.3.1 (december 2012)
--------------
-
-* Bug fix release, listeners where not detached properly
-
-Version 1.3.0 (december 2012)
--------------
-
-* Added Google Http Java Client support via the robospice-google-http-client-module
-* Added Google Http Java Client persistence module for Json (Xml support doesn't provide a generator and can't be added : see issue http://code.google.com/p/google-http-java-client/issues/detail?id=171&thanks=171&ts=1354436504)
-* Dependency conflicts solved : excluded xpp3 dependency, updated jackson version
-* Spring Android module classes have been renamed to make room for other REST clients implementations.
-* Jerome Van Der Linden removed guava dependency, introduced Apache Commons dependency. 
-* Added tests for getAllDataFromCache on persisters
-* Added test for ormlite module
-* Solved listener notification bug. Thx to Vincent Lemeunier 
-* Refactored request cancelation mechanism. Thx to Philippe Prados for help with handlers.
-* Added tests for request cancelation mechanism.
-* RoboSpice reached the milestone of 103 tests. This is also a QA release.
-
-
-Version 1.2.0 (november 12 2012)
--------------
-
-* Added network stating indirection in RequestProcessor. Thx to Pierre Durand
-* Added a check in request classes to verify that requests are not inner classes of activities
-as this would create a memory leak. Thx to Cyril Mottier.
-* fixed bug in InFileObjetPersister. Thx to florianmski
-* fixed bug in json and xml persisters
-* Added json gson and jackson and xml simple serializer tests.
-* Added network state test.
-* Added multiple object persister test.
-
-Version 1.1.1 ( released ?)
--------------
-
-Bug fix :
-* enhanced SpiceManager cpu usage. There used to be a bug in case a service had no request to process that boosted cpu usage.
-Thx to Riccardo Ciovati.
-* enhanced ORM Lite support : tables are created fully dynamically for all POJOs saved via the ORMLiteObjectPersisterFactory.
-No need to provide a specific factory for every class of IDs used by persisted POJOs.
-* better RoboSpice Motivations icon
-* Added RoboSpice Motivations to Google Play
-
-Version 1.1.0 (released for DroidCon London, October 24th 2012)
--------------
-
-* Added RoboSpice Motivations to repo as a RoboSpice demo app and in-depth argumentation for RoboSpice existence.
-* Added RoboSpice Motivations to the Google Play store.
-* Added Json Serialization support using Gson (Jackson is also supported since V1.0)
-* Added Xml Serialization support using SimpleXMLSerializer
-* Added Orm Serialization support using OrmLite
-* Permission check : applications must declare both INTERNET and NETWORK_STATE permission.
-* Added getFromCache method in SpiceManager to query cache content.
-* Added progress monitoring for requests (both status and progress percent).
-* Added common foreground service for all SpiceManagers using the same service class.
-   * Requests are now completely decoupled from Activity life cycle.
-   * Service stops when no more requests are active and no SpiceManager is bound.
-* Added methods to get data in cache if present
-* Added methods to add listeners to a pending request if present.
-* Added support for creating notifications for a request through a new service helper.
-* Allow to cancel pending requests from new Activity. 
-* All logs in RoboSpice now use a downgraded version of RoboGuice's logging facility : 
-http://code.google.com/p/roboguice/wiki/Logging
-* Added the ability to provide a custom executor service to the SpiceService's RequestProcessor. Thx to Riccardo Ciovati.
-* Added RoboSpice presentation in the download area of Git Hub
-* Added all RoboSpice related gfx to GitHub repo.
-* Added google discussion group
-* Added Starter Guide on Git hub Wiki
-
-Version 1.0.0
--------------
-
-* Name changed from Content Manager to RoboSpice
-* published on Github
-* published on Maven Central 
-
-Version 0.0.13
---------------
-
-* minor enhancement of simple requests, exception stack traces were lost.
-
-Version 0.0.12
---------------
-
-* back to previous dependency injection model inside services.
-* content manager is now more robust and more stable
-* dropped the idea of integrating AsyncTasks into the framework.
-* minor enhancements.
-
-
-Version 0.0.11
---------------
-
-* configuration is now entirely mavenized. No libs folder anymore, every dependency is controlled by maven.
-Most dependencies are standard although some of the android dependencies are still missing in maven, in that case,
- developpers will have to create them through mvn import-file goal.
-content-manager-it, the test app can't be used under eclipse yet (as the android configurator is not ready yet) : devs should disable maven nature and add the sample
-as a project in the test app java build path. 
-* various attempts have been made to enable canceling a spring android request but that failed. It's not possible and won't be possible in a near future to cancel a request
-that has started its network connection. That's a real concern but spring android doesn't support this feature yet.
-* mostly released for Samy to give content manager a circuit run.
-
-Version 0.0.10
---------------
-
-* revisited maven configuration for deployment
-
-Version 0.0.9
--------------
-
-* life cycle of the ContentManager has improved
-* InputStream based requests had a logical problem : they were processing InputStream on the UI Thread, and that is prohibited as of HoneyComb (and a bad practice),
-they now process the network stream in the background and offer either a memory stream or file stream to be processed by listeners (who can still delegate the processing
-to an asynctask for buttering).
-* Injection Dependency changed to some more standard option : developpers will have to create an Application Class that will provide ContentService instances all their
-required dependencies.
-
-Version 0.0.8 
--------------
-
-* AndroidManifest check. ContentManager will get sure a ContentService has been declared in manifest
-
-Version 0.0.6
--------------
-
-* changed deploy url
-
-Version 0.0.5
--------------
-
-* async operations for ObjectPersisters are available (and optional)
-* persistence layer cleaning, refactoring and renaming
-* added BigInputStream and SmallInputStream requests
-* added README
-* testing 
-* more cache cleaning methods
-* removed roboguice dependency :(
-* split of spring android and json modules
-
-Version 0.0.4
--------------
-
-* first maven and jenkins integrations
-* renaming of maven artefacts
-* nexus deployment
-* local service binding
-* removed all bundlization stuff
-
-Version 0.0.1 (June 23rd 2012)
-------------------------------
-
-* extracted project from c*t*l*m app
-* gitified project
diff --git a/extensions/robospice-google-http-client-parent/pom.xml b/extensions/robospice-google-http-client-parent/pom.xml
index b671c4a6c..1267243eb 100644
--- a/extensions/robospice-google-http-client-parent/pom.xml
+++ b/extensions/robospice-google-http-client-parent/pom.xml
@@ -6,7 +6,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 		<relativePath>../../</relativePath>
 	</parent>
 
diff --git a/extensions/robospice-google-http-client-parent/robospice-google-http-client-test/pom.xml b/extensions/robospice-google-http-client-parent/robospice-google-http-client-test/pom.xml
index 41464a4a5..4db8422a1 100644
--- a/extensions/robospice-google-http-client-parent/robospice-google-http-client-test/pom.xml
+++ b/extensions/robospice-google-http-client-parent/robospice-google-http-client-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-google-http-client-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-google-http-client-test</artifactId>
diff --git a/extensions/robospice-google-http-client-parent/robospice-google-http-client/pom.xml b/extensions/robospice-google-http-client-parent/robospice-google-http-client/pom.xml
index 7e8f53dc8..a1d9d95a5 100644
--- a/extensions/robospice-google-http-client-parent/robospice-google-http-client/pom.xml
+++ b/extensions/robospice-google-http-client-parent/robospice-google-http-client/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-google-http-client-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-google-http-client</artifactId>
diff --git a/extensions/robospice-okhttp-parent/pom.xml b/extensions/robospice-okhttp-parent/pom.xml
index f735e13d0..68f92a6b8 100644
--- a/extensions/robospice-okhttp-parent/pom.xml
+++ b/extensions/robospice-okhttp-parent/pom.xml
@@ -6,7 +6,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 		<relativePath>../../</relativePath>
 	</parent>
 
diff --git a/extensions/robospice-okhttp-parent/robospice-okhttp-test/pom.xml b/extensions/robospice-okhttp-parent/robospice-okhttp-test/pom.xml
index 720f408a2..c17345903 100644
--- a/extensions/robospice-okhttp-parent/robospice-okhttp-test/pom.xml
+++ b/extensions/robospice-okhttp-parent/robospice-okhttp-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-okhttp-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-okhttp-test</artifactId>
diff --git a/extensions/robospice-okhttp-parent/robospice-okhttp/pom.xml b/extensions/robospice-okhttp-parent/robospice-okhttp/pom.xml
index 6bf207f9f..ba65c1471 100644
--- a/extensions/robospice-okhttp-parent/robospice-okhttp/pom.xml
+++ b/extensions/robospice-okhttp-parent/robospice-okhttp/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-okhttp-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-okhttp</artifactId>
diff --git a/extensions/robospice-ormlite-parent/pom.xml b/extensions/robospice-ormlite-parent/pom.xml
index f60eba67f..620e8bf31 100644
--- a/extensions/robospice-ormlite-parent/pom.xml
+++ b/extensions/robospice-ormlite-parent/pom.xml
@@ -7,7 +7,7 @@
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
 		<relativePath>../../</relativePath>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-ormlite-parent</artifactId>
diff --git a/extensions/robospice-ormlite-parent/robospice-ormlite-test/pom.xml b/extensions/robospice-ormlite-parent/robospice-ormlite-test/pom.xml
index b2555d9dd..546f535f4 100644
--- a/extensions/robospice-ormlite-parent/robospice-ormlite-test/pom.xml
+++ b/extensions/robospice-ormlite-parent/robospice-ormlite-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-ormlite-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-ormlite-test</artifactId>
diff --git a/extensions/robospice-ormlite-parent/robospice-ormlite/pom.xml b/extensions/robospice-ormlite-parent/robospice-ormlite/pom.xml
index 585ad092c..0e816f7ef 100644
--- a/extensions/robospice-ormlite-parent/robospice-ormlite/pom.xml
+++ b/extensions/robospice-ormlite-parent/robospice-ormlite/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-ormlite-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-ormlite</artifactId>
diff --git a/extensions/robospice-retrofit-parent/pom.xml b/extensions/robospice-retrofit-parent/pom.xml
index 1c6bc2673..5517a0c40 100644
--- a/extensions/robospice-retrofit-parent/pom.xml
+++ b/extensions/robospice-retrofit-parent/pom.xml
@@ -6,7 +6,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 		<relativePath>../../</relativePath>
 	</parent>
 
diff --git a/extensions/robospice-retrofit-parent/robospice-retrofit-test/pom.xml b/extensions/robospice-retrofit-parent/robospice-retrofit-test/pom.xml
index 98cc1130b..a52f744d6 100644
--- a/extensions/robospice-retrofit-parent/robospice-retrofit-test/pom.xml
+++ b/extensions/robospice-retrofit-parent/robospice-retrofit-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-retrofit-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-retrofit-test</artifactId>
diff --git a/extensions/robospice-retrofit-parent/robospice-retrofit/pom.xml b/extensions/robospice-retrofit-parent/robospice-retrofit/pom.xml
index 87a9d8b80..46e8ad0c6 100644
--- a/extensions/robospice-retrofit-parent/robospice-retrofit/pom.xml
+++ b/extensions/robospice-retrofit-parent/robospice-retrofit/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-retrofit-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-retrofit</artifactId>
diff --git a/extensions/robospice-retrofit2-parent/pom.xml b/extensions/robospice-retrofit2-parent/pom.xml
new file mode 100644
index 000000000..9408ae854
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/pom.xml
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+
+	<!-- Sonatype config to publish on Maven Central -->
+	<parent>
+		<groupId>com.octo.android.robospice</groupId>
+		<artifactId>robospice-parent</artifactId>
+		<version>1.5.0-SNAPSHOT</version>
+		<relativePath>../../</relativePath>
+	</parent>
+
+	<artifactId>robospice-retrofit2-parent</artifactId>
+	<packaging>pom</packaging>
+	<name>Robospice - Extension Retrofit2 Module Parent</name>
+	<description>RoboSpice Retrofit module parent</description>
+
+	<modules>
+		<!-- library -->
+		<module>robospice-retrofit2</module>
+		<!-- test app -->
+		<module>robospice-retrofit2-test</module>
+	</modules>
+
+	<properties>
+		<retrofit.version>2.0.0</retrofit.version>
+	</properties>
+
+	<dependencyManagement>
+		<dependencies>
+			<dependency>
+				<groupId>com.octo.android.robospice</groupId>
+				<artifactId>robospice</artifactId>
+				<!-- Versions 1.4.14 and higher -->
+				<version>[1.4.14,)</version>
+			</dependency>
+
+			<dependency>
+				<groupId>com.squareup.retrofit2</groupId>
+				<artifactId>retrofit</artifactId>
+				<version>${retrofit.version}</version>
+			</dependency>
+
+			<dependency>
+				<groupId>com.squareup.retrofit2</groupId>
+				<artifactId>converter-jackson</artifactId>
+				<version>${retrofit.version}</version>
+			</dependency>
+
+			<dependency>
+				<groupId>com.squareup.retrofit2</groupId>
+				<artifactId>converter-gson</artifactId>
+				<version>${retrofit.version}</version>
+			</dependency>
+		</dependencies>
+	</dependencyManagement>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-release-plugin</artifactId>
+				<configuration>
+					<autoVersionSubmodules>true</autoVersionSubmodules>
+				</configuration>
+			</plugin>
+		</plugins>
+	</build>
+</project>
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/AndroidManifest.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/AndroidManifest.xml
new file mode 100644
index 000000000..966e1cce6
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/AndroidManifest.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.octo.android.robospice.retrofit2.test"
+    android:versionCode="1"
+    android:versionName="0.0.1-SNAPSHOT" >
+
+    <uses-sdk
+        android:minSdkVersion="4"
+        android:targetSdkVersion="17" />
+
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+
+    <application
+        android:allowBackup="false"
+        android:icon="@android:drawable/ic_lock_lock" >
+        <uses-library android:name="android.test.runner" />
+
+        <service
+            android:name=".TestRetrofitGsonSpiceService"
+            android:exported="false" />
+        <service
+            android:name=".TestRetrofitJacksonSpiceService"
+            android:exported="false" />
+    </application>
+
+    <instrumentation
+        android:name="android.test.InstrumentationTestRunner"
+        android:targetPackage="com.octo.android.robospice.retrofit2.test" />
+
+</manifest>
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/default.properties b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/default.properties
new file mode 100644
index 000000000..51ff180e8
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/default.properties
@@ -0,0 +1,2 @@
+# Project target.
+target=android-10
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/lint.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/lint.xml
new file mode 100644
index 000000000..ee0eead5b
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/lint.xml
@@ -0,0 +1,3 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<lint>
+</lint>
\ No newline at end of file
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/pom.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/pom.xml
new file mode 100644
index 000000000..500830a17
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/pom.xml
@@ -0,0 +1,118 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+
+	<parent>
+		<groupId>com.octo.android.robospice</groupId>
+		<artifactId>robospice-retrofit2-parent</artifactId>
+		<version>1.5.0-SNAPSHOT</version>
+	</parent>
+
+	<artifactId>robospice-retrofit2-test</artifactId>
+	<packaging>apk</packaging>
+	<name>Robospice - Extension Retrofit2 Module tests</name>
+
+	<dependencies>
+		<dependency>
+			<groupId>com.google.android</groupId>
+			<artifactId>android</artifactId>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>com.google.android</groupId>
+			<artifactId>android-test</artifactId>
+			<scope>provided</scope>
+		</dependency>
+
+		<!-- Common Google Http Java Client Module Dependency Dependencies -->
+		<dependency>
+			<groupId>com.octo.android.robospice</groupId>
+			<artifactId>robospice-retrofit2</artifactId>
+			<version>${project.version}</version>
+			<exclusions>
+				<exclusion>
+					<groupId>xpp3</groupId>
+					<artifactId>xpp3</artifactId>
+				</exclusion>
+				<exclusion>
+					<groupId>stax</groupId>
+					<artifactId>stax-api</artifactId>
+				</exclusion>
+			</exclusions>
+		</dependency>
+		<dependency>
+			<groupId>com.squareup.retrofit2</groupId>
+			<artifactId>converter-jackson</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>com.squareup.retrofit2</groupId>
+			<artifactId>converter-gson</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>com.fasterxml.jackson.core</groupId>
+			<artifactId>jackson-databind</artifactId>
+			<version>2.4.2</version>
+		</dependency>
+		<!-- http://stackoverflow.com/questions/5591811/ignoring-innerclasses-attribute-warning-is-killing-eclipse -->
+		<dependency>
+			<groupId>commons-logging</groupId>
+			<artifactId>commons-logging</artifactId>
+			<scope>provided</scope>
+		</dependency>
+		<!-- Dependencies for testing -->
+		<dependency>
+			<groupId>com.google.mockwebserver</groupId>
+			<artifactId>mockwebserver</artifactId>
+		</dependency>
+	</dependencies>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>com.simpligility.maven.plugins</groupId>
+				<artifactId>android-maven-plugin</artifactId>
+			</plugin>
+			<plugin>
+				<artifactId>maven-deploy-plugin</artifactId>
+				<configuration>
+					<skip>true</skip>
+				</configuration>
+			</plugin>
+		</plugins>
+		<pluginManagement>
+			<plugins>
+				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
+				<plugin>
+					<groupId>org.eclipse.m2e</groupId>
+					<artifactId>lifecycle-mapping</artifactId>
+					<version>1.0.0</version>
+					<configuration>
+						<lifecycleMappingMetadata>
+							<pluginExecutions>
+								<pluginExecution>
+									<pluginExecutionFilter>
+										<groupId>
+											com.jayway.maven.plugins.android.generation2
+										</groupId>
+										<artifactId>
+											android-maven-plugin
+										</artifactId>
+										<versionRange>
+											[3.8.1,)
+										</versionRange>
+										<goals>
+											<goal>consume-aar</goal>
+										</goals>
+									</pluginExecutionFilter>
+									<action>
+										<ignore />
+									</action>
+								</pluginExecution>
+							</pluginExecutions>
+						</lifecycleMappingMetadata>
+					</configuration>
+				</plugin>
+			</plugins>
+		</pluginManagement>
+	</build>
+</project>
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/project.properties b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/project.properties
new file mode 100644
index 000000000..22d0dca6a
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/project.properties
@@ -0,0 +1,14 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Project target.
+target=android-7
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-hdpi/ic_launcher_robospice.png b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-hdpi/ic_launcher_robospice.png
new file mode 100644
index 000000000..ff9fb0444
Binary files /dev/null and b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-hdpi/ic_launcher_robospice.png differ
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-hdpi/icon.png b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-hdpi/icon.png
new file mode 100644
index 000000000..afc1a0ef3
Binary files /dev/null and b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-hdpi/icon.png differ
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-ldpi/icon.png b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-ldpi/icon.png
new file mode 100644
index 000000000..5a8992412
Binary files /dev/null and b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-ldpi/icon.png differ
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-mdpi/ic_launcher_robospice.png b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-mdpi/ic_launcher_robospice.png
new file mode 100644
index 000000000..38ec8506f
Binary files /dev/null and b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-mdpi/ic_launcher_robospice.png differ
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-mdpi/icon.png b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-mdpi/icon.png
new file mode 100644
index 000000000..7e079bb29
Binary files /dev/null and b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-mdpi/icon.png differ
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-xhdpi/ic_launcher_robospice.png b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-xhdpi/ic_launcher_robospice.png
new file mode 100644
index 000000000..32d6e1b69
Binary files /dev/null and b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/drawable-xhdpi/ic_launcher_robospice.png differ
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/layout/main.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/layout/main.xml
new file mode 100644
index 000000000..66a09a4aa
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/layout/main.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical" >
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical" >
+
+        <TextView
+            android:id="@+id/textview_hello_cnil"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:ellipsize="marquee"
+            android:singleLine="true"
+            android:text="@string/textview_text" />
+
+        <TextView
+            android:id="@+id/textview_hello_image"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/textview_image" />
+
+        <TextView
+            android:id="@+id/textview_hello_json"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:singleLine="false"
+            android:text="@string/textview_json" />
+        <TextView
+            android:id="@+id/textview_hello_xml"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:singleLine="false"
+            android:text="@string/textview_xml" />
+    </LinearLayout>
+
+</ScrollView>
\ No newline at end of file
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/raw/binary.png b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/raw/binary.png
new file mode 100644
index 000000000..5a8992412
Binary files /dev/null and b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/raw/binary.png differ
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/raw/lorem_ipsum.txt b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/raw/lorem_ipsum.txt
new file mode 100644
index 000000000..cbbc7e85c
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/raw/lorem_ipsum.txt
@@ -0,0 +1,7 @@
+Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
+Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
+Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.
+Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.
+Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.
+At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat. 
+Consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.
\ No newline at end of file
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/values/strings.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/values/strings.xml
new file mode 100644
index 000000000..8781ee3aa
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/res/values/strings.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="hello">Hello RoboSpice!</string>
+    <string name="app_name">RoboSpice sample</string>
+    <string name="textview_text">Text:</string>
+    <string name="textview_json">Json:</string>
+    <string name="textview_xml">Xml:</string>
+    <string name="textview_image">Image:</string>
+</resources>
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/InFileWeatherPersisterGsonTest.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/InFileWeatherPersisterGsonTest.java
new file mode 100644
index 000000000..3765bde54
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/InFileWeatherPersisterGsonTest.java
@@ -0,0 +1,14 @@
+package com.octo.android.robospice.persistence.retrofit2;
+
+import android.app.Application;
+import com.octo.android.robospice.persistence.exception.CacheCreationException;
+import com.octo.android.robospice.persistence.retrofit2.transformers.RetrofitGsonConvertAware;
+
+
+public class InFileWeatherPersisterGsonTest extends JsonObjectPersisterFactoryTest {
+
+    @Override
+    protected RetrofitObjectPersisterFactory getRetrofitObjectPersisterFactory(Application application) throws CacheCreationException {
+        return new RetrofitObjectPersisterFactory(application, new RetrofitGsonConvertAware());
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/InFileWeatherPersisterJacksonTest.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/InFileWeatherPersisterJacksonTest.java
new file mode 100644
index 000000000..c2809e12c
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/InFileWeatherPersisterJacksonTest.java
@@ -0,0 +1,16 @@
+package com.octo.android.robospice.persistence.retrofit2;
+
+import android.app.Application;
+import com.octo.android.robospice.persistence.exception.CacheCreationException;
+import com.octo.android.robospice.persistence.retrofit2.transformers.RetrofitJacksonConvertAware;
+
+
+public class InFileWeatherPersisterJacksonTest extends JsonObjectPersisterFactoryTest {
+
+    @Override
+    protected RetrofitObjectPersisterFactory getRetrofitObjectPersisterFactory(Application application) throws CacheCreationException {
+        return new RetrofitObjectPersisterFactory(application, new RetrofitJacksonConvertAware());
+
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/JsonObjectPersisterFactoryTest.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/JsonObjectPersisterFactoryTest.java
new file mode 100644
index 000000000..2e46d4391
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/persistence/retrofit2/JsonObjectPersisterFactoryTest.java
@@ -0,0 +1,181 @@
+package com.octo.android.robospice.persistence.retrofit2;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import android.app.Application;
+import android.test.AndroidTestCase;
+import android.test.suitebuilder.annotation.SmallTest;
+
+import com.octo.android.robospice.persistence.DurationInMillis;
+import com.octo.android.robospice.persistence.exception.CacheCreationException;
+import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import com.octo.android.robospice.retrofit2.test.model.Curren_weather;
+import com.octo.android.robospice.retrofit2.test.model.Weather;
+import com.octo.android.robospice.retrofit2.test.model.WeatherResult;
+
+@SmallTest
+public abstract class JsonObjectPersisterFactoryTest extends AndroidTestCase {
+    private static final String TEST_TEMP_UNIT = "C";
+    private static final String TEST_TEMP = "28";
+    private static final String TEST_TEMP2 = "30";
+    private static final long SMALL_THREAD_SLEEP = 50;
+    private InFileObjectPersister<WeatherResult> inFileObjectPersister;
+
+    @Override
+    protected void setUp() throws Exception {
+        super.setUp();
+        Thread.sleep(SMALL_THREAD_SLEEP);
+        Application application = (Application) getContext().getApplicationContext();
+        RetrofitObjectPersisterFactory factory = getRetrofitObjectPersisterFactory(application);
+        inFileObjectPersister = factory.createObjectPersister(WeatherResult.class);
+    }
+
+    @Override
+    protected void tearDown() throws Exception {
+        inFileObjectPersister.removeAllDataFromCache();
+        super.tearDown();
+    }
+
+    public void test_canHandleClientRequestStatus() {
+        boolean canHandleClientWeatherResult = inFileObjectPersister.canHandleClass(WeatherResult.class);
+        assertEquals(true, canHandleClientWeatherResult);
+    }
+
+    public void test_saveDataAndReturnData() throws Exception {
+        // GIVEN
+        WeatherResult weatherRequestStatus = buildWeather(TEST_TEMP, TEST_TEMP_UNIT);
+
+        // WHEN
+        WeatherResult weatherReturned = inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus, "weather.json");
+
+        // THEN
+        assertEquals(TEST_TEMP, weatherReturned.getWeather().getCurren_weather().get(0).getTemp());
+    }
+
+    public void test_loadDataFromCache_no_expiracy() throws Exception {
+        // GIVEN
+        WeatherResult weatherRequestStatus = buildWeather(TEST_TEMP, TEST_TEMP_UNIT);
+        final String fileName = "toto";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus, fileName);
+
+        // WHEN
+        WeatherResult weatherReturned = inFileObjectPersister.loadDataFromCache(fileName, DurationInMillis.ALWAYS_RETURNED);
+
+        // THEN
+        assertEquals(TEST_TEMP, weatherReturned.getWeather().getCurren_weather().get(0).getTemp());
+    }
+
+    public void test_loadDataFromCache_not_expired() throws Exception {
+        // GIVEN
+        WeatherResult weatherRequestStatus = buildWeather(TEST_TEMP, TEST_TEMP_UNIT);
+        final String fileName = "toto";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus, fileName);
+
+        // WHEN
+        WeatherResult weatherReturned = inFileObjectPersister.loadDataFromCache(fileName, DurationInMillis.ONE_MINUTE);
+
+        // THEN
+        assertEquals(TEST_TEMP, weatherReturned.getWeather().getCurren_weather().get(0).getTemp());
+    }
+
+    public void test_loadDataFromCache_expired() throws Exception {
+        // GIVEN
+        WeatherResult weatherRequestStatus = buildWeather(TEST_TEMP2, TEST_TEMP_UNIT);
+        final String fileName = "toto";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus, fileName);
+        File cachedFile = ((RetrofitObjectPersister<?>) inFileObjectPersister).getCacheFile(fileName);
+        final int secondsCountBackInTime = 5;
+        cachedFile.setLastModified(System.currentTimeMillis() - secondsCountBackInTime * DurationInMillis.ONE_SECOND);
+
+        // WHEN
+        WeatherResult weatherReturned = inFileObjectPersister.loadDataFromCache(fileName, DurationInMillis.ONE_SECOND);
+
+        // THEN
+        assertNull(weatherReturned);
+    }
+
+    public void test_loadAllDataFromCache_with_one_request_in_cache() throws Exception {
+        // GIVEN
+        WeatherResult weatherRequestStatus = buildWeather(TEST_TEMP, TEST_TEMP_UNIT);
+        final String fileName = "toto";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus, fileName);
+
+        // WHEN
+        List<WeatherResult> listWeatherResult = inFileObjectPersister.loadAllDataFromCache();
+
+        // THEN
+        assertNotNull(listWeatherResult);
+        assertEquals(1, listWeatherResult.size());
+        assertEquals(weatherRequestStatus, listWeatherResult.get(0));
+    }
+
+    public void test_loadAllDataFromCache_with_two_requests_in_cache() throws Exception {
+        // GIVEN
+        WeatherResult weatherRequestStatus = buildWeather(TEST_TEMP, TEST_TEMP_UNIT);
+        final String fileName = "toto";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus, fileName);
+
+        WeatherResult weatherRequestStatus2 = buildWeather(TEST_TEMP2, TEST_TEMP_UNIT);
+        final String fileName2 = "tutu";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus2, fileName2);
+
+        // WHEN
+        List<WeatherResult> listWeatherResult = inFileObjectPersister.loadAllDataFromCache();
+
+        // THEN
+        assertNotNull(listWeatherResult);
+        assertEquals(2, listWeatherResult.size());
+        assertTrue(listWeatherResult.contains(weatherRequestStatus));
+        assertTrue(listWeatherResult.contains(weatherRequestStatus2));
+    }
+
+    public void test_loadAllDataFromCache_with_no_requests_in_cache() throws Exception {
+        // GIVEN
+
+        // WHEN
+        List<WeatherResult> listWeatherResult = inFileObjectPersister.loadAllDataFromCache();
+
+        // THEN
+        assertNotNull(listWeatherResult);
+        assertTrue(listWeatherResult.isEmpty());
+    }
+
+    public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed() throws Exception {
+        // GIVEN
+        WeatherResult weatherRequestStatus = buildWeather(TEST_TEMP, TEST_TEMP_UNIT);
+        final String fileName = "toto";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus, fileName);
+
+        WeatherResult weatherRequestStatus2 = buildWeather(TEST_TEMP2, TEST_TEMP_UNIT);
+        final String fileName2 = "tutu";
+        inFileObjectPersister.saveDataToCacheAndReturnData(weatherRequestStatus2, fileName2);
+
+        inFileObjectPersister.removeDataFromCache(fileName2);
+
+        // WHEN
+        List<WeatherResult> listWeatherResult = inFileObjectPersister.loadAllDataFromCache();
+
+        // THEN
+        assertNotNull(listWeatherResult);
+        assertEquals(1, listWeatherResult.size());
+        assertTrue(listWeatherResult.contains(weatherRequestStatus));
+        assertFalse(listWeatherResult.contains(weatherRequestStatus2));
+    }
+
+    private WeatherResult buildWeather(String temp, String tempUnit) {
+        WeatherResult weatherRequestStatus = new WeatherResult();
+        Weather weather = new Weather();
+        List<Curren_weather> currents = new ArrayList<Curren_weather>();
+        Curren_weather current_weather = new Curren_weather();
+        current_weather.setTemp(temp);
+        current_weather.setTemp_unit(tempUnit);
+        currents.add(current_weather);
+        weather.setCurren_weather(currents);
+        weatherRequestStatus.setWeather(weather);
+        return weatherRequestStatus;
+    }
+
+    protected abstract RetrofitObjectPersisterFactory getRetrofitObjectPersisterFactory(Application application) throws CacheCreationException;
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/RetrofitGsonSpiceServiceTest.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/RetrofitGsonSpiceServiceTest.java
new file mode 100644
index 000000000..a4aab2757
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/RetrofitGsonSpiceServiceTest.java
@@ -0,0 +1,59 @@
+package com.octo.android.robospice.retrofit2;
+
+import android.content.Intent;
+import android.test.ServiceTestCase;
+import android.test.suitebuilder.annotation.SmallTest;
+
+import com.octo.android.robospice.SpiceManager;
+import com.octo.android.robospice.retrofit2.test.TestRetrofitGsonSpiceService;
+import com.octo.android.robospice.retrofit2.test.model.WeatherResult;
+import com.octo.android.robospice.retrofit2.test.stub.RequestListenerStub;
+import com.octo.android.robospice.retrofit2.test.stub.RetrofitSpiceRequestStub;
+
+@SmallTest
+public class RetrofitGsonSpiceServiceTest extends ServiceTestCase<TestRetrofitGsonSpiceService> {
+
+    private static final int REQUEST_COMPLETION_TIMEOUT = 1000;
+    private static final long SMALL_THREAD_SLEEP = 50;
+    private SpiceManager spiceManager;
+
+    public RetrofitGsonSpiceServiceTest() {
+        super(TestRetrofitGsonSpiceService.class);
+    }
+
+    @Override
+    protected void setUp() throws Exception {
+        super.setUp();
+        Thread.sleep(SMALL_THREAD_SLEEP);
+        spiceManager = new SpiceManager(TestRetrofitGsonSpiceService.class);
+    }
+
+    @Override
+    protected void tearDown() throws Exception {
+        shutdownService();
+        if (spiceManager.isStarted()) {
+            spiceManager.shouldStopAndJoin(REQUEST_COMPLETION_TIMEOUT);
+        }
+        super.tearDown();
+    }
+
+    public void test_createRequestFactory_returns_default_factory() {
+        Intent startIntent = new Intent();
+        startIntent.setClass(getContext(), TestRetrofitGsonSpiceService.class);
+        startService(startIntent);
+        assertNotNull(getService().createRestAdapterBuilder());
+    }
+
+    public void test_addRequest_injects_request_factory() throws InterruptedException {
+        // given
+        spiceManager.start(getContext());
+        RetrofitSpiceRequestStub retrofitSpiceRequestStub = new RetrofitSpiceRequestStub(WeatherResult.class);
+
+        // when
+        spiceManager.execute(retrofitSpiceRequestStub, new RequestListenerStub<WeatherResult>());
+        retrofitSpiceRequestStub.await(REQUEST_COMPLETION_TIMEOUT);
+
+        // test
+        assertNotNull(retrofitSpiceRequestStub.getService());
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/RetrofitJacksonSpiceServiceTest.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/RetrofitJacksonSpiceServiceTest.java
new file mode 100644
index 000000000..5e81a414d
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/RetrofitJacksonSpiceServiceTest.java
@@ -0,0 +1,59 @@
+package com.octo.android.robospice.retrofit2;
+
+import android.content.Intent;
+import android.test.ServiceTestCase;
+import android.test.suitebuilder.annotation.SmallTest;
+
+import com.octo.android.robospice.SpiceManager;
+import com.octo.android.robospice.retrofit2.test.TestRetrofitJacksonSpiceService;
+import com.octo.android.robospice.retrofit2.test.model.WeatherResult;
+import com.octo.android.robospice.retrofit2.test.stub.RequestListenerStub;
+import com.octo.android.robospice.retrofit2.test.stub.RetrofitSpiceRequestStub;
+
+@SmallTest
+public class RetrofitJacksonSpiceServiceTest extends ServiceTestCase<TestRetrofitJacksonSpiceService> {
+
+    private static final int REQUEST_COMPLETION_TIMEOUT = 1000;
+    private static final long SMALL_THREAD_SLEEP = 50;
+    private SpiceManager spiceManager;
+
+    public RetrofitJacksonSpiceServiceTest() {
+        super(TestRetrofitJacksonSpiceService.class);
+    }
+
+    @Override
+    protected void setUp() throws Exception {
+        super.setUp();
+        Thread.sleep(SMALL_THREAD_SLEEP);
+        spiceManager = new SpiceManager(TestRetrofitJacksonSpiceService.class);
+    }
+
+    @Override
+    protected void tearDown() throws Exception {
+        shutdownService();
+        if (spiceManager.isStarted()) {
+            spiceManager.shouldStopAndJoin(REQUEST_COMPLETION_TIMEOUT);
+        }
+        super.tearDown();
+    }
+
+    public void test_createRequestFactory_returns_default_factory() {
+        Intent startIntent = new Intent();
+        startIntent.setClass(getContext(), TestRetrofitJacksonSpiceService.class);
+        startService(startIntent);
+        assertNotNull(getService().createRestAdapterBuilder());
+    }
+
+    public void test_addRequest_injects_request_factory() throws InterruptedException {
+        // given
+        spiceManager.start(getContext());
+        RetrofitSpiceRequestStub retrofitSpiceRequestStub = new RetrofitSpiceRequestStub(WeatherResult.class);
+
+        // when
+        spiceManager.execute(retrofitSpiceRequestStub, new RequestListenerStub<WeatherResult>());
+        retrofitSpiceRequestStub.await(REQUEST_COMPLETION_TIMEOUT);
+
+        // test
+        assertNotNull(retrofitSpiceRequestStub.getService());
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/TestRetrofitGsonSpiceService.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/TestRetrofitGsonSpiceService.java
new file mode 100644
index 000000000..11e5cb3ef
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/TestRetrofitGsonSpiceService.java
@@ -0,0 +1,18 @@
+package com.octo.android.robospice.retrofit2.test;
+
+import com.octo.android.robospice.retrofit2.RetrofitGsonSpiceService;
+import java.io.File;
+
+public class TestRetrofitGsonSpiceService extends RetrofitGsonSpiceService {
+
+    @Override
+    protected String getServerUrl() {
+        return "http://non-blank.random.server/";
+    }
+
+    @Override
+    public File getCacheFolder() {
+        return new File("/");
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/TestRetrofitJacksonSpiceService.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/TestRetrofitJacksonSpiceService.java
new file mode 100644
index 000000000..9040c0064
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/TestRetrofitJacksonSpiceService.java
@@ -0,0 +1,18 @@
+package com.octo.android.robospice.retrofit2.test;
+
+import com.octo.android.robospice.retrofit2.RetrofitJacksonSpiceService;
+import java.io.File;
+
+public class TestRetrofitJacksonSpiceService extends RetrofitJacksonSpiceService {
+
+    @Override
+    protected String getServerUrl() {
+        return "http://non-blank.random.server/";
+    }
+
+    @Override
+    public File getCacheFolder() {
+        return new File("/");
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Curren_weather.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Curren_weather.java
new file mode 100644
index 000000000..bb438c07e
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Curren_weather.java
@@ -0,0 +1,154 @@
+package com.octo.android.robospice.retrofit2.test.model;
+
+import java.util.List;
+
+public class Curren_weather {
+    private String humidity;
+    private String pressure;
+    private String temp;
+    private String temp_unit;
+    private String weather_code;
+    private String weather_text;
+    private List<Wind> wind;
+
+    public String getHumidity() {
+        return this.humidity;
+    }
+
+    public void setHumidity(String humidity) {
+        this.humidity = humidity;
+    }
+
+    public String getPressure() {
+        return this.pressure;
+    }
+
+    public void setPressure(String pressure) {
+        this.pressure = pressure;
+    }
+
+    public String getTemp() {
+        return this.temp;
+    }
+
+    public void setTemp(String temp) {
+        this.temp = temp;
+    }
+
+    public String getTemp_unit() {
+        return this.temp_unit;
+    }
+
+    public void setTemp_unit(String temp_unit) {
+        this.temp_unit = temp_unit;
+    }
+
+    public String getWeather_code() {
+        return this.weather_code;
+    }
+
+    public void setWeather_code(String weather_code) {
+        this.weather_code = weather_code;
+    }
+
+    public String getWeather_text() {
+        return this.weather_text;
+    }
+
+    public void setWeather_text(String weather_text) {
+        this.weather_text = weather_text;
+    }
+
+    public List<Wind> getWind() {
+        return this.wind;
+    }
+
+    public void setWind(List<Wind> wind) {
+        this.wind = wind;
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + (humidity == null ? 0 : humidity.hashCode());
+        result = prime * result + (pressure == null ? 0 : pressure.hashCode());
+        result = prime * result + (temp == null ? 0 : temp.hashCode());
+        result = prime * result + (temp_unit == null ? 0 : temp_unit.hashCode());
+        result = prime * result + (weather_code == null ? 0 : weather_code.hashCode());
+        result = prime * result + (weather_text == null ? 0 : weather_text.hashCode());
+        result = prime * result + (wind == null ? 0 : wind.hashCode());
+        return result;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        Curren_weather other = (Curren_weather) obj;
+        if (humidity == null) {
+            if (other.humidity != null) {
+                return false;
+            }
+        } else if (!humidity.equals(other.humidity)) {
+            return false;
+        }
+        if (pressure == null) {
+            if (other.pressure != null) {
+                return false;
+            }
+        } else if (!pressure.equals(other.pressure)) {
+            return false;
+        }
+        if (temp == null) {
+            if (other.temp != null) {
+                return false;
+            }
+        } else if (!temp.equals(other.temp)) {
+            return false;
+        }
+        if (temp_unit == null) {
+            if (other.temp_unit != null) {
+                return false;
+            }
+        } else if (!temp_unit.equals(other.temp_unit)) {
+            return false;
+        }
+        if (weather_code == null) {
+            if (other.weather_code != null) {
+                return false;
+            }
+        } else if (!weather_code.equals(other.weather_code)) {
+            return false;
+        }
+        if (weather_text == null) {
+            if (other.weather_text != null) {
+                return false;
+            }
+        } else if (!weather_text.equals(other.weather_text)) {
+            return false;
+        }
+        if (wind == null) {
+            if (other.wind != null) {
+                return false;
+            }
+        } else if (!wind.equals(other.wind)) {
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    public String toString() {
+        return "Curren_weather [humidity=" + humidity + ", pressure=" + pressure + ", temp=" + temp + ", temp_unit="
+            + temp_unit + ", weather_code=" + weather_code + ", weather_text=" + weather_text + ", wind=" + wind + "]";
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Day.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Day.java
new file mode 100644
index 000000000..c71f4a292
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Day.java
@@ -0,0 +1,39 @@
+package com.octo.android.robospice.retrofit2.test.model;
+
+import java.util.List;
+
+public class Day {
+    private String weather_code;
+    private String weather_text;
+    private List<Wind> wind;
+
+    public String getWeather_code() {
+        return this.weather_code;
+    }
+
+    public void setWeather_code(String weather_code) {
+        this.weather_code = weather_code;
+    }
+
+    public String getWeather_text() {
+        return this.weather_text;
+    }
+
+    public void setWeather_text(String weather_text) {
+        this.weather_text = weather_text;
+    }
+
+    public List<Wind> getWind() {
+        return this.wind;
+    }
+
+    public void setWind(List<Wind> wind) {
+        this.wind = wind;
+    }
+
+    @Override
+    public String toString() {
+        return "Day [weather_code=" + weather_code + ", weather_text=" + weather_text + ", wind=" + wind + "]";
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Forecast.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Forecast.java
new file mode 100644
index 000000000..a30297524
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Forecast.java
@@ -0,0 +1,137 @@
+package com.octo.android.robospice.retrofit2.test.model;
+
+import java.util.List;
+
+public class Forecast {
+    private String date;
+    private List<Day> day;
+    private String day_max_temp;
+    private List<Day> night;
+    private String night_min_temp;
+    private String temp_unit;
+
+    public String getDate() {
+        return this.date;
+    }
+
+    public void setDate(String date) {
+        this.date = date;
+    }
+
+    public List<Day> getDay() {
+        return this.day;
+    }
+
+    public void setDay(List<Day> day) {
+        this.day = day;
+    }
+
+    public String getDay_max_temp() {
+        return this.day_max_temp;
+    }
+
+    public void setDay_max_temp(String day_max_temp) {
+        this.day_max_temp = day_max_temp;
+    }
+
+    public List<Day> getNight() {
+        return this.night;
+    }
+
+    public void setNight(List<Day> night) {
+        this.night = night;
+    }
+
+    public String getNight_min_temp() {
+        return this.night_min_temp;
+    }
+
+    public void setNight_min_temp(String night_min_temp) {
+        this.night_min_temp = night_min_temp;
+    }
+
+    public String getTemp_unit() {
+        return this.temp_unit;
+    }
+
+    public void setTemp_unit(String temp_unit) {
+        this.temp_unit = temp_unit;
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + (date == null ? 0 : date.hashCode());
+        result = prime * result + (day == null ? 0 : day.hashCode());
+        result = prime * result + (day_max_temp == null ? 0 : day_max_temp.hashCode());
+        result = prime * result + (night == null ? 0 : night.hashCode());
+        result = prime * result + (night_min_temp == null ? 0 : night_min_temp.hashCode());
+        result = prime * result + (temp_unit == null ? 0 : temp_unit.hashCode());
+        return result;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        Forecast other = (Forecast) obj;
+        if (date == null) {
+            if (other.date != null) {
+                return false;
+            }
+        } else if (!date.equals(other.date)) {
+            return false;
+        }
+        if (day == null) {
+            if (other.day != null) {
+                return false;
+            }
+        } else if (!day.equals(other.day)) {
+            return false;
+        }
+        if (day_max_temp == null) {
+            if (other.day_max_temp != null) {
+                return false;
+            }
+        } else if (!day_max_temp.equals(other.day_max_temp)) {
+            return false;
+        }
+        if (night == null) {
+            if (other.night != null) {
+                return false;
+            }
+        } else if (!night.equals(other.night)) {
+            return false;
+        }
+        if (night_min_temp == null) {
+            if (other.night_min_temp != null) {
+                return false;
+            }
+        } else if (!night_min_temp.equals(other.night_min_temp)) {
+            return false;
+        }
+        if (temp_unit == null) {
+            if (other.temp_unit != null) {
+                return false;
+            }
+        } else if (!temp_unit.equals(other.temp_unit)) {
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    public String toString() {
+        return "Forecast [date=" + date + ", day=" + day + ", day_max_temp=" + day_max_temp + ", night=" + night
+            + ", night_min_temp=" + night_min_temp + ", temp_unit=" + temp_unit + "]";
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/SimpleData.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/SimpleData.java
new file mode 100644
index 000000000..4b180c5c0
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/SimpleData.java
@@ -0,0 +1,42 @@
+package com.octo.android.robospice.retrofit2.test.model;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+/**
+ * A simple demonstration object we are creating and persisting to the database.
+ */
+public class SimpleData {
+
+    private static final int MILLISECONDS_IN_SECONDS = 1000;
+
+    // id is generated by the database and set on the object automagically
+    int id;
+    String string;
+    long millis;
+    Date date;
+    boolean even;
+
+    SimpleData() {
+        // needed by ormlite
+    }
+
+    public SimpleData(long millis) {
+        this.date = new Date(millis);
+        this.string = millis % MILLISECONDS_IN_SECONDS + "ms";
+        this.millis = millis;
+        this.even = millis % 2 == 0;
+    }
+
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("id=").append(id);
+        sb.append(", ").append("string=").append(string);
+        sb.append(", ").append("millis=").append(millis);
+        SimpleDateFormat dateFormatter = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss.S");
+        sb.append(", ").append("date=").append(dateFormatter.format(date));
+        sb.append(", ").append("even=").append(even);
+        return sb.toString();
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Weather.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Weather.java
new file mode 100644
index 000000000..d4cebb12d
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Weather.java
@@ -0,0 +1,72 @@
+package com.octo.android.robospice.retrofit2.test.model;
+
+import java.util.List;
+
+public class Weather {
+
+    private List<Curren_weather> curren_weather;
+    private List<Forecast> forecast;
+
+    public Weather() {
+    }
+
+    public List<Curren_weather> getCurren_weather() {
+        return this.curren_weather;
+    }
+
+    public void setCurren_weather(List<Curren_weather> curren_weather) {
+        this.curren_weather = curren_weather;
+    }
+
+    public List<Forecast> getForecast() {
+        return this.forecast;
+    }
+
+    public void setForecast(List<Forecast> forecast) {
+        this.forecast = forecast;
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + (curren_weather == null ? 0 : curren_weather.hashCode());
+        result = prime * result + (forecast == null ? 0 : forecast.hashCode());
+        return result;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        Weather other = (Weather) obj;
+        if (curren_weather == null) {
+            if (other.curren_weather != null) {
+                return false;
+            }
+        } else if (!curren_weather.equals(other.curren_weather)) {
+            return false;
+        }
+        if (forecast == null) {
+            if (other.forecast != null) {
+                return false;
+            }
+        } else if (!forecast.equals(other.forecast)) {
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    public String toString() {
+        return "Weather [curren_weather=" + curren_weather + ", forecast=" + forecast + "]";
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/WeatherResult.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/WeatherResult.java
new file mode 100644
index 000000000..c64f345b7
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/WeatherResult.java
@@ -0,0 +1,54 @@
+package com.octo.android.robospice.retrofit2.test.model;
+
+public class WeatherResult {
+    private Weather weather;
+    private int id = 1;
+
+    public Weather getWeather() {
+        return this.weather;
+    }
+
+    public void setWeather(Weather weather) {
+        this.weather = weather;
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + id;
+        result = prime * result + (weather == null ? 0 : weather.hashCode());
+        return result;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        WeatherResult other = (WeatherResult) obj;
+        if (id != other.id) {
+            return false;
+        }
+        if (weather == null) {
+            if (other.weather != null) {
+                return false;
+            }
+        } else if (!weather.equals(other.weather)) {
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    public String toString() {
+        return "WeatherResult [weather=" + weather + "]";
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Wind.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Wind.java
new file mode 100644
index 000000000..42ed1bbf1
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/model/Wind.java
@@ -0,0 +1,83 @@
+package com.octo.android.robospice.retrofit2.test.model;
+
+public class Wind {
+    private String dir;
+    private String speed;
+    private String wind_unit;
+
+    public String getDir() {
+        return this.dir;
+    }
+
+    public void setDir(String dir) {
+        this.dir = dir;
+    }
+
+    public String getSpeed() {
+        return this.speed;
+    }
+
+    public void setSpeed(String speed) {
+        this.speed = speed;
+    }
+
+    public String getWind_unit() {
+        return this.wind_unit;
+    }
+
+    public void setWind_unit(String wind_unit) {
+        this.wind_unit = wind_unit;
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int result = 1;
+        result = prime * result + (dir == null ? 0 : dir.hashCode());
+        result = prime * result + (speed == null ? 0 : speed.hashCode());
+        result = prime * result + (wind_unit == null ? 0 : wind_unit.hashCode());
+        return result;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        Wind other = (Wind) obj;
+        if (dir == null) {
+            if (other.dir != null) {
+                return false;
+            }
+        } else if (!dir.equals(other.dir)) {
+            return false;
+        }
+        if (speed == null) {
+            if (other.speed != null) {
+                return false;
+            }
+        } else if (!speed.equals(other.speed)) {
+            return false;
+        }
+        if (wind_unit == null) {
+            if (other.wind_unit != null) {
+                return false;
+            }
+        } else if (!wind_unit.equals(other.wind_unit)) {
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    public String toString() {
+        return "Wind [dir=" + dir + ", speed=" + speed + ", wind_unit=" + wind_unit + "]";
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/FakeWeatherService.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/FakeWeatherService.java
new file mode 100644
index 000000000..f9fe9d37b
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/FakeWeatherService.java
@@ -0,0 +1,5 @@
+package com.octo.android.robospice.retrofit2.test.stub;
+
+public interface FakeWeatherService {
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/RequestListenerStub.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/RequestListenerStub.java
new file mode 100644
index 000000000..a8208f630
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/RequestListenerStub.java
@@ -0,0 +1,72 @@
+package com.octo.android.robospice.retrofit2.test.stub;
+
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.locks.Condition;
+import java.util.concurrent.locks.ReentrantLock;
+
+import android.os.Looper;
+
+import com.octo.android.robospice.persistence.exception.SpiceException;
+import com.octo.android.robospice.request.listener.RequestListener;
+
+public class RequestListenerStub<T> implements RequestListener<T> {
+
+    protected Boolean isSuccessful = null;
+    protected boolean isExecutedInUIThread = false;
+
+    protected ReentrantLock lock = new ReentrantLock();
+    protected Condition requestFinishedCondition = lock.newCondition();
+    protected Exception exception;
+
+    @Override
+    public void onRequestFailure(SpiceException exception) {
+        lock.lock();
+        try {
+            checkIsExectuedInUIThread();
+            isSuccessful = false;
+            this.exception = exception;
+            requestFinishedCondition.signal();
+        } finally {
+            lock.unlock();
+        }
+    }
+
+    @Override
+    public void onRequestSuccess(T arg0) {
+        lock.lock();
+        try {
+            checkIsExectuedInUIThread();
+            isSuccessful = true;
+            requestFinishedCondition.signal();
+        } finally {
+            lock.unlock();
+        }
+    }
+
+    protected void checkIsExectuedInUIThread() {
+        if (Looper.myLooper() != null && Looper.myLooper() == Looper.getMainLooper()) {
+            isExecutedInUIThread = true;
+        }
+    }
+
+    public Boolean isSuccessful() {
+        return isSuccessful;
+    }
+
+    public Exception getReceivedException() {
+        return exception;
+    }
+
+    public boolean isExecutedInUIThread() {
+        return isExecutedInUIThread;
+    }
+
+    public void await(long millisecond) throws InterruptedException {
+        lock.lock();
+        try {
+            requestFinishedCondition.await(millisecond, TimeUnit.MILLISECONDS);
+        } finally {
+            lock.unlock();
+        }
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/RetrofitSpiceRequestStub.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/RetrofitSpiceRequestStub.java
new file mode 100644
index 000000000..ea7498ed0
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/main/java/com/octo/android/robospice/retrofit2/test/stub/RetrofitSpiceRequestStub.java
@@ -0,0 +1,38 @@
+package com.octo.android.robospice.retrofit2.test.stub;
+
+import com.octo.android.robospice.request.retrofit2.RetrofitSpiceRequest;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.locks.Condition;
+import java.util.concurrent.locks.ReentrantLock;
+
+import com.octo.android.robospice.retrofit2.test.model.WeatherResult;
+
+public class RetrofitSpiceRequestStub extends RetrofitSpiceRequest<WeatherResult, FakeWeatherService> {
+    private ReentrantLock reentrantLock = new ReentrantLock();
+    private Condition loadDataFromNetworkHasBeenExecuted = reentrantLock.newCondition();
+
+    public RetrofitSpiceRequestStub(Class<WeatherResult> clazz) {
+        super(clazz, FakeWeatherService.class);
+    }
+
+    @Override
+    public WeatherResult loadDataFromNetwork() throws Exception {
+        reentrantLock.lock();
+        try {
+            loadDataFromNetworkHasBeenExecuted.signal();
+        } finally {
+            reentrantLock.unlock();
+        }
+        return new WeatherResult();
+    }
+
+    public void await(long timeout) throws InterruptedException {
+        reentrantLock.lock();
+        try {
+            loadDataFromNetworkHasBeenExecuted.await(timeout, TimeUnit.MILLISECONDS);
+        } finally {
+            reentrantLock.unlock();
+        }
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/site/site.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/site/site.xml
new file mode 100644
index 000000000..b34b22c30
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/site/site.xml
@@ -0,0 +1,25 @@
+<project name="RoboSpice Retrofit Tests">
+  <skin>
+    <groupId>org.apache.maven.skins</groupId>
+    <artifactId>maven-fluido-skin</artifactId>
+    <version>1.3.0</version>
+  </skin>
+  <custom>
+    <fluidoSkin>
+      <googlePlusOne />
+    </fluidoSkin>
+  </custom>
+
+  <version position="right"/>
+
+  <poweredBy>
+    <logo name="octo" href="http://octo.com"
+          img="https://raw.github.com/octo-online/robospice/master/gfx/octo-ascii-logo-blue.png"/>
+  </poweredBy>
+  
+<body>
+<!-- Include all info and reports -->
+  <menu ref="reports" />
+ 
+</body>
+</project>
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/test/java/dummy.txt b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/test/java/dummy.txt
new file mode 100644
index 000000000..cad4e2f65
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2-test/src/test/java/dummy.txt
@@ -0,0 +1 @@
+This file is meant to make git and android connector happy.
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/pom.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2/pom.xml
new file mode 100644
index 000000000..82f106bae
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/pom.xml
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+
+	<parent>
+		<groupId>com.octo.android.robospice</groupId>
+		<artifactId>robospice-retrofit2-parent</artifactId>
+		<version>1.5.0-SNAPSHOT</version>
+	</parent>
+
+	<artifactId>robospice-retrofit2</artifactId>
+	<packaging>jar</packaging>
+	<name>Robospice - Extension Retrofit2 Module</name>
+
+	<dependencies>
+		<dependency>
+			<groupId>com.google.android</groupId>
+			<artifactId>annotations</artifactId>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>com.google.android</groupId>
+			<artifactId>android</artifactId>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>com.octo.android.robospice</groupId>
+			<artifactId>robospice</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>com.squareup.retrofit2</groupId>
+			<artifactId>retrofit</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>com.squareup.retrofit2</groupId>
+			<artifactId>converter-jackson</artifactId>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>com.squareup.retrofit2</groupId>
+			<artifactId>converter-gson</artifactId>
+			<optional>true</optional>
+		 <type>jar</type>
+		</dependency>
+	</dependencies>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.codehaus.mojo</groupId>
+				<artifactId>findbugs-maven-plugin</artifactId>
+				<executions>
+					<execution>
+						<phase>verify</phase>
+						<goals>
+							<goal>check</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-pmd-plugin</artifactId>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-javadoc-plugin</artifactId>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-source-plugin</artifactId>
+			</plugin>
+		</plugins>
+	</build>
+
+	<profiles>
+		<profile>
+			<!-- copy dependencies for ant users and deploy them to github -->
+			<id>repository</id>
+			<build>
+				<plugins>
+					<plugin>
+						<groupId>org.apache.maven.plugins</groupId>
+						<artifactId>maven-dependency-plugin</artifactId>
+						<configuration>
+							<includeArtifactIds>commons-lang3,commons-io,robospice,
+								robospice-cache,retrofit,converter-jackson,gson,jackson,inject,httpmime</includeArtifactIds>
+						</configuration>
+					</plugin>
+					<plugin>
+						<groupId>com.github.github</groupId>
+						<artifactId>site-maven-plugin</artifactId>
+					</plugin>
+				</plugins>
+			</build>
+		</profile>
+	</profiles>
+</project>
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/RetrofitObjectPersister.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/RetrofitObjectPersister.java
new file mode 100644
index 000000000..23a4e7bd0
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/RetrofitObjectPersister.java
@@ -0,0 +1,112 @@
+package com.octo.android.robospice.persistence.retrofit2;
+
+import java.io.File;
+import java.io.IOException;
+
+import roboguice.util.temp.Ln;
+import android.app.Application;
+
+import com.octo.android.robospice.persistence.exception.CacheCreationException;
+import com.octo.android.robospice.persistence.exception.CacheLoadingException;
+import com.octo.android.robospice.persistence.exception.CacheSavingException;
+import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import java.io.Closeable;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import com.octo.android.robospice.persistence.retrofit2.transformers.RetrofitResponseConverter;
+import org.apache.commons.lang3.exception.ExceptionUtils;
+
+public class RetrofitObjectPersister<T> extends InFileObjectPersister<T> {
+    private static final String LOG_TAG = "robospice-retrofit2";
+    private RetrofitResponseConverter converter;
+
+    // ============================================================================================
+    // CONSTRUCTOR
+    // ============================================================================================
+    public RetrofitObjectPersister(Application application, RetrofitResponseConverter converter, Class<T> clazz, File cacheFolder) throws CacheCreationException {
+        super(application, clazz, cacheFolder);
+        this.converter = converter;
+    }
+
+    public RetrofitObjectPersister(Application application, RetrofitResponseConverter converter, Class<T> clazz) throws CacheCreationException {
+        this(application, converter, clazz, null);
+    }
+
+    // ============================================================================================
+    // METHODS
+    // ============================================================================================
+    @Override
+    public T saveDataToCacheAndReturnData(final T data, final Object cacheKey) throws CacheSavingException {
+        try {
+            if (isAsyncSaveEnabled()) {
+                Thread t = new Thread() {
+                    @Override
+                    public void run() {
+                        try {
+                            saveData(data, cacheKey);
+                        } catch (IOException e) {
+                            Ln.e(e, "An error occured on saving request " + cacheKey + " data asynchronously");
+                        } catch (CacheSavingException e) {
+                            Ln.e(e, "An error occured on saving request " + cacheKey + " data asynchronously");
+                        }
+                    }
+                };
+                t.start();
+            } else {
+                saveData(data, cacheKey);
+            }
+        } catch (CacheSavingException e) {
+            throw e;
+        } catch (Exception e) {
+            throw new CacheSavingException(e);
+        }
+        return data;
+    }
+
+    protected void saveData(T data, Object cacheKey) throws IOException, CacheSavingException {
+        FileOutputStream outStream = null;
+        try {
+            outStream = new FileOutputStream(getCacheFile(cacheKey));
+            converter.saveObject(data, getHandledClass(), outStream);
+        } catch (IOException e) {
+            throw e;
+        } catch (Exception e) {
+            throw new CacheSavingException(e);
+        } finally {
+            closeStreamQuietly(outStream);
+        }
+    }
+
+    @Override
+    protected T readCacheDataFromFile(File file) throws CacheLoadingException {
+        if (!file.exists()) {
+            Ln.w("file \"" + file.getAbsolutePath() + "\" does not exist");
+            return null;
+        }
+        FileInputStream inStream = null;
+        try {
+            inStream = new FileInputStream(file);
+            return (T) converter.restoreObject(inStream, getHandledClass());
+        } catch (Exception e) {
+            throw new CacheLoadingException(e);
+        } finally {
+            closeStreamQuietly(inStream);
+        }
+    }
+
+    protected RetrofitResponseConverter getConverter() {
+        return this.converter;
+    }
+
+    private void closeStreamQuietly(Closeable target) {
+        if (target == null) {
+            return;
+        }
+        try {
+            target.close();
+        } catch (Exception e) {
+            Ln.d(LOG_TAG + ": " + getClass().getSimpleName() + " error closing a stream. "
+                    + ExceptionUtils.getMessage(e));
+        }
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/RetrofitObjectPersisterFactory.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/RetrofitObjectPersisterFactory.java
new file mode 100644
index 000000000..d3433b529
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/RetrofitObjectPersisterFactory.java
@@ -0,0 +1,49 @@
+package com.octo.android.robospice.persistence.retrofit2;
+
+import java.io.File;
+
+import android.app.Application;
+
+import com.octo.android.robospice.persistence.exception.CacheCreationException;
+import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import com.octo.android.robospice.persistence.file.InFileObjectPersisterFactory;
+import java.util.List;
+import com.octo.android.robospice.persistence.retrofit2.transformers.RetrofitResponseConverter;
+
+public class RetrofitObjectPersisterFactory extends InFileObjectPersisterFactory {
+
+    // ----------------------------------
+    // ATTRIBUTES
+    // ----------------------------------
+    private final RetrofitResponseConverter converter;
+
+    // ----------------------------------
+    // CONSTRUCTORS
+    // ----------------------------------
+    public RetrofitObjectPersisterFactory(Application application, RetrofitResponseConverter converter, File cacheFolder) throws CacheCreationException {
+        this(application, converter, null, cacheFolder);
+    }
+
+    public RetrofitObjectPersisterFactory(Application application, RetrofitResponseConverter converter, List<Class<?>> listHandledClasses, File cacheFolder) throws CacheCreationException {
+        super(application, listHandledClasses, cacheFolder);
+        this.converter = converter;
+    }
+
+    public RetrofitObjectPersisterFactory(Application application, RetrofitResponseConverter converter) throws CacheCreationException {
+        this(application, converter, null, null);
+    }
+
+    public RetrofitObjectPersisterFactory(Application application, RetrofitResponseConverter converter,
+            List<Class<?>> listHandledClasses) throws CacheCreationException {
+        this(application, converter, listHandledClasses, null);
+    }
+
+    // ----------------------------------
+    // API
+    // ----------------------------------
+    @Override
+    public <DATA> InFileObjectPersister<DATA> createInFileObjectPersister(Class<DATA> clazz, File cacheFolder) throws CacheCreationException {
+        return new RetrofitObjectPersister<DATA>(getApplication(), converter, clazz, cacheFolder);
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitGsonConvertAware.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitGsonConvertAware.java
new file mode 100644
index 000000000..dc20a45c9
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitGsonConvertAware.java
@@ -0,0 +1,57 @@
+package com.octo.android.robospice.persistence.retrofit2.transformers;
+
+import com.google.gson.Gson;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import roboguice.util.temp.Ln;
+
+/**
+ * Saves and restores a data received by Retrofit into/from a file.
+ * Uses Gson for the data conversion.
+ */
+public class RetrofitGsonConvertAware implements RetrofitResponseConverter {
+
+    private static final String LOG_TAG = "robospice-retrofit2";
+    private final Gson gson;
+
+    public RetrofitGsonConvertAware() {
+        this(new Gson());
+    }
+
+    public RetrofitGsonConvertAware(Gson gson) {
+        if (gson != null) {
+            this.gson = gson;
+        } else {
+            this.gson = new Gson();
+        }
+    }
+
+    @Override
+    public void saveObject(Object object, Class<?> clzz, OutputStream out) throws Exception {
+        if (object == null) {
+            Ln.d(LOG_TAG + ": " + getClass().getSimpleName() + " not saving a 'null' object");
+            return;
+        }
+        if (out == null) {
+            Ln.d(LOG_TAG + ": " + getClass().getSimpleName() + " not saving '" + clzz.getSimpleName()
+                    + "'. Provided output is 'null'");
+            return;
+        }
+        OutputStreamWriter writer = new OutputStreamWriter(out, DEFAULT_CHARSET);
+        this.gson.toJson(object, writer);
+        writer.close();
+    }
+
+    @Override
+    public Object restoreObject(InputStream in, Class<?> clzz) throws Exception {
+        if (in == null) {
+            Ln.d(LOG_TAG + ": " + getClass().getSimpleName() + " can not restore '"
+                    + clzz.getSimpleName() + "' from a 'null' input");
+            return null;
+        }
+        return this.gson.fromJson(new InputStreamReader(in, DEFAULT_CHARSET), clzz);
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitJacksonConvertAware.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitJacksonConvertAware.java
new file mode 100644
index 000000000..1384d780d
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitJacksonConvertAware.java
@@ -0,0 +1,39 @@
+package com.octo.android.robospice.persistence.retrofit2.transformers;
+
+import com.fasterxml.jackson.core.JsonGenerator;
+import com.fasterxml.jackson.core.JsonParser;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+public class RetrofitJacksonConvertAware implements RetrofitResponseConverter {
+
+    private final ObjectMapper objectMapper;
+
+    public RetrofitJacksonConvertAware() {
+        this(new ObjectMapper());
+    }
+
+    public RetrofitJacksonConvertAware(ObjectMapper mapper) {
+        if (mapper != null) {
+            this.objectMapper = mapper;
+        } else {
+            this.objectMapper = new ObjectMapper();
+        }
+    }
+
+    @Override
+    public void saveObject(Object object, Class<?> clzz, OutputStream out) throws Exception {
+        final JsonGenerator generator = objectMapper.getFactory()
+                .createGenerator(out);
+        generator.writeObject(object);
+    }
+
+    @Override
+    public Object restoreObject(InputStream objectStream, Class<?> clzz) throws Exception {
+        final JsonParser parser = this.objectMapper.getFactory()
+                .createParser(objectStream);
+        return this.objectMapper.readValue(parser, clzz);
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitResponseConverter.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitResponseConverter.java
new file mode 100644
index 000000000..2c19715ba
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/persistence/retrofit2/transformers/RetrofitResponseConverter.java
@@ -0,0 +1,13 @@
+package com.octo.android.robospice.persistence.retrofit2.transformers;
+
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.nio.charset.Charset;
+
+public interface RetrofitResponseConverter {
+    Charset DEFAULT_CHARSET = Charset.forName("UTF-8");
+
+    void saveObject(Object object, Class<?> clzz, OutputStream out) throws Exception;
+    Object restoreObject(InputStream in, Class<?> clzz) throws Exception;
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/request/retrofit2/RetrofitSpiceRequest.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/request/retrofit2/RetrofitSpiceRequest.java
new file mode 100644
index 000000000..9a5b0b152
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/request/retrofit2/RetrofitSpiceRequest.java
@@ -0,0 +1,36 @@
+package com.octo.android.robospice.request.retrofit2;
+
+import com.octo.android.robospice.request.SpiceRequest;
+
+/**
+ * A simplified {@link SpiceRequest} that makes it even easier to use a
+ * retrofited REST service.
+ * @author SNI
+ * @param <T>
+ *            the result type of this request.
+ * @param <R>
+ *            the retrofited interface used by this request.
+ */
+public abstract class RetrofitSpiceRequest<T, R> extends SpiceRequest<T> {
+
+    private final Class<R> retrofitedInterfaceClass;
+    private R service;
+
+    public RetrofitSpiceRequest(Class<T> clazz, Class<R> retrofitedInterfaceClass) {
+        super(clazz);
+        this.retrofitedInterfaceClass = retrofitedInterfaceClass;
+    }
+
+    public Class<R> getRetrofitedInterfaceClass() {
+        return retrofitedInterfaceClass;
+    }
+
+    public void setService(R service) {
+        this.service = service;
+    }
+
+    public R getService() {
+        return service;
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitGsonSpiceService.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitGsonSpiceService.java
new file mode 100644
index 000000000..acd9c7712
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitGsonSpiceService.java
@@ -0,0 +1,41 @@
+package com.octo.android.robospice.retrofit2;
+
+import java.io.File;
+
+import retrofit2.Converter.Factory;
+import android.app.Application;
+
+import com.octo.android.robospice.persistence.CacheManager;
+import com.octo.android.robospice.persistence.exception.CacheCreationException;
+import com.octo.android.robospice.persistence.retrofit2.RetrofitObjectPersisterFactory;
+import com.octo.android.robospice.persistence.retrofit2.transformers.RetrofitGsonConvertAware;
+import retrofit2.converter.gson.GsonConverterFactory;
+
+/**
+ * A pre-set, easy to use, retrofit service. It will use retrofit for network
+ * requests and both networking and caching will use Gson. To use it, make your
+ * service to extend this service.
+ */
+public abstract class RetrofitGsonSpiceService extends RetrofitSpiceService {
+
+    @Override
+    public CacheManager createCacheManager(Application application) throws CacheCreationException {
+        CacheManager cacheManager = new CacheManager();
+        cacheManager.addPersister(new RetrofitObjectPersisterFactory(getApplication(), getRetrofitToCacheConverter(), getCacheFolder()));
+        return cacheManager;
+    }
+
+    @Override
+    protected final Factory createConverterFactory() {
+        return GsonConverterFactory.create();
+    }
+
+    public File getCacheFolder() {
+        return null;
+    }
+
+    @Override
+    protected RetrofitGsonConvertAware createRetrofitToCacheConverter() {
+        return new RetrofitGsonConvertAware();
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitJacksonSpiceService.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitJacksonSpiceService.java
new file mode 100644
index 000000000..70e237596
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitJacksonSpiceService.java
@@ -0,0 +1,41 @@
+package com.octo.android.robospice.retrofit2;
+
+import java.io.File;
+
+import retrofit2.Converter.Factory;
+import android.app.Application;
+
+import com.octo.android.robospice.persistence.CacheManager;
+import com.octo.android.robospice.persistence.exception.CacheCreationException;
+import com.octo.android.robospice.persistence.retrofit2.RetrofitObjectPersisterFactory;
+import com.octo.android.robospice.persistence.retrofit2.transformers.RetrofitJacksonConvertAware;
+import retrofit2.converter.jackson.JacksonConverterFactory;
+
+/**
+ * A pre-set, easy to use, retrofit service. It will use retrofit for network
+ * requests and both networking and caching will use Jackson. To use it, make your
+ * service to extend this service.
+ */
+public abstract class RetrofitJacksonSpiceService extends RetrofitSpiceService {
+
+    @Override
+    public CacheManager createCacheManager(Application application) throws CacheCreationException {
+        CacheManager cacheManager = new CacheManager();
+        cacheManager.addPersister(new RetrofitObjectPersisterFactory(getApplication(), getRetrofitToCacheConverter(), getCacheFolder()));
+        return cacheManager;
+    }
+
+    @Override
+    protected final Factory createConverterFactory() {
+        return JacksonConverterFactory.create();
+    }
+
+    public File getCacheFolder() {
+        return null;
+    }
+
+    @Override
+    protected RetrofitJacksonConvertAware createRetrofitToCacheConverter() {
+        return new RetrofitJacksonConvertAware();
+    }
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceService.java b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceService.java
new file mode 100644
index 000000000..ef43bc763
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceService.java
@@ -0,0 +1,92 @@
+package com.octo.android.robospice.retrofit2;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import retrofit2.Converter.Factory;
+import retrofit2.Retrofit;
+
+import com.octo.android.robospice.SpiceService;
+import com.octo.android.robospice.request.CachedSpiceRequest;
+import com.octo.android.robospice.request.listener.RequestListener;
+import com.octo.android.robospice.request.retrofit2.RetrofitSpiceRequest;
+import com.octo.android.robospice.persistence.retrofit2.transformers.RetrofitResponseConverter;
+
+public abstract class RetrofitSpiceService extends SpiceService {
+
+    private final Map<Class<?>, Object> retrofitInterfaceToServiceMap = new HashMap<Class<?>, Object>();
+    private Retrofit.Builder builder;
+    private Retrofit restAdapter;
+    private final List<Class<?>> retrofitInterfaceList = new ArrayList<Class<?>>();
+    private Factory converterFactory;
+    private RetrofitResponseConverter retrofitToCacheConverter;
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        builder = createRestAdapterBuilder();
+        restAdapter = builder.build();
+    }
+
+    protected abstract String getServerUrl();
+
+    protected Retrofit.Builder createRestAdapterBuilder() {
+        return new Retrofit.Builder().baseUrl(getServerUrl()).addConverterFactory(getConverterFactory());
+    }
+
+    protected abstract Factory createConverterFactory();
+
+    protected final Factory getConverterFactory() {
+        if (converterFactory == null) {
+            converterFactory = createConverterFactory();
+        }
+        return converterFactory;
+    }
+
+    /**
+     * Creates a converter which converts a data received by an underlying
+     * Retrofit into format suitable to be written to a cache file
+     *
+     * @return {@link RetrofitResponseConverter} object
+     */
+    protected abstract RetrofitResponseConverter createRetrofitToCacheConverter();
+
+    protected final RetrofitResponseConverter getRetrofitToCacheConverter() {
+        if (this.retrofitToCacheConverter == null) {
+            this.retrofitToCacheConverter = createRetrofitToCacheConverter();
+        }
+        return this.retrofitToCacheConverter;
+    }
+
+    @SuppressWarnings("unchecked")
+    protected <T> T getRetrofitService(Class<T> serviceClass) {
+        T service = (T) retrofitInterfaceToServiceMap.get(serviceClass);
+        if (service == null) {
+            service = restAdapter.create(serviceClass);
+            retrofitInterfaceToServiceMap.put(serviceClass, service);
+        }
+        return service;
+    }
+
+    @SuppressWarnings({ "rawtypes", "unchecked" })
+    @Override
+    public void addRequest(CachedSpiceRequest<?> request, Set<RequestListener<?>> listRequestListener) {
+        if (request.getSpiceRequest() instanceof RetrofitSpiceRequest) {
+            RetrofitSpiceRequest retrofitSpiceRequest = (RetrofitSpiceRequest) request.getSpiceRequest();
+            retrofitSpiceRequest.setService(getRetrofitService(retrofitSpiceRequest.getRetrofitedInterfaceClass()));
+        }
+        super.addRequest(request, listRequestListener);
+    }
+
+    public final List<Class<?>> getRetrofitInterfaceList() {
+        return retrofitInterfaceList;
+    }
+
+    protected void addRetrofitInterface(Class<?> serviceClass) {
+        retrofitInterfaceList.add(serviceClass);
+    }
+
+}
diff --git a/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/site/site.xml b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/site/site.xml
new file mode 100644
index 000000000..815061077
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/robospice-retrofit2/src/site/site.xml
@@ -0,0 +1,25 @@
+<project name="RoboSpice Retrofit">
+  <skin>
+    <groupId>org.apache.maven.skins</groupId>
+    <artifactId>maven-fluido-skin</artifactId>
+    <version>1.3.0</version>
+  </skin>
+  <custom>
+    <fluidoSkin>
+      <googlePlusOne />
+    </fluidoSkin>
+  </custom>
+
+  <version position="right"/>
+
+  <poweredBy>
+    <logo name="octo" href="http://octo.com"
+          img="https://raw.github.com/octo-online/robospice/master/gfx/octo-ascii-logo-blue.png"/>
+  </poweredBy>
+  
+<body>
+<!-- Include all info and reports -->
+  <menu ref="reports" />
+ 
+</body>
+</project>
diff --git a/extensions/robospice-retrofit2-parent/src/site/site.xml b/extensions/robospice-retrofit2-parent/src/site/site.xml
new file mode 100644
index 000000000..75b8d0863
--- /dev/null
+++ b/extensions/robospice-retrofit2-parent/src/site/site.xml
@@ -0,0 +1,26 @@
+<project name="RoboSpice Retrofit Parent">
+  <skin>
+    <groupId>org.apache.maven.skins</groupId>
+    <artifactId>maven-fluido-skin</artifactId>
+    <version>1.3.0</version>
+  </skin>
+  <custom>
+    <fluidoSkin>
+      <googlePlusOne />
+    </fluidoSkin>
+  </custom>
+
+  <version position="right"/>
+
+  <poweredBy>
+    <logo name="octo" href="http://octo.com"
+          img="https://raw.github.com/octo-online/robospice/master/gfx/octo-ascii-logo-blue.png"/>
+  </poweredBy>
+  
+<body>
+<!-- Include all info and reports -->
+  <menu ref="reports" />
+  <menu ref="modules" />
+ 
+</body>
+</project>
diff --git a/extensions/robospice-spring-android-parent/pom.xml b/extensions/robospice-spring-android-parent/pom.xml
index 04ac6afed..2d91adf5d 100644
--- a/extensions/robospice-spring-android-parent/pom.xml
+++ b/extensions/robospice-spring-android-parent/pom.xml
@@ -6,7 +6,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 		<relativePath>../../</relativePath>
 	</parent>
 
diff --git a/extensions/robospice-spring-android-parent/robospice-spring-android-test/pom.xml b/extensions/robospice-spring-android-parent/robospice-spring-android-test/pom.xml
index fc3b2bf9a..7bf243b32 100644
--- a/extensions/robospice-spring-android-parent/robospice-spring-android-test/pom.xml
+++ b/extensions/robospice-spring-android-parent/robospice-spring-android-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-spring-android-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-spring-android-test</artifactId>
diff --git a/extensions/robospice-spring-android-parent/robospice-spring-android/pom.xml b/extensions/robospice-spring-android-parent/robospice-spring-android/pom.xml
index 75e1d81b8..220377d60 100644
--- a/extensions/robospice-spring-android-parent/robospice-spring-android/pom.xml
+++ b/extensions/robospice-spring-android-parent/robospice-spring-android/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-spring-android-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-spring-android</artifactId>
diff --git a/extensions/robospice-ui-spicelist-parent/pom.xml b/extensions/robospice-ui-spicelist-parent/pom.xml
index 5313e86c5..7f35c7056 100644
--- a/extensions/robospice-ui-spicelist-parent/pom.xml
+++ b/extensions/robospice-ui-spicelist-parent/pom.xml
@@ -6,7 +6,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 		<relativePath>../../</relativePath>
 	</parent>
 
diff --git a/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist-test/pom.xml b/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist-test/pom.xml
index 4d82b9176..b0506b1d2 100644
--- a/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist-test/pom.xml
+++ b/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-ui-spicelist-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-ui-spicelist-test</artifactId>
diff --git a/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist/pom.xml b/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist/pom.xml
index 4727780b8..379cc52b0 100644
--- a/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist/pom.xml
+++ b/extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-ui-spicelist-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-ui-spicelist</artifactId>
diff --git a/pom.xml b/pom.xml
index 5acf42fd2..cd41e29f1 100644
--- a/pom.xml
+++ b/pom.xml
@@ -15,7 +15,7 @@
 
 	<groupId>com.octo.android.robospice</groupId>
 	<artifactId>robospice-parent</artifactId>
-	<version>1.4.14</version>
+	<version>1.5.0-SNAPSHOT</version>
 	<packaging>pom</packaging>
 	<name>Robospice - Parent</name>
 	<description>RoboSpice is a modular android library that eases the development of Data-Driven Android applications.</description>
@@ -90,6 +90,7 @@
 		<module>extensions/robospice-spring-android-parent</module>
 		<module>extensions/robospice-google-http-client-parent</module>
 		<module>extensions/robospice-retrofit-parent</module>
+		<module>extensions/robospice-retrofit2-parent</module>
 		<module>extensions/robospice-ormlite-parent</module>
 		<module>extensions/robospice-ui-spicelist-parent</module>
 		<module>extensions/robospice-okhttp-parent</module>
@@ -298,6 +299,7 @@
 									robospice-cache-parent/robospice-cache:
 									extensions/robospice-spring-android-parent/robospice-spring-android:
 									extensions/robospice-retrofit-parent/robospice-retrofit:
+									extensions/robospice-retrofit2-parent/robospice-retrofit2:
 									extensions/robospice-google-http-client-parent/robospice-google-http-client:
 									extensions/robospice-ormlite-parent/robospice-ormlite:
 									extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist:
@@ -453,6 +455,7 @@
 						extensions/robospice-spring-android-parent/robospice-spring-android:
 						extensions/robospice-google-http-client-parent/robospice-google-http-client:
 						extensions/robospice-retrofit-parent/robospice-retrofit:
+						extensions/robospice-retrofit2-parent/robospice-retrofit2:
 						extensions/robospice-ormlite-parent/robospice-ormlite:
 						extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist:
 					</sourcepath>
diff --git a/robospice-cache-parent/pom.xml b/robospice-cache-parent/pom.xml
index da5308dc6..3904a4530 100644
--- a/robospice-cache-parent/pom.xml
+++ b/robospice-cache-parent/pom.xml
@@ -6,7 +6,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-cache-parent</artifactId>
diff --git a/robospice-cache-parent/robospice-cache-test/pom.xml b/robospice-cache-parent/robospice-cache-test/pom.xml
index 30b52a91b..c585370d8 100644
--- a/robospice-cache-parent/robospice-cache-test/pom.xml
+++ b/robospice-cache-parent/robospice-cache-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-cache-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-cache-test</artifactId>
diff --git a/robospice-cache-parent/robospice-cache/pom.xml b/robospice-cache-parent/robospice-cache/pom.xml
index 042ddc930..1a59ff7ee 100644
--- a/robospice-cache-parent/robospice-cache/pom.xml
+++ b/robospice-cache-parent/robospice-cache/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-cache-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-cache</artifactId>
diff --git a/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java b/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java
index 7d3e98d37..0857de540 100644
--- a/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java
+++ b/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java
@@ -142,6 +142,7 @@ public boolean accept(File file) {
             allDeleted = cacheFile.delete() && allDeleted;
         }
         if (allDeleted || cacheFileList.length == 0) {
+            // TODO How does someone should react to this message? List which files exactly could'd be deleted for clarity.
             Ln.d("Some file could not be deleted from cache.");
         }
     }
diff --git a/robospice-core-parent/pom.xml b/robospice-core-parent/pom.xml
index 6f93a3dcb..363326ef7 100644
--- a/robospice-core-parent/pom.xml
+++ b/robospice-core-parent/pom.xml
@@ -6,7 +6,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-core-parent</artifactId>
diff --git a/robospice-core-parent/robospice-core-test/pom.xml b/robospice-core-parent/robospice-core-test/pom.xml
index b80d0f5e8..c8bd3cfe6 100644
--- a/robospice-core-parent/robospice-core-test/pom.xml
+++ b/robospice-core-parent/robospice-core-test/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-core-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice-core-test</artifactId>
diff --git a/robospice-core-parent/robospice/pom.xml b/robospice-core-parent/robospice/pom.xml
index 1a3192183..6830236f4 100644
--- a/robospice-core-parent/robospice/pom.xml
+++ b/robospice-core-parent/robospice/pom.xml
@@ -5,7 +5,7 @@
 	<parent>
 		<groupId>com.octo.android.robospice</groupId>
 		<artifactId>robospice-core-parent</artifactId>
-		<version>1.4.14</version>
+		<version>1.5.0-SNAPSHOT</version>
 	</parent>
 
 	<artifactId>robospice</artifactId>
