diff --git a/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InMemoryLRUCacheObjectPersister.java b/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InMemoryLRUCacheObjectPersister.java
index 870b32ac8..bd5205e77 100644
--- a/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InMemoryLRUCacheObjectPersister.java
+++ b/robospice-cache-parent/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InMemoryLRUCacheObjectPersister.java
@@ -3,6 +3,7 @@
 import android.app.Application;
 import android.os.SystemClock;
 import android.support.v4.util.LruCache;
+import com.octo.android.robospice.persistence.DurationInMillis;
 import com.octo.android.robospice.persistence.ObjectPersister;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
@@ -29,7 +30,7 @@ protected InMemoryLRUCacheObjectPersister(Application application,
         super(application, clazz);
     }
 
-    private LruCache<Object, CacheItem<T>> getMemoryCache() {
+    protected LruCache<Object, CacheItem<T>> getMemoryCache() {
         if (memoryCache == null) {
             memoryCache = instantiateLRUCache();
         }
@@ -77,7 +78,7 @@ public T getData() {
      *            cache
      * @return the cached data
      * @throws CacheLoadingException
-     *             when the cache data is null
+     *             when the cache data is expired or not found
      */
 
     @Override
@@ -97,9 +98,10 @@ public T loadDataFromCache(Object cacheKey, long maxTimeInCacheBeforeExpiry)
          */
 
         if (cacheItem != null) {
+            boolean doesExpire = maxTimeInCacheBeforeExpiry != DurationInMillis.ALWAYS;
             long timeInCache = SystemClock.elapsedRealtime()
                 - cacheItem.created;
-            if (timeInCache > maxTimeInCacheBeforeExpiry) {
+            if (doesExpire && timeInCache > maxTimeInCacheBeforeExpiry) {
                 errorMsg = String.format(CACHE_MISS_EXPIRED, cacheKey);
             } else {
                 return cacheItem.data;
