diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/CacheManagerTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/CacheManagerTest.java
index b83a161eb..77ba3f42a 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/CacheManagerTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/CacheManagerTest.java
@@ -15,7 +15,7 @@
     private static final String TEST_PERSISTED_STRING = "TEST";
     private static final Integer TEST_PERSISTED_INTEGER = Integer.valueOf(0);
 
-    private CacheManager cacheManager;
+    CacheManager cacheManager;
 
     @Override
     protected void setUp() throws Exception {
@@ -126,7 +126,7 @@ public void testGetObjectPersister_returns_no_persister_when_2_were_added_and_go
     // ----------------------------------
     // CLASSES UNDER TEST
     // ----------------------------------
-    private class MockStringPersistenceManager extends ObjectPersister<String> {
+    class MockStringPersistenceManager extends ObjectPersister<String> {
 
         public MockStringPersistenceManager() {
             super(null, String.class);
@@ -179,7 +179,7 @@ public boolean isDataInCache(Object cacheKey, long maxTimeInCacheBeforeExpiry) {
         }
     }
 
-    private class MockIntegerPersistenceManager extends ObjectPersister<Integer> {
+    class MockIntegerPersistenceManager extends ObjectPersister<Integer> {
 
         public MockIntegerPersistenceManager() {
             super(null, Integer.class);
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java
index 625e8a348..3fd09186a 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java
@@ -24,7 +24,7 @@
 
     private static final long SMALL_THREAD_SLEEP = 50;
 
-    private InFileBigInputStreamObjectPersister inputStreamPersister;
+    InFileBigInputStreamObjectPersister inputStreamPersister;
 
     @Override
     protected void setUp() throws Exception {
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersisterTest.java
index 95c760d92..fa26920c0 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersisterTest.java
@@ -22,8 +22,8 @@
     // in ms
     private static final long TEST_EXPIRATION_DURATION = 1;
 
-    private Application application;
-    private InFileBitmapObjectPersister testPersister;
+    Application application;
+    InFileBitmapObjectPersister testPersister;
 
     @Override
     protected void setUp() throws Exception {
@@ -40,7 +40,7 @@ protected void tearDown() throws Exception {
         super.tearDown();
     }
 
-    private void assertBitmapSizeEquals(int expectedBitmapSize, Bitmap bitmap) {
+    void assertBitmapSizeEquals(int expectedBitmapSize, Bitmap bitmap) {
         assertEquals(expectedBitmapSize, bitmap.getRowBytes() * bitmap.getHeight());
     }
 
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java
index 39349c02a..09c63502b 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java
@@ -22,7 +22,7 @@
 
     private static final String TEST_CACHE_KEY = "TEST_CACHE_KEY";
 
-    private InFileInputStreamObjectPersister inputStreamCacheManager;
+    InFileInputStreamObjectPersister inputStreamCacheManager;
 
     @Override
     protected void setUp() throws Exception {
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactoryTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactoryTest.java
index e61593c6b..345dc25ed 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactoryTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactoryTest.java
@@ -102,8 +102,8 @@ public void testRemoveAllDataFromCache_cleans_cache_before_a_factory_creates_per
     // ============================================================================================
     // CLASS UNDER TEST
     // ============================================================================================
-    private final class InFileObjectPersisterFactoryUnderTest extends InFileObjectPersisterFactory {
-        private InFileObjectPersisterFactoryUnderTest(Application application) throws CacheCreationException {
+    final class InFileObjectPersisterFactoryUnderTest extends InFileObjectPersisterFactory {
+        InFileObjectPersisterFactoryUnderTest(Application application) throws CacheCreationException {
             super(application);
         }
 
@@ -119,7 +119,7 @@ public boolean canHandleClass(Class<?> arg0) {
 
     }
 
-    private class InFileObjectPersisterFactoryThatCreatesPersisterUnderTest extends InFileObjectPersisterFactory {
+    class InFileObjectPersisterFactoryThatCreatesPersisterUnderTest extends InFileObjectPersisterFactory {
 
         public InFileObjectPersisterFactoryThatCreatesPersisterUnderTest(Application application) throws CacheCreationException {
             super(application);
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithCustomFolderTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithCustomFolderTest.java
index 0d0eb3c1b..5f13b0fd6 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithCustomFolderTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithCustomFolderTest.java
@@ -40,7 +40,7 @@ public void testRemoveAllDataFromCache() throws Exception {
     // ============================================================================================
     // CLASS UNDER TEST
     // ============================================================================================
-    private final class InFileObjectPersisterWithCustomFolderUnderTest extends InFileObjectPersisterUnderTest {
+    final class InFileObjectPersisterWithCustomFolderUnderTest extends InFileObjectPersisterUnderTest {
         InFileObjectPersisterWithCustomFolderUnderTest(Application application) throws CacheCreationException {
             super(application);
             setCacheFolder(new File(application.getCacheDir(), TEST_CACHE_FOLDER));
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithSanitationTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithSanitationTest.java
index 8529ec790..7c2e9b46f 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithSanitationTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterWithSanitationTest.java
@@ -39,7 +39,7 @@ public void testRemoveAllDataFromCache() throws Exception {
     // ============================================================================================
     // CLASS UNDER TEST
     // ============================================================================================
-    private final class InFileObjectPersisterWithSanitationUnderTest extends InFileObjectPersisterUnderTest {
+    final class InFileObjectPersisterWithSanitationUnderTest extends InFileObjectPersisterUnderTest {
         InFileObjectPersisterWithSanitationUnderTest(Application application) throws CacheCreationException {
             super(application);
             setKeySanitizer(new DefaultKeySanitizer());
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersisterTest.java
index 97764e2b3..8d155c042 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersisterTest.java
@@ -17,8 +17,8 @@
     private static final long TEST_EXPIRATION_DURATION_SHORT = 1;
     private static final long TEST_EXPIRATION_DURATION_LONG = TEST_EXPIRATION_DURATION_SHORT * 10;
 
-    private LruCacheStringObjectPersister testPersister;
-    private LruCacheStringObjectPersister testPersisterWithFallback;
+    LruCacheStringObjectPersister testPersister;
+    LruCacheStringObjectPersister testPersisterWithFallback;
 
     @Override
     public void setUp() throws CacheCreationException {
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java
index 0604f7f2d..089093ad2 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java
@@ -21,7 +21,7 @@
     private static final String TEST_DATA = "foo";
     private static final String TEST_CACHE_KEY = "TEST_CACHE_KEY";
 
-    private InFileStringObjectPersister inFileStringObjectPersister;
+    InFileStringObjectPersister inFileStringObjectPersister;
 
     @Override
     protected void setUp() throws Exception {
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/CacheManager.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/CacheManager.java
index e7b89368f..6e63845d5 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/CacheManager.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/CacheManager.java
@@ -9,12 +9,12 @@
 import java.util.Map;
 import java.util.concurrent.CopyOnWriteArrayList;
 
-import roboguice.util.temp.Ln;
-
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 
+import roboguice.util.temp.Ln;
+
 /**
  * An entity responsible for loading/saving data from/to cache. It implements a
  * Chain of Responsibility pattern, delegating loading and saving operations to
@@ -34,8 +34,8 @@
 public class CacheManager implements ICacheManager {
 
     /** The Chain of Responsibility list of all {@link Persister}. */
-    private Collection<Persister> listPersister = new ArrayList<Persister>();
-    private Map<ObjectPersisterFactory, List<ObjectPersister<?>>> mapFactoryToPersister = new HashMap<ObjectPersisterFactory, List<ObjectPersister<?>>>();
+    final Collection<Persister> listPersister = new ArrayList<Persister>();
+    final Map<ObjectPersisterFactory, List<ObjectPersister<?>>> mapFactoryToPersister = new HashMap<ObjectPersisterFactory, List<ObjectPersister<?>>>();
 
     /** {@inheritDoc} */
     @Override
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersister.java
index be3d31e7a..80a2a02d3 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersister.java
@@ -17,9 +17,9 @@
  */
 public abstract class ObjectPersister<T> implements Persister, CacheCleaner {
 
-    private boolean isAsyncSaveEnabled;
-    private Application application;
-    private Class<T> clazz;
+    boolean isAsyncSaveEnabled;
+    Application application;
+    Class<T> clazz;
 
     public ObjectPersister(Application application, Class<T> clazz) {
         this.application = application;
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersisterFactory.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersisterFactory.java
index b02b2ee3f..d3b968b14 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersisterFactory.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/ObjectPersisterFactory.java
@@ -20,9 +20,9 @@
  */
 public abstract class ObjectPersisterFactory implements Persister {
 
-    private Application mApplication;
-    private boolean isAsyncSaveEnabled;
-    private List<Class<?>> listHandledClasses;
+    Application mApplication;
+    boolean isAsyncSaveEnabled;
+    List<Class<?>> listHandledClasses;
 
     /**
      * Creates an {@link ObjectPersisterFactory} given an Android application.
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java
index 0783f750f..0211dbf8f 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java
@@ -25,9 +25,9 @@
 
     private static final int DEFAULT_QUALITY = 100;
 
-    private Bitmap.CompressFormat compressFormat = Bitmap.CompressFormat.PNG;
-    private BitmapFactory.Options decodingOptions = null;
-    private int quality = DEFAULT_QUALITY;
+    Bitmap.CompressFormat compressFormat = Bitmap.CompressFormat.PNG;
+    BitmapFactory.Options decodingOptions = null;
+    int quality = DEFAULT_QUALITY;
 
     public InFileBitmapObjectPersister(Application application) throws CacheCreationException {
         super(application, Bitmap.class);
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersister.java
index 05549a074..9b1cbc429 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersister.java
@@ -7,7 +7,6 @@
 import java.util.Collections;
 import java.util.List;
 
-import roboguice.util.temp.Ln;
 import android.app.Application;
 
 import com.octo.android.robospice.persistence.DurationInMillis;
@@ -17,6 +16,8 @@
 import com.octo.android.robospice.persistence.exception.KeySanitationExcepion;
 import com.octo.android.robospice.persistence.keysanitation.KeySanitizer;
 
+import roboguice.util.temp.Ln;
+
 /**
  * An {@link ObjectPersister} that saves/loads data in a file.
  * @author sni
@@ -38,11 +39,11 @@
     // ----------------------------------
     // ATTRIBUTES
     // ----------------------------------
-    private KeySanitizer keySanitizer;
+    KeySanitizer keySanitizer;
 
-    private File cacheFolder;
+    File cacheFolder;
 
-    private String factoryCachePrefix = "";
+    String factoryCachePrefix = "";
 
     // ----------------------------------
     // CONSTRUCTOR
@@ -209,7 +210,7 @@ public final File getCacheFile(Object cacheKey) {
     // ----------------------------------
     // PROTECTED METHODS
     // ----------------------------------
-    /* package-private */
+    /* package-*/
     void setFactoryCachePrefix(String factoryCachePrefix) {
         this.factoryCachePrefix = factoryCachePrefix;
     }
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java
index 7d3e98d37..5c4e9cfc0 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/file/InFileObjectPersisterFactory.java
@@ -23,9 +23,9 @@
     // ----------------------------------
     // ATTRIBUTES
     // ----------------------------------
-    private File cacheFolder;
-    private String cachePrefix;
-    private KeySanitizer keySanitizer;
+    File cacheFolder;
+    String cachePrefix;
+    KeySanitizer keySanitizer;
 
     // ----------------------------------
     // CONSTRUCTORS
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/CacheItem.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/CacheItem.java
index cd5dbb683..945fbd9d7 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/CacheItem.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/CacheItem.java
@@ -7,8 +7,8 @@
  *            the type of object that will be stored in the cache.
  */
 public class CacheItem<T> {
-    private final long creationDate;
-    private final T data;
+    final long creationDate;
+    final T data;
 
     public CacheItem(T data) {
         this.creationDate = System.currentTimeMillis();
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCache.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCache.java
index 6d1467181..5a478c383 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCache.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCache.java
@@ -31,17 +31,17 @@
     private static final int MAX_PERCENT = 100;
     private static final float DEFAULT_LOAD_FACTOR = 0.75f;
 
-    private final LinkedHashMap<K, V> map;
+    final LinkedHashMap<K, V> map;
 
     /** Size of this cache in units. Not necessarily the number of elements. */
-    private int size;
-    private int maxSize;
+    int size;
+    int maxSize;
 
-    private int putCount;
-    private int createCount;
-    private int evictionCount;
-    private int hitCount;
-    private int missCount;
+    int putCount;
+    int createCount;
+    int evictionCount;
+    int hitCount;
+    int missCount;
 
     /**
      * @param maxSize
@@ -233,7 +233,7 @@ protected V create(K key) {
         return null;
     }
 
-    private int safeSizeOf(K key, V value) {
+    int safeSizeOf(K key, V value) {
         int result = sizeOf(key, value);
         if (result < 0) {
             throw new IllegalStateException("Negative size: " + key + "=" + value);
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersister.java
index 41e7225de..6d5809d91 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/memory/LruCacheObjectPersister.java
@@ -17,8 +17,8 @@
  * @author Mike Jancola
  */
 public class LruCacheObjectPersister<T> extends ObjectPersister<T> {
-    private LruCache<Object, CacheItem<T>> lruCache;
-    private ObjectPersister<T> decoratedPersister;
+    LruCache<Object, CacheItem<T>> lruCache;
+    ObjectPersister<T> decoratedPersister;
 
     public LruCacheObjectPersister(Class<T> clazz, LruCache<Object, CacheItem<T>> lruCache) {
         super(null, clazz);
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/utils/CharEncoding.java b/robospice-cache/src/main/java/com/octo/android/robospice/utils/CharEncoding.java
index 2329b28e7..e815bec10 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/utils/CharEncoding.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/utils/CharEncoding.java
@@ -4,5 +4,5 @@
 
     public static final String UTF_8 = "UTF-8";
 
-    private CharEncoding() {}
+    CharEncoding() {}
 }
diff --git a/robospice-cache/src/main/java/roboguice/util/temp/Ln.java b/robospice-cache/src/main/java/roboguice/util/temp/Ln.java
index adfbf3515..096a60ef7 100644
--- a/robospice-cache/src/main/java/roboguice/util/temp/Ln.java
+++ b/robospice-cache/src/main/java/roboguice/util/temp/Ln.java
@@ -39,15 +39,16 @@
      * pass.
      */
     private static final BaseConfig CONFIG = new BaseConfig();
+    private static final Object[] EMPTY = new Object[0];
 
     /**
      * print is initially set to Print(), then replaced by guice during static
      * injection pass. This allows overriding where the log message is delivered
      * to.
      */
-    private static Print print = new Print();
+    static Print print = new Print();
 
-    private Ln() {
+    Ln() {
     }
 
     public static int v(Throwable t) {
@@ -78,6 +79,10 @@ public static int d(Throwable t) {
         return CONFIG.minimumLogLevel <= Log.DEBUG ? print.println(Log.DEBUG, Log.getStackTraceString(t)) : 0;
     }
 
+    public static int d(Object s1) {
+        return d(s1, EMPTY);
+    }
+
     public static int d(Object s1, Object... args) {
         if (CONFIG.minimumLogLevel > Log.DEBUG) {
             return 0;
diff --git a/robospice-cache/src/main/java/roboguice/util/temp/Strings.java b/robospice-cache/src/main/java/roboguice/util/temp/Strings.java
index 5e2fc3b25..db2905fe0 100644
--- a/robospice-cache/src/main/java/roboguice/util/temp/Strings.java
+++ b/robospice-cache/src/main/java/roboguice/util/temp/Strings.java
@@ -20,7 +20,7 @@
 public final class Strings {
     private static final int DEFAULT_BUFFER_SIZE = 1024 * 4;
 
-    private Strings() {
+    Strings() {
 
     }
 
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/SpiceManagerTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/SpiceManagerTest.java
index b3ddd6156..05a4cc964 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/SpiceManagerTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/SpiceManagerTest.java
@@ -45,7 +45,7 @@
     private static final long SPICE_MANAGER_WAIT_TIMEOUT = 700;
     private static final long SMALL_THREAD_SLEEP = 50;
 
-    private SpiceManagerUnderTest spiceManager;
+    SpiceManagerUnderTest spiceManager;
 
     @Override
     protected void setUp() throws Exception {
@@ -64,7 +64,7 @@ protected void tearDown() throws Exception {
         super.tearDown();
     }
 
-    private void waitForSpiceManagerShutdown(SpiceManagerUnderTest spiceManager) throws InterruptedException {
+    void waitForSpiceManagerShutdown(SpiceManagerUnderTest spiceManager) throws InterruptedException {
         if (spiceManager != null && spiceManager.isStarted()) {
             spiceManager.cancelAllRequests();
             spiceManager.removeAllDataFromCache();
@@ -829,10 +829,10 @@ public void test_spice_managers_start_stop_many_times_quickly_kills_all_his_thre
      * http://stackoverflow.com/questions/
      * 2596493/junit-assert-in-thread-throws-exception/13712829#13712829
      */
-    private final class SpiceManagerUnderTest extends SpiceManager {
-        private Exception ex;
+    final class SpiceManagerUnderTest extends SpiceManager {
+        Exception ex;
 
-        private SpiceManagerUnderTest(Class<? extends SpiceService> spiceServiceClass) {
+        SpiceManagerUnderTest(Class<? extends SpiceService> spiceServiceClass) {
             super(spiceServiceClass);
         }
 
@@ -845,7 +845,7 @@ public void run() {
             }
         }
 
-        private CachedSpiceRequest<?> getNextRequest() {
+        CachedSpiceRequest<?> getNextRequest() {
             return requestQueue.peek();
         }
 
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactoryTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactoryTest.java
index 9feb11b9d..a70862a32 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactoryTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactoryTest.java
@@ -34,7 +34,7 @@ public void testCreateThread_with_custom_priority() {
     // ----------------------------------
     // CLASSES UNDER TESTS
     // ----------------------------------
-    private final class DummyRunnable implements Runnable {
+    final class DummyRunnable implements Runnable {
         @Override
         public void run() {
         }
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java
index 3b82ae305..14c7d9139 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java
@@ -21,8 +21,8 @@
 @LargeTest
 public class BigBinaryRequestTest extends AndroidTestCase {
 
-    private MockWebServer mockWebServer;
-    private File cacheFile;
+    MockWebServer mockWebServer;
+    File cacheFile;
 
     @Override
     protected void setUp() throws Exception {
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java
index 0effe06e2..3c989a8ec 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java
@@ -29,8 +29,8 @@
     private static final int TEST_BITMAP_WIDTH = 36;
     private static final int TEST_BITMAP_REDUCED_WIDTH = 18;
     private static final int TEST_BITMAP_REDUCED_HEIGHT = 18;
-    private MockWebServer mockWebServer;
-    private File cacheFile;
+    MockWebServer mockWebServer;
+    File cacheFile;
 
     @Override
     protected void setUp() throws Exception {
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/RequestProcessorTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/RequestProcessorTest.java
index 97853ceee..f0be839f2 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/RequestProcessorTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/RequestProcessorTest.java
@@ -7,7 +7,6 @@
 
 import org.easymock.EasyMock;
 
-import roboguice.util.temp.Ln;
 import android.content.Context;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.SmallTest;
@@ -37,6 +36,8 @@
 import com.octo.android.robospice.stub.SpiceRequestStub;
 import com.octo.android.robospice.stub.SpiceRequestSucceedingStub;
 
+import roboguice.util.temp.Ln;
+
 @SmallTest
 public class RequestProcessorTest extends AndroidTestCase {
 
@@ -53,14 +54,14 @@
     private static final long TEST_DELAY_BEFORE_RETRY = WAIT_BEFORE_REQUEST_EXECUTION;
     private static final int TEST_RETRY_COUNT = 3;
 
-    private CacheManager mockCacheManager;
-    private RequestProcessor requestProcessorUnderTest;
-    private RequestProcessorListener requestProcessorListener;
-    private MockNetworkStateChecker networkStateChecker;
-    private DefaultRequestListenerNotifier progressReporter;
-    private SpiceServiceListenerNotifier spiceServiceListenerNotifier;
-    private RequestProgressManager mockRequestProgressManager;
-    private DefaultRequestRunner mockRequestRunner;
+    CacheManager mockCacheManager;
+    RequestProcessor requestProcessorUnderTest;
+    RequestProcessorListener requestProcessorListener;
+    MockNetworkStateChecker networkStateChecker;
+    DefaultRequestListenerNotifier progressReporter;
+    SpiceServiceListenerNotifier spiceServiceListenerNotifier;
+    RequestProgressManager mockRequestProgressManager;
+    DefaultRequestRunner mockRequestRunner;
 
     @Override
     protected void setUp() throws Exception {
@@ -1309,7 +1310,7 @@ public void testShouldStop_shuts_down_the_executor_service() throws Exception {
     // PRIVATE METHODS
     // ============================================================================================
 
-    private <T> CachedSpiceRequestStub<T> createSuccessfulRequest(Class<T> clazz, T returnedData) {
+    <T> CachedSpiceRequestStub<T> createSuccessfulRequest(Class<T> clazz, T returnedData) {
         SpiceRequestStub<T> stubContentRequest = new SpiceRequestSucceedingStub<T>(clazz, returnedData);
         return new CachedSpiceRequestStub<T>(stubContentRequest, null, 0 /*
                                                                           * What
@@ -1318,24 +1319,24 @@ public void testShouldStop_shuts_down_the_executor_service() throws Exception {
                                                                           */);
     }
 
-    private <T> CachedSpiceRequestStub<T> createSuccessfulRequest(Class<T> clazz, Object cacheKey, long maxTimeInCache, T returnedData) {
+    <T> CachedSpiceRequestStub<T> createSuccessfulRequest(Class<T> clazz, Object cacheKey, long maxTimeInCache, T returnedData) {
         SpiceRequestStub<T> stubContentRequest = new SpiceRequestSucceedingStub<T>(clazz, returnedData);
         return new CachedSpiceRequestStub<T>(stubContentRequest, cacheKey, maxTimeInCache);
     }
 
-    private <T> CachedSpiceRequestStub<T> createSuccessfulRequest(Class<T> clazz, Object cacheKey, long maxTimeInCache, T returnedData, long waitBeforeExecution) {
+    <T> CachedSpiceRequestStub<T> createSuccessfulRequest(Class<T> clazz, Object cacheKey, long maxTimeInCache, T returnedData, long waitBeforeExecution) {
         SpiceRequestStub<T> stubContentRequest = new SpiceRequestSucceedingStub<T>(clazz, returnedData, waitBeforeExecution);
         return new CachedSpiceRequestStub<T>(stubContentRequest, cacheKey, maxTimeInCache);
     }
 
-    private <T> CachedSpiceRequestStub<T> createFailedRequest(Class<T> clazz, Object cacheKey, long maxTimeInCache) {
+    <T> CachedSpiceRequestStub<T> createFailedRequest(Class<T> clazz, Object cacheKey, long maxTimeInCache) {
         SpiceRequestStub<T> stubContentRequest = new SpiceRequestFailingStub<T>(clazz);
         return new CachedSpiceRequestStub<T>(stubContentRequest, cacheKey, maxTimeInCache);
     }
 
-    private class MockNetworkStateChecker implements NetworkStateChecker {
+    class MockNetworkStateChecker implements NetworkStateChecker {
 
-        private boolean networkAvailable = true;
+        boolean networkAvailable = true;
 
         public void setNetworkAvailable(boolean networkAvailable) {
             this.networkAvailable = networkAvailable;
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/DoubleInMemoryPersisterStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/DoubleInMemoryPersisterStub.java
index e5dbf7bf0..823eadd51 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/DoubleInMemoryPersisterStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/DoubleInMemoryPersisterStub.java
@@ -19,7 +19,7 @@
  */
 public class DoubleInMemoryPersisterStub extends ObjectPersister<Double> {
 
-    private HashMap<Object, Double> map = new HashMap<Object, Double>();
+    HashMap<Object, Double> map = new HashMap<Object, Double>();
 
     public DoubleInMemoryPersisterStub(Application application) {
         super(application, Double.class);
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/PendingRequestListenerWithProgressStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/PendingRequestListenerWithProgressStub.java
index 501b1c0a6..37617bff1 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/PendingRequestListenerWithProgressStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/PendingRequestListenerWithProgressStub.java
@@ -4,7 +4,7 @@
 
 public class PendingRequestListenerWithProgressStub<T> extends RequestListenerWithProgressStub<T> implements PendingRequestListener<T> {
 
-    private boolean isRequestNotFound = false;
+    boolean isRequestNotFound = false;
 
     @Override
     public void onRequestNotFound() {
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressHistoryStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressHistoryStub.java
index 2ccf0b8ab..63dc75898 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressHistoryStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressHistoryStub.java
@@ -8,7 +8,7 @@
 
 public class RequestListenerWithProgressHistoryStub<T> extends RequestListenerWithProgressStub<T> {
 
-    private List<RequestProgress> requestProgressesHistory = Collections.synchronizedList(new ArrayList<RequestProgress>());
+    List<RequestProgress> requestProgressesHistory = Collections.synchronizedList(new ArrayList<RequestProgress>());
 
     @Override
     public void onRequestProgressUpdate(RequestProgress progress) {
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressStub.java
index 81aaef27e..67b7bedab 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/RequestListenerWithProgressStub.java
@@ -10,7 +10,7 @@
 
 public class RequestListenerWithProgressStub<T> extends RequestListenerStub<T> implements RequestProgressListener {
 
-    private boolean isComplete;
+    boolean isComplete;
     protected ReentrantLock lockComplete = new ReentrantLock();
     protected Condition requestCompleteCondition = lockComplete.newCondition();
 
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestFailingStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestFailingStub.java
index 4c65177a9..c9fbb582d 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestFailingStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestFailingStub.java
@@ -4,7 +4,7 @@
 
 public final class SpiceRequestFailingStub<T> extends SpiceRequestStub<T> {
 
-    private long sleepTimeBeforeAnswering = 0;
+    long sleepTimeBeforeAnswering = 0;
 
     public SpiceRequestFailingStub(Class<T> clazz) {
         super(clazz);
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestStub.java
index 3ed262288..ac0f9f9d9 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestStub.java
@@ -21,9 +21,9 @@
     /** Whether {@link #loadDataFromNetwork()} has been called or not. */
     protected boolean isLoadDataFromNetworkCalled = false;
     /** Synchronizes access to {@link #requestFinishedCondition}. */
-    private ReentrantLock lock = new ReentrantLock();
+    ReentrantLock lock = new ReentrantLock();
     /** Indicates whether or not request can be considered as finished. */
-    private Condition requestFinishedCondition = lock.newCondition();
+    Condition requestFinishedCondition = lock.newCondition();
 
     public SpiceRequestStub(Class<T> clazz) {
         super(clazz);
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingStub.java
index 6abaf60b3..feedc756b 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingStub.java
@@ -3,8 +3,8 @@
 import roboguice.util.temp.Ln;
 
 public final class SpiceRequestSucceedingStub<T> extends SpiceRequestStub<T> {
-    private T returnedData;
-    private long sleepTimeBeforeAnswering = 0;
+    T returnedData;
+    long sleepTimeBeforeAnswering = 0;
 
     public SpiceRequestSucceedingStub(Class<T> clazz, T returnedData) {
         this(clazz, returnedData, 0);
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingWithSemaphoresStub.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingWithSemaphoresStub.java
index f9a158174..13787d8ed 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingWithSemaphoresStub.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/stub/SpiceRequestSucceedingWithSemaphoresStub.java
@@ -5,9 +5,9 @@
 import roboguice.util.temp.Ln;
 
 public final class SpiceRequestSucceedingWithSemaphoresStub<T> extends SpiceRequestStub<T> {
-    private T returnedData;
-    private Semaphore requestStarted = new Semaphore(1);
-    private Semaphore allowRequestToFinish = new Semaphore(1);
+    T returnedData;
+    Semaphore requestStarted = new Semaphore(1);
+    Semaphore allowRequestToFinish = new Semaphore(1);
 
     public SpiceRequestSucceedingWithSemaphoresStub(Class<T> clazz, T returnedData) throws InterruptedException {
         super(clazz);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/SpiceActivity.java b/robospice-core/src/main/java/com/octo/android/robospice/SpiceActivity.java
index ada2360ca..14992876b 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/SpiceActivity.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/SpiceActivity.java
@@ -14,7 +14,7 @@
  */
 public class SpiceActivity extends Activity {
 
-    private final SpiceManager spiceManager = new SpiceManager(SpiceService.class);
+    final SpiceManager spiceManager = new SpiceManager(SpiceService.class);
 
     @Override
     protected void onStart() {
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/SpiceManager.java b/robospice-core/src/main/java/com/octo/android/robospice/SpiceManager.java
index 9ef3e035b..53df990b0 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/SpiceManager.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/SpiceManager.java
@@ -1,5 +1,32 @@
 package com.octo.android.robospice;
 
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.IdentityHashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.Callable;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.Future;
+import java.util.concurrent.PriorityBlockingQueue;
+import java.util.concurrent.ThreadFactory;
+import java.util.concurrent.locks.Condition;
+import java.util.concurrent.locks.ReentrantLock;
+
+import android.app.Activity;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
+import android.os.IBinder;
+
 import com.octo.android.robospice.SpiceService.SpiceServiceBinder;
 import com.octo.android.robospice.command.AddSpiceServiceListenerCommand;
 import com.octo.android.robospice.command.GetAllCacheKeysCommand;
@@ -25,33 +52,6 @@
 import com.octo.android.robospice.request.listener.SpiceServiceAdapter;
 import com.octo.android.robospice.request.listener.SpiceServiceListener;
 
-import android.app.Activity;
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
-import android.content.ServiceConnection;
-import android.os.IBinder;
-
-import java.lang.ref.WeakReference;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.IdentityHashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.BlockingQueue;
-import java.util.concurrent.Callable;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
-import java.util.concurrent.Future;
-import java.util.concurrent.PriorityBlockingQueue;
-import java.util.concurrent.ThreadFactory;
-import java.util.concurrent.locks.Condition;
-import java.util.concurrent.locks.ReentrantLock;
-
 import roboguice.util.temp.Ln;
 
 /**
@@ -95,21 +95,21 @@
     // ============================================================================================
 
     /** The class of the {@link SpiceService} to bind to. */
-    private final Class<? extends SpiceService> spiceServiceClass;
+    final Class<? extends SpiceService> spiceServiceClass;
 
     /** A reference on the {@link SpiceService} obtained by local binding. */
-    private SpiceService spiceService;
+    SpiceService spiceService;
     /** {@link SpiceService} binder. */
-    private SpiceServiceConnection spiceServiceConnection = new SpiceServiceConnection();
+    SpiceServiceConnection spiceServiceConnection = new SpiceServiceConnection();
 
     /** The contextWeakReference used to bind to the service from. */
-    private WeakReference<Context> contextWeakReference;
+    WeakReference<Context> contextWeakReference;
 
     /**
      * Whether or not {@link SpiceManager} is started. Must be volatile to
      * ensure multi-thread consistency.
      */
-    private volatile boolean isStopped = true;
+    volatile boolean isStopped = true;
 
     /** The queue of requests to be sent to the service. */
     protected final BlockingQueue<CachedSpiceRequest<?>> requestQueue = new PriorityBlockingQueue<CachedSpiceRequest<?>>();
@@ -119,7 +119,7 @@
      * All iterations must be synchronized. This is an identity list as we want
      * to keep every request.
      */
-    private final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapRequestToLaunchToRequestListener = Collections
+    final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapRequestToLaunchToRequestListener = Collections
         .synchronizedMap(new IdentityHashMap<CachedSpiceRequest<?>, Set<RequestListener<?>>>());
 
     /**
@@ -127,44 +127,44 @@
      * All iterations must be synchronized. This is *NOT* an identity list as we
      * want to take aggregation into account.
      */
-    private final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapPendingRequestToRequestListener = Collections.synchronizedMap(new HashMap<CachedSpiceRequest<?>, Set<RequestListener<?>>>());
+    final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapPendingRequestToRequestListener = Collections.synchronizedMap(new HashMap<CachedSpiceRequest<?>, Set<RequestListener<?>>>());
 
     /** Will execute internal commands of the SpiceManager. */
-    private ExecutorService executorService;
+    ExecutorService executorService;
 
     /**
      * Lock used to synchronize binding to / unbinding from the
      * {@link SpiceService}.
      */
-    private final ReentrantLock lockAcquireService = new ReentrantLock();
+    final ReentrantLock lockAcquireService = new ReentrantLock();
     /** A monitor to ensure service is bound before accessing it. */
-    private final Condition conditionServiceBound = lockAcquireService.newCondition();
+    final Condition conditionServiceBound = lockAcquireService.newCondition();
     /** A monitor to ensure service is unbound. */
-    private final Condition conditionServiceUnbound = lockAcquireService.newCondition();
+    final Condition conditionServiceUnbound = lockAcquireService.newCondition();
 
     /**
      * Lock used to synchronize transmission of requests to the
      * {@link SpiceService}.
      */
-    private final ReentrantLock lockSendRequestsToService = new ReentrantLock();
+    final ReentrantLock lockSendRequestsToService = new ReentrantLock();
 
     /** Thread running runnable code. */
     protected Thread runner;
 
     /** Reacts to service processing of requests. */
-    private final PendingRequestHandlerSpiceServiceListener removerSpiceServiceListener = new PendingRequestHandlerSpiceServiceListener();
+    final PendingRequestHandlerSpiceServiceListener removerSpiceServiceListener = new PendingRequestHandlerSpiceServiceListener();
 
     /**
      * Whether or not we are unbinding (to prevent unbinding twice. Must be
      * volatile to ensure multi-thread consistency.
      */
-    private volatile boolean isUnbinding = false;
+    volatile boolean isUnbinding = false;
 
     /**
      * Use to give a distinct name to each instance SpiceManager Threads, used
      * to send request to the service.
      */
-    private int spiceManagerThreadIndex;
+    int spiceManagerThreadIndex;
 
     // ============================================================================================
     // THREAD BEHAVIOR
@@ -238,7 +238,7 @@ public int getPendingRequestCount() {
         return mapPendingRequestToRequestListener.size();
     }
 
-    private Context getContextReference() {
+    Context getContextReference() {
         return contextWeakReference.get();
     }
 
@@ -275,7 +275,7 @@ public void run() {
         }
     }
 
-    private void sendRequestToService(final CachedSpiceRequest<?> spiceRequest) {
+    void sendRequestToService(final CachedSpiceRequest<?> spiceRequest) {
         lockSendRequestsToService.lock();
         try {
             if (spiceRequest != null && spiceService != null) {
@@ -690,7 +690,7 @@ protected void dontNotifyRequestListenersForRequestInternal(final SpiceRequest<?
      *         list of requests to be launched. If false, the request was
      *         already passed to the service.
      */
-    private boolean removeListenersOfCachedRequestToLaunch(final SpiceRequest<?> request) {
+    boolean removeListenersOfCachedRequestToLaunch(final SpiceRequest<?> request) {
         synchronized (mapRequestToLaunchToRequestListener) {
             for (final CachedSpiceRequest<?> cachedSpiceRequest : mapRequestToLaunchToRequestListener.keySet()) {
                 if (match(cachedSpiceRequest, request)) {
@@ -711,7 +711,7 @@ private boolean removeListenersOfCachedRequestToLaunch(final SpiceRequest<?> req
      * @param request
      *            the request for which listeners must be unregistered.
      */
-    private void removeListenersOfPendingCachedRequest(final SpiceRequest<?> request) throws InterruptedException {
+    void removeListenersOfPendingCachedRequest(final SpiceRequest<?> request) throws InterruptedException {
         synchronized (mapPendingRequestToRequestListener) {
             for (final CachedSpiceRequest<?> cachedSpiceRequest : mapPendingRequestToRequestListener.keySet()) {
                 if (match(cachedSpiceRequest, request)) {
@@ -780,7 +780,7 @@ protected void dontNotifyAnyRequestListenersInternal() {
      * @throws InterruptedException
      *             in case service binding fails.
      */
-    private void removeListenersOfAllPendingCachedRequests() throws InterruptedException {
+    void removeListenersOfAllPendingCachedRequests() throws InterruptedException {
         synchronized (mapPendingRequestToRequestListener) {
             if (!mapPendingRequestToRequestListener.isEmpty()) {
                 for (final CachedSpiceRequest<?> cachedSpiceRequest : mapPendingRequestToRequestListener.keySet()) {
@@ -806,7 +806,7 @@ private void removeListenersOfAllPendingCachedRequests() throws InterruptedExcep
      *            the request that we wish to remove notification for.
      * @return true if {@link CachedSpiceRequest} matches contentRequest.
      */
-    private boolean match(final CachedSpiceRequest<?> cachedSpiceRequest, final SpiceRequest<?> spiceRequest) {
+    boolean match(final CachedSpiceRequest<?> cachedSpiceRequest, final SpiceRequest<?> spiceRequest) {
         if (spiceRequest instanceof CachedSpiceRequest) {
             return spiceRequest == cachedSpiceRequest;
         } else {
@@ -839,7 +839,7 @@ public void run() {
         });
     }
 
-    private void cancelAllRequestsInternal() {
+    void cancelAllRequestsInternal() {
         lockSendRequestsToService.lock();
         try {
             // cancel each request that to be sent to service, and
@@ -1012,7 +1012,7 @@ public void setFailOnCacheError(final boolean failOnCacheError) {
         executeCommand(new SetFailOnCacheErrorCommand(this, failOnCacheError));
     }
 
-    private <T> void addRequestListenerToListOfRequestListeners(final CachedSpiceRequest<T> cachedSpiceRequest, final RequestListener<T> requestListener) {
+    <T> void addRequestListenerToListOfRequestListeners(final CachedSpiceRequest<T> cachedSpiceRequest, final RequestListener<T> requestListener) {
         synchronized (mapRequestToLaunchToRequestListener) {
             Set<RequestListener<?>> listeners = mapRequestToLaunchToRequestListener.get(cachedSpiceRequest);
             if (listeners == null) {
@@ -1116,7 +1116,7 @@ public void onServiceDisconnected(final ComponentName name) {
     /**
      * Called when a request has been processed by the {@link SpiceService}.
      */
-    private class PendingRequestHandlerSpiceServiceListener extends SpiceServiceAdapter {
+    class PendingRequestHandlerSpiceServiceListener extends SpiceServiceAdapter {
         @Override
         public void onRequestAdded(CachedSpiceRequest<?> cachedSpiceRequest, RequestProcessingContext requestProcessingContext) {
             Set<RequestListener<?>> listeners = mapRequestToLaunchToRequestListener.remove(cachedSpiceRequest);
@@ -1160,7 +1160,7 @@ protected boolean isBound() {
         return spiceService != null;
     }
 
-    private boolean tryToStartService() {
+    boolean tryToStartService() {
         boolean success = false;
 
         // start the service it is not started yet.
@@ -1175,7 +1175,7 @@ private boolean tryToStartService() {
         return success;
     }
 
-    private void bindToService() {
+    void bindToService() {
         Context context = getContextReference();
         if (context == null || requestQueue.isEmpty() && isStopped) {
             // fix issue 40. Thx Shussu
@@ -1209,7 +1209,7 @@ private void bindToService() {
         }
     }
 
-    private void unbindFromService() {
+    void unbindFromService() {
         Context context = getContextReference();
         if (context == null) {
             return;
@@ -1281,7 +1281,7 @@ protected void waitForServiceToBeUnbound() throws InterruptedException {
         return executorService.submit(spiceManagerCommand);
     }
 
-    private void checkServiceIsProperlyDeclaredInAndroidManifest(final Context context) {
+    void checkServiceIsProperlyDeclaredInAndroidManifest(final Context context) {
         final Intent intentCheck = new Intent(context, spiceServiceClass);
         if (context.getPackageManager().queryIntentServices(intentCheck, 0).isEmpty()) {
             shouldStop();
@@ -1289,7 +1289,7 @@ private void checkServiceIsProperlyDeclaredInAndroidManifest(final Context conte
         }
     }
 
-    private void dumpMap(final StringBuilder stringBuilder, final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> map) {
+    void dumpMap(final StringBuilder stringBuilder, final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> map) {
         synchronized (map) {
             stringBuilder.append(" request count= ");
             stringBuilder.append(mapRequestToLaunchToRequestListener.keySet().size());
@@ -1318,8 +1318,8 @@ private void dumpMap(final StringBuilder stringBuilder, final Map<CachedSpiceReq
     // ----------------------------------
     public abstract static class SpiceManagerCommand<T> implements Callable<T> {
         protected SpiceManager spiceManager;
-        private boolean successFull;
-        private Exception exception;
+        boolean successFull;
+        Exception exception;
 
         public SpiceManagerCommand(SpiceManager spiceManager) {
             this.spiceManager = spiceManager;
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/SpiceService.java b/robospice-core/src/main/java/com/octo/android/robospice/SpiceService.java
index ab8e9f583..eaf5d3f79 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/SpiceService.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/SpiceService.java
@@ -56,38 +56,38 @@
 
     // http://stackoverflow.com/a/13359680/693752
     /** JUNIT - this is for testing purposes only */
-    private static boolean isJUnit = false;
+    static boolean isJUnit = false;
 
     // ----------------------------------
     // CONSTANTS
     // ----------------------------------
-    protected static final int DEFAULT_NOTIFICATION_ID = 42;
+    private static final int DEFAULT_NOTIFICATION_ID = 42;
 
-    protected static final int DEFAULT_THREAD_COUNT = 1;
-    protected static final int DEFAULT_THREAD_PRIORITY = Thread.MIN_PRIORITY;
+    private static final int DEFAULT_THREAD_COUNT = 1;
+    private static final int DEFAULT_THREAD_PRIORITY = Thread.MIN_PRIORITY;
     /** Default in TimeUnit.NANOSECONDS implies core threads are not disposed when idle.*/
-    protected static final int DEFAULT_THREAD_KEEP_ALIVE_TIME = 0;
+    private static final int DEFAULT_THREAD_KEEP_ALIVE_TIME = 0;
 
-    private static final boolean DEFAULT_FAIL_ON_CACHE_ERROR = false;
+    static final boolean DEFAULT_FAIL_ON_CACHE_ERROR = false;
 
     // ----------------------------------
     // ATTRIBUTES
     // ----------------------------------
-    private SpiceServiceBinder mSpiceServiceBinder;
+    SpiceServiceBinder mSpiceServiceBinder;
 
     /** Responsible for processing requests. */
-    private RequestProcessor requestProcessor;
+    RequestProcessor requestProcessor;
 
-    private int currentPendingRequestCount = 0;
+    int currentPendingRequestCount = 0;
 
-    private boolean isBound;
+    boolean isBound;
 
-    private Notification notification;
+    Notification notification;
 
     /** Responsible for persisting data. */
-    private CacheManager cacheManager;
+    CacheManager cacheManager;
 
-    private boolean isCreated;
+    boolean isCreated;
 
     // ----------------------------------
     // CONSTRUCTOR
@@ -143,7 +143,7 @@ protected RequestRunner createRequestRunner(final ExecutorService executorServic
         return new DefaultRequestRunner(getApplicationContext(), cacheManager, executorService, requestProgressManager, networkStateChecker);
     }
 
-    private RequestProgressManager createRequestProgressManager(final RequestProcessorListener requestProcessorListener, final RequestListenerNotifier progressReporter,
+    RequestProgressManager createRequestProgressManager(final RequestProcessorListener requestProcessorListener, final RequestListenerNotifier progressReporter,
         final SpiceServiceListenerNotifier spiceServiceListenerNotifier) {
         return new RequestProgressManager(requestProcessorListener, progressReporter, spiceServiceListenerNotifier);
     }
@@ -467,7 +467,7 @@ public void allRequestComplete() {
     }
 
     public static class SpiceServiceBinder extends Binder {
-        private final SpiceService spiceService;
+        final SpiceService spiceService;
 
         public SpiceServiceBinder(final SpiceService spiceService) {
             this.spiceService = spiceService;
@@ -490,14 +490,14 @@ public void removeSpiceServiceListener(final SpiceServiceListener spiceServiceLi
         requestProcessor.removeSpiceServiceListener(spiceServiceListener);
     }
 
-    private void stopIfNotBoundAndHasNoPendingRequests() {
+    void stopIfNotBoundAndHasNoPendingRequests() {
         Ln.v("Pending requests : " + currentPendingRequestCount);
         if (currentPendingRequestCount == 0 && !isBound) {
             stopSelf();
         }
     }
 
-    private void showNotificationIfNotBoundAndHasPendingRequestsOtherwiseHideNotification() {
+    void showNotificationIfNotBoundAndHasPendingRequestsOtherwiseHideNotification() {
         // http://stackoverflow.com/a/13359680/693752
         if (notification == null || isJUnit) {
             return;
@@ -512,7 +512,7 @@ private void showNotificationIfNotBoundAndHasPendingRequestsOtherwiseHideNotific
         }
     }
 
-    private void startForeground(final Notification notification) {
+    void startForeground(final Notification notification) {
         try {
             final Method setForegroundMethod = Service.class.getMethod("startForeground", int.class, Notification.class);
             setForegroundMethod.invoke(this, getNotificationId(), notification);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/AddSpiceServiceListenerCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/AddSpiceServiceListenerCommand.java
index 1d8411a59..ae8ab6b15 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/AddSpiceServiceListenerCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/AddSpiceServiceListenerCommand.java
@@ -5,7 +5,7 @@
 import com.octo.android.robospice.request.listener.SpiceServiceListener;
 
 public class AddSpiceServiceListenerCommand extends SpiceManager.SpiceManagerCommand<Void> {
-    private SpiceServiceListener spiceServiceListener;
+    SpiceServiceListener spiceServiceListener;
 
     public AddSpiceServiceListenerCommand(SpiceManager spiceManager, SpiceServiceListener spiceServiceListener) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllCacheKeysCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllCacheKeysCommand.java
index 428c0c04a..543f65a1c 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllCacheKeysCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllCacheKeysCommand.java
@@ -8,7 +8,7 @@
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 
 public class GetAllCacheKeysCommand extends SpiceManager.SpiceManagerCommand<List<Object>> {
-    private Class<?> clazz;
+    Class<?> clazz;
 
     public GetAllCacheKeysCommand(SpiceManager spiceManager, Class<?> clazz) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllDataFromCacheCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllDataFromCacheCommand.java
index a7f0d2822..be02b3d50 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllDataFromCacheCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/GetAllDataFromCacheCommand.java
@@ -8,7 +8,7 @@
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 
 public class GetAllDataFromCacheCommand<T> extends SpiceManager.SpiceManagerCommand<List<T>> {
-    private Class<T> clazz;
+    Class<T> clazz;
 
     public GetAllDataFromCacheCommand(SpiceManager spiceManager, Class<T> clazz) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/GetDataFromCacheCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/GetDataFromCacheCommand.java
index 527658f61..0b53407fb 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/GetDataFromCacheCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/GetDataFromCacheCommand.java
@@ -6,8 +6,8 @@
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 
 public class GetDataFromCacheCommand<T> extends SpiceManager.SpiceManagerCommand<T> {
-    private Object cacheKey;
-    private Class<T> clazz;
+    Object cacheKey;
+    Class<T> clazz;
 
     public GetDataFromCacheCommand(SpiceManager spiceManager, Class<T> clazz, Object cacheKey) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/GetDateOfDataInCacheCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/GetDateOfDataInCacheCommand.java
index ed6d2de0c..ec2279029 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/GetDateOfDataInCacheCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/GetDateOfDataInCacheCommand.java
@@ -8,8 +8,8 @@
 import java.util.Date;
 
 public class GetDateOfDataInCacheCommand extends SpiceManager.SpiceManagerCommand<Date> {
-    private Class<?> clazz;
-    private Object cacheKey;
+    Class<?> clazz;
+    Object cacheKey;
 
     public GetDateOfDataInCacheCommand(SpiceManager spiceManager, Class<?> clazz, Object cacheKey) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/IsDataInCacheCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/IsDataInCacheCommand.java
index 9733872b0..bf0bf2386 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/IsDataInCacheCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/IsDataInCacheCommand.java
@@ -6,9 +6,9 @@
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 
 public class IsDataInCacheCommand extends SpiceManager.SpiceManagerCommand<Boolean> {
-    private Class<?> clazz;
-    private Object cacheKey;
-    private long cacheExpiryDuration;
+    Class<?> clazz;
+    Object cacheKey;
+    long cacheExpiryDuration;
 
     public IsDataInCacheCommand(SpiceManager spiceManager, Class<?> clazz, Object cacheKey, long cacheExpiryDuration) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/PutDataInCacheCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/PutDataInCacheCommand.java
index 126418390..6a5fef14d 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/PutDataInCacheCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/PutDataInCacheCommand.java
@@ -6,8 +6,8 @@
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 
 public class PutDataInCacheCommand<T> extends SpiceManager.SpiceManagerCommand<T> {
-    private Object cacheKey;
-    private T data;
+    Object cacheKey;
+    T data;
 
     public PutDataInCacheCommand(SpiceManager spiceManager, T data, Object cacheKey) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataClassFromCacheCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataClassFromCacheCommand.java
index b0d513d29..951ed9009 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataClassFromCacheCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataClassFromCacheCommand.java
@@ -4,7 +4,7 @@
 import com.octo.android.robospice.SpiceService;
 
 public class RemoveDataClassFromCacheCommand extends SpiceManager.SpiceManagerCommand<Void> {
-    private final Class<?> clazz;
+    final Class<?> clazz;
 
     public <T> RemoveDataClassFromCacheCommand(SpiceManager spiceManager, Class<T> clazz) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataFromCacheCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataFromCacheCommand.java
index 86f2b1af1..ea7a4df5a 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataFromCacheCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveDataFromCacheCommand.java
@@ -4,8 +4,8 @@
 import com.octo.android.robospice.SpiceService;
 
 public class RemoveDataFromCacheCommand extends SpiceManager.SpiceManagerCommand<Void> {
-    private final Class<?> clazz;
-    private Object cacheKey;
+    final Class<?> clazz;
+    Object cacheKey;
 
     public <T> RemoveDataFromCacheCommand(SpiceManager spiceManager, Class<T> clazz, Object cacheKey) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveSpiceServiceListenerCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveSpiceServiceListenerCommand.java
index 3e3378cb1..7a7488d16 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveSpiceServiceListenerCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/RemoveSpiceServiceListenerCommand.java
@@ -5,7 +5,7 @@
 import com.octo.android.robospice.request.listener.SpiceServiceListener;
 
 public class RemoveSpiceServiceListenerCommand extends SpiceManager.SpiceManagerCommand<Void> {
-    private SpiceServiceListener spiceServiceListener;
+    SpiceServiceListener spiceServiceListener;
 
     public RemoveSpiceServiceListenerCommand(SpiceManager spiceManager, SpiceServiceListener spiceServiceListener) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/command/SetFailOnCacheErrorCommand.java b/robospice-core/src/main/java/com/octo/android/robospice/command/SetFailOnCacheErrorCommand.java
index 635932ed7..5d27867a8 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/command/SetFailOnCacheErrorCommand.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/command/SetFailOnCacheErrorCommand.java
@@ -5,7 +5,7 @@
 import com.octo.android.robospice.SpiceService;
 
 public class SetFailOnCacheErrorCommand extends SpiceManagerCommand<Void> {
-    private final boolean failOnCacheError;
+    final boolean failOnCacheError;
 
     public SetFailOnCacheErrorCommand(SpiceManager spiceManager, boolean failOnCacheError) {
         super(spiceManager);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/networkstate/DefaultNetworkStateChecker.java b/robospice-core/src/main/java/com/octo/android/robospice/networkstate/DefaultNetworkStateChecker.java
index be7deb37c..927356990 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/networkstate/DefaultNetworkStateChecker.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/networkstate/DefaultNetworkStateChecker.java
@@ -33,7 +33,7 @@ public void checkPermissions(final Context context) {
         checkHasPermission(context, Manifest.permission.INTERNET);
     }
 
-    private boolean checkHasPermission(final Context context, final String permissionName) {
+    boolean checkHasPermission(final Context context, final String permissionName) {
         final boolean hasPermission = context.getPackageManager().checkPermission(permissionName, context.getPackageName()) == PackageManager.PERMISSION_GRANTED;
         if (!hasPermission) {
             throw new SecurityException("Application doesn\'t declare <uses-permission android:name=\"" + permissionName + "\" />");
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceNotificationService.java b/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceNotificationService.java
index d65c90a5a..e8da24c47 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceNotificationService.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceNotificationService.java
@@ -33,14 +33,14 @@
     public static final String BUNDLE_KEY_SERVICE_CLASS = "BUNDLE_KEY_SERVICE_CLASS";
     public static final String BUNDLE_KEY_FOREGROUND = "BUNDLE_KEY_FOREGROUND";
 
-    private int notificationId = DEFAULT_ROBOSPICE_NOTIFICATION_ID;
-    private Class<?> requestClass;
-    private String requestCacheKey;
-    private boolean foreground;
-    private Class<? extends SpiceService> spiceServiceClass;
+    int notificationId = DEFAULT_ROBOSPICE_NOTIFICATION_ID;
+    Class<?> requestClass;
+    String requestCacheKey;
+    boolean foreground;
+    Class<? extends SpiceService> spiceServiceClass;
 
-    private NotificationManager notificationManager;
-    private SpiceManager spiceManager;
+    NotificationManager notificationManager;
+    SpiceManager spiceManager;
 
     public static Intent createIntent(final Context context, final Class<? extends SpiceNotificationService> clazz, final Class<? extends SpiceService> spiceServiceClass, final int notificationId,
         final Class<?> requestResultType, final String cacheKey, final boolean foreground) {
@@ -101,7 +101,7 @@ public Notification onCreateForegroundNotification() {
     // INNER CLASS
     // ----------------------------------
 
-    private class NotificationRequestListener<T> implements RequestListener<T>, RequestProgressListener {
+    class NotificationRequestListener<T> implements RequestListener<T>, RequestProgressListener {
 
         @Override
         public void onRequestFailure(final SpiceException arg0) {
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceServiceListenerNotificationService.java b/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceServiceListenerNotificationService.java
index 160a912db..9ae3e155d 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceServiceListenerNotificationService.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/notification/SpiceServiceListenerNotificationService.java
@@ -30,12 +30,12 @@
     public static final String BUNDLE_KEY_SERVICE_CLASS = "BUNDLE_KEY_SERVICE_CLASS";
     public static final String BUNDLE_KEY_FOREGROUND = "BUNDLE_KEY_FOREGROUND";
 
-    private int notificationId = DEFAULT_ROBOSPICE_NOTIFICATION_ID;
-    private boolean foreground;
-    private Class<? extends SpiceService> spiceServiceClass;
+    int notificationId = DEFAULT_ROBOSPICE_NOTIFICATION_ID;
+    boolean foreground;
+    Class<? extends SpiceService> spiceServiceClass;
 
-    private NotificationManager notificationManager;
-    private SpiceManager spiceManager;
+    NotificationManager notificationManager;
+    SpiceManager spiceManager;
 
     public static Intent createIntent(final Context context, final Class<? extends SpiceServiceListenerNotificationService> clazz, final Class<? extends SpiceService> spiceServiceClass,
         final int notificationId, final boolean foreground) {
@@ -114,8 +114,8 @@ public Notification onCreateForegroundNotification() {
     // ----------------------------------
 
     public static class SpiceNotification {
-        private int id;
-        private Notification notification;
+        int id;
+        Notification notification;
 
         public SpiceNotification(int id, Notification notification) {
             this.id = id;
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactory.java b/robospice-core/src/main/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactory.java
index 6ee3fedfa..9429be91f 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactory.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/priority/CustomizablePriorityThreadFactory.java
@@ -11,7 +11,7 @@
     // ----------------------------------
     // ATTRIBUTES
     // ----------------------------------
-    private int threadPriority = Thread.MIN_PRIORITY;
+    int threadPriority = Thread.MIN_PRIORITY;
 
     // ----------------------------------
     // CONSTRUCTORS
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/priority/PausablePriorityBlockingQueue.java b/robospice-core/src/main/java/com/octo/android/robospice/priority/PausablePriorityBlockingQueue.java
index ca4cfbec0..ae5d49d19 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/priority/PausablePriorityBlockingQueue.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/priority/PausablePriorityBlockingQueue.java
@@ -13,9 +13,9 @@
  */
 public class PausablePriorityBlockingQueue<T> extends PriorityBlockingQueue<T> {
     private static final long serialVersionUID = 3726077277740650698L;
-    private boolean isPaused;
-    private transient ReentrantLock pauseLock = new ReentrantLock();
-    private transient Condition unpaused = pauseLock.newCondition();
+    boolean isPaused;
+    transient ReentrantLock pauseLock = new ReentrantLock();
+    transient Condition unpaused = pauseLock.newCondition();
 
     public PausablePriorityBlockingQueue() {
         super();
@@ -86,7 +86,7 @@ public void resume() {
     }
 
     // makes findbugs happy, but unused
-    private void readObject(ObjectInputStream ois) {
+    void readObject(ObjectInputStream ois) {
         try {
             ois.defaultReadObject();
             pauseLock = new ReentrantLock();
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/priority/PriorityFuture.java b/robospice-core/src/main/java/com/octo/android/robospice/priority/PriorityFuture.java
index f4a7d1393..cefdf1109 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/priority/PriorityFuture.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/priority/PriorityFuture.java
@@ -11,7 +11,7 @@
  */
 public class PriorityFuture<T> extends FutureTask<T> implements Comparable<PriorityFuture<T>> {
 
-    private int priority;
+    int priority;
 
     public PriorityFuture(Runnable other, int priority, final T result) {
         super(other, result);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/CachedSpiceRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/CachedSpiceRequest.java
index 7e96c5052..943f199ee 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/CachedSpiceRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/CachedSpiceRequest.java
@@ -19,12 +19,12 @@
  */
 public class CachedSpiceRequest<RESULT> extends SpiceRequest<RESULT> {
 
-    private Object requestCacheKey;
-    private final long cacheDuration;
-    private final SpiceRequest<RESULT> spiceRequest;
-    private boolean isProcessable = true;
-    private boolean isAcceptingDirtyCache;
-    private boolean isOffline;
+    Object requestCacheKey;
+    final long cacheDuration;
+    final SpiceRequest<RESULT> spiceRequest;
+    boolean isProcessable = true;
+    boolean isAcceptingDirtyCache;
+    boolean isOffline;
 
     public CachedSpiceRequest(final SpiceRequest<RESULT> spiceRequest, final Object requestCacheKey, final long cacheDuration) {
         super(spiceRequest.getResultType());
@@ -118,12 +118,12 @@ public long getCacheDuration() {
         return spiceRequest;
     }
     
-    /* package private */@Override
+    /* package */@Override
     void setStatus(final RequestStatus status) {
         spiceRequest.setStatus(status);
     }
 
-    /* package private */@Override
+    /* package */@Override
     RequestProgress getProgress() {
         return spiceRequest.getProgress();
     }
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/DefaultRequestRunner.java b/robospice-core/src/main/java/com/octo/android/robospice/request/DefaultRequestRunner.java
index 0f3a4e100..755bd5a61 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/DefaultRequestRunner.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/DefaultRequestRunner.java
@@ -36,14 +36,14 @@
      * "http://blog.zenika.com/index.php?post/2012/04/11/Introduction-programmation-concurrente-Java-2sur2. "
      * >blog article</a>.
      */
-    private ExecutorService executorService = null;
-    private final CacheManager cacheManager;
-    private final Context applicationContext;
-    private boolean failOnCacheError;
-    private final NetworkStateChecker networkStateChecker;
-    private final RequestProgressManager requestProgressManager;
-    private boolean isStopped;
-    private ReentrantLock executorLock;
+    ExecutorService executorService = null;
+    final CacheManager cacheManager;
+    final Context applicationContext;
+    boolean failOnCacheError;
+    final NetworkStateChecker networkStateChecker;
+    final RequestProgressManager requestProgressManager;
+    boolean isStopped;
+    ReentrantLock executorLock;
 
     // ============================================================================================
     // CONSTRUCTOR
@@ -258,15 +258,15 @@ public boolean isStopped() {
     // PRIVATE
     // ============================================================================================
 
-    private <T> T loadDataFromCache(final Class<T> clazz, final Object cacheKey, final long maxTimeInCacheBeforeExpiry) throws CacheLoadingException, CacheCreationException {
+    <T> T loadDataFromCache(final Class<T> clazz, final Object cacheKey, final long maxTimeInCacheBeforeExpiry) throws CacheLoadingException, CacheCreationException {
         return cacheManager.loadDataFromCache(clazz, cacheKey, maxTimeInCacheBeforeExpiry);
     }
 
-    private <T> T saveDataToCacheAndReturnData(final T data, final Object cacheKey) throws CacheSavingException, CacheCreationException {
+    <T> T saveDataToCacheAndReturnData(final T data, final Object cacheKey) throws CacheSavingException, CacheCreationException {
         return cacheManager.saveDataToCacheAndReturnData(data, cacheKey);
     }
 
-    private void handleRetry(final CachedSpiceRequest<?> request, final SpiceException e) {
+    void handleRetry(final CachedSpiceRequest<?> request, final SpiceException e) {
         if (request.getRetryPolicy() != null) {
             request.getRetryPolicy().retry(e);
             if (request.getRetryPolicy().getRetryCount() > 0) {
@@ -287,11 +287,11 @@ public void run() {
         requestProgressManager.notifyListenersOfRequestFailure(request, e);
     }
 
-    private static String getTimeString(long millis) {
+    static String getTimeString(long millis) {
         return String.format("%02d ms", millis);
     }
 
-    private static void printRequestProcessingDuration(long startTime, CachedSpiceRequest<?> request) {
+    static void printRequestProcessingDuration(long startTime, CachedSpiceRequest<?> request) {
         Ln.d("It tooks %s to process request %s.", getTimeString(System.currentTimeMillis() - startTime), request.toString());
     }
 
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/ProgressByteProcessor.java b/robospice-core/src/main/java/com/octo/android/robospice/request/ProgressByteProcessor.java
index 6cab8b156..0abc59656 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/ProgressByteProcessor.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/ProgressByteProcessor.java
@@ -8,10 +8,10 @@
  */
 public class ProgressByteProcessor {
 
-    private final OutputStream bos;
-    private long progress;
-    private final long total;
-    private SpiceRequest<?> spiceRequest;
+    final OutputStream bos;
+    long progress;
+    final long total;
+    SpiceRequest<?> spiceRequest;
 
     public ProgressByteProcessor(SpiceRequest<?> spiceRequest, final OutputStream bos, final long total) {
         this.bos = bos;
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProcessor.java b/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProcessor.java
index 846497d33..2b8bfb155 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProcessor.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProcessor.java
@@ -25,11 +25,11 @@
     // ATTRIBUTES
     // ============================================================================================
 
-    private final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapRequestToRequestListener = Collections.synchronizedMap(new LinkedHashMap<CachedSpiceRequest<?>, Set<RequestListener<?>>>());
-    private final RequestProgressManager requestProgressManager;
-    private final RequestRunner requestRunner;
-    private final CacheManager cacheManager;
-    private boolean isStopped;
+    final Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapRequestToRequestListener = Collections.synchronizedMap(new LinkedHashMap<CachedSpiceRequest<?>, Set<RequestListener<?>>>());
+    final RequestProgressManager requestProgressManager;
+    final RequestRunner requestRunner;
+    final CacheManager cacheManager;
+    boolean isStopped;
 
     // ============================================================================================
     // CONSTRUCTOR
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProgressManager.java b/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProgressManager.java
index 708a07d31..82714197c 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProgressManager.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/RequestProgressManager.java
@@ -24,11 +24,11 @@
     // ============================================================================================
     // ATTRIBUTES
     // ============================================================================================
-    private Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapRequestToRequestListener;
+    Map<CachedSpiceRequest<?>, Set<RequestListener<?>>> mapRequestToRequestListener;
 
-    private final RequestProcessorListener requestProcessorListener;
-    private final RequestListenerNotifier requestListenerNotifier;
-    private final SpiceServiceListenerNotifier spiceServiceListenerNotifier;
+    final RequestProcessorListener requestProcessorListener;
+    final RequestListenerNotifier requestListenerNotifier;
+    final SpiceServiceListenerNotifier spiceServiceListenerNotifier;
 
     // ============================================================================================
     // CONSTRUCTOR
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/SpiceRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/SpiceRequest.java
index c5ac3888b..2769a9052 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/SpiceRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/SpiceRequest.java
@@ -26,16 +26,16 @@
     public static final int PRIORITY_NORMAL = 50;
     public static final int PRIORITY_LOW = 100;
 
-    private final Class<RESULT> resultType;
-    private boolean isCanceled = false;
-    private Future<?> future;
-    private RequestProgressListener requestProgressListener;
-    private boolean isAggregatable = true;
-    private int priority = PRIORITY_NORMAL;
-    private RequestProgress progress = new RequestProgress(RequestStatus.PENDING);
-    private RequestCancellationListener requestCancellationListener;
+    final Class<RESULT> resultType;
+    boolean isCanceled = false;
+    Future<?> future;
+    RequestProgressListener requestProgressListener;
+    boolean isAggregatable = true;
+    int priority = PRIORITY_NORMAL;
+    RequestProgress progress = new RequestProgress(RequestStatus.PENDING);
+    RequestCancellationListener requestCancellationListener;
 
-    private RetryPolicy retryPolicy = new DefaultRetryPolicy();
+    RetryPolicy retryPolicy = new DefaultRetryPolicy();
 
     public SpiceRequest(final Class<RESULT> clazz) {
         checkInnerClassDeclarationToPreventMemoryLeak();
@@ -77,7 +77,7 @@ public int getPriority() {
         return priority;
     }
 
-    private void checkInnerClassDeclarationToPreventMemoryLeak() {
+    void checkInnerClassDeclarationToPreventMemoryLeak() {
         // thanx to Cyril Mottier for this contribution
         // prevent devs from creating memory leaks by using inner
         // classes of contexts
@@ -104,12 +104,12 @@ public void cancel() {
         }
     }
 
-    /* package private */void setStatus(final RequestStatus status) {
+    /* package */void setStatus(final RequestStatus status) {
         this.progress = new RequestProgress(status);
         publishProgress();
     }
 
-    /* package private */RequestProgress getProgress() {
+    /* package */RequestProgress getProgress() {
         return progress;
     }
 
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/listener/RequestProgress.java b/robospice-core/src/main/java/com/octo/android/robospice/request/listener/RequestProgress.java
index 7b834ce41..f10d19666 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/listener/RequestProgress.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/listener/RequestProgress.java
@@ -2,8 +2,8 @@
 
 public class RequestProgress {
 
-    private RequestStatus status;
-    private float progress;
+    RequestStatus status;
+    float progress;
 
     public RequestProgress(final RequestStatus status) {
         this(status, 0);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/listener/SpiceServiceListener.java b/robospice-core/src/main/java/com/octo/android/robospice/request/listener/SpiceServiceListener.java
index 266490ca3..b66802600 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/listener/SpiceServiceListener.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/listener/SpiceServiceListener.java
@@ -34,9 +34,9 @@
     // ----------------------------------
     
     class RequestProcessingContext {
-        private Thread executionThread;
-        private RequestProgress requestProgress;
-        private Set<RequestListener<?>> requestListeners;
+        Thread executionThread;
+        RequestProgress requestProgress;
+        Set<RequestListener<?>> requestListeners;
 
         public void setExecutionThread(Thread executionThread) {
             this.executionThread = executionThread;
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/DefaultRequestListenerNotifier.java b/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/DefaultRequestListenerNotifier.java
index 6ed360b57..057e7be7d 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/DefaultRequestListenerNotifier.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/DefaultRequestListenerNotifier.java
@@ -24,7 +24,7 @@
     // ============================================================================================
     // ATTRIBUTES
     // ============================================================================================
-    private final Handler handlerResponse;
+    final Handler handlerResponse;
 
     // ============================================================================================
     // CONSTRUCTOR
@@ -33,7 +33,7 @@ public DefaultRequestListenerNotifier() {
         handlerResponse = new Handler(Looper.getMainLooper());
     }
 
-    private void post(final Runnable r, final Object token) {
+    void post(final Runnable r, final Object token) {
         handlerResponse.postAtTime(r, token, SystemClock.uptimeMillis());
     }
 
@@ -86,8 +86,8 @@ private void post(final Runnable r, final Object token) {
     // INNER CLASSES
     // ============================================================================================
 
-    private static class NotFoundRunnable implements Runnable {
-        private final Set<RequestListener<?>> listeners;
+    static class NotFoundRunnable implements Runnable {
+        final Set<RequestListener<?>> listeners;
 
         public NotFoundRunnable(final Set<RequestListener<?>> listeners) {
             this.listeners = listeners;
@@ -112,9 +112,9 @@ public void run() {
         }
     }
     
-    private static class ProgressRunnable implements Runnable {
-        private final RequestProgress progress;
-        private final Set<RequestListener<?>> listeners;
+    static class ProgressRunnable implements Runnable {
+        final RequestProgress progress;
+        final Set<RequestListener<?>> listeners;
 
         public ProgressRunnable(final Set<RequestListener<?>> listeners, final RequestProgress progress) {
             this.progress = progress;
@@ -140,11 +140,11 @@ public void run() {
         }
     }
 
-    private static class ResultRunnable<T> implements Runnable {
+    static class ResultRunnable<T> implements Runnable {
 
-        private SpiceException spiceException;
-        private T result;
-        private final Set<RequestListener<?>> listeners;
+        SpiceException spiceException;
+        T result;
+        final Set<RequestListener<?>> listeners;
 
         public ResultRunnable(final Set<RequestListener<?>> listeners, final T result) {
             this.result = result;
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/SpiceServiceListenerNotifier.java b/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/SpiceServiceListenerNotifier.java
index f745e83ca..b10f7abe6 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/SpiceServiceListenerNotifier.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/notifier/SpiceServiceListenerNotifier.java
@@ -24,9 +24,9 @@
  */
 public class SpiceServiceListenerNotifier {
 
-    private final List<SpiceServiceListener> spiceServiceListenerList = Collections.synchronizedList(new ArrayList<SpiceServiceListener>());
+    final List<SpiceServiceListener> spiceServiceListenerList = Collections.synchronizedList(new ArrayList<SpiceServiceListener>());
 
-    private Handler messageQueue;
+    Handler messageQueue;
 
     public void addSpiceServiceListener(SpiceServiceListener spiceServiceListener) {
         spiceServiceListenerList.add(spiceServiceListener);
@@ -159,10 +159,10 @@ protected void onStopped() {
      * Runnable to inform interested observers of request added
      * @author Andrew.Clark
      */
-    private static class RequestAddedNotifier implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<?> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestAddedNotifier implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<?> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestAddedNotifier(CachedSpiceRequest<?> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
 
@@ -187,10 +187,10 @@ public void run() {
      * Runnable to inform interested observers of request added
      * @author Andrew.Clark
      */
-    private static class RequestAggregatedNotifier implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<?> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestAggregatedNotifier implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<?> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestAggregatedNotifier(CachedSpiceRequest<?> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
 
@@ -216,10 +216,10 @@ public void run() {
      * Runnable to inform interested observers of request not found
      * @author Andrew.Clark
      */
-    private static class RequestNotFoundNotifier implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<?> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestNotFoundNotifier implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<?> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestNotFoundNotifier(CachedSpiceRequest<?> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
 
@@ -244,10 +244,10 @@ public void run() {
      * Runnable to inform interested observers of request failed
      * @author Andrew.Clark
      */
-    private static class RequestFailedNotifier implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<?> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestFailedNotifier implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<?> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestFailedNotifier(CachedSpiceRequest<?> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
 
@@ -271,10 +271,10 @@ public void run() {
      * @author Andrew.Clark
      * @param <T>
      */
-    private static class RequestSucceededNotifier<T> implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<T> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestSucceededNotifier<T> implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<T> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestSucceededNotifier(CachedSpiceRequest<T> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
 
@@ -297,10 +297,10 @@ public void run() {
      * Runnable to inform interested observers of request cancelled
      * @author Andrew.Clark
      */
-    private static class RequestCancelledNotifier implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<?> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestCancelledNotifier implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<?> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestCancelledNotifier(CachedSpiceRequest<?> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
             this.spiceServiceListenerList = spiceServiceListenerList;
@@ -324,10 +324,10 @@ public void run() {
      * Runnable to inform interested observers of request progress
      * @author Andrew.Clark
      */
-    private static class RequestProgressNotifier implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<?> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestProgressNotifier implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<?> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestProgressNotifier(CachedSpiceRequest<?> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
 
@@ -350,10 +350,10 @@ public void run() {
      * Runnable to inform interested observers of request processing end.
      * @author SNI
      */
-    private static class RequestProcessedNotifier implements Runnable {
-        private List<SpiceServiceListener> spiceServiceListenerList;
-        private CachedSpiceRequest<?> request;
-        private RequestProcessingContext requestProcessingContext;
+    static class RequestProcessedNotifier implements Runnable {
+        List<SpiceServiceListener> spiceServiceListenerList;
+        CachedSpiceRequest<?> request;
+        RequestProcessingContext requestProcessingContext;
 
         public RequestProcessedNotifier(CachedSpiceRequest<?> request, List<SpiceServiceListener> spiceServiceListenerList, RequestProcessingContext requestProcessingContext) {
 
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java
index d2defb24f..74fb62c80 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java
@@ -27,12 +27,12 @@
 
     private static final int BUF_SIZE = 4096;
 
-    private String url;
-    private BitmapFactory.Options options;
-    private File cacheFile;
+    String url;
+    BitmapFactory.Options options;
+    File cacheFile;
 
-    private int height = -1;
-    private int width = -1;
+    int height = -1;
+    int width = -1;
 
     /**
      * Creates a BitmapRequest able to fetch a {@link Bitmap} from the network.
@@ -153,7 +153,7 @@ protected void readBytes(final InputStream in, final ProgressByteProcessor proce
         }
     }
 
-    private static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {
+    static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {
         // Raw height and width of image
         final int height = options.outHeight;
         final int width = options.outWidth;
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java
index 63732a6c3..ca64d6e53 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java
@@ -13,7 +13,7 @@
 
 public class SimpleTextRequest extends SpiceRequest<String> {
 
-    private final String url;
+    final String url;
 
     public SimpleTextRequest(final String url) {
         super(String.class);
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/retry/DefaultRetryPolicy.java b/robospice-core/src/main/java/com/octo/android/robospice/retry/DefaultRetryPolicy.java
index 744fc30e3..993f399f6 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/retry/DefaultRetryPolicy.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/retry/DefaultRetryPolicy.java
@@ -21,19 +21,19 @@
     public static final float DEFAULT_BACKOFF_MULT = 1f;
 
     /** The number of retry attempts. */
-    private int retryCount = DEFAULT_RETRY_COUNT;
+    int retryCount = DEFAULT_RETRY_COUNT;
 
     /**
      * The delay to wait before next retry attempt. Will be multiplied by
      * {@link #backOffMultiplier} between every retry attempt.
      */
-    private long delayBeforeRetry = DEFAULT_DELAY_BEFORE_RETRY;
+    long delayBeforeRetry = DEFAULT_DELAY_BEFORE_RETRY;
 
     /**
      * The backoff multiplier. Will be multiplied by {@link #delayBeforeRetry}
      * between every retry attempt.
      */
-    private float backOffMultiplier = DEFAULT_BACKOFF_MULT;
+    float backOffMultiplier = DEFAULT_BACKOFF_MULT;
 
     // ----------------------------------
     // CONSTRUCTORS
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/GoogleHttpClientSpiceServiceTest.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/GoogleHttpClientSpiceServiceTest.java
index 4e5dc5862..7434884c4 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/GoogleHttpClientSpiceServiceTest.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/GoogleHttpClientSpiceServiceTest.java
@@ -15,7 +15,7 @@
 
     private static final int REQUEST_COMPLETION_TIMEOUT = 1000;
     private static final long SMALL_THREAD_SLEEP = 50;
-    private SpiceManager spiceManager;
+    SpiceManager spiceManager;
 
     public GoogleHttpClientSpiceServiceTest() {
         super(GoogleHttpClientSpiceTestService.class);
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/CurrenWeather.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/CurrenWeather.java
index 0b5e49745..536f9f827 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/CurrenWeather.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/CurrenWeather.java
@@ -6,19 +6,19 @@
 
 public class CurrenWeather {
     @Key
-    private String humidity;
+    String humidity;
     @Key
-    private String pressure;
+    String pressure;
     @Key
-    private String temp;
+    String temp;
     @Key
-    private String temp_unit;
+    String temp_unit;
     @Key
-    private String weather_code;
+    String weather_code;
     @Key
-    private String weather_text;
+    String weather_text;
     @Key
-    private List<Wind> wind;
+    List<Wind> wind;
 
     public String getHumidity() {
         return this.humidity;
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Day.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Day.java
index d8d602435..9ea228184 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Day.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Day.java
@@ -6,11 +6,11 @@
 
 public class Day {
     @Key
-    private String weather_code;
+    String weather_code;
     @Key
-    private String weather_text;
+    String weather_text;
     @Key
-    private List<Wind> wind;
+    List<Wind> wind;
 
     public String getWeather_code() {
         return this.weather_code;
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Forecast.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Forecast.java
index a27462235..3ae715190 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Forecast.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Forecast.java
@@ -6,17 +6,17 @@
 
 public class Forecast {
     @Key
-    private String date;
+    String date;
     @Key
-    private List<Day> day;
+    List<Day> day;
     @Key
-    private String day_max_temp;
+    String day_max_temp;
     @Key
-    private List<Day> night;
+    List<Day> night;
     @Key
-    private String night_min_temp;
+    String night_min_temp;
     @Key
-    private String temp_unit;
+    String temp_unit;
 
     public String getDate() {
         return this.date;
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Weather.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Weather.java
index 3d33d0b5e..cb33c050e 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Weather.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Weather.java
@@ -7,9 +7,9 @@
 public class Weather {
 
     @Key
-    private List<CurrenWeather> currenWeather;
+    List<CurrenWeather> currenWeather;
     @Key
-    private List<Forecast> forecast;
+    List<Forecast> forecast;
 
     public Weather() {
     }
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/WeatherResult.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/WeatherResult.java
index 097d04486..cfa49442e 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/WeatherResult.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/WeatherResult.java
@@ -4,10 +4,10 @@
 
 public class WeatherResult {
     @Key
-    private Weather weather;
+    Weather weather;
 
     @Key
-    private int id = 1;
+    int id = 1;
 
     public Weather getWeather() {
         return this.weather;
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Wind.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Wind.java
index 0a98d6784..94947c921 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Wind.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/model/Wind.java
@@ -4,11 +4,11 @@
 
 public class Wind {
     @Key
-    private String dir;
+    String dir;
     @Key
-    private String speed;
+    String speed;
     @Key
-    private String wind_unit;
+    String wind_unit;
 
     public String getDir() {
         return this.dir;
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/stub/GoogleHttpClientSpiceRequestStub.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/stub/GoogleHttpClientSpiceRequestStub.java
index fe26cda19..807f3834c 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/stub/GoogleHttpClientSpiceRequestStub.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/googlehttpclient/test/stub/GoogleHttpClientSpiceRequestStub.java
@@ -8,8 +8,8 @@
 import com.octo.android.robospice.request.googlehttpclient.GoogleHttpClientSpiceRequest;
 
 public class GoogleHttpClientSpiceRequestStub extends GoogleHttpClientSpiceRequest<Weather> {
-    private ReentrantLock reentrantLock = new ReentrantLock();
-    private Condition loadDataFromNetworkHasBeenExecuted = reentrantLock.newCondition();
+    ReentrantLock reentrantLock = new ReentrantLock();
+    Condition loadDataFromNetworkHasBeenExecuted = reentrantLock.newCondition();
 
     public GoogleHttpClientSpiceRequestStub(Class<Weather> clazz) {
         super(clazz);
diff --git a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactoryTest.java b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactoryTest.java
index 1030b0fae..fc594544d 100644
--- a/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactoryTest.java
+++ b/robospice-google-http-client/src/androidTest/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactoryTest.java
@@ -23,7 +23,7 @@
     private static final String FILE_NAME = "toto";
     private static final String FILE_NAME2 = "tutu";
     private static final long SMALL_THREAD_SLEEP = 50;
-    private JsonObjectPersister<WeatherResult> inFileObjectPersister;
+    JsonObjectPersister<WeatherResult> inFileObjectPersister;
 
     @Override
     protected void setUp() throws Exception {
@@ -168,7 +168,7 @@ public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed(
         assertFalse(listWeatherResult.contains(weatherRequestStatus2));
     }
 
-    private WeatherResult buildWeather(String temp, String tempUnit) {
+    WeatherResult buildWeather(String temp, String tempUnit) {
         WeatherResult weatherRequestStatus = new WeatherResult();
         Weather weather = new Weather();
         List<CurrenWeather> currents = new ArrayList<CurrenWeather>();
diff --git a/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersister.java b/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersister.java
index a9b1adc7c..e3ba6077f 100644
--- a/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersister.java
+++ b/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersister.java
@@ -23,7 +23,7 @@
     // ATTRIBUTES
     // ============================================================================================
 
-    private final JsonFactory jsonFactory;
+    final JsonFactory jsonFactory;
 
     // ============================================================================================
     // CONSTRUCTOR
@@ -91,7 +91,7 @@ public void run() {
         return data;
     }
 
-    private void saveData(T data, Object cacheKey) throws IOException, CacheSavingException {
+    void saveData(T data, Object cacheKey) throws IOException, CacheSavingException {
         // transform the content in json to store it in the cache
         JsonGenerator jsonGenerator = jsonFactory.createJsonGenerator(new FileWriter(getCacheFile(cacheKey)));
         jsonGenerator.serialize(data);
diff --git a/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactory.java b/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactory.java
index 0bdceb40c..0b38fdc89 100644
--- a/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactory.java
+++ b/robospice-google-http-client/src/main/java/com/octo/android/robospice/persistence/googlehttpclient/json/JsonObjectPersisterFactory.java
@@ -14,7 +14,7 @@
     // ----------------------------------
     // ATTRIBUTES
     // ----------------------------------
-    private JsonFactory jsonFactory;
+    JsonFactory jsonFactory;
 
     // ----------------------------------
     // CONSTRUCTOR
diff --git a/robospice-google-http-client/src/main/java/com/octo/android/robospice/request/googlehttpclient/GoogleHttpClientSpiceRequest.java b/robospice-google-http-client/src/main/java/com/octo/android/robospice/request/googlehttpclient/GoogleHttpClientSpiceRequest.java
index 0b3ad42fa..b6fccb9b7 100644
--- a/robospice-google-http-client/src/main/java/com/octo/android/robospice/request/googlehttpclient/GoogleHttpClientSpiceRequest.java
+++ b/robospice-google-http-client/src/main/java/com/octo/android/robospice/request/googlehttpclient/GoogleHttpClientSpiceRequest.java
@@ -5,7 +5,7 @@
 
 public abstract class GoogleHttpClientSpiceRequest<RESULT> extends SpiceRequest<RESULT> {
 
-    private HttpRequestFactory httpRequestFactory;
+    HttpRequestFactory httpRequestFactory;
 
     public GoogleHttpClientSpiceRequest(Class<RESULT> clazz) {
         super(clazz);
diff --git a/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/OkHttpSpiceServiceTest.java b/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/OkHttpSpiceServiceTest.java
index 87c966e3f..fc634f368 100644
--- a/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/OkHttpSpiceServiceTest.java
+++ b/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/OkHttpSpiceServiceTest.java
@@ -15,7 +15,7 @@
 
     private static final int REQUEST_COMPLETION_TIMEOUT = 1000;
     private static final long SMALL_THREAD_SLEEP = 50;
-    private SpiceManager spiceManager;
+    SpiceManager spiceManager;
 
     public OkHttpSpiceServiceTest() {
         super(OkHttpSpiceTestService.class);
diff --git a/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/test/stub/OkHttpSpiceRequestStub.java b/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/test/stub/OkHttpSpiceRequestStub.java
index 76e2177ef..11f33750c 100644
--- a/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/test/stub/OkHttpSpiceRequestStub.java
+++ b/robospice-okhttp/src/androidTest/java/com/octo/android/robospice/okhttp/test/stub/OkHttpSpiceRequestStub.java
@@ -7,8 +7,8 @@
 import com.octo.android.robospice.request.okhttp.OkHttpSpiceRequest;
 
 public class OkHttpSpiceRequestStub extends OkHttpSpiceRequest<String> {
-    private ReentrantLock reentrantLock = new ReentrantLock();
-    private Condition loadDataFromNetworkHasBeenExecuted = reentrantLock.newCondition();
+    ReentrantLock reentrantLock = new ReentrantLock();
+    Condition loadDataFromNetworkHasBeenExecuted = reentrantLock.newCondition();
 
     public OkHttpSpiceRequestStub() {
         super(String.class);
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/okhttp/OkHttpSpiceService.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/okhttp/OkHttpSpiceService.java
index 6b90eaee5..a14450cd2 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/okhttp/OkHttpSpiceService.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/okhttp/OkHttpSpiceService.java
@@ -10,7 +10,7 @@
 
 public abstract class OkHttpSpiceService extends SpiceService {
 
-    private OkHttpClient okHttpClient;
+    OkHttpClient okHttpClient;
 
     @Override
     public void onCreate() {
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/OkHttpSpiceRequest.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/OkHttpSpiceRequest.java
index 29d8e2b1d..978e9533d 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/OkHttpSpiceRequest.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/OkHttpSpiceRequest.java
@@ -12,7 +12,7 @@
  */
 public abstract class OkHttpSpiceRequest<T> extends SpiceRequest<T> {
 
-    private OkHttpClient okHttpClient;
+    OkHttpClient okHttpClient;
 
     public OkHttpSpiceRequest(Class<T> clazz) {
         super(clazz);
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java
index 5850e0980..74f176719 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java
@@ -29,12 +29,12 @@
 
     private static final int BUF_SIZE = 4096;
 
-    private String url;
-    private BitmapFactory.Options options;
-    private File cacheFile;
+    String url;
+    BitmapFactory.Options options;
+    File cacheFile;
 
-    private int height = -1;
-    private int width = -1;
+    int height = -1;
+    int width = -1;
 
     /**
      * Creates a OkHttpBitmapRequest able to fetch a {@link Bitmap} from the
@@ -154,7 +154,7 @@ protected void readBytes(final InputStream in, final ProgressByteProcessor proce
         }
     }
 
-    private static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {
+    static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {
         // Raw height and width of image
         final int height = options.outHeight;
         final int width = options.outWidth;
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java
index b6b6e48a1..70adb4e5f 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java
@@ -13,7 +13,7 @@
 
 public class OkHttpSimpleTextRequest extends OkHttpSpiceRequest<String> {
 
-    private final String url;
+    final String url;
 
     public OkHttpSimpleTextRequest(final String url) {
         super(String.class);
diff --git a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/CurrenWeather.java b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/CurrenWeather.java
index 9e679716d..9601de54c 100644
--- a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/CurrenWeather.java
+++ b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/CurrenWeather.java
@@ -7,25 +7,25 @@
 public class CurrenWeather {
 
     @DatabaseField(generatedId = true)
-    private int id;
+    int id;
 
     @DatabaseField(foreign = true, foreignAutoRefresh = true, columnName = "weather_id")
-    private Weather weather;
+    Weather weather;
 
     @DatabaseField
-    private String humidity;
+    String humidity;
     @DatabaseField
-    private String pressure;
+    String pressure;
     @DatabaseField
-    private String temp;
+    String temp;
     @DatabaseField
-    private String temp_unit;
+    String temp_unit;
     @DatabaseField
-    private String weather_code;
+    String weather_code;
     @DatabaseField
-    private String weather_text;
+    String weather_text;
 
-    private Wind wind;
+    Wind wind;
 
     public String getHumidity() {
         return this.humidity;
diff --git a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Day.java b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Day.java
index dfec44cfc..08606eab1 100644
--- a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Day.java
+++ b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Day.java
@@ -5,11 +5,11 @@
 public class Day {
 
     @DatabaseField(generatedId = true)
-    private int id;
+    int id;
 
-    private String weather_code;
-    private String weather_text;
-    private Wind wind;
+    String weather_code;
+    String weather_text;
+    Wind wind;
 
     public String getWeather_code() {
         return this.weather_code;
diff --git a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Forecast.java b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Forecast.java
index f576a6217..b2068048c 100644
--- a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Forecast.java
+++ b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Forecast.java
@@ -7,17 +7,17 @@
 public class Forecast {
 
     @DatabaseField(generatedId = true)
-    private int id;
+    int id;
 
     @DatabaseField(foreign = true, foreignAutoRefresh = true, columnName = "weather_id")
-    private Weather weather;
-
-    private String date;
-    private List<Day> listDay;
-    private String day_max_temp;
-    private List<Night> listNight;
-    private String night_min_temp;
-    private String temp_unit;
+    Weather weather;
+
+    String date;
+    List<Day> listDay;
+    String day_max_temp;
+    List<Night> listNight;
+    String night_min_temp;
+    String temp_unit;
 
     public String getDate() {
         return this.date;
diff --git a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Night.java b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Night.java
index d7606bfda..0e8e29db6 100644
--- a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Night.java
+++ b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Night.java
@@ -5,10 +5,10 @@
 public class Night {
 
     @DatabaseField(generatedId = true)
-    private int id;
-    private String weather_code;
-    private String weather_text;
-    private Wind wind;
+    int id;
+    String weather_code;
+    String weather_text;
+    Wind wind;
 
     public String getWeather_code() {
         return this.weather_code;
diff --git a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Weather.java b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Weather.java
index b6ca59013..04c39d277 100644
--- a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Weather.java
+++ b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Weather.java
@@ -9,15 +9,15 @@
 public class Weather {
 
     @DatabaseField(generatedId = true)
-    private int id;
+    int id;
 
     @DatabaseField
-    private String emptyField;
+    String emptyField;
 
     @ForeignCollectionField(eager = false)
-    private Collection<CurrenWeather> listWeather;
+    Collection<CurrenWeather> listWeather;
     @ForeignCollectionField(eager = false)
-    private Collection<Forecast> listForecast;
+    Collection<Forecast> listForecast;
 
     public Weather() {
     }
diff --git a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Wind.java b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Wind.java
index a38539e71..241c4fe74 100644
--- a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Wind.java
+++ b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/ormlite/test/model/Wind.java
@@ -5,11 +5,11 @@
 public class Wind {
 
     @DatabaseField(generatedId = true)
-    private int id;
-    private String dir;
-    private String dir_degree;
-    private String speed;
-    private String wind_unit;
+    int id;
+    String dir;
+    String dir_degree;
+    String speed;
+    String wind_unit;
 
     public String getDir() {
         return this.dir;
diff --git a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/persistence/ormlite/InDatabaseWeatherPersisterTest.java b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/persistence/ormlite/InDatabaseWeatherPersisterTest.java
index c6a43f8ec..ab1f3a1ea 100644
--- a/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/persistence/ormlite/InDatabaseWeatherPersisterTest.java
+++ b/robospice-ormlite/src/androidTest/java/com/octo/android/robospice/persistence/ormlite/InDatabaseWeatherPersisterTest.java
@@ -18,7 +18,7 @@
 
 @SmallTest
 public class InDatabaseWeatherPersisterTest extends InstrumentationTestCase {
-    private ObjectPersister<Weather> dataPersistenceManager;
+    ObjectPersister<Weather> dataPersistenceManager;
     private static final CurrenWeather TEST_TEMP = new CurrenWeather();
     private static final CurrenWeather TEST_TEMP2 = new CurrenWeather();
     private static final int CACHE_KEY = 1;
@@ -171,7 +171,7 @@ public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed(
         assertFalse(listWeatherResult.contains(weatherRequestStatus2));
     }
 
-    private Weather buildWeather(int id, CurrenWeather currenWeather) {
+    Weather buildWeather(int id, CurrenWeather currenWeather) {
         Weather weather = new Weather();
         weather.setId(id);
         List<CurrenWeather> currents = new ArrayList<CurrenWeather>();
diff --git a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/CacheEntry.java b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/CacheEntry.java
index f3cc36a84..d050de6d6 100644
--- a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/CacheEntry.java
+++ b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/CacheEntry.java
@@ -7,28 +7,28 @@
 public class CacheEntry {
 
     @DatabaseField(id = true)
-    private String cacheKey;
+    String cacheKey;
     @DatabaseField
-    private String resultClassName;
+    String resultClassName;
     @DatabaseField
-    private long timestamp;
+    long timestamp;
 
     @DatabaseField
-    private String resultIdString;
+    String resultIdString;
     @DatabaseField
-    private Character resultIdChar;
+    Character resultIdChar;
     @DatabaseField
-    private Byte resultIdByte;
+    Byte resultIdByte;
     @DatabaseField
-    private Short resultIdShort;
+    Short resultIdShort;
     @DatabaseField
-    private Integer resultIdInteger;
+    Integer resultIdInteger;
     @DatabaseField
-    private Long resultIdLong;
+    Long resultIdLong;
     @DatabaseField
-    private Float resultIdFloat;
+    Float resultIdFloat;
     @DatabaseField
-    private Double resultIdDouble;
+    Double resultIdDouble;
 
     public CacheEntry() {
 
@@ -41,7 +41,7 @@ public CacheEntry(String cacheKey, long timestamp, Class<?> resultClass, Object
         fillResultId(resultId);
     }
 
-    private void fillResultId(Object id) {
+    void fillResultId(Object id) {
 
         if (id instanceof String) {
             resultIdString = (String) id;
diff --git a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/ContractHelper.java b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/ContractHelper.java
index 288b012be..791ed0f03 100644
--- a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/ContractHelper.java
+++ b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/ContractHelper.java
@@ -14,8 +14,8 @@
  * @author SNI
  */
 public final class ContractHelper {
-    private ContractHelper() {
-        // utility class private constructor
+    ContractHelper() {
+        // utility class constructor
     }
 
     public static Map<Class<?>, Uri> getContractClasses(List<Class<?>> classList) {
diff --git a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersister.java b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersister.java
index 269888269..8ffdbf819 100755
--- a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersister.java
+++ b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersister.java
@@ -33,10 +33,10 @@
 
 public class InDatabaseObjectPersister<T, ID> extends ObjectPersister<T> {
 
-    private RoboSpiceDatabaseHelper databaseHelper;
-    private RuntimeExceptionDao<T, ID> dao;
-    private Map<Class<?>, Uri> mapHandledClassesToNotificationUri;
-    private Map<Class<?>, DatabaseTableConfig> mTableConfigs = new HashMap<Class<?>, DatabaseTableConfig>();
+    RoboSpiceDatabaseHelper databaseHelper;
+    RuntimeExceptionDao<T, ID> dao;
+    Map<Class<?>, Uri> mapHandledClassesToNotificationUri;
+    Map<Class<?>, DatabaseTableConfig> mTableConfigs = new HashMap<Class<?>, DatabaseTableConfig>();
 
 
     /**
diff --git a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersisterFactory.java b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersisterFactory.java
index 99fd14620..c5cd59ffb 100755
--- a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersisterFactory.java
+++ b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/InDatabaseObjectPersisterFactory.java
@@ -16,9 +16,9 @@
 
 public class InDatabaseObjectPersisterFactory extends ObjectPersisterFactory {
 
-    private RoboSpiceDatabaseHelper databaseHelper;
-    private boolean isAllTableCreated = false;
-    private Map<Class<?>, Uri> mapHandledClassesToNotificationUri;
+    RoboSpiceDatabaseHelper databaseHelper;
+    boolean isAllTableCreated = false;
+    Map<Class<?>, Uri> mapHandledClassesToNotificationUri;
 
     public InDatabaseObjectPersisterFactory(Application application, RoboSpiceDatabaseHelper databaseHelper, Map<Class<?>, Uri> mapHandledClassesToNotificationUri) {
         super(application, new ArrayList<Class<?>>(mapHandledClassesToNotificationUri.keySet()));
@@ -43,7 +43,7 @@ public InDatabaseObjectPersisterFactory(Application application, RoboSpiceDataba
         }
     }
 
-    private void createTableIfNotExists(Class<?> clazz) {
+    void createTableIfNotExists(Class<?> clazz) {
         try {
             TableUtils.createTableIfNotExists(databaseHelper.getConnectionSource(), clazz);
         } catch (SQLException e) {
@@ -51,7 +51,7 @@ private void createTableIfNotExists(Class<?> clazz) {
         }
     }
 
-    private void initializeTablesIfNeeded() {
+    void initializeTablesIfNeeded() {
         if (!isAllTableCreated) {
             createTableIfNotExists(CacheEntry.class);
 
diff --git a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/RoboSpiceDatabaseHelper.java b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/RoboSpiceDatabaseHelper.java
index b624e6846..6008e6d09 100644
--- a/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/RoboSpiceDatabaseHelper.java
+++ b/robospice-ormlite/src/main/java/com/octo/android/robospice/persistence/ormlite/RoboSpiceDatabaseHelper.java
@@ -113,7 +113,7 @@ public CacheEntry queryCacheKeyForIdFromDatabase(String id) throws SQLException
         }
     }
 
-    private <T> void clearTable(Class<T> clazz) throws SQLException {
+    <T> void clearTable(Class<T> clazz) throws SQLException {
         for (Field field : clazz.getDeclaredFields()) {
             ForeignCollectionField annotation = field.getAnnotation(ForeignCollectionField.class);
             if (annotation != null) {
diff --git a/robospice-retrofit/build.gradle b/robospice-retrofit/build.gradle
index 6985a42df..5d98b50ed 100644
--- a/robospice-retrofit/build.gradle
+++ b/robospice-retrofit/build.gradle
@@ -19,8 +19,6 @@ android {
         versionName '1414'
 
         testInstrumentationRunner "android.test.InstrumentationTestRunner"
-
-        consumerProguardFiles 'proguard.pro'
     }
 
     buildTypes {
@@ -38,8 +36,7 @@ android {
 dependencies {
     compile project(':robospice-core')
 
-    compile group: 'com.squareup.retrofit', name: 'retrofit', version: '1.6.1'
-    compile group: 'com.squareup.retrofit', name: 'converter-jackson', version: '1.6.1'
+    compile 'com.squareup.retrofit:retrofit:1.9.0'
 
     androidTestCompile 'com.google.mockwebserver:mockwebserver:20130706'
     androidTestCompile 'junit:junit:4.12'
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/persistence/retrofit/JsonObjectPersisterFactoryTest.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/persistence/retrofit/JsonObjectPersisterFactoryTest.java
index baf00a001..cbff40847 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/persistence/retrofit/JsonObjectPersisterFactoryTest.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/persistence/retrofit/JsonObjectPersisterFactoryTest.java
@@ -21,7 +21,7 @@
     private static final String TEST_TEMP = "28";
     private static final String TEST_TEMP2 = "30";
     private static final long SMALL_THREAD_SLEEP = 50;
-    private InFileObjectPersister<WeatherResult> inFileObjectPersister;
+    InFileObjectPersister<WeatherResult> inFileObjectPersister;
 
     @Override
     protected void setUp() throws Exception {
@@ -166,7 +166,7 @@ public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed(
         assertFalse(listWeatherResult.contains(weatherRequestStatus2));
     }
 
-    private WeatherResult buildWeather(String temp, String tempUnit) {
+    WeatherResult buildWeather(String temp, String tempUnit) {
         WeatherResult weatherRequestStatus = new WeatherResult();
         Weather weather = new Weather();
         List<Curren_weather> currents = new ArrayList<Curren_weather>();
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitGsonSpiceServiceTest.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitGsonSpiceServiceTest.java
index 7b4e956e5..2cd5e6256 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitGsonSpiceServiceTest.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitGsonSpiceServiceTest.java
@@ -16,7 +16,7 @@
 
     private static final int REQUEST_COMPLETION_TIMEOUT = 1000;
     private static final long SMALL_THREAD_SLEEP = 50;
-    private SpiceManager spiceManager;
+    SpiceManager spiceManager;
 
     public RetrofitGsonSpiceServiceTest() {
         super(RetrofitGsonSpiceTestService.class);
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitJackson2SpiceServiceTest.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitJackson2SpiceServiceTest.java
index 9cba297fc..395859a3d 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitJackson2SpiceServiceTest.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/RetrofitJackson2SpiceServiceTest.java
@@ -15,7 +15,7 @@
 
     private static final int REQUEST_COMPLETION_TIMEOUT = 1000;
     private static final long SMALL_THREAD_SLEEP = 50;
-    private SpiceManager spiceManager;
+    SpiceManager spiceManager;
 
     public RetrofitJackson2SpiceServiceTest() {
         super(RetrofitJackson2SpiceTestService.class);
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Curren_weather.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Curren_weather.java
index e8bc6af45..6ce638c88 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Curren_weather.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Curren_weather.java
@@ -3,13 +3,13 @@
 import java.util.List;
 
 public class Curren_weather {
-    private String humidity;
-    private String pressure;
-    private String temp;
-    private String temp_unit;
-    private String weather_code;
-    private String weather_text;
-    private List<Wind> wind;
+    String humidity;
+    String pressure;
+    String temp;
+    String temp_unit;
+    String weather_code;
+    String weather_text;
+    List<Wind> wind;
 
     public String getHumidity() {
         return this.humidity;
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Day.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Day.java
index 78ecfbe69..fc7c39fcf 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Day.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Day.java
@@ -3,9 +3,9 @@
 import java.util.List;
 
 public class Day {
-    private String weather_code;
-    private String weather_text;
-    private List<Wind> wind;
+    String weather_code;
+    String weather_text;
+    List<Wind> wind;
 
     public String getWeather_code() {
         return this.weather_code;
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Forecast.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Forecast.java
index 9e8e53584..fb9326a0d 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Forecast.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Forecast.java
@@ -3,12 +3,12 @@
 import java.util.List;
 
 public class Forecast {
-    private String date;
-    private List<Day> day;
-    private String day_max_temp;
-    private List<Day> night;
-    private String night_min_temp;
-    private String temp_unit;
+    String date;
+    List<Day> day;
+    String day_max_temp;
+    List<Day> night;
+    String night_min_temp;
+    String temp_unit;
 
     public String getDate() {
         return this.date;
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Weather.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Weather.java
index 9f46e6c94..96ea983a8 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Weather.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Weather.java
@@ -4,8 +4,8 @@
 
 public class Weather {
 
-    private List<Curren_weather> curren_weather;
-    private List<Forecast> forecast;
+    List<Curren_weather> curren_weather;
+    List<Forecast> forecast;
 
     public Weather() {
     }
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/WeatherResult.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/WeatherResult.java
index 418b649c0..7cb800af8 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/WeatherResult.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/WeatherResult.java
@@ -1,8 +1,8 @@
 package com.octo.android.robospice.retrofit.test.model;
 
 public class WeatherResult {
-    private Weather weather;
-    private int id = 1;
+    Weather weather;
+    int id = 1;
 
     public Weather getWeather() {
         return this.weather;
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Wind.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Wind.java
index 84f9eb529..57a1087b0 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Wind.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/model/Wind.java
@@ -1,9 +1,9 @@
 package com.octo.android.robospice.retrofit.test.model;
 
 public class Wind {
-    private String dir;
-    private String speed;
-    private String wind_unit;
+    String dir;
+    String speed;
+    String wind_unit;
 
     public String getDir() {
         return this.dir;
diff --git a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/stub/RetrofitSpiceRequestStub.java b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/stub/RetrofitSpiceRequestStub.java
index 80e6bda47..2c9fb5456 100644
--- a/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/stub/RetrofitSpiceRequestStub.java
+++ b/robospice-retrofit/src/androidTest/java/com/octo/android/robospice/retrofit/test/stub/RetrofitSpiceRequestStub.java
@@ -8,8 +8,8 @@
 import com.octo.android.robospice.retrofit.test.model.WeatherResult;
 
 public class RetrofitSpiceRequestStub extends RetrofitSpiceRequest<WeatherResult, FakeWeatherService> {
-    private ReentrantLock reentrantLock = new ReentrantLock();
-    private Condition loadDataFromNetworkHasBeenExecuted = reentrantLock.newCondition();
+    ReentrantLock reentrantLock = new ReentrantLock();
+    Condition loadDataFromNetworkHasBeenExecuted = reentrantLock.newCondition();
 
     public RetrofitSpiceRequestStub(Class<WeatherResult> clazz) {
         super(clazz, FakeWeatherService.class);
diff --git a/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java b/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java
index 2892a38e3..95ea59ba0 100644
--- a/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java
+++ b/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java
@@ -27,7 +27,7 @@
     // ATTRIBUTES
     // ============================================================================================
 
-    private final Converter converter;
+    final Converter converter;
 
     // ============================================================================================
     // CONSTRUCTOR
@@ -75,7 +75,7 @@ public void run() {
         return data;
     }
 
-    private void saveData(T data, Object cacheKey) throws IOException, CacheSavingException {
+    void saveData(T data, Object cacheKey) throws IOException, CacheSavingException {
         // transform the content in json to store it in the cache
         TypedOutput typedBytes = converter.toBody(data);
         FileOutputStream out = null;
diff --git a/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersisterFactory.java b/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersisterFactory.java
index 2df296a90..212c8959a 100644
--- a/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersisterFactory.java
+++ b/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersisterFactory.java
@@ -15,7 +15,7 @@
     // ----------------------------------
     // ATTRIBUTES
     // ----------------------------------
-    private Converter converter;
+    Converter converter;
 
     // ----------------------------------
     // CONSTRUCTORS
diff --git a/robospice-retrofit/src/main/java/com/octo/android/robospice/request/retrofit/RetrofitSpiceRequest.java b/robospice-retrofit/src/main/java/com/octo/android/robospice/request/retrofit/RetrofitSpiceRequest.java
index 338dc9ad3..e65fc5afa 100644
--- a/robospice-retrofit/src/main/java/com/octo/android/robospice/request/retrofit/RetrofitSpiceRequest.java
+++ b/robospice-retrofit/src/main/java/com/octo/android/robospice/request/retrofit/RetrofitSpiceRequest.java
@@ -13,8 +13,8 @@
  */
 public abstract class RetrofitSpiceRequest<T, R> extends SpiceRequest<T> {
 
-    private Class<R> retrofitedInterfaceClass;
-    private R service;
+    Class<R> retrofitedInterfaceClass;
+    R service;
 
     public RetrofitSpiceRequest(Class<T> clazz, Class<R> retrofitedInterfaceClass) {
         super(clazz);
diff --git a/robospice-retrofit/src/main/java/com/octo/android/robospice/retrofit/RetrofitSpiceService.java b/robospice-retrofit/src/main/java/com/octo/android/robospice/retrofit/RetrofitSpiceService.java
index c0baa9eab..78bb37236 100644
--- a/robospice-retrofit/src/main/java/com/octo/android/robospice/retrofit/RetrofitSpiceService.java
+++ b/robospice-retrofit/src/main/java/com/octo/android/robospice/retrofit/RetrofitSpiceService.java
@@ -16,11 +16,11 @@
 
 public abstract class RetrofitSpiceService extends SpiceService {
 
-    private Map<Class<?>, Object> retrofitInterfaceToServiceMap = new HashMap<Class<?>, Object>();
-    private RestAdapter.Builder builder;
-    private RestAdapter restAdapter;
+    Map<Class<?>, Object> retrofitInterfaceToServiceMap = new HashMap<Class<?>, Object>();
+    RestAdapter.Builder builder;
+    RestAdapter restAdapter;
     protected List<Class<?>> retrofitInterfaceList = new ArrayList<Class<?>>();
-    private Converter mConverter;
+    Converter mConverter;
 
     @Override
     public void onCreate() {
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/SpringAndroidSpiceServiceTest.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/SpringAndroidSpiceServiceTest.java
index e0e9f5ae8..cbdef9c4a 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/SpringAndroidSpiceServiceTest.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/SpringAndroidSpiceServiceTest.java
@@ -15,7 +15,7 @@
 
     private static final int REQUEST_COMPLETION_TIMEOUT = 1000;
     private static final long SMALL_THREAD_SLEEP = 50;
-    private SpiceManager spiceManager;
+    SpiceManager spiceManager;
 
     public SpringAndroidSpiceServiceTest() {
         super(SpringAndroidTestService.class);
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/gson/InFileWeatherPersisterTest.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/gson/InFileWeatherPersisterTest.java
index 44498564f..f8c43f409 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/gson/InFileWeatherPersisterTest.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/gson/InFileWeatherPersisterTest.java
@@ -22,7 +22,7 @@
     private static final String TEST_TEMP2 = "30"; // still sunny
     private static final String FILE_NAME = "toto";
     private static final String FILE_NAME2 = "tutu";
-    private InFileObjectPersister<WeatherResult> dataPersistenceManager;
+    InFileObjectPersister<WeatherResult> dataPersistenceManager;
 
     @Override
     protected void setUp() throws Exception {
@@ -162,7 +162,7 @@ public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed(
         assertFalse(listWeatherResult.contains(weatherRequestStatus2));
     }
 
-    private WeatherResult buildWeather(String temp, String tempUnit) {
+    WeatherResult buildWeather(String temp, String tempUnit) {
         WeatherResult weatherRequestStatus = new WeatherResult();
         Weather weather = new Weather();
         List<CurrenWeather> currents = new ArrayList<CurrenWeather>();
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson/InFileWeatherPersisterTest.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson/InFileWeatherPersisterTest.java
index 5bb796d25..8287cfdbf 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson/InFileWeatherPersisterTest.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson/InFileWeatherPersisterTest.java
@@ -22,7 +22,7 @@
     private static final String TEST_TEMP2 = "30";
     private static final String FILE_NAME = "toto";
     private static final String FILE_NAME2 = "tutu";
-    private InFileObjectPersister<WeatherResult> dataPersistenceManager;
+    InFileObjectPersister<WeatherResult> dataPersistenceManager;
 
     @Override
     protected void setUp() throws Exception {
@@ -163,7 +163,7 @@ public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed(
         assertFalse(listWeatherResult.contains(weatherRequestStatus2));
     }
 
-    private WeatherResult buildWeather(String temp, String tempUnit) {
+    WeatherResult buildWeather(String temp, String tempUnit) {
         WeatherResult weatherRequestStatus = new WeatherResult();
         Weather weather = new Weather();
         List<CurrenWeather> currents = new ArrayList<CurrenWeather>();
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/InFileWeatherPersisterTest.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/InFileWeatherPersisterTest.java
index 9613f1684..52b1da7bb 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/InFileWeatherPersisterTest.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/InFileWeatherPersisterTest.java
@@ -22,7 +22,7 @@
     private static final String TEST_TEMP2 = "30";
     private static final String FILE_NAME = "toto";
     private static final String FILE_NAME2 = "tutu";
-    private InFileObjectPersister<WeatherResult> dataPersistenceManager;
+    InFileObjectPersister<WeatherResult> dataPersistenceManager;
 
     @Override
     protected void setUp() throws Exception {
@@ -163,7 +163,7 @@ public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed(
         assertFalse(listWeatherResult.contains(weatherRequestStatus2));
     }
 
-    private WeatherResult buildWeather(String temp, String tempUnit) {
+    WeatherResult buildWeather(String temp, String tempUnit) {
         WeatherResult weatherRequestStatus = new WeatherResult();
         Weather weather = new Weather();
         List<CurrenWeather> currents = new ArrayList<CurrenWeather>();
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/xml/InFileWeatherPersisterTest.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/xml/InFileWeatherPersisterTest.java
index 9fc6f1046..ebfc9c63a 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/xml/InFileWeatherPersisterTest.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/persistence/springandroid/xml/InFileWeatherPersisterTest.java
@@ -17,7 +17,7 @@
 @SmallTest
 public class InFileWeatherPersisterTest extends AndroidTestCase {
     private static final long FIVE_SECONDS = 5 * DurationInMillis.ONE_SECOND;
-    private InFileObjectPersister<Weather> dataPersistenceManager;
+    InFileObjectPersister<Weather> dataPersistenceManager;
     private static final String FILE_NAME = "toto";
     private static final String FILE_NAME2 = "tutu";
     private static final Curren_weather TEST_TEMP = new Curren_weather();
@@ -168,7 +168,7 @@ public void test_removeDataFromCache_when_two_requests_in_cache_and_one_removed(
         assertFalse(listWeatherResult.contains(weatherRequestStatus2));
     }
 
-    private Weather buildWeather(Curren_weather curren_weather) {
+    Weather buildWeather(Curren_weather curren_weather) {
         Weather weather = new Weather();
         List<Curren_weather> currents = new ArrayList<Curren_weather>();
         currents.add(curren_weather);
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/CurrenWeather.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/CurrenWeather.java
index e0f1038e9..235f85841 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/CurrenWeather.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/CurrenWeather.java
@@ -6,13 +6,13 @@
 
 @JsonIgnoreProperties(ignoreUnknown = true)
 public class CurrenWeather {
-    private String humidity;
-    private String pressure;
-    private String temp;
-    private String temp_unit;
-    private String weather_code;
-    private String weather_text;
-    private List<Wind> wind;
+    String humidity;
+    String pressure;
+    String temp;
+    String temp_unit;
+    String weather_code;
+    String weather_text;
+    List<Wind> wind;
 
     public String getHumidity() {
         return this.humidity;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Day.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Day.java
index cd98cfee9..7e1213d5a 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Day.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Day.java
@@ -6,9 +6,9 @@
 
 @JsonIgnoreProperties(ignoreUnknown = true)
 public class Day {
-    private String weather_code;
-    private String weather_text;
-    private List<Wind> wind;
+    String weather_code;
+    String weather_text;
+    List<Wind> wind;
 
     public String getWeather_code() {
         return this.weather_code;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Forecast.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Forecast.java
index 140949d87..63676ffd5 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Forecast.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Forecast.java
@@ -6,12 +6,12 @@
 
 @JsonIgnoreProperties(ignoreUnknown = true)
 public class Forecast {
-    private String date;
-    private List<Day> day;
-    private String day_max_temp;
-    private List<Day> night;
-    private String night_min_temp;
-    private String temp_unit;
+    String date;
+    List<Day> day;
+    String day_max_temp;
+    List<Day> night;
+    String night_min_temp;
+    String temp_unit;
 
     public String getDate() {
         return this.date;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Weather.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Weather.java
index b2e4201be..234d7d50a 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Weather.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Weather.java
@@ -7,8 +7,8 @@
 @JsonIgnoreProperties(ignoreUnknown = true)
 public class Weather {
 
-    private List<CurrenWeather> currenWeather;
-    private List<Forecast> forecast;
+    List<CurrenWeather> currenWeather;
+    List<Forecast> forecast;
 
     public Weather() {
     }
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/WeatherResult.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/WeatherResult.java
index ba92d36c7..402865ac8 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/WeatherResult.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/WeatherResult.java
@@ -1,9 +1,9 @@
 package com.octo.android.robospice.springandroid.test.model.json;
 
 public class WeatherResult {
-    private Weather weather;
+    Weather weather;
 
-    private int id = 1;
+    int id = 1;
 
     String string = "a";
 
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Wind.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Wind.java
index 0140affc9..e7609319b 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Wind.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/json/Wind.java
@@ -4,9 +4,9 @@
 
 @JsonIgnoreProperties(ignoreUnknown = true)
 public class Wind {
-    private String dir;
-    private String speed;
-    private String wind_unit;
+    String dir;
+    String speed;
+    String wind_unit;
 
     public String getDir() {
         return this.dir;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Curren_weather.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Curren_weather.java
index 1689ddb69..467e7a18c 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Curren_weather.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Curren_weather.java
@@ -4,23 +4,23 @@
 
 public class Curren_weather {
 
-    private int id;
+    int id;
 
     @Element(required = false)
-    private String humidity;
+    String humidity;
     @Element(required = false)
-    private String pressure;
+    String pressure;
     @Element(required = false)
-    private String temp;
+    String temp;
     @Element(required = false)
-    private String temp_unit;
+    String temp_unit;
     @Element(required = false)
-    private String weather_code;
+    String weather_code;
     @Element(required = false)
-    private String weather_text;
+    String weather_text;
 
     @Element(required = false)
-    private Wind wind;
+    Wind wind;
 
     public String getHumidity() {
         return this.humidity;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Day.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Day.java
index 4c012ba67..b68512ec0 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Day.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Day.java
@@ -4,15 +4,15 @@
 
 public class Day {
 
-    private int id;
+    int id;
 
     @Element
-    private String weather_code;
+    String weather_code;
     @Element
-    private String weather_text;
+    String weather_text;
 
     @Element
-    private Wind wind;
+    Wind wind;
 
     public String getWeather_code() {
         return this.weather_code;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Forecast.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Forecast.java
index f5c644293..80b3a246d 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Forecast.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Forecast.java
@@ -7,20 +7,20 @@
 
 public class Forecast {
 
-    private int id;
+    int id;
 
     @Element
-    private String date;
+    String date;
     @ElementList(inline = true)
-    private List<Day> listDay;
+    List<Day> listDay;
     @Element
-    private String day_max_temp;
+    String day_max_temp;
     @ElementList(inline = true)
-    private List<Night> listNight;
+    List<Night> listNight;
     @Element
-    private String night_min_temp;
+    String night_min_temp;
     @Element
-    private String temp_unit;
+    String temp_unit;
 
     public String getDate() {
         return this.date;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Night.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Night.java
index 7e7d14f07..809bbf6c1 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Night.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Night.java
@@ -4,15 +4,15 @@
 
 public class Night {
 
-    private int id;
+    int id;
 
     @Element
-    private String weather_code;
+    String weather_code;
     @Element
-    private String weather_text;
+    String weather_text;
 
     @Element
-    private Wind wind;
+    Wind wind;
 
     public String getWeather_code() {
         return this.weather_code;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Weather.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Weather.java
index f563a0fce..861e860ed 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Weather.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Weather.java
@@ -9,14 +9,14 @@
 @Root
 public class Weather {
 
-    private int id;
+    int id;
 
-    private String emptyField;
+    String emptyField;
 
     @ElementList(inline = true, required = false)
-    private Collection<Curren_weather> listWeather;
+    Collection<Curren_weather> listWeather;
     @ElementList(inline = true, required = false)
-    private Collection<Forecast> listForecast;
+    Collection<Forecast> listForecast;
 
     public Weather() {
     }
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Wind.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Wind.java
index 0adadf262..f875536ef 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Wind.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/model/xml/Wind.java
@@ -4,16 +4,16 @@
 
 public class Wind {
 
-    private int id;
+    int id;
 
     @Element(required = false)
-    private String dir;
+    String dir;
     @Element(required = false)
-    private String dir_degree;
+    String dir_degree;
     @Element(required = false)
-    private String speed;
+    String speed;
     @Element(required = false)
-    private String wind_unit;
+    String wind_unit;
 
     public String getDir() {
         return this.dir;
diff --git a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/stub/SpringAndroidSpiceRequestStub.java b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/stub/SpringAndroidSpiceRequestStub.java
index 74bfaf18b..b9700fa4c 100644
--- a/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/stub/SpringAndroidSpiceRequestStub.java
+++ b/robospice-spring-android/src/androidTest/java/com/octo/android/robospice/springandroid/test/stub/SpringAndroidSpiceRequestStub.java
@@ -9,8 +9,8 @@
 
 public class SpringAndroidSpiceRequestStub extends
     SpringAndroidSpiceRequest<Weather> {
-    private ReentrantLock reentrantLock = new ReentrantLock();
-    private Condition loadDataFromNetworkHasBeenExecuted = reentrantLock
+    ReentrantLock reentrantLock = new ReentrantLock();
+    Condition loadDataFromNetworkHasBeenExecuted = reentrantLock
         .newCondition();
 
     public SpringAndroidSpiceRequestStub(Class<Weather> clazz) {
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/SpringAndroidSpiceService.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/SpringAndroidSpiceService.java
index 58cae53fc..fb28321b1 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/SpringAndroidSpiceService.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/SpringAndroidSpiceService.java
@@ -18,7 +18,7 @@
  */
 public abstract class SpringAndroidSpiceService extends SpiceService {
 
-    private RestTemplate restTemplate;
+    RestTemplate restTemplate;
 
     @Override
     public void onCreate() {
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java
index 0bd00f4d6..3b9143844 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java
@@ -19,7 +19,7 @@
     // ATTRIBUTES
     // ============================================================================================
 
-    private final Gson gson;
+    final Gson gson;
 
     // ============================================================================================
     // CONSTRUCTOR
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java
index a809c03a3..52fcbcf21 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java
@@ -20,7 +20,7 @@
     // ATTRIBUTES
     // ============================================================================================
 
-    private final ObjectMapper mJsonMapper;
+    final ObjectMapper mJsonMapper;
 
     // ============================================================================================
     // CONSTRUCTOR
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java
index 618df319a..a3a81f221 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java
@@ -20,7 +20,7 @@
     // ATTRIBUTES
     // ============================================================================================
 
-    private final ObjectMapper mJsonMapper;
+    final ObjectMapper mJsonMapper;
 
     // ============================================================================================
     // CONSTRUCTOR
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/xml/SimpleSerializerObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/xml/SimpleSerializerObjectPersister.java
index 7eb7eea7d..f54acc257 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/xml/SimpleSerializerObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/xml/SimpleSerializerObjectPersister.java
@@ -19,7 +19,7 @@
     // ATTRIBUTES
     // ============================================================================================
 
-    private Serializer serializer = new Persister();
+    Serializer serializer = new Persister();
 
     // ============================================================================================
     // CONSTRUCTOR
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/request/springandroid/SpringAndroidSpiceRequest.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/request/springandroid/SpringAndroidSpiceRequest.java
index 66e2b6c35..c59939fde 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/request/springandroid/SpringAndroidSpiceRequest.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/request/springandroid/SpringAndroidSpiceRequest.java
@@ -8,7 +8,7 @@
 
 public abstract class SpringAndroidSpiceRequest<RESULT> extends SpiceRequest<RESULT> {
 
-    private RestTemplate restTemplate;
+    RestTemplate restTemplate;
 
     public SpringAndroidSpiceRequest(Class<RESULT> clazz) {
         super(clazz);
diff --git a/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/SpiceListViewTest.java b/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/SpiceListViewTest.java
index 3fbbd226f..ab0ecedf2 100644
--- a/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/SpiceListViewTest.java
+++ b/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/SpiceListViewTest.java
@@ -9,8 +9,8 @@
 public class SpiceListViewTest extends InstrumentationTestCase {
 
     private static final int SCROLL_Y_AMOUNT_IN_PIXELS = 100;
-    private SpiceListView spiceListView;
-    private OnScrollListener mockOnScrollListener;
+    SpiceListView spiceListView;
+    OnScrollListener mockOnScrollListener;
 
     @Override
     protected void setUp() throws Exception {
diff --git a/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java b/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java
index 08d58107c..8a136451f 100644
--- a/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java
+++ b/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java
@@ -33,15 +33,15 @@
 
     private static final int ADAPTER_UPDATE_TIME_OUT = 3000;
 
-    private File cacheFile;
+    File cacheFile;
 
-    private MockWebServer mockWebServer;
+    MockWebServer mockWebServer;
 
-    private SpiceArrayAdapterUnderTest adapter;
-    private BitmapSpiceManager spiceManager;
-    private DataUnderTest data1;
-    private DataUnderTest data2;
-    private ArrayList<DataUnderTest> data;
+    SpiceArrayAdapterUnderTest adapter;
+    BitmapSpiceManager spiceManager;
+    DataUnderTest data1;
+    DataUnderTest data2;
+    ArrayList<DataUnderTest> data;
 
     @Override
     protected void setUp() throws Exception {
@@ -119,9 +119,9 @@ public void testGetView_fills_list_item_view_with_data_and_executes_request() th
 
     }
 
-    private class DataUnderTest {
-        private String foo;
-        private String imageUrl;
+    class DataUnderTest {
+        String foo;
+        String imageUrl;
 
         public String getFoo() {
             return foo;
@@ -141,11 +141,11 @@ public void setImageUrl(String imageUrl) {
 
     }
 
-    private class SpiceArrayAdapterUnderTest extends SpiceArrayAdapter<DataUnderTest> {
+    class SpiceArrayAdapterUnderTest extends SpiceArrayAdapter<DataUnderTest> {
 
-        private ReentrantLock reentrantLock = new ReentrantLock();
-        private Condition loadBitmapHasBeenCalledCondition = reentrantLock.newCondition();
-        private boolean loadBitmapHasBeenCalled = false;
+        ReentrantLock reentrantLock = new ReentrantLock();
+        Condition loadBitmapHasBeenCalledCondition = reentrantLock.newCondition();
+        boolean loadBitmapHasBeenCalled = false;
 
         public SpiceArrayAdapterUnderTest(Context context, BitmapSpiceManager spiceManagerBinary, List<DataUnderTest> data) {
             super(context, spiceManagerBinary, data);
@@ -191,11 +191,11 @@ public boolean isLoadBitmapHasBeenCalled() {
         }
     }
 
-    private class ListItemViewStub extends RelativeLayout implements SpiceListItemView<DataUnderTest> {
+    class ListItemViewStub extends RelativeLayout implements SpiceListItemView<DataUnderTest> {
 
-        private DataUnderTest dataUnderTest;
-        private TextView userNameTextView;
-        private ImageView thumbImageView;
+        DataUnderTest dataUnderTest;
+        TextView userNameTextView;
+        ImageView thumbImageView;
 
         public ListItemViewStub(Context context) {
             super(context);
@@ -231,7 +231,7 @@ public int getImageViewCount() {
     /**
      * Used for testing only so that we can add a custom Service that works offline for testing.
      */
-    private class BitmapSpiceManagerUnderTest extends BitmapSpiceManager {
+    class BitmapSpiceManagerUnderTest extends BitmapSpiceManager {
 
         public BitmapSpiceManagerUnderTest() {
             super(TestBigBinarySpiceService.class);
diff --git a/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/BaseSpiceArrayAdapter.java b/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/BaseSpiceArrayAdapter.java
index 65851ccc4..eddb42d97 100644
--- a/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/BaseSpiceArrayAdapter.java
+++ b/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/BaseSpiceArrayAdapter.java
@@ -60,13 +60,13 @@
     /**
      * List of event listeners to get notified of network fetching allowed changes.
      */
-    private List<NetworkFetchingAuthorizationStateChangeAdapter> networkFetchingAuthorizationStateChangeListenerList = Collections
+    List<NetworkFetchingAuthorizationStateChangeAdapter> networkFetchingAuthorizationStateChangeListenerList = Collections
             .synchronizedList(new ArrayList<NetworkFetchingAuthorizationStateChangeAdapter>());
     /**
      * Contains all images that have been added recently to the list. They will be animated when
      * first displayed.
      */
-    private Set<Object> freshDrawableSet = new HashSet<Object>();
+    Set<Object> freshDrawableSet = new HashSet<Object>();
     /** The default drawable to display during image loading from the network. */
     protected Drawable defaultDrawable;
 
@@ -98,7 +98,7 @@ public final void setDefaultDrawable(final Drawable defaultDrawable) {
         this.defaultDrawable = defaultDrawable;
     }
 
-    /* package-private */final void setNetworkFetchingAllowed(final boolean isNetworkFetchingAllowed) {
+    /* package-*/final void setNetworkFetchingAllowed(final boolean isNetworkFetchingAllowed) {
         boolean changed = isNetworkFetchingAllowed != this.isNetworkFetchingAllowed;
         this.isNetworkFetchingAllowed = isNetworkFetchingAllowed;
         if (isNetworkFetchingAllowed && changed) {
@@ -162,11 +162,11 @@ public final void performBitmapRequestAsync(final SpiceListItemView<T> spiceList
     // --- PRIVATE API
     // ----------------------------
 
-    private void addSpiceListItemView(final SpiceListItemView<T> spiceListItemView) {
+    void addSpiceListItemView(final SpiceListItemView<T> spiceListItemView) {
         this.networkFetchingAuthorizationStateChangeListenerList.add(new NetworkFetchingAuthorizationStateChangeAdapter(spiceListItemView));
     }
 
-    private boolean registered(final SpiceListItemView<T> view) {
+    boolean registered(final SpiceListItemView<T> view) {
         for (NetworkFetchingAuthorizationStateChangeAdapter listener : networkFetchingAuthorizationStateChangeListenerList) {
             if (listener.getView() == view) {
                 return true;
@@ -175,7 +175,7 @@ private boolean registered(final SpiceListItemView<T> view) {
         return false;
     }
 
-    private void fireOnNetworkFetchingAllowedChange() {
+    void fireOnNetworkFetchingAllowedChange() {
         synchronized (networkFetchingAuthorizationStateChangeListenerList) {
             for (NetworkFetchingAuthorizationStateChangeAdapter networkFetchingAuthorizationStateChangeListener : networkFetchingAuthorizationStateChangeListenerList) {
                 Ln.d("calling state change listener");
@@ -184,7 +184,7 @@ private void fireOnNetworkFetchingAllowedChange() {
         }
     }
 
-    private void initialize(final Context context, final SpiceManager spiceManagerBinary) {
+    void initialize(final Context context, final SpiceManager spiceManagerBinary) {
         this.spiceManagerBinary = spiceManagerBinary;
         defaultDrawable = context.getResources().getDrawable(android.R.drawable.picture_frame);
     }
@@ -195,10 +195,10 @@ private void initialize(final Context context, final SpiceManager spiceManagerBi
 
     protected class ImageRequestListener implements RequestListener<Bitmap> {
 
-        private SpiceListItemView<T> spiceListItemView;
-        private T data;
-        private ImageView thumbImageView;
-        private String imageFileName;
+        SpiceListItemView<T> spiceListItemView;
+        T data;
+        ImageView thumbImageView;
+        String imageFileName;
 
         public ImageRequestListener(final T data, final SpiceListItemView<T> spiceListItemView, final int imageIndex, final String imageFileName) {
             this.data = data;
@@ -241,7 +241,7 @@ protected void loadBitmapAsynchronously(final T octo, final ImageView thumbImage
         }
     }
 
-    private boolean cancelPotentialWork(final String fileName, final ImageView imageView) {
+    boolean cancelPotentialWork(final String fileName, final ImageView imageView) {
         final BitmapWorkerTask bitmapWorkerTask = getBitmapWorkerTask(imageView);
 
         if (bitmapWorkerTask != null) {
@@ -276,11 +276,11 @@ protected final BitmapWorkerTask getBitmapWorkerTask(final ImageView imageView)
     // ----------------------------------
     protected class ThumbnailAsynTask extends AsyncTask<Object, Void, Boolean> {
 
-        private T data;
-        private SpiceListItemView<T> spiceListItemView;
-        private String tempThumbnailImageFileName = "";
-        private IBitmapRequest bitmapRequest;
-        private int imageIndex;
+        T data;
+        SpiceListItemView<T> spiceListItemView;
+        String tempThumbnailImageFileName = "";
+        IBitmapRequest bitmapRequest;
+        int imageIndex;
 
         public ThumbnailAsynTask(final IBitmapRequest request) {
             this.bitmapRequest = request;
@@ -320,11 +320,11 @@ protected final void onPostExecute(final Boolean isImageAvailableInCache) {
         }
     }
 
-    private class BitmapWorkerTask extends AsyncTask<String, Void, Drawable> {
+    class BitmapWorkerTask extends AsyncTask<String, Void, Drawable> {
 
-        private final WeakReference<ImageView> imageViewReference;
+        final WeakReference<ImageView> imageViewReference;
         String fileName = "";
-        private T data;
+        T data;
 
         public BitmapWorkerTask(final ImageView imageView, final T data) {
             // Use a WeakReference to ensure the ImageView can be garbage
@@ -366,9 +366,9 @@ protected void onPostExecute(Drawable drawable) {
 
     }
 
-    private class NetworkFetchingAuthorizationStateChangeAdapter {
+    class NetworkFetchingAuthorizationStateChangeAdapter {
 
-        private WeakReference<SpiceListItemView<T>> weakReferenceSpiceListItemView;
+        WeakReference<SpiceListItemView<T>> weakReferenceSpiceListItemView;
 
         public NetworkFetchingAuthorizationStateChangeAdapter(final SpiceListItemView<T> spiceListItemView) {
             this.weakReferenceSpiceListItemView = new WeakReference<SpiceListItemView<T>>(spiceListItemView);
@@ -389,8 +389,8 @@ public void onNetworkFetchingAllowedChange(final boolean networkFetchingAllowed)
         }
     }
 
-    private class AsyncDrawable extends BitmapDrawable {
-        private final WeakReference<BitmapWorkerTask> bitmapWorkerTaskReference;
+    class AsyncDrawable extends BitmapDrawable {
+        final WeakReference<BitmapWorkerTask> bitmapWorkerTaskReference;
 
         public AsyncDrawable(final Resources res, final BitmapWorkerTask bitmapWorkerTask) {
             super(res);
diff --git a/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/SpiceListView.java b/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/SpiceListView.java
index 8e4e70660..5837e202c 100644
--- a/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/SpiceListView.java
+++ b/robospice-ui-spicelist/src/main/java/com/octo/android/robospice/spicelist/SpiceListView.java
@@ -18,7 +18,7 @@
  */
 public class SpiceListView extends ListView {
 
-    /*package-private for tests*/ final SpiceListScrollListener onScrollListener = new SpiceListScrollListener();
+    /*package-for tests*/ final SpiceListScrollListener onScrollListener = new SpiceListScrollListener();
 
     // ----------------------------
     // --- CONSTRUCTORS
@@ -78,18 +78,18 @@ public void setAdapter(ListAdapter adapter) {
     // ----------------------------
     // --- PRIVATE API
     // ----------------------------
-    private void initialize() {
+    void initialize() {
         super.setOnScrollListener(onScrollListener);
     }
 
     // ----------------------------
     // --- INNER CLASS API
     // ----------------------------
-    /*package-private for tests*/ final class SpiceListScrollListener implements OnScrollListener {
+    /*package-for tests*/ final class SpiceListScrollListener implements OnScrollListener {
 
-        private OnScrollListener wrappedListener;
+        OnScrollListener wrappedListener;
 
-        private void setWrappedListener(OnScrollListener l) {
+        void setWrappedListener(OnScrollListener l) {
             this.wrappedListener = l;
         }
 
