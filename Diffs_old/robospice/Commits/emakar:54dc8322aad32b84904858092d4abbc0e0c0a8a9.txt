diff --git a/pom.xml b/pom.xml
deleted file mode 100644
index 5acf42fd2..000000000
--- a/pom.xml
+++ /dev/null
@@ -1,667 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-	<modelVersion>4.0.0</modelVersion>
-
-	<!-- Sonatype config to publish on Maven Central -->
-	<parent>
-		<groupId>org.sonatype.oss</groupId>
-		<artifactId>oss-parent</artifactId>
-		<version>7</version>
-	</parent>
-
-        <prerequisites>
-                <maven>3.1.1</maven>
-        </prerequisites>
-
-	<groupId>com.octo.android.robospice</groupId>
-	<artifactId>robospice-parent</artifactId>
-	<version>1.4.14</version>
-	<packaging>pom</packaging>
-	<name>Robospice - Parent</name>
-	<description>RoboSpice is a modular android library that eases the development of Data-Driven Android applications.</description>
-	<url>https://github.com/stephanenicolas/robospice</url>
-	<inceptionYear>2012</inceptionYear>
-
-	<scm>
-		<connection>scm:git:ssh://git@github.com/stephanenicolas/robospice.git</connection>
-		<url>git:ssh://git@github.com/stephanenicolas/robospice.git</url>
-		<developerConnection>scm:git:ssh://git@github.com/stephanenicolas/robospice.git</developerConnection>
-		<tag>robospice-parent-1.4.14</tag>
-	</scm>
-
-	<licenses>
-		<license>
-			<name>Apache 2</name>
-			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
-		</license>
-	</licenses>
-
-	<issueManagement>
-		<system>Github Issue Tracker</system>
-		<url>https://github.com/stephanenicolas/robospice/issues</url>
-	</issueManagement>
-
-	<developers>
-		<developer>
-			<id>SNI</id>
-			<name>Stéphane Nicolas</name>
-			<email>steff.nicolas@gmail.com</email>
-		</developer>
-		<developer>
-			<id>VDL</id>
-			<name>Jérôme Van Der Linden</name>
-			<email>jvanderlinden@octo.com</email>
-		</developer>
-		<developer>
-			<id>MWA</id>
-			<name>Maxence Walbrou</name>
-			<email>mwalbrou@octo.com</email>
-		</developer>
-		<developer>
-			<id>MHA</id>
-			<name>Mathieu Hausherr</name>
-			<email>mhausherr@octo.com</email>
-		</developer>
-		<developer>
-			<id>RCI</id>
-			<name>Riccardo Ciovati</name>
-			<email>rciovati@gmail.com</email>
-		</developer>
-	</developers>
-
-	<mailingLists>
-		<mailingList>
-			<name>RoboSpice Forum/Mailinglist</name>
-			<post>http://groups.google.com/group/robospice</post>
-			<subscribe>http://groups.google.com/group/robospice/subscribe</subscribe>
-			<unsubscribe>https://groups.google.com/group/robospice/subscribe</unsubscribe>
-		</mailingList>
-	</mailingLists>
-
-	<ciManagement>
-		<system>travis</system>
-		<url>https://travis-ci.org/stephanenicolas/robospice</url>
-	</ciManagement>
-
-	<modules>
-		<module>robospice-cache-parent</module>
-		<module>robospice-core-parent</module>
-
-		<module>extensions/robospice-spring-android-parent</module>
-		<module>extensions/robospice-google-http-client-parent</module>
-		<module>extensions/robospice-retrofit-parent</module>
-		<module>extensions/robospice-ormlite-parent</module>
-		<module>extensions/robospice-ui-spicelist-parent</module>
-		<module>extensions/robospice-okhttp-parent</module>
-		<!-- uncomment when AndroidOrmLiteContentProvider is published on maven 
-			<module>extensions/robospice-ormlite-content-provider-parent</module> -->
-	</modules>
-
-	<properties>
-		<!-- DEPENDENCIES VERSIONS -->
-		<android.version>4.1.1.4</android.version>
-		<android-platform.version>19</android-platform.version>
-		<android-annotations.version>4.1.1.4</android-annotations.version>
-		<easymock.version>3.2</easymock.version>
-		<dexmaker.version>1.1</dexmaker.version>
-		<mockwebserver.version>20130706</mockwebserver.version>
-		<junit.version>4.11</junit.version>
-		<commons-logging.version>1.2</commons-logging.version>
-
-		<!-- PLUGINS VERSIONS -->
-		<android-maven-plugin.version>3.8.2</android-maven-plugin.version>
-		<site-maven-plugin.version>0.9</site-maven-plugin.version>
-		<maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
-		<maven-surefire-report-plugin.version>2.15</maven-surefire-report-plugin.version>
-		<maven-gpg-plugin.version>1.4</maven-gpg-plugin.version>
-		<maven-source-plugin.version>2.2.1</maven-source-plugin.version>
-		<maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
-		<maven-release-plugin.version>2.5</maven-release-plugin.version>
-		<maven-javadoc-plugin.version>2.9</maven-javadoc-plugin.version>
-		<maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
-		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
-                <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
-		<maven-site-plugin.version>3.3</maven-site-plugin.version>
-		<doxia-module-markdown.version>1.3</doxia-module-markdown.version>
-		<maven-pmd-plugin.version>3.0.1</maven-pmd-plugin.version>
-		<findbugs-maven-plugin.version>2.5.3</findbugs-maven-plugin.version>
-		<maven-checkstyle-plugin.version>2.11</maven-checkstyle-plugin.version>
-		<eclipse-lifecycle-plugin.version>1.0.0</eclipse-lifecycle-plugin.version>
-
-		<!-- OTHER -->
-		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
-		<github.global.server>github</github.global.server>
-	</properties>
-
-	<dependencyManagement>
-		<dependencies>
-			<dependency>
-				<groupId>com.google.android</groupId>
-				<artifactId>annotations</artifactId>
-				<version>${android-annotations.version}</version>
-				<scope>provided</scope>
-			</dependency>
-			<dependency>
-				<groupId>com.google.android</groupId>
-				<artifactId>android</artifactId>
-				<version>${android.version}</version>
-				<scope>provided</scope>
-			</dependency>
-			<dependency>
-				<groupId>com.google.android</groupId>
-				<artifactId>android-test</artifactId>
-				<version>${android.version}</version>
-				<scope>provided</scope>
-			</dependency>
-			<dependency>
-				<groupId>junit</groupId>
-				<artifactId>junit</artifactId>
-				<version>${junit.version}</version>
-				<scope>provided</scope>
-			</dependency>
-			<dependency>
-				<groupId>org.easymock</groupId>
-				<artifactId>easymock</artifactId>
-				<version>${easymock.version}</version>
-				<exclusions>
-					<exclusion>
-						<groupId>cglib</groupId>
-						<artifactId>cglib-nodep</artifactId>
-					</exclusion>
-				</exclusions>
-			</dependency>
-			<dependency>
-				<groupId>com.google.dexmaker</groupId>
-				<artifactId>dexmaker</artifactId>
-				<version>${dexmaker.version}</version>
-			</dependency>
-
-			<!-- http://stackoverflow.com/questions/5591811/ignoring-innerclasses-attribute-warning-is-killing-eclipse -->
-			<dependency>
-				<groupId>commons-logging</groupId>
-				<artifactId>commons-logging</artifactId>
-				<version>${commons-logging.version}</version>
-			</dependency>
-			<dependency>
-				<groupId>com.google.mockwebserver</groupId>
-				<artifactId>mockwebserver</artifactId>
-				<version>${mockwebserver.version}</version>
-			</dependency>
-		</dependencies>
-	</dependencyManagement>
-
-	<build>
-		<pluginManagement>
-			<plugins>
-				<!-- Eclipse config -->
-				<!-- http://stackoverflow.com/questions/13040788/how-to-elimate-the-maven-enforcer-plugin-goal-enforce-is-ignored-by-m2e-wa -->
-				<plugin>
-					<groupId>org.eclipse.m2e</groupId>
-					<artifactId>lifecycle-mapping</artifactId>
-					<version>${eclipse-lifecycle-plugin.version}</version>
-					<configuration>
-						<lifecycleMappingMetadata>
-							<pluginExecutions>
-								<pluginExecution>
-									<pluginExecutionFilter>
-										<groupId>org.apache.maven.plugins</groupId>
-										<artifactId>maven-enforcer-plugin</artifactId>
-										<versionRange>[1.0.0,)</versionRange>
-										<goals>
-											<goal>enforce</goal>
-										</goals>
-									</pluginExecutionFilter>
-									<action>
-										<ignore />
-									</action>
-								</pluginExecution>
-								<pluginExecution>
-									<pluginExecutionFilter>
-										<groupId>org.apache.maven.plugins</groupId>
-										<artifactId>maven-dependency-plugin</artifactId>
-										<versionRange>[1.0.0,)</versionRange>
-										<goals>
-											<goal>copy-dependencies</goal>
-										</goals>
-									</pluginExecutionFilter>
-									<action>
-										<ignore />
-									</action>
-								</pluginExecution>
-								<pluginExecution>
-									<pluginExecutionFilter>
-										<groupId>org.apache.maven.plugins</groupId>
-										<artifactId>maven-checkstyle-plugin</artifactId>
-										<versionRange>[${maven-checkstyle-plugin.version},)</versionRange>
-										<goals>
-											<goal>check</goal>
-										</goals>
-									</pluginExecutionFilter>
-									<action>
-										<ignore />
-									</action>
-								</pluginExecution>
-							</pluginExecutions>
-
-						</lifecycleMappingMetadata>
-					</configuration>
-				</plugin>
-				<!-- Android config -->
-				<plugin>
-					<groupId>com.jayway.maven.plugins.android.generation2</groupId>
-					<artifactId>android-maven-plugin</artifactId>
-					<version>${android-maven-plugin.version}</version>
-					<configuration>
-						<androidManifestFile>${project.basedir}/AndroidManifest.xml</androidManifestFile>
-						<assetsDirectory>${project.basedir}/assets</assetsDirectory>
-						<resourceDirectory>${project.basedir}/res</resourceDirectory>
-						<nativeLibrariesDirectory>${project.basedir}/src/main/native</nativeLibrariesDirectory>
-						<sdk>
-							<platform>${android-platform.version}</platform>
-						</sdk>
-						<undeployBeforeDeploy>true</undeployBeforeDeploy>
-					</configuration>
-					<extensions>true</extensions>
-				</plugin>
-				<plugin>
-					<artifactId>maven-compiler-plugin</artifactId>
-					<version>${maven-compiler-plugin.version}</version>
-					<configuration>
-						<source>1.6</source>
-						<target>1.6</target>
-					</configuration>
-				</plugin>
-				<plugin>
-					<artifactId>maven-deploy-plugin</artifactId>
-					<version>${maven-deploy-plugin.version}</version>
-				</plugin>
-				<plugin>
-					<groupId>org.apache.maven.plugins</groupId>
-					<artifactId>maven-javadoc-plugin</artifactId>
-					<version>${maven-javadoc-plugin.version}</version>
-					<executions>
-						<execution>
-							<id>attach-javadoc</id>
-							<goals>
-								<goal>jar</goal>
-							</goals>
-						</execution>
-						<execution>
-							<id>aggregate</id>
-							<goals>
-								<goal>aggregate</goal>
-							</goals>
-							<phase>site</phase>
-							<configuration>
-								<sourcepath>robospice-core-parent/robospice:
-									robospice-cache-parent/robospice-cache:
-									extensions/robospice-spring-android-parent/robospice-spring-android:
-									extensions/robospice-retrofit-parent/robospice-retrofit:
-									extensions/robospice-google-http-client-parent/robospice-google-http-client:
-									extensions/robospice-ormlite-parent/robospice-ormlite:
-									extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist:
-								</sourcepath>
-							</configuration>
-						</execution>
-					</executions>
-				</plugin>
-				<!-- extra config -->
-				<plugin>
-					<groupId>org.apache.maven.plugins</groupId>
-					<artifactId>maven-source-plugin</artifactId>
-					<version>${maven-source-plugin.version}</version>
-					<executions>
-						<execution>
-							<id>attach-source</id>
-							<goals>
-								<goal>jar</goal>
-							</goals>
-						</execution>
-					</executions>
-				</plugin>
-
-				<plugin>
-					<groupId>org.apache.maven.plugins</groupId>
-					<artifactId>maven-checkstyle-plugin</artifactId>
-					<version>${maven-checkstyle-plugin.version}</version>
-					<configuration>
-						<configLocation>robospice_checks.xml</configLocation>
-						<enableRulesSummary>false</enableRulesSummary>
-					</configuration>
-					<executions>
-						<execution>
-							<id>checkstyle-check</id>
-							<phase>process-sources</phase>
-							<goals>
-								<goal>check</goal>
-							</goals>
-						</execution>
-					</executions>
-				</plugin>
-				<plugin>
-					<groupId>org.codehaus.mojo</groupId>
-					<artifactId>findbugs-maven-plugin</artifactId>
-					<version>${findbugs-maven-plugin.version}</version>
-					<executions>
-						<execution>
-							<id>findbugs-check</id>
-							<phase>verify</phase>
-							<goals>
-								<goal>check</goal>
-							</goals>
-						</execution>
-					</executions>
-				</plugin>
-				<plugin>
-					<groupId>org.apache.maven.plugins</groupId>
-					<artifactId>maven-pmd-plugin</artifactId>
-					<version>${maven-pmd-plugin.version}</version>
-					<configuration>
-						<targetJdk>1.5</targetJdk>
-					</configuration>
-					<executions>
-						<execution>
-							<id>pmd-check</id>
-							<goals>
-								<goal>check</goal>
-								<goal>cpd-check</goal>
-							</goals>
-						</execution>
-					</executions>
-				</plugin>
-				<!-- release -->
-				<plugin>
-					<groupId>org.apache.maven.plugins</groupId>
-					<artifactId>maven-release-plugin</artifactId>
-					<version>${maven-release-plugin.version}</version>
-					<configuration>
-						<autoVersionSubmodules>true</autoVersionSubmodules>
-					</configuration>
-				</plugin>
-				<!-- deploy javadoc and maven site to github https://github.com/github/maven-plugins/issues/22 -->
-				<plugin>
-					<groupId>org.apache.maven.plugins</groupId>
-					<artifactId>maven-site-plugin</artifactId>
-					<version>${maven-site-plugin.version}</version>
-					<configuration>
-						<skipDeploy>true</skipDeploy>
-					</configuration>
-					<dependencies>
-						<dependency>
-							<!-- | allows markdown syntax for site generation. To use it place 
-								files below | src/site/markdown/[filename].md -->
-							<groupId>org.apache.maven.doxia</groupId>
-							<artifactId>doxia-module-markdown</artifactId>
-							<version>${doxia-module-markdown.version}</version>
-						</dependency>
-					</dependencies>
-				</plugin>
-				<plugin>
-					<groupId>org.apache.maven.plugins</groupId>
-					<artifactId>maven-gpg-plugin</artifactId>
-					<version>${maven-gpg-plugin.version}</version>
-					<executions>
-						<execution>
-							<id>sign-artifacts</id>
-							<phase>verify</phase>
-							<goals>
-								<goal>sign</goal>
-							</goals>
-						</execution>
-					</executions>
-				</plugin>
-			</plugins>
-		</pluginManagement>
-
-		<plugins>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-checkstyle-plugin</artifactId>
-			</plugin>
-			<!-- http://blog.akquinet.de/2012/04/12/maven-sites-reloaded/ -->
-			<!-- http://minds.coremedia.com/2012/09/11/problem-solved-deploy-multi-module-maven-project-site-as-github-pages/ -->
-			<plugin>
-				<groupId>com.github.github</groupId>
-				<artifactId>site-maven-plugin</artifactId>
-				<version>${site-maven-plugin.version}</version>
-				<executions>
-					<execution>
-						<id>site-deploy-to-github</id>
-						<goals>
-							<goal>site</goal>
-						</goals>
-						<phase>site-deploy</phase>
-						<configuration>
-							<merge>true</merge>
-							<message>Creating site for ${project.version}</message>
-							<path>${project.distributionManagement.site.url}</path>
-							<excludes>
-								<exclude>dependencies/**</exclude>
-							</excludes>
-						</configuration>
-					</execution>
-				</executions>
-			</plugin>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-javadoc-plugin</artifactId>
-				<inherited>false</inherited>
-				<configuration>
-					<sourcepath>robospice-core-parent/robospice:
-						robospice-cache-parent/robospice-cache:
-						extensions/robospice-spring-android-parent/robospice-spring-android:
-						extensions/robospice-google-http-client-parent/robospice-google-http-client:
-						extensions/robospice-retrofit-parent/robospice-retrofit:
-						extensions/robospice-ormlite-parent/robospice-ormlite:
-						extensions/robospice-ui-spicelist-parent/robospice-ui-spicelist:
-					</sourcepath>
-				</configuration>
-			</plugin>
-		</plugins>
-	</build>
-
-	<profiles>
-		<profile>
-			<id>standard</id>
-			<activation>
-				<activeByDefault>true</activeByDefault>
-			</activation>
-			<distributionManagement>
-				<site>
-					<id>github-pages-site</id>
-					<name>Deployment through GitHub's site deployment plugin</name>
-					<url>site/latest</url>
-				</site>
-			</distributionManagement>
-		</profile>
-		<profile>
-			<id>repository</id>
-			<activation>
-				<property>
-					<name>performRelease</name>
-					<value>true</value>
-				</property>
-			</activation>
-			<build>
-				<pluginManagement>
-					<plugins>
-						<!-- copy dependencies for ant users -->
-						<plugin>
-							<groupId>org.apache.maven.plugins</groupId>
-							<artifactId>maven-dependency-plugin</artifactId>
-                                                        <version>${maven-dependency-plugin.version}</version>
-							<configuration>
-								<artifact>${project.groupId}:${project.artifactId}:${project.version}</artifact>
-								<outputDirectory>${project.build.directory}/dependencies/${project.version}/${project.artifactId}/</outputDirectory>
-							</configuration>
-							<executions>
-								<execution>
-									<id>copy-dependencies-for-ant-users</id>
-									<phase>install</phase>
-									<goals>
-										<goal>copy-dependencies</goal>
-									</goals>
-								</execution>
-								<execution>
-									<id>copy-artifact</id>
-									<phase>install</phase>
-									<goals>
-										<goal>copy</goal>
-									</goals>
-								</execution>
-							</executions>
-						</plugin>
-						<plugin>
-							<groupId>com.github.github</groupId>
-							<artifactId>site-maven-plugin</artifactId>
-							<version>${site-maven-plugin.version}</version>
-							<executions>
-								<execution>
-									<id>repository-deploy-to-github</id>
-									<goals>
-										<goal>site</goal>
-									</goals>
-									<phase>deploy</phase>
-									<configuration>
-										<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
-										<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
-										<branch>refs/heads/repository</branch>                       <!-- remote branch name -->
-										<merge>true</merge>
-										<outputDirectory>${project.build.directory}/</outputDirectory>
-										<includes>
-											<include>dependencies/**</include>
-										</includes>
-									</configuration>
-								</execution>
-							</executions>
-						</plugin>
-					</plugins>
-				</pluginManagement>
-			</build>
-		</profile>
-
-		<profile>
-			<id>sign</id>
-			<activation>
-				<property>
-					<name>performRelease</name>
-					<value>true</value>
-				</property>
-			</activation>
-			<distributionManagement>
-				<site>
-					<id>github-pages-site</id>
-					<name>Deployment through GitHub's site deployment plugin</name>
-					<url>site/release-${project.version}</url>
-				</site>
-			</distributionManagement>
-			<build>
-				<plugins>
-					<plugin>
-						<groupId>org.apache.maven.plugins</groupId>
-						<artifactId>maven-gpg-plugin</artifactId>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
-		<profile>
-			<id>fast</id>
-			<properties>
-				<maven.javadoc.skip>true</maven.javadoc.skip>
-			</properties>
-			<build>
-				<pluginManagement>
-					<plugins>
-						<plugin>
-							<groupId>org.codehaus.mojo</groupId>
-							<artifactId>findbugs-maven-plugin</artifactId>
-							<version>${findbugs-maven-plugin.version}</version>
-							<configuration>
-								<skip>true</skip>
-							</configuration>
-						</plugin>
-						<plugin>
-							<groupId>org.apache.maven.plugins</groupId>
-							<artifactId>maven-pmd-plugin</artifactId>
-							<version>${maven-pmd-plugin.version}</version>
-							<configuration>
-								<skip>true</skip>
-							</configuration>
-						</plugin>
-						<plugin>
-							<groupId>org.apache.maven.plugins</groupId>
-							<artifactId>maven-checkstyle-plugin</artifactId>
-							<version>${maven-checkstyle-plugin.version}</version>
-							<configuration>
-								<skip>true</skip>
-							</configuration>
-						</plugin>
-					</plugins>
-				</pluginManagement>
-			</build>
-		</profile>
-	</profiles>
-
-	<reporting>
-		<plugins>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-project-info-reports-plugin</artifactId>
-				<version>${maven-project-info-reports-plugin.version}</version>
-			</plugin>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-checkstyle-plugin</artifactId>
-				<version>${maven-checkstyle-plugin.version}</version>
-				<configuration>
-					<!-- we are using the Sun Standard code style from the Maven Checkstyle 
-						Plugin -->
-					<configLocation>robospice_checks.xml</configLocation>
-					<enableRulesSummary>false</enableRulesSummary>
-				</configuration>
-			</plugin>
-			<plugin>
-				<groupId>org.codehaus.mojo</groupId>
-				<artifactId>findbugs-maven-plugin</artifactId>
-				<version>${findbugs-maven-plugin.version}</version>
-			</plugin>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-surefire-report-plugin</artifactId>
-				<version>${maven-surefire-report-plugin.version}</version>
-			</plugin>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-pmd-plugin</artifactId>
-				<version>${maven-pmd-plugin.version}</version>
-				<configuration>
-					<targetJdk>1.5</targetJdk>
-				</configuration>
-			</plugin>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-javadoc-plugin</artifactId>
-				<version>${maven-javadoc-plugin.version}</version>
-				<reportSets>
-					<reportSet>
-						<id>aggregate</id><!-- aggregate reportSet, for pom with modules -->
-						<inherited>false</inherited><!-- don't run aggregate in child modules -->
-						<reports>
-							<report>aggregate</report>
-						</reports>
-					</reportSet>
-				</reportSets>
-			</plugin>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-jxr-plugin</artifactId>
-				<version>${maven-jxr-plugin.version}</version>
-				<configuration>
-					<aggregate>true</aggregate>
-				</configuration>
-			</plugin>
-		</plugins>
-	</reporting>
-
-</project>
diff --git a/robospice-cache/build.gradle b/robospice-cache/build.gradle
index e988862b2..210ead466 100644
--- a/robospice-cache/build.gradle
+++ b/robospice-cache/build.gradle
@@ -41,8 +41,5 @@ android {
 }
 
 dependencies {
-    compile 'org.apache.commons:commons-lang3:3.3.2'
-    compile 'commons-io:commons-io:1.3.2'
-
     androidTestCompile 'junit:junit:4.12'
 }
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java
index 2c5bd27d5..625e8a348 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersisterTest.java
@@ -8,13 +8,12 @@
 import java.io.InputStream;
 import java.util.Arrays;
 
-import org.apache.commons.io.IOUtils;
-
 import android.app.Application;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.MediumTest;
 
 import com.octo.android.robospice.persistence.DurationInMillis;
+import com.octo.android.robospice.utils.IOUtils;
 
 @MediumTest
 public class InFileBigInputStreamObjectPersisterTest extends AndroidTestCase {
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java
index 0e4b8136d..39349c02a 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersisterTest.java
@@ -8,13 +8,12 @@
 import java.io.InputStream;
 import java.util.Arrays;
 
-import org.apache.commons.io.IOUtils;
-
 import android.app.Application;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.MediumTest;
 
 import com.octo.android.robospice.persistence.DurationInMillis;
+import com.octo.android.robospice.utils.IOUtils;
 
 @MediumTest
 public class InFileInputStreamObjectPersisterTest extends AndroidTestCase {
diff --git a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java
index 5a6e03954..0604f7f2d 100644
--- a/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java
+++ b/robospice-cache/src/androidTest/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersisterTest.java
@@ -5,14 +5,13 @@
 import java.io.FileOutputStream;
 import java.util.List;
 
-import org.apache.commons.io.IOUtils;
-import org.apache.commons.lang3.CharEncoding;
-
 import android.app.Application;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.MediumTest;
 
 import com.octo.android.robospice.persistence.DurationInMillis;
+import com.octo.android.robospice.utils.CharEncoding;
+import com.octo.android.robospice.utils.IOUtils;
 
 @MediumTest
 public class InFileStringObjectPersisterTest extends AndroidTestCase {
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersister.java
index 393f59d08..ed0fbdbbb 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBigInputStreamObjectPersister.java
@@ -6,13 +6,12 @@
 import java.io.IOException;
 import java.io.InputStream;
 
-import org.apache.commons.io.IOUtils;
-
 import android.app.Application;
 
 import com.octo.android.robospice.persistence.ObjectPersister;
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
+import com.octo.android.robospice.utils.IOUtils;
 
 /**
  * Stores / retrieves data in file system. This {@link ObjectPersister} is
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java
index a0340600d..0783f750f 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileBitmapObjectPersister.java
@@ -6,8 +6,6 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 
-import org.apache.commons.io.IOUtils;
-
 import android.app.Application;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -16,6 +14,7 @@
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import com.octo.android.robospice.utils.IOUtils;
 
 /**
  * Stores and retrieves bitmaps to/from file system. Support custom
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersister.java
index 4c16f3192..447161a36 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/binary/InFileInputStreamObjectPersister.java
@@ -7,16 +7,16 @@
 import java.io.IOException;
 import java.io.InputStream;
 
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.io.IOUtils;
-
-import roboguice.util.temp.Ln;
 import android.app.Application;
 
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import com.octo.android.robospice.utils.FileUtils;
+import com.octo.android.robospice.utils.IOUtils;
+
+import roboguice.util.temp.Ln;
 
 public class InFileInputStreamObjectPersister extends InFileObjectPersister<InputStream> {
 
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersister.java b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersister.java
index d4837cda8..31ed67ecc 100644
--- a/robospice-cache/src/main/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersister.java
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/persistence/string/InFileStringObjectPersister.java
@@ -4,16 +4,16 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.CharEncoding;
-
-import roboguice.util.temp.Ln;
 import android.app.Application;
 
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import com.octo.android.robospice.utils.CharEncoding;
+import com.octo.android.robospice.utils.FileUtils;
+
+import roboguice.util.temp.Ln;
 
 public class InFileStringObjectPersister extends InFileObjectPersister<String> {
 
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/utils/CharEncoding.java b/robospice-cache/src/main/java/com/octo/android/robospice/utils/CharEncoding.java
new file mode 100644
index 000000000..2329b28e7
--- /dev/null
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/utils/CharEncoding.java
@@ -0,0 +1,8 @@
+package com.octo.android.robospice.utils;
+
+public class CharEncoding {
+
+    public static final String UTF_8 = "UTF-8";
+
+    private CharEncoding() {}
+}
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/utils/FileUtils.java b/robospice-cache/src/main/java/com/octo/android/robospice/utils/FileUtils.java
new file mode 100644
index 000000000..60e2852fe
--- /dev/null
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/utils/FileUtils.java
@@ -0,0 +1,75 @@
+package com.octo.android.robospice.utils;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+public class FileUtils {
+
+    public static void writeByteArrayToFile(File file, byte[] data) throws IOException {
+        OutputStream out = null;
+        try {
+            out = openOutputStream(file);
+            out.write(data);
+        } finally {
+            IOUtils.closeQuietly(out);
+        }
+    }
+
+    public static void writeStringToFile(File file, String data, String encoding) throws IOException {
+        OutputStream out = null;
+        try {
+            out = openOutputStream(file);
+            IOUtils.write(data, out, encoding);
+        } finally {
+            IOUtils.closeQuietly(out);
+        }
+    }
+
+    public static FileOutputStream openOutputStream(File file) throws IOException {
+        if (file.exists()) {
+            if (file.isDirectory()) {
+                throw new IOException("File '" + file + "' exists but is a directory");
+            }
+            if (!file.canWrite()) {
+                throw new IOException("File '" + file + "' cannot be written to");
+            }
+        } else {
+            File parent = file.getParentFile();
+            if (parent != null && !parent.exists()) {
+                if (!parent.mkdirs()) {
+                    throw new IOException("File '" + file + "' could not be created");
+                }
+            }
+        }
+        return new FileOutputStream(file);
+    }
+
+    public static FileInputStream openInputStream(File file) throws IOException {
+        if (file.exists()) {
+            if (file.isDirectory()) {
+                throw new IOException("File '" + file + "' exists but is a directory");
+            }
+            if (!file.canRead()) {
+                throw new IOException("File '" + file + "' cannot be read");
+            }
+        } else {
+            throw new FileNotFoundException("File '" + file + "' does not exist");
+        }
+        return new FileInputStream(file);
+    }
+
+    public static String readFileToString(File file, String encoding) throws IOException {
+        InputStream in = null;
+        try {
+            in = openInputStream(file);
+            return IOUtils.toString(in, encoding);
+        } finally {
+            IOUtils.closeQuietly(in);
+        }
+    }
+}
diff --git a/robospice-cache/src/main/java/com/octo/android/robospice/utils/IOUtils.java b/robospice-cache/src/main/java/com/octo/android/robospice/utils/IOUtils.java
new file mode 100644
index 000000000..8c92ef7c3
--- /dev/null
+++ b/robospice-cache/src/main/java/com/octo/android/robospice/utils/IOUtils.java
@@ -0,0 +1,665 @@
+package com.octo.android.robospice.utils;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedReader;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.io.PrintWriter;
+import java.io.Reader;
+import java.io.StringWriter;
+import java.io.Writer;
+import java.util.ArrayList;
+import java.util.List;
+
+public class IOUtils {
+
+    public static final String LINE_SEPARATOR;
+    static {
+        // avoid security issues
+        StringWriter buf = new StringWriter(4);
+        PrintWriter out = new PrintWriter(buf);
+        out.println();
+        LINE_SEPARATOR = buf.toString();
+    }
+
+    /**
+     * The default buffer size to use.
+     */
+    private static final int DEFAULT_BUFFER_SIZE = 1024 * 4;
+
+    /**
+     * Instances should NOT be constructed in standard programming.
+     */
+    public IOUtils() {
+        super();
+    }
+
+    //-----------------------------------------------------------------------
+    /**
+     * Unconditionally close an <code>Reader</code>.
+     * <p>
+     * Equivalent to {@link Reader#close()}, except any exceptions will be ignored.
+     * This is typically used in finally blocks.
+     *
+     * @param input  the Reader to close, may be null or already closed
+     */
+    public static void closeQuietly(Reader input) {
+        try {
+            if (input != null) {
+                input.close();
+            }
+        } catch (IOException ioe) {
+            // ignore
+        }
+    }
+
+    /**
+     * Unconditionally close a <code>Writer</code>.
+     * <p>
+     * Equivalent to {@link Writer#close()}, except any exceptions will be ignored.
+     * This is typically used in finally blocks.
+     *
+     * @param output  the Writer to close, may be null or already closed
+     */
+    public static void closeQuietly(Writer output) {
+        try {
+            if (output != null) {
+                output.close();
+            }
+        } catch (IOException ioe) {
+            // ignore
+        }
+    }
+
+    /**
+     * Unconditionally close an <code>InputStream</code>.
+     * <p>
+     * Equivalent to {@link InputStream#close()}, except any exceptions will be ignored.
+     * This is typically used in finally blocks.
+     *
+     * @param input  the InputStream to close, may be null or already closed
+     */
+    public static void closeQuietly(InputStream input) {
+        try {
+            if (input != null) {
+                input.close();
+            }
+        } catch (IOException ioe) {
+            // ignore
+        }
+    }
+
+    /**
+     * Unconditionally close an <code>OutputStream</code>.
+     * <p>
+     * Equivalent to {@link OutputStream#close()}, except any exceptions will be ignored.
+     * This is typically used in finally blocks.
+     *
+     * @param output  the OutputStream to close, may be null or already closed
+     */
+    public static void closeQuietly(OutputStream output) {
+        try {
+            if (output != null) {
+                output.close();
+            }
+        } catch (IOException ioe) {
+            // ignore
+        }
+    }
+
+    // read toByteArray
+    //-----------------------------------------------------------------------
+    /**
+     * Get the contents of an <code>InputStream</code> as a <code>byte[]</code>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     *
+     * @param input  the <code>InputStream</code> to read from
+     * @return the requested byte array
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     */
+    public static byte[] toByteArray(InputStream input) throws IOException {
+        ByteArrayOutputStream output = new ByteArrayOutputStream();
+        copy(input, output);
+        return output.toByteArray();
+    }
+
+    /**
+     * Get the contents of a <code>Reader</code> as a <code>byte[]</code>
+     * using the default character encoding of the platform.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     *
+     * @param input  the <code>Reader</code> to read from
+     * @return the requested byte array
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     */
+    public static byte[] toByteArray(Reader input) throws IOException {
+        ByteArrayOutputStream output = new ByteArrayOutputStream();
+        copy(input, output);
+        return output.toByteArray();
+    }
+
+    /**
+     * Get the contents of a <code>Reader</code> as a <code>byte[]</code>
+     * using the specified character encoding.
+     * <p>
+     * Character encoding names can be found at
+     * <a href="http://www.iana.org/assignments/character-sets">IANA</a>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     *
+     * @param input  the <code>Reader</code> to read from
+     * @param encoding  the encoding to use, null means platform default
+     * @return the requested byte array
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static byte[] toByteArray(Reader input, String encoding)
+            throws IOException {
+        ByteArrayOutputStream output = new ByteArrayOutputStream();
+        copy(input, output, encoding);
+        return output.toByteArray();
+    }
+
+    /**
+     * Get the contents of a <code>String</code> as a <code>byte[]</code>
+     * using the default character encoding of the platform.
+     * <p>
+     * This is the same as {@link String#getBytes()}.
+     *
+     * @param input  the <code>String</code> to convert
+     * @return the requested byte array
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs (never occurs)
+     * @deprecated Use {@link String#getBytes()}
+     */
+    public static byte[] toByteArray(String input) throws IOException {
+        return input.getBytes();
+    }
+
+    // read toString
+    //-----------------------------------------------------------------------
+    /**
+     * Get the contents of an <code>InputStream</code> as a String
+     * using the default character encoding of the platform.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     *
+     * @param input  the <code>InputStream</code> to read from
+     * @return the requested String
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     */
+    public static String toString(InputStream input) throws IOException {
+        StringWriter sw = new StringWriter();
+        copy(input, sw);
+        return sw.toString();
+    }
+
+    /**
+     * Get the contents of an <code>InputStream</code> as a String
+     * using the specified character encoding.
+     * <p>
+     * Character encoding names can be found at
+     * <a href="http://www.iana.org/assignments/character-sets">IANA</a>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     *
+     * @param input  the <code>InputStream</code> to read from
+     * @param encoding  the encoding to use, null means platform default
+     * @return the requested String
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     */
+    public static String toString(InputStream input, String encoding)
+            throws IOException {
+        StringWriter sw = new StringWriter();
+        copy(input, sw, encoding);
+        return sw.toString();
+    }
+
+    /**
+     * Get the contents of a <code>Reader</code> as a String.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     *
+     * @param input  the <code>Reader</code> to read from
+     * @return the requested String
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     */
+    public static String toString(Reader input) throws IOException {
+        StringWriter sw = new StringWriter();
+        copy(input, sw);
+        return sw.toString();
+    }
+
+    /**
+     * Get the contents of a <code>byte[]</code> as a String
+     * using the default character encoding of the platform.
+     *
+     * @param input the byte array to read from
+     * @return the requested String
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs (never occurs)
+     * @deprecated Use {@link String#String(byte[])}
+     */
+    public static String toString(byte[] input) throws IOException {
+        return new String(input);
+    }
+
+    /**
+     * Get the contents of a <code>byte[]</code> as a String
+     * using the specified character encoding.
+     * <p>
+     * Character encoding names can be found at
+     * <a href="http://www.iana.org/assignments/character-sets">IANA</a>.
+     *
+     * @param input the byte array to read from
+     * @param encoding  the encoding to use, null means platform default
+     * @return the requested String
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs (never occurs)
+     * @deprecated Use {@link String#String(byte[],String)}
+     */
+    public static String toString(byte[] input, String encoding)
+            throws IOException {
+        if (encoding == null) {
+            return new String(input);
+        } else {
+            return new String(input, encoding);
+        }
+    }
+
+    // readLines
+    //-----------------------------------------------------------------------
+    /**
+     * Get the contents of an <code>InputStream</code> as a list of Strings,
+     * one entry per line, using the default character encoding of the platform.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     *
+     * @param input  the <code>InputStream</code> to read from, not null
+     * @return the list of Strings, never null
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static List readLines(InputStream input) throws IOException {
+        InputStreamReader reader = new InputStreamReader(input);
+        return readLines(reader);
+    }
+
+    /**
+     * Get the contents of an <code>InputStream</code> as a list of Strings,
+     * one entry per line, using the specified character encoding.
+     * <p>
+     * Character encoding names can be found at
+     * <a href="http://www.iana.org/assignments/character-sets">IANA</a>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     *
+     * @param input  the <code>InputStream</code> to read from, not null
+     * @param encoding  the encoding to use, null means platform default
+     * @return the list of Strings, never null
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static List readLines(InputStream input, String encoding) throws IOException {
+        if (encoding == null) {
+            return readLines(input);
+        } else {
+            InputStreamReader reader = new InputStreamReader(input, encoding);
+            return readLines(reader);
+        }
+    }
+
+    /**
+     * Get the contents of a <code>Reader</code> as a list of Strings,
+     * one entry per line.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     *
+     * @param input  the <code>Reader</code> to read from, not null
+     * @return the list of Strings, never null
+     * @throws NullPointerException if the input is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static List readLines(Reader input) throws IOException {
+        BufferedReader reader = new BufferedReader(input);
+        List list = new ArrayList();
+        String line = reader.readLine();
+        while (line != null) {
+            list.add(line);
+            line = reader.readLine();
+        }
+        return list;
+    }
+
+    /**
+     * Writes chars from a <code>String</code> to bytes on an
+     * <code>OutputStream</code> using the default character encoding of the
+     * platform.
+     * <p>
+     * This method uses {@link String#getBytes()}.
+     *
+     * @param data  the <code>String</code> to write, null ignored
+     * @param output  the <code>OutputStream</code> to write to
+     * @throws NullPointerException if output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static void write(String data, OutputStream output)
+            throws IOException {
+        if (data != null) {
+            output.write(data.getBytes());
+        }
+    }
+
+    /**
+     * Writes chars from a <code>String</code> to bytes on an
+     * <code>OutputStream</code> using the specified character encoding.
+     * <p>
+     * Character encoding names can be found at
+     * <a href="http://www.iana.org/assignments/character-sets">IANA</a>.
+     * <p>
+     * This method uses {@link String#getBytes(String)}.
+     *
+     * @param data  the <code>String</code> to write, null ignored
+     * @param output  the <code>OutputStream</code> to write to
+     * @param encoding  the encoding to use, null means platform default
+     * @throws NullPointerException if output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static void write(String data, OutputStream output, String encoding)
+            throws IOException {
+        if (data != null) {
+            if (encoding == null) {
+                write(data, output);
+            } else {
+                output.write(data.getBytes(encoding));
+            }
+        }
+    }
+
+    // copy from InputStream
+    //-----------------------------------------------------------------------
+    /**
+     * Copy bytes from an <code>InputStream</code> to an
+     * <code>OutputStream</code>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     * <p>
+     * Large streams (over 2GB) will return a bytes copied value of
+     * <code>-1</code> after the copy has completed since the correct
+     * number of bytes cannot be returned as an int. For large streams
+     * use the <code>copyLarge(InputStream, OutputStream)</code> method.
+     *
+     * @param input  the <code>InputStream</code> to read from
+     * @param output  the <code>OutputStream</code> to write to
+     * @return the number of bytes copied
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @throws ArithmeticException if the byte count is too large
+     * @since Commons IO 1.1
+     */
+    public static int copy(InputStream input, OutputStream output) throws IOException {
+        long count = copyLarge(input, output);
+        if (count > Integer.MAX_VALUE) {
+            return -1;
+        }
+        return (int) count;
+    }
+
+    /**
+     * Copy bytes from a large (over 2GB) <code>InputStream</code> to an
+     * <code>OutputStream</code>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     *
+     * @param input  the <code>InputStream</code> to read from
+     * @param output  the <code>OutputStream</code> to write to
+     * @return the number of bytes copied
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.3
+     */
+    public static long copyLarge(InputStream input, OutputStream output)
+            throws IOException {
+        byte[] buffer = new byte[DEFAULT_BUFFER_SIZE];
+        long count = 0;
+        int n = 0;
+        while (-1 != (n = input.read(buffer))) {
+            output.write(buffer, 0, n);
+            count += n;
+        }
+        return count;
+    }
+
+    /**
+     * Copy bytes from an <code>InputStream</code> to chars on a
+     * <code>Writer</code> using the default character encoding of the platform.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     * <p>
+     * This method uses {@link InputStreamReader}.
+     *
+     * @param input  the <code>InputStream</code> to read from
+     * @param output  the <code>Writer</code> to write to
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static void copy(InputStream input, Writer output)
+            throws IOException {
+        InputStreamReader in = new InputStreamReader(input);
+        copy(in, output);
+    }
+
+    /**
+     * Copy bytes from an <code>InputStream</code> to chars on a
+     * <code>Writer</code> using the specified character encoding.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedInputStream</code>.
+     * <p>
+     * Character encoding names can be found at
+     * <a href="http://www.iana.org/assignments/character-sets">IANA</a>.
+     * <p>
+     * This method uses {@link InputStreamReader}.
+     *
+     * @param input  the <code>InputStream</code> to read from
+     * @param output  the <code>Writer</code> to write to
+     * @param encoding  the encoding to use, null means platform default
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static void copy(InputStream input, Writer output, String encoding)
+            throws IOException {
+        if (encoding == null) {
+            copy(input, output);
+        } else {
+            InputStreamReader in = new InputStreamReader(input, encoding);
+            copy(in, output);
+        }
+    }
+
+    // copy from Reader
+    //-----------------------------------------------------------------------
+    /**
+     * Copy chars from a <code>Reader</code> to a <code>Writer</code>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     * <p>
+     * Large streams (over 2GB) will return a chars copied value of
+     * <code>-1</code> after the copy has completed since the correct
+     * number of chars cannot be returned as an int. For large streams
+     * use the <code>copyLarge(Reader, Writer)</code> method.
+     *
+     * @param input  the <code>Reader</code> to read from
+     * @param output  the <code>Writer</code> to write to
+     * @return the number of characters copied
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @throws ArithmeticException if the character count is too large
+     * @since Commons IO 1.1
+     */
+    public static int copy(Reader input, Writer output) throws IOException {
+        long count = copyLarge(input, output);
+        if (count > Integer.MAX_VALUE) {
+            return -1;
+        }
+        return (int) count;
+    }
+
+    /**
+     * Copy chars from a large (over 2GB) <code>Reader</code> to a <code>Writer</code>.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     *
+     * @param input  the <code>Reader</code> to read from
+     * @param output  the <code>Writer</code> to write to
+     * @return the number of characters copied
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.3
+     */
+    public static long copyLarge(Reader input, Writer output) throws IOException {
+        char[] buffer = new char[DEFAULT_BUFFER_SIZE];
+        long count = 0;
+        int n = 0;
+        while (-1 != (n = input.read(buffer))) {
+            output.write(buffer, 0, n);
+            count += n;
+        }
+        return count;
+    }
+
+    /**
+     * Copy chars from a <code>Reader</code> to bytes on an
+     * <code>OutputStream</code> using the default character encoding of the
+     * platform, and calling flush.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     * <p>
+     * Due to the implementation of OutputStreamWriter, this method performs a
+     * flush.
+     * <p>
+     * This method uses {@link OutputStreamWriter}.
+     *
+     * @param input  the <code>Reader</code> to read from
+     * @param output  the <code>OutputStream</code> to write to
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static void copy(Reader input, OutputStream output)
+            throws IOException {
+        OutputStreamWriter out = new OutputStreamWriter(output);
+        copy(input, out);
+        // XXX Unless anyone is planning on rewriting OutputStreamWriter, we
+        // have to flush here.
+        out.flush();
+    }
+
+    /**
+     * Copy chars from a <code>Reader</code> to bytes on an
+     * <code>OutputStream</code> using the specified character encoding, and
+     * calling flush.
+     * <p>
+     * This method buffers the input internally, so there is no need to use a
+     * <code>BufferedReader</code>.
+     * <p>
+     * Character encoding names can be found at
+     * <a href="http://www.iana.org/assignments/character-sets">IANA</a>.
+     * <p>
+     * Due to the implementation of OutputStreamWriter, this method performs a
+     * flush.
+     * <p>
+     * This method uses {@link OutputStreamWriter}.
+     *
+     * @param input  the <code>Reader</code> to read from
+     * @param output  the <code>OutputStream</code> to write to
+     * @param encoding  the encoding to use, null means platform default
+     * @throws NullPointerException if the input or output is null
+     * @throws IOException if an I/O error occurs
+     * @since Commons IO 1.1
+     */
+    public static void copy(Reader input, OutputStream output, String encoding)
+            throws IOException {
+        if (encoding == null) {
+            copy(input, output);
+        } else {
+            OutputStreamWriter out = new OutputStreamWriter(output, encoding);
+            copy(input, out);
+            // XXX Unless anyone is planning on rewriting OutputStreamWriter,
+            // we have to flush here.
+            out.flush();
+        }
+    }
+
+    // content equals
+    //-----------------------------------------------------------------------
+    /**
+     * Compare the contents of two Streams to determine if they are equal or
+     * not.
+     * <p>
+     * This method buffers the input internally using
+     * <code>BufferedInputStream</code> if they are not already buffered.
+     *
+     * @param input1  the first stream
+     * @param input2  the second stream
+     * @return true if the content of the streams are equal or they both don't
+     * exist, false otherwise
+     * @throws NullPointerException if either input is null
+     * @throws IOException if an I/O error occurs
+     */
+    public static boolean contentEquals(InputStream input1, InputStream input2)
+            throws IOException {
+        if (!(input1 instanceof BufferedInputStream)) {
+            input1 = new BufferedInputStream(input1);
+        }
+        if (!(input2 instanceof BufferedInputStream)) {
+            input2 = new BufferedInputStream(input2);
+        }
+
+        int ch = input1.read();
+        while (-1 != ch) {
+            int ch2 = input2.read();
+            if (ch != ch2) {
+                return false;
+            }
+            ch = input1.read();
+        }
+
+        int ch2 = input2.read();
+        return (ch2 == -1);
+    }
+}
diff --git a/robospice-cache/src/main/java/roboguice/util/temp/Strings.java b/robospice-cache/src/main/java/roboguice/util/temp/Strings.java
index 0f14bcfbe..5e2fc3b25 100644
--- a/robospice-cache/src/main/java/roboguice/util/temp/Strings.java
+++ b/robospice-cache/src/main/java/roboguice/util/temp/Strings.java
@@ -15,7 +15,7 @@
 import java.util.Iterator;
 import java.util.Map;
 
-import org.apache.commons.lang3.CharEncoding;
+import com.octo.android.robospice.utils.CharEncoding;
 
 public final class Strings {
     private static final int DEFAULT_BUFFER_SIZE = 1024 * 4;
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java
index 9b8da6d62..3b82ae305 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BigBinaryRequestTest.java
@@ -4,8 +4,6 @@
 import java.io.FileInputStream;
 import java.io.InputStream;
 
-import org.apache.commons.io.IOUtils;
-
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.LargeTest;
 
@@ -13,6 +11,7 @@
 import com.google.mockwebserver.MockWebServer;
 import com.octo.android.robospice.core.test.R;
 import com.octo.android.robospice.request.simple.BigBinaryRequest;
+import com.octo.android.robospice.utils.IOUtils;
 
 /**
  * This test is a good example of how easy it is to test RoboSpice requests.
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java
index 1fdece749..0effe06e2 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/BitmapRequestTest.java
@@ -1,22 +1,19 @@
 package com.octo.android.robospice.request;
 
-import com.google.mockwebserver.MockResponse;
-import com.google.mockwebserver.MockWebServer;
-
-import com.octo.android.robospice.core.test.R;
-import com.octo.android.robospice.request.simple.BitmapRequest;
-
-import org.apache.commons.io.IOUtils;
-import org.apache.http.HttpStatus;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.InputStream;
 
 import android.graphics.Bitmap;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.LargeTest;
 
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.InputStream;
+import com.google.mockwebserver.MockResponse;
+import com.google.mockwebserver.MockWebServer;
+import com.octo.android.robospice.core.test.R;
+import com.octo.android.robospice.request.simple.BitmapRequest;
+import com.octo.android.robospice.utils.IOUtils;
 
 /**
  * This test is a good example of how easy it is to test RoboSpice requests.
@@ -26,6 +23,8 @@
 @LargeTest
 public class BitmapRequestTest extends AndroidTestCase {
 
+    private static final int SC_NOT_FOUND = 404;
+
     private static final int TEST_BITMAP_HEIGHT = 36;
     private static final int TEST_BITMAP_WIDTH = 36;
     private static final int TEST_BITMAP_REDUCED_WIDTH = 18;
@@ -82,7 +81,7 @@ public void test_loadDataFromNetwork_returns_a_bitmap_with_right_size() throws E
 
     public void test_loadDataFromNetwork_throws_exception() throws Exception {
         // given;
-        mockWebServer.enqueue(new MockResponse().setResponseCode(HttpStatus.SC_NOT_FOUND));
+        mockWebServer.enqueue(new MockResponse().setResponseCode(SC_NOT_FOUND));
         mockWebServer.play();
 
         // when
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SimpleTextRequestTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SimpleTextRequestTest.java
index ad6239c90..ac5bd39e8 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SimpleTextRequestTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SimpleTextRequestTest.java
@@ -1,18 +1,15 @@
 package com.octo.android.robospice.request;
 
-import com.google.mockwebserver.MockResponse;
-import com.google.mockwebserver.MockWebServer;
-
-import com.octo.android.robospice.core.test.R;
-import com.octo.android.robospice.request.simple.SimpleTextRequest;
-
-import org.apache.commons.io.IOUtils;
-import org.apache.http.HttpStatus;
+import java.io.FileNotFoundException;
 
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.LargeTest;
 
-import java.io.FileNotFoundException;
+import com.google.mockwebserver.MockResponse;
+import com.google.mockwebserver.MockWebServer;
+import com.octo.android.robospice.core.test.R;
+import com.octo.android.robospice.request.simple.SimpleTextRequest;
+import com.octo.android.robospice.utils.IOUtils;
 
 /**
  * This test is a good example of how easy it is to test RoboSpice requests.
@@ -22,7 +19,9 @@
 @LargeTest
 public class SimpleTextRequestTest extends AndroidTestCase {
 
-    private MockWebServer mockWebServer;
+    private static final int SC_NOT_FOUND = 404;
+
+    MockWebServer mockWebServer;
 
     @Override
     protected void setUp() throws Exception {
@@ -53,7 +52,7 @@ public void test_loadDataFromNetwork_returns_a_simple_string() throws Exception
 
     public void test_loadDataFromNetwork_throws_exception() throws Exception {
         // given;
-        mockWebServer.enqueue(new MockResponse().setResponseCode(HttpStatus.SC_NOT_FOUND));
+        mockWebServer.enqueue(new MockResponse().setResponseCode(SC_NOT_FOUND));
         mockWebServer.play();
 
         // when
diff --git a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SmallBinaryRequestTest.java b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SmallBinaryRequestTest.java
index c8bfeaf53..5c38f60b8 100644
--- a/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SmallBinaryRequestTest.java
+++ b/robospice-core/src/androidTest/java/com/octo/android/robospice/request/SmallBinaryRequestTest.java
@@ -3,9 +3,6 @@
 import java.io.FileNotFoundException;
 import java.io.InputStream;
 
-import org.apache.commons.io.IOUtils;
-import org.apache.http.HttpStatus;
-
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.LargeTest;
 
@@ -13,6 +10,7 @@
 import com.google.mockwebserver.MockWebServer;
 import com.octo.android.robospice.core.test.R;
 import com.octo.android.robospice.request.simple.SmallBinaryRequest;
+import com.octo.android.robospice.utils.IOUtils;
 
 /**
  * This test is a good example of how easy it is to test RoboSpice requests.
@@ -22,7 +20,9 @@
 @LargeTest
 public class SmallBinaryRequestTest extends AndroidTestCase {
 
-    private MockWebServer mockWebServer;
+    private static final int SC_NOT_FOUND = 404;
+
+    MockWebServer mockWebServer;
 
     @Override
     protected void setUp() throws Exception {
@@ -52,7 +52,7 @@ public void test_loadDataFromNetwork_returns_a_small_binary() throws Exception {
 
     public void test_loadDataFromNetwork_throws_exception() throws Exception {
         // given;
-        mockWebServer.enqueue(new MockResponse().setResponseCode(HttpStatus.SC_NOT_FOUND));
+        mockWebServer.enqueue(new MockResponse().setResponseCode(SC_NOT_FOUND));
         mockWebServer.play();
 
         // when
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BigBinaryRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BigBinaryRequest.java
index 8dd028b88..59a50eb51 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BigBinaryRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BigBinaryRequest.java
@@ -1,9 +1,5 @@
 package com.octo.android.robospice.request.simple;
 
-import com.octo.android.robospice.request.ProgressByteProcessor;
-
-import org.apache.commons.io.IOUtils;
-
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
@@ -11,6 +7,9 @@
 import java.io.InputStream;
 import java.io.OutputStream;
 
+import com.octo.android.robospice.request.ProgressByteProcessor;
+import com.octo.android.robospice.utils.IOUtils;
+
 import roboguice.util.temp.Ln;
 
 /**
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BinaryRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BinaryRequest.java
index 137efcb6a..b12348f61 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BinaryRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BinaryRequest.java
@@ -6,12 +6,11 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 
-import org.apache.commons.io.IOUtils;
-
-import roboguice.util.temp.Ln;
-
 import com.octo.android.robospice.request.ProgressByteProcessor;
 import com.octo.android.robospice.request.SpiceRequest;
+import com.octo.android.robospice.utils.IOUtils;
+
+import roboguice.util.temp.Ln;
 
 /**
  * Abstract class used to download binaries. See {@link SmallBinaryRequest} and
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java
index 104e0a845..d2defb24f 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/BitmapRequest.java
@@ -1,13 +1,5 @@
 package com.octo.android.robospice.request.simple;
 
-import com.octo.android.robospice.request.ProgressByteProcessor;
-import com.octo.android.robospice.request.SpiceRequest;
-
-import org.apache.commons.io.IOUtils;
-
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
@@ -17,6 +9,13 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+
+import com.octo.android.robospice.request.ProgressByteProcessor;
+import com.octo.android.robospice.request.SpiceRequest;
+import com.octo.android.robospice.utils.IOUtils;
+
 import roboguice.util.temp.Ln;
 
 /**
diff --git a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java
index b6adfd01c..63732a6c3 100644
--- a/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java
+++ b/robospice-core/src/main/java/com/octo/android/robospice/request/simple/SimpleTextRequest.java
@@ -5,13 +5,12 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 
-import org.apache.commons.io.IOUtils;
-import org.apache.commons.lang3.CharEncoding;
+import com.octo.android.robospice.request.SpiceRequest;
+import com.octo.android.robospice.utils.CharEncoding;
+import com.octo.android.robospice.utils.IOUtils;
 
 import roboguice.util.temp.Ln;
 
-import com.octo.android.robospice.request.SpiceRequest;
-
 public class SimpleTextRequest extends SpiceRequest<String> {
 
     private final String url;
diff --git a/robospice-okhttp/build.gradle b/robospice-okhttp/build.gradle
index c6dfe6ae4..28b8e9aa6 100644
--- a/robospice-okhttp/build.gradle
+++ b/robospice-okhttp/build.gradle
@@ -36,8 +36,6 @@ android {
 dependencies {
     compile project(':robospice-core')
 
-    compile 'commons-logging:commons-logging:1.2'
-
     compile group: 'com.squareup.okhttp', name: 'okhttp', version: '1.6.0'
     compile group: 'com.squareup.okhttp', name: 'okhttp-urlconnection', version: '1.6.0'
 
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBigBinaryRequest.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBigBinaryRequest.java
index 06bbe6513..cdf276274 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBigBinaryRequest.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBigBinaryRequest.java
@@ -6,13 +6,11 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
-
-import org.apache.commons.io.IOUtils;
+import com.octo.android.robospice.request.ProgressByteProcessor;
+import com.octo.android.robospice.utils.IOUtils;
 
 import roboguice.util.temp.Ln;
 
-import com.octo.android.robospice.request.ProgressByteProcessor;
-
 /**
  * Downloads big images in size. All data is passed to the listener using file
  * system. This class is meant to help download big images. If you wish to
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBinaryRequest.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBinaryRequest.java
index 8b4c04ef4..453976b7c 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBinaryRequest.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBinaryRequest.java
@@ -6,14 +6,13 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 
+import com.octo.android.robospice.request.ProgressByteProcessor;
+import com.octo.android.robospice.request.okhttp.OkHttpSpiceRequest;
+import com.octo.android.robospice.utils.IOUtils;
 import com.squareup.okhttp.OkUrlFactory;
-import org.apache.commons.io.IOUtils;
 
 import roboguice.util.temp.Ln;
 
-import com.octo.android.robospice.request.ProgressByteProcessor;
-import com.octo.android.robospice.request.okhttp.OkHttpSpiceRequest;
-
 /**
  * Abstract class used to download binaries. See {@link OkHttpSmallBinaryRequest} and
  * {@link OkHttpBigBinaryRequest}
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java
index 725a937d5..5850e0980 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpBitmapRequest.java
@@ -9,16 +9,16 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 
-import com.squareup.okhttp.OkUrlFactory;
-import org.apache.commons.io.IOUtils;
-
-import roboguice.util.temp.Ln;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 
 import com.octo.android.robospice.request.ProgressByteProcessor;
 import com.octo.android.robospice.request.okhttp.OkHttpSpiceRequest;
 import com.octo.android.robospice.request.simple.IBitmapRequest;
+import com.octo.android.robospice.utils.IOUtils;
+import com.squareup.okhttp.OkUrlFactory;
+
+import roboguice.util.temp.Ln;
 
 /**
  * Downloads big images in size as bitmaps. All data is passed to the listener
diff --git a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java
index d84aa8a90..b6b6e48a1 100644
--- a/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java
+++ b/robospice-okhttp/src/main/java/com/octo/android/robospice/request/okhttp/simple/OkHttpSimpleTextRequest.java
@@ -1,15 +1,16 @@
 package com.octo.android.robospice.request.okhttp.simple;
 
-import com.octo.android.robospice.request.okhttp.OkHttpSpiceRequest;
-import com.squareup.okhttp.OkUrlFactory;
-import org.apache.commons.io.IOUtils;
-import roboguice.util.temp.Ln;
-
 import java.io.IOException;
 import java.net.HttpURLConnection;
 import java.net.MalformedURLException;
 import java.net.URL;
 
+import com.octo.android.robospice.request.okhttp.OkHttpSpiceRequest;
+import com.octo.android.robospice.utils.IOUtils;
+import com.squareup.okhttp.OkUrlFactory;
+
+import roboguice.util.temp.Ln;
+
 public class OkHttpSimpleTextRequest extends OkHttpSpiceRequest<String> {
 
     private final String url;
diff --git a/robospice-ormlite/build.gradle b/robospice-ormlite/build.gradle
index bf368fa92..9fa5ea3fa 100644
--- a/robospice-ormlite/build.gradle
+++ b/robospice-ormlite/build.gradle
@@ -40,8 +40,6 @@ dependencies {
     compile "com.j256.ormlite:ormlite-android:4.48"
     compile "com.tojc.ormlite.android:ormlite-content-provider-library:1.0.5-SNAPSHOT"
 
-    compile 'commons-logging:commons-logging:1.2'
-
     compile 'com.squareup.okhttp:okhttp:1.6.0'
     compile 'com.squareup.okhttp:okhttp-urlconnection:1.6.0'
 
diff --git a/robospice-retrofit/build.gradle b/robospice-retrofit/build.gradle
index 016ca5a0e..6985a42df 100644
--- a/robospice-retrofit/build.gradle
+++ b/robospice-retrofit/build.gradle
@@ -37,11 +37,10 @@ android {
 
 dependencies {
     compile project(':robospice-core')
+
     compile group: 'com.squareup.retrofit', name: 'retrofit', version: '1.6.1'
     compile group: 'com.squareup.retrofit', name: 'converter-jackson', version: '1.6.1'
 
-    compile 'commons-logging:commons-logging:1.2'
-
     androidTestCompile 'com.google.mockwebserver:mockwebserver:20130706'
     androidTestCompile 'junit:junit:4.12'
 }
diff --git a/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java b/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java
index 3606ff05d..2892a38e3 100644
--- a/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java
+++ b/robospice-retrofit/src/main/java/com/octo/android/robospice/persistence/retrofit/RetrofitObjectPersister.java
@@ -8,18 +8,18 @@
 import java.io.IOException;
 import java.io.InputStream;
 
-import org.apache.commons.io.IOUtils;
-
-import retrofit.converter.Converter;
-import retrofit.mime.TypedInput;
-import retrofit.mime.TypedOutput;
-import roboguice.util.temp.Ln;
 import android.app.Application;
 
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import com.octo.android.robospice.utils.IOUtils;
+
+import retrofit.converter.Converter;
+import retrofit.mime.TypedInput;
+import retrofit.mime.TypedOutput;
+import roboguice.util.temp.Ln;
 
 public class RetrofitObjectPersister<T> extends InFileObjectPersister<T> {
 
diff --git a/robospice-spring-android/build.gradle b/robospice-spring-android/build.gradle
index 4f489d425..650008bc3 100644
--- a/robospice-spring-android/build.gradle
+++ b/robospice-spring-android/build.gradle
@@ -35,6 +35,7 @@ android {
 
 dependencies {
     compile project(':robospice-core')
+
     compile('org.springframework.android:spring-android-rest-template:1.0.1.RELEASE') {
         exclude(module: 'spring-android-core')
     }
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/SpringAndroidObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/SpringAndroidObjectPersister.java
index c59b8ca1a..0b5b5b3d1 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/SpringAndroidObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/SpringAndroidObjectPersister.java
@@ -4,17 +4,17 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.CharEncoding;
-import org.apache.commons.lang3.StringUtils;
-
-import roboguice.util.temp.Ln;
 import android.app.Application;
+import android.text.TextUtils;
 
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.file.InFileObjectPersister;
+import com.octo.android.robospice.utils.CharEncoding;
+import com.octo.android.robospice.utils.FileUtils;
+
+import roboguice.util.temp.Ln;
 
 public abstract class SpringAndroidObjectPersister<T> extends InFileObjectPersister<T> {
 
@@ -40,7 +40,7 @@ protected T readCacheDataFromFile(File file) throws CacheLoadingException {
             synchronized (file.getAbsolutePath().intern()) {
                 resultJson = FileUtils.readFileToString(file, CharEncoding.UTF_8);
             }
-            if (!StringUtils.isEmpty(resultJson)) {
+            if (!TextUtils.isEmpty(resultJson)) {
                 T result = deserializeData(resultJson);
                 return result;
             }
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java
index acaf33b81..0bd00f4d6 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/gson/GsonObjectPersister.java
@@ -3,16 +3,15 @@
 import java.io.File;
 import java.io.IOException;
 
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.CharEncoding;
-import org.apache.commons.lang3.StringUtils;
-
 import android.app.Application;
+import android.text.TextUtils;
 
 import com.google.gson.Gson;
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister;
+import com.octo.android.robospice.utils.CharEncoding;
+import com.octo.android.robospice.utils.FileUtils;
 
 public final class GsonObjectPersister<T> extends SpringAndroidObjectPersister<T> {
 
@@ -50,7 +49,7 @@ protected void saveData(T data, Object cacheKey) throws IOException, CacheSaving
         resultJson = gson.toJson(data);
 
         // finally store the json in the cache
-        if (!StringUtils.isEmpty(resultJson)) {
+        if (!TextUtils.isEmpty(resultJson)) {
             FileUtils.writeStringToFile(getCacheFile(cacheKey), resultJson, CharEncoding.UTF_8);
         } else {
             throw new CacheSavingException("Data was null and could not be serialized in json");
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java
index 522a1f16f..a809c03a3 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson/JacksonObjectPersister.java
@@ -3,17 +3,16 @@
 import java.io.File;
 import java.io.IOException;
 
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.CharEncoding;
-import org.apache.commons.lang3.StringUtils;
-
 import android.app.Application;
+import android.text.TextUtils;
 
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister;
+import com.octo.android.robospice.utils.CharEncoding;
+import com.octo.android.robospice.utils.FileUtils;
 
 public final class JacksonObjectPersister<T> extends SpringAndroidObjectPersister<T> {
 
@@ -57,7 +56,7 @@ protected void saveData(T data, Object cacheKey) throws IOException, CacheSaving
         resultJson = mJsonMapper.writeValueAsString(data);
 
         // finally store the json in the cache
-        if (!StringUtils.isEmpty(resultJson)) {
+        if (!TextUtils.isEmpty(resultJson)) {
             FileUtils.writeStringToFile(getCacheFile(cacheKey), resultJson, CharEncoding.UTF_8);
         } else {
             throw new CacheSavingException("Data was null and could not be serialized in json");
diff --git a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java
index 04919d963..618df319a 100644
--- a/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java
+++ b/robospice-spring-android/src/main/java/com/octo/android/robospice/persistence/springandroid/json/jackson2/Jackson2ObjectPersister.java
@@ -3,17 +3,16 @@
 import java.io.File;
 import java.io.IOException;
 
-import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.CharEncoding;
-import org.apache.commons.lang3.StringUtils;
-
 import android.app.Application;
+import android.text.TextUtils;
 
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.octo.android.robospice.persistence.exception.CacheCreationException;
 import com.octo.android.robospice.persistence.exception.CacheLoadingException;
 import com.octo.android.robospice.persistence.exception.CacheSavingException;
 import com.octo.android.robospice.persistence.springandroid.SpringAndroidObjectPersister;
+import com.octo.android.robospice.utils.CharEncoding;
+import com.octo.android.robospice.utils.FileUtils;
 
 public final class Jackson2ObjectPersister<T> extends SpringAndroidObjectPersister<T> {
 
@@ -57,7 +56,7 @@ protected void saveData(T data, Object cacheKey) throws IOException, CacheSaving
 
         synchronized (getCacheFile(cacheKey).getAbsolutePath().intern()) {
             // finally store the json in the cache
-            if (!StringUtils.isEmpty(resultJson)) {
+            if (!TextUtils.isEmpty(resultJson)) {
                 FileUtils.writeStringToFile(getCacheFile(cacheKey), resultJson, CharEncoding.UTF_8);
             } else {
                 throw new CacheSavingException("Data was null and could not be serialized in json");
diff --git a/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java b/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java
index 5b65c4bd9..08d58107c 100644
--- a/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java
+++ b/robospice-ui-spicelist/src/androidTest/java/com/octo/android/robospice/spicelist/test/SpiceArrayAdapterTest.java
@@ -10,8 +10,6 @@
 import java.util.concurrent.locks.Condition;
 import java.util.concurrent.locks.ReentrantLock;
 
-import org.apache.commons.io.IOUtils;
-
 import android.content.Context;
 import android.test.AndroidTestCase;
 import android.view.LayoutInflater;
@@ -29,6 +27,7 @@
 import com.octo.android.robospice.spicelist.simple.BitmapSpiceManager;
 import com.octo.android.robospice.spicelist.simple.SpiceArrayAdapter;
 import com.octo.android.robospice.ui.spicelist.test.R;
+import com.octo.android.robospice.utils.IOUtils;
 
 public class SpiceArrayAdapterTest extends AndroidTestCase {
 
