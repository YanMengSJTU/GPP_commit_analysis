diff --git a/robospice-retrofit2/build.gradle b/robospice-retrofit2/build.gradle
new file mode 100644
index 000000000..9e9dce790
--- /dev/null
+++ b/robospice-retrofit2/build.gradle
@@ -0,0 +1,38 @@
+description = 'Robospice - Extension Retrofit2 Module'
+
+apply plugin: 'com.android.library'
+
+android {
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+
+    compileSdkVersion 23
+    buildToolsVersion '23.0.3'
+
+    defaultConfig {
+        minSdkVersion 15
+        targetSdkVersion 23
+
+        versionCode 1414
+        versionName '1414'
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled true
+            zipAlignEnabled true
+            shrinkResources true
+            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
+            proguardFile 'proguard.pro'
+        }
+        debug {}
+    }
+}
+
+dependencies {
+    compile project(':robospice-core')
+
+    compile 'com.squareup.retrofit2:retrofit:2.1.0'
+}
diff --git a/robospice-retrofit2/proguard.pro b/robospice-retrofit2/proguard.pro
new file mode 100644
index 000000000..3399ebcb5
--- /dev/null
+++ b/robospice-retrofit2/proguard.pro
@@ -0,0 +1,4 @@
+
+-keep class com.octo.android.robospice.** { *; }
+
+-keepattributes *Annotation*,InnerClasses,Exceptions,Signature,EnclosingMethod,SourceFile
diff --git a/robospice-retrofit2/src/main/AndroidManifest.xml b/robospice-retrofit2/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..b95adb4f6
--- /dev/null
+++ b/robospice-retrofit2/src/main/AndroidManifest.xml
@@ -0,0 +1,3 @@
+<manifest package="com.octo.android.robospice.retrofit2">
+
+</manifest>
diff --git a/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceRequest.java b/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceRequest.java
new file mode 100644
index 000000000..f31e0e6b3
--- /dev/null
+++ b/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceRequest.java
@@ -0,0 +1,26 @@
+package com.octo.android.robospice.retrofit2;
+
+import com.octo.android.robospice.request.SpiceRequest;
+
+public abstract class RetrofitSpiceRequest<Response, Service> extends SpiceRequest<Response> {
+
+    final Class<Service> serviceClass;
+    Service service;
+
+    public RetrofitSpiceRequest(Class<Response> clazz, Class<Service> serviceClass) {
+        super(clazz);
+        this.serviceClass = serviceClass;
+    }
+
+    void setService(Service service) {
+        this.service = service;
+    }
+
+    public Service getService() {
+        return service;
+    }
+
+    Class<Service> getServiceClass() {
+        return serviceClass;
+    }
+}
diff --git a/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceService.java b/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceService.java
new file mode 100644
index 000000000..015e2841e
--- /dev/null
+++ b/robospice-retrofit2/src/main/java/com/octo/android/robospice/retrofit2/RetrofitSpiceService.java
@@ -0,0 +1,42 @@
+package com.octo.android.robospice.retrofit2;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Set;
+
+import com.octo.android.robospice.SpiceService;
+import com.octo.android.robospice.request.CachedSpiceRequest;
+import com.octo.android.robospice.request.listener.RequestListener;
+
+public abstract class RetrofitSpiceService extends SpiceService {
+
+    private final Map<Class<?>, Object> serviceClassToService = new HashMap<>();
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public void addRequest(CachedSpiceRequest<?> request, Set<RequestListener<?>> listRequestListener) {
+        if (request.getSpiceRequest() instanceof RetrofitSpiceRequest) {
+            final RetrofitSpiceRequest retrofitSpiceRequest = (RetrofitSpiceRequest) request.getSpiceRequest();
+            final Object retrofitService = getRetrofitService(retrofitSpiceRequest.getServiceClass());
+            retrofitSpiceRequest.setService(retrofitService);
+        }
+        super.addRequest(request, listRequestListener);
+    }
+
+    @SuppressWarnings("unchecked")
+    private <T> T getRetrofitService(Class<T> serviceClass) {
+        T service = (T) serviceClassToService.get(serviceClass);
+        if (service == null) {
+            synchronized (serviceClassToService) {
+                service = (T) serviceClassToService.get(serviceClass);
+                if (service == null) {
+                    service = createService(serviceClass);
+                    serviceClassToService.put(serviceClass, service);
+                }
+            }
+        }
+        return service;
+    }
+
+    protected abstract <T> T createService(Class<T> serviceClass);
+}
diff --git a/settings.gradle b/settings.gradle
index 56cf11168..f394cab8d 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -3,6 +3,7 @@ include ':robospice-core'
 include ':robospice-spring-android'
 include ':robospice-google-http-client'
 include ':robospice-retrofit'
+include ':robospice-retrofit2'
 include ':robospice-ormlite'
 include ':robospice-ui-spicelist'
 include ':robospice-okhttp'
