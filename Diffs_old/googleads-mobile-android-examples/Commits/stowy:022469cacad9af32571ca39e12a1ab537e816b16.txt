diff --git a/java/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/AdMobCustomMuteThisAdFragment.java b/java/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/AdMobCustomMuteThisAdFragment.java
new file mode 100644
index 0000000..f612e70
--- /dev/null
+++ b/java/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/AdMobCustomMuteThisAdFragment.java
@@ -0,0 +1,283 @@
+/*
+ * Copyright 2018 Google LLC
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.google.android.gms.example.apidemo;
+
+import android.content.DialogInterface;
+import android.content.res.Resources;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.AlertDialog;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.RatingBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.gms.ads.AdListener;
+import com.google.android.gms.ads.AdLoader;
+import com.google.android.gms.ads.AdRequest;
+import com.google.android.gms.ads.MuteThisAdListener;
+import com.google.android.gms.ads.MuteThisAdReason;
+import com.google.android.gms.ads.VideoController;
+import com.google.android.gms.ads.formats.MediaView;
+import com.google.android.gms.ads.formats.NativeAdOptions;
+import com.google.android.gms.ads.formats.UnifiedNativeAd;
+import com.google.android.gms.ads.formats.UnifiedNativeAdView;
+
+import java.util.ArrayList;
+import java.util.List;
+
+
+/**
+ * The {@link AdMobCustomMuteThisAdFragment} class demonstrates how to use custom mute
+ * with AdMob native ads.
+ */
+public class AdMobCustomMuteThisAdFragment extends Fragment {
+
+    private Button refresh;
+    private Button muteButton;
+    private UnifiedNativeAd nativeAd;
+    private FrameLayout adContainer;
+
+    public AdMobCustomMuteThisAdFragment() {
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_admob_custom_mute_this_ad, container, false);
+    }
+
+    @Override
+    public void onActivityCreated(Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+
+        refresh = getView().findViewById(R.id.btn_refresh);
+        muteButton = getView().findViewById(R.id.btn_mute_ad);
+        adContainer = getView().findViewById(R.id.fl_adplaceholder);
+
+        refresh.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View unusedView) {
+                refreshAd();
+            }
+        });
+        muteButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View unusedView) {
+                showMuteReasonsDialog();
+            }
+        });
+
+        refreshAd();
+    }
+
+    /**
+     * Populates a {@link UnifiedNativeAdView} object with data from a given
+     * {@link UnifiedNativeAd}.
+     *
+     * @param nativeAd the object containing the ad's assets
+     * @param adView the view to be populated
+     */
+    private void populateUnifiedNativeAdView(UnifiedNativeAd nativeAd, UnifiedNativeAdView adView) {
+        MediaView mediaView = adView.findViewById(R.id.ad_media);
+        adView.setMediaView(mediaView);
+
+        adView.setHeadlineView(adView.findViewById(R.id.ad_headline));
+        adView.setBodyView(adView.findViewById(R.id.ad_body));
+        adView.setCallToActionView(adView.findViewById(R.id.ad_call_to_action));
+        adView.setIconView(adView.findViewById(R.id.ad_app_icon));
+        adView.setPriceView(adView.findViewById(R.id.ad_price));
+        adView.setStarRatingView(adView.findViewById(R.id.ad_stars));
+        adView.setStoreView(adView.findViewById(R.id.ad_store));
+        adView.setAdvertiserView(adView.findViewById(R.id.ad_advertiser));
+
+        ((TextView) adView.getHeadlineView()).setText(nativeAd.getHeadline());
+
+        if (nativeAd.getBody() == null) {
+            adView.getBodyView().setVisibility(View.INVISIBLE);
+        } else {
+            ((TextView) adView.getBodyView()).setText(nativeAd.getBody());
+            adView.getBodyView().setVisibility(View.VISIBLE);
+        }
+
+        if (nativeAd.getCallToAction() == null) {
+            adView.getCallToActionView().setVisibility(View.INVISIBLE);
+        } else {
+            ((Button) adView.getCallToActionView()).setText(nativeAd.getCallToAction());
+            adView.getCallToActionView().setVisibility(View.VISIBLE);
+        }
+
+        if (nativeAd.getIcon() == null) {
+            adView.getIconView().setVisibility(View.GONE);
+        } else {
+            ((ImageView) adView.getIconView()).setImageDrawable(
+                nativeAd.getIcon().getDrawable());
+            adView.getIconView().setVisibility(View.VISIBLE);
+        }
+
+        if (nativeAd.getPrice() == null) {
+            adView.getPriceView().setVisibility(View.INVISIBLE);
+        } else {
+            ((TextView) adView.getPriceView()).setText(nativeAd.getPrice());
+            adView.getPriceView().setVisibility(View.VISIBLE);
+        }
+
+        if (nativeAd.getStore() == null) {
+            adView.getStoreView().setVisibility(View.INVISIBLE);
+        } else {
+            ((TextView) adView.getStoreView()).setText(nativeAd.getStore());
+            adView.getStoreView().setVisibility(View.VISIBLE);
+        }
+
+        if (nativeAd.getStarRating() == null) {
+            adView.getStarRatingView().setVisibility(View.INVISIBLE);
+        } else {
+            ((RatingBar) adView.getStarRatingView())
+                .setRating(nativeAd.getStarRating().floatValue());
+            adView.getStarRatingView().setVisibility(View.VISIBLE);
+        }
+
+        if (nativeAd.getAdvertiser() == null) {
+            adView.getAdvertiserView().setVisibility(View.INVISIBLE);
+        } else {
+            ((TextView) adView.getAdvertiserView()).setText(nativeAd.getAdvertiser());
+            adView.getAdvertiserView().setVisibility(View.VISIBLE);
+        }
+
+        adView.setNativeAd(nativeAd);
+
+        VideoController vc = nativeAd.getVideoController();
+
+        if (vc.hasVideoContent()) {
+            vc.setVideoLifecycleCallbacks(new VideoController.VideoLifecycleCallbacks() {
+                @Override
+                public void onVideoEnd() {
+                    refresh.setEnabled(true);
+                    super.onVideoEnd();
+                }
+            });
+        } else {
+            refresh.setEnabled(true);
+        }
+    }
+
+    /**
+     * Creates a request for a new unified native ad based on the boolean parameters and calls the
+     * "populateUnifiedNativeAdView" method when one is successfully returned.
+     */
+    private void refreshAd() {
+        refresh.setEnabled(false);
+        muteButton.setEnabled(false);
+
+        Resources resources = getActivity().getResources();
+        AdLoader.Builder builder = new AdLoader.Builder(getActivity(),
+                resources.getString(R.string.custommute_fragment_ad_unit_id));
+
+        builder.forUnifiedNativeAd(new UnifiedNativeAd.OnUnifiedNativeAdLoadedListener() {
+            // OnUnifiedNativeAdLoadedListener implementation.
+            @Override
+            public void onUnifiedNativeAdLoaded(UnifiedNativeAd unifiedNativeAd) {
+                AdMobCustomMuteThisAdFragment.this.nativeAd = unifiedNativeAd;
+                muteButton.setEnabled(unifiedNativeAd.isCustomMuteThisAdEnabled());
+                nativeAd.setMuteThisAdListener(new MuteThisAdListener() {
+                    @Override
+                    public void onAdMuted() {
+                        muteAd();
+                        Toast.makeText(getActivity(), "Ad muted", Toast.LENGTH_SHORT).show();
+                    }
+                });
+
+                UnifiedNativeAdView adView = (UnifiedNativeAdView) getLayoutInflater()
+                    .inflate(R.layout.ad_unified, null);
+                populateUnifiedNativeAdView(unifiedNativeAd, adView);
+                adContainer.removeAllViews();
+                adContainer.addView(adView);
+            }
+
+        });
+
+        NativeAdOptions adOptions = new NativeAdOptions.Builder()
+            .setRequestCustomMuteThisAd(true)
+            .build();
+
+        builder.withNativeAdOptions(adOptions);
+
+        AdLoader adLoader = builder.withAdListener(new AdListener() {
+            @Override
+            public void onAdFailedToLoad(int errorCode) {
+                refresh.setEnabled(true);
+                Toast.makeText(getActivity(), "Failed to load native ad: "
+                        + errorCode, Toast.LENGTH_SHORT).show();
+            }
+        }).build();
+
+        adLoader.loadAd(new AdRequest.Builder().build());
+    }
+
+    private void showMuteReasonsDialog() {
+        class MuteThisAdReasonWrapper {
+            MuteThisAdReason reason;
+
+            MuteThisAdReasonWrapper(MuteThisAdReason reason) {
+                this.reason = reason;
+            }
+
+            @Override
+            public String toString() {
+                return reason.getDescription();
+            }
+        }
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        builder.setTitle("Select a reason");
+        final List<MuteThisAdReason> reasons = nativeAd.getMuteThisAdReasons();
+        final List<MuteThisAdReasonWrapper> wrappedReasons = new ArrayList<>();
+        for (MuteThisAdReason reason : reasons) {
+            wrappedReasons.add(new MuteThisAdReasonWrapper(reason));
+        }
+
+        builder.setAdapter(
+            new ArrayAdapter<>(getActivity(),
+                android.R.layout.simple_list_item_1, wrappedReasons),
+            new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    dialog.dismiss();
+                    muteAdDialogDidSelectReason(wrappedReasons.get(which).reason);
+                }
+            });
+
+        builder.show();
+    }
+
+    private void muteAdDialogDidSelectReason(MuteThisAdReason reason) {
+        // Report the mute action and reason to the ad.
+        // The ad is actually muted (removed from UI) in the MuteThisAdListener callback.
+        nativeAd.muteThisAd(reason);
+    }
+
+    private void muteAd() {
+        // Disable mute button, remove ad.
+        muteButton.setEnabled(false);
+        adContainer.removeAllViews();
+    }
+}
diff --git a/java/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.java b/java/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.java
index e6ed508..70d8eca 100644
--- a/java/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.java
+++ b/java/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.java
@@ -66,13 +66,14 @@ public void onNavigationDrawerItemSelected(int position) {
             case 0: trans.replace(R.id.container, new AdMobAdListenerFragment()); break;
             case 1: trans.replace(R.id.container, new AdMobAdTargetingFragment()); break;
             case 2: trans.replace(R.id.container, new AdMobBannerSizesFragment()); break;
-            case 3: trans.replace(R.id.container, new DFPFluidSizeFragment()); break;
-            case 4: trans.replace(R.id.container, new DFPPPIDFragment()); break;
-            case 5: trans.replace(R.id.container, new DFPCustomTargetingFragment()); break;
-            case 6: trans.replace(R.id.container, new DFPCategoryExclusionFragment()); break;
-            case 7: trans.replace(R.id.container, new DFPMultipleAdSizesFragment()); break;
-            case 8: trans.replace(R.id.container, new DFPAppEventsFragment()); break;
-            case 9: trans.replace(R.id.container, new DFPCustomControlsFragment()); break;
+            case 3: trans.replace(R.id.container, new AdMobCustomMuteThisAdFragment()); break;
+            case 4: trans.replace(R.id.container, new DFPFluidSizeFragment()); break;
+            case 5: trans.replace(R.id.container, new DFPPPIDFragment()); break;
+            case 6: trans.replace(R.id.container, new DFPCustomTargetingFragment()); break;
+            case 7: trans.replace(R.id.container, new DFPCategoryExclusionFragment()); break;
+            case 8: trans.replace(R.id.container, new DFPMultipleAdSizesFragment()); break;
+            case 9: trans.replace(R.id.container, new DFPAppEventsFragment()); break;
+            case 10: trans.replace(R.id.container, new DFPCustomControlsFragment()); break;
         }
 
         trans.commit();
diff --git a/java/advanced/APIDemo/app/src/main/res/layout/ad_unified.xml b/java/advanced/APIDemo/app/src/main/res/layout/ad_unified.xml
new file mode 100644
index 0000000..a088387
--- /dev/null
+++ b/java/advanced/APIDemo/app/src/main/res/layout/ad_unified.xml
@@ -0,0 +1,133 @@
+<com.google.android.gms.ads.formats.UnifiedNativeAdView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:background="#FFFFFF"
+        android:minHeight="50dp"
+        android:orientation="vertical">
+
+        <TextView style="@style/AppTheme.AdAttribution"/>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:paddingLeft="20dp"
+            android:paddingRight="20dp"
+            android:paddingTop="3dp">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+
+                <ImageView
+                    android:id="@+id/ad_app_icon"
+                    android:layout_width="40dp"
+                    android:layout_height="40dp"
+                    android:adjustViewBounds="true"
+                    android:paddingBottom="5dp"
+                    android:paddingEnd="5dp"
+                    android:paddingRight="5dp"/>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/ad_headline"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:textColor="#0000FF"
+                        android:textSize="16sp"
+                        android:textStyle="bold" />
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content">
+
+                        <TextView
+                            android:id="@+id/ad_advertiser"
+                            android:layout_width="wrap_content"
+                            android:layout_height="match_parent"
+                            android:gravity="bottom"
+                            android:textSize="14sp"
+                            android:textStyle="bold"/>
+
+                        <RatingBar
+                            android:id="@+id/ad_stars"
+                            style="?android:attr/ratingBarStyleSmall"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:isIndicator="true"
+                            android:numStars="5"
+                            android:stepSize="0.5" />
+                    </LinearLayout>
+
+                </LinearLayout>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical">
+
+                <TextView
+                    android:id="@+id/ad_body"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginRight="20dp"
+                    android:layout_marginEnd="20dp"
+                    android:textSize="12sp" />
+
+                <com.google.android.gms.ads.formats.MediaView
+                    android:id="@+id/ad_media"
+                    android:layout_gravity="center_horizontal"
+                    android:layout_width="250dp"
+                    android:layout_height="175dp"
+                    android:layout_marginTop="5dp" />
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="end"
+                    android:orientation="horizontal"
+                    android:paddingBottom="10dp"
+                    android:paddingTop="10dp">
+
+                    <TextView
+                        android:id="@+id/ad_price"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:paddingLeft="5dp"
+                        android:paddingStart="5dp"
+                        android:paddingRight="5dp"
+                        android:paddingEnd="5dp"
+                        android:textSize="12sp" />
+
+                    <TextView
+                        android:id="@+id/ad_store"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:paddingLeft="5dp"
+                        android:paddingStart="5dp"
+                        android:paddingRight="5dp"
+                        android:paddingEnd="5dp"
+                        android:textSize="12sp" />
+
+                    <Button
+                        android:id="@+id/ad_call_to_action"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:gravity="center"
+                        android:textSize="12sp" />
+                </LinearLayout>
+            </LinearLayout>
+        </LinearLayout>
+    </LinearLayout>
+</com.google.android.gms.ads.formats.UnifiedNativeAdView>
diff --git a/java/advanced/APIDemo/app/src/main/res/layout/fragment_admob_custom_mute_this_ad.xml b/java/advanced/APIDemo/app/src/main/res/layout/fragment_admob_custom_mute_this_ad.xml
new file mode 100644
index 0000000..0417e02
--- /dev/null
+++ b/java/advanced/APIDemo/app/src/main/res/layout/fragment_admob_custom_mute_this_ad.xml
@@ -0,0 +1,44 @@
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.google.android.gms.example.apidemo.DFPCustomControlsFragment">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:id="@+id/fl_adplaceholder"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp" />
+
+        <LinearLayout
+            android:orientation="horizontal"
+            android:gravity="center_horizontal"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <Button
+                android:id="@+id/btn_refresh"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:layout_marginTop="16dp"
+                android:text="@string/custommute_fragment_refresh" />
+
+            <Button
+                android:id="@+id/btn_mute_ad"
+                android:enabled="false"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="16dp"
+                android:layout_marginBottom="16dp"
+                android:layout_marginTop="16dp"
+                android:text="@string/custommute_fragment_mute" />
+        </LinearLayout>
+
+
+    </LinearLayout>
+</ScrollView>
diff --git a/java/advanced/APIDemo/app/src/main/res/values/strings.xml b/java/advanced/APIDemo/app/src/main/res/values/strings.xml
index dc48bb0..ce7a5ee 100644
--- a/java/advanced/APIDemo/app/src/main/res/values/strings.xml
+++ b/java/advanced/APIDemo/app/src/main/res/values/strings.xml
@@ -81,6 +81,7 @@
         <item>AdMob - Ad Listener</item>
         <item>AdMob - Ad Targeting</item>
         <item>AdMob - Banner Sizes</item>
+        <item>AdMob - Custom Mute This Ad</item>
         <item>DFP - Fluid Size</item>
         <item>DFP - PPID</item>
         <item>DFP - Custom Targeting</item>
@@ -93,6 +94,10 @@
     <string name="admob_banner_ad_unit_id">ca-app-pub-3940256099942544/6300978111</string>
     <string name="admob_customevent_ad_unit_id">ca-app-pub-3940256099942544/3325725716</string>
 
+    <string name="custommute_fragment_ad_unit_id">ca-app-pub-3940256099942544/2247696110</string>
+    <string name="custommute_fragment_mute">Mute Ad</string>
+    <string name="custommute_fragment_refresh">Refresh Ad</string>
+
     <string name="listener_fragment_title">AdMob Ad Listener</string>
     <string name="targeting_fragment_title">AdMob Ad Targeting</string>
     <string name="bannersizes_fragment_title">AdMob Banner Sizes</string>
diff --git a/kotlin/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/AdMobCustomMuteThisAdFragment.kt b/kotlin/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/AdMobCustomMuteThisAdFragment.kt
new file mode 100644
index 0000000..922a527
--- /dev/null
+++ b/kotlin/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/AdMobCustomMuteThisAdFragment.kt
@@ -0,0 +1,232 @@
+/*
+ * Copyright 2018 Google LLC
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.google.android.gms.example.apidemo
+
+import android.os.Bundle
+import android.support.v4.app.Fragment
+import android.support.v7.app.AlertDialog
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.*
+import com.google.android.gms.ads.AdListener
+import com.google.android.gms.ads.AdLoader
+import com.google.android.gms.ads.AdRequest
+import com.google.android.gms.ads.VideoController
+import com.google.android.gms.ads.formats.MediaView
+import com.google.android.gms.ads.formats.NativeAdOptions
+import com.google.android.gms.ads.formats.UnifiedNativeAd
+import com.google.android.gms.ads.formats.UnifiedNativeAdView
+import kotlinx.android.synthetic.main.fragment_admob_custom_mute_this_ad.*
+
+/**
+ * The [AdMobCustomMuteThisAdFragment] class demonstrates how to use custom mute
+ * with AdMob native ads.
+ */
+class AdMobCustomMuteThisAdFragment : Fragment() {
+
+    private var nativeAd: UnifiedNativeAd? = null
+
+    override fun onCreateView(
+      inflater: LayoutInflater?,
+      container: ViewGroup?,
+      savedInstanceState: Bundle?
+    ): View? {
+        return inflater!!.inflate(
+                R.layout.fragment_admob_custom_mute_this_ad, container, false)
+    }
+
+    override fun onActivityCreated(savedInstanceState: Bundle?) {
+        super.onActivityCreated(savedInstanceState)
+
+        btn_refresh.setOnClickListener { refreshAd() }
+        btn_mute_ad.setOnClickListener { showMuteReasonsDialog() }
+
+        refreshAd()
+    }
+
+    /**
+     * Populates a [UnifiedNativeAdView] object with data from a given
+     * [UnifiedNativeAd].
+     *
+     * @param nativeAd the object containing the ad's assets
+     * @param adView the view to be populated
+     */
+    private fun populateUnifiedNativeAdView(
+      nativeAd: UnifiedNativeAd,
+      adView: UnifiedNativeAdView
+    ) {
+        adView.mediaView = adView.findViewById<MediaView>(R.id.ad_media)
+
+        // Set other ad assets.
+        adView.headlineView = adView.findViewById(R.id.ad_headline)
+        adView.bodyView = adView.findViewById(R.id.ad_body)
+        adView.callToActionView = adView.findViewById(R.id.ad_call_to_action)
+        adView.iconView = adView.findViewById(R.id.ad_app_icon)
+        adView.priceView = adView.findViewById(R.id.ad_price)
+        adView.starRatingView = adView.findViewById(R.id.ad_stars)
+        adView.storeView = adView.findViewById(R.id.ad_store)
+        adView.advertiserView = adView.findViewById(R.id.ad_advertiser)
+
+        (adView.headlineView as TextView).text = nativeAd.headline
+
+        if (nativeAd.body == null) {
+            adView.bodyView.visibility = View.INVISIBLE
+        } else {
+            (adView.bodyView as TextView).text = nativeAd.body
+            adView.bodyView.visibility = View.VISIBLE
+        }
+
+        if (nativeAd.callToAction == null) {
+            adView.callToActionView.visibility = View.INVISIBLE
+        } else {
+            (adView.callToActionView as Button).text = nativeAd.callToAction
+            adView.callToActionView.visibility = View.VISIBLE
+        }
+
+        if (nativeAd.icon == null) {
+            adView.iconView.visibility = View.GONE
+        } else {
+            (adView.iconView as ImageView).setImageDrawable(
+                    nativeAd.icon.drawable)
+            adView.iconView.visibility = View.VISIBLE
+        }
+
+        if (nativeAd.price == null) {
+            adView.priceView.visibility = View.INVISIBLE
+        } else {
+            (adView.priceView as TextView).text = nativeAd.price
+            adView.priceView.visibility = View.VISIBLE
+        }
+
+        if (nativeAd.store == null) {
+            adView.storeView.visibility = View.INVISIBLE
+        } else {
+            (adView.storeView as TextView).text = nativeAd.store
+            adView.storeView.visibility = View.VISIBLE
+        }
+
+        if (nativeAd.starRating == null) {
+            adView.starRatingView.visibility = View.INVISIBLE
+        } else {
+            (adView.starRatingView as RatingBar).rating = nativeAd.starRating!!.toFloat()
+            adView.starRatingView.visibility = View.VISIBLE
+        }
+
+        if (nativeAd.advertiser == null) {
+            adView.advertiserView.visibility = View.INVISIBLE
+        } else {
+            (adView.advertiserView as TextView).text = nativeAd.advertiser
+            adView.advertiserView.visibility = View.VISIBLE
+        }
+
+        adView.setNativeAd(nativeAd)
+
+        val vc = nativeAd.videoController
+
+        if (vc.hasVideoContent()) {
+            vc.videoLifecycleCallbacks = object : VideoController.VideoLifecycleCallbacks() {
+                override fun onVideoEnd() {
+                    btn_refresh.isEnabled = true
+                    super.onVideoEnd()
+                }
+            }
+        } else {
+            btn_refresh.isEnabled = true
+        }
+    }
+
+    /**
+     * Creates a request for a new unified native ad based on the boolean parameters and calls the
+     * "populateUnifiedNativeAdView" method when one is successfully returned.
+     */
+    private fun refreshAd() {
+        btn_refresh.isEnabled = false
+        btn_mute_ad.isEnabled = false
+
+        val resources = activity.resources
+        val builder = AdLoader.Builder(activity,
+                resources.getString(R.string.custommute_fragment_ad_unit_id))
+
+        builder.forUnifiedNativeAd { unifiedNativeAd ->
+            // OnUnifiedNativeAdLoadedListener implementation.
+            this@AdMobCustomMuteThisAdFragment.nativeAd = unifiedNativeAd
+            btn_mute_ad.isEnabled = unifiedNativeAd.isCustomMuteThisAdEnabled
+            nativeAd?.setMuteThisAdListener {
+                    muteAd()
+                    Toast.makeText(activity, "Ad muted", Toast.LENGTH_SHORT).show()
+                }
+
+            val adView = layoutInflater
+                    .inflate(R.layout.ad_unified, null) as UnifiedNativeAdView
+            populateUnifiedNativeAdView(unifiedNativeAd, adView)
+            ad_container.removeAllViews()
+            ad_container.addView(adView)
+        }
+
+        val adOptions = NativeAdOptions.Builder()
+                .setRequestCustomMuteThisAd(true)
+                .build()
+
+        builder.withNativeAdOptions(adOptions)
+
+        val adLoader = builder.withAdListener(object : AdListener() {
+            override fun onAdFailedToLoad(errorCode: Int) {
+                btn_refresh.isEnabled = true
+                Toast.makeText(
+                        activity, "Failed to load native ad: $errorCode", Toast.LENGTH_SHORT).show()
+            }
+        }).build()
+        adLoader.loadAd(AdRequest.Builder().build())
+    }
+
+    private fun showMuteReasonsDialog() {
+        class MuteThisAdReasonWrapper(var reason: MuteThisAdReason) {
+
+            override fun toString(): String {
+                return reason.getDescription()
+            }
+        }
+
+        val builder = AlertDialog.Builder(activity)
+        builder.setTitle("Select a reason")
+        val reasons = nativeAd?.muteThisAdReasons
+
+        val wrappedReasons = reasons!!.map { r -> MuteThisAdReasonWrapper(r) }
+
+        builder.setAdapter(
+                ArrayAdapter<MuteThisAdReasonWrapper>(activity,
+                        android.R.layout.simple_list_item_1, wrappedReasons)
+        ) { dialog, which ->
+            dialog.dismiss()
+            muteAdDialogDidSelectReason(wrappedReasons[which].reason)
+        }
+
+        builder.show()
+    }
+
+    private fun muteAdDialogDidSelectReason(reason: MuteThisAdReason) {
+        // Report the mute action and reason to the ad.
+        // The ad is actually muted (removed from UI) in the MuteThisAdListener callback.
+        nativeAd?.muteThisAd(reason)
+    }
+
+    private fun muteAd() {
+        // Disable mute button, remove ad.
+        btn_mute_ad.isEnabled = false
+        ad_container.removeAllViews()
+    }
+}
diff --git a/kotlin/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.kt b/kotlin/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.kt
index a66e464..fbc2290 100644
--- a/kotlin/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.kt
+++ b/kotlin/advanced/APIDemo/app/src/main/java/com/google/android/gms/example/apidemo/MainActivity.kt
@@ -44,6 +44,7 @@ class MainActivity : AppCompatActivity(), NavigationView.OnNavigationItemSelecte
             R.id.nav_admob_adlistener -> AdMobAdListenerFragment()
             R.id.nav_admob_adtargeting -> AdMobAdTargetingFragment()
             R.id.nav_admob_bannersizes -> AdMobBannerSizesFragment()
+            R.id.nav_admob_custommute -> AdMobCustomMuteThisAdFragment()
             R.id.nav_dfp_adsizes -> DFPMultipleAdSizesFragment()
             R.id.nav_dfp_appevents -> DFPAppEventsFragment()
             R.id.nav_dfp_customtargeting -> DFPCustomTargetingFragment()
diff --git a/kotlin/advanced/APIDemo/app/src/main/res/layout/ad_unified.xml b/kotlin/advanced/APIDemo/app/src/main/res/layout/ad_unified.xml
new file mode 100644
index 0000000..a088387
--- /dev/null
+++ b/kotlin/advanced/APIDemo/app/src/main/res/layout/ad_unified.xml
@@ -0,0 +1,133 @@
+<com.google.android.gms.ads.formats.UnifiedNativeAdView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:background="#FFFFFF"
+        android:minHeight="50dp"
+        android:orientation="vertical">
+
+        <TextView style="@style/AppTheme.AdAttribution"/>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:paddingLeft="20dp"
+            android:paddingRight="20dp"
+            android:paddingTop="3dp">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+
+                <ImageView
+                    android:id="@+id/ad_app_icon"
+                    android:layout_width="40dp"
+                    android:layout_height="40dp"
+                    android:adjustViewBounds="true"
+                    android:paddingBottom="5dp"
+                    android:paddingEnd="5dp"
+                    android:paddingRight="5dp"/>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/ad_headline"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:textColor="#0000FF"
+                        android:textSize="16sp"
+                        android:textStyle="bold" />
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content">
+
+                        <TextView
+                            android:id="@+id/ad_advertiser"
+                            android:layout_width="wrap_content"
+                            android:layout_height="match_parent"
+                            android:gravity="bottom"
+                            android:textSize="14sp"
+                            android:textStyle="bold"/>
+
+                        <RatingBar
+                            android:id="@+id/ad_stars"
+                            style="?android:attr/ratingBarStyleSmall"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:isIndicator="true"
+                            android:numStars="5"
+                            android:stepSize="0.5" />
+                    </LinearLayout>
+
+                </LinearLayout>
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical">
+
+                <TextView
+                    android:id="@+id/ad_body"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginRight="20dp"
+                    android:layout_marginEnd="20dp"
+                    android:textSize="12sp" />
+
+                <com.google.android.gms.ads.formats.MediaView
+                    android:id="@+id/ad_media"
+                    android:layout_gravity="center_horizontal"
+                    android:layout_width="250dp"
+                    android:layout_height="175dp"
+                    android:layout_marginTop="5dp" />
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="end"
+                    android:orientation="horizontal"
+                    android:paddingBottom="10dp"
+                    android:paddingTop="10dp">
+
+                    <TextView
+                        android:id="@+id/ad_price"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:paddingLeft="5dp"
+                        android:paddingStart="5dp"
+                        android:paddingRight="5dp"
+                        android:paddingEnd="5dp"
+                        android:textSize="12sp" />
+
+                    <TextView
+                        android:id="@+id/ad_store"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:paddingLeft="5dp"
+                        android:paddingStart="5dp"
+                        android:paddingRight="5dp"
+                        android:paddingEnd="5dp"
+                        android:textSize="12sp" />
+
+                    <Button
+                        android:id="@+id/ad_call_to_action"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:gravity="center"
+                        android:textSize="12sp" />
+                </LinearLayout>
+            </LinearLayout>
+        </LinearLayout>
+    </LinearLayout>
+</com.google.android.gms.ads.formats.UnifiedNativeAdView>
diff --git a/kotlin/advanced/APIDemo/app/src/main/res/layout/fragment_admob_custom_mute_this_ad.xml b/kotlin/advanced/APIDemo/app/src/main/res/layout/fragment_admob_custom_mute_this_ad.xml
new file mode 100644
index 0000000..4e7e736
--- /dev/null
+++ b/kotlin/advanced/APIDemo/app/src/main/res/layout/fragment_admob_custom_mute_this_ad.xml
@@ -0,0 +1,44 @@
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.google.android.gms.example.apidemo.DFPCustomControlsFragment">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <FrameLayout
+            android:id="@+id/ad_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp" />
+
+        <LinearLayout
+            android:orientation="horizontal"
+            android:gravity="center_horizontal"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <Button
+                android:id="@+id/btn_refresh"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:layout_marginTop="16dp"
+                android:text="@string/custommute_fragment_refresh" />
+
+            <Button
+                android:id="@+id/btn_mute_ad"
+                android:enabled="false"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="16dp"
+                android:layout_marginBottom="16dp"
+                android:layout_marginTop="16dp"
+                android:text="@string/custommute_fragment_mute" />
+        </LinearLayout>
+
+
+    </LinearLayout>
+</ScrollView>
diff --git a/kotlin/advanced/APIDemo/app/src/main/res/menu/activity_main_drawer.xml b/kotlin/advanced/APIDemo/app/src/main/res/menu/activity_main_drawer.xml
index 9ecd2ef..5892bb7 100644
--- a/kotlin/advanced/APIDemo/app/src/main/res/menu/activity_main_drawer.xml
+++ b/kotlin/advanced/APIDemo/app/src/main/res/menu/activity_main_drawer.xml
@@ -14,6 +14,9 @@
             <item
                 android:id="@+id/nav_admob_bannersizes"
                 android:title="Banner sizes" />
+            <item
+                android:id="@+id/nav_admob_custommute"
+                android:title="Custom Mute This Ad" />
         </menu>
     </item>
 
diff --git a/kotlin/advanced/APIDemo/app/src/main/res/values/strings.xml b/kotlin/advanced/APIDemo/app/src/main/res/values/strings.xml
index 9bf3200..93db171 100644
--- a/kotlin/advanced/APIDemo/app/src/main/res/values/strings.xml
+++ b/kotlin/advanced/APIDemo/app/src/main/res/values/strings.xml
@@ -81,6 +81,7 @@
         <item>AdMob - Ad Listener</item>
         <item>AdMob - Ad Targeting</item>
         <item>AdMob - Banner Sizes</item>
+        <item>AdMob - Custom Mute This Ad</item>
         <item>DFP - Fluid Size</item>
         <item>DFP - PPID</item>
         <item>DFP - Custom Targeting</item>
@@ -93,6 +94,10 @@
     <string name="admob_banner_ad_unit_id">ca-app-pub-3940256099942544/6300978111</string>
     <string name="admob_customevent_ad_unit_id">ca-app-pub-3940256099942544/3325725716</string>
 
+    <string name="custommute_fragment_ad_unit_id">ca-app-pub-3940256099942544/2247696110</string>
+    <string name="custommute_fragment_mute">Mute Ad</string>
+    <string name="custommute_fragment_refresh">Refresh Ad</string>
+
     <string name="listener_fragment_title">AdMob Ad Listener</string>
     <string name="targeting_fragment_title">AdMob Ad Targeting</string>
     <string name="bannersizes_fragment_title">AdMob Banner Sizes</string>
