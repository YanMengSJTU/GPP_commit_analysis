diff --git a/app/build.gradle b/app/build.gradle
index 6ef1cc2..40b4cc7 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -17,6 +17,15 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+
+    splits {
+        abi {
+            enable true
+            reset()
+            include 'armeabi-v7a'
+            universalApk false
+        }
+    }
 }
 
 dependencies {
diff --git a/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java b/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java
index edf2721..6e29a87 100644
--- a/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java
+++ b/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java
@@ -5,10 +5,14 @@
 import android.graphics.Point;
 import android.opengl.GLSurfaceView;
 import android.os.Bundle;
+import android.text.TextUtils;
+import android.view.View;
 import android.view.Window;
 import android.view.WindowManager.LayoutParams;
+import android.widget.EditText;
 import android.widget.Toast;
 import org.json.JSONException;
+import org.w3c.dom.Text;
 import org.webrtc.MediaStream;
 import org.webrtc.VideoRenderer;
 import org.webrtc.VideoRendererGui;
@@ -42,7 +46,7 @@
     private VideoRenderer.Callbacks remoteRender;
     private WebRtcClient client;
     private String mSocketAddress;
-    private String callerId;
+    private String callerId, calleeId;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -68,6 +72,30 @@ public void run() {
             }
         });
 
+        //set the onclick listener to initialize the call
+        findViewById(R.id.init_call).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                //output the caller ID
+                Toast.makeText(RtcActivity.this,"Caller ID "+ calleeId, Toast.LENGTH_SHORT).show();
+            }
+        });
+
+        findViewById(R.id.answer_call).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                //find the user input and answer the call
+                String callerId = ((EditText)findViewById(R.id.session_id_input)).getEditableText().toString();
+                if (!TextUtils.isEmpty(callerId)){
+                    try {
+                        answer(callerId);
+                    } catch (JSONException e) {
+                        e.printStackTrace();
+                    }
+                }
+            }
+        });
+
         // local and remote render
         remoteRender = VideoRendererGui.create(
                 REMOTE_X, REMOTE_Y,
@@ -130,6 +158,7 @@ public void onCallReady(String callId) {
             }
         } else {
             call(callId);
+            calleeId = callId;
         }
     }
 
@@ -170,10 +199,11 @@ public void run() {
     @Override
     public void onLocalStream(MediaStream localStream) {
         localStream.videoTracks.get(0).addRenderer(new VideoRenderer(localRender));
+
         VideoRendererGui.update(localRender,
                 LOCAL_X_CONNECTING, LOCAL_Y_CONNECTING,
                 LOCAL_WIDTH_CONNECTING, LOCAL_HEIGHT_CONNECTING,
-                scalingType);
+                scalingType, false);
     }
 
     @Override
@@ -181,11 +211,12 @@ public void onAddRemoteStream(MediaStream remoteStream, int endPoint) {
         remoteStream.videoTracks.get(0).addRenderer(new VideoRenderer(remoteRender));
         VideoRendererGui.update(remoteRender,
                 REMOTE_X, REMOTE_Y,
-                REMOTE_WIDTH, REMOTE_HEIGHT, scalingType);
+                REMOTE_WIDTH, REMOTE_HEIGHT, scalingType, false);
+
         VideoRendererGui.update(localRender,
                 LOCAL_X_CONNECTED, LOCAL_Y_CONNECTED,
                 LOCAL_WIDTH_CONNECTED, LOCAL_HEIGHT_CONNECTED,
-                scalingType);
+                scalingType, false);
     }
 
     @Override
@@ -193,6 +224,6 @@ public void onRemoveRemoteStream(int endPoint) {
         VideoRendererGui.update(localRender,
                 LOCAL_X_CONNECTING, LOCAL_Y_CONNECTING,
                 LOCAL_WIDTH_CONNECTING, LOCAL_HEIGHT_CONNECTING,
-                scalingType);
+                scalingType, false);
     }
 }
\ No newline at end of file
diff --git a/app/src/main/res/layout/main.xml b/app/src/main/res/layout/main.xml
index da78d3b..595940f 100644
--- a/app/src/main/res/layout/main.xml
+++ b/app/src/main/res/layout/main.xml
@@ -4,13 +4,46 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
+
     <android.opengl.GLSurfaceView
         android:id="@+id/glview_call"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_below="@+id/init_call"
         android:layout_width="match_parent"
         android:layout_height="match_parent" />
+
     <android.view.SurfaceView
         android:id="@+id/preview"
         android:layout_width="match_parent"
         android:layout_height="match_parent" />
 
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/init_call"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:text="@string/call"
+        />
+
+    <EditText
+        android:layout_width="100dp"
+        android:layout_height="wrap_content"
+        android:id="@+id/session_id_input"
+        android:layout_toRightOf="@id/init_call"
+        android:layout_toEndOf="@+id/init_call"
+        android:layout_alignParentTop="true"
+        />
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_toEndOf="@+id/session_id_input"
+        android:layout_toRightOf="@+id/session_id_input"
+        android:id="@+id/answer_call"
+        android:text="@string/answer"
+        />
+
 </RelativeLayout>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index c0f46f7..55b8475 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -1,7 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <string name="app_name">AndroidRTC</string>
-    <string name="host">ns37269.ip-91-121-3.eu</string>
+    <string name="host">192.168.1.112</string>
     <string name="port">3000</string>
     <string name="action_settings">Options</string>
+    <string name="call">Call</string>
+    <string name="answer">Answer</string>
 </resources>
diff --git a/webrtc-client/build.gradle b/webrtc-client/build.gradle
index 26ef5c1..cbcd191 100644
--- a/webrtc-client/build.gradle
+++ b/webrtc-client/build.gradle
@@ -21,5 +21,5 @@ android {
 
 dependencies {
     compile 'com.github.nkzawa:socket.io-client:0.4.2'
-    compile 'io.pristine:libjingle:8871@aar'
+    compile 'io.pristine:libjingle:9456@aar'
 }
