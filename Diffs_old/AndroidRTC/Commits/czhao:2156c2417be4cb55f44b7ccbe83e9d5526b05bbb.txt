diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 7259230..6678d6e 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -22,9 +22,11 @@
 
 
     <application android:label="@string/app_name"  android:allowBackup="true">
+
         <activity android:name="RtcActivity"
             android:label="@string/app_name"
             android:screenOrientation="fullUser"
+            android:launchMode="singleInstance"
             android:configChanges="orientation|screenSize">
 
             <intent-filter>
diff --git a/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java b/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java
index dcb2075..c39ad11 100644
--- a/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java
+++ b/app/src/main/java/fr/pchab/androidrtc/RtcActivity.java
@@ -55,6 +55,7 @@
     private String callerId, calleeId;
 
     private NfcAdapter mNfcAdapter;
+    private final boolean VIDEO_ENABLED = false;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -134,8 +135,7 @@ private void init() {
         Point displaySize = new Point();
         getWindowManager().getDefaultDisplay().getSize(displaySize);
         PeerConnectionParameters params = new PeerConnectionParameters(
-                true, false, displaySize.x, displaySize.y, 30, 1, VIDEO_CODEC_VP9, true, 1, AUDIO_CODEC_OPUS, true);
-
+                VIDEO_ENABLED, false, displaySize.x, displaySize.y, 30, 1, VIDEO_CODEC_VP9, true, 1, AUDIO_CODEC_OPUS, true);
         client = new WebRtcClient(this, mSocketAddress, params, VideoRendererGui.getEGLContext());
     }
 
@@ -171,18 +171,20 @@ public void onResume() {
         super.onResume();
         vsv.onResume();
 
+        if(client != null) {
+            client.onResume();
+        }
+
         if (NfcAdapter.ACTION_NDEF_DISCOVERED.equals(getIntent().getAction())) {
 
             findViewById(R.id.init_call).postDelayed(new Runnable() {
                 @Override
                 public void run() {
-                    processIntent(getIntent());
+                    if (client != null) {
+                        processIntent(getIntent());
+                    }
                 }
-            }, 1000);
-        }
-
-        if(client != null) {
-            client.onResume();
+            }, 2000);
         }
     }
 
@@ -222,7 +224,7 @@ public void onCallReady(String callId) {
                 e.printStackTrace();
             }
         } else {
-            call(callId);
+            //call(callId);
             calleeId = callId;
         }
     }
@@ -232,7 +234,7 @@ public void answer(String callerId) throws JSONException {
         startCam();
     }
 
-    public void call(String callId) {
+   /* public void call(String callId) {
         Intent msg = new Intent(Intent.ACTION_SEND);
         msg.putExtra(Intent.EXTRA_TEXT, mSocketAddress + callId);
         msg.setType("text/plain");
@@ -244,7 +246,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == VIDEO_CALL_SENT) {
             startCam();
         }
-    }
+    }*/
 
     public void startCam() {
         // Camera settings
@@ -263,6 +265,10 @@ public void run() {
 
     @Override
     public void onLocalStream(MediaStream localStream) {
+        if (!VIDEO_ENABLED){
+            return;
+        }
+
         localStream.videoTracks.get(0).addRenderer(new VideoRenderer(localRender));
 
         VideoRendererGui.update(localRender,
@@ -273,6 +279,9 @@ public void onLocalStream(MediaStream localStream) {
 
     @Override
     public void onAddRemoteStream(MediaStream remoteStream, int endPoint) {
+        if (!VIDEO_ENABLED){
+            return;
+        }
         remoteStream.videoTracks.get(0).addRenderer(new VideoRenderer(remoteRender));
         VideoRendererGui.update(remoteRender,
                 REMOTE_X, REMOTE_Y,
@@ -286,6 +295,9 @@ public void onAddRemoteStream(MediaStream remoteStream, int endPoint) {
 
     @Override
     public void onRemoveRemoteStream(int endPoint) {
+        if (!VIDEO_ENABLED){
+            return;
+        }
         VideoRendererGui.update(localRender,
                 LOCAL_X_CONNECTING, LOCAL_Y_CONNECTING,
                 LOCAL_WIDTH_CONNECTING, LOCAL_HEIGHT_CONNECTING,
