diff --git a/app/build.gradle b/app/build.gradle
index f45feb4d..19a78876 100755
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -21,7 +21,7 @@ android {
     defaultConfig {
         applicationId "com.mobicomkit.sample"
         minSdkVersion 14
-        targetSdkVersion 27
+        targetSdkVersion 25
         versionCode 1
         versionName "1.0"
         multiDexEnabled true
diff --git a/mobicomkit/build.gradle b/mobicomkit/build.gradle
index 612224af..db748f88 100755
--- a/mobicomkit/build.gradle
+++ b/mobicomkit/build.gradle
@@ -6,7 +6,7 @@ android {
 
     defaultConfig {
         minSdkVersion 14
-        targetSdkVersion 27
+        targetSdkVersion 25
         versionCode 1
         versionName "5.9"
     }
@@ -16,6 +16,21 @@ android {
             minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
+        ci {
+            initWith(release)
+        }
+
+        staging {
+            initWith(release)
+        }
+
+        debug {
+            initWith(release)
+        }
+
+        superLogger {
+            initWith(release)
+        }
     }
     lintOptions {
 
@@ -47,6 +62,7 @@ dependencies {
     implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
     implementation 'com.android.support:appcompat-v7:27.1.1'
     implementation 'com.google.code.gson:gson:2.8.5'
+    implementation 'com.android.support:support-compat:27.1.1'
     api project(':mobicommons')
     //Note: use this for customization
     //implementation 'com.applozic.mobiframework:mobicommons:5.9' //Note: use this in case customization is not required
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserClientService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserClientService.java
index 9e89aa7a..9535cd42 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserClientService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserClientService.java
@@ -184,9 +184,10 @@ public void clearDataAndPreference() {
         MessageDatabaseService.recentlyAddedMessage.clear();
         MobiComDatabaseHelper.getInstance(context).delDatabase();
         mobiComUserPreference.setUrl(url);
-        Intent intent = new Intent(context, ApplozicMqttIntentService.class);
+        Intent intent = new Intent();
         intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
         intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
+
         ApplozicMqttIntentService.enqueueWork(context, intent);
     }
 
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserLoginTask.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserLoginTask.java
index b1609922..5fb4742b 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserLoginTask.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/user/UserLoginTask.java
@@ -7,7 +7,6 @@
 import android.content.Context;
 import android.os.AsyncTask;
 
-import com.applozic.mobicomkit.api.account.register.RegisterUserClientService;
 import com.applozic.mobicomkit.api.account.register.RegistrationResponse;
 import com.applozic.mobicomkit.listners.AlLoginHandler;
 
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/ApplozicMqttIntentService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/ApplozicMqttIntentService.java
index 0d306726..c2bf83e9 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/ApplozicMqttIntentService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/ApplozicMqttIntentService.java
@@ -6,6 +6,7 @@
 import android.support.annotation.NonNull;
 import android.support.v4.app.JobIntentService;
 import android.text.TextUtils;
+import android.util.Log;
 
 import com.applozic.mobicomkit.api.ApplozicMqttService;
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
diff --git a/mobicomkitui/build.gradle b/mobicomkitui/build.gradle
index f465a9bb..75f8b753 100755
--- a/mobicomkitui/build.gradle
+++ b/mobicomkitui/build.gradle
@@ -6,7 +6,7 @@ android {
 
     defaultConfig {
         minSdkVersion 14
-        targetSdkVersion 27
+        targetSdkVersion 25
         versionCode 1
         versionName "5.9"
     }
@@ -15,6 +15,22 @@ android {
             minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
+
+        ci {
+            initWith(release)
+        }
+
+        staging {
+            initWith(release)
+        }
+
+        debug {
+            initWith(release)
+        }
+
+        superLogger {
+            initWith(release)
+        }
     }
     lintOptions {
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index 02301c3d..2c8159c2 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -113,23 +113,34 @@
     private Contact contact;
     private NotificationManager notificationManager;
 
-    public ConversationUIService(FragmentActivity fragmentActivity) {
+    /**
+     * WishTrip custom code
+     **/
+
+    MobiComQuickConversationFragment mobiComQuickConversationFragment;
+
+    public ConversationUIService(FragmentActivity fragmentActivity,MobiComQuickConversationFragment mobiComQuickConversationFragment) {
         this.fragmentActivity = fragmentActivity;
+        this.mobiComQuickConversationFragment = mobiComQuickConversationFragment;
         this.baseContactService = new AppContactService(fragmentActivity);
+        this.notificationManager  = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
         this.userPreference = MobiComUserPreference.getInstance(fragmentActivity);
-        this.notificationManager = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
-        this.fileClientService = new FileClientService(fragmentActivity);
     }
 
     public MobiComQuickConversationFragment getQuickConversationFragment() {
+        return mobiComQuickConversationFragment;
+    }
 
-        MobiComQuickConversationFragment quickConversationFragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
+    /**
+     * WishTrip custom code -- END
+     **/
 
-        if (quickConversationFragment == null) {
-            quickConversationFragment = new MobiComQuickConversationFragment();
-            ConversationActivity.addFragment(fragmentActivity, quickConversationFragment, QUICK_CONVERSATION_FRAGMENT);
-        }
-        return quickConversationFragment;
+    public ConversationUIService(FragmentActivity fragmentActivity) {
+        this.fragmentActivity = fragmentActivity;
+        this.baseContactService = new AppContactService(fragmentActivity);
+        this.userPreference = MobiComUserPreference.getInstance(fragmentActivity);
+        this.notificationManager = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
+        this.fileClientService = new FileClientService(fragmentActivity);
     }
 
     public ConversationFragment getConversationFragment() {
@@ -421,23 +432,47 @@ public void removeConversation(Message message, String formattedContactNumber) {
         }
     }
 
+    /**
+     * WishTrip custom code
+     **/
+
+//    public void addMessage(Message message) {
+//        if (message.isUpdateMessage()) {
+//            if (!BroadcastService.isQuick()) {
+//                return;
+//            }
+//
+//            MobiComQuickConversationFragment fragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
+//            if (fragment != null) {
+//                if (message.isHidden()) {
+//                    fragment.refreshView();
+//                } else {
+//                    fragment.addMessage(message);
+//                }
+//            }
+//        }
+//    }
+
     public void addMessage(Message message) {
         if (message.isUpdateMessage()) {
             if (!BroadcastService.isQuick()) {
                 return;
             }
 
-            MobiComQuickConversationFragment fragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
-            if (fragment != null) {
-                if (message.isHidden()) {
-                    fragment.refreshView();
-                } else {
-                    fragment.addMessage(message);
+            if (mobiComQuickConversationFragment != null) {
+                if(message.isHidden()){
+                    mobiComQuickConversationFragment.refreshView();
+                }else {
+                    mobiComQuickConversationFragment.addMessage(message);
                 }
             }
         }
     }
 
+    /**
+     * WishTrip custom code -- END
+     **/
+
     public void updateLastMessage(String keyString, String userId) {
         if (!BroadcastService.isQuick()) {
             return;
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
index 07dd88bb..cbd43933 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
@@ -27,6 +27,11 @@
     private ConversationUIService conversationUIService;
     private BaseContactService baseContactService;
 
+    public MobiComKitBroadcastReceiver(FragmentActivity fragmentActivity,ConversationUIService conversationUIService) {
+        this.conversationUIService = conversationUIService;
+        this.baseContactService = new AppContactService(fragmentActivity);
+    }
+
     public MobiComKitBroadcastReceiver(FragmentActivity fragmentActivity) {
         this.conversationUIService = new ConversationUIService(fragmentActivity);
         this.baseContactService = new AppContactService(fragmentActivity);
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index 5715dace..3ea80187 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -403,10 +403,17 @@ protected void onCreate(Bundle savedInstanceState) {
                     }
                     addFragment(this, conversation, ConversationUIService.CONVERSATION_FRAGMENT);
                 }
-            } else {
-                setSearchListFragment(quickConversationFragment);
-                addFragment(this, quickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT);
             }
+            /**
+             * WishTrip custom code
+             **/
+//            else {
+//                setSearchListFragment(quickConversationFragment);
+//                addFragment(this, quickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT);
+//            }
+            /**
+             * WishTrip custom code - END
+             **/
         }
         mobiComKitBroadcastReceiver = new MobiComKitBroadcastReceiver(this);
         InstructionUtil.showInfo(this, R.string.info_message_sync, BroadcastService.INTENT_ACTIONS.INSTRUCTION.toString());
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index 24e27a62..85689945 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -147,8 +147,17 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         recyclerView.addItemDecoration(dividerItemDecoration);
         recyclerView.setAdapter(recyclerAdapter);
         //recyclerView.addItemDecoration(new FooterItemDecoration(getContext(), recyclerView, R.layout.mobicom_message_list_header_footer));
-        toolbar = (Toolbar) getActivity().findViewById(R.id.my_toolbar);
-        toolbar.setClickable(false);
+
+        /**
+         * WishTrip custom code
+         **/
+//        toolbar = (Toolbar) getActivity().findViewById(R.id.my_toolbar);
+//        toolbar.setClickable(false);
+        /**
+         * WishTrip custom code -- END
+         **/
+
+
         fabButton = (ImageButton) list.findViewById(R.id.fab_start_new);
         loading = true;
         LinearLayout individualMessageSendLayout = (LinearLayout) list.findViewById(R.id.individual_message_send_layout);
@@ -202,28 +211,35 @@ public void onClick(View view) {
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
 
-
-        if (alCustomizationSettings.isStartNewButton() || ApplozicSetting.getInstance(getContext()).isStartNewButtonVisible()) {
-            menu.findItem(R.id.start_new).setVisible(true);
-        }
-        if (alCustomizationSettings.isStartNewGroup() || ApplozicSetting.getInstance(getContext()).isStartNewGroupButtonVisible()) {
-            menu.findItem(R.id.conversations).setVisible(true);
-        }
-        if (alCustomizationSettings.isRefreshOption()) {
-            menu.findItem(R.id.refresh).setVisible(true);
-        }
-        if (alCustomizationSettings.isProfileOption()) {
-            menu.findItem(R.id.applozicUserProfile).setVisible(true);
-        }
-        if (alCustomizationSettings.isMessageSearchOption()) {
-            menu.findItem(R.id.menu_search).setVisible(true);
-        }
-        if (alCustomizationSettings.isBroadcastOption()) {
-            menu.findItem(R.id.broadcast).setVisible(true);
-        }
-        if (alCustomizationSettings.isLogoutOption()) {
-            menu.findItem(R.id.logout).setVisible(true);
-        }
+        /**
+         * WishTrip custom code
+         **/
+
+//        if (alCustomizationSettings.isStartNewButton() || ApplozicSetting.getInstance(getContext()).isStartNewButtonVisible()) {
+//            menu.findItem(R.id.start_new).setVisible(true);
+//        }
+//        if (alCustomizationSettings.isStartNewGroup() || ApplozicSetting.getInstance(getContext()).isStartNewGroupButtonVisible()) {
+//            menu.findItem(R.id.conversations).setVisible(true);
+//        }
+//        if (alCustomizationSettings.isRefreshOption()) {
+//            menu.findItem(R.id.refresh).setVisible(true);
+//        }
+//        if (alCustomizationSettings.isProfileOption()) {
+//            menu.findItem(R.id.applozicUserProfile).setVisible(true);
+//        }
+//        if (alCustomizationSettings.isMessageSearchOption()) {
+//            menu.findItem(R.id.menu_search).setVisible(true);
+//        }
+//        if (alCustomizationSettings.isBroadcastOption()) {
+//            menu.findItem(R.id.broadcast).setVisible(true);
+//        }
+//        if (alCustomizationSettings.isLogoutOption()) {
+//            menu.findItem(R.id.logout).setVisible(true);
+//        }
+
+        /**
+         * WishTrip custom code -- END
+         **/
     }
 
     public void addMessage(final Message message) {
@@ -514,8 +530,18 @@ public void onPause() {
     @Override
     public void onResume() {
         //Assigning to avoid notification in case if quick conversation fragment is opened....
-        toolbar.setTitle(getResources().getString(R.string.chats));
-        toolbar.setSubtitle("");
+
+        /**
+         * WishTrip custom code
+         **/
+
+//        toolbar.setTitle(getResources().getString(R.string.chats));
+//        toolbar.setSubtitle("");
+
+        /**
+         *  WishTrip custom code -- END
+         **/
+
         BroadcastService.selectMobiComKitAll();
         super.onResume();
         if (recyclerView != null) {
diff --git a/mobicommons/build.gradle b/mobicommons/build.gradle
index 3a92fd68..5cef8220 100755
--- a/mobicommons/build.gradle
+++ b/mobicommons/build.gradle
@@ -6,7 +6,7 @@ android {
 
     defaultConfig {
         minSdkVersion 14
-        targetSdkVersion 27
+        targetSdkVersion 25
         versionCode 1
         versionName "5.9"
     }
@@ -15,6 +15,22 @@ android {
             minifyEnabled false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
+
+        ci {
+            initWith(release)
+        }
+
+        staging {
+            initWith(release)
+        }
+
+        debug {
+            initWith(release)
+        }
+
+        superLogger {
+            initWith(release)
+        }
     }
     lintOptions {
 
