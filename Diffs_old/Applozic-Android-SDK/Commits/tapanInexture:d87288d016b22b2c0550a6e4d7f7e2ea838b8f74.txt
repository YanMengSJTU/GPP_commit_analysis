diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index f246801a..d7235972 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -180,26 +180,6 @@ public ConversationActivity() {
 
     }
 
-    //manages toolbar visibility here.. hide show
-    public static void showToolbar() {
-        llToolbar.setVisibility(View.VISIBLE);
-        hideSecondaryToolbar();
-    }
-
-    public static void hideToolbar() {
-        llToolbar.setVisibility(View.GONE);
-        showSecondaryToolbar();
-    }
-
-    //this is for managing toolbar while chatting
-    public static void showSecondaryToolbar() {
-        secondaryToolbar.setVisibility(View.VISIBLE);
-    }
-
-    public static void hideSecondaryToolbar() {
-        secondaryToolbar.setVisibility(View.GONE);
-    }
-
     public static void addFragment(FragmentActivity fragmentActivity, Fragment fragmentToAdd, String fragmentTag) {
         FragmentManager supportFragmentManager = fragmentActivity.getSupportFragmentManager();
 
@@ -1464,4 +1444,38 @@ protected void onPostExecute(Boolean aBoolean) {
         }
     }
 
+    /*
+    * Coded for customization
+    * by TapanHP
+    *
+    * */
+    //manages toolbar visibility here.. hide show
+    public static void showToolbar() {
+        llToolbar.setVisibility(View.VISIBLE);
+        hideSecondaryToolbar();
+    }
+
+    public static void hideToolbar() {
+        llToolbar.setVisibility(View.GONE);
+        showSecondaryToolbar();
+    }
+
+    //this is for managing toolbar while chatting
+    public static void showSecondaryToolbar() {
+        secondaryToolbar.setVisibility(View.VISIBLE);
+    }
+
+    public static void hideSecondaryToolbar() {
+        secondaryToolbar.setVisibility(View.GONE);
+    }
+
+    public void setNameInSecondaryToolbar(String name) {
+        tvContactName.setText(name);
+    }
+
+    public void setUserStateInSecondaryToolbar(String userState) {
+        tvContactChatState.setText(userState);
+    }
+
+
 }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 41e263f5..b54e0113 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -148,7 +148,6 @@
 
 import static android.view.View.VISIBLE;
 import static com.applozic.mobicomkit.uiwidgets.conversation.fragment.MultimediaOptionFragment.REQUEST_CODE_ATTACH_PHOTO;
-import static com.applozic.mobicomkit.uiwidgets.conversation.fragment.MultimediaOptionFragment.REQUEST_MULTI_ATTCAHMENT;
 import static java.util.Collections.disjoint;
 
 //import com.applozic.mobicomkit.uiwidgets.conversation.adapter.DetailedConversationAdapter.TemplateCallbackListener;
@@ -1598,6 +1597,7 @@ public void loadConversation(final Contact contact, final Channel channel, final
         }
 
         if (contact != null && this.channel != null) {
+            ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar("");
             //((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
             if (menu != null) {
                 menu.findItem(R.id.unmuteGroup).setVisible(false);
@@ -1750,6 +1750,7 @@ protected void processUpdateLastSeenStatus(final Contact withUserContact) {
         }
 
         if (withUserContact.isBlocked() || withUserContact.isBlockedBy() || withUserContact.isDeleted()) {
+            ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar("");
             //((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
             return;
         }
@@ -1764,10 +1765,13 @@ public void run() {
                 if (withUserContact != null) {
                     if (withUserContact.isConnected()) {
                         typingStarted = false;
+                        ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(getActivity().getString(R.string.user_online));
                         //((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.user_online));
                     } else if (withUserContact.getLastSeenAt() != 0) {
+                        ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(withUserContact.getLastSeenAt()));
 //                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(withUserContact.getLastSeenAt()));
                     } else {
+                        ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar("");
 //                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
                     }
                 }
@@ -1788,13 +1792,17 @@ public void updateChannelSubTitle() {
 
                     if (withUserContact != null) {
                         if (withUserContact.isBlocked()) {
+                            ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar("");
 //                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
                         } else {
                             if (withUserContact.isConnected()) {
+                                ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(getActivity().getString(R.string.user_online));
 //                                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.user_online));
                             } else if (withUserContact.getLastSeenAt() != 0) {
+                                ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(withUserContact.getLastSeenAt()));
 //                                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(withUserContact.getLastSeenAt()));
                             } else {
+                                ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar("");
 //                                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
                             }
                         }
@@ -1826,11 +1834,14 @@ public void updateChannelSubTitle() {
                         }
                         int lastIndex = stringBuffer.lastIndexOf(",");
                         String userIds = stringBuffer.replace(lastIndex, lastIndex + 1, "").toString();
+                        ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(userIds);
 //                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(userIds);
                     } else {
+                        ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(stringBuffer.toString());
 //                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(stringBuffer.toString());
                     }
                 } else {
+                    ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(youString);
 //                    ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(youString);
                 }
             }
@@ -2579,12 +2590,15 @@ public void run() {
                                 return;
                             }
                             if (Channel.GroupType.GROUPOFTWO.getValue().equals(channel.getType())) {
+                                ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(getActivity().getString(R.string.is_typing));
                                 // ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.is_typing));
                             } else {
+                                ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(displayNameContact.getDisplayName() + " " + getActivity().getString(R.string.is_typing));
 //                                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(displayNameContact.getDisplayName() + " " + getActivity().getString(R.string.is_typing));
                             }
                         }
                     } else {
+                        ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar(getActivity().getString(R.string.is_typing));
 //                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.is_typing));
                     }
                 } else {
@@ -2681,6 +2695,8 @@ public void updateTitle() {
             }
         }
         if (stringBufferTitle != null) {
+            ((ConversationActivity) getActivity()).setNameInSecondaryToolbar(stringBufferTitle.toString());
+
 //            ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(stringBufferTitle.toString());
         }
 
@@ -2956,6 +2972,7 @@ public void onResume() {
                 }
                 contact = appContactService.getContactById(contact.getContactIds());
                 if (contact.isBlocked() || contact.isBlockedBy()) {
+                    ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar("");
                     //((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
                 } else {
                     updateLastSeenStatus();
@@ -3059,6 +3076,7 @@ public void updateChannelTitle() {
             if (newChannel != null && !TextUtils.isEmpty(channel.getName()) && !channel.getName().equals(newChannel.getName())) {
                 title = ChannelUtils.getChannelTitleName(newChannel, MobiComUserPreference.getInstance(getActivity()).getUserId());
                 channel = newChannel;
+                ((ConversationActivity) getActivity()).setNameInSecondaryToolbar(title);
                 //((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(title);
             }
         }
@@ -3068,6 +3086,7 @@ public void updateTitleForOpenGroup() {
         try {
             if (channel != null) {
                 Channel newChannel = ChannelService.getInstance(getActivity()).getChannelByChannelKey(channel.getKey());
+                ((ConversationActivity) getActivity()).setNameInSecondaryToolbar(newChannel.getName());
                 //((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(newChannel.getName());
             }
             updateChannelSubTitle();
@@ -3117,6 +3136,7 @@ public void blockUserProcess(final String userId, final boolean block, final boo
             public void onSuccess(ApiResponse apiResponse) {
 
                 if (block && typingStarted) {
+                    ((ConversationActivity) getActivity()).setUserStateInSecondaryToolbar("");
                     //((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
                     Intent intent = new Intent(getActivity(), ApplozicMqttIntentService.class);
                     intent.putExtra(ApplozicMqttIntentService.CONTACT, contact);
diff --git a/mobicomkitui/src/main/res/layout/quickconversion_activity.xml b/mobicomkitui/src/main/res/layout/quickconversion_activity.xml
index 0294b8f6..8b1ded0d 100644
--- a/mobicomkitui/src/main/res/layout/quickconversion_activity.xml
+++ b/mobicomkitui/src/main/res/layout/quickconversion_activity.xml
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical">
@@ -60,12 +61,12 @@
                 android:layout_weight="1"
                 android:gravity="end|center_vertical"
                 android:lines="1"
-                android:text="Tapan Parmar"
                 android:textColor="@color/applozic_theme_color_app"
                 android:textSize="22sp"
                 app:autoSizeMaxTextSize="22sp"
                 app:autoSizeMinTextSize="16sp"
-                app:autoSizeTextType="uniform" />
+                app:autoSizeTextType="uniform"
+                tools:text="Tapan Parmar" />
 
             <android.support.v7.widget.AppCompatTextView
                 android:id="@+id/tvSecondaryToolbarContactStatus"
@@ -74,12 +75,12 @@
                 android:ellipsize="end"
                 android:gravity="end"
                 android:lines="1"
-                android:text="@string/is_typing"
                 android:textColor="@color/applozic_theme_color_app"
-                android:textSize="14sp"
-                app:autoSizeMaxTextSize="14sp"
+                android:textSize="12sp"
+                app:autoSizeMaxTextSize="12sp"
                 app:autoSizeMinTextSize="10sp"
-                app:autoSizeTextType="uniform" />
+                app:autoSizeTextType="uniform"
+                tools:text="@string/is_typing" />
 
         </LinearLayout>
 
