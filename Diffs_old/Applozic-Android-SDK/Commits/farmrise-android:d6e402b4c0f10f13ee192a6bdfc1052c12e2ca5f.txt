diff --git a/app/app.iml b/app/app.iml
index 1a15b0cc..a50bd99a 100755
--- a/app/app.iml
+++ b/app/app.iml
@@ -111,7 +111,7 @@
     <orderEntry type="library" exported="" name="firebase-messaging-license-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-messaging-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-common-license-11.8.0" level="project" />
-    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="support-v4-27.1.0" level="project" />
     <orderEntry type="library" exported="" scope="TEST" name="multidex-instrumentation-1.0.1" level="project" />
     <orderEntry type="library" exported="" name="fabric-1.3.12" level="project" />
@@ -122,16 +122,16 @@
     <orderEntry type="library" exported="" name="livedata-core-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="runtime-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="1_runtime-1.1.0" level="project" />
-    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-analytics-impl-9.0.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-common-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="cardview-v7-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="answers-1.3.8" level="project" />
-    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
-    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="play-services-tasks-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-base-11.8.0" level="project" />
-    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-iid-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-basement-license-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="glide-4.5.0" level="project" />
@@ -139,19 +139,19 @@
     <orderEntry type="library" exported="" name="play-services-base-license-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="support-media-compat-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="crashlytics-core-2.3.10" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="recyclerview-v7-27.1.0" level="project" />
-    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-core-9.0.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-basement-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-iid-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="exifinterface-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="play-services-location-license-11.8.0" level="project" />
-    <orderEntry type="library" exported="" name="exifinterface-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-maps-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="crashlytics-2.5.7" level="project" />
     <orderEntry type="library" exported="" name="play-services-tasks-license-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="circleimageview-2.0.0" level="project" />
-    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="common-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="1_common-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="multidex-1.0.1" level="project" />
@@ -164,7 +164,15 @@
     <orderEntry type="library" exported="" name="gson-2.8.0" level="project" />
     <orderEntry type="library" exported="" name="disklrucache-4.5.0" level="project" />
     <orderEntry type="library" exported="" name="annotations-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="org.eclipse.paho.client.mqttv3-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="org.eclipse.paho.android.service-1.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 21aebd5c..6d6e42db 100755
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -54,7 +54,9 @@
             android:exported="true"
             android:launchMode="singleTop"
             android:label="@string/ecommerce"
-            android:theme="@style/FarmRiseTheme"/>
+            android:theme="@style/FarmRiseTheme"
+            android:windowSoftInputMode="adjustPan"/>
+
         <activity
             android:name="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
             android:configChanges="keyboardHidden|screenSize|locale|smallestScreenSize|screenLayout|orientation"
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
index 8597e809..487d8ce1 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -1,6 +1,5 @@
 package com.applozic.mobicomkit.sample;
 
-import android.*;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -9,6 +8,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.provider.ContactsContract;
 import android.support.annotation.NonNull;
 import android.support.design.widget.BottomNavigationView;
 import android.support.v4.app.ActivityCompat;
@@ -38,6 +38,7 @@
 import com.applozic.mobicomkit.contact.AppContactService;
 import com.applozic.mobicomkit.contact.database.ContactDatabase;
 import com.applozic.mobicomkit.uiwidgets.ApplozicSetting;
+import com.applozic.mobicomkit.uiwidgets.ContactsChangeObserver;
 import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
 import com.applozic.mobicomkit.uiwidgets.conversation.MessageCommunicator;
 import com.applozic.mobicomkit.uiwidgets.conversation.MobiComKitBroadcastReceiver;
@@ -68,13 +69,14 @@
     ConversationUIService conversationUIService;
     MobiComQuickConversationFragment mobiComQuickConversationFragment;
     MobiComKitBroadcastReceiver mobiComKitBroadcastReceiver;
-
     private HashMap<String, Stack<Fragment>> mStacks;
     private BottomNavigationView bottomNavigationView;
     private String currentTab;
     private boolean isStopCalled = false;
     // Request code for READ_CONTACTS. It can be any number > 0.
     private static final int PERMISSIONS_REQUEST_READ_CONTACTS = 100;
+    private ContactsChangeObserver observer;
+
     private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
             = new BottomNavigationView.OnNavigationItemSelectedListener() {
         @Override
@@ -92,7 +94,6 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                     break;
 
             }
-
             return true;
 
         }
@@ -138,6 +139,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mActionBar = getSupportActionBar();
         //Used to select an item programmatically
         //bottomNavigationView.getMenu().getItem(2).setChecked(true);
+
         try {
             if (getIntent() != null && getIntent().getExtras() != null && getIntent().getExtras().getBoolean(ConversationUIService.FROM_GROUP_DELETE)) {
                 bottomNavigationView.setSelectedItemId(R.id.action_chat);
@@ -169,8 +171,8 @@ private void showContacts() {
             // onRequestPermissionsResult(int, String[], int[]) override method
         } else {
             // Android version is lesser than 6.0 or the permission is already granted.
-            Intent intent = new Intent(this, DeviceContactSyncService.class);
-            DeviceContactSyncService.enqueueWork(this, intent);
+            /*Intent intent = new Intent(this, DeviceContactSyncService.class);
+            DeviceContactSyncService.enqueueWork(this, intent);*/
         }
     }
 
@@ -193,7 +195,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
     private void initialize() {
 
         //Set Up BottomNavigationView
-        bottomNavigationView = (BottomNavigationView) findViewById(R.id.navigation);
+        bottomNavigationView = findViewById(R.id.navigation);
         BottomNavigationViewHelper.disableShiftMode(bottomNavigationView);
         bottomNavigationView.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
 
@@ -217,6 +219,7 @@ private void selectedTab(String tabId) {
         switch (tabId) {
             case TAB_HOME:
                 pushFragments(tabId, new HomeFragment(), true);
+                updateConversationsList();
                 break;
             case TAB_CHAT:
 
@@ -246,6 +249,14 @@ private void selectedTab(String tabId) {
         }*/
     }
 
+    //method to update the conversations list when switching the tabs
+    private void updateConversationsList() {
+        if (mobiComQuickConversationFragment != null) {
+            mobiComQuickConversationFragment.onQueryTextChange(null);
+        }
+    }
+
+
     public void pushFragments(String tag, Fragment fragment, boolean shouldAdd) {
 
         if (!isStopCalled) {
@@ -415,8 +426,17 @@ protected void onResume() {
         LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
         Intent subscribeIntent = new Intent(this, ApplozicMqttIntentService.class);
         subscribeIntent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
+
+        //startService(subscribeIntent);
+
         ApplozicMqttIntentService.enqueueWork(HomeActivity.this, subscribeIntent);
 
+        if (observer != null && MobiComUserPreference.getInstance(this).isLoggedIn()) {
+            getApplicationContext().getContentResolver().registerContentObserver(
+                    ContactsContract.Contacts.CONTENT_URI, true, observer);
+        }
+
+
         if (!Utils.isInternetAvailable(this)) {
             String errorMessage = getResources().getString(R.string.internet_connection_not_available);
             showErrorMessageView(errorMessage);
@@ -426,12 +446,19 @@ protected void onResume() {
     @Override
     protected void onPause() {
         LocalBroadcastManager.getInstance(this).unregisterReceiver(mobiComKitBroadcastReceiver);
-        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
-        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
-        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
-        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
-        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
-        ApplozicMqttIntentService.enqueueWork(HomeActivity.this, intent);
+
+//<<<<<<< HEAD
+//        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
+//        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
+//        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
+//        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
+//        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
+//        ApplozicMqttIntentService.enqueueWork(HomeActivity.this, intent);
+//
+        if (observer != null && MobiComUserPreference.getInstance(this).isLoggedIn()) {
+            getApplicationContext().getContentResolver().unregisterContentObserver(observer);
+        }
+
         super.onPause();
     }
 
@@ -447,6 +474,9 @@ public void onSuccess(RegistrationResponse registrationResponse, final Context c
 
                 ApplozicClient.getInstance(context).enableDeviceContactSync(true);
 
+                Intent intent = new Intent(context, DeviceContactSyncService.class);
+                DeviceContactSyncService.enqueueWork(context, intent);
+
 
                 /*Map<ApplozicSetting.RequestCode, String> activityCallbacks = new HashMap<ApplozicSetting.RequestCode, String>();
                 activityCallbacks.put(ApplozicSetting.RequestCode.USER_LOOUT, HomeActivity.class.getName());
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
index 8f592ff8..ca1ac9b7 100755
--- a/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
@@ -95,6 +95,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         //FacebookSdk.sdkInitialize(this);
 
+        //Applozic.init(this,getString(R.string.application_key));
 
         setContentView(R.layout.activity_login);
         setupUI(findViewById(R.id.layout));
diff --git a/mobicomkit/mobicomkit.iml b/mobicomkit/mobicomkit.iml
index 03339729..58dfaeee 100755
--- a/mobicomkit/mobicomkit.iml
+++ b/mobicomkit/mobicomkit.iml
@@ -63,13 +63,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
@@ -77,6 +70,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
@@ -96,6 +96,8 @@
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="gson-2.8.0" level="project" />
@@ -105,10 +107,15 @@
     <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="viewmodel-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="org.eclipse.paho.client.mqttv3-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="common-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="1_common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-jobdispatcher-0.8.5" level="project" />
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegisterUserClientService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegisterUserClientService.java
index 68651fb6..eb25102c 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegisterUserClientService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegisterUserClientService.java
@@ -319,7 +319,7 @@ public void syncAccountStatus() {
     void createNotificationChannel(Context context) {
         NotificationManager mNotificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
         CharSequence name = MobiComKitConstants.PUSH_NOTIFICATION_NAME;
-        ;
+
         int importance = NotificationManager.IMPORTANCE_HIGH;
         if (mNotificationManager.getNotificationChannel(MobiComKitConstants.AL_PUSH_NOTIFICATION) == null) {
             NotificationChannel mChannel = new NotificationChannel(MobiComKitConstants.AL_PUSH_NOTIFICATION, name, importance);
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegistrationResponse.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegistrationResponse.java
index 60298c06..3760352d 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegistrationResponse.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/account/register/RegistrationResponse.java
@@ -29,8 +29,6 @@ public String getMessage() {
         return message;
     }
 
-    ;
-
     public void setMessage(String message) {
         this.message = message;
     }
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/DeviceContactService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/DeviceContactService.java
index 78f1a858..30d7701a 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/DeviceContactService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/DeviceContactService.java
@@ -159,42 +159,35 @@ public Contact getContactFromContactCursor(Cursor people) {
             return null;
         }
 
-        //Utils.printLog(context, "DeviceContactService", "Modified Display name  : " + displayName);
-
         String formattedPhoneNumber = contactNO;
 
         TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
         String countryCode = telephonyManager.getSimCountryIso().toUpperCase();
-        if (((ALContactProcessor) context.getApplicationContext()) != null) {
-            formattedPhoneNumber = ((ALContactProcessor) context.getApplicationContext()).processContact(contactNO, countryCode);
+        try {
+            if (context.getApplicationContext() instanceof ALContactProcessor) {
+                formattedPhoneNumber = ((ALContactProcessor) context.getApplicationContext()).processContact(contactNO, countryCode);
+            }
+        } catch (ClassCastException e) {
+
         }
 
         ContactDatabase contactDatabase = new ContactDatabase(context);
         Contact contact = contactDatabase.getContactByPhoneNo(formattedPhoneNumber);
         Contact contactByLookupKey = contactDatabase.getContactById(lookupKey);
 
-        /*if (contactDatabase.isContactPresent(formattedPhoneNumber, Contact.ContactType.DEVICE_AND_APPLOZIC)) {
+        if (contactDatabase.isContactPresent(formattedPhoneNumber, Contact.ContactType.DEVICE_AND_APPLOZIC)) {
+            if (!displayName.equals(contact.getPhoneDisplayName())) {
+                contactDatabase.updatePhoneContactDisplayName(formattedPhoneNumber, displayName, Contact.ContactType.DEVICE_AND_APPLOZIC.getValue());
+            }
             return null;
-        }*/
+        }
 
         if (contact != null) {
             //Log.d(TAG, "Contact is present with the same phone number: " + formattedPhoneNumber);
             lookupKey = contact.getUserId();
-            if (!displayName.equals(contact.getPhoneDisplayName())) {
-                contactDatabase.updatePhoneContactDisplayName(formattedPhoneNumber, displayName, contact.getDeviceContactType());
-                return contact;
-            }
         } else if (contactByLookupKey != null) {
             //Log.d(TAG, "Contact is present with the same lookupkey: " + lookupKey);
             lookupKey = lookupKey + "-" + formattedPhoneNumber;
-            if (!displayName.equals(contactByLookupKey.getPhoneDisplayName())) {
-                contactDatabase.updateContact(contactByLookupKey);
-                return contactByLookupKey;
-            }
-        }
-
-        if (contactDatabase.isContactPresent(formattedPhoneNumber, Contact.ContactType.DEVICE_AND_APPLOZIC)) {
-            return null;
         }
 
         Contact newContact = new Contact();
@@ -243,6 +236,9 @@ public void processModifiedContacts() {
                 if (cursorPhone != null && cursorPhone.getCount() > 0) {
                     while (cursorPhone.moveToNext()) {
                         Contact contact = getContactFromContactCursor(cursorPhone);
+                        if (contact == null) {
+                            continue;
+                        }
                         appContactService.upsert(contact);
                         contactNumberList.add(contact.getFormattedContactNumber());
                     }
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/database/ContactDatabase.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/database/ContactDatabase.java
index 951265d7..0e6506c7 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/database/ContactDatabase.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/contact/database/ContactDatabase.java
@@ -77,8 +77,6 @@ public Contact getContact(Cursor cursor, String primaryKeyAliash) {
             contact.setLastMessageAtTime(cursor.getLong(cursor.getColumnIndex(MobiComDatabaseHelper.LAST_MESSAGED_AT)));
 
             if (ApplozicClient.getInstance(context).isDeviceContactSync()) {
-                //String phoneDisplayName = getContactName(contact.getFormattedContactNumber());
-                //contact.setPhoneDisplayName(!TextUtils.isEmpty(phoneDisplayName) ? phoneDisplayName : cursor.getString(cursor.getColumnIndex(MobiComDatabaseHelper.PHONE_CONTACT_DISPLAY_NAME)));
                 contact.setDeviceContactType(cursor.getShort(cursor.getColumnIndex(MobiComDatabaseHelper.DEVICE_CONTACT_TYPE)));
                 contact.setPhoneDisplayName(cursor.getString(cursor.getColumnIndex(MobiComDatabaseHelper.PHONE_CONTACT_DISPLAY_NAME)));
             }
@@ -257,10 +255,12 @@ public ContentValues prepareContactValues(Contact contact) {
         contentValues.put(MobiComDatabaseHelper.FULL_NAME, getFullNameForUpdate(contact));
 
         if (ApplozicClient.getInstance(context).isDeviceContactSync()) {
+
             if (contact.getDeviceContactType() != null) {
                 contentValues.put(MobiComDatabaseHelper.DEVICE_CONTACT_TYPE, contact.getDeviceContactType());
                 contentValues.put(MobiComDatabaseHelper.APPLOZIC_TYPE, contact.isApplozicType() ? 1 : 0);
             }
+
             if (!TextUtils.isEmpty(contact.getFormattedContactNumber())) {
                 contentValues.put(MobiComDatabaseHelper.CONTACT_NO, contact.getFormattedContactNumber());
             }
@@ -318,7 +318,9 @@ public ContentValues prepareContactValues(Contact contact) {
         contentValues.put(MobiComDatabaseHelper.USER_ROLE_TYPE, contact.getRoleType());
         contentValues.put(MobiComDatabaseHelper.LAST_MESSAGED_AT, contact.getLastMessageAtTime());
         contentValues.put(MobiComDatabaseHelper.USER_TYPE_ID, contact.getUserTypeId());
-        contentValues.put(MobiComDatabaseHelper.DELETED_AT, contact.getDeletedAtTime());
+        if (contact.getDeletedAtTime() != null && contact.getDeletedAtTime() != 0) {
+            contentValues.put(MobiComDatabaseHelper.DELETED_AT, contact.getDeletedAtTime());
+        }
         return contentValues;
     }
 
@@ -627,7 +629,9 @@ public void saveOrUpdate(Contact contact) {
         if (existingContact == null) {
             addContact(contact);
         } else {
-            if (Contact.ContactType.DEVICE_AND_APPLOZIC.getValue().equals(contact.getDeviceContactType())) {
+            if (Contact.ContactType.DEVICE_AND_APPLOZIC.getValue().equals(existingContact.getDeviceContactType())) {
+                contact.setDeviceContactType(existingContact.getDeviceContactType());
+            }else if(Contact.ContactType.DEVICE_AND_APPLOZIC.getValue().equals(contact.getDeviceContactType())){
                 contact.setDeviceContactType(existingContact.getDeviceContactType());
             }
             updateContact(contact);
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/database/MobiComDatabaseHelper.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/database/MobiComDatabaseHelper.java
index 97f9d1e1..fb8ce6ce 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/database/MobiComDatabaseHelper.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/database/MobiComDatabaseHelper.java
@@ -186,7 +186,7 @@
             + USER_ROLE_TYPE + " integer default 0, "
             + LAST_MESSAGED_AT + " integer, "
             + USER_METADATA + " varchar(2000) null, "
-            + DEVICE_CONTACT_TYPE + " integer default 1"
+            + DEVICE_CONTACT_TYPE + " integer default 0"
             + " ) ";
 
     private static final String CREATE_CHANNEL_TABLE = " CREATE TABLE channel ( " +
diff --git a/mobicomkitui/mobicomkitui.iml b/mobicomkitui/mobicomkitui.iml
index 6fa826ad..ca59a2a1 100755
--- a/mobicomkitui/mobicomkitui.iml
+++ b/mobicomkitui/mobicomkitui.iml
@@ -63,13 +63,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
@@ -77,6 +70,13 @@
       <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
@@ -96,11 +96,11 @@
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="gifdecoder-4.5.0" level="project" />
-    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-tasks-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-base-11.8.0" level="project" />
-    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-maps-license-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="gson-2.8.0" level="project" />
     <orderEntry type="library" exported="" name="disklrucache-4.5.0" level="project" />
@@ -113,17 +113,17 @@
     <orderEntry type="library" exported="" name="firebase-common-license-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-base-license-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="annotations-4.5.0" level="project" />
-    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="support-media-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.1" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="recyclerview-v7-27.1.0" level="project" />
-    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-basement-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="support-v4-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-iid-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="exifinterface-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="play-services-location-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-location-license-11.8.0" level="project" />
-    <orderEntry type="library" exported="" name="exifinterface-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="play-services-maps-11.8.0" level="project" />
     <orderEntry type="library" exported="" name="design-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="transition-27.1.0" level="project" />
@@ -132,18 +132,26 @@
     <orderEntry type="library" exported="" name="circleimageview-2.0.0" level="project" />
     <orderEntry type="library" exported="" name="runtime-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="1_runtime-1.1.0" level="project" />
-    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
-    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="common-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="1_common-1.1.0" level="project" />
     <orderEntry type="library" exported="" name="firebase-common-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="cardview-v7-27.1.0" level="project" />
-    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.1" level="project" />
     <orderEntry type="library" exported="" name="firebase-jobdispatcher-0.8.5" level="project" />
     <orderEntry type="library" exported="" name="android-image-cropper-2.6.0" level="project" />
     <orderEntry type="module" module-name="mobicomkit" exported="" />
     <orderEntry type="module" module-name="mobicommons" exported="" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="org.eclipse.paho.client.mqttv3-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
     <orderEntry type="library" exported="" name="org.eclipse.paho.android.service-1.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
index 3575d12b..1a604d23 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
@@ -450,8 +450,9 @@ public void setLogoutPackageName(String logoutPackageName) {
     }
 
     public String getGroupDeletePackageName() {
-        return groupDeletePackageName;
-    }
+
+           return groupDeletePackageName;
+          }
 
     public String getThemeColorPrimary() {
         return themeColorPrimary;
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index c02d799d..48ca0b0c 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -69,6 +69,7 @@
 import com.applozic.mobicomkit.contact.BaseContactService;
 import com.applozic.mobicomkit.uiwidgets.AlCustomizationSettings;
 import com.applozic.mobicomkit.uiwidgets.ApplozicSetting;
+import com.applozic.mobicomkit.uiwidgets.ContactsChangeObserver;
 import com.applozic.mobicomkit.uiwidgets.R;
 import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
 import com.applozic.mobicomkit.uiwidgets.conversation.MessageCommunicator;
@@ -168,6 +169,7 @@
     private SearchView searchView;
     private String searchTerm;
     private SearchListFragment searchListFragment;
+    private ContactsChangeObserver observer;
 
     public ConversationActivity() {
 
@@ -259,16 +261,19 @@ protected void onResume() {
             String errorMessage = getResources().getString(R.string.internet_connection_not_available);
             showErrorMessageView(errorMessage);
         }
+
+        if (observer != null) {
+            getApplicationContext().getContentResolver().registerContentObserver(
+                    ContactsContract.Contacts.CONTENT_URI, true, observer);
+        }
     }
 
     @Override
     protected void onPause() {
-        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
-        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
-        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
-        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
-        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
-        ApplozicMqttIntentService.enqueueWork(this, intent);
+        //ApplozicMqttService.getInstance(this).unSubscribe();
+        if (observer != null) {
+            getApplicationContext().getContentResolver().unregisterContentObserver(observer);
+        }
         super.onPause();
     }
 
@@ -433,6 +438,8 @@ protected void onCreate(Bundle savedInstanceState) {
             }
         }
         LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
+
+        observer = new ContactsChangeObserver(null, this);
     }
 
     @Override
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index ebec4190..cba27a6b 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -100,7 +100,6 @@
     private boolean loading = true;
     private int startingPageIndex = 0;
     private ProgressBar progressBar;
-    ContactsChangeObserver observer;
     private RelativeLayout startChatLayout;
     private Menu menu;
 
@@ -132,10 +131,6 @@ public void run() {
         thread.start();
         setHasOptionsMenu(true);
         BroadcastService.lastIndexForChats = 0;
-
-        observer = new ContactsChangeObserver(null, getContext());
-        getContext().getApplicationContext().getContentResolver().registerContentObserver(
-                ContactsContract.Contacts.CONTENT_URI, true, observer);
     }
 
     @Override
@@ -254,7 +249,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
                 searchItem.collapseActionView();
             }
             searchView.setOnQueryTextListener(this);
-            searchView.setSubmitButtonEnabled(true);
+            //searchView.setSubmitButtonEnabled(true);
             searchView.setIconified(true);
         }
 
@@ -692,9 +687,6 @@ public void onRefresh() {
     @Override
     public void onDestroy() {
         super.onDestroy();
-        if(observer != null){
-            getContext().getApplicationContext().getContentResolver().unregisterContentObserver(observer);
-        }
     }
 
     @Override
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/activity/MobiComKitPeopleActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/activity/MobiComKitPeopleActivity.java
index 712f3a92..c3eec9d0 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/activity/MobiComKitPeopleActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/activity/MobiComKitPeopleActivity.java
@@ -9,6 +9,7 @@
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.Bundle;
+import android.provider.ContactsContract;
 import android.support.design.widget.TabLayout;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentActivity;
@@ -33,6 +34,7 @@
 import com.applozic.mobicomkit.api.attachment.FileClientService;
 import com.applozic.mobicomkit.channel.service.ChannelService;
 import com.applozic.mobicomkit.uiwidgets.AlCustomizationSettings;
+import com.applozic.mobicomkit.uiwidgets.ContactsChangeObserver;
 import com.applozic.mobicomkit.uiwidgets.R;
 import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity;
@@ -82,6 +84,7 @@
     OnContactsInteractionListener onContactsInteractionListener;
     private SearchListFragment searchListFragment;
     private boolean isSearchResultView = false;
+    private ContactsChangeObserver observer;
 
     public static void addFragment(FragmentActivity fragmentActivity, Fragment fragmentToAdd, String fragmentTag) {
         FragmentManager supportFragmentManager = fragmentActivity.getSupportFragmentManager();
@@ -173,6 +176,7 @@ protected void onCreate(Bundle savedInstanceState) {
       /*  if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
             mContactsListFragment.onQueryTextChange(searchQuery);
         }*/
+        observer = new ContactsChangeObserver(null, this);
     }
 
     @TargetApi(Build.VERSION_CODES.HONEYCOMB)
@@ -268,6 +272,24 @@ public void onGroupSelected(Channel channel) {
         }
     }
 
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        if (observer != null) {
+            getApplicationContext().getContentResolver().registerContentObserver(
+                    ContactsContract.Contacts.CONTENT_URI, true, observer);
+        }
+    }
+
+    @Override
+    protected void onPause() {
+        if (observer != null) {
+            getApplicationContext().getContentResolver().unregisterContentObserver(observer);
+        }
+        super.onPause();
+    }
+
     @Override
     public void onCustomContactSelected(Contact contact) {
         Intent intent = null;
diff --git a/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml b/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml
index d784e1c2..64373527 100755
--- a/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml
+++ b/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml
@@ -8,12 +8,12 @@
         android:icon="@drawable/applozic_ic_action_search"
         android:iconifiedByDefault="true"
         android:orderInCategory="1"
-        android:showAsAction="always"
+        android:showAsAction="collapseActionView|always"
         android:title="@string/menu_search"
         android:visible="false"
         mobicomkit:actionViewClass="android.support.v7.widget.SearchView"
         mobicomkit:iconifiedByDefault="true"
-        mobicomkit:showAsAction="always" />
+        mobicomkit:showAsAction="collapseActionView|always" />
 
 
     <item
diff --git a/mobicommons/src/main/java/com/applozic/mobicommons/people/contact/Contact.java b/mobicommons/src/main/java/com/applozic/mobicommons/people/contact/Contact.java
index 997211a5..2905178c 100755
--- a/mobicommons/src/main/java/com/applozic/mobicommons/people/contact/Contact.java
+++ b/mobicommons/src/main/java/com/applozic/mobicommons/people/contact/Contact.java
@@ -103,6 +103,9 @@ public Short getDeviceContactType() {
     }
 
     public void setDeviceContactType(Short contactType) {
+        if(contactType == null){
+            return;
+        }
         this.deviceContactType = contactType;
         setApplozicType(ContactType.APPLOZIC.getValue().equals(this.deviceContactType) || ContactType.DEVICE_AND_APPLOZIC.getValue().equals(this.deviceContactType));
     }
@@ -118,9 +121,7 @@ public void setContactType(short contactType) {
     public void processContactNumbers(Context context) {
         TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
         String countryCode = telephonyManager.getSimCountryIso().toUpperCase();
-        if (TextUtils.isEmpty(getFormattedContactNumber())) {
-            //setFormattedContactNumber(ContactNumberUtils.getPhoneNumber(getContactNumber(), countryCode));
-
+        if (TextUtils.isEmpty(formattedContactNumber)) {
             if (((ALContactProcessor) context.getApplicationContext()) != null) {
                 setFormattedContactNumber(((ALContactProcessor) context.getApplicationContext()).processContact(getContactNumber(), countryCode));
             }
@@ -265,7 +266,7 @@ public void setContactId(long contactId) {
 
     public String getDisplayName() {
 
-        if (deviceContactType != null && (ContactType.DEVICE.getValue().equals(deviceContactType) || ContactType.DEVICE_AND_APPLOZIC.getValue().equals(deviceContactType))) {
+        if (formattedContactNumber != null) {
             return TextUtils.isEmpty(phoneDisplayName) ? TextUtils.isEmpty(getFormattedContactNumber()) ? getContactIds() : getFormattedContactNumber() : phoneDisplayName;
         }
 
@@ -273,7 +274,7 @@ public String getDisplayName() {
     }
 
     public String getFullName() {
-        if (deviceContactType != null && (ContactType.DEVICE.getValue().equals(deviceContactType) || ContactType.DEVICE_AND_APPLOZIC.getValue().equals(deviceContactType))) {
+        if (formattedContactNumber != null) {
             return TextUtils.isEmpty(phoneDisplayName) ? fullName : phoneDisplayName;
         }
         return fullName == null ? "" : fullName;
