diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 3d595a99..21e70998 100755
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -170,13 +170,13 @@
             android:value="AIzaSyAv1wf5eMyErPaU3l8EnMUmOsoYJ2joC70" />
         <meta-data
             android:name="com.applozic.mobicomkit.uiwidgets.toolbar.tap.activity"
-            android:value="com.applozic.mobicomkit.sample.MainActivity" />
+            android:value="com.applozic.mobicomkit.sample.HomeActivity" />
         <meta-data
             android:name="activity.open.on.notification"
-            android:value="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity" />
+            android:value="com.applozic.mobicomkit.sample.HomeActivity" />
         <meta-data
             android:name="activity.open.on.call.button.click"
-            android:value="com.applozic.mobicomkit.sample.MainActivity" />
+            android:value="com.applozic.mobicomkit.sample.HomeActivity" />
         <meta-data
             android:name="io.fabric.ApiKey"
             android:value="9b43bb084d2988834ffc7cc5c9de46ad80356861" />
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/ApplozicSampleApplication.java b/app/src/main/java/com/applozic/mobicomkit/sample/ApplozicSampleApplication.java
index a288f309..0b4921b3 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/ApplozicSampleApplication.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/ApplozicSampleApplication.java
@@ -17,10 +17,13 @@ public void onCreate() {
        Fabric.with(this, new Crashlytics());
     }
 
+
     @Override
     protected void attachBaseContext(Context base) {
         super.attachBaseContext(base);
         MultiDex.install(this);
     }
 
+
+
 }
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
index e6cffea5..c4e38806 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -52,16 +52,39 @@
 
 public class HomeActivity extends AppCompatActivity implements MessageCommunicator, MobiComKitActivityInterface {
 
-    private HashMap<String, Stack<Fragment>> mStacks;
     public static final String TAB_HOME = "tab_home";
     public static final String TAB_CHAT = "tab_chat";
-    private BottomNavigationView bottomNavigationView;
-    private String currentTab;
     private static int retry;
+    protected ActionBar mActionBar;
     ConversationUIService conversationUIService;
     MobiComQuickConversationFragment mobiComQuickConversationFragment;
     MobiComKitBroadcastReceiver mobiComKitBroadcastReceiver;
-    protected ActionBar mActionBar;
+    private HashMap<String, Stack<Fragment>> mStacks;
+    private BottomNavigationView bottomNavigationView;
+    private String currentTab;
+    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
+            = new BottomNavigationView.OnNavigationItemSelectedListener() {
+        @Override
+        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+
+            switch (item.getItemId()) {
+
+                case R.id.action_home:
+                    mStacks.get(TAB_HOME).clear();
+                    selectedTab(TAB_HOME);
+                    break;
+                case R.id.action_chat:
+                    mStacks.get(TAB_CHAT).clear();
+                    selectedTab(TAB_CHAT);
+                    break;
+
+            }
+
+            return true;
+
+        }
+    };
+    private int id = 0;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -79,7 +102,7 @@ protected void onCreate(Bundle savedInstanceState) {
         lastSeenStatusIntent.putExtra(UserIntentService.USER_LAST_SEEN_AT_STATUS, true);
         startService(lastSeenStatusIntent);
         mActionBar = getSupportActionBar();
-       // addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
+        // addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
         //Used to select an item programmatically
         //bottomNavigationView.getMenu().getItem(2).setChecked(true);
     }
@@ -106,29 +129,6 @@ private void initialize() {
 
     }
 
-    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
-            = new BottomNavigationView.OnNavigationItemSelectedListener() {
-        @Override
-        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-
-            switch (item.getItemId()) {
-
-                case R.id.action_home:
-                    mStacks.get(TAB_HOME).clear();
-                    selectedTab(TAB_HOME);
-                    break;
-                case R.id.action_chat:
-                    mStacks.get(TAB_CHAT).clear();
-                    selectedTab(TAB_CHAT);
-                    break;
-
-            }
-
-            return true;
-
-        }
-    };
-
     private void selectedTab(String tabId) {
         currentTab = tabId;
 
@@ -207,16 +207,14 @@ public void onBackPressed() {
         popFragments();
     }
 
-    private int id = 0;
+    public int getId() {
+        return id;
+    }
 
     public void setId(int newsId) {
         this.id = newsId;
     }
 
-    public int getId() {
-        return id;
-    }
-
     @Override
     public void onQuickConversationFragmentItemClick(View view, Contact contact, Channel channel, Integer conversationId, String searchString) {
         Intent intent = new Intent(this, ConversationActivity.class);
@@ -271,9 +269,6 @@ public int getRetryCount() {
     }
 
 
-
-
-
     /*@Override
     public void onBackPressed() {
 
@@ -319,6 +314,7 @@ protected void onPause() {
         LocalBroadcastManager.getInstance(this).unregisterReceiver(mobiComKitBroadcastReceiver);
         super.onPause();
     }
+
     private void login() {
 
         UserLoginTask.TaskListener listener = new UserLoginTask.TaskListener() {
@@ -333,7 +329,7 @@ public void onSuccess(RegistrationResponse registrationResponse, final Context c
                 activityCallbacks.put(ApplozicSetting.RequestCode.USER_LOOUT, HomeActivity.class.getName());
                 ApplozicSetting.getInstance(context).setActivityCallbacks(activityCallbacks);
 
-                if(MobiComUserPreference.getInstance(context).isRegistered()) {
+                if (MobiComUserPreference.getInstance(context).isRegistered()) {
 
 
                     //Set activity callbacks
@@ -354,7 +350,7 @@ public void onFailure(RegistrationResponse registrationResponse, Exception excep
 
                         }
                     };
-                     pushNotificationTask = new PushNotificationTask(
+                    pushNotificationTask = new PushNotificationTask(
                             Applozic.getInstance(context).getDeviceRegistrationId(), pushNotificationTaskListener, context);
                     pushNotificationTask.execute((Void) null);
                 }
@@ -384,6 +380,7 @@ public void onClick(DialogInterface dialog, int which) {
         user.setUserId("skrold");
         user.setContactNumber("9959841814");
 
+
         new UserLoginTask(user, listener, this).execute((Void) null);
 
     }
@@ -391,7 +388,7 @@ public void onClick(DialogInterface dialog, int which) {
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         try {
-            if(requestCode == 1011) {
+            if (requestCode == 1011) {
                 Intent intent = new Intent(this, ConversationActivity.class);
                 intent.putExtra(ConversationUIService.CONVERSATION_ID, "");
                 intent.putExtra(ConversationUIService.SEARCH_STRING, "");
@@ -405,8 +402,8 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                     startActivity(intent);
                 }
             }
-          //  conversationUIService.onActivityResult(requestCode, resultCode, data);
-           // handleOnActivityResult(requestCode, data);
+            //  conversationUIService.onActivityResult(requestCode, resultCode, data);
+            // handleOnActivityResult(requestCode, data);
            /* if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {
                 CropImage.ActivityResult result = CropImage.getActivityResult(data);
                 if (resultCode == RESULT_OK) {
@@ -457,7 +454,7 @@ public void handleOnActivityResult(int requestCode, Intent intent) {
                 break;
 
             case ProfileFragment.REQUEST_CODE_TAKE_PHOTO:
-               // beginCrop(imageUri);
+                // beginCrop(imageUri);
                 break;
 
         }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index 51e06e87..a0e61637 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -99,6 +99,7 @@
     public static final String SEARCH_STRING = "searchString";
     public static final String CONVERSATION_ID = "CONVERSATION_ID";
     public static final String TOPIC_ID = "TOPIC_ID";
+    public static final String PROFILE_INTENT = "profile";
     private static final String TAG = "ConversationUIService";
     private static final String APPLICATION_KEY_META_DATA = "com.applozic.application.key";
     FileClientService fileClientService;
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index 8da0720d..0dc46484 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -359,6 +359,7 @@ protected void onCreate(Bundle savedInstanceState) {
         if (Utils.hasMarshmallow()) {
             applozicPermission.checkRuntimePermissionForStorage();
         }
+
         mActionBar = getSupportActionBar();
         if (!TextUtils.isEmpty(alCustomizationSettings.getThemeColorPrimary()) && !TextUtils.isEmpty(alCustomizationSettings.getThemeColorPrimaryDark())) {
             mActionBar.setBackgroundDrawable(new ColorDrawable(Color.parseColor(alCustomizationSettings.getThemeColorPrimary())));
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index 22982d28..6e1dbba4 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-import android.graphics.Color;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Process;
@@ -11,6 +10,7 @@
 import android.support.v4.view.MenuItemCompat;
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.SearchView;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
@@ -21,9 +21,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
-import android.widget.ImageButton;
 import android.widget.ImageView;
-import android.widget.LinearLayout;;
+import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
@@ -34,19 +33,14 @@
 import com.applozic.mobicomkit.api.conversation.SyncCallService;
 import com.applozic.mobicomkit.api.conversation.database.MessageDatabaseService;
 import com.applozic.mobicomkit.broadcast.BroadcastService;
-import com.applozic.mobicomkit.channel.database.ChannelDatabaseService;
 import com.applozic.mobicomkit.contact.AppContactService;
 import com.applozic.mobicomkit.contact.BaseContactService;
 import com.applozic.mobicomkit.uiwidgets.AlCustomizationSettings;
 import com.applozic.mobicomkit.uiwidgets.ApplozicSetting;
-
-import android.support.v7.widget.RecyclerView;
-
 import com.applozic.mobicomkit.uiwidgets.R;
 import com.applozic.mobicomkit.uiwidgets.conversation.AlLinearLayoutManager;
 import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.ChannelCreateActivity;
-import com.applozic.mobicomkit.uiwidgets.conversation.activity.ContactSelectionActivity;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.DividerItemDecoration;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.MobiComKitActivityInterface;
@@ -67,6 +61,8 @@
 import java.util.List;
 import java.util.Map;
 
+;
+
 /**
  * Created by devashish on 10/2/15.
  */
@@ -74,11 +70,8 @@
 
     public static final String QUICK_CONVERSATION_EVENT = "quick_conversation";
     protected RecyclerView recyclerView = null;
-    //protected ImageButton fabButton;
-    private RelativeLayout noConversations;
     //protected TextView emptyTextView;
     protected Button startNewButton;
-    private SearchView searchView;
     protected SwipeRefreshLayout swipeLayout;
     protected int listIndex;
     protected Map<String, Message> latestMessageForEachContact = new HashMap<String, Message>();
@@ -89,23 +82,26 @@
     ConversationUIService conversationUIService;
     AlCustomizationSettings alCustomizationSettings;
     String searchString;
+    MessageDatabaseService messageDatabaseService;
+    RecyclerViewPositionHelper recyclerViewPositionHelper;
+    AlLinearLayoutManager linearLayoutManager;
+    int position;
+    boolean isAlreadyLoading = false;
+    int pastVisiblesItems, visibleItemCount, totalItemCount;
+    //protected ImageButton fabButton;
+    private RelativeLayout noConversations;
     private Long minCreatedAtTime;
     private DownloadConversation downloadConversation;
     private BaseContactService baseContactService;
     private Toolbar toolbar;
-    private MessageDatabaseService messageDatabaseService;
     private int visibleThreshold = 5;
     private int currentPage = 0;
     private int previousTotalItemCount = 0;
     private boolean loading = true;
     private int startingPageIndex = 0;
     private ProgressBar progressBar;
-    RecyclerViewPositionHelper recyclerViewPositionHelper;
-    AlLinearLayoutManager linearLayoutManager;
-    int position;
-    boolean isAlreadyLoading = false;
-    int pastVisiblesItems, visibleItemCount, totalItemCount;
-
+    private SearchView searchView;
+    private SearchListFragment searchListFragment;
 
     public RecyclerView getRecyclerView() {
         return recyclerView;
@@ -163,11 +159,19 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         recyclerView.addItemDecoration(dividerItemDecoration);
         recyclerView.setAdapter(recyclerAdapter);
         //recyclerView.addItemDecoration(new FooterItemDecoration(getContext(), recyclerView, R.layout.mobicom_message_list_header_footer));
-        toolbar = (Toolbar) list.findViewById(R.id.my_toolbar);
+        toolbar = (Toolbar) list.findViewById(R.id.custom_toolbar);
         //toolbar.setClickable(false);
 
         toolbar.setVisibility(View.VISIBLE);
 
+        searchView = (SearchView) list.findViewById(R.id.search_bar);
+        searchView.setVisibility(View.VISIBLE);
+        searchView.setQueryHint(getResources().getString(R.string.search_hint));
+        searchView.setOnQueryTextListener(this);
+        searchView.setSubmitButtonEnabled(true);
+        searchView.setIconified(true);
+
+
         AppCompatActivity activity = (AppCompatActivity) getActivity();
         if (activity != null) {
             activity.setSupportActionBar(toolbar);
@@ -215,7 +219,6 @@ public void onClick(View v) {
         });
 
 
-
         //startNewButton = (Button) spinnerLayout.findViewById(R.id.start_new_conversation);
 
         //fabButton.setVisibility(alCustomizationSettings.isStartNewFloatingButton() ? View.VISIBLE : View.GONE);
@@ -243,7 +246,7 @@ public void onClick(View view) {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-       // super.onCreateOptionsMenu(menu, inflater);
+        // super.onCreateOptionsMenu(menu, inflater);
 
         toolbar.inflateMenu(R.menu.mobicom_basic_menu_for_normal_message);
 
@@ -741,10 +744,11 @@ public void run() {
 
     @Override
     public boolean onQueryTextSubmit(String query) {
-        //this.searchTerm = query;
+        this.searchString = query;
         return false;
     }
 
+
     @Override
     public boolean onQueryTextChange(String newText) {
         this.searchString = newText;
@@ -756,6 +760,76 @@ public boolean onQueryTextChange(String newText) {
         return true;
     }
 
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        int id = item.getItemId();
+        //noinspection SimplifiableIfStatement
+        if (id == R.id.start_new) {
+           /* if (!TextUtils.isEmpty(contactsGroupId)) {
+                if (Utils.isInternetAvailable(getActivity())) {
+                    conversationUIService.startContactActivityForResult();
+                } else {
+                    Intent intent = new Intent(getActivity(), MobiComKitPeopleActivity.class);
+                    ChannelDatabaseService channelDatabaseService = ChannelDatabaseService.getInstance(getActivity());
+                    String[] userIdArray = channelDatabaseService.getChannelMemberByName(contactsGroupId, null);
+                    if (userIdArray != null) {
+                        conversationUIService.startContactActivityForResult(intent, null, null, userIdArray);
+                    }
+                }
+            } else {*/
+            conversationUIService.startContactActivityForResult();
+            //}
+        } else if (id == R.id.conversations) {
+            Intent intent = new Intent(getActivity(), ChannelCreateActivity.class);
+            intent.putExtra(ChannelCreateActivity.GROUP_TYPE, Channel.GroupType.PUBLIC.getValue().intValue());
+            startActivity(intent);
+        } /*else if (id == R.id.broadcast) {
+            Intent intent = new Intent(getActivity(), ContactSelectionActivity.class);
+            intent.putExtra(ContactSelectionActivity.GROUP_TYPE, Channel.GroupType.BROADCAST.getValue().intValue());
+            startActivity(intent);
+        } */ else if (id == R.id.refresh) {
+            Toast.makeText(getActivity(), getString(R.string.info_message_sync), Toast.LENGTH_LONG).show();
+            //new ConversationActivity.SyncMessagesAsyncTask(this).execute();
+        } else if (id == R.id.shareOptions) {
+            Intent intent = new Intent(Intent.ACTION_SEND);
+            intent.setAction(Intent.ACTION_SEND)
+                    .setType("text/plain").putExtra(Intent.EXTRA_TEXT, "hi");
+            startActivity(Intent.createChooser(intent, "Share Via"));
+            return super.onOptionsItemSelected(item);
+        } else if (id == R.id.applozicUserProfile) {
+
+            Intent intent = new Intent(getActivity(), ConversationActivity.class);
+            intent.putExtra(ConversationUIService.SEARCH_STRING, searchString);
+            intent.putExtra(ConversationUIService.TAKE_ORDER, true);
+            intent.putExtra(ConversationUIService.PROFILE_INTENT, true);
+            startActivity(intent);
+
+            //profilefragment.setApplozicPermissions(applozicPermission);
+            //addFragment(this, profilefragment, ProfileFragment.ProfileFragmentTag);
+
+        } /*else if (id == R.id.logout) {
+            try {
+                if (!TextUtils.isEmpty(alCustomizationSettings.getLogoutPackage())) {
+                    Class loginActivity = Class.forName(alCustomizationSettings.getLogoutPackage().trim());
+                    if (loginActivity != null) {
+                        new UserClientService(this).logout();
+                        Toast.makeText(getBaseContext(), getString(R.string.user_logout_info), Toast.LENGTH_SHORT).show();
+                        Intent intent = new Intent(this, loginActivity);
+                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                        startActivity(intent);
+                        finish();
+                    }
+                }
+            } catch (ClassNotFoundException e) {
+                e.printStackTrace();
+            }
+        }*/
+        return false;
+    }
+
     public class DownloadConversation extends AsyncTask<Void, Integer, Long> {
 
         private RecyclerView view;
@@ -772,20 +846,6 @@ public boolean onQueryTextChange(String newText) {
         private WeakReference<QuickConversationAdapter> quickConversationAdapterWeakReference;
         private WeakReference<RelativeLayout> textViewWeakReference;
 
-        public void setQuickConversationAdapterWeakReference(QuickConversationAdapter quickConversationAdapterWeakReference) {
-            this.quickConversationAdapterWeakReference = new WeakReference<QuickConversationAdapter>(quickConversationAdapterWeakReference);
-        }
-
-        public void setTextViewWeakReference(RelativeLayout emptyTextViewWeakReference) {
-            this.textViewWeakReference = new WeakReference<RelativeLayout>(emptyTextViewWeakReference);
-        }
-
-
-        public void setSwipeRefreshLayoutWeakReference(SwipeRefreshLayout swipeRefreshLayout) {
-            this.swipeRefreshLayoutWeakReference = new WeakReference<SwipeRefreshLayout>(swipeRefreshLayout);
-        }
-
-
         public DownloadConversation(RecyclerView view, boolean initial, int firstVisibleItem, int amountVisible, int totalItems, boolean showInstruction, String searchString) {
             this.context = getActivity();
             this.view = view;
@@ -802,6 +862,18 @@ public DownloadConversation(RecyclerView view, boolean initial, int firstVisible
             loadMoreMessages = true;
         }
 
+        public void setQuickConversationAdapterWeakReference(QuickConversationAdapter quickConversationAdapterWeakReference) {
+            this.quickConversationAdapterWeakReference = new WeakReference<QuickConversationAdapter>(quickConversationAdapterWeakReference);
+        }
+
+        public void setTextViewWeakReference(RelativeLayout emptyTextViewWeakReference) {
+            this.textViewWeakReference = new WeakReference<RelativeLayout>(emptyTextViewWeakReference);
+        }
+
+        public void setSwipeRefreshLayoutWeakReference(SwipeRefreshLayout swipeRefreshLayout) {
+            this.swipeRefreshLayoutWeakReference = new WeakReference<SwipeRefreshLayout>(swipeRefreshLayout);
+        }
+
         @Override
         protected void onPreExecute() {
             super.onPreExecute();
@@ -921,9 +993,9 @@ public void run() {
                 if (textViewWeakReference != null) {
                     //TextView emptyTextView = textViewWeakReference.get();
                     //if (emptyTextView != null) {
-                        //emptyTextView.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
+                    //emptyTextView.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
 
-                        noConversations.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
+                    noConversations.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
 //
 //                        if (!TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
 //                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoSearchFoundForChatMessages()) ? alCustomizationSettings.getNoSearchFoundForChatMessages() : getResources().getString(R.string.search_not_found_for_messages));
@@ -970,73 +1042,4 @@ protected void onPostExecute(Long aLong) {
             swipeLayout.setRefreshing(false);
         }
     }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-        //noinspection SimplifiableIfStatement
-        if (id == R.id.start_new) {
-           /* if (!TextUtils.isEmpty(contactsGroupId)) {
-                if (Utils.isInternetAvailable(getActivity())) {
-                    conversationUIService.startContactActivityForResult();
-                } else {
-                    Intent intent = new Intent(getActivity(), MobiComKitPeopleActivity.class);
-                    ChannelDatabaseService channelDatabaseService = ChannelDatabaseService.getInstance(getActivity());
-                    String[] userIdArray = channelDatabaseService.getChannelMemberByName(contactsGroupId, null);
-                    if (userIdArray != null) {
-                        conversationUIService.startContactActivityForResult(intent, null, null, userIdArray);
-                    }
-                }
-            } else {*/
-                conversationUIService.startContactActivityForResult();
-            //}
-        } else if (id == R.id.conversations) {
-            Intent intent = new Intent(getActivity(), ChannelCreateActivity.class);
-            intent.putExtra(ChannelCreateActivity.GROUP_TYPE, Channel.GroupType.PUBLIC.getValue().intValue());
-            startActivity(intent);
-        } /*else if (id == R.id.broadcast) {
-            Intent intent = new Intent(getActivity(), ContactSelectionActivity.class);
-            intent.putExtra(ContactSelectionActivity.GROUP_TYPE, Channel.GroupType.BROADCAST.getValue().intValue());
-            startActivity(intent);
-        } */else if (id == R.id.refresh) {
-            Toast.makeText(getActivity(), getString(R.string.info_message_sync), Toast.LENGTH_LONG).show();
-            //new ConversationActivity.SyncMessagesAsyncTask(this).execute();
-        } else if (id == R.id.shareOptions) {
-            Intent intent = new Intent(Intent.ACTION_SEND);
-            intent.setAction(Intent.ACTION_SEND)
-                    .setType("text/plain").putExtra(Intent.EXTRA_TEXT, "hi");
-            startActivity(Intent.createChooser(intent, "Share Via"));
-            return super.onOptionsItemSelected(item);
-        } else if (id == R.id.applozicUserProfile) {
-
-            Intent intent = new Intent(getActivity(), ConversationActivity.class);
-            intent.putExtra(ConversationUIService.SEARCH_STRING, searchString);
-            intent.putExtra(ConversationUIService.TAKE_ORDER, true);
-            intent.putExtra(ConversationUIService.PROFILE_INTENT, true);
-            startActivity(intent);
-
-            //profilefragment.setApplozicPermissions(applozicPermission);
-            //addFragment(this, profilefragment, ProfileFragment.ProfileFragmentTag);
-        } /*else if (id == R.id.logout) {
-            try {
-                if (!TextUtils.isEmpty(alCustomizationSettings.getLogoutPackage())) {
-                    Class loginActivity = Class.forName(alCustomizationSettings.getLogoutPackage().trim());
-                    if (loginActivity != null) {
-                        new UserClientService(this).logout();
-                        Toast.makeText(getBaseContext(), getString(R.string.user_logout_info), Toast.LENGTH_SHORT).show();
-                        Intent intent = new Intent(this, loginActivity);
-                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_SINGLE_TOP);
-                        startActivity(intent);
-                        finish();
-                    }
-                }
-            } catch (ClassNotFoundException e) {
-                e.printStackTrace();
-            }
-        }*/
-        return false;
-    }
 }
\ No newline at end of file
diff --git a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
index 126467fe..6b7db9d7 100644
--- a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
+++ b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
@@ -6,13 +6,24 @@
     android:visibility="visible">
 
     <android.support.v7.widget.Toolbar
-        android:id="@+id/my_toolbar"
+        android:id="@+id/custom_toolbar"
         android:layout_width="match_parent"
         android:layout_height="?attr/actionBarSize"
         android:background="?attr/colorPrimary"
         android:elevation="4dp"
+        android:visibility="gone"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+
+   <!-- <android.support.v7.widget.SearchView
+        android:id="@+id/search_bar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:elevation="2dp"
+        android:visibility="gone"
+        android:layout_alignParentRight="true"
         android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-        android:visibility="gone" />
+        />-->
 
     <FrameLayout
         android:id="@+id/contextFrameLayout"
