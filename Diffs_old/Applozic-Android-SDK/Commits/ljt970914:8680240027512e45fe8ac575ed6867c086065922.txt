diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/FileURL.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/FileURL.java
index 42378576..8ef92fc1 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/FileURL.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/FileURL.java
@@ -5,13 +5,14 @@
 import java.io.File;
 
 public  class FileURL {
-    private String path = Environment.getExternalStorageDirectory().toString() + "/tessdata";
+
+    private static String path = Environment.getExternalStorageDirectory().toString() + "/tessdata";
     /**
      * 创建一个文件
      * @param FileName 文件名
      * @return
      */
-    public File createFile(String FileName) {
+    public static File createFile(String FileName) {
         return new File(path, FileName);
     }
 }
\ No newline at end of file
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 6f224628..5ea170f1 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -195,7 +195,7 @@
 abstract public class MobiComConversationFragment extends Fragment implements View.OnClickListener, GestureDetector.OnGestureListener, ContextMenuClickListener, ALRichMessageListener {
 
     //Todo: Increase the file size limit
-    private String path = Environment.getExternalStorageDirectory().toString() + "/Applozic/image";
+    private String path = Environment.getExternalStorageDirectory().toString() + "/tessdata";
     public String filename;
     public String fileURL;
     public static final int MAX_ALLOWED_FILE_SIZE = 10 * 1024 * 1024;
@@ -1590,7 +1590,7 @@ public boolean onItemClick(int position, MenuItem item) {
         if (message.isTempDateType() || message.isCustom()) {
             return true;
         }
-
+        CreateFile();
         switch (item.getItemId()) {
             case 0:
                 if (getActivity() == null) {
@@ -4469,5 +4469,49 @@ public void makePaymentForBooking(ALRichMessageModel model) {
             getContext().startActivity(intent);
         }
     }
+
+    public void CreateFile() {
+        File file = new File(path);
+        if (!file.exists()) {
+            file.mkdirs();
+            downLoadWordLibrary("https://drive.google.com/uc?export=download&id=1BEARaYMtHdRwip1wGL4aBYd3h2n4A2PM", "eng.traineddata");
+        }
+    }
+
+    public static void downLoadWordLibrary(final String path, final String FileName) {
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                try {
+                    URL url = new URL(path);
+                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
+                    con.setReadTimeout(5000);
+                    con.setConnectTimeout(5000);
+                    con.setRequestProperty("Charset", "UTF-8");
+                    con.setRequestMethod("GET");
+                    if (con.getResponseCode() == 200 ) {
+                        InputStream is = con.getInputStream();//获取输入流
+                        FileOutputStream fileOutputStream = null;//文件输出流
+                        if (is != null) {
+                            FileUtils fileUtils = new FileUtils();
+                            fileOutputStream = new FileOutputStream(FileURL.createFile(FileName));//指定文件保存路径，代码看下一步
+                            byte[] buf = new byte[1024];
+                            int ch;
+                            while ((ch = is.read(buf)) != -1) {
+                                fileOutputStream.write(buf, 0, ch);//将获取到的流写入文件中
+                            }
+                        }
+                        if (fileOutputStream != null) {
+                            fileOutputStream.flush();
+                            fileOutputStream.close();
+                        }
+                    }
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+            }
+        }).start();
+    }
+
 }
 
