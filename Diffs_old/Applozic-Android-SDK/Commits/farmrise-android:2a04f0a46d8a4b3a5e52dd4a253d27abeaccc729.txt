diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
index 00000000..21c9e4fa
--- /dev/null
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -0,0 +1,10 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="AndroidLintLongLogTag" enabled="false" level="ERROR" enabled_by_default="false" />
+    <inspection_tool class="LoggerInitializedWithForeignClass" enabled="false" level="WARNING" enabled_by_default="false">
+      <option name="loggerClassName" value="org.apache.log4j.Logger,org.slf4j.LoggerFactory,org.apache.commons.logging.LogFactory,java.util.logging.Logger" />
+      <option name="loggerFactoryMethodName" value="getLogger,getLogger,getLog,getLogger" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
index 00000000..3b312839
--- /dev/null
+++ b/.idea/inspectionProfiles/profiles_settings.xml
@@ -0,0 +1,7 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="PROJECT_PROFILE" value="Project Default" />
+    <option name="USE_PROJECT_PROFILE" value="true" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index a0e61637..0d196ff3 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -111,7 +111,6 @@
     private Contact contact;
     private NotificationManager notificationManager;
     MobiComQuickConversationFragment mobiComQuickConversationFragment;
-    public static final String PROFILE_INTENT = "profile";
 
 
     public ConversationUIService(FragmentActivity fragmentActivity) {
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index ac11a783..85cbedd7 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -15,7 +15,6 @@
 import android.graphics.Bitmap;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
-import android.graphics.drawable.GradientDrawable;
 import android.location.Location;
 import android.net.Uri;
 import android.os.AsyncTask;
@@ -39,8 +38,8 @@
 import android.text.TextUtils;
 import android.text.TextWatcher;
 import android.util.DisplayMetrics;
+import android.util.Log;
 import android.util.TypedValue;
-import android.view.ContextMenu;
 import android.view.GestureDetector;
 import android.view.Gravity;
 import android.view.KeyEvent;
@@ -86,8 +85,8 @@
 import com.applozic.mobicomkit.api.conversation.service.ConversationService;
 import com.applozic.mobicomkit.api.notification.MuteNotificationAsync;
 import com.applozic.mobicomkit.api.notification.MuteNotificationRequest;
-import com.applozic.mobicomkit.api.notification.NotificationService;
 import com.applozic.mobicomkit.api.notification.MuteUserNotificationAsync;
+import com.applozic.mobicomkit.api.notification.NotificationService;
 import com.applozic.mobicomkit.api.people.UserIntentService;
 import com.applozic.mobicomkit.broadcast.BroadcastService;
 import com.applozic.mobicomkit.channel.service.ChannelService;
@@ -112,7 +111,6 @@
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.RecyclerViewPositionHelper;
 import com.applozic.mobicomkit.uiwidgets.conversation.adapter.ApplozicContextSpinnerAdapter;
 import com.applozic.mobicomkit.uiwidgets.conversation.adapter.DetailedConversationAdapter;
-//import com.applozic.mobicomkit.uiwidgets.conversation.adapter.DetailedConversationAdapter.TemplateCallbackListener;
 import com.applozic.mobicomkit.uiwidgets.conversation.adapter.MobicomMessageTemplateAdapter;
 import com.applozic.mobicomkit.uiwidgets.instruction.InstructionUtil;
 import com.applozic.mobicomkit.uiwidgets.people.fragment.UserProfileFragment;
@@ -155,6 +153,8 @@
 import static android.view.View.VISIBLE;
 import static java.util.Collections.disjoint;
 
+//import com.applozic.mobicomkit.uiwidgets.conversation.adapter.DetailedConversationAdapter.TemplateCallbackListener;
+
 /**
  * reg
  * Created by devashish on 10/2/15.
@@ -173,8 +173,7 @@
     protected MobiComConversationService conversationService;
     protected TextView infoBroadcast;
     protected Class messageIntentClass;
-    //protected TextView emptyTextView;
-    private RelativeLayout noConversations;
+    protected TextView emptyTextView;
     protected boolean loadMore = true;
     protected Contact contact;
     protected Channel channel;
@@ -211,6 +210,8 @@
     protected Message messageToForward;
     protected String searchString;
     protected AlCustomizationSettings alCustomizationSettings;
+    protected TextView isTyping, bottomlayoutTextView;
+    protected LinearLayoutManager linearLayoutManager;
     String audio_duration;
     LinearLayout userNotAbleToChatLayout;
     int resourceId;
@@ -244,9 +245,17 @@
     int seconds = 0, minutes = 0;
     ApplozicDocumentView applozicDocumentView;
     ImageView slideImageView;
+    WeakReference<ImageButton> recordButtonWeakReference;
+    RecyclerView recyclerView;
+    RecyclerViewPositionHelper recyclerViewPositionHelper;
+    int positionInSmsList;
+    DetailedConversationAdapter recyclerDetailConversationAdapter;
+    MobicomMessageTemplate messageTemplate;
+    MobicomMessageTemplateAdapter templateAdapter;
+    boolean isAlreadyLoading;
+    private RelativeLayout startChatLayout;
     private EmojiconHandler emojiIconHandler;
     private Bitmap previewThumbnail;
-    protected TextView isTyping, bottomlayoutTextView;
     private String defaultText;
     private boolean typingStarted;
     private Integer channelKey;
@@ -260,15 +269,6 @@
     private EditText errorEditTextView;
     private RecyclerView messageTemplateView;
     private ImageView audioRecordIconImageView;
-    WeakReference<ImageButton> recordButtonWeakReference;
-    RecyclerView recyclerView;
-    RecyclerViewPositionHelper recyclerViewPositionHelper;
-    protected LinearLayoutManager linearLayoutManager;
-    int positionInSmsList;
-    DetailedConversationAdapter recyclerDetailConversationAdapter;
-    MobicomMessageTemplate messageTemplate;
-    MobicomMessageTemplateAdapter templateAdapter;
-    boolean isAlreadyLoading;
 
     public static int dp(float value) {
         return (int) Math.ceil(1 * value);
@@ -405,10 +405,12 @@ public void onNothingSelected(AdapterView<?> adapterView) {
         spinnerLayout = inflater.inflate(R.layout.mobicom_message_list_header_footer, null);
         infoBroadcast = (TextView) spinnerLayout.findViewById(R.id.info_broadcast);
         spinnerLayout.setVisibility(View.GONE);
-        //emptyTextView = (TextView) list.findViewById(R.id.noConversations);
+        emptyTextView = (TextView) list.findViewById(R.id.noConversations);
         //emptyTextView.setTextColor(Color.parseColor(alCustomizationSettings.getNoConversationLabelTextColor().trim()));
 
-        noConversations = (RelativeLayout) list.findViewById(R.id.noConversations);
+        startChatLayout = (RelativeLayout) list.findViewById(R.id.startChatLayout);
+
+        startChatLayout.setVisibility(View.GONE);
 
         emoticonsBtn.setOnClickListener(this);
         //listView.addHeaderView(spinnerLayout);
@@ -1072,7 +1074,10 @@ public void deleteMessageFromDeviceList(String messageKeyString) {
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                     if (messageList.isEmpty()) {
                         //emptyTextView.setVisibility(VISIBLE);
-                        noConversations.setVisibility(VISIBLE);
+                        Log.d("emptyTextView6", "emptyTextView6");
+                        emptyTextView.setVisibility(View.GONE);
+                        startChatLayout.setVisibility(View.GONE);
+
                         ((MobiComKitActivityInterface) getActivity()).removeConversation(message, channel != null ? String.valueOf(channel.getKey()) : contact.getFormattedContactNumber());
                     }
                     break;
@@ -1147,7 +1152,11 @@ public void run() {
                     messageList.clear();
                     if (messageList.isEmpty()) {
                         //emptyTextView.setVisibility(View.VISIBLE);
-                        noConversations.setVisibility(View.VISIBLE);
+
+                        emptyTextView.setVisibility(View.GONE);
+                        startChatLayout.setVisibility(View.GONE);
+
+                        Log.d("emptyTextView7", "emptyTextView7");
                     }
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                 }
@@ -1209,7 +1218,12 @@ public void run() {
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                     linearLayoutManager.scrollToPositionWithOffset(messageList.size() - 1, 0);
                     //emptyTextView.setVisibility(View.GONE);
-                    noConversations.setVisibility(View.GONE);
+
+                    emptyTextView.setVisibility(View.GONE);
+                    startChatLayout.setVisibility(View.GONE);
+
+                    Log.d("emptyTextView8", "emptyTextView8");
+
                     currentConversationId = message.getConversationId();
                     channelKey = message.getGroupId();
                     if (Message.MessageType.MT_INBOX.getValue().equals(message.getType()) && (contact != null || (channel != null && !Channel.GroupType.OPEN.getValue().equals(channel.getType())))) {
@@ -1994,7 +2008,11 @@ public void run() {
                         messageList.add(message);
                         linearLayoutManager.scrollToPositionWithOffset(messageList.size() - 1, 0);
                         //emptyTextView.setVisibility(View.GONE);
-                        noConversations.setVisibility(View.GONE);
+
+                        emptyTextView.setVisibility(View.GONE);
+                        startChatLayout.setVisibility(View.GONE);
+                        Log.d("emptyTextView9", "emptyTextView9");
+
                         recyclerDetailConversationAdapter.notifyDataSetChanged();
                     }
                 } catch (Exception ex) {
@@ -3504,8 +3522,10 @@ public DownloadConversation(RecyclerView recyclerView, boolean initial, int firs
         @Override
         protected void onPreExecute() {
             super.onPreExecute();
-            //emptyTextView.setVisibility(View.GONE);
-            noConversations.setVisibility(View.GONE);
+            emptyTextView.setVisibility(View.GONE);
+            startChatLayout.setVisibility(View.GONE);
+
+            Log.d("emptyTextView10", "emptyTextView10");
             isAlreadyLoading = true;
             swipeLayout.post(new Runnable() {
                 @Override
@@ -3656,8 +3676,11 @@ public void run() {
             if (initial) {
                 messageList.addAll(nextMessageList);
                 recyclerDetailConversationAdapter.searchString = searchString;
-                //emptyTextView.setVisibility(messageList.isEmpty() ? VISIBLE : View.GONE);
-                noConversations.setVisibility(messageList.isEmpty() ? VISIBLE : View.GONE);
+                emptyTextView.setVisibility(messageList.isEmpty() ? VISIBLE : View.GONE);
+
+                startChatLayout.setVisibility(View.GONE);
+
+                Log.d("emptyTextView11", "emptyTextView11");
 
                 if (!messageList.isEmpty()) {
                     recyclerView.post(new Runnable() {
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index 6e1dbba4..b764fca5 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -14,6 +14,7 @@
 import android.support.v7.widget.SearchView;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -66,11 +67,12 @@
 /**
  * Created by devashish on 10/2/15.
  */
-public class MobiComQuickConversationFragment extends Fragment implements SearchListFragment, SearchView.OnQueryTextListener {
+public class MobiComQuickConversationFragment extends Fragment implements SearchListFragment,
+        SearchView.OnQueryTextListener {
 
     public static final String QUICK_CONVERSATION_EVENT = "quick_conversation";
     protected RecyclerView recyclerView = null;
-    //protected TextView emptyTextView;
+    protected TextView emptyTextView;
     protected Button startNewButton;
     protected SwipeRefreshLayout swipeLayout;
     protected int listIndex;
@@ -89,7 +91,7 @@
     boolean isAlreadyLoading = false;
     int pastVisiblesItems, visibleItemCount, totalItemCount;
     //protected ImageButton fabButton;
-    private RelativeLayout noConversations;
+    private RelativeLayout startChatLayout;
     private Long minCreatedAtTime;
     private DownloadConversation downloadConversation;
     private BaseContactService baseContactService;
@@ -100,7 +102,7 @@
     private boolean loading = true;
     private int startingPageIndex = 0;
     private ProgressBar progressBar;
-    private SearchView searchView;
+    //private SearchView searchView;
     private SearchListFragment searchListFragment;
 
     public RecyclerView getRecyclerView() {
@@ -164,12 +166,12 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
 
         toolbar.setVisibility(View.VISIBLE);
 
-        searchView = (SearchView) list.findViewById(R.id.search_bar);
+       /* searchView = (SearchView) list.findViewById(R.id.search_bar);
         searchView.setVisibility(View.VISIBLE);
         searchView.setQueryHint(getResources().getString(R.string.search_hint));
         searchView.setOnQueryTextListener(this);
         searchView.setSubmitButtonEnabled(true);
-        searchView.setIconified(true);
+        searchView.setIconified(true);*/
 
 
         AppCompatActivity activity = (AppCompatActivity) getActivity();
@@ -198,15 +200,15 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
 
 
         //spinner = (ProgressBar) spinnerLayout.findViewById(R.id.spinner);
-        //emptyTextView = (TextView) list.findViewById(R.id.noConversations);
+        emptyTextView = (TextView) list.findViewById(R.id.noConversations);
         //emptyTextView.setTextColor(Color.parseColor(alCustomizationSettings.getNoConversationLabelTextColor().trim()));
 
-        noConversations = (RelativeLayout) list.findViewById(R.id.noConversations);
+        startChatLayout = (RelativeLayout) list.findViewById(R.id.startChatLayout);
         TextView txt_newChat = (TextView) list.findViewById(R.id.txt_newChat);
         txt_newChat.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                startActivity(new Intent(getActivity(), MobiComKitPeopleActivity.class));
+                conversationUIService.startContactActivityForResult();
             }
         });
 
@@ -214,7 +216,7 @@ public void onClick(View v) {
         btn_newChat.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                startActivity(new Intent(getActivity(), MobiComKitPeopleActivity.class));
+                conversationUIService.startContactActivityForResult();
             }
         });
 
@@ -252,7 +254,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
 
         MenuItem searchItem = menu.findItem(R.id.menu_search);
         searchItem.setVisible(true);
-        searchView = (SearchView) MenuItemCompat.getActionView(searchItem);
+        SearchView searchView = (SearchView) MenuItemCompat.getActionView(searchItem);
         searchView.setQueryHint(getResources().getString(R.string.search_hint));
         if (Utils.hasICS()) {
             searchItem.collapseActionView();
@@ -261,6 +263,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         searchView.setSubmitButtonEnabled(true);
         searchView.setIconified(true);
 
+
         if (alCustomizationSettings.isStartNewButton() ||
                 ApplozicSetting.getInstance(getContext()).isStartNewButtonVisible()) {
             menu.findItem(R.id.start_new).setVisible(true);
@@ -319,9 +322,10 @@ public void run() {
                 //listView.smoothScrollToPosition(messageList.size());
                 //listView.setSelection(0);
 
-                noConversations.setVisibility(View.GONE);
-                //emptyTextView.setVisibility(View.GONE);
-                //emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
+                Log.d("emptyTextView1", "emptyTextView1");
+                startChatLayout.setVisibility(View.GONE);
+                emptyTextView.setVisibility(View.GONE);
+                emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
                 // startQNewButton.setVisibility(View.GONE);
             }
         });
@@ -473,8 +477,10 @@ public void run() {
 
                     recyclerAdapter.notifyDataSetChanged();
                     if (messageList.isEmpty()) {
-//                        emptyTextView.setVisibility(View.VISIBLE);
-                        noConversations.setVisibility(View.VISIBLE);
+                        //emptyTextView.setVisibility(View.VISIBLE);
+                        Log.d("emptyTextView2", "emptyTextView2");
+                        emptyTextView.setVisibility(View.GONE);
+                        startChatLayout.setVisibility(View.VISIBLE);
                     }
                 }
             }
@@ -544,17 +550,19 @@ public void run() {
     public void checkForEmptyConversations() {
         boolean isLodingConversation = (downloadConversation != null && downloadConversation.getStatus() == AsyncTask.Status.RUNNING);
         if (latestMessageForEachContact.isEmpty() && !isLodingConversation) {
-            //emptyTextView.setVisibility(View.VISIBLE);
-            //emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
+            emptyTextView.setVisibility(View.VISIBLE);
+            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
 
-            noConversations.setVisibility(View.VISIBLE);
+            Log.d("emptyTextView3", "emptyTextView3");
+            //startChatLayout.setVisibility(View.VISIBLE);
+            startChatLayout.setVisibility(View.GONE);
 
             //startNewButton.setVisibility(applozicSetting.isStartNewButtonVisible() ? View.VISIBLE : View.GONE);
         } else {
-            //emptyTextView.setVisibility(View.GONE);
-            // startNewButton.setVisibility(View.GONE);
-
-            noConversations.setVisibility(View.GONE);
+            emptyTextView.setVisibility(View.GONE);
+            //startNewButton.setVisibility(View.GONE);
+            Log.d("emptyTextView4", "emptyTextView4");
+            startChatLayout.setVisibility(View.VISIBLE);
         }
     }
 
@@ -653,7 +661,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     if (loadMore && !loading && (visibleItemCount + pastVisiblesItems) >= totalItemCount) {
                         DownloadConversation downloadConversation = new DownloadConversation(recyclerView, false, listIndex, visibleItemCount, totalItemCount);
                         downloadConversation.setQuickConversationAdapterWeakReference(recyclerAdapter);
-                        downloadConversation.setTextViewWeakReference(noConversations);
+                        downloadConversation.setTextViewWeakReference(emptyTextView);
                         downloadConversation.setSwipeRefreshLayoutWeakReference(swipeLayout);
                         downloadConversation.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                         loading = true;
@@ -673,7 +681,7 @@ public void downloadConversations(boolean showInstruction, String searchString)
         minCreatedAtTime = null;
         downloadConversation = new DownloadConversation(recyclerView, true, 1, 0, 0, showInstruction, searchString);
         downloadConversation.setQuickConversationAdapterWeakReference(recyclerAdapter);
-        downloadConversation.setTextViewWeakReference(noConversations);
+        downloadConversation.setTextViewWeakReference(emptyTextView);
         downloadConversation.setSwipeRefreshLayoutWeakReference(swipeLayout);
         downloadConversation.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
         if (recyclerAdapter != null) {
@@ -844,7 +852,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         private String searchString;
         private WeakReference<SwipeRefreshLayout> swipeRefreshLayoutWeakReference;
         private WeakReference<QuickConversationAdapter> quickConversationAdapterWeakReference;
-        private WeakReference<RelativeLayout> textViewWeakReference;
+        private WeakReference<TextView> textViewWeakReference;
 
         public DownloadConversation(RecyclerView view, boolean initial, int firstVisibleItem, int amountVisible, int totalItems, boolean showInstruction, String searchString) {
             this.context = getActivity();
@@ -866,8 +874,8 @@ public void setQuickConversationAdapterWeakReference(QuickConversationAdapter qu
             this.quickConversationAdapterWeakReference = new WeakReference<QuickConversationAdapter>(quickConversationAdapterWeakReference);
         }
 
-        public void setTextViewWeakReference(RelativeLayout emptyTextViewWeakReference) {
-            this.textViewWeakReference = new WeakReference<RelativeLayout>(emptyTextViewWeakReference);
+        public void setTextViewWeakReference(TextView emptyTextViewWeakReference) {
+            this.textViewWeakReference = new WeakReference<TextView>(emptyTextViewWeakReference);
         }
 
         public void setSwipeRefreshLayoutWeakReference(SwipeRefreshLayout swipeRefreshLayout) {
@@ -991,18 +999,38 @@ public void run() {
             }
             if (initial) {
                 if (textViewWeakReference != null) {
-                    //TextView emptyTextView = textViewWeakReference.get();
-                    //if (emptyTextView != null) {
-                    //emptyTextView.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
-
-                    noConversations.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
-//
-//                        if (!TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
-//                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoSearchFoundForChatMessages()) ? alCustomizationSettings.getNoSearchFoundForChatMessages() : getResources().getString(R.string.search_not_found_for_messages));
-//                        } else if (TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
-//                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
-//                        }
-                    //}
+                    TextView emptyTextView = textViewWeakReference.get();
+                    if (emptyTextView != null) {
+                        //emptyTextView.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
+
+                        Log.d("emptyTextViewmessageList", ""+messageList.size());
+
+
+                        if(messageList.isEmpty()){
+                            emptyTextView.setVisibility(View.GONE);
+                            startChatLayout.setVisibility(View.VISIBLE);
+                            Log.d("emptyTextViewEmpty", "emptyTextViewEmpty");
+                        }else{
+                            emptyTextView.setVisibility(View.GONE);
+                            startChatLayout.setVisibility(View.GONE);
+                            Log.d("emptyTextViewEmptyNo", "emptyTextViewEmptyNo");
+                        }
+
+
+
+                        Log.d("emptyTextView5", "emptyTextView5");
+
+                        if (!TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
+                            emptyTextView.setText(!TextUtils.isEmpty
+                                    (alCustomizationSettings.getNoSearchFoundForChatMessages()) ?
+                                    alCustomizationSettings.getNoSearchFoundForChatMessages() :
+                                    getResources().getString(R.string.search_not_found_for_messages));
+                        } else if (TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
+                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel())
+                                    ? alCustomizationSettings.getNoConversationLabel() :
+                                    getResources().getString(R.string.no_conversation));
+                        }
+                    }
                 }
                 if (!messageList.isEmpty()) {
                     if (recyclerView != null) {
diff --git a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
index 6b7db9d7..6997d284 100644
--- a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
+++ b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
@@ -10,20 +10,41 @@
         android:layout_width="match_parent"
         android:layout_height="?attr/actionBarSize"
         android:background="?attr/colorPrimary"
-        android:elevation="4dp"
         android:visibility="gone"
         android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
 
-   <!-- <android.support.v7.widget.SearchView
+ <!--   <android.support.v7.widget.SearchView
         android:id="@+id/search_bar"
         android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
+        android:layout_height="40dp"
         android:background="?attr/colorPrimary"
-        android:elevation="2dp"
         android:visibility="gone"
-        android:layout_alignParentRight="true"
-        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-        />-->
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" />-->
+
+   <!-- <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="40dp">
+
+        <TextView
+            android:id="@+id/toolbar_title"
+            style="@style/TextAppearance.AppCompat.Widget.ActionBar.Title"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:gravity="center_vertical"
+            android:text="SEARCH"
+            android:textColor="@android:color/white" />
+
+        <android.support.v7.widget.SearchView
+            android:id="@+id/search_bar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_alignParentRight="true"
+            android:layout_centerVertical="true"
+            android:background="?attr/colorPrimary"
+            android:gravity="right" />
+    </RelativeLayout>
+-->
+
 
     <FrameLayout
         android:id="@+id/contextFrameLayout"
@@ -63,19 +84,19 @@
 
         </android.support.v4.widget.SwipeRefreshLayout>
 
-        <!--<TextView-->
-        <!--android:id="@+id/noConversations"-->
-        <!--android:layout_width="match_parent"-->
-        <!--android:layout_height="match_parent"-->
-        <!--android:layout_centerInParent="true"-->
-        <!--android:layout_gravity="center"-->
-        <!--android:gravity="center"-->
-        <!--android:text="@string/no_conversation"-->
-        <!--android:visibility="gone" />-->
+        <TextView
+        android:id="@+id/noConversations"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_centerInParent="true"
+        android:layout_gravity="center"
+        android:gravity="center"
+        android:text="@string/no_conversation"
+        android:visibility="gone" />
 
 
         <RelativeLayout
-            android:id="@+id/noConversations"
+            android:id="@+id/startChatLayout"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:visibility="gone">
