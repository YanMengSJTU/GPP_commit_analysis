diff --git a/app/src/main/assets/applozic-settings.json b/app/src/main/assets/applozic-settings.json
index 2407b91a..8bedcf35 100644
--- a/app/src/main/assets/applozic-settings.json
+++ b/app/src/main/assets/applozic-settings.json
@@ -70,6 +70,7 @@
   "replyOption": true,
   "logoutOption": false,
   "logoutPackageName": "",
+  "groupDeletePackageName": "com.applozic.mobicomkit.sample.HomeActivity",
   "attachmentOptions": {
     ":location": true,
     ":camera": true,
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
index 4c6a2a85..d3f5bd6c 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -1,6 +1,5 @@
 package com.applozic.mobicomkit.sample;
 
-import android.*;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -62,18 +61,17 @@
 
     public static final String TAB_HOME = "tab_home";
     public static final String TAB_CHAT = "tab_chat";
+    // Request code for READ_CONTACTS. It can be any number > 0.
+    private static final int PERMISSIONS_REQUEST_READ_CONTACTS = 100;
     private static int retry;
     protected ActionBar mActionBar;
     ConversationUIService conversationUIService;
     MobiComQuickConversationFragment mobiComQuickConversationFragment;
     MobiComKitBroadcastReceiver mobiComKitBroadcastReceiver;
-
     private HashMap<String, Stack<Fragment>> mStacks;
     private BottomNavigationView bottomNavigationView;
     private String currentTab;
     private boolean isStopCalled = false;
-    // Request code for READ_CONTACTS. It can be any number > 0.
-    private static final int PERMISSIONS_REQUEST_READ_CONTACTS = 100;
     private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
             = new BottomNavigationView.OnNavigationItemSelectedListener() {
         @Override
@@ -136,6 +134,14 @@ protected void onCreate(Bundle savedInstanceState) {
         mActionBar = getSupportActionBar();
         //Used to select an item programmatically
         //bottomNavigationView.getMenu().getItem(2).setChecked(true);
+
+        try {
+            if (getIntent() != null && getIntent().getExtras() != null && getIntent().getExtras().getBoolean(ConversationUIService.FROM_GROUP_DELETE)) {
+                bottomNavigationView.setSelectedItemId(R.id.action_chat);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
     }
 
   /*  private void goToFragment(Fragment selectedFragment) {
@@ -152,7 +158,7 @@ private void showContacts() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M &&
 
                 ActivityCompat.checkSelfPermission(this, android.Manifest.permission.READ_CONTACTS) !=
-                        PackageManager.PERMISSION_GRANTED){
+                        PackageManager.PERMISSION_GRANTED) {
 
             ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.READ_CONTACTS},
                     PERMISSIONS_REQUEST_READ_CONTACTS);
@@ -176,7 +182,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
                 Toast.makeText(this, "Until you grant the permission, we cannot display the names",
                         Toast.LENGTH_SHORT).show();
             }
-        }else{
+        } else {
             super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         }
     }
@@ -257,7 +263,7 @@ public void pushFragments(String tag, Fragment fragment, boolean shouldAdd) {
                         !getSupportFragmentManager().isDestroyed()) {
 
                     if (shouldAdd)
-                    mStacks.get(tag).push(fragment);
+                        mStacks.get(tag).push(fragment);
                     //FragmentManager manager = getSupportFragmentManager();
                     FragmentTransaction ft = manager.beginTransaction();
                     ft.replace(R.id.layout_child_activity, fragment);
@@ -407,12 +413,12 @@ public void onBackPressed() {
     protected void onStop() {
         isStopCalled = true;
         super.onStop();
-        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
-        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
-        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
-        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
-        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
-        startService(intent);
+//        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
+//        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
+//        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
+//        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
+//        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
+//        startService(intent);
     }
 
     @Override
@@ -422,7 +428,9 @@ protected void onResume() {
         LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
         Intent subscribeIntent = new Intent(this, ApplozicMqttIntentService.class);
         subscribeIntent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
-        startService(subscribeIntent);
+        //startService(subscribeIntent);
+
+        ApplozicMqttIntentService.enqueueWork(HomeActivity.this, subscribeIntent);
 
         if (!Utils.isInternetAvailable(this)) {
             String errorMessage = getResources().getString(R.string.internet_connection_not_available);
@@ -433,6 +441,12 @@ protected void onResume() {
     @Override
     protected void onPause() {
         LocalBroadcastManager.getInstance(this).unregisterReceiver(mobiComKitBroadcastReceiver);
+        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
+        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
+        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
+        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
+        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
+        ApplozicMqttIntentService.enqueueWork(HomeActivity.this, intent);
         super.onPause();
     }
 
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
index 3326a7ad..ca1ac9b7 100755
--- a/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
@@ -95,7 +95,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         //FacebookSdk.sdkInitialize(this);
 
-        Applozic.init(this,getString(R.string.application_key));
+        //Applozic.init(this,getString(R.string.application_key));
 
         setContentView(R.layout.activity_login);
         setupUI(findViewById(R.id.layout));
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
index cedc7341..fda58cd9 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
@@ -83,6 +83,7 @@
     private boolean muteOption = true;
     private MobicomMessageTemplate messageTemplate;
     private String logoutPackageName;
+    private String groupDeletePackageName;
     private boolean logoutOption = false;
     private int defaultGroupType = 2;
     private boolean muteUserChatOption = false;
@@ -448,6 +449,11 @@ public void setLogoutPackageName(String logoutPackageName) {
         this.logoutPackageName = logoutPackageName;
     }
 
+    public String getGroupDeletePackageName() {
+           return groupDeletePackageName;
+          }
+ 
+
     public String getThemeColorPrimary() {
         return themeColorPrimary;
     }
