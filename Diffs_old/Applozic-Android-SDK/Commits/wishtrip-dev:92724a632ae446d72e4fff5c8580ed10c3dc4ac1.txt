diff --git a/README.md b/README.md
index 9700bc54..01fec997 100644
--- a/README.md
+++ b/README.md
@@ -24,7 +24,7 @@ Documentation: [Applozic Android Chat & Messaging SDK Documentation](https://www
 
 #### Step 1: Add the following in your build.gradle dependency:      
 
-`implementation 'com.applozic.communication.uiwidget:mobicomkitui:5.9' `
+`implementation 'com.applozic.communication.uiwidget:mobicomkitui:5.9.1' `
 
 
 Add the following in gradle android target:      
diff --git a/app/build.gradle b/app/build.gradle
index 19a78876..a34b17a3 100755
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -61,14 +61,11 @@ dependencies {
     implementation fileTree(include: ['*.jar'], dir: 'libs')
     implementation project(':mobicomkitui')
     //Note: use this for customization
-    //implementation 'com.applozic.communication.uiwidget:mobicomkitui:5.9'
+//    implementation 'com.applozic.communication.uiwidget:mobicomkitui:5.9.1'
     implementation 'com.android.support:support-v4:27.1.1'
     implementation 'com.android.support:appcompat-v7:27.1.1'
-    //implementation 'com.facebook.android:facebook-android-sdk:4.1.0'
     implementation 'com.android.support:design:27.1.1'
     implementation 'com.android.support:multidex:1.0.3'
-    //implementation 'com.android.support:cardview-v7:22.0'
-    //implementation 'com.android.support:recyclerview-v7:22.0'
     implementation('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
         transitive = true;
     }
diff --git a/build.gradle b/build.gradle
index b9d3266d..c2bdf03b 100755
--- a/build.gradle
+++ b/build.gradle
@@ -12,7 +12,7 @@ buildscript {
         classpath 'com.android.tools.build:gradle:3.1.3'
         classpath 'com.google.gms:google-services:4.0.1'
 
-     /* classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
+      /*classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
         classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
         classpath 'com.github.dcendents:android-maven-plugin:1.2'
         classpath 'com.novoda:bintray-release:0.3.4'*/
@@ -36,6 +36,5 @@ task clean(type: Delete) {
     delete rootProject.buildDir
 }
 subprojects {
-    //tasks.withType(Javadoc).all { enabled = false }
+    tasks.withType(Javadoc).all { enabled = false }
 }
-
diff --git a/mobicomkit/build.gradle b/mobicomkit/build.gradle
index db748f88..f4e05cc6 100755
--- a/mobicomkit/build.gradle
+++ b/mobicomkit/build.gradle
@@ -8,7 +8,7 @@ android {
         minSdkVersion 14
         targetSdkVersion 25
         versionCode 1
-        versionName "5.9"
+        versionName "5.9.1"
     }
     useLibrary 'org.apache.http.legacy'
     buildTypes {
@@ -65,11 +65,11 @@ dependencies {
     implementation 'com.android.support:support-compat:27.1.1'
     api project(':mobicommons')
     //Note: use this for customization
-    //implementation 'com.applozic.mobiframework:mobicommons:5.9' //Note: use this in case customization is not required
+    //implementation 'com.applozic.mobiframework:mobicommons:5.9.1' //Note: use this in case customization is not required
 }
 
-
-/*ext {
+/*
+ext {
     // Where you will see your artifact in Bintray's web interface
     // The "bintrayName" should match the name of the Bintray repro.
     bintrayRepo = 'maven'
@@ -83,7 +83,7 @@ dependencies {
     artifact = 'mobicomkit'
 
     libraryDescription = 'Applozic Communication Chat/Messaging library'
-    libraryVersion = '5.9'
+    libraryVersion = '5.9.1'
 
     developerId = 'devashish'
     developerName = 'Applozic'
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/HttpRequestUtils.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/HttpRequestUtils.java
index 7525243f..536adc25 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/HttpRequestUtils.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/HttpRequestUtils.java
@@ -39,7 +39,7 @@
 
 
     public HttpRequestUtils(Context context) {
-        this.context = context.getApplicationContext();
+            this.context = context.getApplicationContext();
     }
 
     private void log(String message) {
@@ -96,6 +96,10 @@ public String postData(String urlString, String contentType, String accept, Stri
                 e.printStackTrace();
             } catch (Exception e) {
                 e.printStackTrace();
+            } finally {
+                if (br != null) {
+                    br.close();
+                }
             }
             Utils.printLog(context, TAG, "Response : " + sb.toString());
             if (!TextUtils.isEmpty(sb.toString())) {
@@ -151,6 +155,10 @@ public String postJsonToServer(String StringUrl, String data) throws Exception {
             e.printStackTrace();
         } catch (Throwable e) {
 
+        } finally {
+            if (br != null) {
+                br.close();
+            }
         }
         Utils.printLog(context, TAG, "Response: " + sb.toString());
         return sb.toString();
@@ -204,6 +212,10 @@ public String getResponse(String urlString, String contentType, String accept, b
                 }
             } catch (Exception e) {
                 e.printStackTrace();
+            } finally {
+                if (br != null) {
+                    br.close();
+                }
             }
 
             Utils.printLog(context, TAG, "Response :" + sb.toString());
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentDownloader.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentDownloader.java
index bd7f74be..9bc3dafc 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentDownloader.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentDownloader.java
@@ -151,11 +151,11 @@ public void run() {
 
     public void loadAttachmentImage(Message message, Context context) {
         File file = null;
+        HttpURLConnection connection = null;
         try {
             InputStream inputStream = null;
             FileMeta fileMeta = message.getFileMetas();
             String contentType = fileMeta.getContentType();
-            HttpURLConnection connection = null;
             String fileName = null;
             if (message.getContentType() == Message.ContentType.AUDIO_MSG.getValue()) {
                 fileName = fileMeta.getName();
@@ -237,6 +237,10 @@ public void onScanCompleted(String path, Uri uri) {
             }
             ex.printStackTrace();
             Utils.printLog(context, TAG, "Exception fetching file from server");
+        } finally {
+            if (connection != null) {
+                connection.disconnect();
+            }
         }
     }
 
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentView.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentView.java
index 5e74dde9..87302f17 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentView.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/AttachmentView.java
@@ -81,6 +81,7 @@ public AttachmentView(Context context) {
      */
     public AttachmentView(Context context, AttributeSet attributeSet) {
         super(context, attributeSet);
+        this.context = context;
 
         // Gets attributes associated with the attribute set
         //getAttributes(attributeSet);
@@ -95,6 +96,7 @@ public AttachmentView(Context context, AttributeSet attributeSet) {
      */
     public AttachmentView(Context context, AttributeSet attributeSet, int defaultStyle) {
         super(context, attributeSet, defaultStyle);
+        this.context = context;
 
     }
 
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/GoogleCloudURLService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/GoogleCloudURLService.java
index 9fc90436..faa6be0f 100644
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/GoogleCloudURLService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/GoogleCloudURLService.java
@@ -29,7 +29,7 @@ public GoogleCloudURLService(Context context) {
     @Override
     public HttpURLConnection getAttachmentConnection(Message message) throws IOException {
 
-        String response = httpRequestUtils.getResponse(mobiComKitClientService.getFileBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getBlobKeyString(), "application/json", "application/json");
+        String response = httpRequestUtils.getResponse(mobiComKitClientService.getFileBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getBlobKeyString(), "application/json", "application/json",true);
         if (TextUtils.isEmpty(response)) {
             return null;
         } else {
@@ -39,7 +39,7 @@ public HttpURLConnection getAttachmentConnection(Message message) throws IOExcep
 
     @Override
     public String getThumbnailURL(Message message) throws IOException {
-        return httpRequestUtils.getResponse(mobiComKitClientService.getFileBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getThumbnailBlobKey(), "application/json", "application/json");
+        return httpRequestUtils.getResponse(mobiComKitClientService.getFileBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getThumbnailBlobKey(), "application/json", "application/json",true);
     }
 
 
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/S3URLService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/S3URLService.java
index 72149276..8afcd651 100644
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/S3URLService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/attachment/urlservice/S3URLService.java
@@ -30,7 +30,7 @@
     @Override
     public HttpURLConnection getAttachmentConnection(Message message) throws IOException {
 
-        String response = httpRequestUtils.getResponse(mobiComKitClientService.getBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getBlobKeyString(), "application/json", "application/json");
+        String response = httpRequestUtils.getResponse(mobiComKitClientService.getBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getBlobKeyString(), "application/json", "application/json",true);
         if (TextUtils.isEmpty(response)) {
             return null;
         } else {
@@ -40,7 +40,7 @@ public HttpURLConnection getAttachmentConnection(Message message) throws IOExcep
 
     @Override
     public String getThumbnailURL(Message message) throws IOException {
-        return httpRequestUtils.getResponse(mobiComKitClientService.getBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getThumbnailBlobKey(), "application/json", "application/json");
+        return httpRequestUtils.getResponse(mobiComKitClientService.getBaseUrl() + GET_SIGNED_URL + message.getFileMetas().getThumbnailBlobKey(), "application/json", "application/json",true);
 
     }
 
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java
index 660adb7f..f574b3af 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java
@@ -274,6 +274,7 @@ public void sendPendingMessageToServer(Message message, boolean broadcast) {
             String createdAt = messageResponse.getCreatedAtTime();
             message.setSentMessageTimeAtServer(Long.parseLong(createdAt));
             message.setKeyString(keyString);
+            message.setSentToServer(true);
 
         /*recentMessageSentToServer.add(message);*/
 
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/SyncCallService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/SyncCallService.java
index 647d317f..dd4e8567 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/SyncCallService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/SyncCallService.java
@@ -48,7 +48,7 @@ private SyncCallService(Context context) {
         this.messageDatabaseService = new MessageDatabaseService(context);
     }
 
-    public synchronized static SyncCallService getInstance(Context context) {
+    public static SyncCallService getInstance(Context context) {
         if (syncCallService == null) {
             syncCallService = new SyncCallService(context.getApplicationContext());
         }
@@ -63,7 +63,6 @@ public synchronized void updateDeliveryStatus(String key) {
     public synchronized void updateReadStatus(String key) {
         mobiComMessageService.updateDeliveryStatus(key, true);
         refreshView = true;
-
     }
 
     public synchronized List<Message> getLatestMessagesGroupByPeople(String searchString) {
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/TimeChangeBroadcastReceiver.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/TimeChangeBroadcastReceiver.java
index 2bb47519..d8a5843a 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/TimeChangeBroadcastReceiver.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/TimeChangeBroadcastReceiver.java
@@ -18,21 +18,25 @@
     @Override
     public void onReceive(final Context context, Intent intent) {
 
-        if (Utils.isDeviceInIdleState(context)) {
-            Thread timeChangeThread = new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    Utils.printLog(context, "TimeChange", "This thread has been called on date change");
-                    long diff = DateUtils.getTimeDiffFromUtc();
-                    MobiComUserPreference.getInstance(context).setDeviceTimeOffset(diff);
+        if ("android.intent.action.TIME_SET".equals(intent.getAction()) || "android.intent.action.TIMEZONE_CHANGED".equals(intent.getAction())) {
+            if (!Utils.isAutomaticTimeEnabled(context, "android.intent.action.TIMEZONE_CHANGED".equals(intent.getAction()))) {
+                if (Utils.isDeviceInIdleState(context)) {
+                    Thread timeChangeThread = new Thread(new Runnable() {
+                        @Override
+                        public void run() {
+                            Utils.printLog(context, "TimeChange", "This thread has been called on date change");
+                            long diff = DateUtils.getTimeDiffFromUtc();
+                            MobiComUserPreference.getInstance(context).setDeviceTimeOffset(diff);
+                        }
+                    });
+                    timeChangeThread.setPriority(Process.THREAD_PRIORITY_BACKGROUND);
+                    timeChangeThread.start();
+                } else {
+                    Intent applozicIntent = new Intent(context, ApplozicIntentService.class);
+                    applozicIntent.putExtra(ApplozicIntentService.AL_TIME_CHANGE_RECEIVER, true);
+                    ApplozicIntentService.enqueueWork(context, applozicIntent);
                 }
-            });
-            timeChangeThread.setPriority(Process.THREAD_PRIORITY_BACKGROUND);
-            timeChangeThread.start();
-        } else {
-            Intent applozicIntent = new Intent(context, ApplozicIntentService.class);
-            applozicIntent.putExtra(ApplozicIntentService.AL_TIME_CHANGE_RECEIVER, true);
-            ApplozicIntentService.enqueueWork(context, applozicIntent);
+            }
         }
     }
 }
diff --git a/mobicomkitui/build.gradle b/mobicomkitui/build.gradle
index 75f8b753..b5277f65 100755
--- a/mobicomkitui/build.gradle
+++ b/mobicomkitui/build.gradle
@@ -8,7 +8,7 @@ android {
         minSdkVersion 14
         targetSdkVersion 25
         versionCode 1
-        versionName "5.9"
+        versionName "5.9.1"
     }
     buildTypes {
         release {
@@ -48,14 +48,14 @@ dependencies {
     api 'com.google.android.gms:play-services-maps:15.0.1'
     api 'com.google.android.gms:play-services-location:15.0.1'
     implementation 'de.hdodenhof:circleimageview:2.2.0'
-    api 'com.android.support:design:27.1.1'
+    implementation 'com.android.support:design:27.1.1'
     implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.0'
     implementation 'com.github.bumptech.glide:glide:4.7.1'
     implementation 'com.android.support:cardview-v7:27.1.1'
     implementation 'com.android.support.constraint:constraint-layout:1.1.2'
     api project(':mobicomkit')
     //Note: use this for customization
-    //api 'com.applozic.communication.message:mobicomkit:5.9' //Note: use this in case customization is not required
+    //api 'com.applozic.communication.message:mobicomkit:5.9.1' //Note: use this in case customization is not required
 }
 
 /* ext {
@@ -72,7 +72,7 @@ dependencies {
     artifact = 'mobicomkitui'
 
     libraryDescription = 'Applozic Communication UI Widget'
-    libraryVersion = '5.9'
+    libraryVersion = '5.9.1'
 
     developerId = 'devashish'
     developerName = 'Applozic'
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 67c4a1e4..0d8e84fc 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -1073,7 +1073,7 @@ protected void sendMessage() {
         }
     }
 
-    public void sendOpenGroupMessage(String messageText){
+    public void sendOpenGroupMessage(String messageText) {
 
         attachReplyCancelLayout.setVisibility(View.GONE);
         replayRelativeLayout.setVisibility(View.GONE);
@@ -1109,8 +1109,8 @@ public void onCompleted(ApplozicException e) {
             public void onSent(Message message, String oldMessageKey) {
                 Message messageToBeReplied = new Message();
                 messageToBeReplied.setKeyString(oldMessageKey);
-                int indexOfObject =   messageList.indexOf(messageToBeReplied);
-                if(indexOfObject != -1){
+                int indexOfObject = messageList.indexOf(messageToBeReplied);
+                if (indexOfObject != -1) {
                     messageList.set(indexOfObject, message);
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                 }
@@ -1122,7 +1122,6 @@ public void onSent(Message message, String oldMessageKey) {
     }
 
 
-
     protected void processSendMessage() {
         if (!TextUtils.isEmpty(messageEditText.getText().toString().trim()) || !TextUtils.isEmpty(filePath)) {
             String inputMessage = messageEditText.getText().toString();
@@ -1133,9 +1132,9 @@ protected void processSendMessage() {
 
             if (disjointResult) {
 
-                if(channel!=null && Channel.GroupType.OPEN.getValue().equals(channel.getType())){
+                if (channel != null && Channel.GroupType.OPEN.getValue().equals(channel.getType())) {
                     sendOpenGroupMessage(messageEditText.getText().toString().trim());
-                }else {
+                } else {
                     sendMessage(messageEditText.getText().toString().trim());
                 }
                 messageEditText.setText("");
@@ -1740,7 +1739,9 @@ public void loadConversation(final Contact contact, final Channel channel, final
         }
 
         if (contact != null && this.channel != null) {
-            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+            if (getActivity() != null) {
+                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+            }
             if (menu != null) {
                 menu.findItem(R.id.unmuteGroup).setVisible(false);
                 menu.findItem(R.id.muteGroup).setVisible(false);
@@ -1936,17 +1937,25 @@ public void run() {
                 }
 
                 if (withUserContact.isBlocked() || withUserContact.isBlockedBy() || withUserContact.isDeleted()) {
-                    ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                    if (getActivity() != null) {
+                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                    }
                     return;
                 }
                 if (withUserContact != null) {
                     if (withUserContact.isConnected()) {
                         typingStarted = false;
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.user_online));
+                        if (getActivity() != null) {
+                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.user_online));
+                        }
                     } else if (withUserContact.getLastSeenAt() != 0) {
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(getContext(), withUserContact.getLastSeenAt(), R.string.JUST_NOW, R.plurals.MINUTES_AGO, R.plurals.HOURS_AGO, R.string.YESTERDAY));
+                        if (getActivity() != null) {
+                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(getContext(), withUserContact.getLastSeenAt(), R.string.JUST_NOW, R.plurals.MINUTES_AGO, R.plurals.HOURS_AGO, R.string.YESTERDAY));
+                        }
                     } else {
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                        if (getActivity() != null) {
+                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                        }
                     }
                 }
             }
@@ -1963,13 +1972,15 @@ public void updateChannelSubTitle() {
                     Contact withUserContact = appContactService.getContactById(userId);
                     if (withUserContact != null) {
                         if (withUserContact.isBlocked()) {
-                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                            if (getActivity() != null) {
+                                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                            }
                         } else {
-                            if (withUserContact.isConnected()) {
+                            if (withUserContact.isConnected() && getActivity() != null) {
                                 ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.user_online));
-                            } else if (withUserContact.getLastSeenAt() != 0) {
+                            } else if (withUserContact.getLastSeenAt() != 0 && getActivity() != null) {
                                 ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(getContext(), withUserContact.getLastSeenAt(), R.string.JUST_NOW, R.plurals.MINUTES_AGO, R.plurals.HOURS_AGO, R.string.YESTERDAY));
-                            } else {
+                            } else if (getActivity() != null) {
                                 ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
                             }
                         }
@@ -2001,12 +2012,18 @@ public void updateChannelSubTitle() {
                         }
                         int lastIndex = stringBuffer.lastIndexOf(",");
                         String userIds = stringBuffer.replace(lastIndex, lastIndex + 1, "").toString();
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(userIds);
+                        if (getActivity() != null) {
+                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(userIds);
+                        }
                     } else {
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(stringBuffer.toString());
+                        if (getActivity() != null) {
+                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(stringBuffer.toString());
+                        }
                     }
                 } else {
-                    ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(youString);
+                    if (getActivity() != null) {
+                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(youString);
+                    }
                 }
             }
 
@@ -2639,8 +2656,8 @@ public void run() {
                         }
                         TextView createdAtTime = (TextView) view.findViewById(R.id.createdAtTime);
                         if (createdAtTime != null && messageListItem.getKeyString() != null && messageListItem.isTypeOutbox() && !messageListItem.isCall() && !messageListItem.getDelivered() && !messageListItem.isCustom() && !messageListItem.isChannelCustomMessage() && messageListItem.getScheduledAt() == null
-                                && (!(channel!=null && Channel.GroupType.OPEN.getValue().equals(channel.getType())) || contact != null)){
-                                    createdAtTime.setCompoundDrawablesWithIntrinsicBounds(null, null, support.isSupportNumber(getCurrentUserId()) ? deliveredIcon : sentIcon, null);
+                                && (!(channel != null && Channel.GroupType.OPEN.getValue().equals(channel.getType())) || contact != null)) {
+                            createdAtTime.setCompoundDrawablesWithIntrinsicBounds(null, null, support.isSupportNumber(getCurrentUserId()) ? deliveredIcon : sentIcon, null);
                         }
                     }
                 }
@@ -2755,13 +2772,19 @@ public void run() {
                                 return;
                             }
                             if (Channel.GroupType.GROUPOFTWO.getValue().equals(channel.getType())) {
-                                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.is_typing));
+                                if (getActivity() != null) {
+                                    ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.is_typing));
+                                }
                             } else {
-                                ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(displayNameContact.getDisplayName() + " " + getActivity().getString(R.string.is_typing));
+                                if (getActivity() != null) {
+                                    ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(displayNameContact.getDisplayName() + " " + getActivity().getString(R.string.is_typing));
+                                }
                             }
                         }
                     } else {
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.is_typing));
+                        if (getActivity() != null) {
+                            ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.is_typing));
+                        }
                     }
                 } else {
                     if (channel != null) {
@@ -2856,7 +2879,7 @@ public void updateTitle() {
                 stringBufferTitle.append(ChannelUtils.getChannelTitleName(channel, MobiComUserPreference.getInstance(getActivity()).getUserId()));
             }
         }
-        if (stringBufferTitle != null) {
+        if (stringBufferTitle != null && getActivity() != null) {
             ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(stringBufferTitle.toString());
         }
 
@@ -3251,7 +3274,9 @@ public void updateChannelTitle() {
             if (newChannel != null && !TextUtils.isEmpty(channel.getName()) && !channel.getName().equals(newChannel.getName())) {
                 title = ChannelUtils.getChannelTitleName(newChannel, MobiComUserPreference.getInstance(getActivity()).getUserId());
                 channel = newChannel;
-                ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(title);
+                if (getActivity() != null) {
+                    ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(title);
+                }
             }
         }
     }
@@ -3260,7 +3285,9 @@ public void updateTitleForOpenGroup() {
         try {
             if (channel != null) {
                 Channel newChannel = ChannelService.getInstance(getActivity()).getChannelByChannelKey(channel.getKey());
-                ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(newChannel.getName());
+                if (getActivity() != null) {
+                    ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle(newChannel.getName());
+                }
             }
             updateChannelSubTitle();
         } catch (Exception e) {
@@ -3308,7 +3335,9 @@ public void blockUserProcess(final String userId, final boolean block, final boo
             @Override
             public void onSuccess(ApiResponse apiResponse) {
                 if (block && typingStarted) {
-                    ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                    if (getActivity() != null) {
+                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
+                    }
                     Intent intent = new Intent(getActivity(), ApplozicMqttIntentService.class);
                     intent.putExtra(ApplozicMqttIntentService.CONTACT, contact);
                     intent.putExtra(ApplozicMqttIntentService.STOP_TYPING, true);
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/richmessaging/ALRichMessageAdapter.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/richmessaging/ALRichMessageAdapter.java
index 470106d2..2efee34a 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/richmessaging/ALRichMessageAdapter.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/richmessaging/ALRichMessageAdapter.java
@@ -536,12 +536,20 @@ public void onClick(View v) {
 
     private void bindSingleTextItem(SingleTextViewHolder holder, final int position) {
         if (model.getTemplateId() == 3) {
-            holder.singleTextItem.setText(payloadList.get(position).getName().trim());
+            if (payloadList.get(position).getName() != null) {
+                holder.singleTextItem.setText(payloadList.get(position).getName().trim());
+            }else{
+                holder.singleTextItem.setText("");
+            }
            /* ViewGroup.LayoutParams params = holder.rootLayout.getLayoutParams();
             params.width = LinearLayout.LayoutParams.MATCH_PARENT;
             holder.rootLayout.setLayoutParams(params);*/
         } else {
-            holder.singleTextItem.setText(payloadList.get(position).getTitle().trim());
+            if (payloadList.get(position).getTitle() != null) {
+                holder.singleTextItem.setText(payloadList.get(position).getTitle().trim());
+            }else{
+                holder.singleTextItem.setText("");
+            }
         }
     }
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java
index 8416a8f5..02d51c4f 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java
@@ -232,6 +232,14 @@ public void onItemClick(AdapterView<?> adapterView, View view, int position, lon
                 getActivity().setResult(getActivity().RESULT_OK, intent);
                 getActivity().finish();
             }
+        } else {
+            AppCompatCheckBox checkBox = (AppCompatCheckBox) view.findViewById(R.id.checkbox);
+            checkBox.toggle();
+            if (checkBox.isChecked()) {
+                userIdList.add(contact.getContactIds());
+            } else if (!checkBox.isChecked()) {
+                userIdList.remove(contact.getContactIds());
+            }
         }
     }
 
@@ -243,7 +251,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         getListView().setOnItemClickListener(this);
         getListView().setFastScrollEnabled(true);
         getListView().setOnScrollListener(new EndlessScrollListener());
-        if(footerView != null){
+        if (footerView != null) {
             getListView().addFooterView(footerView);
         }
 
@@ -675,16 +683,6 @@ public void bindView(View view, Context context, Cursor cursor) {
             } else {
                 holder.contactNumberTextView.setText("");
             }
-            holder.checkBox.setOnClickListener(new View.OnClickListener() {
-                public void onClick(View v) {
-                    AppCompatCheckBox checkBox = (AppCompatCheckBox) v;
-                    if (checkBox.isChecked()) {
-                        userIdList.add(contact.getContactIds());
-                    } else if (!checkBox.isChecked()) {
-                        userIdList.remove(contact.getContactIds());
-                    }
-                }
-            });
 
             // If the selected items contains the current item, set the checkbox to be checked
 
diff --git a/mobicomkitui/src/main/res/layout/contact_select_list_item.xml b/mobicomkitui/src/main/res/layout/contact_select_list_item.xml
index 730f91c4..e8173ff2 100755
--- a/mobicomkitui/src/main/res/layout/contact_select_list_item.xml
+++ b/mobicomkitui/src/main/res/layout/contact_select_list_item.xml
@@ -136,6 +136,7 @@
         android:layout_centerVertical="true"
         android:layout_marginLeft="5dp"
         android:layout_marginRight="5dp"
+        android:focusable="false"
         android:padding="10dp"
         app:buttonTint="#b2b2b2"
         android:layout_alignParentEnd="true"
diff --git a/mobicommons/build.gradle b/mobicommons/build.gradle
index 5cef8220..37189d41 100755
--- a/mobicommons/build.gradle
+++ b/mobicommons/build.gradle
@@ -8,7 +8,7 @@ android {
         minSdkVersion 14
         targetSdkVersion 25
         versionCode 1
-        versionName "5.9"
+        versionName "5.9.1"
     }
     buildTypes {
         release {
@@ -46,7 +46,8 @@ dependencies {
 }
 
 
-/*ext {
+/*
+ext {
     // Where you will see your artifact in Bintray's web interface
     // The "bintrayName" should match the name of the Bintray repro.
     bintrayRepo = 'maven'
@@ -60,7 +61,7 @@ dependencies {
     artifact = 'mobicommons'
 
     libraryDescription = 'Applozic MobiFramekwork mobicommons library for utilities'
-    libraryVersion = '5.9'
+    libraryVersion = '5.9.1'
     developerId = 'devashish'
     developerName = 'Applozic'
     developerEmail = 'devashish.mamgain@gmail.com'
@@ -68,7 +69,8 @@ dependencies {
 
 
 apply from: 'https://raw.githubusercontent.com/attwellBrian/JCenter/master/installv1.gradle'
-apply from: 'https://raw.githubusercontent.com/attwellBrian/JCenter/master/bintrayv1.gradle'*/
+apply from: 'https://raw.githubusercontent.com/attwellBrian/JCenter/master/bintrayv1.gradle'
+*/
 
 
 
diff --git a/mobicommons/src/main/java/com/applozic/mobicommons/commons/core/utils/Utils.java b/mobicommons/src/main/java/com/applozic/mobicommons/commons/core/utils/Utils.java
index 0517f475..c1d96019 100755
--- a/mobicommons/src/main/java/com/applozic/mobicommons/commons/core/utils/Utils.java
+++ b/mobicommons/src/main/java/com/applozic/mobicommons/commons/core/utils/Utils.java
@@ -18,6 +18,7 @@
 import android.os.PowerManager;
 import android.os.StrictMode;
 import android.provider.ContactsContract;
+import android.provider.Settings;
 import android.text.SpannableStringBuilder;
 import android.text.TextUtils;
 import android.util.Log;
@@ -268,6 +269,14 @@ public static String getMetaDataValue(Context context, String metaDataName) {
         return null;
     }
 
+    public static boolean isAutomaticTimeEnabled(Context context, boolean isTimeZone) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            return Settings.Global.getInt(context.getContentResolver(), (isTimeZone ? Settings.Global.AUTO_TIME_ZONE : Settings.Global.AUTO_TIME), 0) == 1;
+        } else {
+            return android.provider.Settings.System.getInt(context.getContentResolver(), (isTimeZone ? Settings.System.AUTO_TIME_ZONE : Settings.System.AUTO_TIME), 0) == 1;
+        }
+    }
+
     public static int getLauncherIcon(Context context) {
         try {
             ApplicationInfo ai = context.getPackageManager().getApplicationInfo(context.getPackageName(), PackageManager.GET_META_DATA);
