diff --git a/.idea/misc.xml b/.idea/misc.xml
index f112d601..8e2533e3 100644
--- a/.idea/misc.xml
+++ b/.idea/misc.xml
@@ -40,6 +40,9 @@
   <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
   <component name="masterDetails">
     <states>
       <state key="ProjectJDKs.UI">
diff --git a/Applozic-Android-SDK.iml b/Applozic-Android-SDK.iml
index 406c2ddd..f92dae93 100644
--- a/Applozic-Android-SDK.iml
+++ b/Applozic-Android-SDK.iml
@@ -13,7 +13,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/.gradle" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
diff --git a/app/app.iml b/app/app.iml
index 3618c626..aff1f0f4 100755
--- a/app/app.iml
+++ b/app/app.iml
@@ -22,28 +22,27 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
     <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/fabric/res/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/google-services/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/test/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
@@ -51,13 +50,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
@@ -88,83 +80,91 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/check-manifest" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/builds" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/javaPrecompile" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-resources" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-support" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/multi-dex" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/prebuild" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/reload-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/restart-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/splits-support" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/split-apk" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/tmp" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
       <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="com.android.support:multidex-1.0.2" level="project" />
-    <orderEntry type="library" name="com.android.support:animated-vector-drawable-27.0.2" level="project" />
-    <orderEntry type="library" name="com.google.code.gson:gson:2.8.0@jar" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-iid-11.8.0" level="project" />
-    <orderEntry type="library" name="com.theartofdev.edmodo:android-image-cropper-2.5.1" level="project" />
-    <orderEntry type="library" name="de.hdodenhof:circleimageview-2.0.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-core-9.0.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-base-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-analytics-9.0.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-basement-license-11.8.0" level="project" />
-    <orderEntry type="library" name="io.fabric.sdk.android:fabric-1.3.12" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:runtime-1.0.3" level="project" />
-    <orderEntry type="library" name="com.android.support:support-vector-drawable-27.0.2" level="project" />
-    <orderEntry type="library" name="org.eclipse.paho:org.eclipse.paho.android.service:1.1.1@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:cardview-v7-27.0.2" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-basement-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-messaging-license-11.8.0" level="project" />
-    <orderEntry type="library" name="android.arch.core:common:1.0.0@jar" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-common-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-ui-27.0.2" level="project" />
-    <orderEntry type="library" name="com.android.support:support-compat-27.0.2" level="project" />
-    <orderEntry type="library" name="org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0@jar" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-tasks-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-common-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-location-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.crashlytics.sdk.android:beta-1.1.6" level="project" />
-    <orderEntry type="library" name="com.crashlytics.sdk.android:crashlytics-2.5.7" level="project" />
-    <orderEntry type="library" scope="TEST" name="com.android.support:multidex-instrumentation-1.0.2" level="project" />
-    <orderEntry type="library" name="com.android.support:support-fragment-27.0.2" level="project" />
-    <orderEntry type="library" name="com.android.support:support-media-compat-27.0.2" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-base-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-v4-27.0.2" level="project" />
-    <orderEntry type="library" name="com.android.support:appcompat-v7-27.0.2" level="project" />
-    <orderEntry type="library" name="com.android.support:support-annotations:27.0.2@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:design-27.0.2" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-iid-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:transition-27.0.2" level="project" />
-    <orderEntry type="library" name="com.android.support:recyclerview-v7-27.0.2" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-maps-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:disklrucache:4.5.0@jar" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:glide-4.5.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-analytics-impl-9.0.0" level="project" />
-    <orderEntry type="library" name="com.crashlytics.sdk.android:crashlytics-core-2.3.10" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:common:1.0.3@jar" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-maps-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:exifinterface-26.1.0" level="project" />
-    <orderEntry type="library" name="com.firebase:firebase-jobdispatcher-0.8.4" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-messaging-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-location-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-utils-27.0.2" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:gifdecoder-4.5.0" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:annotations:4.5.0@jar" level="project" />
-    <orderEntry type="library" name="com.crashlytics.sdk.android:answers-1.3.8" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-tasks-license-11.8.0" level="project" />
-    <orderEntry type="module" module-name="mobicomkitui" />
-    <orderEntry type="module" module-name="mobicomkit" />
-    <orderEntry type="module" module-name="mobicommons" />
+    <orderEntry type="library" exported="" name="gifdecoder-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-maps-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-messaging-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-messaging-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-common-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-27.1.0" level="project" />
+    <orderEntry type="library" exported="" scope="TEST" name="multidex-instrumentation-1.0.1" level="project" />
+    <orderEntry type="library" exported="" name="fabric-1.3.12" level="project" />
+    <orderEntry type="library" exported="" name="play-services-location-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="design-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="transition-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="beta-1.1.6" level="project" />
+    <orderEntry type="library" exported="" name="livedata-core-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-analytics-impl-9.0.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-common-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="cardview-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="answers-1.3.8" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-tasks-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-base-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-iid-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-basement-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="glide-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="viewmodel-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-base-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-media-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="crashlytics-core-2.3.10" level="project" />
+    <orderEntry type="library" exported="" name="recyclerview-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-core-9.0.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-basement-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-iid-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-location-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="exifinterface-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-maps-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="crashlytics-2.5.7" level="project" />
+    <orderEntry type="library" exported="" name="play-services-tasks-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="circleimageview-2.0.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="multidex-1.0.1" level="project" />
+    <orderEntry type="library" exported="" name="firebase-jobdispatcher-0.8.5" level="project" />
+    <orderEntry type="library" exported="" name="android-image-cropper-2.6.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-analytics-9.0.0" level="project" />
+    <orderEntry type="module" module-name="mobicomkitui" exported="" />
+    <orderEntry type="module" module-name="mobicomkit" exported="" />
+    <orderEntry type="module" module-name="mobicommons" exported="" />
+    <orderEntry type="library" exported="" name="android-android-27" level="project" />
+    <orderEntry type="library" exported="" name="gson-2.8.0" level="project" />
+    <orderEntry type="library" exported="" name="disklrucache-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="annotations-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="org.eclipse.paho.client.mqttv3-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="org.eclipse.paho.android.service-1.1.1" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/app/build.gradle b/app/build.gradle
index c7c8927d..f5d36500 100755
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -56,17 +56,17 @@ android {
 }
 
 dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-     implementation project(':mobicomkitui') //Note: use this for customization
-   //implementation 'com.applozic.communication.uiwidget:mobicomkitui:5.6.7'
-    implementation 'com.android.support:support-v4:27.1.0'
-    implementation 'com.android.support:appcompat-v7:27.1.0'
-    //implementation 'com.facebook.android:facebook-android-sdk:4.1.0'
-    implementation 'com.android.support:design:27.1.0'
-    implementation 'com.android.support:multidex:1.0.2'
-    //implementation 'com.android.support:cardview-v7:22.0'
-    //implementation 'com.android.support:recyclerview-v7:22.0'
-    implementation('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+     compile project(':mobicomkitui') //Note: use this for customization
+   //compile 'com.applozic.communication.uiwidget:mobicomkitui:5.6.7'
+    compile 'com.android.support:support-v4:27.1.0'
+    compile 'com.android.support:appcompat-v7:27.1.0'
+    //compile 'com.facebook.android:facebook-android-sdk:4.1.0'
+    compile 'com.android.support:design:27.1.0'
+    compile 'com.android.support:multidex:1.0.1'
+    //compile 'com.android.support:cardview-v7:22.0'
+    //compile 'com.android.support:recyclerview-v7:22.0'
+    compile('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
         transitive = true;
     }
 }
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 83f03cc7..fb70bd0a 100755
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -34,7 +34,7 @@
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
         android:supportsRtl="true"
-        android:theme="@style/ApplozicTheme">
+        android:theme="@style/FarmRiseTheme">
         <provider
             android:name="android.support.v4.content.FileProvider"
             android:authorities="${applicationId}.provider"
@@ -46,18 +46,18 @@
         </provider>
 
         <activity
-            android:name=".MainActivity"
+            android:name=".HomeActivity"
             android:configChanges="keyboardHidden|orientation|screenSize"
             android:exported="true"
             android:label="@string/ecommerce"
-            android:theme="@style/MobiComAppBaseTheme"/>
+            android:theme="@style/FarmRiseTheme"/>
         <activity
             android:name="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
             android:configChanges="keyboardHidden|screenSize|locale|smallestScreenSize|screenLayout|orientation"
             android:label="@string/app_name"
             android:launchMode="singleTask"
             android:parentActivityName=".MainActivity"
-            android:theme="@style/ApplozicTheme">
+            android:theme="@style/FarmRiseTheme">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value=".MainActivity" />
@@ -68,7 +68,7 @@
             android:configChanges="keyboardHidden|screenSize|smallestScreenSize|screenLayout|orientation"
             android:launchMode="singleTop"
             android:parentActivityName="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
-            android:theme="@style/ApplozicTheme">
+            android:theme="@style/FarmRiseTheme">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity" />
@@ -78,7 +78,7 @@
             android:configChanges="keyboardHidden|screenSize|smallestScreenSize|screenLayout|orientation"
             android:launchMode="singleTop"
             android:parentActivityName="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
-            android:theme="@style/ApplozicTheme">
+            android:theme="@style/FarmRiseTheme">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity" />
@@ -88,7 +88,7 @@
             android:configChanges="keyboardHidden|screenSize|smallestScreenSize|screenLayout|orientation"
             android:launchMode="singleTop"
             android:parentActivityName="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
-            android:theme="@style/ApplozicTheme"
+            android:theme="@style/FarmRiseTheme"
             android:windowSoftInputMode="stateHidden|adjustResize">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
@@ -99,13 +99,13 @@
             android:configChanges="keyboardHidden|screenSize|smallestScreenSize|screenLayout|orientation"
             android:launchMode="singleTop"
             android:parentActivityName="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
-            android:theme="@style/ApplozicTheme"/>
+            android:theme="@style/FarmRiseTheme"/>
         <activity
             android:name="com.applozic.mobicomkit.uiwidgets.conversation.activity.ChannelInfoActivity"
             android:configChanges="keyboardHidden|screenSize|smallestScreenSize|screenLayout|orientation"
             android:launchMode="singleTop"
             android:parentActivityName="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
-            android:theme="@style/ApplozicTheme">
+            android:theme="@style/FarmRiseTheme">
             <meta-data
                 android:name="android.support.PARENT_ACTIVITY"
                 android:value="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity" />
@@ -143,7 +143,7 @@
 
         <meta-data
             android:name="com.applozic.application.key"
-            android:value="@string/application_key" />
+            android:value="climated036533ecf63c100e720270fd3d977c5" />
         <meta-data
             android:name="com.applozic.server.url"
             android:value="@string/default_server_url" />
@@ -251,7 +251,7 @@
             android:configChanges="keyboardHidden|screenSize|smallestScreenSize|screenLayout|orientation"
             android:label="@string/app_name"
             android:parentActivityName="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
-            android:theme="@style/ApplozicTheme"
+            android:theme="@style/FarmRiseTheme"
             android:windowSoftInputMode="adjustResize">
 
             <!-- Parent activity meta-data to support API level 7+ -->
@@ -293,7 +293,7 @@
             android:name="com.applozic.mobicomkit.uiwidgets.conversation.activity.MobicomLocationActivity"
             android:configChanges="keyboardHidden|screenSize|smallestScreenSize|screenLayout|orientation"
             android:parentActivityName="com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity"
-            android:theme="@style/ApplozicTheme"
+            android:theme="@style/FarmRiseTheme"
             android:windowSoftInputMode="adjustResize" />
         <activity
             android:name=".SplashScreenActivity"
diff --git a/app/src/main/assets/applozic-settings.json b/app/src/main/assets/applozic-settings.json
index 48910791..c96b37e2 100644
--- a/app/src/main/assets/applozic-settings.json
+++ b/app/src/main/assets/applozic-settings.json
@@ -1,6 +1,6 @@
 {
   "customMessageBackgroundColor": "#FF03A9F4",
-  "sentMessageBackgroundColor": "#FF03A9F4",
+  "sentMessageBackgroundColor": "#FF2EB363",
   "receivedMessageBackgroundColor": "#FFFFFFFF",
   "sendButtonBackgroundColor": "#FF03A9F4",
   "attachmentIconsBackgroundColor": "#FF03A9F4",
@@ -8,7 +8,7 @@
   "sentContactMessageTextColor:": "#5fba7d",
   "receivedContactMessageTextColor": "#5fba7d",
   "sentMessageTextColor": "#FFFFFFFF",
-  "receivedMessageTextColor": "#000000",
+  "receivedMessageTextColor": "#FF2EB363",
   "messageEditTextTextColor": "#000000",
   "sentMessageLinkTextColor": "#FFFFFFFF",
   "receivedMessageLinkTextColor": "#5fba7d",
@@ -18,8 +18,8 @@
   "conversationDayTextColor": "#333333",
   "messageTimeTextColor": "#838b83",
   "channelCustomMessageTextColor": "#666666",
-  "sentMessageBorderColor": "#FF03A9F4",
-  "receivedMessageBorderColor": "#FFFFFFFF",
+  "sentMessageBorderColor": "#FF2EB363",
+  "receivedMessageBorderColor": "#FF2EB363",
   "channelCustomMessageBorderColor": "#cccccc",
   "collapsingToolbarLayoutColor": "#FF03A9F4",
   "groupParticipantsTextColor": "#FF03A9F4",
@@ -46,7 +46,7 @@
   "startNewGroup": true,
   "imageCompression": false,
   "inviteFriendsInContactActivity": false,
-  "registeredUserContactListCall": false,
+  "registeredUserContactListCall": true,
   "createAnyContact": false,
   "showActionDialWithOutCalling": false,
   "profileLogoutButton": false,
@@ -56,7 +56,7 @@
   "hideGroupNameUpdateButton": false,
   "hideGroupExitButton": false,
   "hideGroupRemoveMemberOption": false,
-  "profileOption": false,
+  "profileOption": true,
   "broadcastOption": true,
   "restrictedWordMessage": " Please don't use restricted word",
   "hideAttachmentButton": false,
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/BottomNavigationViewHelper.java b/app/src/main/java/com/applozic/mobicomkit/sample/BottomNavigationViewHelper.java
new file mode 100644
index 00000000..1762cba2
--- /dev/null
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/BottomNavigationViewHelper.java
@@ -0,0 +1,38 @@
+package com.applozic.mobicomkit.sample;
+
+import android.support.design.internal.BottomNavigationItemView;
+import android.support.design.internal.BottomNavigationMenuView;
+import android.support.design.widget.BottomNavigationView;
+import android.util.Log;
+
+import java.lang.reflect.Field;
+import java.util.logging.Logger;
+
+/**
+ * Helper Class for BottomNavigationViewBar
+ */
+
+public class BottomNavigationViewHelper {
+
+    public static void disableShiftMode(BottomNavigationView view) {
+        BottomNavigationMenuView menuView = (BottomNavigationMenuView) view.getChildAt(0);
+        try {
+            Field shiftingMode = menuView.getClass().getDeclaredField("mShiftingMode");
+            shiftingMode.setAccessible(true);
+            shiftingMode.setBoolean(menuView, false);
+            shiftingMode.setAccessible(false);
+            for (int i = 0; i < menuView.getChildCount(); i++) {
+                BottomNavigationItemView item = (BottomNavigationItemView) menuView.getChildAt(i);
+                //noinspection RestrictedApi
+                item.setShiftingMode(false);
+                // set once again checked value, so view will be updated
+                //noinspection RestrictedApi
+                item.setChecked(item.getItemData().isChecked());
+            }
+        } catch (NoSuchFieldException e) {
+            Log.d("BNVHelper", "Unable to get shift mode field");
+        } catch (IllegalAccessException e) {
+            Log.d("BNVHelper", "Unable to change value of shift mode");
+        }
+    }
+}
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
new file mode 100644
index 00000000..ed585d93
--- /dev/null
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -0,0 +1,460 @@
+package com.applozic.mobicomkit.sample;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.design.widget.BottomNavigationView;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.content.LocalBroadcastManager;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.AppCompatActivity;
+import android.view.MenuItem;
+import android.view.View;
+
+import com.applozic.mobicomkit.Applozic;
+import com.applozic.mobicomkit.ApplozicClient;
+import com.applozic.mobicomkit.api.account.register.RegistrationResponse;
+import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
+import com.applozic.mobicomkit.api.account.user.PushNotificationTask;
+import com.applozic.mobicomkit.api.account.user.User;
+import com.applozic.mobicomkit.api.account.user.UserLoginTask;
+import com.applozic.mobicomkit.api.conversation.ApplozicMqttIntentService;
+import com.applozic.mobicomkit.api.conversation.Message;
+import com.applozic.mobicomkit.api.people.UserIntentService;
+import com.applozic.mobicomkit.broadcast.BroadcastService;
+import com.applozic.mobicomkit.contact.database.ContactDatabase;
+import com.applozic.mobicomkit.uiwidgets.ApplozicSetting;
+import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
+import com.applozic.mobicomkit.uiwidgets.conversation.MessageCommunicator;
+import com.applozic.mobicomkit.uiwidgets.conversation.MobiComKitBroadcastReceiver;
+import com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity;
+import com.applozic.mobicomkit.uiwidgets.conversation.activity.MobiComKitActivityInterface;
+import com.applozic.mobicomkit.uiwidgets.conversation.fragment.ConversationFragment;
+import com.applozic.mobicomkit.uiwidgets.conversation.fragment.MobiComQuickConversationFragment;
+import com.applozic.mobicomkit.uiwidgets.people.fragment.ProfileFragment;
+import com.applozic.mobicommons.commons.core.utils.Utils;
+import com.applozic.mobicommons.people.channel.Channel;
+import com.applozic.mobicommons.people.contact.Contact;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Stack;
+
+/**
+ * Home Activity For Application
+ */
+
+public class HomeActivity extends AppCompatActivity implements MessageCommunicator, MobiComKitActivityInterface {
+
+    private HashMap<String, Stack<Fragment>> mStacks;
+    public static final String TAB_HOME = "tab_home";
+    public static final String TAB_CHAT = "tab_chat";
+    private BottomNavigationView bottomNavigationView;
+    private String currentTab;
+    private static int retry;
+    ConversationUIService conversationUIService;
+    MobiComQuickConversationFragment mobiComQuickConversationFragment;
+    MobiComKitBroadcastReceiver mobiComKitBroadcastReceiver;
+    protected ActionBar mActionBar;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_home);
+        initialize();
+
+        //Manually displaying the first fragment - one time only
+        bottomNavigationView.setSelectedItemId(R.id.action_home);
+        mobiComQuickConversationFragment = new MobiComQuickConversationFragment();
+        conversationUIService = new ConversationUIService(this, mobiComQuickConversationFragment);
+        mobiComKitBroadcastReceiver = new MobiComKitBroadcastReceiver(this, conversationUIService);
+
+        Intent lastSeenStatusIntent = new Intent(this, UserIntentService.class);
+        lastSeenStatusIntent.putExtra(UserIntentService.USER_LAST_SEEN_AT_STATUS, true);
+        startService(lastSeenStatusIntent);
+        mActionBar = getSupportActionBar();
+       // addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
+        //Used to select an item programmatically
+        //bottomNavigationView.getMenu().getItem(2).setChecked(true);
+    }
+
+    private void goToFragment(Fragment selectedFragment) {
+        FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
+        fragmentTransaction.replace(R.id.container, selectedFragment);
+        fragmentTransaction.commit();
+    }
+
+    private void initialize() {
+
+        //Set Up BottomNavigationView
+        bottomNavigationView = (BottomNavigationView) findViewById(R.id.navigation);
+        BottomNavigationViewHelper.disableShiftMode(bottomNavigationView);
+        bottomNavigationView.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
+
+        //Set Up Tab Stacks
+        mStacks = new HashMap<>();
+        mStacks.put(TAB_HOME, new Stack<Fragment>());
+        mStacks.put(TAB_CHAT, new Stack<Fragment>());
+        Applozic.init(this, "climated036533ecf63c100e720270fd3d977c5");
+
+
+    }
+
+    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
+            = new BottomNavigationView.OnNavigationItemSelectedListener() {
+        @Override
+        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+
+            switch (item.getItemId()) {
+
+                case R.id.action_home:
+                    mStacks.get(TAB_HOME).clear();
+                    selectedTab(TAB_HOME);
+                    break;
+                case R.id.action_chat:
+                    mStacks.get(TAB_CHAT).clear();
+                    selectedTab(TAB_CHAT);
+                    break;
+
+            }
+
+            return true;
+
+        }
+    };
+
+    private void selectedTab(String tabId) {
+        currentTab = tabId;
+
+//        if (mStacks.get(tabId).size() == 0) {
+      /*
+       *    First time this tab is selected. So add first fragment of that tab.
+       *    Don't need animation, so that argument is false.
+       *    We are adding a new fragment which is not present in stack. So add to stack is true.
+       */
+        switch (tabId) {
+            case TAB_HOME:
+                pushFragments(tabId, new HomeFragment(), true);
+                break;
+            case TAB_CHAT:
+                if (MobiComUserPreference.getInstance(this).isLoggedIn()) {
+                    pushFragments(tabId, new MobiComQuickConversationFragment(), true);
+                } else {
+                    login();
+                }
+                break;
+        }
+        /*} else {
+      *//*
+       *    We are switching tabs, and target tab is already has atleast one fragment.
+       *    No need of animation, no need of stack pushing. Just show the target fragment
+       *//*
+            pushFragments(tabId, mStacks.get(tabId).lastElement(), false);
+        }*/
+    }
+
+    public void pushFragments(String tag, Fragment fragment, boolean shouldAdd) {
+        if (shouldAdd)
+            mStacks.get(tag).push(fragment);
+        FragmentManager manager = getSupportFragmentManager();
+        FragmentTransaction ft = manager.beginTransaction();
+        ft.replace(R.id.container, fragment);
+        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
+//        ft.addToBackStack(null);
+        ft.commit();
+    }
+
+    public void popFragments() {
+  /*
+   *    Select the second last fragment in current tab's stack..
+   *    which will be shown after the fragment transaction given below
+   */
+        Fragment fragment = mStacks.get(currentTab).elementAt(mStacks.get(currentTab).size() - 2);
+
+  /*pop current fragment from stack.. */
+        mStacks.get(currentTab).pop();
+
+  /* We have the target fragment in hand.. Just show it.. Show a standard navigation animation*/
+        FragmentManager manager = getSupportFragmentManager();
+        FragmentTransaction ft = manager.beginTransaction();
+        ft.replace(R.id.container, fragment);
+        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_CLOSE);
+        ft.commit();
+    }
+
+    @Override
+    public void onBackPressed() {
+
+        if (mStacks.get(currentTab).size() == 1) {
+
+            if (currentTab.equals(TAB_HOME)) {
+                // We are already showing first fragment of current tab, so when back pressed, we will finish this activity..
+                finish();
+                return;
+            } else {
+                bottomNavigationView.setSelectedItemId(R.id.action_home);
+                return;
+            }
+        }
+
+    /* Goto previous fragment in navigation stack of this tab */
+        popFragments();
+    }
+
+    private int id = 0;
+
+    public void setId(int newsId) {
+        this.id = newsId;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    @Override
+    public void onQuickConversationFragmentItemClick(View view, Contact contact, Channel channel, Integer conversationId, String searchString) {
+        Intent intent = new Intent(this, ConversationActivity.class);
+        intent.putExtra(ConversationUIService.CONVERSATION_ID, conversationId);
+        intent.putExtra(ConversationUIService.SEARCH_STRING, searchString);
+        intent.putExtra(ConversationUIService.TAKE_ORDER, true);
+        if (contact != null) {
+            intent.putExtra(ConversationUIService.USER_ID, contact.getUserId());
+            intent.putExtra(ConversationUIService.DISPLAY_NAME, contact.getDisplayName());
+            startActivity(intent);
+        } else if (channel != null) {
+            intent.putExtra(ConversationUIService.GROUP_ID, channel.getKey());
+            intent.putExtra(ConversationUIService.GROUP_NAME, channel.getName());
+            startActivity(intent);
+
+        }
+    }
+
+    @Override
+    public void startContactActivityForResult() {
+        conversationUIService.startContactActivityForResult();
+    }
+
+    @Override
+    public void addFragment(ConversationFragment conversationFragment) {
+
+    }
+
+    @Override
+    public void updateLatestMessage(Message message, String formattedContactNumber) {
+        conversationUIService.updateLatestMessage(message, formattedContactNumber);
+    }
+
+    @Override
+    public void removeConversation(Message message, String formattedContactNumber) {
+        conversationUIService.removeConversation(message, formattedContactNumber);
+    }
+
+    @Override
+    public void showErrorMessageView(String errorMessage) {
+
+    }
+
+    @Override
+    public void retry() {
+        retry++;
+    }
+
+    @Override
+    public int getRetryCount() {
+        return retry;
+    }
+
+
+
+
+
+    /*@Override
+    public void onBackPressed() {
+
+        int count = getFragmentManager().getBackStackEntryCount();
+
+        if (count == 0) {
+            super.onBackPressed();
+            finishAffinity();
+
+            //additional code
+        } else {
+            getFragmentManager().popBackStack();
+        }
+
+    }*/
+    @Override
+    protected void onStop() {
+        super.onStop();
+        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
+        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
+        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
+        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
+        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
+        startService(intent);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
+        Intent subscribeIntent = new Intent(this, ApplozicMqttIntentService.class);
+        subscribeIntent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
+        startService(subscribeIntent);
+
+        if (!Utils.isInternetAvailable(this)) {
+            String errorMessage = getResources().getString(R.string.internet_connection_not_available);
+            showErrorMessageView(errorMessage);
+        }
+    }
+
+    @Override
+    protected void onPause() {
+        LocalBroadcastManager.getInstance(this).unregisterReceiver(mobiComKitBroadcastReceiver);
+        super.onPause();
+    }
+    private void login() {
+        UserLoginTask.TaskListener listener = new UserLoginTask.TaskListener() {
+
+            @Override
+            public void onSuccess(RegistrationResponse registrationResponse, final Context context) {
+                //Basic settings...
+
+                ApplozicClient.getInstance(context).setContextBasedChat(true).setHandleDial(true);
+
+                Map<ApplozicSetting.RequestCode, String> activityCallbacks = new HashMap<ApplozicSetting.RequestCode, String>();
+                activityCallbacks.put(ApplozicSetting.RequestCode.USER_LOOUT, HomeActivity.class.getName());
+                ApplozicSetting.getInstance(context).setActivityCallbacks(activityCallbacks);
+
+                //Set activity callbacks
+                    /*Map<ApplozicSetting.RequestCode, String> activityCallbacks = new HashMap<ApplozicSetting.RequestCode, String>();
+                    activityCallbacks.put(ApplozicSetting.RequestCode.MESSAGE_TAP, MainActivity.class.getName());
+                    ApplozicSetting.getInstance(context).setActivityCallbacks(activityCallbacks);*/
+
+                //Start GCM registration....
+
+                PushNotificationTask.TaskListener pushNotificationTaskListener = new PushNotificationTask.TaskListener() {
+                    @Override
+                    public void onSuccess(RegistrationResponse registrationResponse) {
+
+                    }
+
+                    @Override
+                    public void onFailure(RegistrationResponse registrationResponse, Exception exception) {
+
+                    }
+                };
+                PushNotificationTask pushNotificationTask = new PushNotificationTask(Applozic.getInstance(context).getDeviceRegistrationId(), pushNotificationTaskListener, context);
+                pushNotificationTask.execute((Void) null);
+
+                ApplozicClient.getInstance(context).hideChatListOnNotification();
+                pushFragments(TAB_CHAT, new MobiComQuickConversationFragment(), true);
+            }
+
+            @Override
+            public void onFailure(RegistrationResponse registrationResponse, Exception exception) {
+                AlertDialog alertDialog = new AlertDialog.Builder(getApplicationContext()).create();
+                alertDialog.setTitle("FarmRise");
+                alertDialog.setMessage(exception.toString());
+                alertDialog.setButton(AlertDialog.BUTTON_NEUTRAL, getString(com.applozic.mobicomkit.uiwidgets.R.string.ok_alert),
+                        new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog, int which) {
+                                dialog.dismiss();
+                            }
+                        });
+                if (!isFinishing()) {
+                    alertDialog.show();
+                }
+            }
+        };
+
+        User user = new User();
+        user.setUserId("9148764871");
+        user.setContactNumber("9148764871");
+
+        new UserLoginTask(user, listener, this).execute((Void) null);
+
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        try {
+            if(requestCode == 1011) {
+                Intent intent = new Intent(this, ConversationActivity.class);
+                intent.putExtra(ConversationUIService.CONVERSATION_ID, "");
+                intent.putExtra(ConversationUIService.SEARCH_STRING, "");
+                intent.putExtra(ConversationUIService.TAKE_ORDER, true);
+                String userId = data.getStringExtra(ConversationUIService.USER_ID);
+                Contact contact = new ContactDatabase(this).getContactById(userId);
+
+                if (contact != null) {
+                    intent.putExtra(ConversationUIService.USER_ID, contact.getUserId());
+                    intent.putExtra(ConversationUIService.DISPLAY_NAME, contact.getDisplayName());
+                    startActivity(intent);
+                }
+            }
+          //  conversationUIService.onActivityResult(requestCode, resultCode, data);
+           // handleOnActivityResult(requestCode, data);
+           /* if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {
+                CropImage.ActivityResult result = CropImage.getActivityResult(data);
+                if (resultCode == RESULT_OK) {
+                    if (data == null) {
+                        return;
+                    }
+                    if (imageUri != null) {
+                        imageUri = result.getUri();
+                        if (imageUri != null && profilefragment != null) {
+                            profilefragment.handleProfileimageUpload(true, imageUri, profilePhotoFile);
+                        }
+                    } else {
+                        imageUri = result.getUri();
+                        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
+                        String imageFileName = "JPEG_" + timeStamp + "_" + ".jpeg";
+                        profilePhotoFile = FileClientService.getFilePath(imageFileName, this, "image/jpeg");
+                        if (imageUri != null && profilefragment != null) {
+                            profilefragment.handleProfileimageUpload(true, imageUri, profilePhotoFile);
+                        }
+                    }
+                } else if (resultCode == CropImage.CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE) {
+                    Utils.printLog(this, ConversationActivity.class.getName(), "Cropping failed:" + result.getError());
+                }
+            }
+            if (requestCode == LOCATION_SERVICE_ENABLE) {
+                if (((LocationManager) getSystemService(Context.LOCATION_SERVICE))
+                        .isProviderEnabled(LocationManager.GPS_PROVIDER)) {
+                    googleApiClient.connect();
+                } else {
+                    Toast.makeText(this, com.applozic.mobicomkit.uiwidgets.R.string.unable_to_fetch_location, Toast.LENGTH_LONG).show();
+                }
+                return;
+            }*/
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+    }
+
+    public void handleOnActivityResult(int requestCode, Intent intent) {
+
+        switch (requestCode) {
+
+            case ProfileFragment.REQUEST_CODE_ATTACH_PHOTO:
+                Uri selectedFileUri = (intent == null ? null : intent.getData());
+               /* imageUri = null;
+                beginCrop(selectedFileUri);*/
+                break;
+
+            case ProfileFragment.REQUEST_CODE_TAKE_PHOTO:
+               // beginCrop(imageUri);
+                break;
+
+        }
+    }
+
+}
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeFragment.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeFragment.java
new file mode 100644
index 00000000..21de489b
--- /dev/null
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeFragment.java
@@ -0,0 +1,31 @@
+package com.applozic.mobicomkit.sample;
+
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * Home Screen
+ */
+
+public class HomeFragment extends Fragment {
+
+    public static HomeFragment newInstance() {
+        HomeFragment fragment = new HomeFragment();
+        return fragment;
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.fragment_home, container, false);
+
+
+
+        return view;
+    }
+
+
+}
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/SplashScreenActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/SplashScreenActivity.java
index cca43e41..5d060451 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/SplashScreenActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/SplashScreenActivity.java
@@ -22,7 +22,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public void run() {
                 if (MobiComUserPreference.getInstance(SplashScreenActivity.this).isLoggedIn()) {
-                    Intent mainIntent = new Intent(SplashScreenActivity.this, MainActivity.class);
+                    Intent mainIntent = new Intent(SplashScreenActivity.this, HomeActivity.class);
                     SplashScreenActivity.this.startActivity(mainIntent);
                     SplashScreenActivity.this.finish();
                 } else {
diff --git a/app/src/main/res/drawable/bottom_nav_bg.xml b/app/src/main/res/drawable/bottom_nav_bg.xml
new file mode 100644
index 00000000..8bd0dbd7
--- /dev/null
+++ b/app/src/main/res/drawable/bottom_nav_bg.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@color/nav_item_selected" android:state_checked="true" />
+    <item android:drawable="@color/nav_item_unSelected" android:state_checked="false" />
+</selector>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_home.xml b/app/src/main/res/layout/activity_home.xml
new file mode 100644
index 00000000..75d6f203
--- /dev/null
+++ b/app/src/main/res/layout/activity_home.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/activity_main"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/container"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_above="@+id/navigation"
+        android:animateLayoutChanges="true">
+
+    </FrameLayout>
+
+    <android.support.design.widget.BottomNavigationView
+        android:id="@+id/navigation"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:background="#FF029A43"
+        app:itemBackground="@drawable/bottom_nav_bg"
+        app:itemIconTint="@color/white"
+        app:itemTextColor="@color/white"
+        app:menu="@menu/bottom_navigation_items" />
+</RelativeLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
new file mode 100644
index 00000000..aafc16ad
--- /dev/null
+++ b/app/src/main/res/layout/fragment_home.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="Home Screen"
+        android:textSize="20sp"
+        android:textColor="#000000"
+        android:gravity="center"/>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/bottom_navigation_items.xml b/app/src/main/res/menu/bottom_navigation_items.xml
new file mode 100644
index 00000000..d9db3241
--- /dev/null
+++ b/app/src/main/res/menu/bottom_navigation_items.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_home"
+        android:enabled="true"
+        android:icon="@drawable/mobicom_ic_launcher"
+        android:title="Home"
+        app:showAsAction="withText" />
+
+    <item
+        android:id="@+id/action_chat"
+        android:enabled="true"
+        android:icon="@drawable/mobicom_ic_launcher"
+        android:title="Chat"
+        app:showAsAction="withText" />
+
+</menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
index 1eed0065..1284207f 100755
--- a/app/src/main/res/values/colors.xml
+++ b/app/src/main/res/values/colors.xml
@@ -6,5 +6,7 @@
     <color name="buttonbgcolor">#20B2AA</color>
     <color name="textbuttoncolor">#ffffff</color>
     <color name="white">#fff</color>
+    <color name="nav_item_unSelected">#FF3FB76F</color>
+    <color name="nav_item_selected">#FF48C379</color>
 
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
index 20c8a6dc..dd67239a 100755
--- a/app/src/main/res/values/styles.xml
+++ b/app/src/main/res/values/styles.xml
@@ -10,6 +10,37 @@ Theme.Holo.Light.DarkActionBar
 
     <style name="DemoAppTheme" parent="AppBaseTheme"></style>
 
+    <style name="FarmRiseTheme" parent="Theme.AppCompat.Light.NoActionBar">
+
+        <!--To change the toolbar color change the colorPrimary  -->
+        <item name="colorPrimary">#169947</item>
+
+        <!-- To change the status bar  color change the color of colorPrimaryDark -->
+        <item name="colorPrimaryDark">#3fb76f</item>
+
+        <!-- colorAccent is used as the default value for colorControlActivated which is used to tint widgets -->
+        <item name="colorAccent">#cca531</item>
+
+        <item name="windowActionModeOverlay">true</item>
+
+    </style>
+
+    <style name="NavigationTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+
+        <!--To change the toolbar color change the colorPrimary  -->
+        <item name="colorPrimary">#169947</item>
+
+        <!-- To change the status bar  color change the color of colorPrimaryDark -->
+        <item name="colorPrimaryDark">#3fb76f</item>
+
+        <!-- colorAccent is used as the default value for colorControlActivated which is used to tint widgets -->
+        <item name="colorAccent">#cca531</item>
+
+        <item name="windowActionModeOverlay">true</item>
+
+    </style>
+
+
     <style name="EditText">
         <item name="android:gravity">left</item>
         <item name="android:layout_gravity">center</item>
diff --git a/build.gradle b/build.gradle
index 2caf3bfa..e48eedcf 100755
--- a/build.gradle
+++ b/build.gradle
@@ -9,7 +9,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.0.1'
+        classpath 'com.android.tools.build:gradle:2.3.3'
         classpath 'com.google.gms:google-services:3.1.1'
 
        /* classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
diff --git a/mobicomkit/build.gradle b/mobicomkit/build.gradle
index cdf1d8a1..5a36d190 100755
--- a/mobicomkit/build.gradle
+++ b/mobicomkit/build.gradle
@@ -42,14 +42,14 @@ repositories {
 }
 
 dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-    implementation'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
-    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
-    implementation 'com.android.support:appcompat-v7:27.1.0'
-    implementation 'com.google.code.gson:gson:2.8.0'
-    api 'com.firebase:firebase-jobdispatcher:0.8.5'
-    api project(':mobicommons') //Note: use this for customization
-    //implementation 'com.applozic.mobiframework:mobicommons:5.6.7' //Note: use this in case customization is not required
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
+    compile 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
+    compile 'com.android.support:appcompat-v7:27.1.0'
+    compile 'com.google.code.gson:gson:2.8.0'
+    compile 'com.firebase:firebase-jobdispatcher:0.8.5'
+    compile project(':mobicommons') //Note: use this for customization
+    //compile 'com.applozic.mobiframework:mobicommons:5.6.7' //Note: use this in case customization is not required
 }
 
 
diff --git a/mobicomkit/mobicomkit.iml b/mobicomkit/mobicomkit.iml
index bfc712fd..fe6e8b77 100755
--- a/mobicomkit/mobicomkit.iml
+++ b/mobicomkit/mobicomkit.iml
@@ -23,26 +23,25 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
     <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/test/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
@@ -50,13 +49,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
@@ -71,13 +63,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
@@ -85,41 +70,52 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/attr" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/check-manifest" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="com.android.support:animated-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:common:1.1.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:appcompat-v7-27.1.0" level="project" />
-    <orderEntry type="library" name="com.firebase:firebase-jobdispatcher-0.8.5" level="project" />
-    <orderEntry type="library" name="com.google.code.gson:gson:2.8.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:support-compat-27.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-utils-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.core:common:1.1.0@jar" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:viewmodel-1.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-ui-27.1.0" level="project" />
-    <orderEntry type="library" name="org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:support-annotations:27.1.0@jar" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:livedata-core-1.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-fragment-27.1.0" level="project" />
-    <orderEntry type="library" name="org.eclipse.paho:org.eclipse.paho.android.service:1.1.1@jar" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:runtime-1.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.core:runtime-1.1.0" level="project" />
-    <orderEntry type="module" module-name="mobicommons" />
-    <orderEntry type="library" name="org.apache.http.legacy-android-27" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="gson-2.8.0" level="project" />
+    <orderEntry type="library" exported="" name="livedata-core-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="viewmodel-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="org.eclipse.paho.client.mqttv3-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-jobdispatcher-0.8.5" level="project" />
+    <orderEntry type="library" exported="" name="org.eclipse.paho.android.service-1.1.1" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
+    <orderEntry type="module" module-name="mobicommons" exported="" />
+    <orderEntry type="library" exported="" name="android-android-27" level="project" />
+    <orderEntry type="library" exported="" name="org.apache.http.legacy-android-27" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/mobicomkitui/build.gradle b/mobicomkitui/build.gradle
index 92f9553e..f451aaa0 100755
--- a/mobicomkitui/build.gradle
+++ b/mobicomkitui/build.gradle
@@ -24,21 +24,21 @@ android {
 }
 
 dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-    implementation 'com.android.support:support-v4:27.1.0'
-    implementation 'com.android.support:appcompat-v7:27.1.0'
-    implementation 'com.google.code.gson:gson:2.8.0'
-    //implementation 'com.googlecode.libphonenumber:libphonenumber:7.0.1'
-    api 'com.google.firebase:firebase-messaging:11.8.0'
-    api 'com.google.android.gms:play-services-maps:11.8.0'
-    api 'com.google.android.gms:play-services-location:11.8.0'
-    implementation 'de.hdodenhof:circleimageview:2.0.0'
-    api 'com.android.support:design:27.1.0'
-    implementation 'com.theartofdev.edmodo:android-image-cropper:2.6.0'
-    implementation 'com.github.bumptech.glide:glide:4.5.0'
-    implementation 'com.android.support:cardview-v7:27.1.0'
-    api project(':mobicomkit')//Note: use this for customization
-    //implementation 'com.applozic.communication.message:mobicomkit:5.6.7' //Note: use this in case customization is not required
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile 'com.android.support:support-v4:27.1.0'
+    compile 'com.android.support:appcompat-v7:27.1.0'
+    compile 'com.google.code.gson:gson:2.8.0'
+    //compile 'com.googlecode.libphonenumber:libphonenumber:7.0.1'
+    compile 'com.google.firebase:firebase-messaging:11.8.0'
+    compile 'com.google.android.gms:play-services-maps:11.8.0'
+    compile 'com.google.android.gms:play-services-location:11.8.0'
+    compile 'de.hdodenhof:circleimageview:2.0.0'
+    compile 'com.android.support:design:27.1.0'
+    compile 'com.theartofdev.edmodo:android-image-cropper:2.6.0'
+    compile 'com.github.bumptech.glide:glide:4.5.0'
+    compile 'com.android.support:cardview-v7:27.1.0'
+    compile project(':mobicomkit')//Note: use this for customization
+    //compile 'com.applozic.communication.message:mobicomkit:5.6.7' //Note: use this in case customization is not required
 
 }
 
diff --git a/mobicomkitui/mobicomkitui.iml b/mobicomkitui/mobicomkitui.iml
index 237ad447..180d0823 100755
--- a/mobicomkitui/mobicomkitui.iml
+++ b/mobicomkitui/mobicomkitui.iml
@@ -23,26 +23,25 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
     <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/test/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
@@ -57,13 +56,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/shaders" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
@@ -85,68 +77,74 @@
       <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/attr" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/check-manifest" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="com.android.support:animated-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:appcompat-v7-27.1.0" level="project" />
-    <orderEntry type="library" name="com.google.code.gson:gson:2.8.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:design-27.1.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-iid-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-iid-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.theartofdev.edmodo:android-image-cropper-2.6.0" level="project" />
-    <orderEntry type="library" name="de.hdodenhof:circleimageview-2.0.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-base-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:transition-27.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-utils-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.core:common:1.1.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:support-annotations:27.1.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:recyclerview-v7-27.1.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-basement-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-maps-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:disklrucache:4.5.0@jar" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:glide-4.5.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:runtime-1.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:common:1.1.0@jar" level="project" />
-    <orderEntry type="library" name="com.firebase:firebase-jobdispatcher-0.8.5" level="project" />
-    <orderEntry type="library" name="com.android.support:cardview-v7-27.1.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-maps-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-basement-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-messaging-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-common-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-compat-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:viewmodel-1.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-ui-27.1.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-tasks-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-common-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.firebase:firebase-messaging-11.8.0" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:livedata-core-1.1.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-location-license-11.8.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-location-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:exifinterface-27.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-media-compat-27.1.0" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:gifdecoder-4.5.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-fragment-27.1.0" level="project" />
-    <orderEntry type="library" name="com.github.bumptech.glide:annotations:4.5.0@jar" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-base-11.8.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-v4-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.core:runtime-1.1.0" level="project" />
-    <orderEntry type="library" name="com.google.android.gms:play-services-tasks-license-11.8.0" level="project" />
-    <orderEntry type="module" module-name="mobicomkit" />
-    <orderEntry type="module" module-name="mobicommons" />
+    <orderEntry type="library" exported="" name="gifdecoder-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-tasks-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-base-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-maps-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="gson-2.8.0" level="project" />
+    <orderEntry type="library" exported="" name="disklrucache-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-iid-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-basement-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-messaging-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="glide-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="viewmodel-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-messaging-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-common-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-base-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="annotations-4.5.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-media-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="recyclerview-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-basement-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-iid-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-location-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-location-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="exifinterface-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-maps-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="design-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="transition-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="play-services-tasks-license-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="livedata-core-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="circleimageview-2.0.0" level="project" />
+    <orderEntry type="library" exported="" name="runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-common-11.8.0" level="project" />
+    <orderEntry type="library" exported="" name="cardview-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="firebase-jobdispatcher-0.8.5" level="project" />
+    <orderEntry type="library" exported="" name="android-image-cropper-2.6.0" level="project" />
+    <orderEntry type="module" module-name="mobicomkit" exported="" />
+    <orderEntry type="module" module-name="mobicommons" exported="" />
+    <orderEntry type="library" exported="" name="android-android-27" level="project" />
+    <orderEntry type="library" exported="" name="org.eclipse.paho.client.mqttv3-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="org.eclipse.paho.android.service-1.1.1" level="project" />
   </component>
 </module>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index 25d3ba34..4d691632 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -109,6 +109,8 @@
     private TopicDetail topicDetailsParcelable;
     private Contact contact;
     private NotificationManager notificationManager;
+    MobiComQuickConversationFragment mobiComQuickConversationFragment;
+
 
     public ConversationUIService(FragmentActivity fragmentActivity) {
         this.fragmentActivity = fragmentActivity;
@@ -118,17 +120,31 @@ public ConversationUIService(FragmentActivity fragmentActivity) {
         this.fileClientService = new FileClientService(fragmentActivity);
     }
 
-    public MobiComQuickConversationFragment getQuickConversationFragment() {
 
-        MobiComQuickConversationFragment quickConversationFragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
+    public ConversationUIService(FragmentActivity fragmentActivity,MobiComQuickConversationFragment mobiComQuickConversationFragment) {
+        this.fragmentActivity = fragmentActivity;
+        this.mobiComQuickConversationFragment = mobiComQuickConversationFragment;
+        this.baseContactService = new AppContactService(fragmentActivity);
+        this.notificationManager  = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
+        this.userPreference = MobiComUserPreference.getInstance(fragmentActivity);
+    }
+
+//    public MobiComQuickConversationFragment getQuickConversationFragment() {
+//
+//        MobiComQuickConversationFragment quickConversationFragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
+//
+//        if (quickConversationFragment == null) {
+//            quickConversationFragment = new MobiComQuickConversationFragment();
+//            ConversationActivity.addFragment(fragmentActivity, quickConversationFragment, QUICK_CONVERSATION_FRAGMENT);
+//        }
+//        return quickConversationFragment;
+//    }
 
-        if (quickConversationFragment == null) {
-            quickConversationFragment = new MobiComQuickConversationFragment();
-            ConversationActivity.addFragment(fragmentActivity, quickConversationFragment, QUICK_CONVERSATION_FRAGMENT);
-        }
-        return quickConversationFragment;
+    public MobiComQuickConversationFragment getQuickConversationFragment() {
+        return mobiComQuickConversationFragment;
     }
 
+
     public ConversationFragment getConversationFragment() {
 
         ConversationFragment conversationFragment = (ConversationFragment) UIService.getFragmentByTag(fragmentActivity, CONVERSATION_FRAGMENT);
@@ -410,18 +426,34 @@ public void removeConversation(Message message, String formattedContactNumber) {
         getQuickConversationFragment().removeConversation(message, formattedContactNumber);
     }
 
+//    public void addMessage(Message message) {
+//        if (message.isUpdateMessage()) {
+//            if (!BroadcastService.isQuick()) {
+//                return;
+//            }
+//
+//            MobiComQuickConversationFragment fragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
+//            if (fragment != null) {
+//                if (message.isHidden()) {
+//                    fragment.refreshView();
+//                } else {
+//                    fragment.addMessage(message);
+//                }
+//            }
+//        }
+//    }
+
     public void addMessage(Message message) {
         if (message.isUpdateMessage()) {
             if (!BroadcastService.isQuick()) {
                 return;
             }
 
-            MobiComQuickConversationFragment fragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
-            if (fragment != null) {
-                if (message.isHidden()) {
-                    fragment.refreshView();
-                } else {
-                    fragment.addMessage(message);
+            if (mobiComQuickConversationFragment != null) {
+                if(message.isHidden()){
+                    mobiComQuickConversationFragment.refreshView();
+                }else {
+                    mobiComQuickConversationFragment.addMessage(message);
                 }
             }
         }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
index e79d2918..68fd730c 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
@@ -32,6 +32,12 @@ public MobiComKitBroadcastReceiver(FragmentActivity fragmentActivity) {
         this.baseContactService = new AppContactService(fragmentActivity);
     }
 
+    public MobiComKitBroadcastReceiver(FragmentActivity fragmentActivity,ConversationUIService conversationUIService) {
+        this.conversationUIService = conversationUIService;
+        this.baseContactService = new AppContactService(fragmentActivity);
+    }
+
+
     @Override
     public void onReceive(Context context, Intent intent) {
         String action = intent.getAction();
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index 06c29329..16c50e80 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -114,7 +114,10 @@
 /**
  * Created by devashish on 6/25/2015.
  */
-public class ConversationActivity extends AppCompatActivity implements MessageCommunicator, MobiComKitActivityInterface, GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener, LocationListener, ActivityCompat.OnRequestPermissionsResultCallback, MobicomkitUriListener, SearchView.OnQueryTextListener, OnClickReplyInterface {
+public class ConversationActivity extends AppCompatActivity implements MessageCommunicator, MobiComKitActivityInterface,
+        GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener,
+        LocationListener, ActivityCompat.OnRequestPermissionsResultCallback, MobicomkitUriListener,
+        SearchView.OnQueryTextListener, OnClickReplyInterface {
 
     public static final int LOCATION_SERVICE_ENABLE = 1001;
     public static final String TAKE_ORDER = "takeOrder";
@@ -324,12 +327,14 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         String jsonString = FileUtils.loadSettingsJsonFile(getApplicationContext());
         if (!TextUtils.isEmpty(jsonString)) {
-            alCustomizationSettings = (AlCustomizationSettings) GsonUtils.getObjectFromJson(jsonString, AlCustomizationSettings.class);
+            alCustomizationSettings = (AlCustomizationSettings) GsonUtils.getObjectFromJson(jsonString,
+                    AlCustomizationSettings.class);
         } else {
             alCustomizationSettings = new AlCustomizationSettings();
         }
         if (!TextUtils.isEmpty(alCustomizationSettings.getChatBackgroundImageName())) {
-            resourceId = getResources().getIdentifier(alCustomizationSettings.getChatBackgroundImageName(), "drawable", getPackageName());
+            resourceId = getResources().getIdentifier(alCustomizationSettings.getChatBackgroundImageName(),
+                    "drawable", getPackageName());
         }
         if (resourceId != 0) {
             getWindow().setBackgroundDrawableResource(resourceId);
@@ -380,10 +385,11 @@ protected void onCreate(Bundle savedInstanceState) {
                 }
                 addFragment(this, conversation, ConversationUIService.CONVERSATION_FRAGMENT);
             }
-        } else {
-            setSearchListFragment(quickConversationFragment);
-            addFragment(this, quickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT);
         }
+// else {
+//            setSearchListFragment(quickConversationFragment);
+//            addFragment(this, quickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT);
+//        }
         mobiComKitBroadcastReceiver = new MobiComKitBroadcastReceiver(this);
         InstructionUtil.showInfo(this, R.string.info_message_sync, BroadcastService.INTENT_ACTIONS.INSTRUCTION.toString());
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 78837b5d..58dd6599 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -173,7 +173,8 @@
     protected MobiComConversationService conversationService;
     protected TextView infoBroadcast;
     protected Class messageIntentClass;
-    protected TextView emptyTextView;
+    //protected TextView emptyTextView;
+    private RelativeLayout noConversations;
     protected boolean loadMore = true;
     protected Contact contact;
     protected Channel channel;
@@ -404,8 +405,11 @@ public void onNothingSelected(AdapterView<?> adapterView) {
         spinnerLayout = inflater.inflate(R.layout.mobicom_message_list_header_footer, null);
         infoBroadcast = (TextView) spinnerLayout.findViewById(R.id.info_broadcast);
         spinnerLayout.setVisibility(View.GONE);
-        emptyTextView = (TextView) list.findViewById(R.id.noConversations);
-        emptyTextView.setTextColor(Color.parseColor(alCustomizationSettings.getNoConversationLabelTextColor().trim()));
+        //emptyTextView = (TextView) list.findViewById(R.id.noConversations);
+        //emptyTextView.setTextColor(Color.parseColor(alCustomizationSettings.getNoConversationLabelTextColor().trim()));
+
+        noConversations = (RelativeLayout) list.findViewById(R.id.noConversations);
+
         emoticonsBtn.setOnClickListener(this);
         //listView.addHeaderView(spinnerLayout);
         sentIcon = getResources().getDrawable(R.drawable.applozic_ic_action_message_sent);
@@ -1061,7 +1065,8 @@ public void deleteMessageFromDeviceList(String messageKeyString) {
                     messageList.remove(position);
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                     if (messageList.isEmpty()) {
-                        emptyTextView.setVisibility(VISIBLE);
+                        //emptyTextView.setVisibility(VISIBLE);
+                        noConversations.setVisibility(VISIBLE);
                         ((MobiComKitActivityInterface) getActivity()).removeConversation(message, channel != null ? String.valueOf(channel.getKey()) : contact.getFormattedContactNumber());
                     }
                     break;
@@ -1135,7 +1140,8 @@ public void run() {
                 if (recyclerDetailConversationAdapter != null) {
                     messageList.clear();
                     if (messageList.isEmpty()) {
-                        emptyTextView.setVisibility(View.VISIBLE);
+                        //emptyTextView.setVisibility(View.VISIBLE);
+                        noConversations.setVisibility(View.VISIBLE);
                     }
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                 }
@@ -1196,7 +1202,8 @@ public void run() {
                     linearLayoutManager.setStackFromEnd(true);
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                     linearLayoutManager.scrollToPositionWithOffset(messageList.size() - 1, 0);
-                    emptyTextView.setVisibility(View.GONE);
+                    //emptyTextView.setVisibility(View.GONE);
+                    noConversations.setVisibility(View.GONE);
                     currentConversationId = message.getConversationId();
                     channelKey = message.getGroupId();
                     if (Message.MessageType.MT_INBOX.getValue().equals(message.getType()) && (contact != null || (channel != null && !Channel.GroupType.OPEN.getValue().equals(channel.getType())))) {
@@ -1978,7 +1985,8 @@ public void run() {
                     } else if (!message.isVideoNotificationMessage() && !message.isHidden()) {
                         messageList.add(message);
                         linearLayoutManager.scrollToPositionWithOffset(messageList.size() - 1, 0);
-                        emptyTextView.setVisibility(View.GONE);
+                        //emptyTextView.setVisibility(View.GONE);
+                        noConversations.setVisibility(View.GONE);
                         recyclerDetailConversationAdapter.notifyDataSetChanged();
                     }
                 } catch (Exception ex) {
@@ -3484,7 +3492,8 @@ public DownloadConversation(RecyclerView recyclerView, boolean initial, int firs
         @Override
         protected void onPreExecute() {
             super.onPreExecute();
-            emptyTextView.setVisibility(View.GONE);
+            //emptyTextView.setVisibility(View.GONE);
+            noConversations.setVisibility(View.GONE);
             isAlreadyLoading = true;
             swipeLayout.post(new Runnable() {
                 @Override
@@ -3635,7 +3644,8 @@ public void run() {
             if (initial) {
                 messageList.addAll(nextMessageList);
                 recyclerDetailConversationAdapter.searchString = searchString;
-                emptyTextView.setVisibility(messageList.isEmpty() ? VISIBLE : View.GONE);
+                //emptyTextView.setVisibility(messageList.isEmpty() ? VISIBLE : View.GONE);
+                noConversations.setVisibility(messageList.isEmpty() ? VISIBLE : View.GONE);
 
                 if (!messageList.isEmpty()) {
                     recyclerView.post(new Runnable() {
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index aa1498f8..db0ce68e 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -1,17 +1,21 @@
 package com.applozic.mobicomkit.uiwidgets.conversation.fragment;
 
 import android.content.Context;
+import android.content.Intent;
 import android.graphics.Color;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Process;
+import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
 import android.support.v4.widget.SwipeRefreshLayout;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
@@ -19,6 +23,7 @@
 import android.widget.ImageView;
 import android.widget.LinearLayout;;
 import android.widget.ProgressBar;
+import android.widget.RelativeLayout;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -27,6 +32,7 @@
 import com.applozic.mobicomkit.api.conversation.SyncCallService;
 import com.applozic.mobicomkit.api.conversation.database.MessageDatabaseService;
 import com.applozic.mobicomkit.broadcast.BroadcastService;
+import com.applozic.mobicomkit.channel.database.ChannelDatabaseService;
 import com.applozic.mobicomkit.contact.AppContactService;
 import com.applozic.mobicomkit.contact.BaseContactService;
 import com.applozic.mobicomkit.uiwidgets.AlCustomizationSettings;
@@ -37,15 +43,19 @@
 import com.applozic.mobicomkit.uiwidgets.R;
 import com.applozic.mobicomkit.uiwidgets.conversation.AlLinearLayoutManager;
 import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
+import com.applozic.mobicomkit.uiwidgets.conversation.activity.ChannelCreateActivity;
+import com.applozic.mobicomkit.uiwidgets.conversation.activity.ContactSelectionActivity;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.DividerItemDecoration;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.MobiComKitActivityInterface;
 import com.applozic.mobicomkit.uiwidgets.conversation.activity.RecyclerViewPositionHelper;
 import com.applozic.mobicomkit.uiwidgets.conversation.adapter.QuickConversationAdapter;
+import com.applozic.mobicomkit.uiwidgets.people.activity.MobiComKitPeopleActivity;
 import com.applozic.mobicommons.commons.core.utils.DateUtils;
 import com.applozic.mobicommons.commons.core.utils.Utils;
 import com.applozic.mobicommons.file.FileUtils;
 import com.applozic.mobicommons.json.GsonUtils;
 import com.applozic.mobicommons.people.SearchListFragment;
+import com.applozic.mobicommons.people.channel.Channel;
 import com.applozic.mobicommons.people.contact.Contact;
 
 import java.lang.ref.WeakReference;
@@ -61,8 +71,9 @@
 
     public static final String QUICK_CONVERSATION_EVENT = "quick_conversation";
     protected RecyclerView recyclerView = null;
-    protected ImageButton fabButton;
-    protected TextView emptyTextView;
+    //protected ImageButton fabButton;
+    private RelativeLayout noConversations;
+    //protected TextView emptyTextView;
     protected Button startNewButton;
     protected SwipeRefreshLayout swipeLayout;
     protected int listIndex;
@@ -122,7 +133,7 @@ public void run() {
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         View list = inflater.inflate(R.layout.mobicom_message_list, container, false);
 
@@ -144,9 +155,14 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         recyclerView.addItemDecoration(dividerItemDecoration);
         recyclerView.setAdapter(recyclerAdapter);
         //recyclerView.addItemDecoration(new FooterItemDecoration(getContext(), recyclerView, R.layout.mobicom_message_list_header_footer));
-        toolbar = (Toolbar) getActivity().findViewById(R.id.my_toolbar);
-        toolbar.setClickable(false);
-        fabButton = (ImageButton) list.findViewById(R.id.fab_start_new);
+        toolbar = (Toolbar) list.findViewById(R.id.my_toolbar);
+        //toolbar.setClickable(false);
+
+        AppCompatActivity activity = (AppCompatActivity) getActivity();
+        if (activity != null) {
+            activity.setSupportActionBar(toolbar);
+        }
+        //fabButton = (ImageButton) list.findViewById(R.id.fab_start_new);
         loading = true;
         LinearLayout individualMessageSendLayout = (LinearLayout) list.findViewById(R.id.individual_message_send_layout);
         LinearLayout extendedSendingOptionLayout = (LinearLayout) list.findViewById(R.id.extended_sending_option_layout);
@@ -166,13 +182,33 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             progressBar = view.findViewById(R.id.load_more_progressbar);
         }
 
+
         //spinner = (ProgressBar) spinnerLayout.findViewById(R.id.spinner);
-        emptyTextView = (TextView) list.findViewById(R.id.noConversations);
-        emptyTextView.setTextColor(Color.parseColor(alCustomizationSettings.getNoConversationLabelTextColor().trim()));
+        //emptyTextView = (TextView) list.findViewById(R.id.noConversations);
+        //emptyTextView.setTextColor(Color.parseColor(alCustomizationSettings.getNoConversationLabelTextColor().trim()));
+
+        noConversations = (RelativeLayout) list.findViewById(R.id.noConversations);
+        TextView txt_newChat = (TextView) list.findViewById(R.id.txt_newChat);
+        txt_newChat.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                startActivity(new Intent(getActivity(), MobiComKitPeopleActivity.class));
+            }
+        });
+
+        Button btn_newChat = (Button) list.findViewById(R.id.btn_newChat);
+        btn_newChat.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                startActivity(new Intent(getActivity(), MobiComKitPeopleActivity.class));
+            }
+        });
+
+
 
         //startNewButton = (Button) spinnerLayout.findViewById(R.id.start_new_conversation);
 
-        fabButton.setVisibility(alCustomizationSettings.isStartNewFloatingButton() ? View.VISIBLE : View.GONE);
+        //fabButton.setVisibility(alCustomizationSettings.isStartNewFloatingButton() ? View.VISIBLE : View.GONE);
 
         swipeLayout = (SwipeRefreshLayout) list.findViewById(R.id.swipe_container);
         swipeLayout.setColorScheme(android.R.color.holo_blue_bright,
@@ -197,8 +233,9 @@ public void onClick(View view) {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        super.onCreateOptionsMenu(menu, inflater);
+       // super.onCreateOptionsMenu(menu, inflater);
 
+        toolbar.inflateMenu(R.menu.mobicom_basic_menu_for_normal_message);
 
         if (alCustomizationSettings.isStartNewButton() || ApplozicSetting.getInstance(getContext()).isStartNewButtonVisible()) {
             menu.findItem(R.id.start_new).setVisible(true);
@@ -221,6 +258,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if (alCustomizationSettings.isLogoutOption()) {
             menu.findItem(R.id.logout).setVisible(true);
         }
+        super.onCreateOptionsMenu(menu, inflater);
     }
 
     public void addMessage(final Message message) {
@@ -254,8 +292,10 @@ public void run() {
                 recyclerAdapter.notifyDataSetChanged();
                 //listView.smoothScrollToPosition(messageList.size());
                 //listView.setSelection(0);
-                emptyTextView.setVisibility(View.GONE);
-                emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
+
+                noConversations.setVisibility(View.GONE);
+                //emptyTextView.setVisibility(View.GONE);
+                //emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
                 // startQNewButton.setVisibility(View.GONE);
             }
         });
@@ -407,7 +447,8 @@ public void run() {
 
                     recyclerAdapter.notifyDataSetChanged();
                     if (messageList.isEmpty()) {
-                        emptyTextView.setVisibility(View.VISIBLE);
+//                        emptyTextView.setVisibility(View.VISIBLE);
+                        noConversations.setVisibility(View.VISIBLE);
                     }
                 }
             }
@@ -477,12 +518,17 @@ public void run() {
     public void checkForEmptyConversations() {
         boolean isLodingConversation = (downloadConversation != null && downloadConversation.getStatus() == AsyncTask.Status.RUNNING);
         if (latestMessageForEachContact.isEmpty() && !isLodingConversation) {
-            emptyTextView.setVisibility(View.VISIBLE);
-            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
+            //emptyTextView.setVisibility(View.VISIBLE);
+            //emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
+
+            noConversations.setVisibility(View.VISIBLE);
+
             //startNewButton.setVisibility(applozicSetting.isStartNewButtonVisible() ? View.VISIBLE : View.GONE);
         } else {
-            emptyTextView.setVisibility(View.GONE);
+            //emptyTextView.setVisibility(View.GONE);
             // startNewButton.setVisibility(View.GONE);
+
+            noConversations.setVisibility(View.GONE);
         }
     }
 
@@ -540,7 +586,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         //FlurryAgent.logEvent(QUICK_CONVERSATION_EVENT);
         //listView.setAdapter(conversationAdapter);
         // startNewButton.setOnClickListener(startNewConversation());
-        fabButton.setOnClickListener(startNewConversation());
+        //fabButton.setOnClickListener(startNewConversation());
         recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
 
             @Override
@@ -581,7 +627,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     if (loadMore && !loading && (visibleItemCount + pastVisiblesItems) >= totalItemCount) {
                         DownloadConversation downloadConversation = new DownloadConversation(recyclerView, false, listIndex, visibleItemCount, totalItemCount);
                         downloadConversation.setQuickConversationAdapterWeakReference(recyclerAdapter);
-                        downloadConversation.setTextViewWeakReference(emptyTextView);
+                        downloadConversation.setTextViewWeakReference(noConversations);
                         downloadConversation.setSwipeRefreshLayoutWeakReference(swipeLayout);
                         downloadConversation.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
                         loading = true;
@@ -601,7 +647,7 @@ public void downloadConversations(boolean showInstruction, String searchString)
         minCreatedAtTime = null;
         downloadConversation = new DownloadConversation(recyclerView, true, 1, 0, 0, showInstruction, searchString);
         downloadConversation.setQuickConversationAdapterWeakReference(recyclerAdapter);
-        downloadConversation.setTextViewWeakReference(emptyTextView);
+        downloadConversation.setTextViewWeakReference(noConversations);
         downloadConversation.setSwipeRefreshLayoutWeakReference(swipeLayout);
         downloadConversation.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
         if (recyclerAdapter != null) {
@@ -695,14 +741,14 @@ public boolean onQueryTextChange(String newText) {
         private String searchString;
         private WeakReference<SwipeRefreshLayout> swipeRefreshLayoutWeakReference;
         private WeakReference<QuickConversationAdapter> quickConversationAdapterWeakReference;
-        private WeakReference<TextView> textViewWeakReference;
+        private WeakReference<RelativeLayout> textViewWeakReference;
 
         public void setQuickConversationAdapterWeakReference(QuickConversationAdapter quickConversationAdapterWeakReference) {
             this.quickConversationAdapterWeakReference = new WeakReference<QuickConversationAdapter>(quickConversationAdapterWeakReference);
         }
 
-        public void setTextViewWeakReference(TextView emptyTextViewWeakReference) {
-            this.textViewWeakReference = new WeakReference<TextView>(emptyTextViewWeakReference);
+        public void setTextViewWeakReference(RelativeLayout emptyTextViewWeakReference) {
+            this.textViewWeakReference = new WeakReference<RelativeLayout>(emptyTextViewWeakReference);
         }
 
 
@@ -844,15 +890,18 @@ public void run() {
             }
             if (initial) {
                 if (textViewWeakReference != null) {
-                    TextView emptyTextView = textViewWeakReference.get();
-                    if (emptyTextView != null) {
-                        emptyTextView.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
-                        if (!TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
-                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoSearchFoundForChatMessages()) ? alCustomizationSettings.getNoSearchFoundForChatMessages() : getResources().getString(R.string.search_not_found_for_messages));
-                        } else if (TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
-                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
-                        }
-                    }
+                    //TextView emptyTextView = textViewWeakReference.get();
+                    //if (emptyTextView != null) {
+                        //emptyTextView.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
+
+                        noConversations.setVisibility(messageList.isEmpty() ? View.VISIBLE : View.GONE);
+//
+//                        if (!TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
+//                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoSearchFoundForChatMessages()) ? alCustomizationSettings.getNoSearchFoundForChatMessages() : getResources().getString(R.string.search_not_found_for_messages));
+//                        } else if (TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
+//                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
+//                        }
+                    //}
                 }
                 if (!messageList.isEmpty()) {
                     if (recyclerView != null) {
@@ -892,4 +941,66 @@ protected void onPostExecute(Long aLong) {
             swipeLayout.setRefreshing(false);
         }
     }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle action bar item clicks here. The action bar will
+        // automatically handle clicks on the Home/Up button, so long
+        // as you specify a parent activity in AndroidManifest.xml.
+        int id = item.getItemId();
+        //noinspection SimplifiableIfStatement
+        if (id == R.id.start_new) {
+           /* if (!TextUtils.isEmpty(contactsGroupId)) {
+                if (Utils.isInternetAvailable(getActivity())) {
+                    conversationUIService.startContactActivityForResult();
+                } else {
+                    Intent intent = new Intent(getActivity(), MobiComKitPeopleActivity.class);
+                    ChannelDatabaseService channelDatabaseService = ChannelDatabaseService.getInstance(getActivity());
+                    String[] userIdArray = channelDatabaseService.getChannelMemberByName(contactsGroupId, null);
+                    if (userIdArray != null) {
+                        conversationUIService.startContactActivityForResult(intent, null, null, userIdArray);
+                    }
+                }
+            } else {*/
+                conversationUIService.startContactActivityForResult();
+            //}
+        } else if (id == R.id.conversations) {
+            Intent intent = new Intent(getActivity(), ChannelCreateActivity.class);
+            intent.putExtra(ChannelCreateActivity.GROUP_TYPE, Channel.GroupType.PUBLIC.getValue().intValue());
+            startActivity(intent);
+        } else if (id == R.id.broadcast) {
+            Intent intent = new Intent(getActivity(), ContactSelectionActivity.class);
+            intent.putExtra(ContactSelectionActivity.GROUP_TYPE, Channel.GroupType.BROADCAST.getValue().intValue());
+            startActivity(intent);
+        } else if (id == R.id.refresh) {
+            Toast.makeText(getActivity(), getString(R.string.info_message_sync), Toast.LENGTH_LONG).show();
+            //new ConversationActivity.SyncMessagesAsyncTask(this).execute();
+        } else if (id == R.id.shareOptions) {
+            Intent intent = new Intent(Intent.ACTION_SEND);
+            intent.setAction(Intent.ACTION_SEND)
+                    .setType("text/plain").putExtra(Intent.EXTRA_TEXT, "hi");
+            startActivity(Intent.createChooser(intent, "Share Via"));
+            return super.onOptionsItemSelected(item);
+        } else if (id == R.id.applozicUserProfile) {
+            //profilefragment.setApplozicPermissions(applozicPermission);
+            //addFragment(this, profilefragment, ProfileFragment.ProfileFragmentTag);
+        } /*else if (id == R.id.logout) {
+            try {
+                if (!TextUtils.isEmpty(alCustomizationSettings.getLogoutPackage())) {
+                    Class loginActivity = Class.forName(alCustomizationSettings.getLogoutPackage().trim());
+                    if (loginActivity != null) {
+                        new UserClientService(this).logout();
+                        Toast.makeText(getBaseContext(), getString(R.string.user_logout_info), Toast.LENGTH_SHORT).show();
+                        Intent intent = new Intent(this, loginActivity);
+                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                        startActivity(intent);
+                        finish();
+                    }
+                }
+            } catch (ClassNotFoundException e) {
+                e.printStackTrace();
+            }
+        }*/
+        return false;
+    }
 }
\ No newline at end of file
diff --git a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
index 41ebbd57..d5d1a60c 100644
--- a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
+++ b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
@@ -7,6 +7,14 @@
     android:orientation="vertical"
     android:visibility="visible">
 
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/my_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="?attr/colorPrimary"
+        android:elevation="4dp"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+
     <FrameLayout
         android:id="@+id/contextFrameLayout"
         android:layout_width="match_parent"
@@ -45,29 +53,104 @@
 
         </android.support.v4.widget.SwipeRefreshLayout>
 
-        <TextView
+        <!--<TextView-->
+            <!--android:id="@+id/noConversations"-->
+            <!--android:layout_width="match_parent"-->
+            <!--android:layout_height="match_parent"-->
+            <!--android:layout_centerInParent="true"-->
+            <!--android:layout_gravity="center"-->
+            <!--android:gravity="center"-->
+            <!--android:text="@string/no_conversation"-->
+            <!--android:visibility="gone" />-->
+
+
+        <RelativeLayout
             android:id="@+id/noConversations"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:layout_centerInParent="true"
-            android:layout_gravity="center"
-            android:gravity="center"
-            android:text="@string/no_conversation"
-            android:visibility="gone" />
+            android:visibility="gone">
 
-        <ImageButton
-            android:id="@+id/fab_start_new"
-            android:layout_width="55dp"
-            android:layout_height="55dp"
-            android:layout_alignParentBottom="true"
-            android:layout_alignParentEnd="true"
-            android:layout_alignParentRight="true"
-            android:layout_marginBottom="15dp"
-            android:layout_marginEnd="15dp"
-            android:layout_marginRight="15dp"
-            android:background="@drawable/circle"
-            android:src="@drawable/applozic_ic_action_add"
-            android:visibility="gone" />
+            <TextView
+                android:id="@+id/txt_newChat"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_margin="16dp"
+                android:text="New Chat"
+                android:textColor="#169947"
+                android:gravity="end"
+                android:layout_alignParentTop="true"/>
+
+            <ImageView
+                android:id="@+id/img"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:src="@drawable/mobicom_ic_launcher"
+                android:layout_below="@+id/txt_newChat"
+                android:layout_centerHorizontal="true"
+                android:padding="16dp"
+                android:layout_marginBottom="24dp"/>
+
+
+            <TextView
+                android:id="@+id/startChatting"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:layout_margin="16dp"
+                android:text="Start Chatting with a friend"
+                android:textColor="#000000"
+                android:textSize="20sp"
+                android:layout_below="@+id/img"/>
+
+            <TextView
+                android:id="@+id/textView1"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:layout_marginTop="24dp"
+                android:text="It's always so much fun"
+                android:textColor="#FF666666"
+                android:layout_below="@+id/startChatting"/>
+
+            <TextView
+                android:id="@+id/textView2"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:text="with a friend around"
+                android:textColor="#FF666666"
+                android:layout_below="@+id/textView1"/>
+
+            <Button
+                android:id="@+id/btn_newChat"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentBottom="true"
+                android:layout_centerHorizontal="true"
+                android:layout_margin="16dp"
+                android:textAllCaps="false"
+                android:text="New Chat"
+                android:textColor="#ffffff"
+                android:background="#169947"/>
+
+
+
+
+        </RelativeLayout>
+
+        <!--<ImageButton-->
+            <!--android:id="@+id/fab_start_new"-->
+            <!--android:layout_width="55dp"-->
+            <!--android:layout_height="55dp"-->
+            <!--android:layout_alignParentBottom="true"-->
+            <!--android:layout_alignParentEnd="true"-->
+            <!--android:layout_alignParentRight="true"-->
+            <!--android:layout_marginBottom="15dp"-->
+            <!--android:layout_marginEnd="15dp"-->
+            <!--android:layout_marginRight="15dp"-->
+            <!--android:background="@drawable/circle"-->
+            <!--android:src="@drawable/applozic_ic_action_add"-->
+            <!--android:visibility="gone" />-->
 
     </RelativeLayout>
 
diff --git a/mobicomkitui/src/main/res/layout/noconversations.xml b/mobicomkitui/src/main/res/layout/noconversations.xml
new file mode 100644
index 00000000..05db4a4a
--- /dev/null
+++ b/mobicomkitui/src/main/res/layout/noconversations.xml
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/txt_newChat"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="16dp"
+        android:text="New Chat"
+        android:textColor="#169947"
+        android:gravity="end"
+        android:layout_alignParentTop="true"/>
+
+    <ImageView
+        android:id="@+id/img"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:src="@drawable/mobicom_ic_launcher"
+        android:layout_below="@+id/txt_newChat"
+        android:layout_centerHorizontal="true"
+        android:padding="16dp"
+        android:layout_marginBottom="24dp"/>
+
+
+    <TextView
+        android:id="@+id/startChatting"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:layout_margin="16dp"
+        android:text="Start Chatting with a friend"
+        android:textColor="#000000"
+        android:textSize="20sp"
+        android:layout_below="@+id/img"/>
+
+    <TextView
+        android:id="@+id/textView1"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:layout_marginTop="24dp"
+        android:text="It's always so much fun"
+        android:textColor="#FF666666"
+        android:layout_below="@+id/startChatting"/>
+
+    <TextView
+        android:id="@+id/textView2"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:text="with a friend around"
+        android:textColor="#FF666666"
+        android:layout_below="@+id/textView1"/>
+
+    <Button
+        android:id="@+id/btn_newChat"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_margin="16dp"
+        android:textAllCaps="false"
+        android:text="New Chat"
+        android:textColor="#ffffff"
+        android:background="#169947"/>
+
+
+
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/res/layout/quickconversion_activity.xml b/mobicomkitui/src/main/res/layout/quickconversion_activity.xml
index 6df3459d..794929f8 100644
--- a/mobicomkitui/src/main/res/layout/quickconversion_activity.xml
+++ b/mobicomkitui/src/main/res/layout/quickconversion_activity.xml
@@ -29,6 +29,6 @@
         android:layout_height="wrap_content"
         android:layout_gravity="top"
         android:orientation="vertical"
-        android:visibility="gone"></LinearLayout>
+        android:visibility="gone"/>
 
 </LinearLayout>
\ No newline at end of file
diff --git a/mobicommons/build.gradle b/mobicommons/build.gradle
index 3ffb3600..afb22717 100755
--- a/mobicommons/build.gradle
+++ b/mobicommons/build.gradle
@@ -24,9 +24,9 @@ android {
 }
 
 dependencies {
-    implementation fileTree(dir: 'libs', include: ['*.jar'])
-    implementation 'com.android.support:appcompat-v7:27.1.0'
-    implementation 'com.google.code.gson:gson:2.8.0'
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile 'com.android.support:appcompat-v7:27.1.0'
+    compile 'com.google.code.gson:gson:2.8.0'
     //implementation 'com.googlecode.libphonenumber:libphonenumber:7.0.1'
 }
 
diff --git a/mobicommons/mobicommons.iml b/mobicommons/mobicommons.iml
index cf2299f7..1abfdd8d 100755
--- a/mobicommons/mobicommons.iml
+++ b/mobicommons/mobicommons.iml
@@ -23,26 +23,25 @@
       </configuration>
     </facet>
   </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
     <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/androidTest/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/apt/test/debug" isTestSource="true" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
@@ -50,13 +49,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
@@ -71,13 +63,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
@@ -85,36 +70,47 @@
       <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/attr" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/check-manifest" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="com.android.support:animated-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:common:1.1.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:appcompat-v7-27.1.0" level="project" />
-    <orderEntry type="library" name="com.google.code.gson:gson:2.8.0@jar" level="project" />
-    <orderEntry type="library" name="com.android.support:support-compat-27.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-utils-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.core:common:1.1.0@jar" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:viewmodel-1.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-core-ui-27.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-annotations:27.1.0@jar" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:livedata-core-1.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-fragment-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.lifecycle:runtime-1.1.0" level="project" />
-    <orderEntry type="library" name="com.android.support:support-vector-drawable-27.1.0" level="project" />
-    <orderEntry type="library" name="android.arch.core:runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="gson-2.8.0" level="project" />
+    <orderEntry type="library" exported="" name="livedata-core-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_runtime-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-utils-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="viewmodel-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-core-ui-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="1_common-1.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-compat-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-fragment-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="animated-vector-drawable-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-27.1.0" level="project" />
+    <orderEntry type="library" exported="" name="android-android-27" level="project" />
   </component>
 </module>
\ No newline at end of file
