diff --git a/app/app.iml b/app/app.iml
index 129f21c8..f8071a79 100755
--- a/app/app.iml
+++ b/app/app.iml
@@ -80,28 +80,14 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/builds" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-classes" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-resources" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-support" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/multi-dex" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/reload-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/restart-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/split-apk" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
diff --git a/app/src/main/assets/applozic-settings.json b/app/src/main/assets/applozic-settings.json
index 2407b91a..990b212a 100644
--- a/app/src/main/assets/applozic-settings.json
+++ b/app/src/main/assets/applozic-settings.json
@@ -46,7 +46,7 @@
   "startNewGroup": true,
   "imageCompression": true,
   "inviteFriendsInContactActivity": true,
-  "registeredUserContactListCall": false,
+  "registeredUserContactListCall": true,
   "createAnyContact": false,
   "showActionDialWithOutCalling": false,
   "profileLogoutButton": false,
diff --git a/mobicomkit/mobicomkit.iml b/mobicomkit/mobicomkit.iml
index 03339729..295fe7d5 100755
--- a/mobicomkit/mobicomkit.iml
+++ b/mobicomkit/mobicomkit.iml
@@ -77,22 +77,16 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
diff --git a/mobicomkitui/mobicomkitui.iml b/mobicomkitui/mobicomkitui.iml
index 6fa826ad..fd8e0d55 100755
--- a/mobicomkitui/mobicomkitui.iml
+++ b/mobicomkitui/mobicomkitui.iml
@@ -77,22 +77,16 @@
       <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java
index a1381c31..ba1ff168 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java
@@ -25,6 +25,7 @@
 import android.widget.TextView;
 
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
+import com.applozic.mobicomkit.api.attachment.FileMeta;
 import com.applozic.mobicomkit.api.conversation.Message;
 import com.applozic.mobicomkit.api.conversation.database.MessageDatabaseService;
 import com.applozic.mobicomkit.api.notification.VideoCallNotificationHelper;
@@ -44,10 +45,12 @@
 import com.applozic.mobicommons.commons.image.ImageUtils;
 import com.applozic.mobicommons.emoticon.EmojiconHandler;
 import com.applozic.mobicommons.emoticon.EmoticonUtils;
+import com.applozic.mobicommons.file.FileUtils;
 import com.applozic.mobicommons.people.channel.Channel;
 import com.applozic.mobicommons.people.channel.ChannelUtils;
 import com.applozic.mobicommons.people.contact.Contact;
 
+import java.io.File;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
@@ -93,10 +96,6 @@
     private View view;
     private ConversationUIService conversationUIService;
 
-    public void setAlCustomizationSettings(AlCustomizationSettings alCustomizationSettings) {
-        this.alCustomizationSettings = alCustomizationSettings;
-    }
-
     public QuickConversationAdapter(final Context context, List<Message> messageList, EmojiconHandler emojiconHandler) {
         this.context = context;
         this.emojiconHandler = emojiconHandler;
@@ -125,6 +124,11 @@ protected Bitmap processBitmap(Object data) {
         highlightTextSpan = new TextAppearanceSpan(context, R.style.searchTextHiglight);
     }
 
+    public void setAlCustomizationSettings(AlCustomizationSettings alCustomizationSettings) {
+        this.alCustomizationSettings = alCustomizationSettings;
+    }
+
+    @NonNull
     @Override
     public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
@@ -139,7 +143,7 @@ protected Bitmap processBitmap(Object data) {
     }
 
     @Override
-    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         if (getItemViewType(position) == 2) {
             FooterViewHolder myHolder = (FooterViewHolder) holder;
             //myHolder.loadMoreProgressBar.setVisibility(View.GONE);
@@ -217,15 +221,30 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 }
                 if (message.isVideoCallMessage()) {
                     createVideoCallView(message, myholder.attachmentIcon, myholder.messageTextView);
-                } else if (message.hasAttachment() && myholder.attachmentIcon != null && !(message.getContentType() == Message.ContentType.TEXT_URL.getValue())) {
+                } else if (message.hasAttachment() && myholder.attachmentIcon != null &&
+                        !(message.getContentType() == Message.ContentType.TEXT_URL.getValue())) {
                     //Todo: handle it for fileKeyStrings when filePaths is empty
                     String filePath = message.getFileMetas() == null && message.getFilePaths() != null
                             ? message.getFilePaths().get(0).substring(message.getFilePaths().get(0).lastIndexOf("/") + 1) :
                             message.getFileMetas() != null ? message.getFileMetas().getName() : "";
-                    myholder.attachmentIcon.setVisibility(View.VISIBLE);
+                   /* myholder.attachmentIcon.setVisibility(View.VISIBLE);
                     myholder.attachmentIcon.setImageResource(R.drawable.applozic_ic_action_attachment);
-                    myholder.messageTextView.setText(filePath);
-                } else if (myholder.attachmentIcon != null && message.getContentType() == Message.ContentType.LOCATION.getValue()) {
+                    myholder.messageTextView.setText(filePath);*/
+
+                    if (message.getFileMetas() == null && message.getFilePaths() != null) {
+                        String mimType = FileUtils.getMimeType(new File(message.getFilePaths().get(0)));
+                        setUpAttachmentMessage(message.getMessage(), mimType, myholder.messageTextView,
+                                myholder.attachmentIcon);
+                    } else {
+                        FileMeta fileMeta = message.getFileMetas();
+                        if (fileMeta != null) {
+                            setUpAttachmentMessage(message.getMessage(), fileMeta.getContentType(),
+                                    myholder.messageTextView, myholder.attachmentIcon);
+                        }
+                    }
+
+                } else if (myholder.attachmentIcon != null && message.getContentType()
+                        == Message.ContentType.LOCATION.getValue()) {
                     myholder.attachmentIcon.setVisibility(View.VISIBLE);
                     myholder.attachmentIcon.setImageResource(R.drawable.mobicom_notification_location_icon);
                     myholder.messageTextView.setText(context.getString(R.string.Location));
@@ -234,10 +253,11 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 } else if (message.getContentType() == Message.ContentType.TEXT_HTML.getValue()) {
                     myholder.messageTextView.setText(Html.fromHtml(message.getMessage()));
                 } else {
-                    String messageSubString = (!TextUtils.isEmpty(message.getMessage()) ? message.getMessage().substring(0, Math.min(message.getMessage().length(), 50)) : "");
-                    myholder.messageTextView.setText(EmoticonUtils.getSmiledText(context, messageSubString, emojiconHandler));
+                    String messageSubString = (!TextUtils.isEmpty(message.getMessage()) ?
+                            message.getMessage().substring(0, Math.min(message.getMessage().length(), 50)) : "");
+                    myholder.messageTextView.setText(EmoticonUtils.getSmiledText(context, messageSubString,
+                            emojiconHandler));
                 }
-
                 if (myholder.sentOrReceived != null) {
                     if (message.isCall()) {
                         myholder.sentOrReceived.setImageResource(R.drawable.applozic_ic_action_call_holo_light);
@@ -404,8 +424,85 @@ private void processContactImage(Contact contact, TextView textView, TextView al
         }
     }
 
+    public void setUpAttachmentMessage(String message, String mimType, TextView messageTextView, ImageView attachmentIcon) {
+        if (!TextUtils.isEmpty(mimType)) {
+            if (mimType.startsWith("image")) {
+                attachmentIcon.setVisibility(View.VISIBLE);
+                attachmentIcon.setImageResource(R.drawable.applozic_ic_action_camera);
+                if (TextUtils.isEmpty(message)) {
+                    messageTextView.setText("Photo");
+                } else {
+                    messageTextView.setText(message);
+                }
+            } else if (mimType.startsWith("video")) {
+                attachmentIcon.setVisibility(View.VISIBLE);
+                attachmentIcon.setImageResource(R.drawable.applozic_ic_action_video);
+                if (TextUtils.isEmpty(message)) {
+                    messageTextView.setText("Video");
+                } else {
+                    messageTextView.setText(message);
+                }
+            } else if (mimType.startsWith("audio")) {
+                attachmentIcon.setVisibility(View.VISIBLE);
+                attachmentIcon.setImageResource(R.drawable.applozic_ic_action_audio);
+                if (TextUtils.isEmpty(message)) {
+                    messageTextView.setText("Audio");
+                } else {
+                    messageTextView.setText(message);
+                }
+            } else if (mimType.contains("text/x-vcard")) {
+                attachmentIcon.setVisibility(View.VISIBLE);
+                attachmentIcon.setImageResource(R.drawable.applozic_ic_action_contact);
+                messageTextView.setText("Contact");
+            } /*else if (mimType.contains("location")){
+                attachmentIcon.setVisibility(View.VISIBLE);
+                attachmentIcon.setImageResource(R.drawable.mobicom_notification_location_icon);
+                messageTextView.setText(context.getString(R.string.Location));
+
+            }*/ else {
+                attachmentIcon.setVisibility(View.VISIBLE);
+                attachmentIcon.setImageResource(R.drawable.applozic_ic_action_attachment);
+                messageTextView.setText("Attachment");
+            }
+        }
+    }
+
     public class Myholder extends RecyclerView.ViewHolder implements View.OnClickListener, View.OnCreateContextMenuListener {
 
+        final ImageView attachmentIcon;
+        private final MenuItem.OnMenuItemClickListener onEditMenu = new MenuItem.OnMenuItemClickListener() {
+            @Override
+            public boolean onMenuItemClick(MenuItem item) {
+                Message message = messageList.get(getLayoutPosition());
+
+                Channel channel = null;
+                Contact contact = null;
+                if (message.getGroupId() != null) {
+                    channel = ChannelDatabaseService.getInstance(context).getChannelByChannelKey(message.getGroupId());
+                } else {
+                    contact = contactService.getContactById(message.getContactIds());
+                }
+
+                switch (item.getItemId()) {
+                    case 0:
+                        if (channel != null && channel.isDeleted()) {
+                            conversationUIService.deleteGroupConversation(channel);
+                        } else {
+                            conversationUIService.deleteConversationThread(contact, channel);
+                        }
+                        break;
+                    case 1:
+                        conversationUIService.deleteGroupConversation(channel);
+                        break;
+                    case 2:
+                        conversationUIService.channelLeaveProcess(channel);
+                        break;
+                    default:
+                        //return onMenuItemClick(item);
+                }
+                return true;
+            }
+        };
         TextView smReceivers;
         TextView createdAtTime;
         TextView messageTextView;
@@ -414,7 +511,6 @@ private void processContactImage(Contact contact, TextView textView, TextView al
         TextView onlineTextView;
         ImageView sentOrReceived;
         TextView attachedFile;
-        final ImageView attachmentIcon;
         TextView unReadCountTextView;
         TextView smTime;
 
@@ -478,20 +574,17 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
 
                 if ((message.getGroupId() == null ||
                         (channel != null &&
-                        Channel.GroupType.GROUPOFTWO.getValue().equals(channel.getType())))
-                        && (menuItems[i].equals(context.getResources().getString(R.string.delete_group))
-                        || menuItems[i].equals(context.getResources().getString(R.string.exit_group)))) {
+                                Channel.GroupType.GROUPOFTWO.getValue().equals(channel.getType()))) &&
+                        (menuItems[i].equals(context.getResources().getString(R.string.delete_group)) ||
+                                menuItems[i].equals(context.getResources().getString(R.string.exit_group)))) {
                     continue;
                 }
 
-                if (menuItems[i].equals(context.getResources().getString(R.string.exit_group)) && (isChannelDeleted ||
-                        !isUserPresentInGroup)) {
+                if (menuItems[i].equals(context.getResources().getString(R.string.exit_group)) && (isChannelDeleted || !isUserPresentInGroup)) {
                     continue;
                 }
 
-                if (menuItems[i].equals(context.getResources().getString(R.string.delete_group)) &&
-                        (isUserPresentInGroup || !isChannelDeleted)) {
-
+                if (menuItems[i].equals(context.getResources().getString(R.string.delete_group)) && (isUserPresentInGroup || !isChannelDeleted)) {
                     continue;
                 }
                 if (menuItems[i].equals(context.getResources().getString(R.string.delete_conversation)) && !alCustomizationSettings.isDeleteOption()) {
@@ -503,40 +596,6 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
             }
         }
 
-        private final MenuItem.OnMenuItemClickListener onEditMenu = new MenuItem.OnMenuItemClickListener() {
-            @Override
-            public boolean onMenuItemClick(MenuItem item) {
-                Message message = messageList.get(getLayoutPosition());
-
-                Channel channel = null;
-                Contact contact = null;
-                if (message.getGroupId() != null) {
-                    channel = ChannelDatabaseService.getInstance(context).getChannelByChannelKey(message.getGroupId());
-                } else {
-                    contact = contactService.getContactById(message.getContactIds());
-                }
-
-                switch (item.getItemId()) {
-                    case 0:
-                        if (channel != null && channel.isDeleted()) {
-                            conversationUIService.deleteGroupConversation(channel);
-                        } else {
-                            conversationUIService.deleteConversationThread(contact, channel);
-                        }
-                        break;
-                    case 1:
-                        conversationUIService.deleteGroupConversation(channel);
-                        break;
-                    case 2:
-                        conversationUIService.channelLeaveProcess(channel);
-                        break;
-                    default:
-                        //return onMenuItemClick(item);
-                }
-                return true;
-            }
-        };
-
     }
 
     public class FooterViewHolder extends RecyclerView.ViewHolder {
@@ -548,6 +607,7 @@ public FooterViewHolder(View itemView) {
             infoBroadCast = (TextView) itemView.findViewById(R.id.info_broadcast);
             loadMoreProgressBar = (ProgressBar) itemView.findViewById(R.id.load_more_progressbar);
         }
+
     }
 
 }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java
index 6868e6c4..fe5934bb 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/ContactSelectionFragment.java
@@ -396,7 +396,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         btn_invite.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Toast.makeText(getActivity(), "Invite", Toast.LENGTH_LONG).show();
+                Toast.makeText(getActivity(), "Invite contatcs", Toast.LENGTH_LONG).show();
             }
         });
 
diff --git a/mobicomkitui/src/main/res/drawable/applozic_ic_action_audio.xml b/mobicomkitui/src/main/res/drawable/applozic_ic_action_audio.xml
new file mode 100644
index 00000000..d29cee58
--- /dev/null
+++ b/mobicomkitui/src/main/res/drawable/applozic_ic_action_audio.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12,14c1.66,0 2.99,-1.34 2.99,-3L15,5c0,-1.66 -1.34,-3 -3,-3S9,3.34 9,5v6c0,1.66 1.34,3 3,3zM17.3,11c0,3 -2.54,5.1 -5.3,5.1S6.7,14 6.7,11L5,11c0,3.41 2.72,6.23 6,6.72L11,21h2v-3.28c3.28,-0.48 6,-3.3 6,-6.72h-1.7z" />
+</vector>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/res/drawable/applozic_ic_action_contact.xml b/mobicomkitui/src/main/res/drawable/applozic_ic_action_contact.xml
new file mode 100644
index 00000000..08a41e03
--- /dev/null
+++ b/mobicomkitui/src/main/res/drawable/applozic_ic_action_contact.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12,12c2.21,0 4,-1.79 4,-4s-1.79,-4 -4,-4 -4,1.79 -4,4 1.79,4 4,4zM12,14c-2.67,0 -8,1.34 -8,4v2h16v-2c0,-2.66 -5.33,-4 -8,-4z" />
+</vector>
\ No newline at end of file
diff --git a/mobicommons/mobicommons.iml b/mobicommons/mobicommons.iml
index e6217844..ac08476a 100755
--- a/mobicommons/mobicommons.iml
+++ b/mobicommons/mobicommons.iml
@@ -77,22 +77,16 @@
       <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/annotations" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
     <orderEntry type="jdk" jdkName="Android API 27 Platform" jdkType="Android SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
