diff --git a/app/app.iml b/app/app.iml
index 790f720f..619d5e99 100755
--- a/app/app.iml
+++ b/app/app.iml
@@ -82,13 +82,21 @@
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-resources" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-support" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/multi-dex" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/reload-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/restart-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/split-apk" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
index 70b61f85..e536ef42 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
@@ -18,11 +18,13 @@
 import android.os.Bundle;
 import android.support.design.widget.CollapsingToolbarLayout;
 import android.support.v4.content.LocalBroadcastManager;
+import android.support.v4.widget.NestedScrollView;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.util.DisplayMetrics;
+import android.util.Log;
 import android.util.TypedValue;
 import android.view.ContextMenu;
 import android.view.Gravity;
@@ -36,6 +38,7 @@
 import android.widget.BaseAdapter;
 import android.widget.Button;
 import android.widget.ImageView;
+import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
@@ -58,6 +61,7 @@
 import com.applozic.mobicomkit.feed.RegisteredUsersApiResponse;
 import com.applozic.mobicomkit.uiwidgets.AlCustomizationSettings;
 import com.applozic.mobicomkit.uiwidgets.ApplozicSetting;
+import com.applozic.mobicomkit.uiwidgets.CustomTextViewRegular;
 import com.applozic.mobicomkit.uiwidgets.R;
 import com.applozic.mobicomkit.uiwidgets.alphanumbericcolor.AlphaNumberColorUtil;
 import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
@@ -103,15 +107,20 @@
     AlCustomizationSettings alCustomizationSettings;
     ConnectivityReceiver connectivityReceiver;
     private ActionBar mActionBar;
-    private ImageLoader contactImageLoader, channelImageLoader;
+    private ImageLoader contactImageLoader;
     private List<ChannelUserMapper> channelUserMapperList;
     private Channel channel;
     private ImageView channelImage;
-    private TextView createdBy, groupParticipantsTexView;
-    private Button exitChannelButton, deleteChannelButton;
-    private RelativeLayout channelDeleteRelativeLayout, channelExitRelativeLayout;
-    private Integer channelKey;
+    private CustomTextViewRegular groupParticipantsTexView;
     private RefreshBroadcast refreshBroadcast;
+    private NestedScrollView nestedScrollView;
+
+    static IntentFilter getIntentFilter() {
+        IntentFilter intentFilter = new IntentFilter();
+        intentFilter.addAction(BroadcastService.INTENT_ACTIONS.UPDATE_GROUP_INFO.toString());
+        intentFilter.addAction(BroadcastService.INTENT_ACTIONS.UPDATE_USER_DETAIL.toString());
+        return intentFilter;
+    }
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -127,31 +136,42 @@ protected void onCreate(Bundle savedInstanceState) {
         }
         refreshBroadcast = new RefreshBroadcast();
         baseContactService = new AppContactService(getApplicationContext());
-        channelImage = (ImageView) findViewById(R.id.channelImage);
+        channelImage = findViewById(R.id.channelImage);
         userPreference = MobiComUserPreference.getInstance(this);
-        createdBy = (TextView) findViewById(R.id.created_by);
-        groupParticipantsTexView = (TextView) findViewById(R.id.groupParticipantsTexView);
-        exitChannelButton = (Button) findViewById(R.id.exit_channel);
-        //exitChannelButton.setTypeface(Typeface.createFromAsset(getAssets(), "fonts/NotoSans-Regular.ttf"));
-        deleteChannelButton = (Button) findViewById(R.id.delete_channel_button);
-        channelDeleteRelativeLayout = (RelativeLayout) findViewById(R.id.channel_delete_relativeLayout);
-        channelExitRelativeLayout = (RelativeLayout) findViewById(R.id.channel_exit_relativeLayout);
-        collapsingToolbarLayout = (CollapsingToolbarLayout) findViewById(R.id.toolbar_layout);
+        CustomTextViewRegular createdBy = findViewById(R.id.created_by);
+        groupParticipantsTexView = findViewById(R.id.groupParticipantsTexView);
+        Button exitChannelButton = findViewById(R.id.exit_channel);
+        exitChannelButton.setTypeface(Typeface.createFromAsset(getAssets(), "fonts/NotoSans-Regular.ttf"));
+        Button deleteChannelButton = findViewById(R.id.delete_channel_button);
+        deleteChannelButton.setTypeface(Typeface.createFromAsset(getAssets(), "fonts/NotoSans-Regular.ttf"));
+        RelativeLayout channelDeleteRelativeLayout = findViewById(R.id.channel_delete_relativeLayout);
+        RelativeLayout channelExitRelativeLayout = findViewById(R.id.channel_exit_relativeLayout);
+        collapsingToolbarLayout = findViewById(R.id.toolbar_layout);
+        nestedScrollView = findViewById(R.id.nestedScrollView);
+
         collapsingToolbarLayout.setContentScrimColor(Color.parseColor(alCustomizationSettings.getCollapsingToolbarLayoutColor()));
         groupParticipantsTexView.setTextColor(Color.parseColor(alCustomizationSettings.getGroupParticipantsTextColor()));
-        deleteChannelButton.setBackgroundColor(Color.parseColor((alCustomizationSettings.getGroupDeleteButtonBackgroundColor())));
+        //deleteChannelButton.setBackgroundColor(Color.parseColor((alCustomizationSettings.getGroupDeleteButtonBackgroundColor())));
         //exitChannelButton.setBackgroundColor(Color.parseColor(alCustomizationSettings.getGroupExitButtonBackgroundColor()));
 
         mActionBar = getSupportActionBar();
         mActionBar.setDisplayHomeAsUpEnabled(true);
         mActionBar.setHomeButtonEnabled(true);
         mActionBar.setDisplayShowHomeEnabled(true);
-        mainListView = (ListView) findViewById(R.id.mainList);
+        mainListView = findViewById(R.id.mainList);
         mainListView.setLongClickable(true);
         mainListView.setSmoothScrollbarEnabled(true);
         if (Utils.hasLollipop()) {
             mainListView.setNestedScrollingEnabled(true);
         }
+
+        nestedScrollView.post(new Runnable() {
+            @Override
+            public void run() {
+                nestedScrollView.scrollTo(nestedScrollView.getLeft(), groupParticipantsTexView.getTop());
+            }
+        });
+
         connectivityReceiver = new ConnectivityReceiver();
         mobiComKitBroadcastReceiver = new MobiComKitBroadcastReceiver(this);
 
@@ -161,7 +181,7 @@ protected void onCreate(Bundle savedInstanceState) {
             channelExitRelativeLayout.setVisibility(View.GONE);
         }
         if (getIntent().getExtras() != null) {
-            channelKey = getIntent().getIntExtra(CHANNEL_KEY, 0);
+            Integer channelKey = getIntent().getIntExtra(CHANNEL_KEY, 0);
             channel = ChannelService.getInstance(this).getChannelByChannelKey(channelKey);
             isUserPresent = ChannelService.getInstance(this).processIsUserPresentInChannel(channelKey);
             if (channel != null) {
@@ -201,7 +221,7 @@ protected Bitmap processBitmap(Object data) {
         contactImageLoader.setLoadingImage(R.drawable.applozic_ic_contact_picture_holo_light);
         contactImageLoader.addImageCache(this.getSupportFragmentManager(), 0.1f);
         contactImageLoader.setImageFadeIn(false);
-        channelImageLoader = new ImageLoader(getApplicationContext(), getListPreferredItemHeight()) {
+        ImageLoader channelImageLoader = new ImageLoader(getApplicationContext(), getListPreferredItemHeight()) {
             @Override
             protected Bitmap processBitmap(Object data) {
                 return baseContactService.downloadGroupImage(getApplicationContext(), (Channel) data);
@@ -223,6 +243,8 @@ protected Bitmap processBitmap(Object data) {
         contactsAdapter = new ContactsAdapter(this);
         mainListView.setAdapter(contactsAdapter);
 
+        Helper.getListViewSize(mainListView);
+
         mainListView.setOnScrollListener(new AbsListView.OnScrollListener() {
             @Override
             public void onScrollStateChanged(AbsListView absListView, int scrollState) {
@@ -272,6 +294,7 @@ protected void onResume() {
         super.onResume();
         LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
         LocalBroadcastManager.getInstance(this).registerReceiver(refreshBroadcast, getIntentFilter());
+
         if (channel != null) {
             BroadcastService.currentInfoId = String.valueOf(channel.getKey());
             Channel newChannel = ChannelService.getInstance(this).getChannelByChannelKey(channel.getKey());
@@ -355,7 +378,6 @@ public boolean onContextItemSelected(MenuItem item) {
 
     }
 
-
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.channel_menu_option, menu);
@@ -443,7 +465,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
         return false;
     }
 
-
     public void processLoadRegisteredUsers() {
         final ProgressDialog progressDialog = ProgressDialog.show(ChannelInfoActivity.this, "",
                 getString(R.string.applozic_contacts_loading_info), true);
@@ -493,12 +514,13 @@ private int getListPreferredItemHeight() {
         return (int) typedValue.getDimension(metrics);
     }
 
-
     public void updateChannelList() {
         if (contactsAdapter != null && channel != null) {
             channelUserMapperList.clear();
             channelUserMapperList = ChannelService.getInstance(this).getListOfUsersFromChannelUserMapper(channel.getKey());
             contactsAdapter.notifyDataSetChanged();
+            Helper.getListViewSize(mainListView);
+
             String oldChannelName = channel.getName();
             channel = ChannelService.getInstance(this).getChannelByChannelKey(channel.getKey());
             if (!oldChannelName.equals(channel.getName())) {
@@ -584,6 +606,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
     }
 
     public void deleteChannel(final Channel channel) {
+
         AlertDialog.Builder alertDialog = new AlertDialog.Builder(this).
                 setPositiveButton(R.string.channel_deleting, new DialogInterface.OnClickListener() {
                     @Override
@@ -591,11 +614,13 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         new ChannelMemberAdd(channel, ChannelInfoActivity.this).execute();
                     }
                 });
+
         alertDialog.setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialogInterface, int i) {
             }
         });
+
         if (channel.getType() != null) {
             alertDialog.setMessage(getString(R.string.delete_channel_messages_and_channel_info).replace(getString(R.string.group_name_info), channel.getName()).replace(getString(R.string.groupType_info), Channel.GroupType.BROADCAST.getValue().equals(channel.getType()) ? getString(R.string.broadcast_string) : getString(R.string.group_string)));
         }
@@ -615,11 +640,35 @@ protected void onDestroy() {
         }
     }
 
+    private static class Helper {
+
+        static void getListViewSize(ListView myListView) {
+            ListAdapter myListAdapter = myListView.getAdapter();
+            if (myListAdapter == null) {
+                //do nothing return null
+                return;
+            }
+            //set listAdapter in loop for getting final size
+            int totalHeight = 0;
+            for (int size = 0; size < myListAdapter.getCount(); size++) {
+                View listItem = myListAdapter.getView(size, null, myListView);
+                listItem.measure(0, 0);
+                totalHeight += listItem.getMeasuredHeight();
+            }
+            //setting listview item in adapter
+            ViewGroup.LayoutParams params = myListView.getLayoutParams();
+            params.height = totalHeight + (myListView.getDividerHeight() * (myListAdapter.getCount() - 1));
+            myListView.setLayoutParams(params);
+            // print height of adapter on log
+            Log.i("height of listItem:", String.valueOf(totalHeight));
+        }
+    }
+
     private class ContactsAdapter extends BaseAdapter {
         Context context;
         private LayoutInflater mInflater;
 
-        public ContactsAdapter(Context context) {
+        ContactsAdapter(Context context) {
             this.context = context;
             mInflater = LayoutInflater.from(context);
         }
@@ -635,11 +684,11 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 convertView =
                         mInflater.inflate(R.layout.contact_users_layout, parent, false);
                 holder = new ContactViewHolder();
-                holder.displayName = (TextView) convertView.findViewById(R.id.displayName);
-                holder.alphabeticImage = (TextView) convertView.findViewById(R.id.alphabeticImage);
-                holder.circleImageView = (CircleImageView) convertView.findViewById(R.id.contactImage);
-                holder.adminTextView = (TextView) convertView.findViewById(R.id.adminTextView);
-                holder.lastSeenAtTextView = (TextView) convertView.findViewById(R.id.lastSeenAtTextView);
+                holder.displayName = convertView.findViewById(R.id.displayName);
+                holder.alphabeticImage = convertView.findViewById(R.id.alphabeticImage);
+                holder.circleImageView = convertView.findViewById(R.id.contactImage);
+                holder.adminTextView = convertView.findViewById(R.id.adminTextView);
+                holder.lastSeenAtTextView = convertView.findViewById(R.id.lastSeenAtTextView);
                 convertView.setTag(holder);
             } else {
                 holder = (ContactViewHolder) convertView.getTag();
@@ -721,7 +770,7 @@ public long getItemId(int position) {
 
     }
 
-    public class ChannelMember extends AsyncTask<Void, Integer, Long> {
+    private class ChannelMember extends AsyncTask<Void, Integer, Long> {
         String responseForRemove;
         private ChannelUserMapper channelUserMapper;
         private ChannelService channelService;
@@ -730,7 +779,7 @@ public long getItemId(int position) {
         private Channel channel;
 
 
-        public ChannelMember(ChannelUserMapper channelUserMapper, Channel channel, Context context) {
+        ChannelMember(ChannelUserMapper channelUserMapper, Channel channel, Context context) {
             this.channelUserMapper = channelUserMapper;
             this.channel = channel;
             this.context = context;
@@ -738,7 +787,6 @@ public ChannelMember(ChannelUserMapper channelUserMapper, Channel channel, Conte
 
         }
 
-
         @Override
         protected void onPreExecute() {
             super.onPreExecute();
@@ -769,6 +817,7 @@ protected void onPostExecute(Long aLong) {
                 if (channelUserMapperList != null && channelUserMapperList.size() > 0) {
                     channelUserMapperList.remove(channelUserMapper);
                     contactsAdapter.notifyDataSetChanged();
+                    Helper.getListViewSize(mainListView);
                 }
             }
         }
@@ -776,15 +825,15 @@ protected void onPostExecute(Long aLong) {
     }
 
     private class ContactViewHolder {
-        public TextView displayName, alphabeticImage, adminTextView, lastSeenAtTextView;
-        public CircleImageView circleImageView;
+        TextView displayName, alphabeticImage, adminTextView, lastSeenAtTextView;
+        CircleImageView circleImageView;
 
-        public ContactViewHolder() {
+        ContactViewHolder() {
         }
 
     }
 
-    public class ChannelMemberAdd extends AsyncTask<Void, Integer, Long> {
+    private class ChannelMemberAdd extends AsyncTask<Void, Integer, Long> {
         ApiResponse apiResponse;
         String responseForDeleteGroup;
         String userId;
@@ -794,14 +843,14 @@ public ContactViewHolder() {
         private Channel channel;
 
 
-        public ChannelMemberAdd(Channel channel, String userId, Context context) {
+        ChannelMemberAdd(Channel channel, String userId, Context context) {
             this.channel = channel;
             this.context = context;
             this.userId = userId;
             this.channelService = ChannelService.getInstance(context);
         }
 
-        public ChannelMemberAdd(Channel channel, Context context) {
+        ChannelMemberAdd(Channel channel, Context context) {
             this.channel = channel;
             this.context = context;
             this.channelService = ChannelService.getInstance(context);
@@ -846,6 +895,7 @@ protected void onPostExecute(Long aLong) {
                     ChannelUserMapper channelUserMapper = new ChannelUserMapper(channel.getKey(), userId);
                     channelUserMapperList.add(channelUserMapper);
                     contactsAdapter.notifyDataSetChanged();
+                    Helper.getListViewSize(mainListView);
                 } else {
                     List<ErrorResponseFeed> error = apiResponse.getErrorResponse();
                     if (error != null && error.size() > 0) {
@@ -874,7 +924,7 @@ protected void onPostExecute(Long aLong) {
         }
     }
 
-    public class ChannelAsync extends AsyncTask<Void, Integer, Long> {
+    private class ChannelAsync extends AsyncTask<Void, Integer, Long> {
         GroupInfoUpdate groupInfoUpdate;
         String responseForExit;
         String responseForChannelUpdate;
@@ -883,14 +933,14 @@ protected void onPostExecute(Long aLong) {
         private Context context;
         private Channel channel;
 
-        public ChannelAsync(Channel channel, Context context) {
+        ChannelAsync(Channel channel, Context context) {
             this.channel = channel;
             this.context = context;
             this.channelService = ChannelService.getInstance(context);
 
         }
 
-        public ChannelAsync(GroupInfoUpdate groupInfoUpdate, Context context) {
+        ChannelAsync(GroupInfoUpdate groupInfoUpdate, Context context) {
             this.groupInfoUpdate = groupInfoUpdate;
             this.context = context;
             this.channelService = ChannelService.getInstance(context);
@@ -973,7 +1023,6 @@ protected void onPostExecute(Long aLong) {
         }
     }
 
-
     public class RefreshBroadcast extends BroadcastReceiver {
 
         @Override
@@ -982,23 +1031,15 @@ public void onReceive(Context context, Intent intent) {
         }
     }
 
-    static IntentFilter getIntentFilter(){
-        IntentFilter intentFilter =  new IntentFilter();
-        intentFilter.addAction(BroadcastService.INTENT_ACTIONS.UPDATE_GROUP_INFO.toString());
-        intentFilter.addAction(BroadcastService.INTENT_ACTIONS.UPDATE_USER_DETAIL.toString());
-        return intentFilter;
-    }
-
-
-    public class ChannelUserRoleAsyncTask extends AsyncTask<Void, Integer, Long> {
-        private ChannelService channelService;
-        private ProgressDialog progressDialog;
-        private Context context;
+    private class ChannelUserRoleAsyncTask extends AsyncTask<Void, Integer, Long> {
         ChannelUserMapper channelUserMapper;
         String response;
         GroupInfoUpdate groupInfoUpdate;
+        private ChannelService channelService;
+        private ProgressDialog progressDialog;
+        private Context context;
 
-        public ChannelUserRoleAsyncTask(ChannelUserMapper channelUserMapper, GroupInfoUpdate groupInfoUpdate, Context context) {
+        ChannelUserRoleAsyncTask(ChannelUserMapper channelUserMapper, GroupInfoUpdate groupInfoUpdate, Context context) {
             this.channelUserMapper = channelUserMapper;
             this.context = context;
             this.groupInfoUpdate = groupInfoUpdate;
@@ -1040,6 +1081,7 @@ protected void onPostExecute(Long aLong) {
                         channelUserMapperList.remove(channelUserMapper);
                         channelUserMapperList.add(index, channelUserMapper);
                         contactsAdapter.notifyDataSetChanged();
+                        Helper.getListViewSize(mainListView);
                     } catch (Exception e) {
 
                     }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 12fdbc93..270f9811 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -470,8 +470,10 @@ public void onNothingSelected(AdapterView<?> adapterView) {
 
             @Override
             public void onTick(long millisUntilFinished) {
-                count++;
+
                 seconds = count;
+                count++;
+
                 if (seconds == 60) {
                     minutes++;
                     count = 0;
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index c4f70516..d5269dcb 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -387,8 +387,10 @@ public void run() {
                 //emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
                 // startQNewButton.setVisibility(View.GONE);
 
-                menu.findItem(R.id.start_new).setVisible(true);
-                menu.findItem(R.id.menu_search).setVisible(true);
+                if(menu!=null) {
+                    menu.findItem(R.id.start_new).setVisible(true);
+                    menu.findItem(R.id.menu_search).setVisible(true);
+                }
             }
         });
     }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/AppContactFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/AppContactFragment.java
index 1292faec..f187a6c8 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/AppContactFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/people/contact/AppContactFragment.java
@@ -669,9 +669,9 @@ private int indexOfSearchQuery(String displayName) {
                 resultTextView.setText(R.string.no_contacts);
                 startInviteLayout.setVisibility(View.GONE);
 
-                if(displayName.indexOf(mSearchTerm)>0){
+               /* if(displayName.indexOf(mSearchTerm)>0){
                     resultTextView.setVisibility(View.GONE);
-                }
+                }*/
 
                 return displayName.toLowerCase(Locale.getDefault()).indexOf(
                         mSearchTerm.toLowerCase(Locale.getDefault()));
diff --git a/mobicomkitui/src/main/res/layout/channel_info_layout.xml b/mobicomkitui/src/main/res/layout/channel_info_layout.xml
index ff0b59ed..e6932e2a 100755
--- a/mobicomkitui/src/main/res/layout/channel_info_layout.xml
+++ b/mobicomkitui/src/main/res/layout/channel_info_layout.xml
@@ -41,28 +41,28 @@
                 android:fitsSystemWindows="true"
                 app:layout_collapseMode="parallax" />
 
-            <TextView
+            <com.applozic.mobicomkit.uiwidgets.CustomTextViewRegular
                 android:id="@+id/created_by"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:textDirection="locale"
-                android:textAlignment="gravity"
                 android:layout_gravity="bottom"
                 android:layout_marginBottom="8dp"
                 android:layout_marginLeft="10dp"
+                android:layout_marginStart="10dp"
+                android:textAlignment="gravity"
                 android:textColor="@color/white"
+                android:textDirection="locale"
                 android:textSize="16sp"
-                android:layout_marginStart="10dp"
                 app:layout_collapseMode="parallax" />
 
             <android.support.v7.widget.Toolbar
                 android:id="@+id/toolbar"
                 android:layout_width="match_parent"
                 android:layout_height="?attr/actionBarSize"
+                android:layout_marginEnd="20dp"
+                android:layout_marginStart="20dp"
                 android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                 app:layout_collapseMode="pin"
-                android:layout_marginStart="20dp"
-                android:layout_marginEnd="20dp"
                 app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                 app:subtitleTextAppearance="@style/ToolbarSubtitle"
                 app:titleTextAppearance="@style/ToolbarTitle" />
@@ -71,15 +71,17 @@
     </android.support.design.widget.AppBarLayout>
 
     <android.support.v4.widget.NestedScrollView
+        android:id="@+id/nestedScrollView"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:fillViewport="true"
         app:layout_behavior="@string/appbar_scrolling_view_behavior"
         app:layout_scrollFlags="scroll">
 
-        <RelativeLayout
+        <LinearLayout
             android:layout_width="match_parent"
-            android:layout_height="wrap_content"
+            android:layout_height="match_parent"
+            android:orientation="vertical"
             app:layout_behavior="@string/appbar_scrolling_view_behavior"
             app:layout_scrollFlags="scroll">
 
@@ -99,16 +101,18 @@
                     android:layout_height="wrap_content"
                     android:orientation="vertical">
 
-                    <TextView
+
+                    <com.applozic.mobicomkit.uiwidgets.CustomTextViewRegular
                         android:id="@+id/groupParticipantsTexView"
                         android:layout_width="match_parent"
                         android:layout_height="wrap_content"
-                        android:textDirection="locale"
-                        android:textAlignment="gravity"
+                        android:layout_marginLeft="3dp"
+                        android:layout_marginStart="3dp"
                         android:padding="12dp"
                         android:text="@string/participants"
-                        android:textSize="18sp"
-                        android:textColor="#FF333333"/>
+                        android:textAlignment="gravity"
+                        android:textDirection="locale"
+                        android:textSize="18sp" />
 
                     <View
                         android:layout_width="match_parent"
@@ -117,6 +121,7 @@
                         android:layout_marginLeft="4dp"
                         android:layout_marginRight="4dp"/>
 
+
                 </LinearLayout>
 
             </android.support.v7.widget.CardView>
@@ -125,20 +130,20 @@
                 android:id="@+id/listCardView"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_below="@+id/participantsCardView"
+                android:layout_marginBottom="20dp"
+                android:layout_marginEnd="20dp"
                 android:layout_marginLeft="20dp"
                 android:layout_marginRight="20dp"
+                android:layout_marginStart="20dp"
                 android:clickable="true"
                 app:cardCornerRadius="0dp"
-                android:layout_marginEnd="20dp"
-                android:layout_marginStart="20dp"
                 app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
 
                 <ListView
                     android:id="@+id/mainList"
                     android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
+                    android:layout_height="match_parent"
                     android:layout_marginLeft="4dp"
                     android:layout_marginRight="4dp"
                     android:fillViewport="true"
@@ -149,15 +154,14 @@
 
             <RelativeLayout
                 android:id="@+id/channel_exit_relativeLayout"
-                android:layout_width="match_parent"
+                android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_marginBottom="10dp"
+                android:layout_marginBottom="20dp"
+                android:layout_marginEnd="20dp"
                 android:layout_marginLeft="20dp"
-                android:layout_marginRight="10dp"
-                android:layout_marginEnd="10dp"
+                android:layout_marginRight="20dp"
                 android:layout_marginStart="20dp"
-                android:layout_marginTop="16dp"
-                android:layout_below="@+id/listCardView"
+                android:layout_gravity="center"
                 app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
                 <Button
@@ -166,14 +170,11 @@
                     android:layout_height="wrap_content"
                     android:background="@drawable/button_rounded"
                     android:configChanges="orientation"
-                    android:text="Exit Group"
                     android:paddingLeft="28dp"
                     android:paddingRight="28dp"
-                    android:textAllCaps="false"
                     android:textColor="#ffffff"
                     android:textSize="15sp"
-                    android:gravity="center"
-                    android:layout_centerHorizontal="true" />
+                    android:textAllCaps="false"/>
 
             </RelativeLayout>
 
@@ -181,25 +182,28 @@
                 android:id="@+id/channel_delete_relativeLayout"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_marginBottom="10dp"
+                android:layout_marginBottom="20dp"
+                android:layout_marginEnd="20dp"
                 android:layout_marginLeft="20dp"
-                android:layout_marginRight="10dp"
+                android:layout_marginRight="20dp"
+                android:layout_marginStart="20dp"
                 android:visibility="gone"
+                android:layout_gravity="center"
                 app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
                 <Button
                     android:id="@+id/delete_channel_button"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_alignParentBottom="true"
-                    android:layout_marginBottom="20dp"
                     android:configChanges="orientation"
-                    android:padding="5dp"
+                    android:paddingLeft="28dp"
+                    android:paddingRight="28dp"
                     android:textColor="#ffffff"
-                    android:textSize="15sp" />
+                    android:textSize="15sp"
+                    android:textAllCaps="false"/>
 
             </RelativeLayout>
-        </RelativeLayout>
+        </LinearLayout>
     </android.support.v4.widget.NestedScrollView>
 
 </android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
