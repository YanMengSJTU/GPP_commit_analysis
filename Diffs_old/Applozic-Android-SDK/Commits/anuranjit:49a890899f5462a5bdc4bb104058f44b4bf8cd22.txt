diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/ApplozicClient.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/ApplozicClient.java
index ff68cbdb..5e4553c3 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/ApplozicClient.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/ApplozicClient.java
@@ -17,6 +17,7 @@
     private static final String HANDLE_DIAL = "CLIENT_HANDLE_DIAL";
     private static final String CHAT_LIST_HIDE_ON_NOTIFICATION = "CHAT_LIST_HIDE_ON_NOTIFICATION";
     private static final String CONTEXT_BASED_CHAT = "CONTEXT_BASED_CHAT";
+    private static final String USER_BUSY_STATUS = "USER_BUSY_STATUS";
     private static final String NOTIFICATION_SMALL_ICON= "NOTIFICATION_SMALL_ICON";
     private static final String APP_NAME = "APP_NAME";
     public static ApplozicClient applozicClient;
@@ -100,4 +101,13 @@ public ApplozicClient setAppName(String notficationAppName) {
         sharedPreferences.edit().putString(APP_NAME, notficationAppName).commit();
         return this;
     }
+
+    public void setUserBusyStatus(boolean enable){
+        sharedPreferences.edit().putBoolean(USER_BUSY_STATUS, enable).apply();
+    }
+
+    public boolean isUserBusyStatus(){
+        return sharedPreferences.getBoolean(USER_BUSY_STATUS, false);
+    }
+
 }
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java
index fad00938..e2e53da9 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MessageClientService.java
@@ -4,7 +4,9 @@
 import android.os.Process;
 import android.text.TextUtils;
 import android.util.Log;
+import android.widget.Toast;
 
+import com.applozic.mobicomkit.ApplozicClient;
 import com.applozic.mobicomkit.api.HttpRequestUtils;
 import com.applozic.mobicomkit.api.MobiComKitClientService;
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
@@ -33,7 +35,9 @@
 import java.io.UnsupportedEncodingException;
 import java.net.URLEncoder;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 import java.util.UUID;
 
 /**
@@ -64,6 +68,7 @@
     public static final String ARGUMRNT_SAPERATOR = "&";
     public static final String UPDATE_READ_STATUS_FOR_SINGLE_MESSAGE_URL = "/rest/ws/message/read";
     public static final String MESSAGE_INFO_URL = "/rest/ws/message/info";
+    public static final String BUSY_WITH_OTHER = "BUSY_WITH_OTHER";
 
     private static final String TAG = "MessageClientService";
     /* public static List<Message> recentProcessedMessage = new ArrayList<Message>();
@@ -309,7 +314,7 @@ public void sendMessageToServer(Message message, Class intentClass) throws Excep
     public void processMessage(Message message) throws Exception {
 
         boolean isBroadcast = (message.getMessageId() == null);
-
+        ApplozicClient applozicClient = ApplozicClient.getInstance(context);
         MobiComUserPreference userPreferences = MobiComUserPreference.getInstance(context);
         message.setSent(Boolean.TRUE);
         message.setSendToDevice(Boolean.FALSE);
@@ -382,8 +387,11 @@ public void processMessage(Message message) throws Exception {
         newMessage.setStoreOnDevice(message.isStoreOnDevice());
         newMessage.setDelivered(message.getDelivered());
         newMessage.setStatus(message.getStatus());
-        newMessage.setMetadata(message.getMetadata());
-
+        Map<String, String> userStatus = message.getMetadata();
+        if (applozicClient.isUserBusyStatus()) {
+            userStatus.put("userStatus", "4");
+        }
+        newMessage.setMetadata(userStatus);
         newMessage.setSendToDevice(message.isSendToDevice());
         newMessage.setContentType(message.getContentType());
         newMessage.setConversationId(message.getConversationId());
@@ -401,10 +409,15 @@ public void processMessage(Message message) throws Exception {
 
         try {
             String response = new MessageClientService(context).sendMessage(newMessage);
+            if(response != null && response.contains(BUSY_WITH_OTHER)){
+                BroadcastService.sendUserBusy(context, BroadcastService.INTENT_ACTIONS.USER_BUSY.toString(), contact != null ? contact.getUserId() : null);
+                return;
+            }
             if(message.hasAttachment() && TextUtils.isEmpty(response) && !message.isContactMessage() ){
                 messageDatabaseService.updateCanceledFlag(messageId, 1);
                 BroadcastService.sendMessageUpdateBroadcast(context, BroadcastService.INTENT_ACTIONS.UPLOAD_ATTACHMENT_FAILED.toString(), message);
             }
+
             MessageResponse messageResponse = (MessageResponse) GsonUtils.getObjectFromJson(response, MessageResponse.class);
             keyString = messageResponse.getMessageKey();
             if (!TextUtils.isEmpty(keyString)) {
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/BroadcastService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/BroadcastService.java
index c3f9ab96..7dc51903 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/BroadcastService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/broadcast/BroadcastService.java
@@ -11,6 +11,7 @@
 
 import com.applozic.mobicommons.commons.core.utils.Utils;
 import com.applozic.mobicommons.json.GsonUtils;
+import com.applozic.mobicommons.people.channel.Conversation;
 
 /**
  * Created by devashish on 24/1/15.
@@ -167,6 +168,15 @@ public static void sendUpdateForChannelSync(Context context,String action){
         sendBroadcast(context, intent);
     }
 
+    public static void sendUserBusy(Context context, String action,String currentUserId){
+        Log.i(TAG, "Sending  Broadcast for userBusy ......");
+        Intent intent = new Intent();
+        intent.setAction(action);
+        intent.putExtra(Conversation.USER_ID_KEY, currentUserId);
+        intent.addCategory(Intent.CATEGORY_DEFAULT);
+        sendBroadcast(context, intent);
+    }
+
     public static IntentFilter getIntentFilter() {
         IntentFilter intentFilter = new IntentFilter();
         intentFilter.addAction(INTENT_ACTIONS.FIRST_TIME_SYNC_COMPLETE.toString());
@@ -188,6 +198,7 @@ public static IntentFilter getIntentFilter() {
         intentFilter.addAction(INTENT_ACTIONS.MESSAGE_READ_AND_DELIVERED.toString());
         intentFilter.addAction(INTENT_ACTIONS.MESSAGE_READ_AND_DELIVERED_FOR_CONTECT.toString());
         intentFilter.addAction(INTENT_ACTIONS.CHANNEL_SYNC.toString());
+        intentFilter.addAction(INTENT_ACTIONS.USER_BUSY.toString());
         intentFilter.addCategory(Intent.CATEGORY_DEFAULT);
         return intentFilter;
     }
@@ -197,7 +208,7 @@ public static IntentFilter getIntentFilter() {
         SYNC_MESSAGE, DELETE_MESSAGE, DELETE_CONVERSATION, MESSAGE_DELIVERY, MESSAGE_DELIVERY_FOR_CONTACT, INSTRUCTION,
         UPLOAD_ATTACHMENT_FAILED, MESSAGE_ATTACHMENT_DOWNLOAD_DONE, MESSAGE_ATTACHMENT_DOWNLOAD_FAILD,
         UPDATE_LAST_SEEN_AT_TIME,UPDATE_TYPING_STATUS, MESSAGE_READ_AND_DELIVERED, MESSAGE_READ_AND_DELIVERED_FOR_CONTECT,CHANNEL_SYNC,
-        CONTACT_VERIFIED, NOTIFY_USER, MQTT_DISCONNECTED,UPDATE_NAME
+        CONTACT_VERIFIED, NOTIFY_USER, MQTT_DISCONNECTED,UPDATE_NAME, USER_BUSY
     }
 
     public static void sendBroadcast(Context context, Intent intent) {
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/ApplozicSetting.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/ApplozicSetting.java
index 1b75ef84..0e586a32 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/ApplozicSetting.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/ApplozicSetting.java
@@ -49,7 +49,7 @@
     private static final String SENT_MESSAGE_LINK_TEXT_COLOR = "SENT_MESSAGE_LINK_TEXT_COLOR";
     private static final String RECEIVED_MESSAGE_LINK_TEXT_COLOR  = "RECEIVED_MESSAGE_LINK_TEXT_COLOR";
     private static final String MESSAGE_EDITTEXT_HINT_TEXT_COLOR= "MESSAGE_EDITTEXT_HINT_TEXT_COLOR";
-
+    private static final String USER_IS_BUSY_MESSAGE = "User is busy";
     private static final String HIDE_GROUP_ADD_MEMBERS_BUTTON = "HIDE_GROUP_ADD_MEMBERS_BUTTON";
     private static final String HIDE_GROUP_NAME_UPDATE_BUTTON= "HIDE_GROUP_NAME_UPDATE_BUTTON";
     private static final String HIDE_GROUP_EXIT_BUTTON= "HIDE_GROUP_EXIT_BUTTON";
@@ -544,6 +544,13 @@ public ApplozicSetting showActionDialWithoutCalling(){
     public boolean isActionDialWithoutCallingEnabled() {
         return sharedPreferences.getBoolean(SHOW_ACTION_DIAL_WITH_OUT_CALLING, false);
     }
+    public void setUserIsBusyMessage(String message){
+        sharedPreferences.edit().putString(USER_IS_BUSY_MESSAGE, message).apply();
+    }
+
+    public String getUserIsBusyMessage(){
+        return sharedPreferences.getString(USER_IS_BUSY_MESSAGE, USER_IS_BUSY_MESSAGE);
+    }
 
     public boolean clearAll() {
         return sharedPreferences.edit().clear().commit();
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index f8fb0580..bd3e7576 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -455,13 +455,26 @@ public void updateTypingStatus(String userId, String isTypingStatus) {
             return;
         }
         ConversationFragment conversationFragment = getConversationFragment();
+        Contact contact = conversationFragment.getContact();
         Log.i(TAG, "Received typing status for: " + userId);
-        if (conversationFragment.getContact() != null && userId.equals(conversationFragment.getContact().getContactIds())) {
+        if (contact != null && userId.equals(contact.getContactIds())) {
             conversationFragment.updateUserTypingStatus(userId, isTypingStatus);
         }
 
     }
 
+    public void updateBusyMessageStatus(String userId){
+        if (!BroadcastService.isIndividual()) {
+            return;
+        }
+        ConversationFragment conversationFragment = getConversationFragment();
+        Contact contact = conversationFragment.getContact();
+        Log.i(TAG, "Received update user busy status for: " + userId);
+        if (contact != null && userId.equals(contact.getContactIds())) {
+            conversationFragment.updateUserBusyStatus();
+        }
+    }
+
     public void updateChannelSync() {
         if (BroadcastService.isChannelInfo()) {
             ((ChannelInfoActivity) fragmentActivity).updateChannelList();
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
index ea7bc9b8..db88c073 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
@@ -6,6 +6,7 @@
 import android.support.v4.app.FragmentActivity;
 import android.text.TextUtils;
 import android.util.Log;
+import android.widget.Toast;
 
 import com.applozic.mobicomkit.api.MobiComKitConstants;
 import com.applozic.mobicomkit.api.conversation.Message;
@@ -16,6 +17,7 @@
 import com.applozic.mobicomkit.uiwidgets.instruction.InstructionUtil;
 
 import com.applozic.mobicommons.json.GsonUtils;
+import com.applozic.mobicommons.people.channel.Conversation;
 import com.applozic.mobicommons.people.contact.Contact;
 
 /**
@@ -110,6 +112,9 @@ else if (BroadcastService.INTENT_ACTIONS.FIRST_TIME_SYNC_COMPLETE.toString().equ
             conversationUIService.reconnectMQTT();
         } else if(BroadcastService.INTENT_ACTIONS.CHANNEL_SYNC.toString().equals(action)){
             conversationUIService.updateChannelSync();
+        }else if(BroadcastService.INTENT_ACTIONS.USER_BUSY.toString().equals(action)){
+            String currentUserId = intent.getStringExtra(Conversation.USER_ID_KEY);
+            conversationUIService.updateBusyMessageStatus(currentUserId);
         }
     }
 }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 2b5c7c2e..565150b9 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -1353,19 +1353,29 @@ public void updateUserTypingStatus(final String typingUserId, final String isTyp
         this.getActivity().runOnUiThread(new Runnable() {
             @Override
             public void run() {
+                int visibilityStatus = View.GONE;
+                String text = "";
                 if (isTypingStatus.equals("1")) {
-                    statusMessageLayout.setVisibility(View.VISIBLE);
-                    isTyping.setVisibility(View.VISIBLE);
-                    isTyping.setText(contact.getDisplayName() + " " + getString(R.string.is_typing));
-                } else {
-                    statusMessageLayout.setVisibility(View.GONE);
-                    isTyping.setVisibility(View.GONE);
-                    isTyping.setText("");
+                    visibilityStatus = View.VISIBLE;
+                    text =contact.getDisplayName() + " " + getString(R.string.is_typing);
                 }
+                statusMessageLayout.setVisibility(visibilityStatus);
+                isTyping.setVisibility(visibilityStatus);
+                isTyping.setText(text);
             }
         });
     }
 
+    public void updateUserBusyStatus() {
+        this.getActivity().runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                statusMessageLayout.setVisibility(View.VISIBLE);
+                isTyping.setVisibility(View.VISIBLE);
+                isTyping.setText(applozicSetting.getUserIsBusyMessage());
+            }
+        });
+    }
 //    public void onEmojiconClicked(Emojicon emojicon) {
 //        //TODO: Move OntextChangeListiner to EmojiEditableTExt
 //        int currentPos = messageEditText.getSelectionStart();
