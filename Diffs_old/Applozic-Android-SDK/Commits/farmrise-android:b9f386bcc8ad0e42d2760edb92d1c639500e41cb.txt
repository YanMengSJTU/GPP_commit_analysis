diff --git a/app/src/main/assets/applozic-settings.json b/app/src/main/assets/applozic-settings.json
index a13b15b9..bea0f83e 100644
--- a/app/src/main/assets/applozic-settings.json
+++ b/app/src/main/assets/applozic-settings.json
@@ -1,6 +1,6 @@
 {
   "customMessageBackgroundColor": "#FF029A43",
-  "sentMessageBackgroundColor": "#FF2EB363",
+  "sentMessageBackgroundColor": "#FF029A43",
   "receivedMessageBackgroundColor": "#FFFFFFFF",
   "sendButtonBackgroundColor": "#FF029A43",
   "attachmentIconsBackgroundColor": "#FF029A43",
@@ -8,7 +8,7 @@
   "sentContactMessageTextColor:": "#5fba7d",
   "receivedContactMessageTextColor": "#5fba7d",
   "sentMessageTextColor": "#FFFFFFFF",
-  "receivedMessageTextColor": "#FF2EB363",
+  "receivedMessageTextColor": "#000000",
   "messageEditTextTextColor": "#000000",
   "sentMessageLinkTextColor": "#FFFFFFFF",
   "receivedMessageLinkTextColor": "#5fba7d",
@@ -18,11 +18,11 @@
   "conversationDayTextColor": "#333333",
   "messageTimeTextColor": "#838b83",
   "channelCustomMessageTextColor": "#666666",
-  "sentMessageBorderColor": "#FF2EB363",
-  "receivedMessageBorderColor": "#FF2EB363",
+  "sentMessageBorderColor": "#FF029A43",
+  "receivedMessageBorderColor": "#FFFFFFFF",
   "channelCustomMessageBorderColor": "#cccccc",
   "collapsingToolbarLayoutColor": "#FF029A43",
-  "groupParticipantsTextColor": "#FF029A43",
+  "groupParticipantsTextColor": "#000000",
   "groupDeleteButtonBackgroundColor": "#FF029A43",
   "groupExitButtonBackgroundColor": "#FF029A43",
   "adminTextColor": "#FF029A43",
@@ -42,25 +42,25 @@
   "locationShareViaMap": true,
   "startNewFloatingButton": false,
   "startNewButton": true,
-  "onlineStatusMasterList": false,
+  "onlineStatusMasterList": true,
   "startNewGroup": true,
-  "imageCompression": false,
-  "inviteFriendsInContactActivity": false,
+  "imageCompression": true,
+  "inviteFriendsInContactActivity": true,
   "registeredUserContactListCall": true,
   "createAnyContact": false,
   "showActionDialWithOutCalling": false,
   "profileLogoutButton": false,
   "userProfileFragment": true,
-  "messageSearchOption": false,
+  "messageSearchOption": true,
   "hideGroupAddMembersButton": false,
   "hideGroupNameUpdateButton": false,
   "hideGroupExitButton": false,
   "hideGroupRemoveMemberOption": false,
   "profileOption": true,
-  "broadcastOption": true,
+  "broadcastOption": false,
   "restrictedWordMessage": " Please don't use restricted word",
   "hideAttachmentButton": false,
-  "groupUsersOnlineStatus": false,
+  "groupUsersOnlineStatus": true,
   "launchChatFromProfilePicOrName": false,
   "refreshOption": true,
   "deleteOption": true,
@@ -86,7 +86,7 @@
   "recordButton": true,
   "messageTemplate": {
     "isEnabled": false,
-    "borderColor": "#FF2EB363",
+    "borderColor": "#FF029A43",
     "backgroundColor": "#FFFFFF",
     "hideOnSend": false,
     "sendMessageOnClick": true,
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
index 1d9ee7a6..7b0e11e7 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -9,6 +9,7 @@
 import android.support.annotation.NonNull;
 import android.support.design.widget.BottomNavigationView;
 import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.content.LocalBroadcastManager;
@@ -59,6 +60,7 @@
     ConversationUIService conversationUIService;
     MobiComQuickConversationFragment mobiComQuickConversationFragment;
     MobiComKitBroadcastReceiver mobiComKitBroadcastReceiver;
+
     private HashMap<String, Stack<Fragment>> mStacks;
     private BottomNavigationView bottomNavigationView;
     private String currentTab;
@@ -102,15 +104,16 @@ protected void onCreate(Bundle savedInstanceState) {
         lastSeenStatusIntent.putExtra(UserIntentService.USER_LAST_SEEN_AT_STATUS, true);
         startService(lastSeenStatusIntent);
 
+        //addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
+
         mActionBar = getSupportActionBar();
-        // addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
         //Used to select an item programmatically
         //bottomNavigationView.getMenu().getItem(2).setChecked(true);
     }
 
     private void goToFragment(Fragment selectedFragment) {
         FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
-        fragmentTransaction.replace(R.id.container, selectedFragment);
+        fragmentTransaction.replace(R.id.layout_child_activity, selectedFragment);
         fragmentTransaction.commit();
     }
 
@@ -144,13 +147,23 @@ private void selectedTab(String tabId) {
                 pushFragments(tabId, new HomeFragment(), true);
                 break;
             case TAB_CHAT:
-               /* if (MobiComUserPreference.getInstance(this).isLoggedIn()) {
-                    pushFragments(tabId, new MobiComQuickConversationFragment(), true);
+
+                if (MobiComUserPreference.getInstance(this).isLoggedIn()) {
+                   /* //pushFragments(tabId, new MobiComQuickConversationFragment(), true);
+                    Intent intent = new Intent(this, ConversationActivity.class);
+                    if (ApplozicClient.getInstance(this).isContextBasedChat()) {
+                        intent.putExtra(ConversationUIService.CONTEXT_BASED_CHAT, true);
+                    }
+                    startActivity(intent);*/
+
+                    addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
+
+
                 } else {
                     login();
-                }*/
+                }
 
-               login();
+                //login();
                 break;
         }
         /*} else {
@@ -167,7 +180,7 @@ public void pushFragments(String tag, Fragment fragment, boolean shouldAdd) {
             mStacks.get(tag).push(fragment);
         FragmentManager manager = getSupportFragmentManager();
         FragmentTransaction ft = manager.beginTransaction();
-        ft.replace(R.id.container, fragment);
+        ft.replace(R.id.layout_child_activity, fragment);
         ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
         //ft.addToBackStack(null);
         ft.commit();
@@ -186,7 +199,7 @@ public void popFragments() {
   /* We have the target fragment in hand.. Just show it.. Show a standard navigation animation*/
         FragmentManager manager = getSupportFragmentManager();
         FragmentTransaction ft = manager.beginTransaction();
-        ft.replace(R.id.container, fragment);
+        ft.replace(R.id.layout_child_activity, fragment);
         ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_CLOSE);
         ft.commit();
     }
@@ -328,17 +341,16 @@ public void onSuccess(RegistrationResponse registrationResponse, final Context c
 
                 ApplozicClient.getInstance(context).setContextBasedChat(true).setHandleDial(true);
 
-                Map<ApplozicSetting.RequestCode, String> activityCallbacks = new HashMap<ApplozicSetting.RequestCode, String>();
+                /*Map<ApplozicSetting.RequestCode, String> activityCallbacks = new HashMap<ApplozicSetting.RequestCode, String>();
                 activityCallbacks.put(ApplozicSetting.RequestCode.USER_LOOUT, HomeActivity.class.getName());
-                ApplozicSetting.getInstance(context).setActivityCallbacks(activityCallbacks);
+                ApplozicSetting.getInstance(context).setActivityCallbacks(activityCallbacks);*/
 
                 if (MobiComUserPreference.getInstance(context).isRegistered()) {
 
-/*
                     //Set activity callbacks
                     Map<ApplozicSetting.RequestCode, String> activityCallbacks = new HashMap<ApplozicSetting.RequestCode, String>();
-                    activityCallbacks.put(ApplozicSetting.RequestCode.MESSAGE_TAP, HomeActivity.class.getName());
-                    ApplozicSetting.getInstance(context).setActivityCallbacks(activityCallbacks);*/
+                    activityCallbacks.put(ApplozicSetting.RequestCode.MESSAGE_TAP, ConversationActivity.class.getName());
+                    ApplozicSetting.getInstance(context).setActivityCallbacks(activityCallbacks);
 
                     //Start GCM registration....
                     PushNotificationTask pushNotificationTask = null;
@@ -358,8 +370,17 @@ public void onFailure(RegistrationResponse registrationResponse, Exception excep
                     pushNotificationTask.execute((Void) null);
                 }
 
-                ApplozicClient.getInstance(context).hideChatListOnNotification();
-                pushFragments(TAB_CHAT, new MobiComQuickConversationFragment(), true);
+                 ApplozicClient.getInstance(context).hideChatListOnNotification();
+                //pushFragments(TAB_CHAT, new MobiComQuickConversationFragment(), true);
+                /*Intent intent = new Intent(HomeActivity.this, ConversationActivity.class);
+                if (ApplozicClient.getInstance(HomeActivity.this).isContextBasedChat()) {
+                    intent.putExtra(ConversationUIService.CONTEXT_BASED_CHAT, true);
+                }
+               //startActivity(intent);*/
+
+                addFragment(HomeActivity.this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
+
+
             }
 
             @Override
@@ -380,8 +401,13 @@ public void onClick(DialogInterface dialog, int which) {
         };
 
         User user = new User();
-        user.setUserId("mon2");
-        user.setContactNumber("9292929292");
+        user.setUserId("montest");
+        //user.setEmail("pskreddy"@gmail.com);
+        user.setContactNumber("7109109100");
+        user.setPassword("7109109100");
+        user.setDisplayName("7109109100");
+        //user.setAuthenticationTypeId(authenticationType.getValue());
+
 
 
         new UserLoginTask(user, listener, this).execute((Void) null);
@@ -462,5 +488,20 @@ public void handleOnActivityResult(int requestCode, Intent intent) {
 
         }
     }
+    public static void addFragment(FragmentActivity fragmentActivity, Fragment fragmentToAdd, String fragmentTag) {
+        FragmentManager supportFragmentManager = fragmentActivity.getSupportFragmentManager();
+
+        FragmentTransaction fragmentTransaction = supportFragmentManager
+                .beginTransaction();
+        fragmentTransaction.replace(R.id.layout_child_activity, fragmentToAdd,
+                fragmentTag);
+
+        if (supportFragmentManager.getBackStackEntryCount() > 1) {
+            supportFragmentManager.popBackStackImmediate();
+        }
+        fragmentTransaction.addToBackStack(fragmentTag);
+        fragmentTransaction.commitAllowingStateLoss();
+        supportFragmentManager.executePendingTransactions();
+    }
 
 }
diff --git a/app/src/main/res/layout/activity_home.xml b/app/src/main/res/layout/activity_home.xml
index 75d6f203..c311e938 100644
--- a/app/src/main/res/layout/activity_home.xml
+++ b/app/src/main/res/layout/activity_home.xml
@@ -6,14 +6,23 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <FrameLayout
-        android:id="@+id/container"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_above="@+id/navigation"
-        android:animateLayoutChanges="true">
+    <!--<FrameLayout-->
+        <!--android:id="@+id/container"-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="match_parent"-->
+        <!--android:layout_above="@+id/navigation"-->
+        <!--android:animateLayoutChanges="true">-->
+
+    <!--</FrameLayout>-->
+
+
+    <RelativeLayout
+        android:id="@+id/layout_child_activity"
+        android:background="@color/conversation_list_all_background"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:layout_gravity="left|top" />
 
-    </FrameLayout>
 
     <android.support.design.widget.BottomNavigationView
         android:id="@+id/navigation"
@@ -25,4 +34,5 @@
         app:itemIconTint="@color/white"
         app:itemTextColor="@color/white"
         app:menu="@menu/bottom_navigation_items" />
+
 </RelativeLayout>
\ No newline at end of file
diff --git a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MobiComConversationService.java b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MobiComConversationService.java
index 0dd46df3..47c3b675 100755
--- a/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MobiComConversationService.java
+++ b/mobicomkit/src/main/java/com/applozic/mobicomkit/api/conversation/MobiComConversationService.java
@@ -336,7 +336,7 @@ private void processUserDetails(SyncUserDetailsResponse userDetailsResponse) {
             contact.setUserId(userDetail.getUserId());
             contact.setContactNumber(userDetail.getPhoneNumber());
             contact.setStatus(userDetail.getStatusMessage());
-            //contact.setApplicationId(); Todo: set the application id
+            contact.setApplicationId("orphan12e5101382f0cc751fa8c224"); //Todo: set the application id
             contact.setConnected(userDetail.isConnected());
             contact.setFullName(userDetail.getDisplayName());
             contact.setLastSeenAt(userDetail.getLastSeenAtTime());
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
index 180c4eb8..cedc7341 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
@@ -40,7 +40,7 @@
     private String receivedMessageBorderColor = "#FFFFFFFF";
     private String channelCustomMessageBorderColor = "#cccccc";
     private String collapsingToolbarLayoutColor = "#FF029A43";
-    private String groupParticipantsTextColor = "#FF029A43";
+    private String groupParticipantsTextColor = "#000000"; //#FF029A43
     private String groupDeleteButtonBackgroundColor = "#FF029A43";
     private String groupExitButtonBackgroundColor = "#FF029A43";
     private String adminTextColor = "#FF029A43";
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index 0d196ff3..f8eab5fd 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -129,6 +129,8 @@ public ConversationUIService(FragmentActivity fragmentActivity,MobiComQuickConve
         this.userPreference = MobiComUserPreference.getInstance(fragmentActivity);
     }
 
+
+
 //    public MobiComQuickConversationFragment getQuickConversationFragment() {
 //
 //        MobiComQuickConversationFragment quickConversationFragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
index 68fd730c..b126cdda 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/MobiComKitBroadcastReceiver.java
@@ -12,6 +12,7 @@
 import com.applozic.mobicomkit.contact.AppContactService;
 import com.applozic.mobicomkit.contact.BaseContactService;
 import com.applozic.mobicomkit.uiwidgets.R;
+import com.applozic.mobicomkit.uiwidgets.conversation.fragment.MobiComQuickConversationFragment;
 import com.applozic.mobicomkit.uiwidgets.instruction.InstructionUtil;
 import com.applozic.mobicommons.commons.core.utils.Utils;
 import com.applozic.mobicommons.json.GsonUtils;
@@ -37,6 +38,11 @@ public MobiComKitBroadcastReceiver(FragmentActivity fragmentActivity,Conversatio
         this.baseContactService = new AppContactService(fragmentActivity);
     }
 
+    public MobiComKitBroadcastReceiver(FragmentActivity fragmentActivity, MobiComQuickConversationFragment mobiComQuickConversationFragment) {
+        this.conversationUIService = new ConversationUIService(fragmentActivity,mobiComQuickConversationFragment);
+        this.baseContactService = new AppContactService(fragmentActivity);
+    }
+
 
     @Override
     public void onReceive(Context context, Intent intent) {
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
index aaada0d5..70b61f85 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
@@ -10,6 +10,7 @@
 import android.content.IntentFilter;
 import android.graphics.Bitmap;
 import android.graphics.Color;
+import android.graphics.Typeface;
 import android.graphics.drawable.GradientDrawable;
 import android.net.ConnectivityManager;
 import android.net.Uri;
@@ -131,6 +132,7 @@ protected void onCreate(Bundle savedInstanceState) {
         createdBy = (TextView) findViewById(R.id.created_by);
         groupParticipantsTexView = (TextView) findViewById(R.id.groupParticipantsTexView);
         exitChannelButton = (Button) findViewById(R.id.exit_channel);
+        //exitChannelButton.setTypeface(Typeface.createFromAsset(getAssets(), "fonts/NotoSans-Regular.ttf"));
         deleteChannelButton = (Button) findViewById(R.id.delete_channel_button);
         channelDeleteRelativeLayout = (RelativeLayout) findViewById(R.id.channel_delete_relativeLayout);
         channelExitRelativeLayout = (RelativeLayout) findViewById(R.id.channel_exit_relativeLayout);
@@ -138,7 +140,7 @@ protected void onCreate(Bundle savedInstanceState) {
         collapsingToolbarLayout.setContentScrimColor(Color.parseColor(alCustomizationSettings.getCollapsingToolbarLayoutColor()));
         groupParticipantsTexView.setTextColor(Color.parseColor(alCustomizationSettings.getGroupParticipantsTextColor()));
         deleteChannelButton.setBackgroundColor(Color.parseColor((alCustomizationSettings.getGroupDeleteButtonBackgroundColor())));
-        exitChannelButton.setBackgroundColor(Color.parseColor(alCustomizationSettings.getGroupExitButtonBackgroundColor()));
+        //exitChannelButton.setBackgroundColor(Color.parseColor(alCustomizationSettings.getGroupExitButtonBackgroundColor()));
 
         mActionBar = getSupportActionBar();
         mActionBar.setDisplayHomeAsUpEnabled(true);
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index 0dc46484..dac40506 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -22,7 +22,6 @@
 import android.provider.ContactsContract;
 import android.provider.MediaStore;
 import android.provider.Settings;
-import android.support.annotation.NonNull;
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.ActivityCompat;
 import android.support.v4.app.DialogFragment;
@@ -55,7 +54,6 @@
 import com.applozic.mobicomkit.api.account.register.RegisterUserClientService;
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
 import com.applozic.mobicomkit.api.account.user.User;
-import com.applozic.mobicomkit.api.account.user.UserClientService;
 import com.applozic.mobicomkit.api.attachment.FileClientService;
 import com.applozic.mobicomkit.api.conversation.ApplozicMqttIntentService;
 import com.applozic.mobicomkit.api.conversation.Message;
@@ -68,11 +66,9 @@
 import com.applozic.mobicomkit.channel.database.ChannelDatabaseService;
 import com.applozic.mobicomkit.contact.AppContactService;
 import com.applozic.mobicomkit.contact.BaseContactService;
-import com.applozic.mobicomkit.contact.database.ContactDatabase;
 import com.applozic.mobicomkit.uiwidgets.AlCustomizationSettings;
 import com.applozic.mobicomkit.uiwidgets.ApplozicSetting;
 import com.applozic.mobicomkit.uiwidgets.R;
-import com.applozic.mobicomkit.uiwidgets.async.AlGetMembersFromContactGroupListTask;
 import com.applozic.mobicomkit.uiwidgets.conversation.ConversationUIService;
 import com.applozic.mobicomkit.uiwidgets.conversation.MessageCommunicator;
 import com.applozic.mobicomkit.uiwidgets.conversation.MobiComKitBroadcastReceiver;
@@ -105,7 +101,6 @@
 import java.io.File;
 import java.lang.ref.WeakReference;
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
 import java.util.Date;
 import java.util.HashSet;
 import java.util.List;
@@ -127,6 +122,7 @@
     public static final String CONVERSATION_ID = "conversationId";
     public static final String GOOGLE_API_KEY_META_DATA = "com.google.android.geo.API_KEY";
     public static final String ACTIVITY_TO_OPEN_ONCLICK_OF_CALL_BUTTON_META_DATA = "activity.open.on.call.button.click";
+    public static final String CONTACTS_GROUP_ID = "CONTACTS_GROUP_ID";
     protected static final long UPDATE_INTERVAL = 500;
     protected static final long FASTEST_INTERVAL = 1;
     private static final String LOAD_FILE = "loadFile";
@@ -135,7 +131,6 @@
     private static final String CAPTURED_IMAGE_URI = "capturedImageUri";
     private static final String CAPTURED_VIDEO_URI = "capturedVideoUri";
     private static final String SHARE_TEXT = "share_text";
-    public static final String CONTACTS_GROUP_ID = "CONTACTS_GROUP_ID";
     private static Uri capturedImageUri;
     private static String inviteMessage;
     private static int retry;
@@ -187,7 +182,8 @@ public static void addFragment(FragmentActivity fragmentActivity, Fragment fragm
                 fragmentTag);
 
         if (supportFragmentManager.getBackStackEntryCount() > 1
-                && !ConversationUIService.MESSGAE_INFO_FRAGMENT.equalsIgnoreCase(fragmentTag) && !ConversationUIService.USER_PROFILE_FRAMENT.equalsIgnoreCase(fragmentTag)) {
+                && !ConversationUIService.MESSGAE_INFO_FRAGMENT.equalsIgnoreCase(fragmentTag) &&
+                !ConversationUIService.USER_PROFILE_FRAMENT.equalsIgnoreCase(fragmentTag)) {
             supportFragmentManager.popBackStackImmediate();
         }
 
@@ -344,9 +340,12 @@ protected void onCreate(Bundle savedInstanceState) {
         Toolbar myToolbar = (Toolbar) findViewById(R.id.my_toolbar);
         setSupportActionBar(myToolbar);
         baseContactService = new AppContactService(this);
-        conversationUIService = new ConversationUIService(this);
+
         mobiComMessageService = new MobiComMessageService(this, MessageIntentService.class);
         quickConversationFragment = new MobiComQuickConversationFragment();
+        conversationUIService = new ConversationUIService(this);
+
+
         connectivityReceiver = new ConnectivityReceiver();
         geoApiKey = Utils.getMetaDataValue(getApplicationContext(), GOOGLE_API_KEY_META_DATA);
         activityToOpenOnClickOfCallButton = Utils.getMetaDataValue(getApplicationContext(), ACTIVITY_TO_OPEN_ONCLICK_OF_CALL_BUTTON_META_DATA);
@@ -449,7 +448,8 @@ protected void onNewIntent(Intent intent) {
         try {
             if (intent.getExtras() != null) {
 
-                if(intent.getBooleanExtra(ConversationUIService.PROFILE_INTENT,false)) {
+                //if condition is for, when clicked on profile in toolbar, navigating to profile screen
+                if (intent.getBooleanExtra(ConversationUIService.PROFILE_INTENT, false)) {
                     profilefragment.setApplozicPermissions(applozicPermission);
                     addFragment(this, profilefragment, ProfileFragment.ProfileFragmentTag);
                     return;
@@ -566,7 +566,7 @@ void beginCrop(Uri imageUri) {
     }
 
     @Override
-    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+    public void onRequestPermissionsResult(int requestCode, String[] permissions,int[] grantResults) {
         if (requestCode == PermissionsUtils.REQUEST_STORAGE) {
             if (PermissionsUtils.verifyPermissions(grantResults)) {
                 showSnackBar(R.string.storage_permission_granted);
@@ -740,7 +740,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         } else if (id == R.id.applozicUserProfile) {
             profilefragment.setApplozicPermissions(applozicPermission);
             addFragment(this, profilefragment, ProfileFragment.ProfileFragmentTag);
-        } else if (id == R.id.logout) {
+        } /*else if (id == R.id.logout) {
             try {
                 if (!TextUtils.isEmpty(alCustomizationSettings.getLogoutPackage())) {
                     Class loginActivity = Class.forName(alCustomizationSettings.getLogoutPackage().trim());
@@ -756,7 +756,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             } catch (ClassNotFoundException e) {
                 e.printStackTrace();
             }
-        }
+        }*/
         return false;
     }
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/DetailedConversationAdapter.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/DetailedConversationAdapter.java
index 125972eb..dbf28b18 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/DetailedConversationAdapter.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/DetailedConversationAdapter.java
@@ -427,8 +427,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                                 myHolder.replyMessageTextView.setText(context.getString(R.string.al_location_string));
                                 myHolder.imageViewForAttachmentType.setColorFilter
                                         (Color.parseColor(message.isTypeOutbox() ?
-                                                alCustomizationSettings.getSentMessageTextColor()
-                                                : alCustomizationSettings.getReceivedMessageTextColor()));
+                                                alCustomizationSettings.getSentMessageTextColor() :
+                                                alCustomizationSettings.getReceivedMessageTextColor()));
                                 myHolder.imageViewForAttachmentType.setImageResource(R.drawable.applozic_ic_location_on_white_24dp);
                                 loadImage.setLoadingImage(R.drawable.applozic_map_offline_thumbnail);
                                 loadImage.loadImage(LocationUtils.loadStaticMap(msg.getMessage()),
@@ -1028,8 +1028,8 @@ private void loadContactImage(Contact contact, Contact contactDisplayName, Messa
             /*alphabeticTextView.setTextColor(context.getResources().getColor(AlphaNumberColorUtil.alphabetTextColorMap.get(colorKey)));
             alphabeticTextView.setBackgroundResource(AlphaNumberColorUtil.alphabetBackgroundColorMap.get(colorKey));*/
             GradientDrawable bgShape = (GradientDrawable) alphabeticTextView.getBackground();
-            bgShape.setColor(context.getResources().getColor
-                    (AlphaNumberColorUtil.alphabetBackgroundColorMap.get(colorKey)));
+            bgShape.setColor(context.getResources().getColor(
+                    AlphaNumberColorUtil.alphabetBackgroundColorMap.get(colorKey)));
         }
 
         if (contact != null && contact.isDrawableResources() && contactImage != null) {
@@ -1048,7 +1048,8 @@ private void loadContactImage(Contact contact, Contact contactDisplayName, Messa
         }
 
         if (contactDisplayName != null && contactDisplayName.isDrawableResources() && contactImage != null) {
-            int drawableResourceId = context.getResources().getIdentifier(contactDisplayName.getrDrawableName(), "drawable", context.getPackageName());
+            int drawableResourceId = context.getResources().getIdentifier(contactDisplayName.getrDrawableName(),
+                    "drawable", context.getPackageName());
             contactImage.setImageResource(drawableResourceId);
             contactImage.setVisibility(View.VISIBLE);
             alphabeticTextView.setVisibility(View.GONE);
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java
index 7d037847..a21c9958 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/adapter/QuickConversationAdapter.java
@@ -203,7 +203,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
 
                 myholder.onlineTextView.setVisibility(View.GONE);
                 if (alCustomizationSettings.isOnlineStatusMasterList()) {
-                    myholder.onlineTextView.setVisibility(contactReceiver != null && contactReceiver.isOnline() ? View.VISIBLE : View.GONE);
+                    myholder.onlineTextView.setVisibility(contactReceiver != null &&
+                            contactReceiver.isOnline() ? View.VISIBLE : View.GONE);
                 }
 
                 if (myholder.attachedFile != null) {
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MessageInfoFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MessageInfoFragment.java
index 24b5c7e7..1b258461 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MessageInfoFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MessageInfoFragment.java
@@ -6,6 +6,7 @@
 import android.graphics.drawable.GradientDrawable;
 import android.os.AsyncTask;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentActivity;
 import android.support.v7.widget.LinearLayoutManager;
@@ -186,7 +187,7 @@ protected Bitmap processBitmap(Object data) {
 
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
-        menu.findItem(R.id.dial).setVisible(false);
+        //menu.findItem(R.id.dial).setVisible(false);
         menu.removeItem(R.id.start_new);
         menu.removeItem(R.id.conversations);
         menu.removeItem(R.id.deleteConversation);
@@ -347,8 +348,9 @@ public ContactsAdapter(List<MessageInfo> messageInfoList) {
             this.messageInfoList = messageInfoList;
         }
 
+        @NonNull
         @Override
-        public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
             View itemView = LayoutInflater.from(parent.getContext())
                     .inflate(R.layout.contact_users_layout, parent, false);
 
@@ -356,7 +358,7 @@ public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
         }
 
         @Override
-        public void onBindViewHolder(MyViewHolder holder, int position) {
+        public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {
             MessageInfo messageInfo = messageInfoList.get(position);
             String contactNumber;
             char firstLetter;
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 85cbedd7..ced588f7 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -15,6 +15,7 @@
 import android.graphics.Bitmap;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
+import android.graphics.drawable.GradientDrawable;
 import android.location.Location;
 import android.net.Uri;
 import android.os.AsyncTask;
@@ -210,8 +211,6 @@
     protected Message messageToForward;
     protected String searchString;
     protected AlCustomizationSettings alCustomizationSettings;
-    protected TextView isTyping, bottomlayoutTextView;
-    protected LinearLayoutManager linearLayoutManager;
     String audio_duration;
     LinearLayout userNotAbleToChatLayout;
     int resourceId;
@@ -245,17 +244,9 @@
     int seconds = 0, minutes = 0;
     ApplozicDocumentView applozicDocumentView;
     ImageView slideImageView;
-    WeakReference<ImageButton> recordButtonWeakReference;
-    RecyclerView recyclerView;
-    RecyclerViewPositionHelper recyclerViewPositionHelper;
-    int positionInSmsList;
-    DetailedConversationAdapter recyclerDetailConversationAdapter;
-    MobicomMessageTemplate messageTemplate;
-    MobicomMessageTemplateAdapter templateAdapter;
-    boolean isAlreadyLoading;
-    private RelativeLayout startChatLayout;
     private EmojiconHandler emojiIconHandler;
     private Bitmap previewThumbnail;
+    protected TextView isTyping, bottomlayoutTextView;
     private String defaultText;
     private boolean typingStarted;
     private Integer channelKey;
@@ -269,6 +260,15 @@
     private EditText errorEditTextView;
     private RecyclerView messageTemplateView;
     private ImageView audioRecordIconImageView;
+    WeakReference<ImageButton> recordButtonWeakReference;
+    RecyclerView recyclerView;
+    RecyclerViewPositionHelper recyclerViewPositionHelper;
+    protected LinearLayoutManager linearLayoutManager;
+    int positionInSmsList;
+    DetailedConversationAdapter recyclerDetailConversationAdapter;
+    MobicomMessageTemplate messageTemplate;
+    MobicomMessageTemplateAdapter templateAdapter;
+    boolean isAlreadyLoading;
 
     public static int dp(float value) {
         return (int) Math.ceil(1 * value);
@@ -406,12 +406,8 @@ public void onNothingSelected(AdapterView<?> adapterView) {
         infoBroadcast = (TextView) spinnerLayout.findViewById(R.id.info_broadcast);
         spinnerLayout.setVisibility(View.GONE);
         emptyTextView = (TextView) list.findViewById(R.id.noConversations);
-        //emptyTextView.setTextColor(Color.parseColor(alCustomizationSettings.getNoConversationLabelTextColor().trim()));
-
-        startChatLayout = (RelativeLayout) list.findViewById(R.id.startChatLayout);
-
-        startChatLayout.setVisibility(View.GONE);
-
+        emptyTextView.setTextColor(Color.parseColor
+                (alCustomizationSettings.getNoConversationLabelTextColor().trim()));
         emoticonsBtn.setOnClickListener(this);
         //listView.addHeaderView(spinnerLayout);
         sentIcon = getResources().getDrawable(R.drawable.applozic_ic_action_message_sent);
@@ -419,20 +415,20 @@ public void onNothingSelected(AdapterView<?> adapterView) {
 
         //listView.setLongClickable(true);
 
-        recordButton.setVisibility(alCustomizationSettings.isRecordButton() &&
-                (contact != null || channel != null &&
-                        !Channel.GroupType.OPEN.getValue().equals(channel.getType())) ? View.VISIBLE : View.GONE);
+        recordButton.setVisibility(alCustomizationSettings.isRecordButton()
+                && (contact != null || channel != null &&
+                !Channel.GroupType.OPEN.getValue().equals(channel.getType())) ? View.VISIBLE : View.GONE);
 
         sendButton.setVisibility(alCustomizationSettings.isRecordButton() &&
                 (contact != null || channel != null &&
                         !Channel.GroupType.OPEN.getValue().equals(channel.getType())) ? View.GONE : View.VISIBLE);
 
-       /* GradientDrawable bgShape = (GradientDrawable) sendButton.getBackground();
+        GradientDrawable bgShape = (GradientDrawable) sendButton.getBackground();
         bgShape.setColor(Color.parseColor(alCustomizationSettings.getSendButtonBackgroundColor().trim()));
 
         GradientDrawable bgShapeRecordButton = (GradientDrawable) recordButton.getBackground();
         bgShapeRecordButton.setColor(Color.parseColor
-                (alCustomizationSettings.getSendButtonBackgroundColor().trim()));*/
+                (alCustomizationSettings.getSendButtonBackgroundColor().trim()));
 
         attachButton = (ImageButton) individualMessageSendLayout.findViewById(R.id.attach_button);
 
@@ -1073,11 +1069,8 @@ public void deleteMessageFromDeviceList(String messageKeyString) {
                     messageList.remove(position);
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                     if (messageList.isEmpty()) {
-                        //emptyTextView.setVisibility(VISIBLE);
-                        Log.d("emptyTextView6", "emptyTextView6");
-                        emptyTextView.setVisibility(View.GONE);
-                        startChatLayout.setVisibility(View.GONE);
-
+                        emptyTextView.setVisibility(VISIBLE);
+                        Log.d("emptyTextView31", "emptyTextView31");
                         ((MobiComKitActivityInterface) getActivity()).removeConversation(message, channel != null ? String.valueOf(channel.getKey()) : contact.getFormattedContactNumber());
                     }
                     break;
@@ -1151,12 +1144,8 @@ public void run() {
                 if (recyclerDetailConversationAdapter != null) {
                     messageList.clear();
                     if (messageList.isEmpty()) {
-                        //emptyTextView.setVisibility(View.VISIBLE);
-
-                        emptyTextView.setVisibility(View.GONE);
-                        startChatLayout.setVisibility(View.GONE);
-
-                        Log.d("emptyTextView7", "emptyTextView7");
+                        emptyTextView.setVisibility(View.VISIBLE);
+                        Log.d("emptyTextView32", "emptyTextView32");
                     }
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                 }
@@ -1217,13 +1206,8 @@ public void run() {
                     linearLayoutManager.setStackFromEnd(true);
                     recyclerDetailConversationAdapter.notifyDataSetChanged();
                     linearLayoutManager.scrollToPositionWithOffset(messageList.size() - 1, 0);
-                    //emptyTextView.setVisibility(View.GONE);
-
                     emptyTextView.setVisibility(View.GONE);
-                    startChatLayout.setVisibility(View.GONE);
-
-                    Log.d("emptyTextView8", "emptyTextView8");
-
+                    Log.d("emptyTextView33", "emptyTextView33");
                     currentConversationId = message.getConversationId();
                     channelKey = message.getGroupId();
                     if (Message.MessageType.MT_INBOX.getValue().equals(message.getType()) && (contact != null || (channel != null && !Channel.GroupType.OPEN.getValue().equals(channel.getType())))) {
@@ -1253,12 +1237,12 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         this.menu = menu;
 
         if (contact != null && contact.isDeleted()) {
-            menu.findItem(R.id.dial).setVisible(false);
+            //menu.findItem(R.id.dial).setVisible(false);
             menu.findItem(R.id.refresh).setVisible(false);
             menu.removeItem(R.id.conversations);
             menu.findItem(R.id.userBlock).setVisible(false);
             menu.findItem(R.id.userUnBlock).setVisible(false);
-            menu.findItem(R.id.dial).setVisible(false);
+            //menu.findItem(R.id.dial).setVisible(false);
             return;
         }
 
@@ -1268,19 +1252,19 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if ((setting.isHandleDial() && !TextUtils.isEmpty(contactNumber) && contactNumber.length() > 2)
                 || (setting.isIPCallEnabled())) {
             if (setting.isIPCallEnabled()) {
-                menu.findItem(R.id.dial).setVisible(true);
-                menu.findItem(R.id.video_call).setVisible(true);
+                //menu.findItem(R.id.dial).setVisible(true);
+                //menu.findItem(R.id.video_call).setVisible(true);
             }
             if (setting.isHandleDial()) {
-                menu.findItem(R.id.dial).setVisible(true);
+                //menu.findItem(R.id.dial).setVisible(true);
             }
         } else {
-            menu.findItem(R.id.video_call).setVisible(false);
-            menu.findItem(R.id.dial).setVisible(false);
+            //menu.findItem(R.id.video_call).setVisible(false);
+            //menu.findItem(R.id.dial).setVisible(false);
         }
         if (channel != null) {
-            menu.findItem(R.id.dial).setVisible(false);
-            menu.findItem(R.id.video_call).setVisible(false);
+            //menu.findItem(R.id.dial).setVisible(false);
+            //menu.findItem(R.id.video_call).setVisible(false);
 
             if (Channel.GroupType.GROUPOFTWO.getValue().equals(channel.getType())) {
                 String userId = ChannelService.getInstance(getActivity()).getGroupOfTwoReceiverUserId(channel.getKey());
@@ -1359,7 +1343,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 userBlockDialog(false, contact, false);
             }
         }
-        if (id == R.id.dial) {
+       /* if (id == R.id.dial) {
             if (contact != null) {
                 if (contact.isBlocked()) {
                     userBlockDialog(false, contact, false);
@@ -1367,13 +1351,13 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     ((ConversationActivity) getActivity()).processCall(contact, currentConversationId);
                 }
             }
-        }
+        }*/
         if (id == R.id.deleteConversation) {
             deleteConversationThread();
             return true;
         }
 
-        if (id == R.id.video_call) {
+        /*if (id == R.id.video_call) {
             if (contact != null) {
                 if (contact.isBlocked()) {
                     userBlockDialog(false, contact, false);
@@ -1381,7 +1365,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     ((ConversationActivity) getActivity()).processVideoCall(contact, currentConversationId);
                 }
             }
-        }
+        }*/
         if (id == R.id.muteGroup) {
             if (channel != null) {
                 muteGroupChat();
@@ -1550,16 +1534,14 @@ public boolean onItemClick(int position, MenuItem item) {
                             galleryImageView.setVisibility(View.GONE);
                             imageViewRLayout.setVisibility(View.GONE);
                         }
-                        imageViewForAttachmentType.setColorFilter(ContextCompat.getColor(getActivity(),
-                                R.color.apploizc_lite_gray_color));
+                        imageViewForAttachmentType.setColorFilter(ContextCompat.getColor(getActivity(), R.color.apploizc_lite_gray_color));
                     } else if (message.getContentType() == Message.ContentType.LOCATION.getValue()) {
                         imageViewForAttachmentType.setVisibility(VISIBLE);
                         galleryImageView.setVisibility(VISIBLE);
                         imageViewRLayout.setVisibility(VISIBLE);
                         messageTextView.setText(getString(R.string.al_location_string));
                         imageViewForAttachmentType.setImageResource(R.drawable.applozic_ic_location_on_white_24dp);
-                        imageViewForAttachmentType.setColorFilter(ContextCompat.getColor(getActivity(),
-                                R.color.apploizc_lite_gray_color));
+                        imageViewForAttachmentType.setColorFilter(ContextCompat.getColor(getActivity(), R.color.apploizc_lite_gray_color));
                         messageImageLoader.setLoadingImage(R.drawable.applozic_map_offline_thumbnail);
                         messageImageLoader.loadImage(LocationUtils.loadStaticMap(message.getMessage()), galleryImageView);
                     } else {
@@ -1772,9 +1754,12 @@ public void run() {
                 if (withUserContact != null) {
                     if (withUserContact.isConnected()) {
                         typingStarted = false;
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.user_online));
+                        ((AppCompatActivity) getActivity()).getSupportActionBar().
+                                setSubtitle(getActivity().getString(R.string.user_online));
                     } else if (withUserContact.getLastSeenAt() != 0) {
-                        ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " + DateUtils.getDateAndTimeForLastSeen(withUserContact.getLastSeenAt()));
+                        ((AppCompatActivity) getActivity()).getSupportActionBar().
+                                setSubtitle(getActivity().getString(R.string.subtitle_last_seen_at_time) + " " +
+                                        DateUtils.getDateAndTimeForLastSeen(withUserContact.getLastSeenAt()));
                     } else {
                         ((AppCompatActivity) getActivity()).getSupportActionBar().setSubtitle("");
                     }
@@ -2007,12 +1992,8 @@ public void run() {
                     } else if (!message.isVideoNotificationMessage() && !message.isHidden()) {
                         messageList.add(message);
                         linearLayoutManager.scrollToPositionWithOffset(messageList.size() - 1, 0);
-                        //emptyTextView.setVisibility(View.GONE);
-
                         emptyTextView.setVisibility(View.GONE);
-                        startChatLayout.setVisibility(View.GONE);
-                        Log.d("emptyTextView9", "emptyTextView9");
-
+                        Log.d("emptyTextView34", "emptyTextView34");
                         recyclerDetailConversationAdapter.notifyDataSetChanged();
                     }
                 } catch (Exception ex) {
@@ -2668,10 +2649,8 @@ public void onPause() {
         BroadcastService.currentUserId = null;
         BroadcastService.currentConversationId = null;
         if (typingStarted) {
-            //contact != null | channel
-            if (contact != null || channel != null
-                    && !Channel.GroupType.OPEN.getValue().equals(channel.getType())
-                    || contact != null) {
+            //app is crashing here when it is |
+            if (contact != null || channel != null && !Channel.GroupType.OPEN.getValue().equals(channel.getType()) || contact != null) {
                 Intent intent = new Intent(getActivity(), ApplozicMqttIntentService.class);
                 intent.putExtra(ApplozicMqttIntentService.CHANNEL, channel);
                 intent.putExtra(ApplozicMqttIntentService.CONTACT, contact);
@@ -3523,9 +3502,7 @@ public DownloadConversation(RecyclerView recyclerView, boolean initial, int firs
         protected void onPreExecute() {
             super.onPreExecute();
             emptyTextView.setVisibility(View.GONE);
-            startChatLayout.setVisibility(View.GONE);
-
-            Log.d("emptyTextView10", "emptyTextView10");
+            Log.d("emptyTextView35", "emptyTextView35");
             isAlreadyLoading = true;
             swipeLayout.post(new Runnable() {
                 @Override
@@ -3677,11 +3654,7 @@ public void run() {
                 messageList.addAll(nextMessageList);
                 recyclerDetailConversationAdapter.searchString = searchString;
                 emptyTextView.setVisibility(messageList.isEmpty() ? VISIBLE : View.GONE);
-
-                startChatLayout.setVisibility(View.GONE);
-
-                Log.d("emptyTextView11", "emptyTextView11");
-
+                Log.d("emptyTextView36", "emptyTextView36");
                 if (!messageList.isEmpty()) {
                     recyclerView.post(new Runnable() {
                         @Override
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index 974e5ae7..8604dd96 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -281,13 +281,13 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if (alCustomizationSettings.isMessageSearchOption()) {
             menu.findItem(R.id.menu_search).setVisible(true);
         }
-        /*if (alCustomizationSettings.isBroadcastOption()) {
+       /* if (alCustomizationSettings.isBroadcastOption()) {
             menu.findItem(R.id.broadcast).setVisible(true);
         }*/
-        if (alCustomizationSettings.isLogoutOption()) {
+      /*  if (alCustomizationSettings.isLogoutOption()) {
             menu.findItem(R.id.logout).setVisible(true);
-        }
-        super.onCreateOptionsMenu(menu, inflater);
+        }*/
+        //super.onCreateOptionsMenu(menu, inflater);
     }
 
     public void addMessage(final Message message) {
@@ -550,19 +550,23 @@ public void run() {
     public void checkForEmptyConversations() {
         boolean isLodingConversation = (downloadConversation != null && downloadConversation.getStatus() == AsyncTask.Status.RUNNING);
         if (latestMessageForEachContact.isEmpty() && !isLodingConversation) {
-            emptyTextView.setVisibility(View.VISIBLE);
+
+            /*emptyTextView.setVisibility(View.VISIBLE);
             emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel()) ? alCustomizationSettings.getNoConversationLabel() : getResources().getString(R.string.no_conversation));
+*/
+
 
             Log.d("emptyTextView3", "emptyTextView3");
-            //startChatLayout.setVisibility(View.VISIBLE);
-            startChatLayout.setVisibility(View.GONE);
+
+            emptyTextView.setVisibility(View.GONE);
+            startChatLayout.setVisibility(View.VISIBLE);
 
             //startNewButton.setVisibility(applozicSetting.isStartNewButtonVisible() ? View.VISIBLE : View.GONE);
         } else {
             emptyTextView.setVisibility(View.GONE);
             //startNewButton.setVisibility(View.GONE);
             Log.d("emptyTextView4", "emptyTextView4");
-            startChatLayout.setVisibility(View.VISIBLE);
+            startChatLayout.setVisibility(View.GONE);
         }
     }
 
@@ -854,6 +858,19 @@ public boolean onOptionsItemSelected(MenuItem item) {
         private WeakReference<QuickConversationAdapter> quickConversationAdapterWeakReference;
         private WeakReference<TextView> textViewWeakReference;
 
+
+        public void setQuickConversationAdapterWeakReference(QuickConversationAdapter quickConversationAdapterWeakReference) {
+            this.quickConversationAdapterWeakReference = new WeakReference<QuickConversationAdapter>(quickConversationAdapterWeakReference);
+        }
+
+        public void setTextViewWeakReference(TextView emptyTextViewWeakReference) {
+            this.textViewWeakReference = new WeakReference<TextView>(emptyTextViewWeakReference);
+        }
+
+        public void setSwipeRefreshLayoutWeakReference(SwipeRefreshLayout swipeRefreshLayout) {
+            this.swipeRefreshLayoutWeakReference = new WeakReference<SwipeRefreshLayout>(swipeRefreshLayout);
+        }
+
         public DownloadConversation(RecyclerView view, boolean initial, int firstVisibleItem, int amountVisible, int totalItems, boolean showInstruction, String searchString) {
             this.context = getActivity();
             this.view = view;
@@ -870,18 +887,6 @@ public DownloadConversation(RecyclerView view, boolean initial, int firstVisible
             loadMoreMessages = true;
         }
 
-        public void setQuickConversationAdapterWeakReference(QuickConversationAdapter quickConversationAdapterWeakReference) {
-            this.quickConversationAdapterWeakReference = new WeakReference<QuickConversationAdapter>(quickConversationAdapterWeakReference);
-        }
-
-        public void setTextViewWeakReference(TextView emptyTextViewWeakReference) {
-            this.textViewWeakReference = new WeakReference<TextView>(emptyTextViewWeakReference);
-        }
-
-        public void setSwipeRefreshLayoutWeakReference(SwipeRefreshLayout swipeRefreshLayout) {
-            this.swipeRefreshLayoutWeakReference = new WeakReference<SwipeRefreshLayout>(swipeRefreshLayout);
-        }
-
         @Override
         protected void onPreExecute() {
             super.onPreExecute();
@@ -1005,7 +1010,10 @@ public void run() {
 
                         Log.d("emptyTextViewmessageList", ""+messageList.size());
 
+                        emptyTextView.setVisibility(View.GONE);
+                        startChatLayout.setVisibility(View.GONE);
 
+/*
                         if(messageList.isEmpty()){
                             emptyTextView.setVisibility(View.GONE);
                             startChatLayout.setVisibility(View.VISIBLE);
@@ -1014,19 +1022,27 @@ public void run() {
                             emptyTextView.setVisibility(View.GONE);
                             startChatLayout.setVisibility(View.GONE);
                             Log.d("emptyTextViewEmptyNo", "emptyTextViewEmptyNo");
-                        }
-
-                        Log.d("emptyTextView5", "emptyTextView5");
+                        }*/
 
                         if (!TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
                             emptyTextView.setText(!TextUtils.isEmpty
                                     (alCustomizationSettings.getNoSearchFoundForChatMessages()) ?
                                     alCustomizationSettings.getNoSearchFoundForChatMessages() :
                                     getResources().getString(R.string.search_not_found_for_messages));
+                            Log.d("emptyTextView20", "emptyTextView20");
+
+                            emptyTextView.setVisibility(View.VISIBLE);
+                            startChatLayout.setVisibility(View.GONE);
+
                         } else if (TextUtils.isEmpty(searchString) && messageList.isEmpty()) {
-                            emptyTextView.setText(!TextUtils.isEmpty(alCustomizationSettings.getNoConversationLabel())
+                            emptyTextView.setText(!TextUtils.isEmpty
+                                    (alCustomizationSettings.getNoConversationLabel())
                                     ? alCustomizationSettings.getNoConversationLabel() :
                                     getResources().getString(R.string.no_conversation));
+                            Log.d("emptyTextView30", "emptyTextView30");
+
+                            emptyTextView.setVisibility(View.GONE);
+                            startChatLayout.setVisibility(View.VISIBLE);
                         }
                     }
                 }
diff --git a/mobicomkitui/src/main/res/drawable/admin_text.xml b/mobicomkitui/src/main/res/drawable/admin_text.xml
index 3a6cadb4..4556a886 100644
--- a/mobicomkitui/src/main/res/drawable/admin_text.xml
+++ b/mobicomkitui/src/main/res/drawable/admin_text.xml
@@ -3,7 +3,7 @@
 
     <stroke
         android:width="2dp"
-        android:color="@color/applozic_theme_color_primary" />
+        android:color="#3fb76f" /> <!--@color/applozic_theme_color_primary-->
 
     <padding
         android:bottom="2dp"
diff --git a/mobicomkitui/src/main/res/drawable/button_rounded.xml b/mobicomkitui/src/main/res/drawable/button_rounded.xml
new file mode 100644
index 00000000..4f9df3e0
--- /dev/null
+++ b/mobicomkitui/src/main/res/drawable/button_rounded.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <solid android:color="#3fb76f" />
+    <corners android:radius="3dp" />
+
+</shape>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/res/layout/al_activity_profile.xml b/mobicomkitui/src/main/res/layout/al_activity_profile.xml
index 535fcc6a..52de98e7 100755
--- a/mobicomkitui/src/main/res/layout/al_activity_profile.xml
+++ b/mobicomkitui/src/main/res/layout/al_activity_profile.xml
@@ -1,7 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical">
@@ -15,7 +13,7 @@
 
         <LinearLayout
             android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_height="wrap_content"
             android:orientation="vertical"
             android:paddingBottom="@dimen/activity_vertical_margin">
 
@@ -81,7 +79,6 @@
                 android:paddingRight="10dp"
                 android:paddingEnd="10dp"
                 android:paddingLeft="10dp">
-
                 <RelativeLayout
                     android:id="@+id/applozic_profile_displayname_verticalline_rl"
                     android:layout_width="2dp"
@@ -93,7 +90,7 @@
                 <View
                     android:layout_width="15dp"
                     android:layout_height="15dp"
-                    android:layout_marginTop="15dp"
+                    android:layout_marginTop="18dp"
                     android:background="@drawable/applozic_profile_dot" />
 
                 <ImageView
@@ -111,9 +108,9 @@
                     android:id="@+id/applozic_profile_displayname_section_heading"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_marginLeft="20dp"
+                    android:layout_marginLeft="24dp"
                     android:textDirection="locale"
-                    android:layout_marginStart="20dp"
+                    android:layout_marginStart="24dp"
                     android:layout_marginTop="10dp"
                     android:text="@string/display_name"
                     android:textColor="@color/message_details_text_color"
@@ -126,12 +123,15 @@
                     android:layout_height="wrap_content"
                     android:layout_below="@+id/applozic_profile_displayname_section_heading"
                     android:layout_marginBottom="10dp"
-                    android:layout_marginLeft="15dp"
-                    android:layout_marginStart="15dp"
+                    android:layout_marginLeft="24dp"
+                    android:layout_marginStart="24dp"
                     android:layout_marginTop="15dp"
                     android:text="@string/user_name"
                     android:textColor="@color/applozic_theme_color_primary"
-                    android:textSize="20sp" />
+                    android:textSize="20sp"
+                    android:maxLines="1"
+                    android:ellipsize="end"/>
+
             </RelativeLayout>
 
             <RelativeLayout
@@ -152,7 +152,7 @@
                 <View
                     android:layout_width="15dp"
                     android:layout_height="15dp"
-                    android:layout_marginTop="15dp"
+                    android:layout_marginTop="18dp"
                     android:background="@drawable/applozic_profile_dot" />
 
                 <ImageView
@@ -169,15 +169,17 @@
                     android:id="@+id/applozic_profile_section_heading"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_marginLeft="20dp"
+                    android:layout_marginLeft="24dp"
                     android:textAlignment="gravity"
                     android:textDirection="locale"
-                    android:layout_marginStart="20dp"
+                    android:layout_marginStart="24dp"
                     android:layout_marginTop="10dp"
                     android:text="@string/profile_status"
                     android:textColor="@color/message_details_text_color"
                     android:textSize="20sp" />
 
+
+
                 <TextView
                     android:id="@+id/applozic_profile_status"
                     android:layout_width="wrap_content"
@@ -186,8 +188,8 @@
                     android:textDirection="locale"
                     android:layout_below="@+id/applozic_profile_section_heading"
                     android:layout_marginBottom="10dp"
-                    android:layout_marginLeft="15dp"
-                    android:layout_marginStart="15dp"
+                    android:layout_marginLeft="24dp"
+                    android:layout_marginStart="24dp"
                     android:layout_marginTop="15dp"
                     android:text="@string/no_status"
                     android:textColor="@color/applozic_theme_color_primary"
@@ -219,7 +221,6 @@
                     android:layout_marginRight="18dp"
                     android:text=""
                     android:visibility="gone" />
-
             </RelativeLayout>
 
 
@@ -243,7 +244,7 @@
                     android:id="@+id/view2"
                     android:layout_width="15dp"
                     android:layout_height="15dp"
-                    android:layout_marginTop="15dp"
+                    android:layout_marginTop="18dp"
                     android:background="@drawable/applozic_profile_dot" />
 
 
@@ -254,13 +255,15 @@
                     android:layout_alignParentRight="true"
                     android:layout_alignParentTop="true"
                     android:padding="10dp"
-                    android:src="@drawable/applozic_ic_action_edit" />
+                    android:src="@drawable/applozic_ic_action_edit"
+                    android:visibility="gone"/>
 
                 <TextView
                     android:id="@+id/applozic_profile_contact_section_heading"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_marginLeft="20dp"
+                    android:layout_marginLeft="24dp"
+                    android:layout_marginStart="24dp"
                     android:layout_marginTop="10dp"
                     android:text="@string/profile_contact_number"
                     android:textColor="@color/message_details_text_color"
@@ -272,11 +275,13 @@
                     android:layout_height="wrap_content"
                     android:layout_below="@+id/applozic_profile_contact_section_heading"
                     android:layout_marginBottom="10dp"
-                    android:layout_marginLeft="15dp"
+                    android:layout_marginLeft="24dp"
+                    android:layout_marginStart="24dp"
                     android:layout_marginTop="15dp"
                     android:text="@string/profile_contact"
                     android:textColor="@color/applozic_theme_color_primary"
                     android:textSize="20sp" />
+
             </RelativeLayout>
 
             <View
@@ -307,7 +312,7 @@
                 <View
                     android:layout_width="15dp"
                     android:layout_height="15dp"
-                    android:layout_marginTop="15dp"
+                    android:layout_marginTop="18dp"
                     android:background="@drawable/applozic_profile_dot" />
 
                 <TextView
@@ -374,7 +379,7 @@
                 <View
                     android:layout_width="15dp"
                     android:layout_height="15dp"
-                    android:layout_marginTop="15dp"
+                    android:layout_marginTop="18dp"
                     android:background="@drawable/applozic_profile_dot" />
 
 
diff --git a/mobicomkitui/src/main/res/layout/channel_info_layout.xml b/mobicomkitui/src/main/res/layout/channel_info_layout.xml
index 45af724f..ff0b59ed 100755
--- a/mobicomkitui/src/main/res/layout/channel_info_layout.xml
+++ b/mobicomkitui/src/main/res/layout/channel_info_layout.xml
@@ -48,7 +48,7 @@
                 android:textDirection="locale"
                 android:textAlignment="gravity"
                 android:layout_gravity="bottom"
-                android:layout_marginBottom="10dp"
+                android:layout_marginBottom="8dp"
                 android:layout_marginLeft="10dp"
                 android:textColor="@color/white"
                 android:textSize="16sp"
@@ -79,7 +79,7 @@
 
         <RelativeLayout
             android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_height="wrap_content"
             app:layout_behavior="@string/appbar_scrolling_view_behavior"
             app:layout_scrollFlags="scroll">
 
@@ -94,17 +94,30 @@
                 app:cardCornerRadius="0dp"
                 app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
-                <TextView
-                    android:id="@+id/groupParticipantsTexView"
-                    android:layout_width="match_parent"
-                    android:textDirection="locale"
-                    android:textAlignment="gravity"
+                <LinearLayout
+                    android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    android:layout_marginStart="3dp"
-                    android:padding="5dp"
-	            android:text="@string/participants"
-                    android:textSize="18sp" />
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/groupParticipantsTexView"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:textDirection="locale"
+                        android:textAlignment="gravity"
+                        android:padding="12dp"
+                        android:text="@string/participants"
+                        android:textSize="18sp"
+                        android:textColor="#FF333333"/>
+
+                    <View
+                        android:layout_width="match_parent"
+                        android:layout_height="1dp"
+                        android:background="?android:attr/listDivider"
+                        android:layout_marginLeft="4dp"
+                        android:layout_marginRight="4dp"/>
+
+                </LinearLayout>
 
             </android.support.v7.widget.CardView>
 
@@ -113,7 +126,6 @@
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_below="@+id/participantsCardView"
-                android:layout_marginBottom="65dp"
                 android:layout_marginLeft="20dp"
                 android:layout_marginRight="20dp"
                 android:clickable="true"
@@ -126,7 +138,9 @@
                 <ListView
                     android:id="@+id/mainList"
                     android:layout_width="match_parent"
-                    android:layout_height="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="4dp"
+                    android:layout_marginRight="4dp"
                     android:fillViewport="true"
                     android:fitsSystemWindows="true"
                     app:layout_behavior="@string/appbar_scrolling_view_behavior" />
@@ -135,28 +149,31 @@
 
             <RelativeLayout
                 android:id="@+id/channel_exit_relativeLayout"
-                android:layout_width="wrap_content"
+                android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:layout_marginBottom="10dp"
                 android:layout_marginLeft="20dp"
                 android:layout_marginRight="10dp"
                 android:layout_marginEnd="10dp"
                 android:layout_marginStart="20dp"
+                android:layout_marginTop="16dp"
+                android:layout_below="@+id/listCardView"
                 app:layout_behavior="@string/appbar_scrolling_view_behavior">
 
                 <Button
                     android:id="@+id/exit_channel"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_alignParentBottom="true"
-                    android:layout_marginBottom="20dp"
-                    android:layout_marginStart="20dp"
-                    android:layout_marginEnd="10dp"
-                    android:background="@color/applozic_theme_color_primary"
+                    android:background="@drawable/button_rounded"
                     android:configChanges="orientation"
-                    android:padding="5dp"
+                    android:text="Exit Group"
+                    android:paddingLeft="28dp"
+                    android:paddingRight="28dp"
+                    android:textAllCaps="false"
                     android:textColor="#ffffff"
-                    android:textSize="15sp" />
+                    android:textSize="15sp"
+                    android:gravity="center"
+                    android:layout_centerHorizontal="true" />
 
             </RelativeLayout>
 
diff --git a/mobicomkitui/src/main/res/layout/contact_users_layout.xml b/mobicomkitui/src/main/res/layout/contact_users_layout.xml
index 0cbd92a9..995161fc 100755
--- a/mobicomkitui/src/main/res/layout/contact_users_layout.xml
+++ b/mobicomkitui/src/main/res/layout/contact_users_layout.xml
@@ -1,8 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:layout_height="?android:attr/listPreferredItemHeight"
-    android:orientation="vertical">
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:padding="8dp">
 
     <RelativeLayout
         android:id="@+id/profile_image_relative_layout"
@@ -25,7 +27,6 @@
             android:textSize="20dp"
             android:visibility="gone" />
 
-
         <de.hdodenhof.circleimageview.CircleImageView
             android:id="@+id/contactImage"
             android:layout_width="50dp"
@@ -49,7 +50,7 @@
         android:paddingLeft="@dimen/listview_item_padding"
         android:paddingStart="@dimen/listview_item_padding"
         android:textDirection="locale"
-        android:textAlignment="gravity"
+        android:textAlignment="gravity" android:text="Just now"
         android:paddingRight="@dimen/listview_item_padding"
         android:paddingEnd="@dimen/listview_item_padding"
         android:singleLine="true"
@@ -74,15 +75,14 @@
         android:textAlignment="gravity"
         android:layout_toRightOf="@id/profile_image_relative_layout"
         android:ellipsize="marquee"
-        android:fontFamily="sans-serif-light"
         android:gravity="center_vertical"
         android:paddingLeft="@dimen/listview_item_padding"
         android:paddingStart="@dimen/listview_item_padding"
         android:paddingRight="@dimen/listview_item_padding"
         android:paddingEnd="@dimen/listview_item_padding"
-        android:singleLine="true"
-        android:textColor="#616161"
-        android:textSize="15sp"
+        android:maxLines="1"
+        android:textColor="#FF333333"
+        android:textSize="15sp" android:text="Sai Android"
         android:layout_alignParentEnd="true"
         android:layout_toEndOf="@id/profile_image_relative_layout" />
 
@@ -94,7 +94,6 @@
         android:layout_height="wrap_content"
         android:layout_alignBottom="@+id/displayName"
         android:layout_alignParentRight="true"
-        android:layout_marginRight="10dp"
         android:background="@drawable/admin_text"
         android:gravity="center"
         android:padding="2dp"
@@ -104,10 +103,11 @@
         android:paddingRight="10dp"
         android:paddingEnd="10dp"
         android:paddingTop="1dp"
-        android:singleLine="true"
+        android:maxLines="1"
         android:text="@string/admin_text"
         android:textSize="12sp"
         android:visibility="gone"
         android:layout_alignParentEnd="true"
-        android:layout_marginEnd="10dp" />
+        />
+
 </RelativeLayout>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml b/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml
index c5428ba7..d784e1c2 100755
--- a/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml
+++ b/mobicomkitui/src/main/res/menu/mobicom_basic_menu_for_normal_message.xml
@@ -15,6 +15,7 @@
         mobicomkit:iconifiedByDefault="true"
         mobicomkit:showAsAction="always" />
 
+
     <item
         android:id="@+id/start_new"
         android:icon="@drawable/new_chat"
@@ -24,6 +25,7 @@
         android:visible="false"
         mobicomkit:showAsAction="always" />
 
+
     <item
         android:id="@+id/refresh"
         android:icon="@drawable/applozic_ic_action_time"
@@ -41,15 +43,14 @@
         android:visible="false"
         mobicomkit:showAsAction="collapseActionView" />
 
-
     <item
         android:id="@+id/conversations"
         android:icon="@drawable/applozic_ic_action_chat"
         android:orderInCategory="5"
-        android:showAsAction="ifRoom"
+        android:showAsAction="collapseActionView"
         android:title="@string/new_group"
         android:visible="false"
-        mobicomkit:showAsAction="ifRoom" />
+        mobicomkit:showAsAction="collapseActionView" />
 
 
     <item
@@ -61,87 +62,84 @@
         android:visible="false"
         mobicomkit:showAsAction="collapseActionView" />
 
-
     <item
-        android:id="@+id/userBlock"
+        android:id="@+id/muteGroup"
         android:orderInCategory="7"
         android:showAsAction="collapseActionView"
-        android:title="@string/user_block"
+        android:title="@string/mute_Group"
         android:visible="false"
         mobicomkit:showAsAction="collapseActionView" />
     <item
-        android:id="@+id/userUnBlock"
+        android:id="@+id/unmuteGroup"
         android:orderInCategory="7"
         android:showAsAction="collapseActionView"
-        android:title="@string/user_un_block"
+        android:title="@string/unmute_Group"
         android:visible="false"
         mobicomkit:showAsAction="collapseActionView" />
 
-
-
     <item
-        android:id="@+id/dial"
-        android:icon="@drawable/applozic_ic_action_call"
-        android:orderInCategory="12"
-        android:showAsAction="ifRoom|collapseActionView"
-        android:title="@string/dial"
+        android:id="@+id/userBlock"
+        android:orderInCategory="8"
+        android:showAsAction="collapseActionView"
+        android:title="@string/user_block"
         android:visible="false"
-        mobicomkit:showAsAction="ifRoom|collapseActionView" />
-
-
+        mobicomkit:showAsAction="collapseActionView" />
+    <item
+        android:id="@+id/userUnBlock"
+        android:orderInCategory="8"
+        android:showAsAction="collapseActionView"
+        android:title="@string/user_un_block"
+        android:visible="false"
+        mobicomkit:showAsAction="collapseActionView" />
 
 
     <item
         android:id="@+id/shareOptions"
         android:actionProviderClass="android.support.v7.widget.ShareActionProvider"
         android:icon="@drawable/mobicom_social_share"
-        android:orderInCategory="10"
+        android:orderInCategory="9"
         android:showAsAction="collapseActionView"
         android:title="@string/shareOptions"
         android:visible="false"
         mobicomkit:showAsAction="collapseActionView" />
 
+
+    <item
+        android:id="@+id/dial"
+        android:icon="@drawable/applozic_ic_action_call"
+        android:orderInCategory="10"
+        android:showAsAction="ifRoom|collapseActionView"
+        android:title="@string/dial"
+        android:visible="false"
+        mobicomkit:showAsAction="ifRoom|collapseActionView" />
+
     <item
         android:id="@+id/video_call"
         android:icon="@drawable/ic_videocam_white_24px"
-        android:orderInCategory="8"
+        android:orderInCategory="11"
         android:padding="8dp"
         android:title="@string/video_string"
         android:visible="false"
         mobicomkit:showAsAction="ifRoom|collapseActionView" />
 
+    <!--
+        <item
+            android:id="@+id/broadcast"
+            android:orderInCategory="12"
+            android:showAsAction="ifRoom"
+            android:title="@string/new_broadcast_name_info"
+            android:visible="false"
+            mobicomkit:showAsAction="collapseActionView" />
 
 
 
-    <!--<item
-        android:id="@+id/broadcast"
-        android:orderInCategory="8"
-        android:showAsAction="ifRoom"
-        android:title="@string/new_broadcast_name_info"
-        android:visible="false"
-        mobicomkit:showAsAction="collapseActionView" />-->
+        <item
+            android:id="@+id/logout"
+            android:icon="@drawable/applozic_ic_action_time"
+            android:orderInCategory="13"
+            android:showAsAction="collapseActionView"
+            android:title="@string/logout"
+            android:visible="false" />-->
 
-    <item
-        android:id="@+id/muteGroup"
-        android:orderInCategory="9"
-        android:showAsAction="collapseActionView"
-        android:title="@string/mute_Group"
-        android:visible="false"
-        mobicomkit:showAsAction="collapseActionView" />
 
-    <item
-        android:id="@+id/unmuteGroup"
-        android:orderInCategory="9"
-        android:showAsAction="collapseActionView"
-        android:title="@string/unmute_Group"
-        android:visible="false"
-        mobicomkit:showAsAction="collapseActionView" />
-
-    <item
-        android:id="@+id/logout"
-        android:icon="@drawable/applozic_ic_action_time"
-        android:orderInCategory="11"
-        android:showAsAction="collapseActionView"
-        android:title="@string/logout"
-        android:visible="false" />
 </menu>
\ No newline at end of file
diff --git a/mobicomkitui/src/main/res/values/mobicom_colors.xml b/mobicomkitui/src/main/res/values/mobicom_colors.xml
index 6d97c47b..3d1d1616 100755
--- a/mobicomkitui/src/main/res/values/mobicom_colors.xml
+++ b/mobicomkitui/src/main/res/values/mobicom_colors.xml
@@ -42,8 +42,8 @@
     <color name="applozic_multimedia_grid_view_background_color">#F0F0F0</color>
 
     <color name="applozic_theme_color">#FFB3E5FC</color>
-    <color name="applozic_theme_color_primary">#FF029A43</color>
-    <color name="applozic_theme_color_primary_dark">#FF0288D1</color>
+    <color name="applozic_theme_color_primary">#169947</color> <!--#FF029A43-->
+    <color name="applozic_theme_color_primary_dark">#3fb76f</color> <!--#FF0288D1-->
     <color name="applozic_theme_color_accent">#FF607D8B</color>
     <color name="applozic_theme_color_app">#ff0099cc</color>
     <color name="applozic_theme_color_control_activated">#ff0099cc</color>
diff --git a/mobicomkitui/src/main/res/values/mobicom_strings.xml b/mobicomkitui/src/main/res/values/mobicom_strings.xml
index bf1d3177..97deeef0 100755
--- a/mobicomkitui/src/main/res/values/mobicom_strings.xml
+++ b/mobicomkitui/src/main/res/values/mobicom_strings.xml
@@ -146,10 +146,10 @@
     <string name="unmute_Group">Unmute</string>
     <string name="user_name_info">[name]</string>
     <string name="channel_member_title">Select contact</string>
-    <string name="channel_exit_button">EXIT GROUP</string>
-    <string name="channel_delete_group_button">DELETE GROUP</string>
-    <string name="broadcast_exit_button">EXIT BROADCAST</string>
-    <string name="broadcast_delete_button">DELETE BROADCAST</string>
+    <string name="channel_exit_button">Exit Group</string>
+    <string name="channel_delete_group_button">Delete Group</string>
+    <string name="broadcast_exit_button">Exit Broadcast</string>
+    <string name="broadcast_delete_button">Delete Broadcast</string>
     <string name="channel_created_by">Created by</string>
     <string name="remove_member">Remove</string>
     <string name="add">Add</string>
