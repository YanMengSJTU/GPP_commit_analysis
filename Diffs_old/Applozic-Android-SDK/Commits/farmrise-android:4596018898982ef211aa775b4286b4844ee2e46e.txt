diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 6130ac5e..21aebd5c 100755
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -50,8 +50,9 @@
 
         <activity
             android:name=".HomeActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:configChanges="keyboardHidden|screenSize|locale|smallestScreenSize|screenLayout|orientation"
             android:exported="true"
+            android:launchMode="singleTop"
             android:label="@string/ecommerce"
             android:theme="@style/FarmRiseTheme"/>
         <activity
diff --git a/app/src/main/assets/applozic-settings.json b/app/src/main/assets/applozic-settings.json
index 2407b91a..8bedcf35 100644
--- a/app/src/main/assets/applozic-settings.json
+++ b/app/src/main/assets/applozic-settings.json
@@ -70,6 +70,7 @@
   "replyOption": true,
   "logoutOption": false,
   "logoutPackageName": "",
+  "groupDeletePackageName": "com.applozic.mobicomkit.sample.HomeActivity",
   "attachmentOptions": {
     ":location": true,
     ":camera": true,
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
index 1c71738a..5de55d58 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -25,6 +25,7 @@
 
 import com.applozic.mobicomkit.Applozic;
 import com.applozic.mobicomkit.ApplozicClient;
+import com.applozic.mobicomkit.api.MobiComKitConstants;
 import com.applozic.mobicomkit.api.account.register.RegistrationResponse;
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
 import com.applozic.mobicomkit.api.account.user.PushNotificationTask;
@@ -137,9 +138,16 @@ protected void onCreate(Bundle savedInstanceState) {
         mActionBar = getSupportActionBar();
         //Used to select an item programmatically
         //bottomNavigationView.getMenu().getItem(2).setChecked(true);
+        try {
+            if (getIntent() != null && getIntent().getExtras() != null && getIntent().getExtras().getBoolean(ConversationUIService.FROM_GROUP_DELETE)) {
+                bottomNavigationView.setSelectedItemId(R.id.action_chat);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
     }
 
-  /*  private void goToFragment(Fragment selectedFragment) {
+    /*  private void goToFragment(Fragment selectedFragment) {
         FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
         fragmentTransaction.replace(R.id.layout_child_activity, selectedFragment);
         fragmentTransaction.commit();
@@ -153,7 +161,7 @@ private void showContacts() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M &&
 
                 ActivityCompat.checkSelfPermission(this, android.Manifest.permission.READ_CONTACTS) !=
-                        PackageManager.PERMISSION_GRANTED){
+                        PackageManager.PERMISSION_GRANTED) {
 
             ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.READ_CONTACTS},
                     PERMISSIONS_REQUEST_READ_CONTACTS);
@@ -177,7 +185,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
                 Toast.makeText(this, "Until you grant the permission, we cannot display the names",
                         Toast.LENGTH_SHORT).show();
             }
-        }else{
+        } else {
             super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         }
     }
@@ -193,7 +201,6 @@ private void initialize() {
         mStacks = new HashMap<>();
         mStacks.put(TAB_HOME, new Stack<Fragment>());
         mStacks.put(TAB_CHAT, new Stack<Fragment>());
-        Applozic.init(this, "orphan12e5101382f0cc751fa8c224");
 
 
     }
@@ -221,7 +228,7 @@ private void selectedTab(String tabId) {
                     }
                     startActivity(intent);*/
 
-                    addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
+                 addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
                     pushFragments(tabId, mobiComQuickConversationFragment, true);
 
                 } else {
@@ -249,7 +256,7 @@ public void pushFragments(String tag, Fragment fragment, boolean shouldAdd) {
                         !getSupportFragmentManager().isDestroyed()) {
 
                     if (shouldAdd)
-                    mStacks.get(tag).push(fragment);
+                        mStacks.get(tag).push(fragment);
                     //FragmentManager manager = getSupportFragmentManager();
                     FragmentTransaction ft = manager.beginTransaction();
                     ft.replace(R.id.layout_child_activity, fragment);
@@ -399,12 +406,6 @@ public void onBackPressed() {
     protected void onStop() {
         isStopCalled = true;
         super.onStop();
-        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
-        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
-        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
-        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
-        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
-        startService(intent);
     }
 
     @Override
@@ -414,7 +415,7 @@ protected void onResume() {
         LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
         Intent subscribeIntent = new Intent(this, ApplozicMqttIntentService.class);
         subscribeIntent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
-        startService(subscribeIntent);
+        ApplozicMqttIntentService.enqueueWork(HomeActivity.this, subscribeIntent);
 
         if (!Utils.isInternetAvailable(this)) {
             String errorMessage = getResources().getString(R.string.internet_connection_not_available);
@@ -425,6 +426,12 @@ protected void onResume() {
     @Override
     protected void onPause() {
         LocalBroadcastManager.getInstance(this).unregisterReceiver(mobiComKitBroadcastReceiver);
+        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
+        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
+        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
+        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
+        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
+        ApplozicMqttIntentService.enqueueWork(HomeActivity.this, intent);
         super.onPause();
     }
 
@@ -502,11 +509,10 @@ public void onClick(DialogInterface dialog, int which) {
         };
 
         User user = new User();
-        user.setUserId("testapplozicuser7");
+        user.setUserId("userDevice");
         //user.setEmail("pskreddy"@gmail.com);
-        user.setContactNumber("+91 7777777777");
-        user.setPassword("7777777777");
-        user.setDisplayName("Seven"); //display name and user name are similar //Sai //In all contacts, conatct shows with display name and number
+        user.setPassword("123");
+        user.setDisplayName("LG"); //display name and user name are similar //Sai //In all contacts, conatct shows with display name and number
         //user.setAuthenticationTypeId(authenticationType.getValue());
 
 
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
index 3326a7ad..8f592ff8 100755
--- a/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/LoginActivity.java
@@ -95,7 +95,6 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         //FacebookSdk.sdkInitialize(this);
 
-        Applozic.init(this,getString(R.string.application_key));
 
         setContentView(R.layout.activity_login);
         setupUI(findViewById(R.id.layout));
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
index cedc7341..3575d12b 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
@@ -83,6 +83,7 @@
     private boolean muteOption = true;
     private MobicomMessageTemplate messageTemplate;
     private String logoutPackageName;
+    private String groupDeletePackageName;
     private boolean logoutOption = false;
     private int defaultGroupType = 2;
     private boolean muteUserChatOption = false;
@@ -448,6 +449,10 @@ public void setLogoutPackageName(String logoutPackageName) {
         this.logoutPackageName = logoutPackageName;
     }
 
+    public String getGroupDeletePackageName() {
+        return groupDeletePackageName;
+    }
+
     public String getThemeColorPrimary() {
         return themeColorPrimary;
     }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index a011137e..caccc02f 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -87,6 +87,7 @@
     public static final String FIRST_TIME_MTEXTER_FRIEND = "firstTimeMTexterFriend";
     public static final String CONTACT_ID = "contactId";
     public static final String CONTEXT_BASED_CHAT = "contextBasedChat";
+    public static final String FROM_GROUP_DELETE = "fromGroupDelete";
     public static final String CONTACT_NUMBER = "contactNumber";
     public static final String APPLICATION_ID = "applicationId";
     public static final String DEFAULT_TEXT = "defaultText";
@@ -121,16 +122,15 @@ public ConversationUIService(FragmentActivity fragmentActivity) {
         this.fileClientService = new FileClientService(fragmentActivity);
     }
 
-    public ConversationUIService(FragmentActivity fragmentActivity,MobiComQuickConversationFragment mobiComQuickConversationFragment) {
+    public ConversationUIService(FragmentActivity fragmentActivity, MobiComQuickConversationFragment mobiComQuickConversationFragment) {
         this.fragmentActivity = fragmentActivity;
         this.mobiComQuickConversationFragment = mobiComQuickConversationFragment;
         this.baseContactService = new AppContactService(fragmentActivity);
-        this.notificationManager  = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
+        this.notificationManager = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
         this.userPreference = MobiComUserPreference.getInstance(fragmentActivity);
     }
 
 
-
 //    public MobiComQuickConversationFragment getQuickConversationFragment() {
 //
 //        MobiComQuickConversationFragment quickConversationFragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
@@ -176,6 +176,7 @@ public void run() {
                 if (conversationFragment == null) {
                     conversationFragment = ConversationFragment.newInstance(contact, null, conversationId, searchString);
                     ((MobiComKitActivityInterface) fragmentActivity).addFragment(conversationFragment);
+
                 } else {
                     UserProfileFragment userProfileFragment = (UserProfileFragment) UIService.getFragmentByTag(fragmentActivity, ConversationUIService.USER_PROFILE_FRAMENT);
                     MessageInfoFragment messageInfoFragment = (MessageInfoFragment) UIService.getFragmentByTag(fragmentActivity, ConversationUIService.MESSGAE_INFO_FRAGMENT);
@@ -453,9 +454,9 @@ public void addMessage(Message message) {
             }
 
             if (mobiComQuickConversationFragment != null) {
-                if(message.isHidden()){
+                if (message.isHidden()) {
                     mobiComQuickConversationFragment.refreshView();
-                }else {
+                } else {
                     mobiComQuickConversationFragment.addMessage(message);
                 }
             }
@@ -534,6 +535,9 @@ public void deleteMessage(String keyString, String userId) {
 
     public void updateLastSeenStatus(String contactId) {
         if (BroadcastService.isQuick()) {
+            if( getQuickConversationFragment() == null){
+                return;
+            }
             getQuickConversationFragment().updateLastSeenStatus(contactId);
             return;
         }
@@ -945,7 +949,7 @@ public void reconnectMQTT() {
                     ((MobiComKitActivityInterface) fragmentActivity).retry();
                     Intent intent = new Intent(fragmentActivity, ApplozicMqttIntentService.class);
                     intent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
-                    ApplozicMqttIntentService.enqueueWork(fragmentActivity,intent);
+                    ApplozicMqttIntentService.enqueueWork(fragmentActivity, intent);
 
                 }
             }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
index e536ef42..2bd02c64 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
@@ -48,6 +48,7 @@
 import com.applozic.mobicomkit.api.MobiComKitConstants;
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
 import com.applozic.mobicomkit.api.account.user.RegisteredUsersAsyncTask;
+import com.applozic.mobicomkit.api.account.user.UserClientService;
 import com.applozic.mobicomkit.api.attachment.FileClientService;
 import com.applozic.mobicomkit.broadcast.BroadcastService;
 import com.applozic.mobicomkit.broadcast.ConnectivityReceiver;
@@ -912,15 +913,30 @@ protected void onPostExecute(Long aLong) {
                 }
             }
             if (!TextUtils.isEmpty(responseForDeleteGroup) && SUCCESS.equals(responseForDeleteGroup)) {
-                Intent intent = new Intent(ChannelInfoActivity.this, ConversationActivity.class);
-                if (ApplozicClient.getInstance(ChannelInfoActivity.this).isContextBasedChat()) {
-                    intent.putExtra(ConversationUIService.CONTEXT_BASED_CHAT, true);
+                try {
+                    if (!TextUtils.isEmpty(alCustomizationSettings.getGroupDeletePackageName())) {
+                        Class HomeActivity = Class.forName(alCustomizationSettings.getGroupDeletePackageName().trim());
+                        if (HomeActivity != null) {
+                            userPreference.setDeleteChannel(true);
+                            Intent intent = new Intent(ChannelInfoActivity.this, HomeActivity);
+                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                            intent.putExtra(ConversationUIService.FROM_GROUP_DELETE, true);
+                            startActivity(intent);
+                            finish();
+                        }
+                    } else {
+                        Intent intent = new Intent(ChannelInfoActivity.this, ConversationActivity.class);
+                        if (ApplozicClient.getInstance(ChannelInfoActivity.this).isContextBasedChat()) {
+                            intent.putExtra(ConversationUIService.CONTEXT_BASED_CHAT, true);
+                        }
+                        startActivity(intent);
+                        userPreference.setDeleteChannel(true);
+                        finish();
+                    }
+                } catch (ClassNotFoundException e) {
+                    e.printStackTrace();
                 }
-                startActivity(intent);
-                userPreference.setDeleteChannel(true);
-                finish();
             }
-
         }
     }
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index 1b688b96..c02d799d 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -246,12 +246,6 @@ public void dismissErrorMessage() {
     @Override
     protected void onStop() {
         super.onStop();
-        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
-        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
-        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
-        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
-        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
-        ApplozicMqttIntentService.enqueueWork(this, intent);
     }
 
     @Override
@@ -269,7 +263,12 @@ protected void onResume() {
 
     @Override
     protected void onPause() {
-        //ApplozicMqttService.getInstance(this).unSubscribe();
+        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
+        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
+        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
+        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
+        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
+        ApplozicMqttIntentService.enqueueWork(this, intent);
         super.onPause();
     }
 
@@ -567,7 +566,7 @@ void beginCrop(Uri imageUri) {
     }
 
     @Override
-    public void onRequestPermissionsResult(int requestCode, String[] permissions,int[] grantResults) {
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
         if (requestCode == PermissionsUtils.REQUEST_STORAGE) {
             if (PermissionsUtils.verifyPermissions(grantResults)) {
                 showSnackBar(R.string.storage_permission_granted);
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 270f9811..b731e6de 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -2937,13 +2937,6 @@ public boolean onContextItemSelected(MenuItem item) {
     @Override
     public void onResume() {
         super.onResume();
-        if (MobiComUserPreference.getInstance(getActivity()).isChannelDeleted()) {
-            MobiComUserPreference.getInstance(getActivity()).setDeleteChannel(false);
-            if (getActivity().getSupportFragmentManager() != null) {
-                getActivity().getSupportFragmentManager().popBackStack();
-            }
-            return;
-        }
         ((ConversationActivity) getActivity()).setChildFragmentLayoutBGToTransparent();
         if (contact != null || channel != null) {
             BroadcastService.currentUserId = contact != null ? contact.getContactIds() : String.valueOf(channel.getKey());
