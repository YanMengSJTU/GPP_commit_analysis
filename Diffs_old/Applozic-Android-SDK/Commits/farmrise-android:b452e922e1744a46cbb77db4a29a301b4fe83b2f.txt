diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 442151cc..6d6e42db 100755
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -50,8 +50,9 @@
 
         <activity
             android:name=".HomeActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:configChanges="keyboardHidden|screenSize|locale|smallestScreenSize|screenLayout|orientation"
             android:exported="true"
+            android:launchMode="singleTop"
             android:label="@string/ecommerce"
             android:theme="@style/FarmRiseTheme"
             android:windowSoftInputMode="adjustPan"/>
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
index c1861548..45deee38 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -25,6 +25,7 @@
 
 import com.applozic.mobicomkit.Applozic;
 import com.applozic.mobicomkit.ApplozicClient;
+import com.applozic.mobicomkit.api.MobiComKitConstants;
 import com.applozic.mobicomkit.api.account.register.RegistrationResponse;
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
 import com.applozic.mobicomkit.api.account.user.PushNotificationTask;
@@ -153,7 +154,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     }
 
-  /*  private void goToFragment(Fragment selectedFragment) {
+    /*  private void goToFragment(Fragment selectedFragment) {
         FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
         fragmentTransaction.replace(R.id.layout_child_activity, selectedFragment);
         fragmentTransaction.commit();
@@ -207,7 +208,6 @@ private void initialize() {
         mStacks = new HashMap<>();
         mStacks.put(TAB_HOME, new Stack<Fragment>());
         mStacks.put(TAB_CHAT, new Stack<Fragment>());
-        Applozic.init(this, "orphan12e5101382f0cc751fa8c224");
 
 
     }
@@ -236,7 +236,7 @@ private void selectedTab(String tabId) {
                     }
                     startActivity(intent);*/
 
-                    addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
+                 addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
                     pushFragments(tabId, mobiComQuickConversationFragment, true);
 
                 } else {
@@ -408,12 +408,6 @@ public int getRetryCount() {
     protected void onStop() {
         isStopCalled = true;
         super.onStop();
-//        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
-//        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
-//        Intent intent = new Intent(this, ApplozicMqttIntentService.class);
-//        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
-//        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
-//        startService(intent);
     }
 
     @Override
@@ -423,6 +417,7 @@ protected void onResume() {
         LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
         Intent subscribeIntent = new Intent(this, ApplozicMqttIntentService.class);
         subscribeIntent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
+
         //startService(subscribeIntent);
 
         ApplozicMqttIntentService.enqueueWork(HomeActivity.this, subscribeIntent);
@@ -432,6 +427,7 @@ protected void onResume() {
                     ContactsContract.Contacts.CONTENT_URI, true, observer);
         }
 
+
         if (!Utils.isInternetAvailable(this)) {
             String errorMessage = getResources().getString(R.string.internet_connection_not_available);
             showErrorMessageView(errorMessage);
@@ -441,6 +437,7 @@ protected void onResume() {
     @Override
     protected void onPause() {
         LocalBroadcastManager.getInstance(this).unregisterReceiver(mobiComKitBroadcastReceiver);
+
 //<<<<<<< HEAD
 //        final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
 //        final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
@@ -448,10 +445,11 @@ protected void onPause() {
 //        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
 //        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
 //        ApplozicMqttIntentService.enqueueWork(HomeActivity.this, intent);
-//=======
+//
         if (observer != null && MobiComUserPreference.getInstance(this).isLoggedIn()) {
             getApplicationContext().getContentResolver().unregisterContentObserver(observer);
         }
+
         super.onPause();
     }
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
index 81c64b23..1a604d23 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/AlCustomizationSettings.java
@@ -450,10 +450,10 @@ public void setLogoutPackageName(String logoutPackageName) {
     }
 
     public String getGroupDeletePackageName() {
+
            return groupDeletePackageName;
           }
 
-
     public String getThemeColorPrimary() {
         return themeColorPrimary;
     }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index c772da06..fd55ed0a 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -122,16 +122,15 @@ public ConversationUIService(FragmentActivity fragmentActivity) {
         this.fileClientService = new FileClientService(fragmentActivity);
     }
 
-    public ConversationUIService(FragmentActivity fragmentActivity,MobiComQuickConversationFragment mobiComQuickConversationFragment) {
+    public ConversationUIService(FragmentActivity fragmentActivity, MobiComQuickConversationFragment mobiComQuickConversationFragment) {
         this.fragmentActivity = fragmentActivity;
         this.mobiComQuickConversationFragment = mobiComQuickConversationFragment;
         this.baseContactService = new AppContactService(fragmentActivity);
-        this.notificationManager  = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
+        this.notificationManager = (NotificationManager) fragmentActivity.getSystemService(Context.NOTIFICATION_SERVICE);
         this.userPreference = MobiComUserPreference.getInstance(fragmentActivity);
     }
 
 
-
 //    public MobiComQuickConversationFragment getQuickConversationFragment() {
 //
 //        MobiComQuickConversationFragment quickConversationFragment = (MobiComQuickConversationFragment) UIService.getFragmentByTag(fragmentActivity, QUICK_CONVERSATION_FRAGMENT);
@@ -177,6 +176,7 @@ public void run() {
                 if (conversationFragment == null) {
                     conversationFragment = ConversationFragment.newInstance(contact, null, conversationId, searchString);
                     ((MobiComKitActivityInterface) fragmentActivity).addFragment(conversationFragment);
+
                 } else {
                     UserProfileFragment userProfileFragment = (UserProfileFragment) UIService.getFragmentByTag(fragmentActivity, ConversationUIService.USER_PROFILE_FRAMENT);
                     MessageInfoFragment messageInfoFragment = (MessageInfoFragment) UIService.getFragmentByTag(fragmentActivity, ConversationUIService.MESSGAE_INFO_FRAGMENT);
@@ -454,9 +454,9 @@ public void addMessage(Message message) {
             }
 
             if (mobiComQuickConversationFragment != null) {
-                if(message.isHidden()){
+                if (message.isHidden()) {
                     mobiComQuickConversationFragment.refreshView();
-                }else {
+                } else {
                     mobiComQuickConversationFragment.addMessage(message);
                 }
             }
@@ -536,8 +536,9 @@ public void deleteMessage(String keyString, String userId) {
     public void updateLastSeenStatus(String contactId) {
         if (BroadcastService.isQuick()) {
             if( getQuickConversationFragment() == null){
-                               return;
-                }
+
+                return;
+            }
             getQuickConversationFragment().updateLastSeenStatus(contactId);
             return;
         }
@@ -949,7 +950,7 @@ public void reconnectMQTT() {
                     ((MobiComKitActivityInterface) fragmentActivity).retry();
                     Intent intent = new Intent(fragmentActivity, ApplozicMqttIntentService.class);
                     intent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
-                    ApplozicMqttIntentService.enqueueWork(fragmentActivity,intent);
+                    ApplozicMqttIntentService.enqueueWork(fragmentActivity, intent);
 
                 }
             }
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
index 4a02358f..6186e405 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ChannelInfoActivity.java
@@ -48,6 +48,7 @@
 import com.applozic.mobicomkit.api.MobiComKitConstants;
 import com.applozic.mobicomkit.api.account.user.MobiComUserPreference;
 import com.applozic.mobicomkit.api.account.user.RegisteredUsersAsyncTask;
+import com.applozic.mobicomkit.api.account.user.UserClientService;
 import com.applozic.mobicomkit.api.attachment.FileClientService;
 import com.applozic.mobicomkit.broadcast.BroadcastService;
 import com.applozic.mobicomkit.broadcast.ConnectivityReceiver;
@@ -920,6 +921,7 @@ protected void onPostExecute(Long aLong) {
 //                userPreference.setDeleteChannel(true);
 //                finish();
 
+
                 try {
                     if (!TextUtils.isEmpty(alCustomizationSettings.getGroupDeletePackageName())) {
                         Class HomeActivity = Class.forName(alCustomizationSettings.getGroupDeletePackageName().trim());
@@ -944,7 +946,6 @@ protected void onPostExecute(Long aLong) {
                     e.printStackTrace();
                 }
             }
-
         }
     }
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index 9f84d3f1..be58f4c2 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -254,6 +254,7 @@ protected void onStop() {
 //        intent.putExtra(ApplozicMqttIntentService.USER_KEY_STRING, userKeyString);
 //        intent.putExtra(ApplozicMqttIntentService.DEVICE_KEY_STRING, deviceKeyString);
 //        ApplozicMqttIntentService.enqueueWork(this, intent);
+
     }
 
     @Override
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index 75e042be..34e20664 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -2937,6 +2937,7 @@ public boolean onContextItemSelected(MenuItem item) {
     @Override
     public void onResume() {
         super.onResume();
+
        /* if (MobiComUserPreference.getInstance(getActivity()).isChannelDeleted()) {
             MobiComUserPreference.getInstance(getActivity()).setDeleteChannel(false);
             if (getActivity().getSupportFragmentManager() != null) {
@@ -2944,6 +2945,7 @@ public void onResume() {
             }
             return;
         }*/
+
         ((ConversationActivity) getActivity()).setChildFragmentLayoutBGToTransparent();
         if (contact != null || channel != null) {
             BroadcastService.currentUserId = contact != null ? contact.getContactIds() : String.valueOf(channel.getKey());
