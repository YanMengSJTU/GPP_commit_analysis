diff --git a/app/build.gradle b/app/build.gradle
index f5d36500..f744ba50 100755
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -20,7 +20,7 @@ android {
 
     defaultConfig {
         applicationId "com.mobicomkit.sample"
-        minSdkVersion 14
+        minSdkVersion 19
         targetSdkVersion 27
         versionCode 1
         versionName "1.0"
diff --git a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
index 7b0e11e7..d5078e1d 100644
--- a/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
+++ b/app/src/main/java/com/applozic/mobicomkit/sample/HomeActivity.java
@@ -64,6 +64,7 @@
     private HashMap<String, Stack<Fragment>> mStacks;
     private BottomNavigationView bottomNavigationView;
     private String currentTab;
+    private boolean isStopCalled = false;
     private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
             = new BottomNavigationView.OnNavigationItemSelectedListener() {
         @Override
@@ -88,6 +89,22 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
     };
     private int id = 0;
 
+    public static void addFragment(FragmentActivity fragmentActivity, Fragment fragmentToAdd, String fragmentTag) {
+        FragmentManager supportFragmentManager = fragmentActivity.getSupportFragmentManager();
+
+        FragmentTransaction fragmentTransaction = supportFragmentManager
+                .beginTransaction();
+        fragmentTransaction.replace(R.id.layout_child_activity, fragmentToAdd,
+                fragmentTag);
+
+        if (supportFragmentManager.getBackStackEntryCount() > 1) {
+            supportFragmentManager.popBackStackImmediate();
+        }
+        fragmentTransaction.addToBackStack(fragmentTag);
+        fragmentTransaction.commitAllowingStateLoss();
+        supportFragmentManager.executePendingTransactions();
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -104,18 +121,16 @@ protected void onCreate(Bundle savedInstanceState) {
         lastSeenStatusIntent.putExtra(UserIntentService.USER_LAST_SEEN_AT_STATUS, true);
         startService(lastSeenStatusIntent);
 
-        //addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
-
         mActionBar = getSupportActionBar();
         //Used to select an item programmatically
         //bottomNavigationView.getMenu().getItem(2).setChecked(true);
     }
 
-    private void goToFragment(Fragment selectedFragment) {
+  /*  private void goToFragment(Fragment selectedFragment) {
         FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
         fragmentTransaction.replace(R.id.layout_child_activity, selectedFragment);
         fragmentTransaction.commit();
-    }
+    }*/
 
     private void initialize() {
 
@@ -157,13 +172,12 @@ private void selectedTab(String tabId) {
                     startActivity(intent);*/
 
                     addFragment(this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
-
+                    pushFragments(tabId, mobiComQuickConversationFragment, true);
 
                 } else {
                     login();
                 }
 
-                //login();
                 break;
         }
         /*} else {
@@ -176,32 +190,64 @@ private void selectedTab(String tabId) {
     }
 
     public void pushFragments(String tag, Fragment fragment, boolean shouldAdd) {
-        if (shouldAdd)
-            mStacks.get(tag).push(fragment);
-        FragmentManager manager = getSupportFragmentManager();
-        FragmentTransaction ft = manager.beginTransaction();
-        ft.replace(R.id.layout_child_activity, fragment);
-        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
-        //ft.addToBackStack(null);
-        ft.commit();
+
+        if (!isStopCalled) {
+
+            if (!isFinishing() && !isDestroyed()) {
+                FragmentManager manager = getSupportFragmentManager();
+                if (fragment != null && getSupportFragmentManager() != null &&
+                        !getSupportFragmentManager().isDestroyed()) {
+
+                    if (shouldAdd)
+                    mStacks.get(tag).push(fragment);
+                    //FragmentManager manager = getSupportFragmentManager();
+                    FragmentTransaction ft = manager.beginTransaction();
+                    ft.replace(R.id.layout_child_activity, fragment);
+                    //ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN);
+                    //ft.addToBackStack(null);
+                    ft.commit();
+                }
+            }
+        }
     }
 
-    public void popFragments() {
-  /*
-   *    Select the second last fragment in current tab's stack..
-   *    which will be shown after the fragment transaction given below
-   */
-        Fragment fragment = mStacks.get(currentTab).elementAt(mStacks.get(currentTab).size() - 2);
-
-  /*pop current fragment from stack.. */
-        mStacks.get(currentTab).pop();
-
-  /* We have the target fragment in hand.. Just show it.. Show a standard navigation animation*/
-        FragmentManager manager = getSupportFragmentManager();
-        FragmentTransaction ft = manager.beginTransaction();
-        ft.replace(R.id.layout_child_activity, fragment);
-        ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_CLOSE);
-        ft.commit();
+    private void popFragments() {
+
+        Fragment fragment;
+
+        /*pop current fragment from stack.. */
+        if (mStacks.get(currentTab).get(mStacks.get(currentTab).size() - 1).getClass().getSimpleName().equals("ErrorFragment") ||
+                mStacks.get(currentTab).get(mStacks.get(currentTab).size() - 1).getClass().getSimpleName().equals("NoInternetFragment")) {
+
+            /*
+             *  Select the second last fragment in current tab's stack..
+             *  which will be shown after the fragment transaction given below
+             */
+            fragment = mStacks.get(currentTab).elementAt(mStacks.get(currentTab).size() - 3);
+
+            mStacks.get(currentTab).pop();
+            mStacks.get(currentTab).pop();
+        } else {
+
+            fragment = mStacks.get(currentTab).elementAt(mStacks.get(currentTab).size() - 2);
+            mStacks.get(currentTab).pop();
+        }
+
+        /* We have the target fragment in hand.. Just show it.. Show a standard navigation animation*/
+        if (!isStopCalled) {
+            if (!isFinishing() && !isDestroyed()) {
+
+                FragmentManager manager = getSupportFragmentManager();
+
+                if (fragment != null && getSupportFragmentManager() != null && !getSupportFragmentManager().isDestroyed()) {
+
+                    FragmentTransaction ft = manager.beginTransaction();
+                    ft.replace(R.id.layout_child_activity, fragment);
+                    ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_CLOSE);
+                    ft.commit();
+                }
+            }
+        }
     }
 
     @Override
@@ -284,7 +330,6 @@ public int getRetryCount() {
         return retry;
     }
 
-
     /*@Override
     public void onBackPressed() {
 
@@ -302,6 +347,7 @@ public void onBackPressed() {
     }*/
     @Override
     protected void onStop() {
+        isStopCalled = true;
         super.onStop();
         final String deviceKeyString = MobiComUserPreference.getInstance(this).getDeviceKeyString();
         final String userKeyString = MobiComUserPreference.getInstance(this).getSuUserKeyString();
@@ -314,6 +360,7 @@ protected void onStop() {
     @Override
     protected void onResume() {
         super.onResume();
+        isStopCalled = false;
         LocalBroadcastManager.getInstance(this).registerReceiver(mobiComKitBroadcastReceiver, BroadcastService.getIntentFilter());
         Intent subscribeIntent = new Intent(this, ApplozicMqttIntentService.class);
         subscribeIntent.putExtra(ApplozicMqttIntentService.SUBSCRIBE, true);
@@ -366,12 +413,13 @@ public void onFailure(RegistrationResponse registrationResponse, Exception excep
                         }
                     };
                     pushNotificationTask = new PushNotificationTask(
-                            Applozic.getInstance(context).getDeviceRegistrationId(), pushNotificationTaskListener, context);
+                            Applozic.getInstance(context).getDeviceRegistrationId(),
+                            pushNotificationTaskListener, context);
                     pushNotificationTask.execute((Void) null);
                 }
 
-                 ApplozicClient.getInstance(context).hideChatListOnNotification();
-                //pushFragments(TAB_CHAT, new MobiComQuickConversationFragment(), true);
+                ApplozicClient.getInstance(context).hideChatListOnNotification();
+
                 /*Intent intent = new Intent(HomeActivity.this, ConversationActivity.class);
                 if (ApplozicClient.getInstance(HomeActivity.this).isContextBasedChat()) {
                     intent.putExtra(ConversationUIService.CONTEXT_BASED_CHAT, true);
@@ -379,7 +427,7 @@ public void onFailure(RegistrationResponse registrationResponse, Exception excep
                //startActivity(intent);*/
 
                 addFragment(HomeActivity.this, mobiComQuickConversationFragment, ConversationUIService.QUICK_CONVERSATION_FRAGMENT); //here we are adding fragment
-
+                pushFragments(TAB_CHAT, mobiComQuickConversationFragment, true);
 
             }
 
@@ -409,7 +457,6 @@ public void onClick(DialogInterface dialog, int which) {
         //user.setAuthenticationTypeId(authenticationType.getValue());
 
 
-
         new UserLoginTask(user, listener, this).execute((Void) null);
 
     }
@@ -488,20 +535,5 @@ public void handleOnActivityResult(int requestCode, Intent intent) {
 
         }
     }
-    public static void addFragment(FragmentActivity fragmentActivity, Fragment fragmentToAdd, String fragmentTag) {
-        FragmentManager supportFragmentManager = fragmentActivity.getSupportFragmentManager();
-
-        FragmentTransaction fragmentTransaction = supportFragmentManager
-                .beginTransaction();
-        fragmentTransaction.replace(R.id.layout_child_activity, fragmentToAdd,
-                fragmentTag);
-
-        if (supportFragmentManager.getBackStackEntryCount() > 1) {
-            supportFragmentManager.popBackStackImmediate();
-        }
-        fragmentTransaction.addToBackStack(fragmentTag);
-        fragmentTransaction.commitAllowingStateLoss();
-        supportFragmentManager.executePendingTransactions();
-    }
 
 }
diff --git a/app/src/main/res/layout/activity_home.xml b/app/src/main/res/layout/activity_home.xml
index c311e938..a54bd044 100644
--- a/app/src/main/res/layout/activity_home.xml
+++ b/app/src/main/res/layout/activity_home.xml
@@ -21,7 +21,8 @@
         android:background="@color/conversation_list_all_background"
         android:layout_width="fill_parent"
         android:layout_height="fill_parent"
-        android:layout_gravity="left|top" />
+        android:layout_gravity="left|top"
+        android:layout_above="@+id/navigation"/>
 
 
     <android.support.design.widget.BottomNavigationView
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
index f8eab5fd..a011137e 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/ConversationUIService.java
@@ -149,7 +149,8 @@ public MobiComQuickConversationFragment getQuickConversationFragment() {
 
     public ConversationFragment getConversationFragment() {
 
-        ConversationFragment conversationFragment = (ConversationFragment) UIService.getFragmentByTag(fragmentActivity, CONVERSATION_FRAGMENT);
+        ConversationFragment conversationFragment = (ConversationFragment) UIService.getFragmentByTag
+                (fragmentActivity, CONVERSATION_FRAGMENT);
 
         if (conversationFragment == null) {
             Contact contact = ((ConversationActivity) fragmentActivity).getContact();
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
index dac40506..e95fd326 100755
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/activity/ConversationActivity.java
@@ -22,6 +22,7 @@
 import android.provider.ContactsContract;
 import android.provider.MediaStore;
 import android.provider.Settings;
+import android.support.annotation.NonNull;
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.ActivityCompat;
 import android.support.v4.app.DialogFragment;
@@ -781,6 +782,43 @@ public void addFragment(ConversationFragment conversationFragment) {
     }
 
     @Override
+    public void onBackPressed() {
+        ConversationFragment conversationFragment = (ConversationFragment) getSupportFragmentManager().findFragmentByTag(ConversationUIService.CONVERSATION_FRAGMENT);
+        if (conversationFragment != null && conversationFragment.isVisible() && (conversationFragment.multimediaPopupGrid.getVisibility() == View.VISIBLE)) {
+            conversationFragment.hideMultimediaOptionGrid();
+            return;
+        }
+        if (getSupportFragmentManager().getBackStackEntryCount() > 1) {
+            super.onBackPressed();
+            return;
+        }
+        if (getSupportFragmentManager().getBackStackEntryCount() == 1) {
+            try {
+                Intent upIntent = NavUtils.getParentActivityIntent(this);
+                if (upIntent != null && isTaskRoot()) {
+                    TaskStackBuilder.create(this).addNextIntentWithParentStack(upIntent).startActivities();
+                }
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+            this.finish();
+            return;
+        }
+        Boolean takeOrder = getIntent().getBooleanExtra(TAKE_ORDER, false);
+        if (takeOrder) {
+            Intent upIntent = NavUtils.getParentActivityIntent(this);
+            if (upIntent != null && isTaskRoot()) {
+                TaskStackBuilder.create(this).addNextIntentWithParentStack(upIntent).startActivities();
+            }
+            ConversationActivity.this.finish();
+        } else {
+            super.onBackPressed();
+        }
+
+    }
+
+
+   /* @Override
     public void onBackPressed() {
         if (getSupportFragmentManager().getBackStackEntryCount() == 1) {
             try {
@@ -810,7 +848,7 @@ public void onBackPressed() {
             super.onBackPressed();
         }
 
-    }
+    }*/
 
     @Override
     public void updateLatestMessage(Message message, String formattedContactNumber) {
@@ -862,7 +900,7 @@ public void onLocationChanged(Location location) {
     }
 
     @Override
-    public void onConnectionFailed(ConnectionResult connectionResult) {
+    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {
         if (connectionResult.hasResolution()) {
             try {
                 // Start an Activity that tries to resolve the error
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
index ced588f7..78837028 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComConversationFragment.java
@@ -24,6 +24,7 @@
 import android.os.CountDownTimer;
 import android.os.Vibrator;
 import android.provider.OpenableColumns;
+import android.support.annotation.NonNull;
 import android.support.v4.app.ActivityCompat;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.NotificationManagerCompat;
@@ -160,7 +161,8 @@
  * reg
  * Created by devashish on 10/2/15.
  */
-abstract public class MobiComConversationFragment extends Fragment implements View.OnClickListener, GestureDetector.OnGestureListener, ContextMenuClickListener {
+abstract public class MobiComConversationFragment extends Fragment implements View.OnClickListener,
+        GestureDetector.OnGestureListener, ContextMenuClickListener {
 
     //Todo: Increase the file size limit
     public static final int MAX_ALLOWED_FILE_SIZE = 10 * 1024 * 1024;
@@ -211,6 +213,8 @@
     protected Message messageToForward;
     protected String searchString;
     protected AlCustomizationSettings alCustomizationSettings;
+    protected TextView isTyping, bottomlayoutTextView;
+    protected LinearLayoutManager linearLayoutManager;
     String audio_duration;
     LinearLayout userNotAbleToChatLayout;
     int resourceId;
@@ -244,9 +248,16 @@
     int seconds = 0, minutes = 0;
     ApplozicDocumentView applozicDocumentView;
     ImageView slideImageView;
+    WeakReference<ImageButton> recordButtonWeakReference;
+    RecyclerView recyclerView;
+    RecyclerViewPositionHelper recyclerViewPositionHelper;
+    int positionInSmsList;
+    DetailedConversationAdapter recyclerDetailConversationAdapter;
+    MobicomMessageTemplate messageTemplate;
+    MobicomMessageTemplateAdapter templateAdapter;
+    boolean isAlreadyLoading;
     private EmojiconHandler emojiIconHandler;
     private Bitmap previewThumbnail;
-    protected TextView isTyping, bottomlayoutTextView;
     private String defaultText;
     private boolean typingStarted;
     private Integer channelKey;
@@ -260,15 +271,6 @@
     private EditText errorEditTextView;
     private RecyclerView messageTemplateView;
     private ImageView audioRecordIconImageView;
-    WeakReference<ImageButton> recordButtonWeakReference;
-    RecyclerView recyclerView;
-    RecyclerViewPositionHelper recyclerViewPositionHelper;
-    protected LinearLayoutManager linearLayoutManager;
-    int positionInSmsList;
-    DetailedConversationAdapter recyclerDetailConversationAdapter;
-    MobicomMessageTemplate messageTemplate;
-    MobicomMessageTemplateAdapter templateAdapter;
-    boolean isAlreadyLoading;
 
     public static int dp(float value) {
         return (int) Math.ceil(1 * value);
@@ -318,7 +320,7 @@ protected Bitmap processBitmap(Object data) {
 
     }
 
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         final View list = inflater.inflate(R.layout.mobicom_message_list, container, false);
         recyclerView = (RecyclerView) list.findViewById(R.id.messageList);
@@ -746,7 +748,8 @@ public void onClick(View v) {
             @Override
             public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                 if (recyclerDetailConversationAdapter != null) {
-                    recyclerDetailConversationAdapter.contactImageLoader.setPauseWork(newState == RecyclerView.SCROLL_STATE_DRAGGING);
+                    recyclerDetailConversationAdapter.contactImageLoader.
+                            setPauseWork(newState == RecyclerView.SCROLL_STATE_DRAGGING);
                 }
             }
 
diff --git a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
index 8604dd96..b636dc40 100644
--- a/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
+++ b/mobicomkitui/src/main/java/com/applozic/mobicomkit/uiwidgets/conversation/fragment/MobiComQuickConversationFragment.java
@@ -548,7 +548,8 @@ public void run() {
     }
 
     public void checkForEmptyConversations() {
-        boolean isLodingConversation = (downloadConversation != null && downloadConversation.getStatus() == AsyncTask.Status.RUNNING);
+        boolean isLodingConversation = (downloadConversation != null &&
+                downloadConversation.getStatus() == AsyncTask.Status.RUNNING);
         if (latestMessageForEachContact.isEmpty() && !isLodingConversation) {
 
             /*emptyTextView.setVisibility(View.VISIBLE);
@@ -1069,6 +1070,7 @@ public void run() {
     }
 
     private class SyncMessages extends AsyncTask<Void, Integer, Long> {
+
         SyncMessages() {
         }
 
diff --git a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
index 6997d284..4a01ab6c 100644
--- a/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
+++ b/mobicomkitui/src/main/res/layout/mobicom_message_list.xml
@@ -158,7 +158,7 @@
                 android:layout_height="wrap_content"
                 android:layout_alignParentBottom="true"
                 android:layout_centerHorizontal="true"
-                android:layout_margin="16dp"
+                android:layout_marginBottom="72dp"
                 android:textAllCaps="false"
                 android:text="New Chat"
                 android:textColor="#ffffff"
