diff --git a/android-networking/build.gradle b/android-networking/build.gradle
index e6a08f9..d41bcf1 100644
--- a/android-networking/build.gradle
+++ b/android-networking/build.gradle
@@ -47,4 +47,4 @@ dependencies {
     compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
     compile "com.android.support:appcompat-v7:$rootProject.ext.supportAppCompatVersion"
 }
-//apply from: 'upload.gradle'
+apply from: 'upload.gradle'
diff --git a/android-networking/src/main/java/com/androidnetworking/common/ANRequest.java b/android-networking/src/main/java/com/androidnetworking/common/ANRequest.java
index d85b1db..e0d5032 100644
--- a/android-networking/src/main/java/com/androidnetworking/common/ANRequest.java
+++ b/android-networking/src/main/java/com/androidnetworking/common/ANRequest.java
@@ -79,67 +79,67 @@
 @SuppressWarnings({"unchecked", "unused"})
 public class ANRequest<T extends ANRequest> {
 
-    private final static String TAG = ANRequest.class.getSimpleName();
-
-    private int mMethod;
-    private Priority mPriority;
-    private int mRequestType;
-    private String mUrl;
-    private int sequenceNumber;
-    private Object mTag;
-    private ResponseType mResponseType;
-    private HashMap<String, List<String>> mHeadersMap = new HashMap<>();
-    private HashMap<String, String> mBodyParameterMap = new HashMap<>();
-    private HashMap<String, String> mUrlEncodedFormBodyParameterMap = new HashMap<>();
-    private HashMap<String, MultipartStringBody> mMultiPartParameterMap = new HashMap<>();
-    private HashMap<String, List<String>> mQueryParameterMap = new HashMap<>();
-    private HashMap<String, String> mPathParameterMap = new HashMap<>();
-    private HashMap<String, List<MultipartFileBody>> mMultiPartFileMap = new HashMap<>();
-    private String mDirPath;
-    private String mFileName;
-    private String mApplicationJsonString = null;
-    private String mStringBody = null;
-    private byte[] mByte = null;
-    private File mFile = null;
-    private static final MediaType JSON_MEDIA_TYPE =
+    protected final static String TAG = ANRequest.class.getSimpleName();
+
+    protected int mMethod;
+    protected Priority mPriority;
+    protected int mRequestType;
+    protected String mUrl;
+    protected int sequenceNumber;
+    protected Object mTag;
+    protected ResponseType mResponseType;
+    protected HashMap<String, List<String>> mHeadersMap = new HashMap<>();
+    protected HashMap<String, String> mBodyParameterMap = new HashMap<>();
+    protected HashMap<String, String> mUrlEncodedFormBodyParameterMap = new HashMap<>();
+    protected HashMap<String, MultipartStringBody> mMultiPartParameterMap = new HashMap<>();
+    protected HashMap<String, List<String>> mQueryParameterMap = new HashMap<>();
+    protected HashMap<String, String> mPathParameterMap = new HashMap<>();
+    protected HashMap<String, List<MultipartFileBody>> mMultiPartFileMap = new HashMap<>();
+    protected String mDirPath;
+    protected String mFileName;
+    protected String mApplicationJsonString = null;
+    protected String mStringBody = null;
+    protected byte[] mByte = null;
+    protected File mFile = null;
+    protected static final MediaType JSON_MEDIA_TYPE =
             MediaType.parse("application/json; charset=utf-8");
-    private static final MediaType MEDIA_TYPE_MARKDOWN =
+    protected static final MediaType MEDIA_TYPE_MARKDOWN =
             MediaType.parse("text/x-markdown; charset=utf-8");
-    private MediaType customMediaType = null;
-    private static final Object sDecodeLock = new Object();
-
-    private Future future;
-    private Call call;
-    private int mProgress;
-    private boolean isCancelled;
-    private boolean isDelivered;
-    private boolean isRunning;
-    private int mPercentageThresholdForCancelling = 0;
-    private JSONArrayRequestListener mJSONArrayRequestListener;
-    private JSONObjectRequestListener mJSONObjectRequestListener;
-    private StringRequestListener mStringRequestListener;
-    private OkHttpResponseListener mOkHttpResponseListener;
-    private BitmapRequestListener mBitmapRequestListener;
-    private ParsedRequestListener mParsedRequestListener;
-    private OkHttpResponseAndJSONObjectRequestListener mOkHttpResponseAndJSONObjectRequestListener;
-    private OkHttpResponseAndJSONArrayRequestListener mOkHttpResponseAndJSONArrayRequestListener;
-    private OkHttpResponseAndStringRequestListener mOkHttpResponseAndStringRequestListener;
-    private OkHttpResponseAndBitmapRequestListener mOkHttpResponseAndBitmapRequestListener;
-    private OkHttpResponseAndParsedRequestListener mOkHttpResponseAndParsedRequestListener;
-    private DownloadProgressListener mDownloadProgressListener;
-    private UploadProgressListener mUploadProgressListener;
-    private DownloadListener mDownloadListener;
-    private AnalyticsListener mAnalyticsListener;
-
-    private Bitmap.Config mDecodeConfig;
-    private int mMaxWidth;
-    private int mMaxHeight;
-    private ImageView.ScaleType mScaleType;
-    private CacheControl mCacheControl = null;
-    private Executor mExecutor = null;
-    private OkHttpClient mOkHttpClient = null;
-    private String mUserAgent = null;
-    private Type mType = null;
+    protected MediaType customMediaType = null;
+    protected static final Object sDecodeLock = new Object();
+
+    protected Future future;
+    protected Call call;
+    protected int mProgress;
+    protected boolean isCancelled;
+    protected boolean isDelivered;
+    protected boolean isRunning;
+    protected int mPercentageThresholdForCancelling = 0;
+    protected JSONArrayRequestListener mJSONArrayRequestListener;
+    protected JSONObjectRequestListener mJSONObjectRequestListener;
+    protected StringRequestListener mStringRequestListener;
+    protected OkHttpResponseListener mOkHttpResponseListener;
+    protected BitmapRequestListener mBitmapRequestListener;
+    protected ParsedRequestListener mParsedRequestListener;
+    protected OkHttpResponseAndJSONObjectRequestListener mOkHttpResponseAndJSONObjectRequestListener;
+    protected OkHttpResponseAndJSONArrayRequestListener mOkHttpResponseAndJSONArrayRequestListener;
+    protected OkHttpResponseAndStringRequestListener mOkHttpResponseAndStringRequestListener;
+    protected OkHttpResponseAndBitmapRequestListener mOkHttpResponseAndBitmapRequestListener;
+    protected OkHttpResponseAndParsedRequestListener mOkHttpResponseAndParsedRequestListener;
+    protected DownloadProgressListener mDownloadProgressListener;
+    protected UploadProgressListener mUploadProgressListener;
+    protected DownloadListener mDownloadListener;
+    protected AnalyticsListener mAnalyticsListener;
+
+    protected Bitmap.Config mDecodeConfig;
+    protected int mMaxWidth;
+    protected int mMaxHeight;
+    protected ImageView.ScaleType mScaleType;
+    protected CacheControl mCacheControl = null;
+    protected Executor mExecutor = null;
+    protected OkHttpClient mOkHttpClient = null;
+    protected String mUserAgent = null;
+    protected Type mType = null;
 
     public ANRequest(GetRequestBuilder builder) {
         this.mRequestType = RequestType.SIMPLE;
diff --git a/android-networking/upload.gradle b/android-networking/upload.gradle
index 0dbf33f..3141ead 100755
--- a/android-networking/upload.gradle
+++ b/android-networking/upload.gradle
@@ -15,87 +15,29 @@
  *    limitations under the License.
  */
 
-apply plugin: 'com.github.dcendents.android-maven'
-apply plugin: "com.jfrog.bintray"
+ext {
+    bintrayRepo = 'maven'
+    bintrayName = 'android-networking'
 
-def siteUrl = 'https://github.com/amitshekhariitbhu/Fast-Android-Networking'
-def gitUrl = 'https://github.com/amitshekhariitbhu/Fast-Android-Networking.git'
+    publishedGroupId = 'com.hk0792.android'
+    libraryName = 'AndroidNetworking'
+    artifact = 'android-networking'
 
-group = "com.amitshekhar.android"
-version = '1.0.2'
+    libraryDescription = 'Fast Android Networking is a powerful library for doing any type of networking in Android applications'
 
-install {
-    repositories.mavenInstaller {
-        pom.project {
-            packaging 'aar'
+    siteUrl = 'https://github.com/hk0792/Fast-Android-Networking'
+    gitUrl = 'https://github.com/hk0792/Fast-Android-Networking.git'
 
-            name 'Fast Android Networking'
-            description 'Fast Android Networking is a powerful library for doing any type of networking in Android applications'
+    libraryVersion = '1.0.2'
 
-            url siteUrl
+    developerId = 'hk0792'
+    developerName = 'Allen Huang'
+    developerEmail = 'hk0792@gmail.com'
 
-            licenses {
-                license {
-                    name 'The Apache Software License, Version 2.0'
-                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
-                }
-            }
-
-            developers {
-                developer {
-                    id 'amitshekhariitbhu'
-                    name 'Amit Shekhar'
-                    email 'amit.shekhar.iitbhu@gmail.com'
-                }
-            }
-
-            scm {
-                connection gitUrl
-                developerConnection gitUrl
-                url siteUrl
-            }
-        }
-    }
-}
-
-task sourcesJar(type: Jar) {
-    from android.sourceSets.main.java.srcDirs
-    classifier = 'sources'
+    licenseName = 'The Apache Software License, Version 2.0'
+    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
+    allLicenses = ["Apache-2.0"]
 }
 
-task javadoc(type: Javadoc) {
-    source = android.sourceSets.main.java.srcDirs
-    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    classpath += configurations.compile
-}
-
-task javadocJar(type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from javadoc.destinationDir
-}
-artifacts {
-    archives javadocJar
-    archives sourcesJar
-}
-
-if (project.rootProject.file("local.properties").exists()) {
-    Properties properties = new Properties()
-    properties.load(project.rootProject.file('local.properties').newDataInputStream())
-
-    bintray {
-        user = properties.getProperty("bintray.user")
-        key = properties.getProperty("bintray.apikey")
-
-        configurations = ['archives']
-        dryRun = false
-
-        pkg {
-            repo = "maven"
-            name = "android-networking"
-            websiteUrl = siteUrl
-            vcsUrl = gitUrl
-            licenses = ["Apache-2.0"]
-            publish = true
-        }
-    }
-}
+apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
+apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
diff --git a/rx2-android-networking/build.gradle b/rx2-android-networking/build.gradle
index 24dd65e..40aa666 100644
--- a/rx2-android-networking/build.gradle
+++ b/rx2-android-networking/build.gradle
@@ -45,4 +45,4 @@ dependencies {
     compile "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJava2Version"
     compile project(':android-networking')
 }
-//apply from: 'rx2-upload.gradle'
+apply from: 'rx2-upload.gradle'
diff --git a/rx2-android-networking/rx2-upload.gradle b/rx2-android-networking/rx2-upload.gradle
index bd5fb3f..549b879 100755
--- a/rx2-android-networking/rx2-upload.gradle
+++ b/rx2-android-networking/rx2-upload.gradle
@@ -16,88 +16,29 @@
  *  *    limitations under the License.
  *
  */
+ext {
+    bintrayRepo = 'maven'
+    bintrayName = 'rx2-android-networking'
 
-apply plugin: 'com.github.dcendents.android-maven'
-apply plugin: "com.jfrog.bintray"
+    publishedGroupId = 'com.hk0792.android'
+    libraryName = 'Rx2AndroidNetworking'
+    artifact = 'rx2-android-networking'
 
-def siteUrl = 'https://github.com/amitshekhariitbhu/Fast-Android-Networking'
-def gitUrl = 'https://github.com/amitshekhariitbhu/Fast-Android-Networking.git'
+    libraryDescription = 'Fast Android Networking is a powerful library for doing any type of networking in Android applications'
 
-group = "com.amitshekhar.android"
-version = '1.0.2'
+    siteUrl = 'https://github.com/hk0792/Fast-Android-Networking'
+    gitUrl = 'https://github.com/hk0792/Fast-Android-Networking.git'
 
-install {
-    repositories.mavenInstaller {
-        pom.project {
-            packaging 'aar'
+    libraryVersion = '1.0.2'
 
-            name 'Fast Android Networking'
-            description 'Fast Android Networking is a powerful library for doing any type of networking in Android applications'
+    developerId = 'hk0792'
+    developerName = 'Allen Huang'
+    developerEmail = 'hk0792@gmail.com'
 
-            url siteUrl
-
-            licenses {
-                license {
-                    name 'The Apache Software License, Version 2.0'
-                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
-                }
-            }
-
-            developers {
-                developer {
-                    id 'amitshekhariitbhu'
-                    name 'Amit Shekhar'
-                    email 'amit.shekhar.iitbhu@gmail.com'
-                }
-            }
-
-            scm {
-                connection gitUrl
-                developerConnection gitUrl
-                url siteUrl
-            }
-        }
-    }
-}
-
-task sourcesJar(type: Jar) {
-    from android.sourceSets.main.java.srcDirs
-    classifier = 'sources'
-}
-
-task javadoc(type: Javadoc) {
-    source = android.sourceSets.main.java.srcDirs
-    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    classpath += configurations.compile
+    licenseName = 'The Apache Software License, Version 2.0'
+    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
+    allLicenses = ["Apache-2.0"]
 }
 
-task javadocJar(type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from javadoc.destinationDir
-}
-artifacts {
-    archives javadocJar
-    archives sourcesJar
-}
-
-if (project.rootProject.file("local.properties").exists()) {
-    Properties properties = new Properties()
-    properties.load(project.rootProject.file('local.properties').newDataInputStream())
-
-    bintray {
-        user = properties.getProperty("bintray.user")
-        key = properties.getProperty("bintray.apikey")
-
-        configurations = ['archives']
-        dryRun = false
-
-        pkg {
-            repo = "maven"
-            name = "rx2-android-networking"
-            websiteUrl = siteUrl
-            vcsUrl = gitUrl
-            licenses = ["Apache-2.0"]
-            publish = true
-        }
-    }
-}
+apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
+apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
