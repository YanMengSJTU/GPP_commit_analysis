diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index d98f777..c831d85 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~    Copyright (C) 2016 Amit Shekhar
   ~    Copyright (C) 2011 Android Open Source Project
   ~
@@ -37,10 +36,11 @@
             </intent-filter>
         </activity>
 
-        <activity android:name=".ImageGridActivity"></activity>
-        <activity android:name=".ApiTestActivity"></activity>
-        <activity android:name=".OkHttpResponseTestActivity"></activity>
-        <activity android:name=".WebSocketActivity"></activity>
+        <activity android:name=".ImageGridActivity" />
+        <activity android:name=".ApiTestActivity" />
+        <activity android:name=".OkHttpResponseTestActivity" />
+        <activity android:name=".WebSocketActivity" />
+        <activity android:name=".DownloadLargeFileActivity" />
     </application>
 
-</manifest>
+</manifest>
\ No newline at end of file
diff --git a/app/src/main/java/com/networking/DownloadLargeFileActivity.java b/app/src/main/java/com/networking/DownloadLargeFileActivity.java
new file mode 100644
index 0000000..be6f9ea
--- /dev/null
+++ b/app/src/main/java/com/networking/DownloadLargeFileActivity.java
@@ -0,0 +1,90 @@
+package com.networking;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Looper;
+import android.support.annotation.Nullable;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+
+import com.androidnetworking.AndroidNetworking;
+import com.androidnetworking.common.Priority;
+import com.androidnetworking.error.ANError;
+import com.androidnetworking.interfaces.AnalyticsListener;
+import com.androidnetworking.interfaces.DownloadListener;
+import com.androidnetworking.interfaces.DownloadProgressListener;
+import com.networking.utils.Utils;
+
+/**
+ * Created by johnwatsondev on 27/08/2017.
+ */
+public class DownloadLargeFileActivity extends AppCompatActivity {
+    private static final String TAG = DownloadLargeFileActivity.class.getSimpleName();
+
+    public static Intent callIntent(Context context) {
+        Intent intent = new Intent(context, DownloadLargeFileActivity.class);
+        if (!(context instanceof Activity)) {
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        }
+        return intent;
+    }
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        downloadFile();
+    }
+
+    private void downloadFile() {
+        String url = "https://gitlab-fqgj.fqgj.net/zhaofeng/TestDownloadLargeFile/raw/master/AndroidPdf.pdf";
+        AndroidNetworking.download(url, Utils.getRootDirPath(getApplicationContext()), "AndroidPdf.pdf")
+                .setPriority(Priority.HIGH)
+                .setTag("TestDownloadLargeFileActivity")
+                .build()
+                .setAnalyticsListener(new AnalyticsListener() {
+                    @Override
+                    public void onReceived(long timeTakenInMillis, long bytesSent, long bytesReceived, boolean isFromCache) {
+                        Log.d(TAG, " timeTakenInMillis : " + timeTakenInMillis);
+                        Log.d(TAG, " bytesSent : " + bytesSent);
+                        Log.d(TAG, " bytesReceived : " + bytesReceived);
+                        Log.d(TAG, " isFromCache : " + isFromCache);
+                    }
+                })
+                .setDownloadProgressListener(new DownloadProgressListener() {
+                    @Override
+                    public void onProgress(long bytesDownloaded, long totalBytes) {
+                        Log.d(TAG, "bytesDownloaded : " + bytesDownloaded + " totalBytes : " + totalBytes);
+                        Log.d(TAG, "setDownloadProgressListener isMainThread : " + String.valueOf(Looper.myLooper() == Looper.getMainLooper()));
+//                        if (bytesDownloaded > 50) {
+//                            AndroidNetworking.cancel("cleanupDestinationTest");
+//                            Log.d(TAG, "cancel: cleanupDestinationTest");
+//                        }
+                    }
+                })
+                .startDownload(new DownloadListener() {
+                    @Override
+                    public void onDownloadComplete() {
+                        Log.d(TAG, "File download Completed");
+                        Log.d(TAG, "onDownloadComplete isMainThread : " + String.valueOf(Looper.myLooper() == Looper.getMainLooper()));
+                    }
+
+                    @Override
+                    public void onError(ANError error) {
+                        if (error.getErrorCode() != 0) {
+                            // received ANError from server
+                            // error.getErrorCode() - the ANError code from server
+                            // error.getErrorBody() - the ANError body from server
+                            // error.getErrorDetail() - just an ANError detail
+                            Log.d(TAG, "onError errorCode : " + error.getErrorCode());
+                            Log.d(TAG, "onError errorBody : " + error.getErrorBody());
+                            Log.d(TAG, "onError errorDetail : " + error.getErrorDetail());
+                        } else {
+                            // error.getErrorDetail() : connectionError, parseError, requestCancelledError
+                            Log.d(TAG, "onError errorDetail : " + error.getErrorDetail());
+                        }
+                    }
+                });
+    }
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/networking/MainActivity.java b/app/src/main/java/com/networking/MainActivity.java
index 15b4881..f2443a1 100644
--- a/app/src/main/java/com/networking/MainActivity.java
+++ b/app/src/main/java/com/networking/MainActivity.java
@@ -61,6 +61,10 @@ protected void onCreate(Bundle savedInstanceState) {
         makeJSONObjectRequest();
     }
 
+    public void makeDownloadLargeFileRequests(View v) {
+        startActivity(DownloadLargeFileActivity.callIntent(this));
+    }
+
     private void makeJSONArrayRequest() {
         AndroidNetworking.get(ApiEndPoint.BASE_URL + ApiEndPoint.GET_JSON_ARRAY)
                 .setTag(this)
@@ -141,10 +145,10 @@ public void onError(ANError error) {
     }
 
     public void makeRequests(View view) {
-        for (int i = 0; i < 10; i++) {
-            makeJSONArrayRequest();
-            makeJSONObjectRequest();
-        }
+//        for (int i = 0; i < 10; i++) {
+        makeJSONArrayRequest();
+        makeJSONObjectRequest();
+//        }
     }
 
     public void cancelAllRequests(View view) {
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
index 6dd97b4..e815e9c 100644
--- a/app/src/main/res/layout/activity_main.xml
+++ b/app/src/main/res/layout/activity_main.xml
@@ -28,6 +28,14 @@
         android:paddingRight="@dimen/activity_horizontal_margin"
         android:paddingTop="@dimen/activity_vertical_margin">
 
+        <Button
+            android:id="@+id/downloadLargeFileRequestButton"
+            android:layout_width="match_parent"
+            android:layout_height="48dp"
+            android:layout_margin="8dp"
+            android:onClick="makeDownloadLargeFileRequests"
+            android:text="Download large file Requests" />
+
         <ProgressBar
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
diff --git a/app/src/test/java/com/androidnetworking/ExampleUnitTest.java b/app/src/test/java/com/networking/ExampleUnitTest.java
similarity index 96%
rename from app/src/test/java/com/androidnetworking/ExampleUnitTest.java
rename to app/src/test/java/com/networking/ExampleUnitTest.java
index bbc8754..baabe2f 100644
--- a/app/src/test/java/com/androidnetworking/ExampleUnitTest.java
+++ b/app/src/test/java/com/networking/ExampleUnitTest.java
@@ -15,7 +15,7 @@
  *    limitations under the License.
  */
 
-package com.androidnetworking;
+package com.networking;
 
 import org.junit.Test;
 
