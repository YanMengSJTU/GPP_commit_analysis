diff --git a/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java b/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java
index c618339..aaa4e77 100644
--- a/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java
+++ b/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java
@@ -28,7 +28,7 @@
     void registerListener(Listener listener);
 
     /**
-     * Notify all listeners that an event has occured
+     * Notify all listeners that an event has occurred
      *
      * @param event The event to call
      */
diff --git a/src/main/java/com/samczsun/skype4j/internal/ContactImpl.java b/src/main/java/com/samczsun/skype4j/internal/ContactImpl.java
index c8cfc45..cd9ab37 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ContactImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ContactImpl.java
@@ -30,6 +30,7 @@
 
 import java.awt.*;
 import java.awt.image.BufferedImage;
+import java.util.UUID;
 import java.util.regex.Pattern;
 
 public class ContactImpl implements Contact {
@@ -57,6 +58,11 @@ public static Contact createContact(SkypeImpl skype, String username) throws Con
     private boolean isAuthorized;
     private boolean isBlocked;
 
+    // What is this?
+    private String authCertificate;
+    private UUID personId;
+    private String type;
+
     ContactImpl(SkypeImpl skype, String username) throws ConnectionException {
         this.skype = skype;
         this.username = username;
@@ -261,6 +267,9 @@ public void update(JsonObject contact) {
         this.isBlocked = contact.get("blocked").asBoolean();
         this.displayName = Utils.getString(contact, "display_name");
         this.avatarURL = Utils.getString(contact, "avatar_url");
+        this.mood = Utils.getString(contact, "mood");
+        this.type = Utils.getString(contact, "type");
+        this.authCertificate = Utils.getString(contact, "auth_certificate");
         this.firstName = contact.get("name") == null ? null : Utils.getString(contact.get("name").asObject(), "first");
         if (contact.get("locations") != null) {
             JsonObject locations = contact.get("locations").asArray().get(0).asObject();
diff --git a/src/main/java/com/samczsun/skype4j/internal/Endpoints.java b/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
index f9cea8a..4e0c1df 100644
--- a/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
+++ b/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
@@ -108,7 +108,7 @@
     public static final Endpoints ACTIVE = new Endpoints(
             "https://%sclient-s.gateway.messenger.live.com/v1/users/ME/endpoints/%s/active").cloud().regtoken();
     public static final Endpoints LOAD_CHATS = new Endpoints(
-            "https://client-s.gateway.messenger.live.com/v1/users/ME/conversations?startTime=%s&pageSize=%s&view=msnp24Equivalent&targetType=Passport|Skype|Lync|Thread")
+            "https://client-s.gateway.messenger.live.com/v1/users/ME/conversations?startTime=%s&pageSize=%s&view=msnp24Equivalent&targetType=Passport|Skype|Lync|Thread|PSTN|Agent")
             .regtoken();
     public static final Endpoints LOAD_MESSAGES = new Endpoints(
             "https://client-s.gateway.messenger.live.com/v1/users/ME/conversations/%s/messages?startTime=0&pageSize=%s&view=msnp24Equivalent|supportsMessageProperties&targetType=Passport|Skype|Lync|Thread")
@@ -128,7 +128,7 @@
     public static final Endpoints SEARCH_SKYPE_DIRECTORY = new Endpoints(
             "https://api.skype.com/search/users/any?keyWord=%s&contactTypes[]=skype").skypetoken();
     public static final Endpoints GET_ALL_CONTACTS = new Endpoints(
-            "https://contacts.skype.com/contacts/v1/users/%s/contacts?$filter=type%%20eq%%20%%27skype%%27%%20or%%20type%%20eq%%20%%27msn%%27%%20or%%20type%%20eq%%20%%27pstn%%27%%20or%%20type%%20eq%%20%%27agent%%27&reason=%s")
+            "https://contacts.skype.com/contacts/v1/users/%s/contacts?delta&$filter=type%%20eq%%20%%27skype%%27%%20or%%20type%%20eq%%20%%27msn%%27%%20or%%20type%%20eq%%20%%27pstn%%27%%20or%%20type%%20eq%%20%%27agent%%27%%20or%%20type%%20eq%%20%%27lync%%27&reason=%s")
             .skypetoken();
     public static final Endpoints GET_CONTACT_BY_ID = new Endpoints(
             "https://contacts.skype.com/contacts/v1/users/%s/contacts?$filter=id%%20eq%%20%%27%s%%27&reason=default").skypetoken();
@@ -152,6 +152,14 @@
             "https://go.trouter.io/v2/h?ccid=%s&dom=web.skype.com");
     public static final Endpoints ELIGIBILITY_CHECK = new Endpoints("https://web.skype.com/api/v2/eligibility-check").skypetoken();
 
+    // todo implement
+    // what other scopes are there?
+    public static final Endpoints LANGUAGES_GET = new Endpoints("https://dev.microsofttranslator.com/api/languages?scope=text").skypetoken();
+
+    public static final Endpoints NEW_KEY = new Endpoints("https://kes.skype.com/v2/swx/newkey").skypetoken();
+    public static final Endpoints PETOKEN = new Endpoints("https://static.asm.skype.com/pes/v1/petoken").defaultHeader("Authorization", AUTHORIZATION);
+    public static final Endpoints PROFILE = new Endpoints("https://api.skype.com/users/self/profile").skypetoken();
+
     private boolean requiresCloud;
     private boolean requiresRegToken;
     private boolean requiresSkypeToken;
@@ -384,8 +392,10 @@ public E_TYPE connect(String method, byte[] rawData) throws ConnectionException
             } catch (IOException e) {
                 throw ExceptionHandler.generateException(cause, e);
             } finally {
-                if (connection != null) {
-                    connection.disconnect();
+                if (clazz != InputStream.class && clazz != HttpURLConnection.class) {
+                    if (connection != null) {
+                        connection.disconnect();
+                    }
                 }
             }
         }
diff --git a/src/main/java/com/samczsun/skype4j/user/Contact.java b/src/main/java/com/samczsun/skype4j/user/Contact.java
index 925db10..e6ec436 100644
--- a/src/main/java/com/samczsun/skype4j/user/Contact.java
+++ b/src/main/java/com/samczsun/skype4j/user/Contact.java
@@ -85,6 +85,7 @@
      *
      * @return The mood as richtext
      */
+    @Deprecated
     String getRichMood();
 
     /**
