diff --git a/src/main/java/com/samczsun/skype4j/Skype.java b/src/main/java/com/samczsun/skype4j/Skype.java
index d81e738..5bd979b 100644
--- a/src/main/java/com/samczsun/skype4j/Skype.java
+++ b/src/main/java/com/samczsun/skype4j/Skype.java
@@ -50,8 +50,9 @@
      * @throws NotParticipatingException   If the guest account cannot log in due to the chat not being open
      * @throws com.samczsun.skype4j.exceptions.WrongPasswordException
      * @throws com.samczsun.skype4j.exceptions.AccountNotFoundException
+     * @throws com.samczsun.skype4j.exceptions.SuspiciousLoginException
      */
-    void login() throws InvalidCredentialsException, ConnectionException, NotParticipatingException, WrongPasswordException, AccountNotFoundException;
+    void login() throws InvalidCredentialsException, ConnectionException, NotParticipatingException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException;
 
     /**
      * Subscribe to the HTTP long polling service.
diff --git a/src/main/java/com/samczsun/skype4j/SkypeBuilder.java b/src/main/java/com/samczsun/skype4j/SkypeBuilder.java
index 91905d4..0a306d2 100644
--- a/src/main/java/com/samczsun/skype4j/SkypeBuilder.java
+++ b/src/main/java/com/samczsun/skype4j/SkypeBuilder.java
@@ -118,6 +118,7 @@ public SkypeBuilder withChat(String id) {
      * Build the Skype instance!
      *
      * @return The Skype instance
+     * @throws com.samczsun.skype4j.exceptions.ConnectionException
      */
     public Skype build() throws ConnectionException {
         if (resources.isEmpty()) {
diff --git a/src/main/java/com/samczsun/skype4j/exceptions/SuspiciousLoginException.java b/src/main/java/com/samczsun/skype4j/exceptions/SuspiciousLoginException.java
new file mode 100644
index 0000000..d567577
--- /dev/null
+++ b/src/main/java/com/samczsun/skype4j/exceptions/SuspiciousLoginException.java
@@ -0,0 +1,26 @@
+/*
+ * Copyright 2019 seti.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.samczsun.skype4j.exceptions;
+
+/**
+ *
+ * @author seti
+ */
+public class SuspiciousLoginException extends Exception {
+  public SuspiciousLoginException(String msg) {
+    super(msg);
+  }
+}
\ No newline at end of file
diff --git a/src/main/java/com/samczsun/skype4j/formatting/Generator.java b/src/main/java/com/samczsun/skype4j/formatting/Generator.java
index 210ecd0..bb36580 100644
--- a/src/main/java/com/samczsun/skype4j/formatting/Generator.java
+++ b/src/main/java/com/samczsun/skype4j/formatting/Generator.java
@@ -16,69 +16,7 @@
 
 package com.samczsun.skype4j.formatting;
 
-import com.samczsun.skype4j.Skype;
-import com.samczsun.skype4j.SkypeBuilder;
-import com.samczsun.skype4j.events.EventHandler;
-import com.samczsun.skype4j.events.Listener;
-import com.samczsun.skype4j.events.chat.message.MessageReceivedEvent;
-import com.samczsun.skype4j.events.chat.message.MessageSentEvent;
-import com.samczsun.skype4j.participants.Participant;
-
-import java.util.Collection;
-
 public class Generator {
     private static final String LANG = "en"; //Change to whatever lang you want
     private static final String VERSION = "908_1.20.0.98"; //Magic number
-
-//    public static void main(String[] args) throws Exception {
-//       
-//        System.out.println("1");
-////        Skype skype = new SkypeBuilder("haroflow", "14wolforah91").withAllResources().build();
-////        Skype skype = new SkypeBuilder("skype2@setinet.com.br", "Sk2Hy9px").withAllResources().build();
-////        Skype skype = new SkypeBuilder("47988551018", "13256seti").withAllResources().build();
-//        Skype skype = new SkypeBuilder("setinet_conta_teste1@outlook.com", "13256seti").withAllResources().build();
-//        System.out.println("2");
-//        skype.login();
-//         System.out.println("3");
-//        skype.getEventDispatcher().registerListener(new Listener() {
-//          @EventHandler
-//          public void onMessageSent(MessageSentEvent e) {
-//            System.out.println("Sent message: " + e.getMessage().getContent());
-//            System.out.println(e.getChat().getIdentity());
-//            if (e.getChat().getIdentity().startsWith("8")){
-//                System.out.println("individual");
-//            } else {
-//                System.out.println("grupo");
-//            }
-//            //+ e.getMessage().getClientId() + e.getChat().getParticipant(e.getMessage().getSender().getId()).getClient().getUsername());
-//            System.out.println("5");
-//          }
-//          @EventHandler
-//          public void onMessageReceived(MessageReceivedEvent e) {
-//            System.out.println("Got message: " + e.getMessage().getContent());
-//            Collection<Participant> users;
-//            users = e.getChat().getAllParticipants();
-//            for (Participant each : users) {
-//                String teste = each.getDisplayName();
-//                String teste2 = each.getId();
-//                System.out.println(teste);
-//                System.out.println(teste2);
-//            }
-////            System.out.println(e.getChat().getParticipant("8:live:skype2_1132").getDisplayName());
-//            System.out.println(e.getChat().getIdentity());
-//            if (e.getChat().getIdentity().startsWith("8")){
-//                System.out.println("individual");
-//            } else {
-//                System.out.println("grupo");
-//            }
-//            //+ e.getMessage().getClientId() + e.getMessage().getId() + e.getChat().getClient().getLiveUsername()
-//            //+ e.getChat().getParticipant(e.getChat().getIdentity()).getClient().getUsername()
-//            System.out.println("4");
-//          }
-//        });
-//        skype.subscribe();
-////        skype.setVisibility(Visibility.DO_NOT_DISTURB);
-//        // Do stuff
-//        //skype.logout();
-//    }
 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index ab67523..333d386 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -149,7 +149,7 @@ public String format(LogRecord record) {
     }
     
     @Override
-    public void login() throws ConnectionException, InvalidCredentialsException, WrongPasswordException, AccountNotFoundException {
+    public void login() throws ConnectionException, InvalidCredentialsException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
         Endpoints.ELIGIBILITY_CHECK.open(this)
                 .expect(200, "You are not eligible to use Skype for Web!")
                 .get();
@@ -168,7 +168,7 @@ public void login() throws ConnectionException, InvalidCredentialsException, Wro
             while (!scheduler.isTerminated()) ;
         }
         shutdownThread = Executors.newSingleThreadExecutor(new SkypeThreadFactory(this, "Shutdown"));
-        scheduler = Executors.newFixedThreadPool(4, new SkypeThreadFactory(this, "Poller"));
+        scheduler = Executors.newFixedThreadPool(1, new SkypeThreadFactory(this, "Poller"));
         (serverPingThread = new ServerPingThread(this)).start();
         (reauthThread = new AuthenticationChecker(this)).start();
     }
@@ -525,7 +525,7 @@ public void subscribe() throws ConnectionException {
         }
     }
 
-    public void reauthenticate() throws ConnectionException, InvalidCredentialsException, NotParticipatingException, WrongPasswordException, AccountNotFoundException {
+    public void reauthenticate() throws ConnectionException, InvalidCredentialsException, NotParticipatingException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
         //todo: keep subscribed until reauth is finished so events aren't lost
         doShutdown();
         login();
diff --git a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
index cad0660..24a0b7c 100644
--- a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
+++ b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
@@ -20,11 +20,13 @@
 import com.eclipsesource.json.JsonObject;
 import com.eclipsesource.json.JsonValue;
 import com.samczsun.skype4j.chat.GroupChat;
+import com.samczsun.skype4j.events.SaveContactsEvent;
 import com.samczsun.skype4j.events.contact.ContactRequestEvent;
 import com.samczsun.skype4j.exceptions.AccountNotFoundException;
 import com.samczsun.skype4j.exceptions.ChatNotFoundException;
 import com.samczsun.skype4j.exceptions.ConnectionException;
 import com.samczsun.skype4j.exceptions.InvalidCredentialsException;
+import com.samczsun.skype4j.exceptions.SuspiciousLoginException;
 import com.samczsun.skype4j.exceptions.WrongPasswordException;
 import com.samczsun.skype4j.exceptions.handler.ErrorHandler;
 import com.samczsun.skype4j.exceptions.handler.ErrorSource;
@@ -66,7 +68,7 @@ public FullClient(String username, String password, Set<String> resources, Logge
     }
 
     @Override
-    public void login() throws InvalidCredentialsException, ConnectionException, WrongPasswordException, AccountNotFoundException {
+    public void login() throws InvalidCredentialsException, ConnectionException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
         logger.finer("Refreshing tokens");
     
         Response authorize = null;
@@ -132,39 +134,45 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
             int index = post.body().indexOf("sErrTxt:'");
             int end;
             end = post.body().indexOf('\'', index + "sErrTxt:'".length());
-            while (post.body().charAt(end - 1) == '\\') {
-              end = post.body().indexOf('\'', end + 1);
-            }
-            if (index == -1 || end == -1) {
-              IOException e = new IOException("Error while connecting to Live: not redirected, no reason given.");
-              logger.log(Level.SEVERE, "", e);
-                try {
-                    throw e;
-                } catch (IOException ex) {
-                    Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
+            
+            if (!(index == -1 && end == -1)) {
+                while (post.body().charAt(end - 1) == '\\') {
+                  end = post.body().indexOf('\'', end + 1);
+                }
+                if (index == -1 || end == -1) {
+                  IOException e = new IOException("Error while connecting to Live: not redirected, no reason given.");
+                  logger.log(Level.SEVERE, "", e);
+                    try {
+                        throw e;
+                    } catch (IOException ex) {
+                        Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
+                    }
                 }
-            }
 
-            String errMessage = post.body().substring(index + "sErrTxt:'".length(), end);
-            if ((errMessage.contains("account") || errMessage.contains("password")) && errMessage.contains("incorrect")) {
-              WrongPasswordException e = new WrongPasswordException("Error while connecting to Live: " + errMessage);
-              logger.severe(e.toString());
-              throw e;
-            } else if (errMessage.toLowerCase().contains("microsoft account doesn\\'t exist")) {
-              AccountNotFoundException e = new AccountNotFoundException("Error while connecting to Live: " + errMessage);
-              logger.severe(e.toString());
-              throw e;
-            } else {
-              IOException e = new IOException("Error while connecting to Live: " + errMessage);
-              logger.severe(e.toString());
-                try {
-                    throw e;
-                } catch (IOException ex) {
-                    Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
+                String errMessage = post.body().substring(index + "sErrTxt:'".length(), end);
+                if ((errMessage.contains("account") || errMessage.contains("password")) && errMessage.contains("incorrect")) {
+                  WrongPasswordException e = new WrongPasswordException("Error while connecting to Live: " + errMessage);
+                  logger.severe(e.toString());
+                  throw e;
+                } else if (errMessage.toLowerCase().contains("microsoft account doesn\\'t exist")) {
+                  AccountNotFoundException e = new AccountNotFoundException("Error while connecting to Live: " + errMessage);
+                  logger.severe(e.toString());
+                  throw e;
+                } else {
+                  IOException e = new IOException("Error while connecting to Live: " + errMessage);
+                  logger.severe(e.toString());
+                    try {
+                        throw e;
+                    } catch (IOException ex) {
+                        Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
+                    }
                 }
+            } else {
+                SuspiciousLoginException e = new SuspiciousLoginException("Error while connecting to Live, suspicious login");
+                logger.severe(e.toString());
+                throw e;
             }
-          }
-
+        }
         String url = post.header("Location");
 
         int refreshTokenStart = url.indexOf("refresh_token=");
@@ -265,7 +273,7 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
         } catch (InterruptedException e) {
             throw new RuntimeException(e);
         }
-
+        
         super.login();
     }
 
@@ -283,69 +291,35 @@ public void logout() throws ConnectionException {
 
     @Override
     public void loadAllContacts() throws ConnectionException {
-        String contactsStatus = "";
         int i = 0;
         
-        logger.finer("Sending get request to: " + Endpoints.GET_ALL_CONTACTS.url());
-        JsonObject object = Endpoints.GET_ALL_CONTACTS
+        JsonObject object = null;
+        try {
+            setProfileInfo(this);
+            
+            logger.finer("Sending get request to: " + Endpoints.GET_ALL_CONTACTS.url());
+            object = Endpoints.GET_ALL_CONTACTS
                 .open(this)
                 .as(JsonObject.class)
                 .expect(200, "While loading contacts")
                 .get();
-        logger.finer("Response (" +Endpoints.GET_ALL_CONTACTS.url()+ "): " + object);
-        for (JsonValue valueStatus : object.get("contacts").asArray()) {
-            if (i > 9)
-                break;
-            JsonObject objStatus = valueStatus.asObject();
-            String idSkip = objStatus.get("person_id").asString();
-            if (idSkip.contains("28:concierge") || idSkip.contains("8:echo123") || idSkip.contains("28:0d5d6cff-595d-49d7-9cf8-973173f5233b"))
-                continue;
 
-            if (objStatus.get("suggested") == null || !objStatus.get("suggested").asBoolean()) {
-                if (i == 0) {
-                    contactsStatus = "cMri=" + objStatus.get("person_id").asString();
-                } else {
-                    contactsStatus += "&cMri=" + objStatus.get("person_id").asString();
+            for (JsonValue value : object.get("contacts").asArray()) {
+
+                JsonObject obj = value.asObject();
+                if (obj.get("suggested") == null || !obj.get("suggested").asBoolean()) {
+                    if (!allContacts.containsKey(obj.get("person_id").asString())) {
+                        logger.finer("Implementing contact: " + obj.get("person_id").asString());
+                        this.allContacts.put(obj.get("person_id").asString(), new ContactImpl(this, obj));
+                    }
                 }
                 i++;
             }
-        }
-        JsonObject objectStatus = null;
-        try {
-          logger.finer("Sending get request to: " + Endpoints.GET_ALL_CONTACTS_STATUS.url());
-          objectStatus = Endpoints.GET_ALL_CONTACTS_STATUS
-                .open(this, contactsStatus)
-                .as(JsonObject.class)
-                .expect(200, "While loading contacts status")
-                .get();
-          logger.finer("Response (" +Endpoints.GET_ALL_CONTACTS_STATUS.url()+ "): " + objectStatus);
+
+
         } catch (Exception e) {
-            logger.severe("Error while send get request to: " + Endpoints.GET_ALL_CONTACTS_STATUS.url() + e.getMessage());
-        }
-        
-        i=0;
-        for (JsonValue value : object.get("contacts").asArray()) {
-            String status = null;
-            
-            if (objectStatus != null) {
-                try {
-                    JsonObject objStatus = (JsonObject) objectStatus.get("Responses").asArray().get(i);
-                    objStatus = (JsonObject) objStatus.get("Payload");
-                    status = Utils.getString(objStatus, "status");
-                } catch (Exception e) { }
-            }
-            
-            JsonObject obj = value.asObject();
-            if (obj.get("suggested") == null || !obj.get("suggested").asBoolean()) {
-                String id = value.asObject().get("person_id").asString();
-                if (id.contains("28:concierge") || id.contains("8:echo123") || id.contains("28:0d5d6cff-595d-49d7-9cf8-973173f5233b"))
-                    continue;
-                if (!allContacts.containsKey(obj.get("person_id").asString())) {
-                    this.allContacts.put(obj.get("person_id").asString(), new ContactImpl(this, obj, status));
-                }
-            }
-            i++;
-        }
+            logger.severe("Error while send get request to: " + Endpoints.GET_ALL_CONTACTS.url() + e.getMessage());
+        }  
     }
 
     @Override
@@ -376,69 +350,31 @@ public void getContactRequests(boolean fromWebsocket) throws ConnectionException
 
     @Override
     public void updateContactList() throws ConnectionException {
-        String contactsStatus = "";
         int i = 0;
-        
-        logger.finer("Sending get request to: " + Endpoints.GET_ALL_CONTACTS.url());
-        JsonObject object = Endpoints.GET_ALL_CONTACTS
+        JsonObject object = null;
+
+        try {
+            setProfileInfo(this);
+            
+            logger.finer("Sending get request to: " + Endpoints.GET_ALL_CONTACTS.url());
+            object = Endpoints.GET_ALL_CONTACTS
                 .open(this, getUsername(), "notification")
                 .as(JsonObject.class)
                 .expect(200, "While loading contacts")
                 .get();
-        logger.finer("Response (" +Endpoints.GET_ALL_CONTACTS.url()+ "): " + object);
-        
-        for (JsonValue valueStatus : object.get("contacts").asArray()) {
-            if (i > 9)
-                break;
-            JsonObject objStatus = valueStatus.asObject();
-            String idSkip = objStatus.get("person_id").asString();
-            if (idSkip.contains("28:concierge") || idSkip.contains("8:echo123") || idSkip.contains("28:0d5d6cff-595d-49d7-9cf8-973173f5233b"))
-                continue;
-            
-            if (objStatus.get("suggested") == null || !objStatus.get("suggested").asBoolean()) {
-                if (i == 0) {
-                    contactsStatus = "cMri=" + objStatus.get("person_id").asString();
-                } else {
-                    contactsStatus += "&cMri=" + objStatus.get("person_id").asString();
+
+            for (JsonValue value : object.get("contacts").asArray()) {
+                if (value.asObject().get("suggested") == null || !value.asObject().get("suggested").asBoolean()) {
+                    String id = value.asObject().get("person_id").asString();
+                    logger.finer("Updating contact: " + id);
+                    ContactImpl impl = (ContactImpl) allContacts.get(id);
+                    if (impl == null) impl = (ContactImpl) loadContact(id);
+                    impl.update(value.asObject());
                 }
                 i++;
             }
-        }
-        
-        JsonObject objectStatus = null;
-        try {
-          logger.finer("Sending get request to: " + Endpoints.GET_ALL_CONTACTS_STATUS.url());
-          objectStatus = Endpoints.GET_ALL_CONTACTS_STATUS
-                .open(this, contactsStatus)
-                .as(JsonObject.class)
-                .expect(200, "While loading contacts status")
-                .get();
-          logger.finer("Response (" +Endpoints.GET_ALL_CONTACTS_STATUS.url()+ "): " + objectStatus);
         } catch (Exception e) {
-            logger.severe("Error while send get request to: " + Endpoints.GET_ALL_CONTACTS_STATUS.url() + e.getMessage());
-        }
-        
-        i=0;
-        for (JsonValue value : object.get("contacts").asArray()) {
-            String status = null;
-            
-            if (objectStatus != null) {
-                try {
-                    JsonObject objStatus = (JsonObject) objectStatus.get("Responses").asArray().get(i);
-                    objStatus = (JsonObject) objStatus.get("Payload");
-                    status = Utils.getString(objStatus, "status");
-                } catch (Exception e) { }
-            }
-            
-            if (value.asObject().get("suggested") == null || !value.asObject().get("suggested").asBoolean()) {
-                String id = value.asObject().get("person_id").asString();
-                if (id.contains("28:concierge") || id.contains("8:echo123") || id.contains("28:0d5d6cff-595d-49d7-9cf8-973173f5233b"))
-                    continue;
-                ContactImpl impl = (ContactImpl) allContacts.get(id);
-                if (impl == null) impl = (ContactImpl) loadContact(id);
-                impl.update(value.asObject(), status);
-            }
-            i++;
+            logger.severe("Error while send get request to: " + Endpoints.GET_ALL_CONTACTS.url() + e.getMessage());
         }
     }
 
@@ -469,6 +405,40 @@ public GroupChat createGroupChat(Contact... contacts) throws ConnectionException
             throw ExceptionHandler.generateException("No chat location", con);
         }
     }
+    
+    private static void setProfileInfo(SkypeImpl skype) throws ConnectionException {
+        JsonObject obj = Endpoints.PROFILE_INFO
+                .open(skype)
+                .expect(200, "While getting profile info")
+                .as(JsonObject.class)
+                .get();
+        String userPhones = "";
+        String displayName = "";
+        if (Utils.getString(obj, "lastname") != null){
+            displayName = Utils.getString(obj, "firstname") + " " + Utils.getString(obj, "lastname");
+        } else {
+            displayName = Utils.getString(obj, "firstname");
+        }
+        if (Utils.getString(obj, "phoneHome") != null){
+            userPhones = Utils.getString(obj, "phoneHome");
+        }
+        if (Utils.getString(obj, "phoneMobile") != null){
+            if (userPhones == ""){
+                userPhones = Utils.getString(obj, "phoneMobile");
+            } else {
+                userPhones += ", " + Utils.getString(obj, "phoneMobile");
+            }
+        }
+        if (Utils.getString(obj, "phoneOffice") != null){
+            if (userPhones == ""){
+                userPhones = Utils.getString(obj, "phoneOffice");
+            } else {
+                userPhones += ", " + Utils.getString(obj, "phoneOffice");
+            }
+        }
+        skype.setUserPhones(userPhones);
+        skype.setDisplayName(displayName);
+    }
 
     private String hash() {
         try {
diff --git a/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java b/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java
index 30e6ec1..74dd237 100644
--- a/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java
+++ b/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java
@@ -22,6 +22,7 @@
 import com.samczsun.skype4j.exceptions.ConnectionException;
 import com.samczsun.skype4j.exceptions.InvalidCredentialsException;
 import com.samczsun.skype4j.exceptions.NotParticipatingException;
+import com.samczsun.skype4j.exceptions.SuspiciousLoginException;
 import com.samczsun.skype4j.exceptions.WrongPasswordException;
 import com.samczsun.skype4j.exceptions.handler.ErrorHandler;
 import com.samczsun.skype4j.internal.Endpoints;
@@ -54,7 +55,7 @@ public GuestClient(String username, String chatId, Set<String> resources, Logger
     }
 
     @Override
-    public void login() throws ConnectionException, InvalidCredentialsException {
+    public void login() throws ConnectionException, InvalidCredentialsException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
         JsonObject response = Endpoints.NEW_GUEST
                 .open(this)
                 .as(JsonObject.class)
diff --git a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
index 1c4953a..9ba7a0f 100644
--- a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
@@ -120,15 +120,13 @@ public ContactImpl(SkypeImpl skype, String username, JsonObject unaddedData) thr
         }
     }
 
-    public ContactImpl(SkypeImpl skype, JsonObject contact, String contactStatus) throws ConnectionException {
+    public ContactImpl(SkypeImpl skype, JsonObject contact) throws ConnectionException {
         this.skype = skype;
-        getObject(skype, username);
-        update(contact, contactStatus);
+        update(contact);
     }
     
     public ContactImpl(SkypeImpl skype) throws ConnectionException {
         this.skype = skype;
-        getObject(skype, username);
     }
 
     private void updateContactInfo() throws ConnectionException {
@@ -296,7 +294,7 @@ public Chat getPrivateConversation() throws ConnectionException, ChatNotFoundExc
         return skype.getOrLoadChat("8:" + this.username);
     }
 
-    public void update(JsonObject contact, String contactStatus) throws ConnectionException {
+    public void update(JsonObject contact) throws ConnectionException {
         this.username = contact.get("person_id").asString();
         this.isAuthorized = contact.get("authorized").asBoolean();
         this.isBlocked = contact.get("blocked").asBoolean();
@@ -305,7 +303,7 @@ public void update(JsonObject contact, String contactStatus) throws ConnectionEx
         this.mood = Utils.getString(contact, "mood");
         this.type = Utils.getString(contact, "type");
         this.authCertificate = Utils.getString(contact, "auth_certificate");
-        this.status = contactStatus;
+        this.status = null;
         if (contact.get("locations") != null) {
             JsonObject locations = contact.get("locations").asArray().get(0).asObject();
             this.country = locations.get("country") == null ? null : locations.get("country").asString();
