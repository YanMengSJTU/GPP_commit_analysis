diff --git a/src/main/java/com/samczsun/skype4j/chat/messages/ChatMessage.java b/src/main/java/com/samczsun/skype4j/chat/messages/ChatMessage.java
index 014a384..e97ce6c 100644
--- a/src/main/java/com/samczsun/skype4j/chat/messages/ChatMessage.java
+++ b/src/main/java/com/samczsun/skype4j/chat/messages/ChatMessage.java
@@ -76,4 +76,6 @@
      * @return The ID
      */
     String getId();
+            
+    void setSentTime(Long time);
 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/Endpoints.java b/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
index c0b695e..54838ba 100644
--- a/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
+++ b/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
@@ -124,6 +124,9 @@
     public static final Endpoints VISIBILITY = new Endpoints(
             "https://client-s.gateway.messenger.live.com/v1/users/ME/presenceDocs/messagingService")
             .regtoken();
+    public static final Endpoints FINANCIALS = new Endpoints(
+            "https://consumer.entitlement.skype.com/users/%s/services?language=en")
+            .skypetoken();
     public static final Endpoints SEARCH_SKYPE_DIRECTORY = new Endpoints(
             "https://api.skype.com/search/users/any?keyWord=%s&contactTypes[]=skype").skypetoken();
     public static final Endpoints GET_ALL_CONTACTS = new Endpoints(
diff --git a/src/main/java/com/samczsun/skype4j/internal/EventType.java b/src/main/java/com/samczsun/skype4j/internal/EventType.java
index 4cec108..605c68f 100644
--- a/src/main/java/com/samczsun/skype4j/internal/EventType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/EventType.java
@@ -16,16 +16,14 @@
 
 package com.samczsun.skype4j.internal;
 
-import br.com.seti.dao.SkypeContact;
+import com.eclipsesource.json.JsonArray;
 import com.eclipsesource.json.JsonObject;
+import com.samczsun.skype4j.Visibility;
 import com.samczsun.skype4j.exceptions.ConnectionException;
 import com.samczsun.skype4j.exceptions.SkypeException;
-import com.samczsun.skype4j.participants.info.Contact;
 import org.jsoup.helper.Validate;
-
 import java.io.IOException;
 import java.sql.SQLException;
-import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
@@ -89,11 +87,18 @@ public void handle(SkypeImpl skype, JsonObject eventObj) throws SkypeException {
     USER_PRESENCE("UserPresence") {
         @Override
         public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, ConnectionException {
+            JsonObject resourceEndpoint = resource.get("resource").asObject();
+            JsonArray findEndpoint = resourceEndpoint.get("endpointPresenceDocLinks").asArray();
             String resourceLinkMe = "https://bn2-client-s.gateway.messenger.live.com/v1/users/ME/presenceDocs/messagingService";
             String resourceLink = resource.get("resourceLink").asString();
             if (resourceLinkMe.equalsIgnoreCase(resourceLink)){
                 try {
-                    skype.getLoginUserStatus();
+                    if (findEndpoint.size() < 2){
+                        skype.getLoginUserStatus(1);
+                        skype.setVisibility(Visibility.INVISIBLE);
+                    } else {
+                        skype.getLoginUserStatus(2);
+                    }
                 } catch (SQLException ex) {
                     Logger.getLogger(EventType.class.getName()).log(Level.SEVERE, null, ex);
                 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/MessageType.java b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
index 864b719..97b980f 100644
--- a/src/main/java/com/samczsun/skype4j/internal/MessageType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
@@ -117,6 +117,7 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException,
                 final String clientId = resource.get("skypeeditedid").asString();
                 ChatMessage m = user.getMessageById(clientId);
                 if (m != null) {
+                    m.setSentTime(Long.valueOf(resource.get("id").asString()));
                     MessageEditedEvent evnt = new MessageEditedEvent(m, content);
                     skype.getEventDispatcher().callEvent(evnt);
                     ((ChatMessageImpl) m).edit0(Message.fromHtml(content));
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index f5f3240..67de3fb 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -40,7 +40,6 @@
 import com.samczsun.skype4j.participants.info.BotInfo;
 import com.samczsun.skype4j.participants.info.Contact;
 import org.jsoup.helper.Validate;
-
 import java.io.*;
 import java.net.HttpURLConnection;
 import java.net.URI;
@@ -136,21 +135,32 @@ public String format(LogRecord record) {
           this.status = null;
     }
     
-    public void getLoginUserStatus() throws ConnectionException, SQLException {
+    public void getLoginUserStatus(int epidSize) throws ConnectionException, SQLException {
         JsonObject object = Endpoints.VISIBILITY
                 .open(this)
                 .as(JsonObject.class)
                 .expect(200, "While loading contacts status")
                 .get();
+        JsonArray getFinancialStats = Endpoints.FINANCIALS
+                .open(this, this.liveUsername)
+                .header("Accept", "application/json; ver=3.0")
+                .as(JsonArray.class)
+                .expect(200, "While loading contacts financials")
+                .get();
+        JsonObject financialStats = (JsonObject) getFinancialStats.get(0);
         this.status = object.get("status").asString();
         SkypeUser user = new SkypeUser(username);
-        user.setCredits("1");
+        user.setCredits(Utils.getString(financialStats, "balanceFormatted"));
         user.setLoginLive(liveUsername);
         user.setMonitorStatus("");
         user.setFullName(this.displayName);
-        user.setPhone(userPhones);
-        user.setSkypeStatus(this.status.toUpperCase());
+        user.setPhone(this.getUserPhones());
         user.setLastKnownStatus(this.status.toUpperCase());
+        if (epidSize < 2){
+            user.setSkypeStatus("OFFLINE");
+        } else {
+            user.setSkypeStatus(this.status.toUpperCase());
+        }
         SkypeUser.save(user);
     }
 
@@ -503,7 +513,7 @@ public void subscribe() throws ConnectionException {
                         .expect(200, "Err")
                         .put(new JsonObject().add("endpointFeatures", "Agent"));
                 connection = Endpoints.SUBSCRIPTIONS_URL.open(this).dontConnect().post(buildSubscriptionObject());
-                getLoginUserStatus();
+                getLoginUserStatus(2);
             }
             if (connection.getResponseCode() != 201) {
                 throw ExceptionHandler.generateException("While subscribing", connection);
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java b/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java
index ea01236..bc8963b 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java
@@ -113,7 +113,7 @@ public void onMessage(String s) {
             if (event == 6) {
                 try {
                     ContactImpl contactImpl = new ContactImpl(skype);
-                    skype.getLoginUserStatus();
+                    skype.getLoginUserStatus(2);
                     skype.updateContactList();
                     skype.SaveContacts();
                 } catch (ConnectionException e) {
diff --git a/src/main/java/com/samczsun/skype4j/internal/chat/messages/ChatMessageImpl.java b/src/main/java/com/samczsun/skype4j/internal/chat/messages/ChatMessageImpl.java
index c27c4c4..f493242 100644
--- a/src/main/java/com/samczsun/skype4j/internal/chat/messages/ChatMessageImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/chat/messages/ChatMessageImpl.java
@@ -36,7 +36,7 @@
     private final ParticipantImpl sender;
     private final Chat chat;
     private final String id;
-    private final long time;
+    private long time;
 
     private Message message;
 
@@ -88,4 +88,9 @@ public SkypeImpl getClient() {
     public void edit0(Message newMessage) {
         this.message = newMessage;
     }
+
+    @Override
+    public void setSentTime(Long time) {
+        this.time = time;
+    }
 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
index 6981ec3..de025ce 100644
--- a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
+++ b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
@@ -34,8 +34,6 @@
 import com.samczsun.skype4j.participants.info.Contact;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
-
-import javax.xml.bind.DatatypeConverter;
 import java.net.HttpURLConnection;
 import java.net.URLDecoder;
 import java.nio.charset.StandardCharsets;
@@ -50,6 +48,7 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import javax.security.auth.login.AccountNotFoundException;
+import javax.xml.bind.DatatypeConverter;
 import org.jsoup.Connection;
 import org.jsoup.Connection.Response;
 import org.jsoup.Jsoup;
@@ -298,10 +297,6 @@ public void loadAllContacts() throws ConnectionException {
         for (JsonValue valueStatus : object.get("contacts").asArray()) {
             JsonObject objStatus = valueStatus.asObject();
             if (objStatus.get("suggested") == null || !objStatus.get("suggested").asBoolean()) {
-//                String ignoreContact = Utils.getString(objStatus, "person_id");
-//                if ("28:0d5d6cff-595d-49d7-9cf8-973173f5233b".equals(ignoreContact)){
-//                    continue;
-//                }
                 if (i == 0) {
                     contactsStatus = "cMri=" + objStatus.get("person_id").asString();
                 } else {
@@ -368,10 +363,6 @@ public void updateContactList() throws ConnectionException {
         for (JsonValue valueStatus : object.get("contacts").asArray()) {
             JsonObject objStatus = valueStatus.asObject();
             if (objStatus.get("suggested") == null || !objStatus.get("suggested").asBoolean()) {
-//                String ignoreContact = Utils.getString(objStatus, "person_id");
-//                if ("28:0d5d6cff-595d-49d7-9cf8-973173f5233b".equals(ignoreContact)){
-//                    continue;
-//                }
                 if (i == 0) {
                     contactsStatus = "cMri=" + objStatus.get("person_id").asString();
                 } else {
diff --git a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
index a43c0aa..7b0bf5b 100644
--- a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
@@ -110,7 +110,6 @@ public ContactImpl(SkypeImpl skype, String username, JsonObject unaddedData) thr
         this.username = username;
         if (!PHONE_NUMBER.matcher(username).matches()) {
             updateProfile(unaddedData);
-//            updateContactInfo();
         } else {
             this.isPhone = true;
         }
@@ -169,7 +168,7 @@ public String getPhoneNumbers() {
     }
     
     public String getStatus() {
-        return this.status;
+        return this.status == null ? "OFFLINE" : this.status;
     }
 
     @Override
