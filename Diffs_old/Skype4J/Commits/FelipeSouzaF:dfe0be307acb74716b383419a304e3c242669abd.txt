diff --git a/src/main/java/com/samczsun/skype4j/internal/Factory.java b/src/main/java/com/samczsun/skype4j/internal/Factory.java
index 933df57..9684abc 100644
--- a/src/main/java/com/samczsun/skype4j/internal/Factory.java
+++ b/src/main/java/com/samczsun/skype4j/internal/Factory.java
@@ -60,7 +60,7 @@ public static ChatImpl createChat(SkypeImpl client, String identity) throws Conn
         throw new IllegalArgumentException(String.format("Unknown chat type with identity %s", identity));
     }
 
-    public static ParticipantImpl createParticipant(SkypeImpl client, ChatImpl chat, String id) throws ConnectionException {
+    public static ParticipantImpl createParticipant(SkypeImpl client, ChatImpl chat, String id) throws Exception {
         Validate.notNull(client, "Client must not be null");
         Validate.notNull(chat, "Chat must not be null");
         Validate.notEmpty(id, "Identity must not be null/empty");
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java b/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java
index 29105ef..43c62b4 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeWebSocket.java
@@ -110,9 +110,10 @@ public void onMessage(String s) {
             int event = body.get("evt").asInt();
             if (event == 6) {
                 try {
-                    skype.updateContactList();
-                    SaveContactsEvent eventContacts = new SaveContactsEvent();
-                    skype.getEventDispatcher().callEvent(eventContacts);
+//                    Removido para evitar a atualização desnecessária da lista de contatos completa quando bloquear um contato pela API
+//                    skype.updateContactList();
+//                    SaveContactsEvent eventContacts = new SaveContactsEvent();
+//                    skype.getEventDispatcher().callEvent(eventContacts);
                 } catch (Exception e) {
                     skype.handleError(ErrorSource.UPDATING_CONTACT_LIST, e, false);
                 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java b/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java
index d04a14c..3a139be 100644
--- a/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java
@@ -16,9 +16,12 @@
 
 package com.samczsun.skype4j.internal.participants;
 
-import com.samczsun.skype4j.exceptions.ConnectionException;
+import com.eclipsesource.json.JsonArray;
+import com.eclipsesource.json.JsonObject;
+import com.samczsun.skype4j.internal.Endpoints;
 import com.samczsun.skype4j.internal.SkypeImpl;
 import com.samczsun.skype4j.internal.chat.ChatImpl;
+import com.samczsun.skype4j.internal.participants.info.ContactImpl;
 import com.samczsun.skype4j.participants.info.Contact;
 import com.samczsun.skype4j.participants.User;
 
@@ -26,8 +29,9 @@
 public class UserImpl extends ParticipantImpl implements User {
     private Contact contactRep;
 
-    public UserImpl(SkypeImpl skype, ChatImpl chat, String id) throws ConnectionException {
+    public UserImpl(SkypeImpl skype, ChatImpl chat, String id) throws Exception {
         super(skype, chat, id);
+        contactRep = new ContactImpl(skype, "8:"+getId().substring(2), updateDisplayName());
     }
 
     @Override
@@ -40,6 +44,21 @@ public String getDisplayName() {
         if (contactRep == null) return null;
         return contactRep.getDisplayName();
     }
+    
+    public JsonObject updateDisplayName() throws Exception {
+        JsonArray usernames = new JsonArray();
+        usernames.add(this.getUsername());
+
+        JsonArray info = Endpoints.PROFILE_INFO_CHAT_GROUP
+                .open(getClient())
+                .expect(200, "While getting contact info")
+                .as(JsonArray.class)
+                .post(new JsonObject()
+                        .add("usernames", usernames)
+                );
+        JsonObject displayNameObj = info.get(0).asObject();
+        return displayNameObj;
+    }
 
     @Override
     public Contact getContact() {
