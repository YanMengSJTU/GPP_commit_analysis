diff --git a/src/main/java/com/samczsun/skype4j/Skype.java b/src/main/java/com/samczsun/skype4j/Skype.java
index 5bd979b..9dc8b3a 100644
--- a/src/main/java/com/samczsun/skype4j/Skype.java
+++ b/src/main/java/com/samczsun/skype4j/Skype.java
@@ -23,6 +23,7 @@
 import com.samczsun.skype4j.exceptions.handler.ErrorSource;
 import com.samczsun.skype4j.participants.info.BotInfo;
 import com.samczsun.skype4j.participants.info.Contact;
+import java.io.IOException;
 
 import java.util.Collection;
 import java.util.List;
@@ -51,8 +52,9 @@
      * @throws com.samczsun.skype4j.exceptions.WrongPasswordException
      * @throws com.samczsun.skype4j.exceptions.AccountNotFoundException
      * @throws com.samczsun.skype4j.exceptions.SuspiciousLoginException
+     * @throws java.io.IOException
      */
-    void login() throws InvalidCredentialsException, ConnectionException, NotParticipatingException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException;
+    void login() throws InvalidCredentialsException, ConnectionException, NotParticipatingException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException, IOException;
 
     /**
      * Subscribe to the HTTP long polling service.
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index 33d33fe..a48da57 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -149,7 +149,7 @@ public String format(LogRecord record) {
     }
     
     @Override
-    public void login() throws ConnectionException, InvalidCredentialsException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
+    public void login() throws ConnectionException, InvalidCredentialsException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException, IOException {
         Endpoints.ELIGIBILITY_CHECK.open(this)
                 .expect(200, "You are not eligible to use Skype for Web!")
                 .get();
@@ -536,7 +536,7 @@ public void subscribe() throws ConnectionException {
         }
     }
 
-    public void reauthenticate() throws ConnectionException, InvalidCredentialsException, NotParticipatingException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
+    public void reauthenticate() throws ConnectionException, InvalidCredentialsException, NotParticipatingException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException, IOException {
         //todo: keep subscribed until reauth is finished so events aren't lost
         doShutdown();
         login();
diff --git a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
index 24a0b7c..753529f 100644
--- a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
+++ b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
@@ -68,7 +68,7 @@ public FullClient(String username, String password, Set<String> resources, Logge
     }
 
     @Override
-    public void login() throws InvalidCredentialsException, ConnectionException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
+    public void login() throws InvalidCredentialsException, ConnectionException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException, IOException {
         logger.finer("Refreshing tokens");
     
         Response authorize = null;
@@ -81,12 +81,8 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
         String MSPOK = authorize.cookie("MSPOK");
         if (MSPOK == null) {
           IOException e = new IOException("Error while connecting to Live: MSPOK not set.");
-          logger.log(Level.SEVERE, "", e);
-            try {
-                throw e;
-            } catch (IOException ex) {
-                Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
-            }
+          logger.severe(e.toString());
+          throw e;
         }
 
         Elements PPFTs = null;
@@ -106,12 +102,8 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
         }
         if (PPFTs == null || PPFTs.isEmpty()) {
           IOException e = new IOException("Error while connecting to Live: PPFT not found.");
-          logger.log(Level.SEVERE, "", e);
-            try {
-                throw e;
-            } catch (IOException ex) {
-                Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
-            }
+          logger.severe(e.toString());
+          throw e;
         }
         String PPFT = PPFTs.first().attr("value");
 
@@ -141,12 +133,8 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
                 }
                 if (index == -1 || end == -1) {
                   IOException e = new IOException("Error while connecting to Live: not redirected, no reason given.");
-                  logger.log(Level.SEVERE, "", e);
-                    try {
-                        throw e;
-                    } catch (IOException ex) {
-                        Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
-                    }
+                  logger.severe(e.toString());
+                  throw e;
                 }
 
                 String errMessage = post.body().substring(index + "sErrTxt:'".length(), end);
@@ -161,11 +149,7 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
                 } else {
                   IOException e = new IOException("Error while connecting to Live: " + errMessage);
                   logger.severe(e.toString());
-                    try {
-                        throw e;
-                    } catch (IOException ex) {
-                        Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
-                    }
+                  throw e;
                 }
             } else {
                 SuspiciousLoginException e = new SuspiciousLoginException("Error while connecting to Live, suspicious login");
@@ -175,36 +159,11 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
         }
         String url = post.header("Location");
 
-        int refreshTokenStart = url.indexOf("refresh_token=");
-        if (refreshTokenStart == -1) {
-          IOException e = new IOException("Error while connecting to Live: refresh token not found.");
-          logger.log(Level.SEVERE, "", e);
-                try {
-                    throw e;
-                } catch (IOException ex) {
-                    Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
-                }
-        }
-        int refreshTokenEnd = url.indexOf('&', refreshTokenStart + "refresh_token=".length());
-        if (refreshTokenEnd == -1) {
-          refreshTokenEnd = url.length();
-        }
-        String refreshToken = url.substring(refreshTokenStart + "refresh_token=".length(), refreshTokenEnd);
-        try {
-            refreshToken = URLDecoder.decode(refreshToken, StandardCharsets.UTF_8.name());
-        } catch (UnsupportedEncodingException ex) {
-            Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
-        }
-
         int accessTokenStart = url.indexOf("access_token=");
         if (accessTokenStart == -1) {
           IOException e = new IOException("Error while connecting to Live: access token not found.");
-          logger.log(Level.SEVERE, "", e);
-                try {
-                    throw e;
-                } catch (IOException ex) {
-                    Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
-                }
+          logger.severe(e.toString());
+          throw e;
         }
         int accessTokenEnd = url.indexOf('&', accessTokenStart + "access_token=".length());
         if (accessTokenEnd == -1) {
@@ -216,20 +175,6 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
         } catch (UnsupportedEncodingException ex) {
             Logger.getLogger(FullClient.class.getName()).log(Level.SEVERE, null, ex);
         }
-
-        int expires = 86400;
-        int expiresStart = url.indexOf("expires_in=");
-        if (expiresStart != -1) {
-          int expiresEnd = url.indexOf('&', expiresStart + "expires_in=".length());
-          if (expiresEnd == -1) {
-            expiresEnd = url.length();
-          }
-          try {
-            expires = Integer.parseInt(url.substring(expiresStart, expiresEnd));
-          } catch (NumberFormatException ignore) {
-          }
-        }
-        
         
         Map<String, String> data = new HashMap<>();
         data.put("scopes", "client");
diff --git a/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java b/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java
index 74dd237..401095a 100644
--- a/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java
+++ b/src/main/java/com/samczsun/skype4j/internal/client/GuestClient.java
@@ -30,6 +30,7 @@
 import com.samczsun.skype4j.internal.Utils;
 import com.samczsun.skype4j.internal.utils.UncheckedRunnable;
 import com.samczsun.skype4j.participants.info.Contact;
+import java.io.IOException;
 
 import javax.xml.bind.DatatypeConverter;
 import java.io.UnsupportedEncodingException;
@@ -55,7 +56,7 @@ public GuestClient(String username, String chatId, Set<String> resources, Logger
     }
 
     @Override
-    public void login() throws ConnectionException, InvalidCredentialsException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException {
+    public void login() throws ConnectionException, InvalidCredentialsException, WrongPasswordException, AccountNotFoundException, SuspiciousLoginException, IOException {
         JsonObject response = Endpoints.NEW_GUEST
                 .open(this)
                 .as(JsonObject.class)
