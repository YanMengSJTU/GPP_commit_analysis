diff --git a/pom.xml b/pom.xml
index 27c85fc..99a895a 100644
--- a/pom.xml
+++ b/pom.xml
@@ -3,7 +3,7 @@
     <modelVersion>4.0.0</modelVersion>
     <groupId>com.samczsun</groupId>
     <artifactId>skype4j</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
+    <version>0.0.2-SNAPSHOT</version>
     <build>
         <sourceDirectory>src/main/java</sourceDirectory>
         <resources>
@@ -43,15 +43,27 @@
             <artifactId>jsoup</artifactId>
             <version>1.8.2</version>
         </dependency>
-        <dependency>
-            <groupId>com.google.code.gson</groupId>
-            <artifactId>gson</artifactId>
-            <version>2.3.1</version>
-        </dependency>
         <dependency>
             <groupId>org.apache.commons</groupId>
             <artifactId>commons-lang3</artifactId>
             <version>3.4</version>
         </dependency>
+        <dependency>
+            <groupId>com.eclipsesource.minimal-json</groupId>
+            <artifactId>minimal-json</artifactId>
+            <version>0.9.1</version>
+        </dependency>
     </dependencies>
+    <distributionManagement>
+        <repository>
+            <id>deployment</id>
+            <name>Public Releases</name>
+            <url>http://r.zk.ms/content/repositories/releases/</url>
+        </repository>
+        <snapshotRepository>
+            <id>deployment</id>
+            <name>Public Snapshots</name>
+            <url>http://r.zk.ms/content/repositories/snapshots/</url>
+        </snapshotRepository>
+    </distributionManagement>
 </project>
\ No newline at end of file
diff --git a/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java b/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java
index 5866a62..715701e 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java
@@ -16,11 +16,9 @@
 
 import org.jsoup.Jsoup;
 
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
+import com.eclipsesource.json.JsonArray;
+import com.eclipsesource.json.JsonObject;
+import com.eclipsesource.json.JsonValue;
 import com.samczsun.skype4j.StreamUtils;
 import com.samczsun.skype4j.chat.ChatMessage;
 import com.samczsun.skype4j.exceptions.SkypeException;
@@ -47,18 +45,17 @@ public ChatMessage sendMessage(Text message) throws SkypeException {
         try {
             long ms = System.currentTimeMillis();
             JsonObject obj = new JsonObject();
-            obj.addProperty("content", message.parent().write());
-            obj.addProperty("messagetype", "RichText");
-            obj.addProperty("contenttype", "text");
-            obj.addProperty("clientmessageid", String.valueOf(ms));
-            Gson gson = new GsonBuilder().disableHtmlEscaping().create();
+            obj.add("content", message.parent().write());
+            obj.add("messagetype", "RichText");
+            obj.add("contenttype", "text");
+            obj.add("clientmessageid", String.valueOf(ms));
             URL url = new URL("https://client-s.gateway.messenger.live.com/v1/users/ME/conversations/" + this.getIdentity() + "/messages");
             con = (HttpsURLConnection) url.openConnection();
             con.setRequestMethod("POST");
             con.setDoOutput(true);
             con.setRequestProperty("RegistrationToken", getClient().getRegistrationToken());
             con.setRequestProperty("Content-Type", "application/json");
-            con.getOutputStream().write(gson.toJson(obj).getBytes(Charset.forName("UTF-8")));
+            con.getOutputStream().write(obj.toString().getBytes(Charset.forName("UTF-8")));
             con.getInputStream();
             return ChatMessageImpl.createMessage(this, getUser(getClient().getUsername()), null, String.valueOf(ms), ms, Jsoup.parse(message.parent().write()).text());
         } catch (IOException e) {
@@ -84,18 +81,17 @@ public void updateUsers() throws SkypeException {
             con.setRequestProperty("RegistrationToken", getClient().getRegistrationToken());
             con.setRequestProperty("Content-Type", "application/json");
             String in = StreamUtils.readFully(con.getInputStream());
-            Gson gson = new Gson();
-            JsonObject object = gson.fromJson(in, JsonObject.class);
-            JsonObject props = object.get("properties").getAsJsonObject();
-            if (props.has("topic")) {
-                this.topic = props.get("topic").getAsString();
+            JsonObject object = JsonObject.readFrom(in);
+            JsonObject props = object.get("properties").asObject();
+            if (props.get("topic") != null) {
+                this.topic = props.get("topic").asString();
             } else {
-                this.topic = props.get("creator").getAsString().substring(2);
+                this.topic = props.get("creator").asString().substring(2);
             }
-            JsonArray members = object.get("members").getAsJsonArray();
-            for (JsonElement element : members) {
-                String username = element.getAsJsonObject().get("id").getAsString().substring(2);
-                String role = element.getAsJsonObject().get("role").getAsString();
+            JsonArray members = object.get("members").asArray();
+            for (JsonValue element : members) {
+                String username = element.asObject().get("id").asString().substring(2);
+                String role = element.asObject().get("role").asString();
                 User user = getUser(username);
                 if (user == null) {
                     user = new UserImpl(username, this);
@@ -158,10 +154,9 @@ public void setTopic(String topic) throws SkypeException {
             con.setDoOutput(true);
             con.setRequestProperty("RegistrationToken", getClient().getRegistrationToken());
             con.setRequestProperty("Content-Type", "application/json");
-            Gson gson = new Gson();
             JsonObject obj = new JsonObject();
-            obj.addProperty("topic", topic);
-            con.getOutputStream().write(gson.toJson(obj).getBytes(Charset.forName("UTF-8")));
+            obj.add("topic", topic);
+            con.getOutputStream().write(obj.toString().getBytes(Charset.forName("UTF-8")));
             con.getOutputStream();
         } catch (Exception e) {
             throw new SkypeException("An exception occured while updating the topic", e);
diff --git a/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java b/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java
index 9f7ca1a..34a7e8a 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java
@@ -16,9 +16,7 @@
 
 import org.jsoup.Jsoup;
 
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.JsonObject;
+import com.eclipsesource.json.JsonObject;
 import com.samczsun.skype4j.chat.ChatMessage;
 import com.samczsun.skype4j.exceptions.SkypeException;
 import com.samczsun.skype4j.formatting.Text;
@@ -45,18 +43,17 @@ public ChatMessage sendMessage(Text message) throws SkypeException {
         try {
             long ms = System.currentTimeMillis();
             JsonObject obj = new JsonObject();
-            obj.addProperty("content", message.parent().write());
-            obj.addProperty("messagetype", "RichText");
-            obj.addProperty("contenttype", "text");
-            obj.addProperty("clientmessageid", String.valueOf(ms));
-            Gson gson = new GsonBuilder().disableHtmlEscaping().create();
+            obj.add("content", message.parent().write());
+            obj.add("messagetype", "RichText");
+            obj.add("contenttype", "text");
+            obj.add("clientmessageid", String.valueOf(ms));
             URL url = new URL("https://client-s.gateway.messenger.live.com/v1/users/ME/conversations/" + this.getIdentity() + "/messages");
             con = (HttpsURLConnection) url.openConnection();
             con.setRequestMethod("POST");
             con.setDoOutput(true);
             con.setRequestProperty("RegistrationToken", getClient().getRegistrationToken());
             con.setRequestProperty("Content-Type", "application/json");
-            con.getOutputStream().write(gson.toJson(obj).getBytes(Charset.forName("UTF-8")));
+            con.getOutputStream().write(obj.toString().getBytes(Charset.forName("UTF-8")));
             con.getInputStream();
             return ChatMessageImpl.createMessage(this, getUser(getClient().getUsername()), null, String.valueOf(ms), ms, Jsoup.parse(message.parent().write()).text());
         } catch (IOException e) {
diff --git a/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java b/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java
index 7bb6803..6ee2c51 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java
@@ -4,8 +4,7 @@
 
 import javax.net.ssl.HttpsURLConnection;
 
-import com.google.gson.Gson;
-import com.google.gson.JsonObject;
+import com.eclipsesource.json.JsonObject;
 import com.samczsun.skype4j.chat.Chat;
 import com.samczsun.skype4j.exceptions.SkypeException;
 import com.samczsun.skype4j.formatting.Message;
@@ -52,18 +51,17 @@ public void edit(Text newMessage) throws SkypeException {
         HttpsURLConnection con = null;
         try {
             JsonObject obj = new JsonObject();
-            obj.addProperty("content", newMessage.parent().write());
-            obj.addProperty("messagetype", "RichText");
-            obj.addProperty("contenttype", "text");
-            obj.addProperty("skypeeditedid", this.clientId);
-            Gson gson = new Gson();
+            obj.add("content", newMessage.parent().write());
+            obj.add("messagetype", "RichText");
+            obj.add("contenttype", "text");
+            obj.add("skypeeditedid", this.clientId);
             URL url = new URL("https://client-s.gateway.messenger.live.com/v1/users/ME/conversations/" + this.sender.getChat().getIdentity() + "/messages");
             con = (HttpsURLConnection) url.openConnection();
             con.setRequestMethod("POST");
             con.setDoOutput(true);
             con.setRequestProperty("RegistrationToken", ((ChatImpl) sender.getChat()).getClient().getRegistrationToken());
             con.setRequestProperty("Content-Type", "application/json");
-            con.getOutputStream().write(gson.toJson(obj).getBytes());
+            con.getOutputStream().write(obj.toString().getBytes());
             con.getInputStream();
         } catch (Exception e) {
             throw new SkypeException("An exception occured while editing a message", e);
diff --git a/src/main/java/com/samczsun/skype4j/internal/MessageType.java b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
index 98202bf..3cc2599 100644
--- a/src/main/java/com/samczsun/skype4j/internal/MessageType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
@@ -13,7 +13,7 @@
 import org.jsoup.nodes.Element;
 import org.jsoup.parser.Parser;
 
-import com.google.gson.JsonObject;
+import com.eclipsesource.json.JsonObject;
 import com.samczsun.skype4j.chat.Chat;
 import com.samczsun.skype4j.chat.ChatMessage;
 import com.samczsun.skype4j.events.chat.ChatJoinedEvent;
@@ -46,26 +46,26 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException {
     RICH_TEXT("RichText") {
         @Override
         public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException {
-            if (resource.has("clientmessageid")) { //New message
-                String clientId = resource.get("clientmessageid").getAsString();
-                String id = resource.get("id").getAsString();
-                String content = resource.get("content").getAsString();
-                String from = resource.get("from").getAsString();
-                String url = resource.get("conversationLink").getAsString();
+            if (resource.get("clientmessageid") != null) { //New message
+                String clientId = resource.get("clientmessageid").asString();
+                String id = resource.get("id").asString();
+                String content = resource.get("content").asString();
+                String from = resource.get("from").asString();
+                String url = resource.get("conversationLink").asString();
                 Chat c = getChat(url, skype);
                 User u = getUser(from, c);
                 ChatMessage m = ChatMessageImpl.createMessage(c, u, id, clientId, System.currentTimeMillis(), stripMetadata(content));
                 ((ChatImpl) c).onMessage(m);
                 MessageReceivedEvent evnt = new MessageReceivedEvent(m);
                 skype.getEventDispatcher().callEvent(evnt);
-            } else if (resource.has("skypeeditedid")) { //Edited message
-                String url = resource.get("conversationLink").getAsString();
-                String from = resource.get("from").getAsString();
+            } else if (resource.get("skypeeditedid") != null) { //Edited message
+                String url = resource.get("conversationLink").asString();
+                String from = resource.get("from").asString();
                 final Chat c = getChat(url, skype);
                 final User u = getUser(from, c); //If not original sender, then fake
-                final String clientId = resource.get("skypeeditedid").getAsString();
-                final String id = resource.get("id").getAsString();
-                String content = resource.get("content").getAsString();
+                final String clientId = resource.get("skypeeditedid").asString();
+                final String id = resource.get("id").asString();
+                String content = resource.get("content").asString();
                 content = stripMetadata(content);
                 boolean faker = false;
                 if (content.startsWith("Edited previous message: ")) {
@@ -168,10 +168,10 @@ public void handle(SkypeImpl skype, JsonObject resource) {
     THREAD_ACTIVITY_ADD_MEMBER("ThreadActivity/AddMember") {
         @Override
         public void handle(SkypeImpl skype, JsonObject resource) {
-            String url = resource.get("conversationLink").getAsString();
+            String url = resource.get("conversationLink").asString();
             Chat c = getChat(url, skype);
             List<User> usersAdded = new ArrayList<>();
-            Document xml = Jsoup.parse(resource.get("content").getAsString(), "", Parser.xmlParser());
+            Document xml = Jsoup.parse(resource.get("content").asString(), "", Parser.xmlParser());
             User initiator = c.getUser(xml.getElementsByTag("initiator").get(0).text());
             for (Element e : xml.getElementsByTag("target")) {
                 String username = e.text().substring(2);
@@ -195,10 +195,10 @@ public void handle(SkypeImpl skype, JsonObject resource) {
     THREAD_ACTIVITY_DELETE_MEMBER("ThreadActivity/DeleteMember") {
         @Override
         public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException {
-            String url = resource.get("conversationLink").getAsString();
+            String url = resource.get("conversationLink").asString();
             Chat c = getChat(url, skype);
             List<User> usersRemoved = new ArrayList<>();
-            Document xml = Jsoup.parse(resource.get("content").getAsString(), "", Parser.xmlParser());
+            Document xml = Jsoup.parse(resource.get("content").asString(), "", Parser.xmlParser());
             User initiator = c.getUser(xml.getElementsByTag("initiator").get(0).text());
             for (Element e : xml.getElementsByTag("target")) {
                 String username = e.text().substring(2);
@@ -217,9 +217,9 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException {
     THREAD_ACTIVITY_ROLE_UPDATE("ThreadActivity/RoleUpdate") {
         @Override
         public void handle(SkypeImpl skype, JsonObject resource) {
-            String url = resource.get("conversationLink").getAsString();
+            String url = resource.get("conversationLink").asString();
             Chat c = getChat(url, skype);
-            Document xml = Jsoup.parse(resource.get("content").getAsString(), "", Parser.xmlParser());
+            Document xml = Jsoup.parse(resource.get("content").asString(), "", Parser.xmlParser());
             User target = c.getUser(xml.getElementsByTag("id").get(0).text().substring(2));
             Role role = Role.getByName(xml.getElementsByTag("role").get(0).text());
             target.setRole(role);
@@ -230,9 +230,9 @@ public void handle(SkypeImpl skype, JsonObject resource) {
     THREAD_ACTIVITY_TOPIC_UPDATE("ThreadActivity/TopicUpdate") {
         @Override
         public void handle(SkypeImpl skype, JsonObject resource) {
-            String url = resource.get("conversationLink").getAsString();
+            String url = resource.get("conversationLink").asString();
             Chat c = getChat(url, skype);
-            Document xml = Jsoup.parse(resource.get("content").getAsString(), "", Parser.xmlParser());
+            Document xml = Jsoup.parse(resource.get("content").asString(), "", Parser.xmlParser());
             if (xml.getElementsByTag("value").size() > 0) {
                 ((ChatGroup) c).updateTopic(StringEscapeUtils.unescapeHtml4(xml.getElementsByTag("value").get(0).text()));
             } else {
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index ed7ca6e..59ed7d3 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -26,11 +26,9 @@
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
-import com.google.gson.Gson;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
+import com.eclipsesource.json.JsonArray;
+import com.eclipsesource.json.JsonObject;
+import com.eclipsesource.json.JsonValue;
 import com.samczsun.skype4j.Skype;
 import com.samczsun.skype4j.StreamUtils;
 import com.samczsun.skype4j.chat.Chat;
@@ -101,7 +99,6 @@ public void run() {
                 Date now = new Date();
                 now.setDate(now.getDate() - 14);
 
-                Gson gson = new Gson();
                 String urlToUse = "https://client-s.gateway.messenger.live.com/v1/users/ME/conversations?startTime=" + now.getTime() + "&pageSize=100&view=msnp24Equivalent&targetType=Passport|Skype|Lync|Thread";
                 //        while (true) {
                 try {
@@ -109,12 +106,11 @@ public void run() {
                     HttpsURLConnection con = (HttpsURLConnection) url.openConnection();
                     con.setRequestProperty("RegistrationToken", registrationToken);
                     String in = StreamUtils.readFully(con.getInputStream());
-                    JsonObject obj = gson.fromJson(in, JsonObject.class);
-
-                    for (JsonElement elem : obj.get("conversations").getAsJsonArray()) {
+                    JsonObject obj = JsonObject.readFrom(in);
+                    for (JsonValue elem : obj.get("conversations").asArray()) {
                         try {
-                            JsonObject conversation = elem.getAsJsonObject();
-                            String id = conversation.get("id").getAsString();
+                            JsonObject conversation = elem.asObject();
+                            String id = conversation.get("id").asString();
                             Chat chat = ChatImpl.createChat(this, id);
                             chat.updateUsers();
                             allChats.put(id, chat);
@@ -123,8 +119,8 @@ public void run() {
                         }
                     }
 
-                    //                if (obj.get("_metadata").getAsJsonObject().has("backwardLink")) {
-                    //                    urlToUse = obj.get("_metadata").getAsJsonObject().get("backwardLink").getAsString();
+                    //                if (obj.get("_metadata").asJsonObject().has("backwardLink")) {
+                    //                    urlToUse = obj.get("_metadata").asJsonObject().get("backwardLink").asString();
                     //                    System.out.println("Backwards");
                     //                } else {
                     //                    break;
@@ -142,14 +138,12 @@ public void run() {
     }
 
     public void subscribe() throws IOException {
-        Gson gson = new Gson();
-
         HttpsURLConnection subscribe = (HttpsURLConnection) new URL(SUBSCRIPTIONS_URL).openConnection();
         subscribe.setRequestMethod("POST");
         subscribe.setDoOutput(true);
         subscribe.setRequestProperty("RegistrationToken", registrationToken);
         subscribe.setRequestProperty("Content-Type", "application/json");
-        subscribe.getOutputStream().write(gson.toJson(buildSubscriptionObject()).getBytes());
+        subscribe.getOutputStream().write(buildSubscriptionObject().toString().getBytes());
         subscribe.getInputStream();
 
         HttpsURLConnection registerEndpoint = (HttpsURLConnection) new URL(String.format(MESSAGINGSERVICE_URL, URLEncoder.encode(endpointId, "UTF-8"))).openConnection();
@@ -157,14 +151,13 @@ public void subscribe() throws IOException {
         registerEndpoint.setDoOutput(true);
         registerEndpoint.setRequestProperty("RegistrationToken", registrationToken);
         registerEndpoint.setRequestProperty("Content-Type", "application/json");
-        registerEndpoint.getOutputStream().write(gson.toJson(buildRegistrationObject()).getBytes());
+        registerEndpoint.getOutputStream().write(buildRegistrationObject().toString().getBytes());
         registerEndpoint.getInputStream();
 
         pollThread = new Thread() {
             public void run() {
                 try {
                     URL url = new URL("https://client-s.gateway.messenger.live.com/v1/users/ME/endpoints/SELF/subscriptions/0/poll");
-                    Gson gson = new Gson();
                     HttpsURLConnection c = null;
                     while (true) {
                         try {
@@ -177,25 +170,25 @@ public void run() {
                             InputStream read = c.getInputStream();
                             String json = StreamUtils.readFully(read);
                             if (!json.isEmpty()) {
-                                final JsonObject message = gson.fromJson(json, JsonObject.class);
+                                final JsonObject message = JsonObject.readFrom(json);
                                 scheduler.execute(new Runnable() {
                                     public void run() {
                                         try {
-                                            JsonArray arr = message.get("eventMessages").getAsJsonArray();
-                                            for (JsonElement elem : arr) {
-                                                JsonObject eventObj = elem.getAsJsonObject();
-                                                String resourceType = eventObj.get("resourceType").getAsString();
+                                            JsonArray arr = message.get("eventMessages").asArray();
+                                            for (JsonValue elem : arr) {
+                                                JsonObject eventObj = elem.asObject();
+                                                String resourceType = eventObj.get("resourceType").asString();
                                                 if (resourceType.equals("NewMessage")) {
-                                                    JsonObject resource = eventObj.get("resource").getAsJsonObject();
-                                                    String messageType = resource.get("messagetype").getAsString();
+                                                    JsonObject resource = eventObj.get("resource").asObject();
+                                                    String messageType = resource.get("messagetype").asString();
                                                     MessageType type = MessageType.getByName(messageType);
                                                     type.handle(SkypeImpl.this, resource);
                                                 } else if (resourceType.equalsIgnoreCase("EndpointPresence")) {
                                                 } else if (resourceType.equalsIgnoreCase("UserPresence")) {
                                                 } else if (resourceType.equalsIgnoreCase("ConversationUpdate")) { //Not sure what this does
                                                 } else if (resourceType.equalsIgnoreCase("ThreadUpdate")) {
-                                                    JsonObject resource = eventObj.get("resource").getAsJsonObject();
-                                                    String chatId = resource.get("id").getAsString();
+                                                    JsonObject resource = eventObj.get("resource").asObject();
+                                                    String chatId = resource.get("id").asString();
                                                     Chat chat = getChat(chatId);
                                                     if (chat == null) {
                                                         chat = ChatImpl.createChat(SkypeImpl.this, chatId);
@@ -291,30 +284,30 @@ private Response postToLogin(String username, String password) throws IOExceptio
 
     private JsonObject buildSubscriptionObject() {
         JsonObject subscriptionObject = new JsonObject();
-        subscriptionObject.addProperty("channelType", "httpLongPoll");
-        subscriptionObject.addProperty("template", "raw");
+        subscriptionObject.add("channelType", "httpLongPoll");
+        subscriptionObject.add("template", "raw");
         JsonArray interestedResources = new JsonArray();
-        interestedResources.add(new JsonPrimitive("/v1/users/ME/conversations/ALL/properties"));
-        interestedResources.add(new JsonPrimitive("/v1/users/ME/conversations/ALL/messages"));
-        interestedResources.add(new JsonPrimitive("/v1/users/ME/contacts/ALL"));
-        interestedResources.add(new JsonPrimitive("/v1/threads/ALL"));
+        interestedResources.add("/v1/users/ME/conversations/ALL/properties");
+        interestedResources.add("/v1/users/ME/conversations/ALL/messages");
+        interestedResources.add("/v1/users/ME/contacts/ALL");
+        interestedResources.add("/v1/threads/ALL");
         subscriptionObject.add("interestedResources", interestedResources);
         return subscriptionObject;
     }
 
     private JsonObject buildRegistrationObject() {
         JsonObject registrationObject = new JsonObject();
-        registrationObject.addProperty("id", "messagingService");
-        registrationObject.addProperty("type", "EndpointPresenceDoc");
-        registrationObject.addProperty("selfLink", "uri");
+        registrationObject.add("id", "messagingService");
+        registrationObject.add("type", "EndpointPresenceDoc");
+        registrationObject.add("selfLink", "uri");
         JsonObject publicInfo = new JsonObject();
-        publicInfo.addProperty("capabilities", "video|audio");
-        publicInfo.addProperty("type", 1);
-        publicInfo.addProperty("skypeNameVersion", "908/1.5.116/swx-skype.com");
-        publicInfo.addProperty("nodeInfo", "xx");
-        publicInfo.addProperty("version", "908/1.5.116");
+        publicInfo.add("capabilities", "video|audio");
+        publicInfo.add("type", 1);
+        publicInfo.add("skypeNameVersion", "908/1.5.116/swx-skype.com");
+        publicInfo.add("nodeInfo", "xx");
+        publicInfo.add("version", "908/1.5.116");
         JsonObject privateInfo = new JsonObject();
-        privateInfo.addProperty("epname", "Skype4J");
+        privateInfo.add("epname", "Skype4J");
         registrationObject.add("publicInfo", publicInfo);
         registrationObject.add("privateInfo", privateInfo);
         return registrationObject;
diff --git a/src/test/java/com/samczsun/skype4j/Test.java b/src/test/java/com/samczsun/skype4j/Test.java
index 87e8813..fb8df16 100644
--- a/src/test/java/com/samczsun/skype4j/Test.java
+++ b/src/test/java/com/samczsun/skype4j/Test.java
@@ -18,7 +18,6 @@
     public static void main(String[] args) throws Exception {
         String[] creds = StreamUtils.readFully(new FileInputStream("credentials")).split(":");
         Skype skype = Skype.login(creds[0], creds[1]);
-        skype.logout();
         skype.getEventDispatcher().registerListener(new Listener() {
             @EventHandler
             public void onUserAdd(MessageReceivedEvent e) {
