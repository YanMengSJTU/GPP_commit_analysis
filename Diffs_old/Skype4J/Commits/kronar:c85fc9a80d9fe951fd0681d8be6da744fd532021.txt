diff --git a/src/main/java/com/samczsun/skype4j/chat/GroupChat.java b/src/main/java/com/samczsun/skype4j/chat/GroupChat.java
index bc40b3a..70e4cbc 100644
--- a/src/main/java/com/samczsun/skype4j/chat/GroupChat.java
+++ b/src/main/java/com/samczsun/skype4j/chat/GroupChat.java
@@ -4,33 +4,37 @@
 
 /**
  * Represents a group chat with one or more people
- * 
- * @author Sam
  *
+ * @author Sam
  */
 public interface GroupChat extends Chat {
     /**
      * Get the topic of the chat.
-     * 
+     *
      * @return The topic
      */
     String getTopic();
 
     /**
      * Set the topic of the chat. This will update it in real time
-     * 
-     * @param topic
-     *            The topic
+     *
+     * @param topic The topic
      * @throws SkypeException
      */
     void setTopic(String topic) throws SkypeException;
 
     /**
      * Kick a user from this chat. Is not supported in individual chats.
-     * 
+     *
      * @param username The username of the user to kick
-     * @throws SkypeException
-     *             If the user is not in this chat, or if the kick failed
+     * @throws SkypeException If the user is not in this chat, or if the kick failed
      */
     void kick(String username) throws SkypeException;
+
+    /**
+     * Leave the chat
+     *
+     * @throws SkypeException If the leave failed
+     */
+    void leave() throws SkypeException;
 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java b/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java
index a337dcc..c014e5d 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ChatGroup.java
@@ -135,6 +135,10 @@ public void kick(String username) throws SkypeException {
         }
     }
 
+    public void leave() throws SkypeException {
+        kick(getClient().getUsername());
+    }
+
     @Override
     public String getTopic() {
         checkLoaded();
diff --git a/src/main/java/com/samczsun/skype4j/internal/MessageType.java b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
index e910d77..ee3a7be 100644
--- a/src/main/java/com/samczsun/skype4j/internal/MessageType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
@@ -177,13 +177,13 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException {
             User initiator = c.getUser(xml.getElementsByTag("initiator").get(0).text());
             for (Element e : xml.getElementsByTag("target")) {
                 String username = e.text().substring(2);
+                ((ChatImpl) c).addUser(username);
                 if (username.equals(skype.getUsername())) {
                     ChatJoinedEvent event = new ChatJoinedEvent(c);
                     skype.getEventDispatcher().callEvent(event);
                 } else {
                     usersAdded.add(c.getUser(username));
                 }
-                ((ChatImpl) c).addUser(username);
             }
             UserAddEvent event = null;
             if (usersAdded.size() == 1) {
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index 57f67b7..144032e 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -80,8 +80,9 @@ public void run() {
 
                 Response getAsm = Jsoup.connect("https://api.asm.skype.com/v1/skypetokenauth").cookies(cookies).data("skypetoken", skypeToken).method(Method.POST).execute();
                 cookies.putAll(getAsm.cookies());
-                HttpsURLConnection getReg = (HttpsURLConnection) new URL("https://client-s.gateway.messenger.live.com/v1/users/ME/endpoints").openConnection();
+                HttpsURLConnection getReg = (HttpsURLConnection) new URL("https://client-s.gateway.messenger.live.com/v1/users/ME/endpoints").openConnection(); // msmsgs@msnmsgr.com,Q1P7W2E4J9R8U3S5
                 getReg.setRequestProperty("Authentication", "skypetoken=" + skypeToken);
+                //getReg.setRequestProperty("LockAndKey", "appId=msmsgs@msnmsgr.com; time=1436987361; lockAndKeyResponse=838e6231d460580332d22da83898ff44");
                 getReg.setRequestMethod("POST");
                 getReg.setDoOutput(true);
                 getReg.getOutputStream().write("{}".getBytes());
@@ -301,9 +302,9 @@ private JsonObject buildRegistrationObject() {
         JsonObject publicInfo = new JsonObject();
         publicInfo.add("capabilities", "video|audio");
         publicInfo.add("type", 1);
-        publicInfo.add("skypeNameVersion", "908/1.6.0.286//skype.com");
+        publicInfo.add("skypeNameVersion", "skype.com");
         publicInfo.add("nodeInfo", "xx");
-        publicInfo.add("version", "908/1.5.116");
+        publicInfo.add("version", "908/1.6.0.288//skype.com");
         JsonObject privateInfo = new JsonObject();
         privateInfo.add("epname", "Skype4J");
         registrationObject.add("publicInfo", publicInfo);
