diff --git a/src/main/java/com/samczsun/skype4j/chat/IndividualChat.java b/src/main/java/com/samczsun/skype4j/chat/IndividualChat.java
index f050f5a..3b6ec91 100644
--- a/src/main/java/com/samczsun/skype4j/chat/IndividualChat.java
+++ b/src/main/java/com/samczsun/skype4j/chat/IndividualChat.java
@@ -1,5 +1,7 @@
 package com.samczsun.skype4j.chat;
 
+import com.samczsun.skype4j.user.User;
+
 /**
  * Represents a private conversation between the user logged in and one other
  * user
@@ -7,5 +9,10 @@
  * @author samczsun
  */
 public interface IndividualChat extends Chat {
-    // There's not much you can do in a private chat
+    /**
+     * Gets the conversation partner.
+     *
+     * @return A User object representing the conversation partner
+     */
+    User getPartner();
 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java b/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java
index 85be6a8..16c2179 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ChatIndividual.java
@@ -93,4 +93,12 @@ public User getUser(String username) {
     public List<ChatMessage> getAllMessages() {
         return Collections.unmodifiableList(messages);
     }
+
+    @Override
+    public User getPartner() {
+        for (User user : getAllUsers()) {
+            if (!user.getUsername().equals(getClient().getUsername())) return user;
+        }
+        return null;
+    }
 }
