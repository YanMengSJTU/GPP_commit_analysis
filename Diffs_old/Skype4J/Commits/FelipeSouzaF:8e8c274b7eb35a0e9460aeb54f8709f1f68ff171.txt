diff --git a/src/main/java/com/samczsun/skype4j/internal/EventType.java b/src/main/java/com/samczsun/skype4j/internal/EventType.java
index 72cda13..edfd882 100644
--- a/src/main/java/com/samczsun/skype4j/internal/EventType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/EventType.java
@@ -107,7 +107,10 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException,
                     Logger.getLogger(EventType.class.getName()).log(Level.SEVERE, null, ex);
                 }
             } else {
-                skype.updateContactList();
+                String loginLive = Utils.getString(resourceEndpoint, "selfLink");
+                String loginLiveStatus = Utils.getString(resourceEndpoint, "status");
+                String loginLiveSplit[] = loginLive.split("/");
+                skype.getContact(loginLiveSplit[5]).setStatus(loginLiveStatus);
                 skype.SaveContacts();
             }
         }
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index 67de3fb..163d28d 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -57,6 +57,7 @@
 import java.util.logging.Formatter;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+import java.util.logging.Logger;
 
 public abstract class SkypeImpl implements Skype {
     public static final String LINE_SEPARATOR = System.getProperty("line.separator");
@@ -130,7 +131,7 @@ public String format(LogRecord record) {
                 }
             });
             this.logger.setUseParentHandlers(false);
-            this.logger.addHandler(handler);
+//            this.logger.addHandler(handler);
         }
           this.status = null;
     }
@@ -148,18 +149,18 @@ public void getLoginUserStatus(int epidSize) throws ConnectionException, SQLExce
                 .expect(200, "While loading contacts financials")
                 .get();
         JsonObject financialStats = (JsonObject) getFinancialStats.get(0);
-        this.status = object.get("status").asString();
+        this.setStatus(object.get("status").asString());
         SkypeUser user = new SkypeUser(username);
         user.setCredits(Utils.getString(financialStats, "balanceFormatted"));
         user.setLoginLive(liveUsername);
         user.setMonitorStatus("");
         user.setFullName(this.displayName);
         user.setPhone(this.getUserPhones());
-        user.setLastKnownStatus(this.status.toUpperCase());
+        user.setLastKnownStatus(this.getStatus().toUpperCase());
         if (epidSize < 2){
             user.setSkypeStatus("OFFLINE");
         } else {
-            user.setSkypeStatus(this.status.toUpperCase());
+            user.setSkypeStatus(this.getStatus().toUpperCase());
         }
         SkypeUser.save(user);
     }
@@ -685,6 +686,7 @@ public SkypeWebSocket getWebSocket() {
     }
     
     public void SaveContacts(){
+        logger.info("Salvando dados do usuÃ¡rio...");
         Collection<Contact> contacts = this.getAllContacts();
         for (Contact contact : contacts){
             SkypeContact contato = new SkypeContact();
@@ -716,4 +718,12 @@ public String getId() {
             return "8:" + getUsername();
         }
     }
+
+    public String getStatus() {
+        return status;
+    }
+
+    public void setStatus(String status) {
+        this.status = status;
+    }
 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
index 7b0bf5b..1c4953a 100644
--- a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
@@ -56,7 +56,12 @@ private static JsonObject getObject(SkypeImpl skype, String username) throws Con
                 .as(JsonObject.class)
                 .get();
         String userPhones = "";
-        String displayName = Utils.getString(obj, "firstname") + " " + Utils.getString(obj, "lastname");
+        String displayName = "";
+        if (Utils.getString(obj, "lastname") != null){
+            displayName = Utils.getString(obj, "firstname") + " " + Utils.getString(obj, "lastname");
+        } else {
+            displayName = Utils.getString(obj, "firstname");
+        }
         if (Utils.getString(obj, "phoneHome") != null){
             userPhones = Utils.getString(obj, "phoneHome");
         }
@@ -170,6 +175,10 @@ public String getPhoneNumbers() {
     public String getStatus() {
         return this.status == null ? "OFFLINE" : this.status;
     }
+    
+    public void setStatus(String status) {
+        this.status = status;
+    }
 
     @Override
     public BufferedImage getAvatarPicture() throws ConnectionException {
diff --git a/src/main/java/com/samczsun/skype4j/participants/info/Contact.java b/src/main/java/com/samczsun/skype4j/participants/info/Contact.java
index 156688c..5d63ab3 100644
--- a/src/main/java/com/samczsun/skype4j/participants/info/Contact.java
+++ b/src/main/java/com/samczsun/skype4j/participants/info/Contact.java
@@ -59,6 +59,8 @@
     String getPhoneNumbers();
     
     String getStatus();
+    
+    void setStatus(String status);
     /**
      * Get the avatar as a {@link BufferedImage}. Can return null if not found.
      * Once the image is loaded it is cached
