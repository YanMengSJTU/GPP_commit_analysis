diff --git a/src/main/java/com/samczsun/skype4j/Skype.java b/src/main/java/com/samczsun/skype4j/Skype.java
index 4701d1f..9dec6c9 100644
--- a/src/main/java/com/samczsun/skype4j/Skype.java
+++ b/src/main/java/com/samczsun/skype4j/Skype.java
@@ -219,4 +219,6 @@
     void setVisibility(Visibility visibility) throws ConnectionException;
 
     void handleError(ErrorSource errorSource, Throwable throwable, boolean shutdown);
+    
+    void block(boolean reportAbuse, String contact) throws Exception;
 }
diff --git a/src/main/java/com/samczsun/skype4j/events/contact/ContactBlockedEvent.java b/src/main/java/com/samczsun/skype4j/events/contact/ContactBlockedEvent.java
new file mode 100644
index 0000000..ba339f7
--- /dev/null
+++ b/src/main/java/com/samczsun/skype4j/events/contact/ContactBlockedEvent.java
@@ -0,0 +1,41 @@
+/*
+ * Copyright 2019 seti.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.samczsun.skype4j.events.contact;
+
+import com.samczsun.skype4j.events.Event;
+
+/**
+ *
+ * @author seti
+ */
+public class ContactBlockedEvent extends Event {
+    private final String username;
+    private final boolean blocked;
+    
+    public ContactBlockedEvent(String username, boolean blocked) {
+        this.username = username;
+        this.blocked = blocked;
+    }
+    
+    public String getUsername() {
+        return this.username;
+    }
+    
+    public boolean getBlocked() {
+        return this.blocked;
+    }
+    
+}
diff --git a/src/main/java/com/samczsun/skype4j/internal/Endpoints.java b/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
index 11a6fac..5b6ec0d 100644
--- a/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
+++ b/src/main/java/com/samczsun/skype4j/internal/Endpoints.java
@@ -132,7 +132,7 @@
     public static final Endpoints GET_CONTACT_BY_ID = new Endpoints(
             "https://contacts.skype.com/contacts/v1/users/%s/contacts?$filter=id%%20eq%%20%%27%s%%27&reason=default").skypetoken();
     public static final Endpoints BLOCK_CONTACT = new Endpoints(
-            "https://api.skype.com/users/self/contacts/%s/block").skypetoken();
+            "https://%sclient-s.gateway.messenger.live.com/v1/users/ME/conversations/%s/properties?name=conversationblocked").cloud().regtoken();
     public static final Endpoints UNBLOCK_CONTACT = new Endpoints(
             "https://api.skype.com/users/self/contacts/%s/unblock").skypetoken();
     public static final Endpoints AUTHORIZE_CONTACT = new Endpoints(
diff --git a/src/main/java/com/samczsun/skype4j/internal/EventType.java b/src/main/java/com/samczsun/skype4j/internal/EventType.java
index 70e1df9..fe83aa7 100644
--- a/src/main/java/com/samczsun/skype4j/internal/EventType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/EventType.java
@@ -94,8 +94,15 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException,
     },
     CONVERSATION_UPDATE("ConversationUpdate") {
         @Override
-        public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException {
-
+        public void handle(SkypeImpl skype, JsonObject resource) throws Exception {
+            JsonObject conversationProperties = resource.get("resource").asObject();
+            conversationProperties = conversationProperties.get("properties").asObject();
+            String getConversationAvaiability = Utils.getString(conversationProperties, "conversationblocked", "");
+            if (!getConversationAvaiability.equals("")) {
+                String loginLive = Utils.getString(resource, "resourceLink");
+                String loginLiveSplit[] = loginLive.split("/");
+                skype.getContact(loginLiveSplit[7]).setIsBlocked(Boolean.valueOf(getConversationAvaiability));
+            }
         }
     },
     THREAD_UPDATE("ThreadUpdate") {
@@ -123,7 +130,7 @@ public static EventType getByName(String eventType) {
         return byValue.get(eventType);
     }
 
-    public abstract void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException;
+    public abstract void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException, Exception;
 
     static {
         for (EventType type : values()) {
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index 647a858..275048f 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -639,6 +639,15 @@ public UUID getGuid() {
     public Collection<Contact> getAllContacts() {
         return Collections.unmodifiableCollection(this.allContacts.values());
     }
+    
+    public Map<String, Boolean> getAllBlockedContacts() {
+        Map<String, Boolean> allBlockedContacts = new HashMap();
+        Collection<Contact> allContacts = getAllContacts();
+        for(Contact contact : allContacts){
+            allBlockedContacts.put(contact.getUsername().split(":", 2)[1], contact.getIsBlocked());
+        }
+        return allBlockedContacts;
+    }
 
     public void handleError(ErrorSource errorSource, Throwable throwable, boolean shutdown) {
         for (ErrorHandler handler : errorHandlers) {
@@ -732,4 +741,14 @@ public void setDebug(Path path) throws IOException {
     public void setAppendLogFile(boolean appendLogFile) {
         this.appendLogFile = appendLogFile;
     }
+    
+    @Override
+    public void block(boolean reportAbuse, String contact) throws Exception {
+        JsonObject data = new JsonObject();
+        data.add("conversationblocked", reportAbuse);
+        Endpoints.BLOCK_CONTACT
+                .open(this, contact)
+                .expect(200, "While unblocking contact")
+                .put(data);
+    }
 }
diff --git a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
index 94453ab..e404c99 100644
--- a/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
+++ b/src/main/java/com/samczsun/skype4j/internal/client/FullClient.java
@@ -20,7 +20,6 @@
 import com.eclipsesource.json.JsonObject;
 import com.eclipsesource.json.JsonValue;
 import com.samczsun.skype4j.chat.GroupChat;
-import com.samczsun.skype4j.events.SaveContactsEvent;
 import com.samczsun.skype4j.events.contact.ContactRequestEvent;
 import com.samczsun.skype4j.exceptions.AccountNotFoundException;
 import com.samczsun.skype4j.exceptions.ChatNotFoundException;
@@ -165,9 +164,9 @@ public void login() throws InvalidCredentialsException, ConnectionException, Wro
 
         int accessTokenStart = url.indexOf("access_token=");
         if (accessTokenStart == -1) {
-          IOException e = new IOException("Error while connecting to Live: access token not found.");
-          logger.severe(e.toString());
-          throw e;
+            SuspiciousLoginException e = new SuspiciousLoginException("Error while connecting to Live: access token not found.");
+            logger.severe(e.toString());
+            throw e;
         }
         int accessTokenEnd = url.indexOf('&', accessTokenStart + "access_token=".length());
         if (accessTokenEnd == -1) {
diff --git a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
index 0db8fdd..29cbbad 100644
--- a/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/participants/info/ContactImpl.java
@@ -18,7 +18,6 @@
 
 import com.eclipsesource.json.JsonArray;
 import com.eclipsesource.json.JsonObject;
-import com.samczsun.skype4j.Skype;
 import com.samczsun.skype4j.chat.Chat;
 import com.samczsun.skype4j.exceptions.ChatNotFoundException;
 import com.samczsun.skype4j.exceptions.ConnectionException;
@@ -181,6 +180,15 @@ public String getStatus() {
     public void setStatus(String status) {
         this.status = status;
     }
+    
+    @Override
+    public Boolean getIsBlocked() {
+        return this.isBlocked;
+    }
+    
+    public void setIsBlocked(boolean blocked) {
+        this.isBlocked = blocked;
+    }
 
     @Override
     public BufferedImage getAvatarPicture() throws ConnectionException {
@@ -275,10 +283,12 @@ public boolean isBlocked() {
 
     @Override
     public void block(boolean reportAbuse) throws ConnectionException {
+        JsonObject data = new JsonObject();
+        data.add("conversationblocked", reportAbuse);
         Endpoints.BLOCK_CONTACT
                 .open(skype, this.username)
-                .expect(201, "While unblocking contact")
-                .put("reporterIp=127.0.0.1&uiVersion=" + Skype.VERSION + (reportAbuse ? "&reportAbuse=1" : ""));
+                .expect(200, "While unblocking contact")
+                .put(data);
         updateContactInfo();
     }
 
@@ -315,7 +325,7 @@ public void update(JsonObject contact) throws Exception {
                 this.country = locations.get("country") == null ? null : locations.get("country").asString();
                 this.city = locations.get("city") == null ? null : locations.get("city").asString();
             }
-            JsonObject profile = (JsonObject) contact.get("profile22");
+            JsonObject profile = (JsonObject) contact.get("profile");
             if (profile != null) updateProfile(profile);
         } catch (Exception e) {
             StringWriter ex = new StringWriter();
diff --git a/src/main/java/com/samczsun/skype4j/internal/threads/PollThread.java b/src/main/java/com/samczsun/skype4j/internal/threads/PollThread.java
index 94fcc8e..582e5e2 100644
--- a/src/main/java/com/samczsun/skype4j/internal/threads/PollThread.java
+++ b/src/main/java/com/samczsun/skype4j/internal/threads/PollThread.java
@@ -82,6 +82,7 @@ public void run() {
 
                     if (pendingException != null) {
                         skype.handleError(ErrorSource.POLLING_SKYPE, pendingException, false);
+                        pendingException = null;
                         continue;
                     }
 
diff --git a/src/main/java/com/samczsun/skype4j/participants/info/Contact.java b/src/main/java/com/samczsun/skype4j/participants/info/Contact.java
index 5d63ab3..81e6307 100644
--- a/src/main/java/com/samczsun/skype4j/participants/info/Contact.java
+++ b/src/main/java/com/samczsun/skype4j/participants/info/Contact.java
@@ -56,11 +56,15 @@
      */
     String getLastName();
     
+    Boolean getIsBlocked();
+    
     String getPhoneNumbers();
     
     String getStatus();
     
     void setStatus(String status);
+    
+    void setIsBlocked(boolean blocked);
     /**
      * Get the avatar as a {@link BufferedImage}. Can return null if not found.
      * Once the image is loaded it is cached
