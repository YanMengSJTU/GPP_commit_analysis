diff --git a/.gitignore b/.gitignore
index 42af84c..0aa02d2 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,6 +1,8 @@
 /bin/
 /target/
 .settings/
+.idea/
 .classpath
 .project
+skype4j.iml
 credentials
\ No newline at end of file
diff --git a/src/main/java/com/samczsun/skype4j/chat/Chat.java b/src/main/java/com/samczsun/skype4j/chat/Chat.java
index 72729ac..4e217a3 100644
--- a/src/main/java/com/samczsun/skype4j/chat/Chat.java
+++ b/src/main/java/com/samczsun/skype4j/chat/Chat.java
@@ -22,7 +22,7 @@
      *         message
      * @throws SkypeException
      */
-    public ChatMessage sendMessage(Text message) throws SkypeException;
+    ChatMessage sendMessage(Text message) throws SkypeException;
 
     /**
      * Get the {@link User User} object represented by that username
@@ -31,34 +31,34 @@
      *            The username of the user
      * @return The user object
      */
-    public User getUser(String username);
+    User getUser(String username);
 
     /**
      * Get the identity of the chat. Persistent across restarts
      * 
      * @return The identity of this chat
      */
-    public String getIdentity();
+    String getIdentity();
 
     /**
      * Return a view of all the users in this chat
      * 
      * @return All the users
      */
-    public Collection<User> getAllUsers();
+    Collection<User> getAllUsers();
 
     /**
      * Return a view of all the messages saved, in chronological order
      * 
      * @return All the messages saved
      */
-    public List<ChatMessage> getAllMessages();
+    List<ChatMessage> getAllMessages();
 
     /**
      * Returns whether this chat has finished loading. Any calls to act upon the
-     * chat will throw a {@link NotLoadedException NotLoadedException}
+     * chat will throw a {@link com.samczsun.skype4j.exceptions.NotLoadedException NotLoadedException}
      * 
      * @return The loaded state
      */
-    public boolean isLoaded();
+    boolean isLoaded();
 }
diff --git a/src/main/java/com/samczsun/skype4j/chat/ChatMessage.java b/src/main/java/com/samczsun/skype4j/chat/ChatMessage.java
index 29bc9ea..fe45f8c 100644
--- a/src/main/java/com/samczsun/skype4j/chat/ChatMessage.java
+++ b/src/main/java/com/samczsun/skype4j/chat/ChatMessage.java
@@ -11,19 +11,19 @@
  */
 public interface ChatMessage {
     
-    public String getClientId();
+    String getClientId();
 
-    public String getText();
+    String getText();
 
-    public long getTime();
+    long getTime();
 
-    public User getSender();
+    User getSender();
 
-    public void edit(Text newMessage) throws SkypeException;
+    void edit(Text newMessage) throws SkypeException;
 
-    public void delete() throws SkypeException;
+    void delete() throws SkypeException;
 
-    public Chat getChat();
+    Chat getChat();
 
-    public String getId();
+    String getId();
 }
diff --git a/src/main/java/com/samczsun/skype4j/chat/GroupChat.java b/src/main/java/com/samczsun/skype4j/chat/GroupChat.java
index 4a250d9..bc40b3a 100644
--- a/src/main/java/com/samczsun/skype4j/chat/GroupChat.java
+++ b/src/main/java/com/samczsun/skype4j/chat/GroupChat.java
@@ -14,7 +14,7 @@
      * 
      * @return The topic
      */
-    public String getTopic();
+    String getTopic();
 
     /**
      * Set the topic of the chat. This will update it in real time
@@ -23,14 +23,14 @@
      *            The topic
      * @throws SkypeException
      */
-    public void setTopic(String topic) throws SkypeException;
+    void setTopic(String topic) throws SkypeException;
 
     /**
      * Kick a user from this chat. Is not supported in individual chats.
      * 
-     * @param username
+     * @param username The username of the user to kick
      * @throws SkypeException
      *             If the user is not in this chat, or if the kick failed
      */
-    public void kick(String username) throws SkypeException;
+    void kick(String username) throws SkypeException;
 }
diff --git a/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java b/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java
index 8ecfb42..08f88a4 100644
--- a/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java
+++ b/src/main/java/com/samczsun/skype4j/events/EventDispatcher.java
@@ -1,6 +1,6 @@
 package com.samczsun.skype4j.events;
 
 public interface EventDispatcher {
-    public void registerListener(Listener l);
-    public void callEvent(Event l);
+    void registerListener(Listener l);
+    void callEvent(Event l);
 }
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/ChatEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/ChatEvent.java
index ee473e3..04b71c0 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/ChatEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/ChatEvent.java
@@ -4,7 +4,7 @@
 import com.samczsun.skype4j.events.Event;
 
 public abstract class ChatEvent extends Event {
-    private Chat chat;
+    private final Chat chat;
 
     public ChatEvent(Chat c) {
         this.chat = c;
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedByOtherEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedByOtherEvent.java
index 0353297..a921088 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedByOtherEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedByOtherEvent.java
@@ -4,8 +4,8 @@
 import com.samczsun.skype4j.user.User;
 
 public class MessageEditedByOtherEvent extends MessageEvent {
-    private User malicious;
-    private String newContent;
+    private final User malicious;
+    private final String newContent;
 
     public MessageEditedByOtherEvent(ChatMessage message, String newContent, User user) {
         super(message);
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedEvent.java
index 1d2815b..8731aa3 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEditedEvent.java
@@ -3,7 +3,7 @@
 import com.samczsun.skype4j.chat.ChatMessage;
 
 public class MessageEditedEvent extends MessageEvent {
-    private String newContent;
+    private final String newContent;
 
     public MessageEditedEvent(ChatMessage message, String newContent) {
         super(message);
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEvent.java
index 060e8ca..daeacb1 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/message/MessageEvent.java
@@ -4,7 +4,7 @@
 import com.samczsun.skype4j.events.chat.ChatEvent;
 
 public abstract class MessageEvent extends ChatEvent {
-    private ChatMessage message;
+    private final ChatMessage message;
 
     public MessageEvent(ChatMessage message) {
         super(message.getChat());
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/user/MultiUserAddEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/user/MultiUserAddEvent.java
index 9723209..ede99b5 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/user/MultiUserAddEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/user/MultiUserAddEvent.java
@@ -6,7 +6,7 @@
 import com.samczsun.skype4j.user.User;
 
 public class MultiUserAddEvent extends UserAddEvent {
-    private List<User> allUsers;
+    private final List<User> allUsers;
 
     public MultiUserAddEvent(List<User> users, User initiator) {
         super(users.get(0), initiator);
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/user/UserAddEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/user/UserAddEvent.java
index 1f7bb1a..7e817bc 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/user/UserAddEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/user/UserAddEvent.java
@@ -3,7 +3,7 @@
 import com.samczsun.skype4j.user.User;
 
 public class UserAddEvent extends UserEvent {
-    private User initiator;
+    private final User initiator;
     
     public UserAddEvent(User user, User initiator) {
         super(user);
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/user/UserEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/user/UserEvent.java
index 4c6908a..1cceec4 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/user/UserEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/user/UserEvent.java
@@ -4,7 +4,7 @@
 import com.samczsun.skype4j.user.User;
 
 public abstract class UserEvent extends ChatEvent {
-    private User user;
+    private final User user;
     
     public UserEvent(User user) {
         super(user.getChat());
diff --git a/src/main/java/com/samczsun/skype4j/events/chat/user/UserRemoveEvent.java b/src/main/java/com/samczsun/skype4j/events/chat/user/UserRemoveEvent.java
index 3b2c831..acbbe8f 100644
--- a/src/main/java/com/samczsun/skype4j/events/chat/user/UserRemoveEvent.java
+++ b/src/main/java/com/samczsun/skype4j/events/chat/user/UserRemoveEvent.java
@@ -3,7 +3,7 @@
 import com.samczsun.skype4j.user.User;
 
 public class UserRemoveEvent extends UserEvent {
-    private User initiator;
+    private final User initiator;
     
     public UserRemoveEvent(User user, User initiator) {
         super(user);
diff --git a/src/main/java/com/samczsun/skype4j/formatting/Message.java b/src/main/java/com/samczsun/skype4j/formatting/Message.java
index 7ea64d2..43a7b20 100644
--- a/src/main/java/com/samczsun/skype4j/formatting/Message.java
+++ b/src/main/java/com/samczsun/skype4j/formatting/Message.java
@@ -12,7 +12,7 @@ public static Text fromLegacy(String rawText) {
     private Message() {
     }
 
-    protected ArrayList<Text> components = new ArrayList<>();
+    protected final ArrayList<Text> components = new ArrayList<>();
 
     public static Text text(String text) {
         Message message = new Message();
diff --git a/src/main/java/com/samczsun/skype4j/formatting/Text.java b/src/main/java/com/samczsun/skype4j/formatting/Text.java
index 1ff3dec..47356f2 100644
--- a/src/main/java/com/samczsun/skype4j/formatting/Text.java
+++ b/src/main/java/com/samczsun/skype4j/formatting/Text.java
@@ -5,7 +5,7 @@
 import org.apache.commons.lang3.StringEscapeUtils;
 
 public class Text {
-    private Message parent;
+    private final Message parent;
 
     private String text = null;
     private boolean bold = false;
diff --git a/src/main/java/com/samczsun/skype4j/internal/ChatMessageOther.java b/src/main/java/com/samczsun/skype4j/internal/ChatMessageOther.java
index 7b5df9b..04c6e0a 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ChatMessageOther.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ChatMessageOther.java
@@ -6,11 +6,11 @@
 import com.samczsun.skype4j.user.User;
 
 public class ChatMessageOther extends ChatMessageImpl {
-    private String clientId;
-    private String id;
+    private final String clientId;
+    private final String id;
     private String message;
-    private long time;
-    private User sender;
+    private final long time;
+    private final User sender;
 
     public ChatMessageOther(Chat chat, User user, String id, String clientId, long time, String message) {
         this.clientId = clientId;
diff --git a/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java b/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java
index 6ee2c51..5045e8d 100644
--- a/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java
+++ b/src/main/java/com/samczsun/skype4j/internal/ChatMessageSelf.java
@@ -12,11 +12,11 @@
 import com.samczsun.skype4j.user.User;
 
 public class ChatMessageSelf extends ChatMessageImpl {
-    private String clientId;
-    private String id;
+    private final String clientId;
+    private final String id;
     private String message;
-    private long time;
-    private User sender;
+    private final long time;
+    private final User sender;
 
     public ChatMessageSelf(Chat chat, User user, String id, String clientId, long time, String message) {
         this.clientId = clientId;
diff --git a/src/main/java/com/samczsun/skype4j/internal/MessageType.java b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
index dd4f95f..10c7e3d 100644
--- a/src/main/java/com/samczsun/skype4j/internal/MessageType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
@@ -90,7 +90,6 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException {
                             originalContent = user.getMessageById(clientId).getText();
                         }
                     }
-                    final String finalContent = content;
                     final String finalOriginalContent = originalContent;
                     MessageEditedByOtherEvent event = new MessageEditedByOtherEvent(new ChatMessage() {
                         public String getClientId() {
@@ -124,7 +123,7 @@ public Chat getChat() {
                         public String getId() {
                             return id;
                         }
-                    }, finalContent, u);
+                    }, content, u);
                     skype.getEventDispatcher().callEvent(event);
                 }
             } else {
@@ -291,12 +290,12 @@ public void handle(SkypeImpl skype, JsonObject resource) {
     };
 
     private static final Map<String, MessageType> byValue = new HashMap<>();
-    private static final Pattern URL_PATTERN = Pattern.compile("conversations\\/(.*)");
+    private static final Pattern URL_PATTERN = Pattern.compile("conversations/(.*)");
     private static final Pattern USER_PATTERN = Pattern.compile("8:(.*)");
-    private static final Pattern STRIP_EDIT_PATTERN = Pattern.compile("<\\/?[e_m][^<>]+>");
-    private static final Pattern STRIP_QUOTE_PATTERN = Pattern.compile("(<(?:\\/?)(?:quote|legacyquote)[^>]*>)", Pattern.CASE_INSENSITIVE);
+    private static final Pattern STRIP_EDIT_PATTERN = Pattern.compile("</?[e_m][^<>]+>");
+    private static final Pattern STRIP_QUOTE_PATTERN = Pattern.compile("(<(?:/?)(?:quote|legacyquote)[^>]*>)", Pattern.CASE_INSENSITIVE);
 
-    private String value;
+    private final String value;
 
     MessageType(String value) {
         this.value = value;
@@ -326,7 +325,7 @@ private static Chat getChat(String url, SkypeImpl skype) {
         return null;
     }
 
-    private static User getUser(String url, Chat c) throws SkypeException {
+    private static User getUser(String url, Chat c) {
         Matcher m = USER_PATTERN.matcher(url);
         if (m.find()) {
             return c.getUser(m.group(1));
diff --git a/src/main/java/com/samczsun/skype4j/internal/RegisteredListener.java b/src/main/java/com/samczsun/skype4j/internal/RegisteredListener.java
index 6738b4e..f346515 100644
--- a/src/main/java/com/samczsun/skype4j/internal/RegisteredListener.java
+++ b/src/main/java/com/samczsun/skype4j/internal/RegisteredListener.java
@@ -7,8 +7,8 @@
 import com.samczsun.skype4j.events.Listener;
 
 public class RegisteredListener {
-    private Listener listener;
-    private Method method;
+    private final Listener listener;
+    private final Method method;
     
     public RegisteredListener(Listener l, Method m) {
         this.listener = l;
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeEventDispatcher.java b/src/main/java/com/samczsun/skype4j/internal/SkypeEventDispatcher.java
index bf90887..6dcf890 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeEventDispatcher.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeEventDispatcher.java
@@ -13,7 +13,7 @@
 import com.samczsun.skype4j.events.Listener;
 
 public class SkypeEventDispatcher implements EventDispatcher {
-    private Map<Class<? extends Event>, List<RegisteredListener>> listeners = new HashMap<>();
+    private final Map<Class<? extends Event>, List<RegisteredListener>> listeners = new HashMap<>();
 
     public void registerListener(Listener l) {
         Class<?> c = l.getClass();
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index 040b170..d840c45 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -5,15 +5,11 @@
 import java.net.URL;
 import java.net.URLEncoder;
 import java.text.SimpleDateFormat;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.Map;
-import java.util.UUID;
+import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
+import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -43,6 +39,7 @@
     private static final String MESSAGINGSERVICE_URL = "https://client-s.gateway.messenger.live.com/v1/users/ME/endpoints/%s/presenceDocs/messagingService";
     private static final String LOGOUT_URL = "https://login.skype.com/logout?client_id=578134&redirect_uri=https%3A%2F%2Fweb.skype.com&intsrc=client-_-webapp-_-production-_-go-signin";
 
+    private final AtomicBoolean loggedIn = new AtomicBoolean(false);
     private final Map<String, String> cookies = new HashMap<>();
     private final String skypeToken;
     private final String registrationToken;
@@ -51,9 +48,6 @@
 
     private final EventDispatcher eventDispatcher;
 
-    private Thread sessionKeepaliveThread;
-    private Thread pollThread;
-
     private final ExecutorService scheduler = Executors.newFixedThreadPool(16);
     private final Logger logger = Logger.getLogger("webskype");
     private final Map<String, Chat> allChats = new ConcurrentHashMap<>();
@@ -69,9 +63,9 @@ public SkypeImpl(String username, String password) throws SkypeException {
             Elements inputs = loginResponseDocument.select("input[name=skypetoken]");
             if (inputs.size() > 0) {
                 skypeToken = inputs.get(0).attr("value");
-                sessionKeepaliveThread = new Thread(String.format("Skype-%s-Session", username)) {
+                Thread sessionKeepaliveThread = new Thread(String.format("Skype-%s-Session", username)) {
                     public void run() {
-                        while (true) {
+                        while (loggedIn.get()) {
                             try {
                                 Jsoup.connect(PING_URL).header("X-Skypetoken", skypeToken).cookies(cookies).data("sessionId", guid.toString()).post();
                                 Thread.sleep(300000);
@@ -95,8 +89,9 @@ public void run() {
                 registrationToken = splits[0];
                 endpointId = splits[2].split("=")[1];
 
-                Date now = new Date();
-                now.setDate(now.getDate() - 14);
+                Calendar calendar = Calendar.getInstance();
+                calendar.set(Calendar.DAY_OF_MONTH, calendar.get(Calendar.DAY_OF_MONTH) - 14);
+                Date now = calendar.getTime();
 
                 String urlToUse = "https://client-s.gateway.messenger.live.com/v1/users/ME/conversations?startTime=" + now.getTime() + "&pageSize=100&view=msnp24Equivalent&targetType=Passport|Skype|Lync|Thread";
                 //        while (true) {
@@ -123,6 +118,7 @@ public void run() {
                     //                } else {
                     //                    break;
                     //                }
+                    loggedIn.set(true);
                 } catch (Exception e) {
                     throw new SkypeException("An exception occured while fetching chats", e);
                 }
@@ -152,12 +148,12 @@ public void subscribe() throws IOException {
         registerEndpoint.getOutputStream().write(buildRegistrationObject().toString().getBytes());
         registerEndpoint.getInputStream();
 
-        pollThread = new Thread() {
+        Thread pollThread = new Thread() {
             public void run() {
                 try {
                     URL url = new URL("https://client-s.gateway.messenger.live.com/v1/users/ME/endpoints/SELF/subscriptions/0/poll");
                     HttpsURLConnection c = null;
-                    while (true) {
+                    while (loggedIn.get()) {
                         try {
                             c = (HttpsURLConnection) url.openConnection();
                             c.setRequestMethod("POST");
@@ -242,8 +238,7 @@ public Chat getChat(String name) {
     @Override
     public void logout() throws IOException {
         Jsoup.connect(LOGOUT_URL).cookies(this.cookies).get();
-        this.sessionKeepaliveThread.stop();
-        this.pollThread.stop(); //TODO: Actually do Java
+        loggedIn.set(false);
     }
 
     public String getRegistrationToken() {
diff --git a/src/main/java/com/samczsun/skype4j/internal/UserImpl.java b/src/main/java/com/samczsun/skype4j/internal/UserImpl.java
index b9a7f46..22b05e4 100644
--- a/src/main/java/com/samczsun/skype4j/internal/UserImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/UserImpl.java
@@ -13,11 +13,11 @@
 public class UserImpl implements User {
     private String username;
 
-    private Chat chat;
+    private final Chat chat;
     private Role role = Role.USER;
     
-    private List<ChatMessage> messages = new CopyOnWriteArrayList<>();
-    private Map<String, ChatMessage> messageMap = new ConcurrentHashMap<>();
+    private final List<ChatMessage> messages = new CopyOnWriteArrayList<>();
+    private final Map<String, ChatMessage> messageMap = new ConcurrentHashMap<>();
 
     public UserImpl(String username, Chat chat) {
         this.username = username;
diff --git a/src/main/java/com/samczsun/skype4j/user/User.java b/src/main/java/com/samczsun/skype4j/user/User.java
index a6521fb..6a2fcdd 100644
--- a/src/main/java/com/samczsun/skype4j/user/User.java
+++ b/src/main/java/com/samczsun/skype4j/user/User.java
@@ -6,21 +6,21 @@
 import com.samczsun.skype4j.chat.ChatMessage;
 
 public interface User {
-    public String getUsername();
+    String getUsername();
 
-    public String getDisplayName();
+    String getDisplayName();
 
-    public Role getRole();
+    Role getRole();
 
-    public void setRole(Role role);
+    void setRole(Role role);
 
-    public Chat getChat();
+    Chat getChat();
     
-    public List<ChatMessage> getSentMessages();
+    List<ChatMessage> getSentMessages();
     
-    public ChatMessage getMessageById(String id);
+    ChatMessage getMessageById(String id);
 
-    public static enum Role {
+    enum Role {
         ADMIN, USER;
         
         public static Role getByName(String name) {
