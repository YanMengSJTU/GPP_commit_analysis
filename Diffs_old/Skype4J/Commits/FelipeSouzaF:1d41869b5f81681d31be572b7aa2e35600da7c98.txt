diff --git a/src/main/java/com/samczsun/skype4j/Skype.java b/src/main/java/com/samczsun/skype4j/Skype.java
index 9dec6c9..ecddabf 100644
--- a/src/main/java/com/samczsun/skype4j/Skype.java
+++ b/src/main/java/com/samczsun/skype4j/Skype.java
@@ -92,7 +92,7 @@
      * @throws ConnectionException   If an error occurs during connection
      * @throws ChatNotFoundException If this skype account is not a member of the chat
      */
-    Chat loadChat(String name) throws ConnectionException, ChatNotFoundException;
+    Chat loadChat(String name) throws ConnectionException, ChatNotFoundException, Exception;
 
     /**
      * Get a chat, and if said chat doesn't exist, load it
@@ -102,7 +102,7 @@
      * @throws ConnectionException   If an exception occurs while fetching chat details
      * @throws ChatNotFoundException If the chat does not exist
      */
-    Chat getOrLoadChat(String name) throws ConnectionException, ChatNotFoundException;
+    Chat getOrLoadChat(String name) throws ConnectionException, ChatNotFoundException, Exception;
 
     /**
      * Join the chat with the given id in the format of 19:xxxxx@thread.skype
@@ -113,7 +113,7 @@
      * @throws ChatNotFoundException If the chat does not exist
      * @throws NoPermissionException If the chat is not public
      */
-    GroupChat joinChat(String chatId) throws ConnectionException, ChatNotFoundException, NoPermissionException;
+    GroupChat joinChat(String chatId) throws ConnectionException, ChatNotFoundException, NoPermissionException, Exception;
 
     /**
      * Load amount of chats in the past
diff --git a/src/main/java/com/samczsun/skype4j/internal/EventType.java b/src/main/java/com/samczsun/skype4j/internal/EventType.java
index fe83aa7..d73c703 100644
--- a/src/main/java/com/samczsun/skype4j/internal/EventType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/EventType.java
@@ -30,7 +30,7 @@
 public enum EventType {
     NEW_MESSAGE("NewMessage") {
         @Override
-        public void handle(SkypeImpl skype, JsonObject eventObj) throws SkypeException, IOException {
+        public void handle(SkypeImpl skype, JsonObject eventObj) throws SkypeException, IOException, Exception {
 
             JsonObject resource = eventObj.get("resource").asObject();
             String type = Utils.getString(resource, "messagetype");
diff --git a/src/main/java/com/samczsun/skype4j/internal/Factory.java b/src/main/java/com/samczsun/skype4j/internal/Factory.java
index 9684abc..168eb56 100644
--- a/src/main/java/com/samczsun/skype4j/internal/Factory.java
+++ b/src/main/java/com/samczsun/skype4j/internal/Factory.java
@@ -34,7 +34,7 @@
 
 public class Factory {
 
-    public static ChatImpl createChat(SkypeImpl client, String identity) throws ConnectionException, ChatNotFoundException {
+    public static ChatImpl createChat(SkypeImpl client, String identity) throws ConnectionException, ChatNotFoundException, Exception {
         Validate.notNull(client, "Client must not be null");
         Validate.notEmpty(identity, "Identity must not be null/empty");
 
@@ -60,7 +60,7 @@ public static ChatImpl createChat(SkypeImpl client, String identity) throws Conn
         throw new IllegalArgumentException(String.format("Unknown chat type with identity %s", identity));
     }
 
-    public static ParticipantImpl createParticipant(SkypeImpl client, ChatImpl chat, String id) throws Exception {
+    public static ParticipantImpl createParticipant(SkypeImpl client, ChatImpl chat, String id) throws ConnectionException, Exception {
         Validate.notNull(client, "Client must not be null");
         Validate.notNull(chat, "Chat must not be null");
         Validate.notEmpty(id, "Identity must not be null/empty");
diff --git a/src/main/java/com/samczsun/skype4j/internal/MessageType.java b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
index ee45a7c..46d3117 100644
--- a/src/main/java/com/samczsun/skype4j/internal/MessageType.java
+++ b/src/main/java/com/samczsun/skype4j/internal/MessageType.java
@@ -74,7 +74,7 @@ public void handle(SkypeImpl skype, JsonObject resource) {
     },
     TEXT_INTERNAL("TextInternalShouldNotBeUsedOutside") {
         @Override
-        public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException {
+        public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException, Exception {
             ChatImpl chat = getChat(resource, skype);
             ParticipantImpl user = getSender(resource, chat);
 
@@ -148,13 +148,13 @@ public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException,
     },
     TEXT("Text") {
         @Override
-        public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException {
+        public void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException, Exception {
             MessageType.TEXT_INTERNAL.handle(skype, resource);
         }
     },
     RICH_TEXT("RichText") {
         @Override
-        public void handle(final SkypeImpl skype, JsonObject resource) throws SkypeException, IOException {
+        public void handle(final SkypeImpl skype, JsonObject resource) throws SkypeException, IOException, Exception {
             String content = Utils.getString(resource, "content");
             Validate.notNull(content, "Null content");
             Matcher matcher = URIOBJECT.matcher(content);
@@ -361,7 +361,7 @@ public void handle(SkypeImpl skype, JsonObject resource) throws ConnectionExcept
     },
     THREAD_ACTIVITY_ADD_MEMBER("ThreadActivity/AddMember") {
         @Override
-        public void handle(SkypeImpl skype, JsonObject resource) throws ConnectionException, ChatNotFoundException, IOException {
+        public void handle(SkypeImpl skype, JsonObject resource) throws ConnectionException, ChatNotFoundException, IOException, Exception {
             ChatImpl chat = getChat(resource, skype);
             UserImpl initiator = null;
             try {
@@ -691,7 +691,7 @@ public String getValue() {
         return this.value;
     }
 
-    public abstract void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException;
+    public abstract void handle(SkypeImpl skype, JsonObject resource) throws SkypeException, IOException, Exception;
 
     static {
         for (MessageType type : values()) {
diff --git a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
index fc84d2e..eba7d1b 100644
--- a/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/SkypeImpl.java
@@ -212,6 +212,8 @@ public void login() throws ConnectionException, InvalidCredentialsException, Wro
                     throw new RuntimeException(e);
                 } catch (IllegalArgumentException e) {
                     handleError(null, new RuntimeException(value.toString(), e), false);
+                } catch (Exception ex) {
+                    Logger.getLogger(SkypeImpl.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
 
@@ -312,7 +314,7 @@ public Chat getChat(String name) {
     }
 
     @Override
-    public ChatImpl loadChat(String name) throws ConnectionException, ChatNotFoundException {
+    public ChatImpl loadChat(String name) throws ConnectionException, ChatNotFoundException, Exception {
         if (!allChats.containsKey(name)) {
             ChatImpl chat = Factory.createChat(this, name);
             allChats.put(name, chat);
@@ -323,7 +325,7 @@ public ChatImpl loadChat(String name) throws ConnectionException, ChatNotFoundEx
     }
 
     @Override
-    public ChatImpl getOrLoadChat(String name) throws ConnectionException, ChatNotFoundException {
+    public ChatImpl getOrLoadChat(String name) throws ConnectionException, ChatNotFoundException, Exception {
         if (allChats.containsKey(name)) {
             return allChats.get(name);
         } else {
@@ -332,7 +334,7 @@ public ChatImpl getOrLoadChat(String name) throws ConnectionException, ChatNotFo
     }
 
     @Override
-    public GroupChat joinChat(String id) throws ConnectionException, ChatNotFoundException, NoPermissionException {
+    public GroupChat joinChat(String id) throws ConnectionException, ChatNotFoundException, NoPermissionException, Exception {
         Validate.isTrue(id.startsWith("19:") && id.endsWith("@thread.skype"), "Invalid chat id");
         JsonObject obj = new JsonObject();
         obj.add("role", "User");
diff --git a/src/main/java/com/samczsun/skype4j/internal/chat/ChatBot.java b/src/main/java/com/samczsun/skype4j/internal/chat/ChatBot.java
index 6bdbb5a..eb8ab2d 100644
--- a/src/main/java/com/samczsun/skype4j/internal/chat/ChatBot.java
+++ b/src/main/java/com/samczsun/skype4j/internal/chat/ChatBot.java
@@ -46,7 +46,7 @@ public void removeUser(String username) {
     }
 
     @Override
-    public void load() throws ConnectionException {
+    public void load() throws ConnectionException, Exception {
         BotImpl botImpl = (BotImpl) Factory.createParticipant(getClient(), this, getIdentity());
         botImpl.setInfo(getClient().getOrLoadBotInfo(botImpl.getId()));
         this.users.put(botImpl.getId().toLowerCase(), botImpl);
diff --git a/src/main/java/com/samczsun/skype4j/internal/chat/ChatGroup.java b/src/main/java/com/samczsun/skype4j/internal/chat/ChatGroup.java
index c88f4b5..3faa2ae 100644
--- a/src/main/java/com/samczsun/skype4j/internal/chat/ChatGroup.java
+++ b/src/main/java/com/samczsun/skype4j/internal/chat/ChatGroup.java
@@ -59,7 +59,7 @@ public ChatGroup(SkypeImpl skype, String identity) throws ConnectionException, C
         super(skype, identity);
     }
 
-    public void load() throws ConnectionException, ChatNotFoundException {
+    public void load() throws ConnectionException, ChatNotFoundException, Exception {
         JsonObject object = Endpoints.CHAT_INFO_URL
                 .open(getClient(), getIdentity())
                 .as(JsonObject.class)
@@ -141,7 +141,7 @@ public void load() throws ConnectionException, ChatNotFoundException {
         }
     }
 
-    public void addUser(String username) throws ConnectionException {
+    public void addUser(String username) throws ConnectionException, Exception {
         username = "8:" + username;
         if (!users.containsKey(username.toLowerCase())) {
             ParticipantImpl user = Factory.createParticipant(getClient(), this, username);
diff --git a/src/main/java/com/samczsun/skype4j/internal/chat/ChatImpl.java b/src/main/java/com/samczsun/skype4j/internal/chat/ChatImpl.java
index d030dda..a41f824 100644
--- a/src/main/java/com/samczsun/skype4j/internal/chat/ChatImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/chat/ChatImpl.java
@@ -304,11 +304,11 @@ public void alertsOn(String keyword) throws ConnectionException {
         putOption("alertmatches", JsonValue.valueOf(keyword), false);
     }
 
-    public abstract void addUser(String username) throws ConnectionException;
+    public abstract void addUser(String username) throws ConnectionException, Exception;
 
     public abstract void removeUser(String username);
 
-    public abstract void load() throws ConnectionException, ChatNotFoundException;
+    public abstract void load() throws ConnectionException, ChatNotFoundException, Exception;
 
     protected void putOption(String option, JsonValue value, boolean global) throws ConnectionException {
         JsonObject obj = new JsonObject();
diff --git a/src/main/java/com/samczsun/skype4j/internal/chat/ChatIndividual.java b/src/main/java/com/samczsun/skype4j/internal/chat/ChatIndividual.java
index 97c678d..3c4e0f5 100644
--- a/src/main/java/com/samczsun/skype4j/internal/chat/ChatIndividual.java
+++ b/src/main/java/com/samczsun/skype4j/internal/chat/ChatIndividual.java
@@ -36,7 +36,7 @@ public ChatIndividual(SkypeImpl skype, String identity) throws ConnectionExcepti
     }
 
     @Override
-    public void load() throws ConnectionException {
+    public void load() throws ConnectionException, Exception {
         UserImpl partner = (UserImpl) Factory.createParticipant(getClient(), this, getIdentity());
         this.users.put(partner.getId().toLowerCase(), partner);
 
diff --git a/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java b/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java
index 3a139be..544c03f 100644
--- a/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java
+++ b/src/main/java/com/samczsun/skype4j/internal/participants/UserImpl.java
@@ -18,6 +18,7 @@
 
 import com.eclipsesource.json.JsonArray;
 import com.eclipsesource.json.JsonObject;
+import com.samczsun.skype4j.exceptions.ConnectionException;
 import com.samczsun.skype4j.internal.Endpoints;
 import com.samczsun.skype4j.internal.SkypeImpl;
 import com.samczsun.skype4j.internal.chat.ChatImpl;
@@ -29,7 +30,7 @@
 public class UserImpl extends ParticipantImpl implements User {
     private Contact contactRep;
 
-    public UserImpl(SkypeImpl skype, ChatImpl chat, String id) throws Exception {
+    public UserImpl(SkypeImpl skype, ChatImpl chat, String id) throws ConnectionException, Exception {
         super(skype, chat, id);
         contactRep = new ContactImpl(skype, "8:"+getId().substring(2), updateDisplayName());
     }
