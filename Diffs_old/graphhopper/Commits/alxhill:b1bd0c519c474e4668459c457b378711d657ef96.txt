diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
index 75199d8b36..0023fc868c 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
@@ -25,6 +25,7 @@
 
     private static int iteration;
 
+    public static String metricFolder;
 
     public static void main(String[] args) throws IOException, InterruptedException
     {
@@ -34,10 +35,12 @@ public static void main(String[] args) throws IOException, InterruptedException
 
         if (args.length == 0 || args[0].equals("--web"))
         {
+            metricFolder = "simulations/realtime- " + (System.currentTimeMillis() / 1000L);
+            new File(metricFolder).mkdirs();
             startFileServer();
             startWebSocketServer();
         } else if (args[0].equals("--file")) {
-            runOfflineSimulation(args[1], Integer.parseInt(args[2]));
+            runOfflineSimulation(Integer.parseInt(args[1]));
             logger.info("Simulation complete.");
             return;
         }
@@ -52,9 +55,11 @@ public static void main(String[] args) throws IOException, InterruptedException
         System.exit(0);
     }
 
-    private static void runOfflineSimulation(String outfile, int initialVehicles) throws IOException
+    private static void runOfflineSimulation(int initialVehicles) throws IOException
     {
-        PrintWriter p = new PrintWriter("simulations/" + outfile, "UTF-8");
+        metricFolder = "simulations/" + initialVehicles + "-" + (System.currentTimeMillis() / 1000L);
+        new File(metricFolder).mkdirs();
+        PrintWriter p = new PrintWriter(metricFolder + "/simulation.csv", "UTF-8");
         p.println(MarmosetHopper.Metrics.getHeader());
         start(initialVehicles);
         while (mh.getVehicleCount() > 0 && mh.timestep(false))
@@ -71,7 +76,7 @@ private static void runOfflineSimulation(String outfile, int initialVehicles) th
 
             if (iteration % 1000 == 0)
             {
-                PrintWriter iterPrint = new PrintWriter("simulations/" + (outfile + iteration), "UTF-8");
+                PrintWriter iterPrint = new PrintWriter(metricFolder + "/iteration" + iteration, "UTF-8");
                 iterPrint.println(mh.getVehicleString());
                 iterPrint.close();
             }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/vehicle/BaseVehicle.java b/marmoset/src/main/java/com/graphhopper/marmoset/vehicle/BaseVehicle.java
index 54e75139c1..4f0cfb288c 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/vehicle/BaseVehicle.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/vehicle/BaseVehicle.java
@@ -1,5 +1,6 @@
 package com.graphhopper.marmoset.vehicle;
 
+import com.graphhopper.marmoset.Marmoset;
 import com.graphhopper.marmoset.MarmosetHopper;
 import com.graphhopper.marmoset.util.CellGraph;
 import com.graphhopper.marmoset.util.CellIterator;
@@ -94,7 +95,7 @@ protected void finish(String error)
     // called only if there's no error, so we use this to capture metrics
     protected void finish()
     {
-        String filename = String.format("simulations/vehicle-%d-%d.csv", id, System.currentTimeMillis() / 1000L);
+        String filename = Marmoset.metricFolder + "/vehicle-" + id;
         try
         {
             PrintWriter p = new PrintWriter(filename);
