diff --git a/android/app/src/main/java/com/graphhopper/android/MainActivity.java b/android/app/src/main/java/com/graphhopper/android/MainActivity.java
index dd66542c54..3cd489e212 100644
--- a/android/app/src/main/java/com/graphhopper/android/MainActivity.java
+++ b/android/app/src/main/java/com/graphhopper/android/MainActivity.java
@@ -21,6 +21,8 @@
 import org.mapsforge.map.layer.overlay.Marker;
 import org.mapsforge.map.layer.overlay.Polyline;
 import org.mapsforge.map.layer.renderer.TileRendererLayer;
+import org.mapsforge.map.reader.MapDataStore;
+import org.mapsforge.map.reader.MapFile;
 import org.mapsforge.map.rendertheme.InternalRenderTheme;
 
 import android.app.Activity;
@@ -397,13 +399,12 @@ protected void onPostExecute( Object _ignore )
     void loadMap( File areaFolder )
     {
         logUser("loading map");
-        File mapFile = new File(areaFolder, currentArea + ".map");
+        MapDataStore mapDataStore = new MapFile(new File(areaFolder, currentArea + ".map"));
 
         mapView.getLayerManager().getLayers().clear();
 
-        TileRendererLayer tileRendererLayer = new TileRendererLayer(tileCache, mapView.getModel().mapViewPosition,
-                false,
-                true, AndroidGraphicFactory.INSTANCE)
+        TileRendererLayer tileRendererLayer = new TileRendererLayer(tileCache, mapDataStore,
+        		mapView.getModel().mapViewPosition, false, true, AndroidGraphicFactory.INSTANCE)
                 {
                     @Override
                     public boolean onLongPress( LatLong tapLatLong, Point layerXY, Point tapXY )
@@ -411,10 +412,9 @@ public boolean onLongPress( LatLong tapLatLong, Point layerXY, Point tapXY )
                         return onMapTap(tapLatLong, layerXY, tapXY);
                     }
                 };
-        tileRendererLayer.setMapFile(mapFile);
         tileRendererLayer.setTextScale(1.5f);
         tileRendererLayer.setXmlRenderTheme(InternalRenderTheme.OSMARENDER);
-        mapView.getModel().mapViewPosition.setMapPosition(new MapPosition(tileRendererLayer.getMapDatabase().getMapFileInfo().boundingBox.getCenterPoint(), (byte) 15));
+        mapView.getModel().mapViewPosition.setMapPosition(new MapPosition(mapDataStore.boundingBox().getCenterPoint(), (byte) 15));
         mapView.getLayerManager().getLayers().add(tileRendererLayer);
 
         setContentView(mapView);
@@ -518,7 +518,7 @@ protected void onPostExecute( GHResponse resp )
                             / 1000f + ", nodes:" + resp.getPoints().getSize() + ", time:"
                             + time + " " + resp.getDebugInfo());
                     logUser("the route is " + (int) (resp.getDistance() / 100) / 10f
-                            + "km long, time:" + resp.getMillis() / 60000f + "min, debug:" + time);
+                            + "km long, time:" + resp.getTime() / 60000f + "min, debug:" + time);
 
                     mapView.getLayerManager().getLayers().add(createPolyline(resp));
                     //mapView.redraw();
diff --git a/core/files/changelog.txt b/core/files/changelog.txt
index 7ffdcfced2..01daaa0cde 100644
--- a/core/files/changelog.txt
+++ b/core/files/changelog.txt
@@ -1,4 +1,7 @@
-0.4.0    
+0.5
+    made GHResponse.getMillis, Path.getMillis, GPXEntry.getMillis deprecated, use getTime instead
+
+0.4
     translation key turn changed and merged with left etc into turn_left, turn_right etc
     create location index before preparation in the GraphHopper class
     encodingManager.getSingle() is removed and flagEncoder list is no longer sorted, the first vehicle is used for CH preparation    
