diff --git a/.gitignore b/.gitignore
index 8b7f84e48d..4719a4a493 100644
--- a/.gitignore
+++ b/.gitignore
@@ -18,6 +18,7 @@ android/libs/graphhopper-*-android.jar
 *iml
 debug.sh
 *.pbf
+web/src/main/webapp/js/options_prod.js
 !/core/src/test/resources/com/graphhopper/reader/*.pbf
 *.dem
 *.log
diff --git a/config-example.properties b/config-example.properties
index c4af6a09dc..09944c681a 100644
--- a/config-example.properties
+++ b/config-example.properties
@@ -6,7 +6,7 @@
 graph.flagEncoders=car
 
 # Enable turn restrictions for car or motorcycle. 
-# Currently you need to additionally set prepare.chWeighting=no before using this (see below and #270)
+# Currently you need to additionally set prepare.chWeightings=no before using this (see below and #270)
 # graph.flagEncoders=car|turnCosts=true
 
 
@@ -39,11 +39,11 @@ graph.dataaccess=RAM_STORE
 #
 # By default the speed-up mode with the 'fastest' weighting is used. Internally a graph preparation via
 # contraction hierarchies is done to speed routing up. This requires more RAM/disc space for holding the
-# graph but less for every request.
-# prepare.chWeighting=fastest
+# graph but less for every request. You can also setup multiple weightings, by providing a coma separated list.
+# prepare.chWeightings=fastest
 #
 # Disable the speed-up mode (contraction hierarchies, CH) via enabling the flexibility mode:
-# prepare.chWeighting=no
+# prepare.chWeightings=no
 #
 # To make preparation faster for multiple flagEncoders you can increase the default threads if you have enough RAM
 # prepare.threads=1
diff --git a/core/files/changelog.txt b/core/files/changelog.txt
index e7a5d40f90..d0d8675fcb 100644
--- a/core/files/changelog.txt
+++ b/core/files/changelog.txt
@@ -3,6 +3,8 @@
     renaming of Tarjans algorithm class to TarjansSCCAlgorithm
     more strict naming for Weighting enforced and more strict matching to select Weighting (equals check), #490
     specify the preferred-language for way names during graph import (ISO 639-1 or ISO 639-2)
+    renaming of getCHWeighting to getCHWeightings due to supporting multiple CH weightings, #623
+    deprecation of setCHWeighting, please use setCHWeightings instead, #623
 
 0.5
     Several names have changed see #466, #467, #468
diff --git a/core/files/travis-build.sh b/core/files/travis-build.sh
index 116c92878b..1fe2285bf6 100755
--- a/core/files/travis-build.sh
+++ b/core/files/travis-build.sh
@@ -5,6 +5,7 @@ mvn clean test verify
 
 cd $HOME/../../web
 
+sudo chown -R $USER ~/.npm
 npm install
 npm test && npm run lint
 
diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java
index b8ab0d58d3..e5ba0d3fa8 100644
--- a/core/src/main/java/com/graphhopper/GraphHopper.java
+++ b/core/src/main/java/com/graphhopper/GraphHopper.java
@@ -31,7 +31,6 @@
 import com.graphhopper.storage.index.QueryResult;
 import com.graphhopper.util.*;
 import com.graphhopper.util.shapes.GHPoint;
-
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -83,7 +82,7 @@
     // for CH prepare    
     private boolean doPrepare = true;
     private boolean chEnabled = true;
-    private String chWeightingStr = "fastest";
+    private final List<String> chWeightingList = new ArrayList<String>(Arrays.asList("fastest"));
     private int chPrepareThreads = -1;
     private ExecutorService chPreparePool;
     private int preparePeriodicUpdates = -1;
@@ -293,22 +292,60 @@ private GraphHopper setUnsafeMemory()
         return this;
     }
 
+    /**
+     * Wrapper method for {@link GraphHopper#setCHWeightings(List)}
+     * <p>
+     * @deprecated This method is used as a deprecated wrapper to not break the JavaApi. This will
+     * be removed in the future. Please use {@link GraphHopper#setCHWeightings(List)} or
+     * {@link GraphHopper#setCHWeightings(String...)}
+     */
+    @Deprecated
+    public GraphHopper setCHWeighting( String weightingName )
+    {
+        return this.setCHWeightings(weightingName);
+    }
+
+    /**
+     * Wrapper method for {@link GraphHopper#setCHWeightings(List)}
+     */
+    public GraphHopper setCHWeightings( String... weightingNames )
+    {
+        return this.setCHWeightings(Arrays.asList(weightingNames));
+    }
+
     /**
      * Enables the use of contraction hierarchies to reduce query times. Enabled by default.
      * <p>
      *
-     * @param weighting can be "fastest", "shortest" or your own weight-calculation type.
+     * @param weightingList A list containing multiple weightings like: "fastest", "shortest" or
+     * your own weight-calculation type.
      */
-    public GraphHopper setCHWeighting( String weighting )
+    public GraphHopper setCHWeightings( List<String> weightingList )
     {
         ensureNotLoaded();
-        chWeightingStr = weighting.toLowerCase();
+
+        if (weightingList.isEmpty())
+            throw new IllegalArgumentException("It is not allowed to pass an emtpy weightingList");
+
+        this.chWeightingList.clear();
+        for (String weight : weightingList)
+        {
+            weight = weight.toLowerCase();
+            weight = weight.trim();
+            this.chWeightingList.add(weight);
+        }
         return this;
     }
 
-    public String getCHWeighting()
+    /**
+     * Returns all CHWeighting names
+     */
+    public List<String> getCHWeightings()
     {
-        return chWeightingStr;
+        if (this.chWeightingList.isEmpty())
+            throw new IllegalStateException("Potential bug: chWeightingList is empty");
+
+        return this.chWeightingList;
     }
 
     /**
@@ -620,10 +657,15 @@ public GraphHopper init( CmdArgs args )
         doPrepare = args.getBool("prepare.doPrepare", doPrepare);
         setCHPrepareThreads(args.getInt("prepare.threads", chPrepareThreads));
 
-        String tmpCHWeighting = args.get("prepare.chWeighting", "fastest");
-        chEnabled = "fastest".equals(tmpCHWeighting) || "shortest".equals(tmpCHWeighting);
+        String chWeightingsStr = args.get("prepare.chWeightings", "");
+        // remove when deprecated setCHWeighting method is removed
+        if (chWeightingsStr.isEmpty())
+            chWeightingsStr = args.get("prepare.chWeighting", "fastest");
+
+        List<String> tmpCHWeightingList = Arrays.asList(chWeightingsStr.split(","));
+        chEnabled = !"no".equals(chWeightingsStr);
         if (chEnabled)
-            setCHWeighting(tmpCHWeighting);
+            setCHWeightings(tmpCHWeightingList);
 
         preparePeriodicUpdates = args.getInt("prepare.updates.periodic", preparePeriodicUpdates);
         prepareLazyUpdates = args.getInt("prepare.updates.lazy", prepareLazyUpdates);
@@ -861,8 +903,11 @@ private void initCHAlgoFactories()
         if (algoFactories.isEmpty())
             for (FlagEncoder encoder : encodingManager.fetchEdgeEncoders())
             {
-                Weighting weighting = createWeighting(new WeightingMap(chWeightingStr), encoder);
-                algoFactories.put(weighting, null);
+                for (String chWeightingStr : getCHWeightings())
+                {
+                    Weighting weighting = createWeighting(new WeightingMap(chWeightingStr), encoder);
+                    algoFactories.put(weighting, null);
+                }
             }
     }
 
@@ -959,8 +1004,8 @@ public Weighting getWeightingForCH( WeightingMap weightingMap, FlagEncoder encod
         // get requested weighting name
         String weightingStr = weightingMap.getWeighting().toLowerCase();
         if (weightingStr.isEmpty())
-            weightingStr = chWeightingStr;
-        
+            weightingStr = getCHWeightings().get(0);
+
         for (Weighting w : algoFactories.keySet())
         {
             if (w.matches(weightingStr, encoder))
diff --git a/core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java b/core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java
index 0c29fc7649..dc20ead2ac 100644
--- a/core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java
+++ b/core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java
@@ -231,7 +231,7 @@ public String getName()
     }
 
     /**
-     * List currently used memory in MB (approximatively)
+     * List currently used memory in MB (approximately)
      */
     public String getMemoryUsageAsString()
     {
diff --git a/core/src/main/java/com/graphhopper/routing/Path.java b/core/src/main/java/com/graphhopper/routing/Path.java
index 8cfe8ee8a5..ff3b5155b6 100644
--- a/core/src/main/java/com/graphhopper/routing/Path.java
+++ b/core/src/main/java/com/graphhopper/routing/Path.java
@@ -94,7 +94,7 @@ protected Path setEndNode( int end )
     }
 
     /**
-     * We need to remember fromNode explicitely as its not saved in one edgeId of edgeIds.
+     * We need to remember fromNode explicitly as its not saved in one edgeId of edgeIds.
      */
     protected Path setFromNode( int from )
     {
@@ -494,7 +494,7 @@ public void next( EdgeIteratorState edge, int index )
                             ways.add(prevInstruction);
                         }
 
-                        // Add passed exits to instruction. A node is countet if there is at least one outgoing edge
+                        // Add passed exits to instruction. A node is counted if there is at least one outgoing edge
                         // out of the roundabout
                         EdgeIterator edgeIter = outEdgeExplorer.setBaseNode(adjNode);
                         while (edgeIter.next())
diff --git a/core/src/main/java/com/graphhopper/routing/QueryGraph.java b/core/src/main/java/com/graphhopper/routing/QueryGraph.java
index 8c15d50bdc..0e408d9c2c 100644
--- a/core/src/main/java/com/graphhopper/routing/QueryGraph.java
+++ b/core/src/main/java/com/graphhopper/routing/QueryGraph.java
@@ -384,7 +384,7 @@ public boolean enforceHeading( int nodeId, double favoredHeading, boolean incomi
 
         // either penalize incoming or outgoing edges
         List<Integer> edgePositions = incoming ? Arrays.asList(VE_BASE, VE_ADJ_REV) : Arrays.asList(VE_BASE_REV, VE_ADJ);
-        boolean enforcementOccured = false;
+        boolean enforcementOccurred = false;
         for (int edgePos : edgePositions)
         {
             VirtualEdgeIteratorState edge = virtualEdges.get(virtNodeIDintern * 4 + edgePos);
@@ -413,11 +413,11 @@ public boolean enforceHeading( int nodeId, double favoredHeading, boolean incomi
                 VirtualEdgeIteratorState reverseEdge = virtualEdges.get(virtNodeIDintern * 4 + getPosOfReverseEdge(edgePos));
                 reverseEdge.setVirtualEdgePreference(true);
                 modifiedEdges.add(reverseEdge);
-                enforcementOccured = true;
+                enforcementOccurred = true;
             }
 
         }
-        return enforcementOccured;
+        return enforcementOccurred;
     }
 
     /**
diff --git a/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java b/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java
index d7bd68c839..63e315600a 100644
--- a/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java
+++ b/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java
@@ -255,7 +255,7 @@ void contractNodes()
         StopWatch lazySW = new StopWatch();
 
         // Recompute priority of uncontracted neighbors.
-        // Without neighborupdates preparation is faster but we need them
+        // Without neighbor updates preparation is faster but we need them
         // to slightly improve query time. Also if not applied too often it decreases the shortcut number.
         boolean neighborUpdate = true;
         if (neighborUpdatePercentage == 0)
@@ -530,7 +530,7 @@ public void foundShortcut( int u_fromNode, int w_toNode,
      * Calculates the priority of adjNode v without changing the graph. Warning: the calculated
      * priority must NOT depend on priority(v) and therefor findShortcuts should also not depend on
      * the priority(v). Otherwise updating the priority before contracting in contractNodes() could
-     * lead to a slowishor even endless loop.
+     * lead to a slowish or even endless loop.
      */
     int calculatePriority( int v )
     {
@@ -819,131 +819,114 @@ public RoutingAlgorithm createAlgo( Graph graph, AlgorithmOptions opts )
         AbstractBidirAlgo algo;
         if (AlgorithmOptions.ASTAR_BI.equals(opts.getAlgorithm()))
         {
-            AStarBidirection astarBi = new AStarBidirection(graph, prepareFlagEncoder, prepareWeighting, traversalMode)
-            {
-                @Override
-                protected void initCollections( int nodes )
-                {
-                    // algorithm with CH does not need that much memory pre allocated
-                    super.initCollections(Math.min(initialCollectionSize, nodes));
-                }
-
-                @Override
-                protected boolean finished()
-                {
-                    // we need to finish BOTH searches for CH!
-                    if (finishedFrom && finishedTo)
-                        return true;
-
-                    // changed finish condition for CH
-                    return currFrom.weight >= bestPath.getWeight() && currTo.weight >= bestPath.getWeight();
-                }
-
-                @Override
-                protected boolean isWeightLimitExceeded()
-                {
-                    return currFrom.weight > weightLimit && currTo.weight > weightLimit;
-                }
+            algo = createAStarBidirection(graph);
+        } else if (AlgorithmOptions.DIJKSTRA_BI.equals(opts.getAlgorithm()))
+        {
+            algo = createDijkstraBidirection(graph);
+        } else
+        {
+            throw new UnsupportedOperationException("Algorithm " + opts.getAlgorithm() + " not supported for Contraction Hierarchies");
+        }
 
-                @Override
-                protected Path createAndInitPath()
-                {
-                    bestPath = new Path4CH(graph, graph.getBaseGraph(), flagEncoder);
-                    return bestPath;
-                }
+        algo.setEdgeFilter(levelFilter);
+        return algo;
+    }
 
-                @Override
-                public String getName()
+    private AStarBidirection createAStarBidirection(final Graph graph) {
+        return new AStarBidirection(graph, prepareFlagEncoder, prepareWeighting, traversalMode)
                 {
-                    return "astarbiCH";
-                }
+                    @Override
+                    protected void initCollections( int nodes )
+                    {
+                        // algorithm with CH does not need that much memory pre allocated
+                        super.initCollections(Math.min(initialCollectionSize, nodes));
+                    }
 
-                @Override
+                    @Override
+                    protected boolean finished()
+                    {
+                        // we need to finish BOTH searches for CH!
+                        if (finishedFrom && finishedTo)
+                            return true;
 
-                public String toString()
-                {
-                    return getName() + "|" + prepareWeighting;
-                }
-            };
-            algo = astarBi;
-        } else if (AlgorithmOptions.DIJKSTRA_BI.equals(opts.getAlgorithm()))
-        {
-            algo = new DijkstraBidirectionRef(graph, prepareFlagEncoder, prepareWeighting, traversalMode)
-            {
-                @Override
-                protected void initCollections( int nodes )
-                {
-                    // algorithm with CH does not need that much memory pre allocated
-                    super.initCollections(Math.min(initialCollectionSize, nodes));
-                }
+                        // changed finish condition for CH
+                        return currFrom.weight >= bestPath.getWeight() && currTo.weight >= bestPath.getWeight();
+                    }
 
-                @Override
-                public boolean finished()
-                {
-                    // we need to finish BOTH searches for CH!
-                    if (finishedFrom && finishedTo)
-                        return true;
+                    @Override
+                    protected boolean isWeightLimitExceeded()
+                    {
+                        return currFrom.weight > weightLimit && currTo.weight > weightLimit;
+                    }
 
-                    // changed also the final finish condition for CH                
-                    return currFrom.weight >= bestPath.getWeight() && currTo.weight >= bestPath.getWeight();
-                }
+                    @Override
+                    protected Path createAndInitPath()
+                    {
+                        bestPath = new Path4CH(graph, graph.getBaseGraph(), flagEncoder);
+                        return bestPath;
+                    }
 
-                @Override
-                protected boolean isWeightLimitExceeded()
-                {
-                    return currFrom.weight > weightLimit && currTo.weight > weightLimit;
-                }
+                    @Override
+                    public String getName()
+                    {
+                        return "astarbiCH";
+                    }
 
-                @Override
-                protected Path createAndInitPath()
-                {
-                    bestPath = new Path4CH(graph, graph.getBaseGraph(), flagEncoder);
-                    return bestPath;
-                }
+                    @Override
 
-                @Override
-                public String getName()
-                {
-                    return "dijkstrabiCH";
-                }
+                    public String toString()
+                    {
+                        return getName() + "|" + prepareWeighting;
+                    }
+                };
+    }
 
-                @Override
-                public String toString()
-                {
-                    return getName() + "|" + prepareWeighting;
-                }
-            };
-        } else
+    private AbstractBidirAlgo createDijkstraBidirection(final Graph graph) {
+        return new DijkstraBidirectionRef(graph, prepareFlagEncoder, prepareWeighting, traversalMode)
         {
-            throw new UnsupportedOperationException("Algorithm " + opts.getAlgorithm() + " not supported for Contraction Hierarchies");
-        }
+            @Override
+            protected void initCollections( int nodes )
+            {
+                // algorithm with CH does not need that much memory pre allocated
+                super.initCollections(Math.min(initialCollectionSize, nodes));
+            }
 
-        algo.setEdgeFilter(levelFilter);
-        return algo;
-    }
+            @Override
+            public boolean finished()
+            {
+                // we need to finish BOTH searches for CH!
+                if (finishedFrom && finishedTo)
+                    return true;
 
-    private static class PriorityNode implements Comparable<PriorityNode>
-    {
-        int node;
-        int priority;
+                // changed also the final finish condition for CH
+                return currFrom.weight >= bestPath.getWeight() && currTo.weight >= bestPath.getWeight();
+            }
 
-        public PriorityNode( int node, int priority )
-        {
-            this.node = node;
-            this.priority = priority;
-        }
+            @Override
+            protected boolean isWeightLimitExceeded()
+            {
+                return currFrom.weight > weightLimit && currTo.weight > weightLimit;
+            }
 
-        @Override
-        public String toString()
-        {
-            return node + " (" + priority + ")";
-        }
+            @Override
+            protected Path createAndInitPath()
+            {
+                bestPath = new Path4CH(graph, graph.getBaseGraph(), flagEncoder);
+                return bestPath;
+            }
 
-        @Override
-        public int compareTo( PriorityNode o )
-        {
-            return priority - o.priority;
-        }
+            @Override
+            public String getName()
+            {
+                return "dijkstrabiCH";
+            }
+
+            @Override
+            public String toString()
+            {
+                return getName() + "|" + prepareWeighting;
+            }
+        };
     }
 
     class Shortcut
diff --git a/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
index 83134999b2..8cec00c00d 100644
--- a/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
@@ -496,7 +496,7 @@ protected long handleFerryTags( OSMWay way, double unknownSpeed, double shortTri
                     // If duration AND distance is available we can calculate the speed more precisely
                     // and set both speed to the same value. Factor 1.4 slower because of waiting time!
                     double calculatedTripSpeed = val / durationInHours / 1.4;
-                    // Plausibility check especially for the case of wongly used PxM format with the intension to 
+                    // Plausibility check especially for the case of wrongly used PxM format with the intention to
                     // specify the duration in minutes, but actually using months
                     if (calculatedTripSpeed > 0.01d)
                     {
@@ -791,16 +791,18 @@ protected static String getStr( String str, String key )
     }
 
     /**
-     * @param force should be false if speed should be changed only if it is bigger than maxspeed.
+     * @param way: needed to retrieve OSM tags
+     * @param speed: speed guessed e.g. from the road type or other tags
+     * @return The assumed speed. 
      */
-    protected double applyMaxSpeed( OSMWay way, double speed, boolean force )
+    protected double applyMaxSpeed( OSMWay way, double speed )
     {
         double maxSpeed = getMaxSpeed(way);
-        // apply only if smaller maxSpeed
+        // We obay speed limits
         if (maxSpeed >= 0)
         {
-            if (force || maxSpeed < speed)
-                return maxSpeed * 0.9;
+            // We assume that the average speed is 90% of the allowed maximum
+            return maxSpeed * 0.9;
         }
         return speed;
     }
diff --git a/core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java
index 27ad34115c..a870612654 100644
--- a/core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java
@@ -222,7 +222,7 @@ public void applyWayTags( OSMWay way, EdgeIteratorState edge )
             double maxSpeed = getHighwaySpeed("cycleway");
             if (isForward(flags))
             {
-                // use weighted mean so that longer incline infuences speed more than shorter
+                // use weighted mean so that longer incline influences speed more than shorter
                 double speed = getSpeed(flags);
                 double fwdFaster = 1 + 2 * keepIn(fwdDecline, 0, 0.2);
                 fwdFaster = fwdFaster * fwdFaster;
diff --git a/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
index 4726fb8b9a..0374c21a58 100644
--- a/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
@@ -38,7 +38,7 @@
 public class BikeCommonFlagEncoder extends AbstractFlagEncoder
 {
     /**
-     * Reports wether this edge is unpaved.
+     * Reports whether this edge is unpaved.
      */
     public static final int K_UNPAVED = 100;
     protected static final int PUSHING_SECTION_SPEED = 4;
@@ -242,7 +242,7 @@ public long acceptWay( OSMWay way )
         {
             if (way.hasTag("route", ferries))
             {
-                // if bike is NOT explictly tagged allow bike but only if foot is not specified
+                // if bike is NOT explicitly tagged allow bike but only if foot is not specified
                 String bikeTag = way.getTag("bicycle");
                 if (bikeTag == null && !way.hasTag("foot") || "yes".equals(bikeTag))
                     return acceptBit | ferryBit;
@@ -262,7 +262,7 @@ public long acceptWay( OSMWay way )
         if (way.hasTag("bicycle", intendedValues))
             return acceptBit;
 
-        // accept only if explicitely tagged for bike usage
+        // accept only if explicitly tagged for bike usage
         if ("motorway".equals(highwayValue) || "motorway_link".equals(highwayValue))
             return 0;
 
@@ -319,6 +319,30 @@ public long handleRelationTags( OSMRelation relation, long oldRelationFlags )
         return oldRelationFlags;
     }
 
+     /**
+     * Apply maxspeed: In contrast to the implementation of the AbstractFlagEncoder, 
+     * we assume that we can reach the maxspeed for bicycles in case that the road 
+     * type speed is higher and not just only 90%.
+     * <p>
+     * @param way: needed to retrieve OSM tags
+     * @param speed: speed guessed e.g. from the road type or other tags
+     * @return The assumed avererage speed.
+     */
+    @Override
+    protected double applyMaxSpeed( OSMWay way, double speed)
+    {
+        double maxSpeed = getMaxSpeed(way);
+        if (maxSpeed >= 0)
+        {
+            // We strictly obay speed limits, see #600
+            if ( maxSpeed < speed )
+            {
+                    return maxSpeed;
+            }
+        }
+        return speed;
+    }
+    
     @Override
     public long handleWayTags( OSMWay way, long allowed, long relationFlags )
     {
@@ -326,13 +350,11 @@ public long handleWayTags( OSMWay way, long allowed, long relationFlags )
             return 0;
 
         long encoded = 0;
+        double wayTypeSpeed = getSpeed(way);
         if (!isFerry(allowed))
         {
-            double speed = getSpeed(way);
-
-            // bike maxspeed handling is different from car as we don't increase speed
-            speed = applyMaxSpeed(way, speed, false);
-            encoded = handleSpeed(way, speed, encoded);
+            wayTypeSpeed = applyMaxSpeed(way, wayTypeSpeed);
+            encoded = handleSpeed(way, wayTypeSpeed, encoded);
             encoded = handleBikeRelated(way, encoded, relationFlags > UNCHANGED.getValue());
 
             boolean isRoundabout = way.hasTag("junction", "roundabout");
@@ -353,7 +375,7 @@ public long handleWayTags( OSMWay way, long allowed, long relationFlags )
         if (relationFlags != 0)
             priorityFromRelation = (int) relationCodeEncoder.getValue(relationFlags);
 
-        encoded = priorityWayEncoder.setValue(encoded, handlePriority(way, priorityFromRelation));
+        encoded = priorityWayEncoder.setValue(encoded, handlePriority(way, wayTypeSpeed, priorityFromRelation));
         return encoded;
     }
 
@@ -469,7 +491,7 @@ String getWayName( int pavementType, int wayType, Translation tr )
      * <p>
      * @return new priority based on priorityFromRelation and on the tags in OSMWay.
      */
-    protected int handlePriority( OSMWay way, int priorityFromRelation )
+    protected int handlePriority( OSMWay way, double wayTypeSpeed, int priorityFromRelation )
     {
         TreeMap<Double, Integer> weightToPrioMap = new TreeMap<Double, Integer>();
         if (priorityFromRelation == 0)
@@ -477,7 +499,7 @@ protected int handlePriority( OSMWay way, int priorityFromRelation )
         else
             weightToPrioMap.put(110d, priorityFromRelation);
 
-        collect(way, weightToPrioMap);
+        collect(way, wayTypeSpeed, weightToPrioMap);
 
         // pick priority with biggest order value
         return weightToPrioMap.lastEntry().getValue();
@@ -520,7 +542,7 @@ private PriorityCode convertClassValueToPriority( String tagvalue )
      * @param weightToPrioMap associate a weight with every priority. This sorted map allows
      * subclasses to 'insert' more important priorities as well as overwrite determined priorities.
      */
-    void collect( OSMWay way, TreeMap<Double, Integer> weightToPrioMap )
+    void collect( OSMWay way, double wayTypeSpeed, TreeMap<Double, Integer> weightToPrioMap )
     {
         String service = way.getTag("service");
         String highway = way.getTag("highway");
@@ -573,8 +595,9 @@ void collect( OSMWay way, TreeMap<Double, Integer> weightToPrioMap )
             if (classBicycle != null)
                 weightToPrioMap.put(100d, convertClassValueToPriority(classBicycle).getValue());
         }
-
-        if (way.hasTag("scenic", "yes"))
+        
+        // Increase the priority for scenic routes or in case that maxspeed limits our average speed as compensation. See #630
+        if (way.hasTag("scenic", "yes") || ((maxSpeed > 0) && (maxSpeed < wayTypeSpeed)))
         {
             if (weightToPrioMap.lastEntry().getValue() < BEST.getValue())
                 // Increase the prio by one step
@@ -712,7 +735,7 @@ public int getValue()
         {
             return value;
         }
-    };
+    }
 
     protected void setHighwaySpeed( String highway, int speed )
     {
@@ -760,6 +783,6 @@ public void setAvoidSpeedLimit( int limit )
 
     public void setSpecificBicycleClass( String subkey )
     {
-        specificBicycleClass = "class:bicycle:" + subkey.toString();
+        specificBicycleClass = "class:bicycle:" + subkey;
     }
 }
diff --git a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
index 022d72862d..aaeee662bd 100644
--- a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
@@ -246,7 +246,7 @@ public long handleWayTags( OSMWay way, long allowed, long relationFlags )
         {
             // get assumed speed from highway type
             double speed = getSpeed(way);
-            speed = applyMaxSpeed(way, speed, true);
+            speed = applyMaxSpeed(way, speed);
 
             // limit speed to max 30 km/h if bad surface
             if (speed > 30 && way.hasTag("surface", badSurfaceSpeedMap))
diff --git a/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java b/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
index 8ec0fbb781..a728c172dc 100644
--- a/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
+++ b/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
@@ -460,7 +460,7 @@ public static EncodingManager create( String ghLoc )
             throw new IllegalStateException("Cannot load properties to fetch EncodingManager configuration at: "
                     + dir.getLocation());
 
-        // check encoding for compatiblity
+        // check encoding for compatibility
         properties.checkVersions(false);
         String acceptStr = properties.get("graph.flagEncoders");
 
diff --git a/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java b/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java
index 0e5772ce61..aaa1de6120 100644
--- a/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java
@@ -30,7 +30,7 @@
 public class FastestWeighting extends AbstractWeighting
 {
     /**
-     * Converting to seconds is not necessary but makes adding other penalities easier (e.g. turn
+     * Converting to seconds is not necessary but makes adding other penalties easier (e.g. turn
      * costs or traffic light costs etc)
      */
     protected final static double SPEED_CONV = 3.6;
diff --git a/core/src/main/java/com/graphhopper/routing/util/FlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/FlagEncoder.java
index c70c7b9a3e..6f46c06655 100644
--- a/core/src/main/java/com/graphhopper/routing/util/FlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/FlagEncoder.java
@@ -76,12 +76,12 @@
     long setProperties( double speed, boolean forward, boolean backward );
 
     /**
-     * Reports wether the edge is available in forward direction for a certain vehicle
+     * Reports whether the edge is available in forward direction for a certain vehicle
      */
     boolean isForward( long flags );
 
     /**
-     * Reports wether the edge is available in backward direction for a certain vehicle
+     * Reports whether the edge is available in backward direction for a certain vehicle
      */
     boolean isBackward( long flags );
 
@@ -91,7 +91,7 @@
      * Currently this means starting from 100, and subclasses of this class start from 10000 and so on.
      */
     /**
-     * Reports wether this edge is part of a roundabout.
+     * Reports whether this edge is part of a roundabout.
      */
     static final int K_ROUNDABOUT = 2;
 
diff --git a/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java
index 37b01dcb63..bc21d6c9d0 100644
--- a/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java
@@ -208,7 +208,7 @@ public long handleWayTags( OSMWay way, long allowed, long priorityFromRelation )
         {
             // get assumed speed from highway type
             double speed = getSpeed(way);
-            speed = applyMaxSpeed(way, speed, true);
+            speed = applyMaxSpeed(way, speed);
 
             double maxMCSpeed = parseSpeed(way.getTag("maxspeed:motorcycle"));
             if (maxMCSpeed > 0 && maxMCSpeed < speed)
diff --git a/core/src/main/java/com/graphhopper/routing/util/MountainBikeFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/MountainBikeFlagEncoder.java
index b2346d00c0..76944531ad 100644
--- a/core/src/main/java/com/graphhopper/routing/util/MountainBikeFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/MountainBikeFlagEncoder.java
@@ -154,9 +154,9 @@ public int getVersion()
     }
 
     @Override
-    void collect( OSMWay way, TreeMap<Double, Integer> weightToPrioMap )
+    void collect( OSMWay way, double wayTypeSpeed, TreeMap<Double, Integer> weightToPrioMap )
     {
-        super.collect(way, weightToPrioMap);
+        super.collect(way, wayTypeSpeed, weightToPrioMap);
 
         String highway = way.getTag("highway");
         if ("track".equals(highway))
diff --git a/core/src/main/java/com/graphhopper/routing/util/RacingBikeFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/RacingBikeFlagEncoder.java
index bce6c2f116..b0d728685b 100644
--- a/core/src/main/java/com/graphhopper/routing/util/RacingBikeFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/RacingBikeFlagEncoder.java
@@ -25,7 +25,7 @@
 import java.util.TreeMap;
 
 /**
- * Specifies the settings for racebikeing
+ * Specifies the settings for race biking
  * <p>
  * @author ratrun
  * @author Peter Karich
@@ -142,9 +142,9 @@ public int getVersion()
     }
 
     @Override
-    void collect( OSMWay way, TreeMap<Double, Integer> weightToPrioMap )
+    void collect( OSMWay way, double wayTypeSpeed, TreeMap<Double, Integer> weightToPrioMap )
     {
-        super.collect(way, weightToPrioMap);
+        super.collect(way, wayTypeSpeed, weightToPrioMap);
 
         String highway = way.getTag("highway");
         if ("service".equals(highway))
diff --git a/core/src/main/java/com/graphhopper/routing/util/TraversalMode.java b/core/src/main/java/com/graphhopper/routing/util/TraversalMode.java
index 19b0b96bdf..532cbebfcd 100644
--- a/core/src/main/java/com/graphhopper/routing/util/TraversalMode.java
+++ b/core/src/main/java/com/graphhopper/routing/util/TraversalMode.java
@@ -27,7 +27,7 @@
  * Defines how the graph can be traversed while Dijkstra or similar RoutingAlgorithm is in progress.
  * Different options define how precise turn restrictions and costs are taken into account, but
  * still all are without via-way support. BTW: this would not be done at runtime, this would be a
- * pre-processing step to avoid performance penalities.
+ * pre-processing step to avoid performance penalties.
  * <p>
  * @author Peter Karich
  */
diff --git a/core/src/main/java/com/graphhopper/routing/util/Weighting.java b/core/src/main/java/com/graphhopper/routing/util/Weighting.java
index 6490c89c51..565e96b93a 100644
--- a/core/src/main/java/com/graphhopper/routing/util/Weighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/Weighting.java
@@ -27,7 +27,7 @@
 public interface Weighting
 {
     /**
-     * Used only for the heuristical estimation in A
+     * Used only for the heuristic estimation in A
      * <p>
      * @return minimal weight. E.g. if you calculate the fastest way it is distance/maxVelocity
      */
diff --git a/core/src/main/java/com/graphhopper/storage/BaseGraph.java b/core/src/main/java/com/graphhopper/storage/BaseGraph.java
index c0c29b9460..56864ad94c 100644
--- a/core/src/main/java/com/graphhopper/storage/BaseGraph.java
+++ b/core/src/main/java/com/graphhopper/storage/BaseGraph.java
@@ -1234,7 +1234,7 @@ public final EdgeIteratorState copyPropertiesTo( EdgeIteratorState edge )
         }
 
         /**
-         * Reports wether the edge is available in forward direction for the specified encoder.
+         * Reports whether the edge is available in forward direction for the specified encoder.
          */
         @Override
         public boolean isForward( FlagEncoder encoder )
@@ -1243,7 +1243,7 @@ public boolean isForward( FlagEncoder encoder )
         }
 
         /**
-         * Reports wether the edge is available in backward direction for the specified encoder.
+         * Reports whether the edge is available in backward direction for the specified encoder.
          */
         @Override
         public boolean isBackward( FlagEncoder encoder )
diff --git a/core/src/main/java/com/graphhopper/storage/DAType.java b/core/src/main/java/com/graphhopper/storage/DAType.java
index 53278d9428..fd6339a3bc 100644
--- a/core/src/main/java/com/graphhopper/storage/DAType.java
+++ b/core/src/main/java/com/graphhopper/storage/DAType.java
@@ -63,7 +63,6 @@
 
     }
 
-    ;
     private final MemRef memRef;
     private final boolean storing;
     private final boolean integ;
diff --git a/core/src/main/java/com/graphhopper/storage/GraphBuilder.java b/core/src/main/java/com/graphhopper/storage/GraphBuilder.java
index 5ca9841ae4..43dca4cceb 100644
--- a/core/src/main/java/com/graphhopper/storage/GraphBuilder.java
+++ b/core/src/main/java/com/graphhopper/storage/GraphBuilder.java
@@ -20,7 +20,6 @@
 import com.graphhopper.routing.util.EncodingManager;
 import com.graphhopper.routing.util.Weighting;
 import java.util.Arrays;
-import java.util.Collections;
 
 /**
  * For now this is just a helper class to quickly create a GraphStorage.
@@ -96,7 +95,7 @@ public CHGraph chGraphCreate( Weighting singleCHWeighting )
 
     /**
      * Default graph is a GraphStorage with an in memory directory and disabled storing on flush.
-     * Afterwards you'll need to call GraphStorage.create to have a useable object. Better use
+     * Afterwards you'll need to call GraphStorage. Create to have a usable object. Better use
      * create.
      */
     public GraphHopperStorage build()
diff --git a/core/src/main/java/com/graphhopper/storage/GraphExtension.java b/core/src/main/java/com/graphhopper/storage/GraphExtension.java
index b46355dfbe..3b973619c6 100644
--- a/core/src/main/java/com/graphhopper/storage/GraphExtension.java
+++ b/core/src/main/java/com/graphhopper/storage/GraphExtension.java
@@ -90,7 +90,7 @@ public int getDefaultEdgeFieldValue()
         }
 
         @Override
-        public void init( Graph grap, Directory dir )
+        public void init( Graph graph, Directory dir )
         {
             // noop
         }
diff --git a/core/src/main/java/com/graphhopper/storage/index/Location2IDQuadtree.java b/core/src/main/java/com/graphhopper/storage/index/Location2IDQuadtree.java
index 2ecb298e74..0cce291270 100644
--- a/core/src/main/java/com/graphhopper/storage/index/Location2IDQuadtree.java
+++ b/core/src/main/java/com/graphhopper/storage/index/Location2IDQuadtree.java
@@ -82,7 +82,7 @@ public long getCapacity()
 
     /**
      * Loads the index from disc if exists. Make sure you are using the identical graph which was
-     * used while flusing this index.
+     * used while flushing this index.
      * <p>
      * @return if loading from file was successfully.
      */
@@ -224,7 +224,7 @@ private int fillEmptyIndices( GHBitSet filledIndices )
         int initializedCounter = filledIndices.getCardinality();
         // fan out initialized entries to avoid "nose-artifacts"
         // we 1. do not use the same index for check and set and iterate until all indices are set
-        // and 2. use a taken-from array to decide which of the colliding should be prefered
+        // and 2. use a taken-from array to decide which of the colliding should be preferred
         int[] takenFrom = new int[len];
         Arrays.fill(takenFrom, -1);
         for (int i = filledIndices.next(0); i >= 0; i = filledIndices.next(i + 1))
diff --git a/core/src/main/java/com/graphhopper/storage/index/LocationIndex.java b/core/src/main/java/com/graphhopper/storage/index/LocationIndex.java
index 563d1d195f..2a625ecb13 100644
--- a/core/src/main/java/com/graphhopper/storage/index/LocationIndex.java
+++ b/core/src/main/java/com/graphhopper/storage/index/LocationIndex.java
@@ -21,7 +21,7 @@
 import com.graphhopper.storage.Storable;
 
 /**
- * Provides a way to map realword data "lat,lon" to internal ids/indices of a memory efficient graph
+ * Provides a way to map real world data "lat,lon" to internal ids/indices of a memory efficient graph
  * - often just implemented as an array.
  * <p>
  * The implementations of findID needs to be thread safe!
@@ -56,7 +56,7 @@
      *   new DefaultEdgeFilter(footFlagEncoder);
      * </pre>
      * <p>
-     * @return An object containing the closest node and edge for the specfied location. The node id
+     * @return An object containing the closest node and edge for the specified location. The node id
      * has at least one edge which is accepted from the specified edgeFilter. If nothing is found
      * the method QueryResult.isValid will return false.
      */
diff --git a/core/src/main/java/com/graphhopper/storage/index/QueryResult.java b/core/src/main/java/com/graphhopper/storage/index/QueryResult.java
index c371733f82..406afc22bd 100644
--- a/core/src/main/java/com/graphhopper/storage/index/QueryResult.java
+++ b/core/src/main/java/com/graphhopper/storage/index/QueryResult.java
@@ -96,8 +96,8 @@ public void setWayIndex( int wayIndex )
 
     /**
      * References to a tower node or the index of wayGeometry of the closest edge. If wayGeometry
-     * has lengh L then the wayIndex 0 refers to the *base* node, 1 to L (inclusive) refer to the
-     * wayGeometry indices (minus one) and L+1 to the *adjacent* node. Currently only intialized if
+     * has length L then the wayIndex 0 refers to the *base* node, 1 to L (inclusive) refer to the
+     * wayGeometry indices (minus one) and L+1 to the *adjacent* node. Currently only initialized if
      * returned from Location2NodesNtree.
      */
     public int getWayIndex()
diff --git a/core/src/main/java/com/graphhopper/util/DistanceCalcEarth.java b/core/src/main/java/com/graphhopper/util/DistanceCalcEarth.java
index e911b9003c..86b2d586fd 100644
--- a/core/src/main/java/com/graphhopper/util/DistanceCalcEarth.java
+++ b/core/src/main/java/com/graphhopper/util/DistanceCalcEarth.java
@@ -50,10 +50,7 @@
     @Override
     public double calcDist( double fromLat, double fromLon, double toLat, double toLon )
     {
-        double sinDeltaLat = sin(toRadians(toLat - fromLat) / 2);
-        double sinDeltaLon = sin(toRadians(toLon - fromLon) / 2);
-        double normedDist = sinDeltaLat * sinDeltaLat
-                + sinDeltaLon * sinDeltaLon * cos(toRadians(fromLat)) * cos(toRadians(toLat));
+        double normedDist = calcNormalizedDist(fromLat, fromLon, toLat, toLon);
         return R * 2 * asin(sqrt(normedDist));
     }
 
@@ -128,7 +125,7 @@ public double calcNormalizedEdgeDistanceNew( double r_lat_deg, double r_lon_deg,
                                                  double a_lat_deg, double a_lon_deg,
                                                  double b_lat_deg, double b_lon_deg, boolean reduceToSegment )
     {
-        double shrinkFactor = cos(toRadians((a_lat_deg + b_lat_deg) / 2));
+        double shrinkFactor = calcShrinkFactor(a_lat_deg, b_lat_deg);
 
         double a_lat = a_lat_deg;
         double a_lon = a_lon_deg * shrinkFactor;
@@ -167,12 +164,16 @@ else if (factor < 0)
         return calcNormalizedDist(c_lat, c_lon / shrinkFactor, r_lat_deg, r_lon_deg);
     }
 
+    private double calcShrinkFactor(double a_lat_deg, double b_lat_deg) {
+        return cos(toRadians((a_lat_deg + b_lat_deg) / 2));
+    }
+
     @Override
     public GHPoint calcCrossingPointToEdge( double r_lat_deg, double r_lon_deg,
                                             double a_lat_deg, double a_lon_deg,
                                             double b_lat_deg, double b_lon_deg )
     {
-        double shrinkFactor = cos(toRadians((a_lat_deg + b_lat_deg) / 2));
+        double shrinkFactor = calcShrinkFactor(a_lat_deg, b_lat_deg);
         double a_lat = a_lat_deg;
         double a_lon = a_lon_deg * shrinkFactor;
 
@@ -196,14 +197,6 @@ public GHPoint calcCrossingPointToEdge( double r_lat_deg, double r_lon_deg,
         double norm = delta_lon * delta_lon + delta_lat * delta_lat;
         double factor = ((r_lon - a_lon) * delta_lon + (r_lat - a_lat) * delta_lat) / norm;
 
-        if (false)
-        {
-            if (factor > 1)
-                factor = 1;
-            else if (factor < 0)
-                factor = 0;
-        }
-
         // x,y is projection of r onto segment a-b
         double c_lon = a_lon + factor * delta_lon;
         double c_lat = a_lat + factor * delta_lat;
@@ -215,7 +208,7 @@ public boolean validEdgeDistance( double r_lat_deg, double r_lon_deg,
                                       double a_lat_deg, double a_lon_deg,
                                       double b_lat_deg, double b_lon_deg )
     {
-        double shrinkFactor = cos(toRadians((a_lat_deg + b_lat_deg) / 2));
+        double shrinkFactor = calcShrinkFactor(a_lat_deg, b_lat_deg);
         double a_lat = a_lat_deg;
         double a_lon = a_lon_deg * shrinkFactor;
 
diff --git a/core/src/main/java/com/graphhopper/util/Helper.java b/core/src/main/java/com/graphhopper/util/Helper.java
index b876f9b920..0243fb985c 100644
--- a/core/src/main/java/com/graphhopper/util/Helper.java
+++ b/core/src/main/java/com/graphhopper/util/Helper.java
@@ -17,15 +17,7 @@
  */
 package com.graphhopper.util;
 
-import com.graphhopper.routing.util.EncodingManager;
-import com.graphhopper.storage.GraphExtension;
-import com.graphhopper.storage.GraphHopperStorage;
-import com.graphhopper.storage.RAMDirectory;
 import com.graphhopper.util.shapes.BBox;
-import com.graphhopper.util.shapes.GHPlace;
-import com.graphhopper.util.shapes.GHPoint;
-import com.graphhopper.util.shapes.GHPoint3D;
-import com.sun.org.apache.bcel.internal.generic.AASTORE;
 import gnu.trove.list.TIntList;
 import gnu.trove.list.array.TIntArrayList;
 
diff --git a/core/src/test/java/com/graphhopper/GraphHopperIT.java b/core/src/test/java/com/graphhopper/GraphHopperIT.java
index 343c32a9c9..621c4e7cac 100644
--- a/core/src/test/java/com/graphhopper/GraphHopperIT.java
+++ b/core/src/test/java/com/graphhopper/GraphHopperIT.java
@@ -27,6 +27,7 @@
 import org.junit.*;
 
 import java.io.File;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
@@ -432,7 +433,7 @@ private void executeCHFootRoute()
         GraphHopper tmpHopper = new GraphHopper().
                 setStoreOnFlush(true).
                 setOSMFile(tmpOsmFile).
-                setCHWeighting(weightCalcStr).
+                setCHWeightings(Arrays.asList(weightCalcStr)).
                 setGraphHopperLocation(tmpGraphFile).
                 setEncodingManager(new EncodingManager(tmpImportVehicles)).
                 importOrLoad();
diff --git a/core/src/test/java/com/graphhopper/GraphHopperTest.java b/core/src/test/java/com/graphhopper/GraphHopperTest.java
index b5f6a327b2..7a5ffeeac4 100644
--- a/core/src/test/java/com/graphhopper/GraphHopperTest.java
+++ b/core/src/test/java/com/graphhopper/GraphHopperTest.java
@@ -283,7 +283,7 @@ public void testPrepare()
         instance = new GraphHopper().
                 setStoreOnFlush(false).
                 setEncodingManager(new EncodingManager("CAR")).
-                setCHWeighting("shortest").
+                setCHWeightings(Arrays.asList("shortest")).
                 setGraphHopperLocation(ghLoc).
                 setOSMFile(testOsm);
         instance.importOrLoad();
@@ -544,7 +544,7 @@ public void testFootOnly()
     public void testPrepareOnly()
     {
         instance = new GraphHopper().setStoreOnFlush(true).
-                setCHWeighting("shortest").
+                setCHWeightings(Arrays.asList("shortest")).
                 setEncodingManager(new EncodingManager("FOOT")).
                 setDoPrepare(false).
                 setGraphHopperLocation(ghLoc).
@@ -553,7 +553,7 @@ public void testPrepareOnly()
         instance.close();
 
         instance = new GraphHopper().setStoreOnFlush(true).
-                setCHWeighting("shortest").
+                setCHWeightings(Arrays.asList("shortest")).
                 setGraphHopperLocation(ghLoc).
                 setOSMFile(testOsm3);
 
@@ -571,7 +571,7 @@ public void testPrepareOnly()
         // use the encoding manager from the graph
         instance = new GraphHopper().setStoreOnFlush(true).
                 setEncodingManager(new EncodingManager("FOOT")).
-                setCHWeighting("shortest").
+                setCHWeightings(Arrays.asList("shortest")).
                 setGraphHopperLocation(ghLoc).
                 setOSMFile(testOsm3);
         instance.load(ghLoc);
@@ -800,7 +800,7 @@ private GraphHopper createSquareGraphInstance( boolean withCH )
         GraphHopper tmp = new GraphHopper().
                 putAlgorithmFactory(weighting, null).
                 setCHEnable(withCH).
-                setCHWeighting("fastest").
+                setCHWeightings(Arrays.asList("shortest")).
                 setEncodingManager(encodingManager);
         tmp.setGraphHopperStorage(g);
         tmp.postProcessing();
@@ -917,4 +917,16 @@ public void testGetWeightingForCH()
         assertEquals("fastest|truck", hopper.getWeightingForCH(new WeightingMap("fastest"), truck).toString());
         assertEquals("fastest|simple_truck", hopper.getWeightingForCH(new WeightingMap("fastest"), sTruck).toString());
     }
+
+    @Test
+    public void testGetMultipleWeightingsForCH()
+    {
+        EncodingManager em = new EncodingManager(Arrays.asList(new CarFlagEncoder()), 8);
+
+        GraphHopper tmpGH = new GraphHopper().setStoreOnFlush(false).
+                setEncodingManager(em).
+                setCHWeightings("fastest", "shortest");
+
+        assertEquals(2, tmpGH.getCHWeightings().size());
+    }
 }
diff --git a/core/src/test/java/com/graphhopper/routing/util/AbstractBikeFlagEncoderTester.java b/core/src/test/java/com/graphhopper/routing/util/AbstractBikeFlagEncoderTester.java
index ea453dcba6..2f9d07c215 100644
--- a/core/src/test/java/com/graphhopper/routing/util/AbstractBikeFlagEncoderTester.java
+++ b/core/src/test/java/com/graphhopper/routing/util/AbstractBikeFlagEncoderTester.java
@@ -56,7 +56,7 @@ protected void assertPriority( int expectedPrio, OSMWay way )
 
     protected void assertPriority( int expectedPrio, OSMWay way, long relationFlags )
     {
-        assertEquals(expectedPrio, encoder.handlePriority(way, (int) encoder.relationCodeEncoder.getValue(relationFlags)));
+        assertEquals(expectedPrio, encoder.handlePriority(way, 18, (int) encoder.relationCodeEncoder.getValue(relationFlags)));
     }
 
     protected double getSpeedFromFlags( OSMWay way )
@@ -373,7 +373,7 @@ public void testReduceToMaxSpeed()
     {
         OSMWay way = new OSMWay(12);
         way.setTag("maxspeed", "90");
-        assertEquals(12, encoder.applyMaxSpeed(way, 12, false), 1e-2);
+        assertEquals(12, encoder.applyMaxSpeed(way, 12), 1e-2);
     }
 
     @Test
@@ -381,7 +381,7 @@ public void testPreferenceForSlowSpeed()
     {
         OSMWay osmWay = new OSMWay(1);
         osmWay.setTag("highway", "tertiary");
-        assertEquals(30, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 49, false))), 1e-1);
+        assertEquals(30, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 49))), 1e-1);
         assertPriority(PREFER.getValue(), osmWay);
     }
 
diff --git a/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java b/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java
index 740565cb36..5068f94ac7 100644
--- a/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java
@@ -423,18 +423,29 @@ public void testMaxSpeed()
         long allowed = encoder.acceptWay(way);
         long encoded = encoder.handleWayTags(way, allowed, 0);
         assertEquals(10, encoder.getSpeed(encoded), 1e-1);
+        assertPriority(VERY_NICE.getValue(), way);
 
         way = new OSMWay(1);
         way.setTag("highway", "tertiary");
         way.setTag("maxspeed", "90");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(way, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(way, 20))), 1e-1);
         assertPriority(UNCHANGED.getValue(), way);
 
         way = new OSMWay(1);
         way.setTag("highway", "track");
         way.setTag("maxspeed", "90");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(way, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(way, 20))), 1e-1);
         assertPriority(UNCHANGED.getValue(), way);
+
+        way = new OSMWay(1);
+        way.setTag("highway", "residential");
+        way.setTag("maxspeed", "15");
+        assertEquals(15, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(way, 15))), 1.0);
+        allowed = encoder.acceptWay(way);
+        encoded = encoder.handleWayTags(way, allowed, 0);
+        assertEquals(15, encoder.getSpeed(encoded), 1.0);
+        assertPriority(VERY_NICE.getValue(), way);
+
     }
 
     @Test
@@ -539,10 +550,18 @@ public void testClassBicycle()
         assertPriority(REACH_DEST.getValue(), way);
         way.setTag("class:bicycle", "-3");
         assertPriority(AVOID_AT_ALL_COSTS.getValue(), way);
+        
+        way.setTag("highway", "residential");
+        way.setTag("bicycle", "designated");
+        way.setTag("class:bicycle", "3");
+        assertPriority(BEST.getValue(), way); 
 
         // Now we test overriding by a specific class subtype
         way.setTag("class:bicycle:touring", "2");
         assertPriority(VERY_NICE.getValue(), way);
+
+        way.setTag("maxspeed", "15");
+        assertPriority(BEST.getValue(), way);
     }
 
 }
diff --git a/core/src/test/java/com/graphhopper/routing/util/EncodingManagerTest.java b/core/src/test/java/com/graphhopper/routing/util/EncodingManagerTest.java
index 90904a99fe..8c6fb7f09b 100644
--- a/core/src/test/java/com/graphhopper/routing/util/EncodingManagerTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/EncodingManagerTest.java
@@ -172,7 +172,7 @@ public long handleRelationTags( OSMRelation relation, long oldRelFlags )
             }
 
             @Override
-            protected int handlePriority( OSMWay way, int priorityFromRelation )
+            protected int handlePriority( OSMWay way, double wayTypeSpeed, int priorityFromRelation )
             {
                 return priorityFromRelation;
             }
diff --git a/core/src/test/java/com/graphhopper/routing/util/RacingBikeFlagEncoderTest.java b/core/src/test/java/com/graphhopper/routing/util/RacingBikeFlagEncoderTest.java
index ff59093c34..97b94517c3 100644
--- a/core/src/test/java/com/graphhopper/routing/util/RacingBikeFlagEncoderTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/RacingBikeFlagEncoderTest.java
@@ -210,58 +210,58 @@ public void testAvoidanceOfHighMaxSpeed()
         OSMWay osmWay = new OSMWay(1);
         osmWay.setTag("highway", "tertiary");
         osmWay.setTag("maxspeed", "50");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(PREFER.getValue(), osmWay);
 
         osmWay.setTag("maxspeed", "60");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(PREFER.getValue(), osmWay);
 
         osmWay.setTag("maxspeed", "80");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(PREFER.getValue(), osmWay);
 
         osmWay.setTag("maxspeed", "90");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(UNCHANGED.getValue(), osmWay);
 
         osmWay.setTag("maxspeed", "120");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(UNCHANGED.getValue(), osmWay);
 
         osmWay.setTag("highway", "motorway");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(REACH_DEST.getValue(), osmWay);
 
         osmWay.setTag("tunnel", "yes");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(AVOID_AT_ALL_COSTS.getValue(), osmWay);
 
         osmWay.clearTags();
         osmWay.setTag("highway", "motorway");
         osmWay.setTag("tunnel", "yes");
         osmWay.setTag("maxspeed", "80");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(AVOID_AT_ALL_COSTS.getValue(), osmWay);
 
         osmWay.clearTags();
         osmWay.setTag("highway", "motorway");
         osmWay.setTag("tunnel", "yes");
         osmWay.setTag("maxspeed", "120");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(AVOID_AT_ALL_COSTS.getValue(), osmWay);
 
         osmWay.clearTags();
         osmWay.setTag("highway", "notdefined");
         osmWay.setTag("tunnel", "yes");
         osmWay.setTag("maxspeed", "120");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(AVOID_AT_ALL_COSTS.getValue(), osmWay);
 
         osmWay.clearTags();
         osmWay.setTag("highway", "notdefined");
         osmWay.setTag("maxspeed", "50");
-        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20, false))), 1e-1);
+        assertEquals(20, encoder.getSpeed(encoder.setSpeed(0, encoder.applyMaxSpeed(osmWay, 20))), 1e-1);
         assertPriority(UNCHANGED.getValue(), osmWay);
 
     }
diff --git a/docs/core/quickstart-from-source.md b/docs/core/quickstart-from-source.md
index 02959edc74..9c79ed18c2 100644
--- a/docs/core/quickstart-from-source.md
+++ b/docs/core/quickstart-from-source.md
@@ -93,13 +93,21 @@ then there is a highly experimental version of GraphHopper using TeaVM.
 Have a look into this [blog post](http://karussell.wordpress.com/2014/05/04/graphhopper-in-the-browser-teavm-makes-offline-routing-via-openstreetmap-possible-in-javascript/) 
 for a demo and more information.
 
-If you want to change the JavaScript you have to setup the JavaScript environment:
-```
+If you want to change the JavaScript you have to setup the JavaScript environment - 
+i.e. install the node package manager (npm):
+
+For linux do
+```bash
 curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash
 # close and reopen terminal now
 nvm install 4.2.2
 nvm use 4.2.2
+```
 
+For windows download either [nvm](https://github.com/coreybutler/nvm-windows) or [node](https://nodejs.org/en/download/) directly.
+
+Then create the main.js
+```bash
 # git clone https://github.com/graphhopper/graphhopper.git
 cd graphhopper/web
 # download required packages:
@@ -107,25 +115,28 @@ npm install
 npm test
 # create main.js
 npm run bundle
-
-cd ..
-./graphhopper.sh web africa_canary-islands.pbf
-firefox localhost:8989
 ```
 
-Using these Commands you can create the main.js:
-```
+Finally start GraphHopper e.g. via `graphhopper.sh` script and with the browser open `localhost:8989`.
+
+There are more npm commands e.g. to change the main.js on the fly or create an uglified main.js for production:
+```bash
 # For development just use watchify:
 npm run watch
-# see the package.json where several other scripts like bundleDebug are defined
+
 # bundle creates the main file
 npm run bundle
+
 # create main.js for debugging
 npm run bundleDebug
-npm run bundleUgly
 
-# Forcing consistent code style with jshint. JsHint can be run with:
+# create main.js for production and specify as CLI parameter `export NODE_ENV=development` which `options_*.js` should be selected
+npm run bundleProduction
+
+# Forcing consistent code style with jshint:
 npm run jshint
+
+# see the package.json where more scripts are defined
 ```
 
 ### Android Usage
diff --git a/web/package.json b/web/package.json
index 929510ce64..cc819d3382 100644
--- a/web/package.json
+++ b/web/package.json
@@ -2,19 +2,28 @@
   "name": "graphhopper-js-ui",
   "version": "1.0.0",
   "description": "A Route Planner Frontend for GraphHopper",
+  "author": "GraphHopper Community",
+  "license": "Apache-2.0",
   "main": "main.js",
   "scripts": {
     "watch": "watchify src/main/webapp/js/main-template.js -o src/main/webapp/js/main.js --debug --verbose",
     "bundle": "browserify src/main/webapp/js/main-template.js -o src/main/webapp/js/main.js",
     "bundleDebug": "browserify src/main/webapp/js/main-template.js --debug -o src/main/webapp/js/main.js",
-    "bundleUgly": "browserify -g uglifyify src/main/webapp/js/main-template.js -o src/main/webapp/js/main.js",
+    "bundleProduction": "browserify -g uglifyify src/main/webapp/js/main-template.js -o src/main/webapp/js/main.js",
     "test": "JASMINE_CONFIG_PATH=src/test/webapp/spec/jasmine.json jasmine",
     "lint": "jshint src/main/webapp/js/"
   },
-  "author": "GraphHopper Community",
-  "license": "Apache-2.0",
+  "browserify": {
+    "transform": [ "browserify-swap" ]
+  },
+  "browserify-swap": {
+    "production": {
+      "options.js$": "./src/main/webapp/js/options_prod.js"
+    }
+  },
   "dependencies": {
     "browserify": "^12.0.1",
+    "browserify-swap": "^0.2.2",
     "d3": "^3.5.9",
     "jasmine": "^2.3.2",
     "jquery": "^2.1.4",
diff --git a/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java b/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
index 50dc2b7494..b11b4b9662 100644
--- a/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
+++ b/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
@@ -195,7 +195,7 @@ protected String createGPXString( HttpServletRequest req, HttpServletResponse re
             return rsp.getInstructions().createGPX(trackName, time, includeElevation, withRoute, withTrack, withWayPoints);
     }
 
-    String errorsToXML( List<Throwable> list )
+    protected String errorsToXML( List<Throwable> list )
     {
         try
         {
diff --git a/web/src/main/webapp/css/style.css b/web/src/main/webapp/css/style.css
index 0a8ae3e140..228cbab987 100644
--- a/web/src/main/webapp/css/style.css
+++ b/web/src/main/webapp/css/style.css
@@ -1,6 +1,6 @@
 body {
     color: #000;
-    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;    
+    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
     line-height: 1.4;
     color: #111111;
     background-color: white;
@@ -14,7 +14,7 @@ body {
 
 #input {
     float: left;
-    margin-left: 10px; 
+    margin-left: 10px;
     /*padding-right: 15px; */
 }
 
@@ -29,7 +29,7 @@ body {
     padding-right: 5px;
 }
 
-#input, #instructions {
+#input, #instructions, #footer {
     width: 280px;
 }
 .pointInput {
@@ -84,7 +84,7 @@ body {
     padding-bottom: 10px;
     float: left;
 }
-.pointDiv { 
+.pointDiv {
     margin: 6px 0;
 }
 .pointDiv > img {
@@ -160,8 +160,8 @@ body {
     margin-bottom: 5px;
 }
 
-#searchButton:hover { 
-    cursor: pointer; 
+#searchButton:hover {
+    cursor: pointer;
 }
 .clear {
     clear: both;
@@ -180,7 +180,7 @@ body {
 #footer {
     position: fixed;
     bottom: 5px;
-    left: 45px;
+    left: 30px;    
 }
 
 #hosting a, .footer-link {
@@ -219,7 +219,7 @@ td.instr_title {
 }
 td.instr_distance {
     min-width: 50px;
-    float: right;    
+    float: right;
     color: gray;
     text-align: right;
 }
@@ -227,7 +227,7 @@ td.instr_distance {
 #instructions tr .instr_pic {
     width: 20px;
 }
-td img.pic {    
+td img.pic {
     max-height: 24px;
     max-width: 16px;
 }
@@ -247,11 +247,10 @@ td img.pic {
 }
 
 .selectvehicle {
-    // background-clip: padding-box;
     background-color: #bbb;
     -moz-border-radius: 0px;
     -webkit-border-radius: 0px;
-    background-image: linear-gradient(to bottom, #9f9f9f, #e7e7e7);    
+    background-image: linear-gradient(to bottom, #9f9f9f, #e7e7e7);
 }
 
 #more-vehicle-btn {
@@ -261,11 +260,11 @@ td img.pic {
 .autocomplete {
     border: 1px solid #999;
     background: #FFF;
-    overflow: auto; 
+    overflow: auto;
 }
 .autocomplete strong {
     font-weight: normal;
-    color: #04B431; 
+    color: #04B431;
 }
 .autocomplete-suggestion {
     padding: 5px 5px;
@@ -337,3 +336,16 @@ td img.pic {
     padding: 10px;
     background: #00cc33;
 }
+
+#donate_form {
+    padding: 0;    
+}
+
+#donate_form_button {
+    background: none;
+    border: none;
+    padding-left: 0px;
+    margin-top: 5px;
+    cursor: pointer;
+    float: left;
+}
\ No newline at end of file
diff --git a/web/src/main/webapp/img/racingbike.png b/web/src/main/webapp/img/racingbike.png
index e666d2c673..fa40d2ba69 100644
Binary files a/web/src/main/webapp/img/racingbike.png and b/web/src/main/webapp/img/racingbike.png differ
diff --git a/web/src/main/webapp/index.html b/web/src/main/webapp/index.html
index eba73bebc5..a20ce912d8 100644
--- a/web/src/main/webapp/index.html
+++ b/web/src/main/webapp/index.html
@@ -14,7 +14,7 @@
         <link rel="stylesheet" href="css/leaflet.contextmenu.css" />
         <link rel="stylesheet" href="css/leaflet.loading.css" />
         <link rel="stylesheet" href="css/ui-lightness/jquery-ui-custom-1.11.4.min.css" />
-        <script type="text/javascript" src="js/main.js?v=0.5.1"></script>
+        <script type="text/javascript" src="js/main.js?v=0.6.0"></script>
         <link rel="stylesheet" type="text/css" href="css/style.css" />
     </head>
     <body>
@@ -50,7 +50,12 @@
 
             <div id="footer">
                 <div id="link_line">
-                    <a class="footer-link" href='https://graphhopper.com/#contact'>Contact</a>
+                    <form id="donate_form" action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
+                        <input type="hidden" name="cmd" value="_s-xclick"/>
+                        <input type="hidden" name="hosted_button_id" value="P9JQECJKH46JN"/>                        
+                        <input id="donate_form_button" class="footer-link" type="submit" name="submit" value="Donate"/>
+                    </form>
+                    <a class="footer-link" href='https://graphhopper.com/#contact'>Imprint</a>
                     <a class="footer-link" href='https://graphhopper.com/terms.html'>Terms</a>
                     <a class="footer-link" href='https://graphhopper.com/privacy.html'>Privacy</a>
                 </div>
@@ -69,17 +74,17 @@
             </div>
         </div>
         <div id="gpx_dialog" title="Included GPX data:">
-          <form id="GPXOptions" name="GPXOptions">
+            <form id="GPXOptions" name="GPXOptions">
                 <label class="inline">
-                   <input type="checkbox" id="gpx_route" name="GPXOptions" value="route">Route</label>
+                    <input type="checkbox" id="gpx_route" name="GPXOptions" value="route">Route</label>
                 <br>
                 <label class="inline">
-                   <input type="checkbox" id="gpx_track" name="GPXOptions" value="track" checked="checked">Track</label>
+                    <input type="checkbox" id="gpx_track" name="GPXOptions" value="track" checked="checked">Track</label>
                 <br>
                 <label class="inline">
-                   <input type="checkbox" id="gpx_waypoints" name="GPXOptions" value="waypoints">Waypoints</label>
+                    <input type="checkbox" id="gpx_waypoints" name="GPXOptions" value="waypoints">Waypoints</label>
                 <br>
-          </form>
+            </form>
         </div>
         <div id="map">
         </div>
@@ -91,14 +96,14 @@
                 _paq.push(['trackPageView']);
                 _paq.push(['enableLinkTracking']);
                 (function () {
-                    var u = (("https:" == document.location.protocol) ? "https" : "http") + "://graphhopper.com/piwik/";
-                    _paq.push(['setTrackerUrl', u + 'piwik.php']);
+                    var url = "https://graphhopper.com/piwik/";
+                    _paq.push(['setTrackerUrl', url + 'piwik.php']);
                     _paq.push(['setSiteId', 1]);
                     var d = document, g = d.createElement('script'), s = d.getElementsByTagName('script')[0];
                     g.type = 'text/javascript';
                     g.defer = true;
                     g.async = true;
-                    g.src = u + 'piwik.js';
+                    g.src = url + 'piwik.js';
                     s.parentNode.insertBefore(g, s);
                 })();
             }
diff --git a/web/src/main/webapp/js/autocomplete.js b/web/src/main/webapp/js/autocomplete.js
index aa5cbce952..94f94e3881 100644
--- a/web/src/main/webapp/js/autocomplete.js
+++ b/web/src/main/webapp/js/autocomplete.js
@@ -1,5 +1,6 @@
 var formatTools = require('./tools/format.js');
 var GHInput = require('./graphhopper/GHInput.js');
+var mapLayer = require('./map.js');
 
 var dataToHtml = function (data, query) {
     var element = "";
diff --git a/web/src/main/webapp/js/config/tileLayers.js b/web/src/main/webapp/js/config/tileLayers.js
index 23cf5a9664..3c5322b418 100644
--- a/web/src/main/webapp/js/config/tileLayers.js
+++ b/web/src/main/webapp/js/config/tileLayers.js
@@ -89,6 +89,9 @@ var availableTileLayers = {
     "Sorbian Language": sorbianLang
 };
 
+module.exports.activeLayerName = "Omniscale";
+module.exports.defaultLayer = omniscale;
+
 module.exports.getAvailableTileLayers = function () {
     return availableTileLayers;
 };
@@ -96,7 +99,7 @@ module.exports.getAvailableTileLayers = function () {
 module.exports.selectLayer = function (layerName) {
     var defaultLayer = availableTileLayers[layerName];
     if (!defaultLayer)
-        defaultLayer = availableTileLayers.Omniscale;
+        defaultLayer = module.exports.defaultLayer;
 
     return defaultLayer;
-};
+};
\ No newline at end of file
diff --git a/web/src/main/webapp/js/graphhopper/GHRequest.js b/web/src/main/webapp/js/graphhopper/GHRequest.js
index 565aeca40e..57f9976aee 100644
--- a/web/src/main/webapp/js/graphhopper/GHRequest.js
+++ b/web/src/main/webapp/js/graphhopper/GHRequest.js
@@ -28,8 +28,9 @@ if (!Function.prototype.bind) {
 }
 
 
-var GHRequest = function (host) {
+var GHRequest = function (host, api_key) {
     this.host = host;
+    this.key = api_key;
     this.route = new GHRoute(new GHInput(), new GHInput());
     this.from = this.route.first();
     this.to = this.route.last();
@@ -39,15 +40,7 @@ var GHRequest = function (host) {
     this.do_zoom = true;
     // use jsonp here if host allows CORS
     this.dataType = "json";
-
-    this.api_params = {"locale": "en", "vehicle": "car", "weighting": "fastest", "elevation": false};
-
-    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-    // We know that you love 'free', we love it too :)! And so our entire software stack is free and even Open Source!
-    // Our routing service is also free for certain applications or smaller volume. Be fair, grab an API key and support us:
-    // https://graphhopper.com/#directions-api Misuse of API keys that you don't own is prohibited and you'll be blocked.
-    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-    this.key = "Cmmtvx01R56rdHcQQo7VjI6rgPgxuFLvqI8cR31u";
+    this.api_params = {"locale": "en", "vehicle": "car", "weighting": "fastest", "elevation": false};        
 
     // register events
     this.route.addListener('route.add', function (evt) {
diff --git a/web/src/main/webapp/js/lib/jquery.history.js b/web/src/main/webapp/js/lib/jquery.history.js
index d16813e34f..caeb7aa4b5 100644
--- a/web/src/main/webapp/js/lib/jquery.history.js
+++ b/web/src/main/webapp/js/lib/jquery.history.js
@@ -1 +1 @@
-(function(e,t){"use strict";var n=e.History=e.History||{},r=e.jQuery;if(typeof n.Adapter!="undefined")throw new Error("History.js Adapter has already been loaded...");n.Adapter={bind:function(e,t,n){r(e).bind(t,n)},trigger:function(e,t,n){r(e).trigger(t,n)},extractEventData:function(e,n,r){var i=n&&n.originalEvent&&n.originalEvent[e]||r&&r[e]||t;return i},onDomLoad:function(e){r(e)}},typeof n.init!="undefined"&&n.init()})(window),function(e,t){"use strict";var n=e.console||t,r=e.document,i=e.navigator,s=!1,o=e.setTimeout,u=e.clearTimeout,a=e.setInterval,f=e.clearInterval,l=e.JSON,c=e.alert,h=e.History=e.History||{},p=e.history;try{s=e.sessionStorage,s.setItem("TEST","1"),s.removeItem("TEST")}catch(d){s=!1}l.stringify=l.stringify||l.encode,l.parse=l.parse||l.decode;if(typeof h.init!="undefined")throw new Error("History.js Core has already been loaded...");h.init=function(e){return typeof h.Adapter=="undefined"?!1:(typeof h.initCore!="undefined"&&h.initCore(),typeof h.initHtml4!="undefined"&&h.initHtml4(),!0)},h.initCore=function(d){if(typeof h.initCore.initialized!="undefined")return!1;h.initCore.initialized=!0,h.options=h.options||{},h.options.hashChangeInterval=h.options.hashChangeInterval||100,h.options.safariPollInterval=h.options.safariPollInterval||500,h.options.doubleCheckInterval=h.options.doubleCheckInterval||500,h.options.disableSuid=h.options.disableSuid||!1,h.options.storeInterval=h.options.storeInterval||1e3,h.options.busyDelay=h.options.busyDelay||250,h.options.debug=h.options.debug||!1,h.options.initialTitle=h.options.initialTitle||r.title,h.options.html4Mode=h.options.html4Mode||!1,h.options.delayInit=h.options.delayInit||!1,h.intervalList=[],h.clearAllIntervals=function(){var e,t=h.intervalList;if(typeof t!="undefined"&&t!==null){for(e=0;e<t.length;e++)f(t[e]);h.intervalList=null}},h.debug=function(){(h.options.debug||!1)&&h.log.apply(h,arguments)},h.log=function(){var e=typeof n!="undefined"&&typeof n.log!="undefined"&&typeof n.log.apply!="undefined",t=r.getElementById("log"),i,s,o,u,a;e?(u=Array.prototype.slice.call(arguments),i=u.shift(),typeof n.debug!="undefined"?n.debug.apply(n,[i,u]):n.log.apply(n,[i,u])):i="\n"+arguments[0]+"\n";for(s=1,o=arguments.length;s<o;++s){a=arguments[s];if(typeof a=="object"&&typeof l!="undefined")try{a=l.stringify(a)}catch(f){}i+="\n"+a+"\n"}return t?(t.value+=i+"\n-----\n",t.scrollTop=t.scrollHeight-t.clientHeight):e||c(i),!0},h.getInternetExplorerMajorVersion=function(){var e=h.getInternetExplorerMajorVersion.cached=typeof h.getInternetExplorerMajorVersion.cached!="undefined"?h.getInternetExplorerMajorVersion.cached:function(){var e=3,t=r.createElement("div"),n=t.getElementsByTagName("i");while((t.innerHTML="<!--[if gt IE "+ ++e+"]><i></i><![endif]-->")&&n[0]);return e>4?e:!1}();return e},h.isInternetExplorer=function(){var e=h.isInternetExplorer.cached=typeof h.isInternetExplorer.cached!="undefined"?h.isInternetExplorer.cached:Boolean(h.getInternetExplorerMajorVersion());return e},h.options.html4Mode?h.emulated={pushState:!0,hashChange:!0}:h.emulated={pushState:!Boolean(e.history&&e.history.pushState&&e.history.replaceState&&!/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(i.userAgent)&&!/AppleWebKit\/5([0-2]|3[0-2])/i.test(i.userAgent)),hashChange:Boolean(!("onhashchange"in e||"onhashchange"in r)||h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<8)},h.enabled=!h.emulated.pushState,h.bugs={setHash:Boolean(!h.emulated.pushState&&i.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(i.userAgent)),safariPoll:Boolean(!h.emulated.pushState&&i.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(i.userAgent)),ieDoubleCheck:Boolean(h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<8),hashEscape:Boolean(h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<7)},h.isEmptyObject=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},h.cloneObject=function(e){var t,n;return e?(t=l.stringify(e),n=l.parse(t)):n={},n},h.getRootUrl=function(){var e=r.location.protocol+"//"+(r.location.hostname||r.location.host);if(r.location.port||!1)e+=":"+r.location.port;return e+="/",e},h.getBaseHref=function(){var e=r.getElementsByTagName("base"),t=null,n="";return e.length===1&&(t=e[0],n=t.href.replace(/[^\/]+$/,"")),n=n.replace(/\/+$/,""),n&&(n+="/"),n},h.getBaseUrl=function(){var e=h.getBaseHref()||h.getBasePageUrl()||h.getRootUrl();return e},h.getPageUrl=function(){var e=h.getState(!1,!1),t=(e||{}).url||h.getLocationHref(),n;return n=t.replace(/\/+$/,"").replace(/[^\/]+$/,function(e,t,n){return/\./.test(e)?e:e+"/"}),n},h.getBasePageUrl=function(){var e=h.getLocationHref().replace(/[#\?].*/,"").replace(/[^\/]+$/,function(e,t,n){return/[^\/]$/.test(e)?"":e}).replace(/\/+$/,"")+"/";return e},h.getFullUrl=function(e,t){var n=e,r=e.substring(0,1);return t=typeof t=="undefined"?!0:t,/[a-z]+\:\/\//.test(e)||(r==="/"?n=h.getRootUrl()+e.replace(/^\/+/,""):r==="#"?n=h.getPageUrl().replace(/#.*/,"")+e:r==="?"?n=h.getPageUrl().replace(/[\?#].*/,"")+e:t?n=h.getBaseUrl()+e.replace(/^(\.\/)+/,""):n=h.getBasePageUrl()+e.replace(/^(\.\/)+/,"")),n.replace(/\#$/,"")},h.getShortUrl=function(e){var t=e,n=h.getBaseUrl(),r=h.getRootUrl();return h.emulated.pushState&&(t=t.replace(n,"")),t=t.replace(r,"/"),h.isTraditionalAnchor(t)&&(t="./"+t),t=t.replace(/^(\.\/)+/g,"./").replace(/\#$/,""),t},h.getLocationHref=function(e){return e=e||r,e.URL===e.location.href?e.location.href:e.location.href===decodeURIComponent(e.URL)?e.URL:e.location.hash&&decodeURIComponent(e.location.href.replace(/^[^#]+/,""))===e.location.hash?e.location.href:e.URL.indexOf("#")==-1&&e.location.href.indexOf("#")!=-1?e.location.href:e.URL||e.location.href},h.store={},h.idToState=h.idToState||{},h.stateToId=h.stateToId||{},h.urlToId=h.urlToId||{},h.storedStates=h.storedStates||[],h.savedStates=h.savedStates||[],h.normalizeStore=function(){h.store.idToState=h.store.idToState||{},h.store.urlToId=h.store.urlToId||{},h.store.stateToId=h.store.stateToId||{}},h.getState=function(e,t){typeof e=="undefined"&&(e=!0),typeof t=="undefined"&&(t=!0);var n=h.getLastSavedState();return!n&&t&&(n=h.createStateObject()),e&&(n=h.cloneObject(n),n.url=n.cleanUrl||n.url),n},h.getIdByState=function(e){var t=h.extractId(e.url),n;if(!t){n=h.getStateString(e);if(typeof h.stateToId[n]!="undefined")t=h.stateToId[n];else if(typeof h.store.stateToId[n]!="undefined")t=h.store.stateToId[n];else{for(;;){t=(new Date).getTime()+String(Math.random()).replace(/\D/g,"");if(typeof h.idToState[t]=="undefined"&&typeof h.store.idToState[t]=="undefined")break}h.stateToId[n]=t,h.idToState[t]=e}}return t},h.normalizeState=function(e){var t,n;if(!e||typeof e!="object")e={};if(typeof e.normalized!="undefined")return e;if(!e.data||typeof e.data!="object")e.data={};return t={},t.normalized=!0,t.title=e.title||"",t.url=h.getFullUrl(e.url?e.url:h.getLocationHref()),t.hash=h.getShortUrl(t.url),t.data=h.cloneObject(e.data),t.id=h.getIdByState(t),t.cleanUrl=t.url.replace(/\??\&_suid.*/,""),t.url=t.cleanUrl,n=!h.isEmptyObject(t.data),(t.title||n)&&h.options.disableSuid!==!0&&(t.hash=h.getShortUrl(t.url).replace(/\??\&_suid.*/,""),/\?/.test(t.hash)||(t.hash+="?"),t.hash+="&_suid="+t.id),t.hashedUrl=h.getFullUrl(t.hash),(h.emulated.pushState||h.bugs.safariPoll)&&h.hasUrlDuplicate(t)&&(t.url=t.hashedUrl),t},h.createStateObject=function(e,t,n){var r={data:e,title:t,url:n};return r=h.normalizeState(r),r},h.getStateById=function(e){e=String(e);var n=h.idToState[e]||h.store.idToState[e]||t;return n},h.getStateString=function(e){var t,n,r;return t=h.normalizeState(e),n={data:t.data,title:e.title,url:e.url},r=l.stringify(n),r},h.getStateId=function(e){var t,n;return t=h.normalizeState(e),n=t.id,n},h.getHashByState=function(e){var t,n;return t=h.normalizeState(e),n=t.hash,n},h.extractId=function(e){var t,n,r,i;return e.indexOf("#")!=-1?i=e.split("#")[0]:i=e,n=/(.*)\&_suid=([0-9]+)$/.exec(i),r=n?n[1]||e:e,t=n?String(n[2]||""):"",t||!1},h.isTraditionalAnchor=function(e){var t=!/[\/\?\.]/.test(e);return t},h.extractState=function(e,t){var n=null,r,i;return t=t||!1,r=h.extractId(e),r&&(n=h.getStateById(r)),n||(i=h.getFullUrl(e),r=h.getIdByUrl(i)||!1,r&&(n=h.getStateById(r)),!n&&t&&!h.isTraditionalAnchor(e)&&(n=h.createStateObject(null,null,i))),n},h.getIdByUrl=function(e){var n=h.urlToId[e]||h.store.urlToId[e]||t;return n},h.getLastSavedState=function(){return h.savedStates[h.savedStates.length-1]||t},h.getLastStoredState=function(){return h.storedStates[h.storedStates.length-1]||t},h.hasUrlDuplicate=function(e){var t=!1,n;return n=h.extractState(e.url),t=n&&n.id!==e.id,t},h.storeState=function(e){return h.urlToId[e.url]=e.id,h.storedStates.push(h.cloneObject(e)),e},h.isLastSavedState=function(e){var t=!1,n,r,i;return h.savedStates.length&&(n=e.id,r=h.getLastSavedState(),i=r.id,t=n===i),t},h.saveState=function(e){return h.isLastSavedState(e)?!1:(h.savedStates.push(h.cloneObject(e)),!0)},h.getStateByIndex=function(e){var t=null;return typeof e=="undefined"?t=h.savedStates[h.savedStates.length-1]:e<0?t=h.savedStates[h.savedStates.length+e]:t=h.savedStates[e],t},h.getCurrentIndex=function(){var e=null;return h.savedStates.length<1?e=0:e=h.savedStates.length-1,e},h.getHash=function(e){var t=h.getLocationHref(e),n;return n=h.getHashByUrl(t),n},h.unescapeHash=function(e){var t=h.normalizeHash(e);return t=decodeURIComponent(t),t},h.normalizeHash=function(e){var t=e.replace(/[^#]*#/,"").replace(/#.*/,"");return t},h.setHash=function(e,t){var n,i;return t!==!1&&h.busy()?(h.pushQueue({scope:h,callback:h.setHash,args:arguments,queue:t}),!1):(h.busy(!0),n=h.extractState(e,!0),n&&!h.emulated.pushState?h.pushState(n.data,n.title,n.url,!1):h.getHash()!==e&&(h.bugs.setHash?(i=h.getPageUrl(),h.pushState(null,null,i+"#"+e,!1)):r.location.hash=e),h)},h.escapeHash=function(t){var n=h.normalizeHash(t);return n=e.encodeURIComponent(n),h.bugs.hashEscape||(n=n.replace(/\%21/g,"!").replace(/\%26/g,"&").replace(/\%3D/g,"=").replace(/\%3F/g,"?")),n},h.getHashByUrl=function(e){var t=String(e).replace(/([^#]*)#?([^#]*)#?(.*)/,"$2");return t=h.unescapeHash(t),t},h.setTitle=function(e){var t=e.title,n;t||(n=h.getStateByIndex(0),n&&n.url===e.url&&(t=n.title||h.options.initialTitle));try{r.getElementsByTagName("title")[0].innerHTML=t.replace("<","&lt;").replace(">","&gt;").replace(" & "," &amp; ")}catch(i){}return r.title=t,h},h.queues=[],h.busy=function(e){typeof e!="undefined"?h.busy.flag=e:typeof h.busy.flag=="undefined"&&(h.busy.flag=!1);if(!h.busy.flag){u(h.busy.timeout);var t=function(){var e,n,r;if(h.busy.flag)return;for(e=h.queues.length-1;e>=0;--e){n=h.queues[e];if(n.length===0)continue;r=n.shift(),h.fireQueueItem(r),h.busy.timeout=o(t,h.options.busyDelay)}};h.busy.timeout=o(t,h.options.busyDelay)}return h.busy.flag},h.busy.flag=!1,h.fireQueueItem=function(e){return e.callback.apply(e.scope||h,e.args||[])},h.pushQueue=function(e){return h.queues[e.queue||0]=h.queues[e.queue||0]||[],h.queues[e.queue||0].push(e),h},h.queue=function(e,t){return typeof e=="function"&&(e={callback:e}),typeof t!="undefined"&&(e.queue=t),h.busy()?h.pushQueue(e):h.fireQueueItem(e),h},h.clearQueue=function(){return h.busy.flag=!1,h.queues=[],h},h.stateChanged=!1,h.doubleChecker=!1,h.doubleCheckComplete=function(){return h.stateChanged=!0,h.doubleCheckClear(),h},h.doubleCheckClear=function(){return h.doubleChecker&&(u(h.doubleChecker),h.doubleChecker=!1),h},h.doubleCheck=function(e){return h.stateChanged=!1,h.doubleCheckClear(),h.bugs.ieDoubleCheck&&(h.doubleChecker=o(function(){return h.doubleCheckClear(),h.stateChanged||e(),!0},h.options.doubleCheckInterval)),h},h.safariStatePoll=function(){var t=h.extractState(h.getLocationHref()),n;if(!h.isLastSavedState(t))return n=t,n||(n=h.createStateObject()),h.Adapter.trigger(e,"popstate"),h;return},h.back=function(e){return e!==!1&&h.busy()?(h.pushQueue({scope:h,callback:h.back,args:arguments,queue:e}),!1):(h.busy(!0),h.doubleCheck(function(){h.back(!1)}),p.go(-1),!0)},h.forward=function(e){return e!==!1&&h.busy()?(h.pushQueue({scope:h,callback:h.forward,args:arguments,queue:e}),!1):(h.busy(!0),h.doubleCheck(function(){h.forward(!1)}),p.go(1),!0)},h.go=function(e,t){var n;if(e>0)for(n=1;n<=e;++n)h.forward(t);else{if(!(e<0))throw new Error("History.go: History.go requires a positive or negative integer passed.");for(n=-1;n>=e;--n)h.back(t)}return h};if(h.emulated.pushState){var v=function(){};h.pushState=h.pushState||v,h.replaceState=h.replaceState||v}else h.onPopState=function(t,n){var r=!1,i=!1,s,o;return h.doubleCheckComplete(),s=h.getHash(),s?(o=h.extractState(s||h.getLocationHref(),!0),o?h.replaceState(o.data,o.title,o.url,!1):(h.Adapter.trigger(e,"anchorchange"),h.busy(!1)),h.expectedStateId=!1,!1):(r=h.Adapter.extractEventData("state",t,n)||!1,r?i=h.getStateById(r):h.expectedStateId?i=h.getStateById(h.expectedStateId):i=h.extractState(h.getLocationHref()),i||(i=h.createStateObject(null,null,h.getLocationHref())),h.expectedStateId=!1,h.isLastSavedState(i)?(h.busy(!1),!1):(h.storeState(i),h.saveState(i),h.setTitle(i),h.Adapter.trigger(e,"statechange"),h.busy(!1),!0))},h.Adapter.bind(e,"popstate",h.onPopState),h.pushState=function(t,n,r,i){if(h.getHashByUrl(r)&&h.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(i!==!1&&h.busy())return h.pushQueue({scope:h,callback:h.pushState,args:arguments,queue:i}),!1;h.busy(!0);var s=h.createStateObject(t,n,r);return h.isLastSavedState(s)?h.busy(!1):(h.storeState(s),h.expectedStateId=s.id,p.pushState(s.id,s.title,s.url),h.Adapter.trigger(e,"popstate")),!0},h.replaceState=function(t,n,r,i){if(h.getHashByUrl(r)&&h.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(i!==!1&&h.busy())return h.pushQueue({scope:h,callback:h.replaceState,args:arguments,queue:i}),!1;h.busy(!0);var s=h.createStateObject(t,n,r);return h.isLastSavedState(s)?h.busy(!1):(h.storeState(s),h.expectedStateId=s.id,p.replaceState(s.id,s.title,s.url),h.Adapter.trigger(e,"popstate")),!0};if(s){try{h.store=l.parse(s.getItem("History.store"))||{}}catch(m){h.store={}}h.normalizeStore()}else h.store={},h.normalizeStore();h.Adapter.bind(e,"unload",h.clearAllIntervals),h.saveState(h.storeState(h.extractState(h.getLocationHref(),!0))),s&&(h.onUnload=function(){var e,t,n;try{e=l.parse(s.getItem("History.store"))||{}}catch(r){e={}}e.idToState=e.idToState||{},e.urlToId=e.urlToId||{},e.stateToId=e.stateToId||{};for(t in h.idToState){if(!h.idToState.hasOwnProperty(t))continue;e.idToState[t]=h.idToState[t]}for(t in h.urlToId){if(!h.urlToId.hasOwnProperty(t))continue;e.urlToId[t]=h.urlToId[t]}for(t in h.stateToId){if(!h.stateToId.hasOwnProperty(t))continue;e.stateToId[t]=h.stateToId[t]}h.store=e,h.normalizeStore(),n=l.stringify(e);try{s.setItem("History.store",n)}catch(i){if(i.code!==DOMException.QUOTA_EXCEEDED_ERR)throw i;s.length&&(s.removeItem("History.store"),s.setItem("History.store",n))}},h.intervalList.push(a(h.onUnload,h.options.storeInterval)),h.Adapter.bind(e,"beforeunload",h.onUnload),h.Adapter.bind(e,"unload",h.onUnload));if(!h.emulated.pushState){h.bugs.safariPoll&&h.intervalList.push(a(h.safariStatePoll,h.options.safariPollInterval));if(i.vendor==="Apple Computer, Inc."||(i.appCodeName||"")==="Mozilla")h.Adapter.bind(e,"hashchange",function(){h.Adapter.trigger(e,"popstate")}),h.getHash()&&h.Adapter.onDomLoad(function(){h.Adapter.trigger(e,"hashchange")})}},(!h.options||!h.options.delayInit)&&h.init()}(window)
\ No newline at end of file
+(function(e,t){"use strict";var n=e.History=e.History||{},r=e.jQuery;if(typeof n.Adapter!="undefined")throw new Error("History.js Adapter has already been loaded...");n.Adapter={bind:function(e,t,n){r(e).bind(t,n)},trigger:function(e,t,n){r(e).trigger(t,n)},extractEventData:function(e,n,r){var i=n&&n.originalEvent&&n.originalEvent[e]||r&&r[e]||t;return i},onDomLoad:function(e){r(e)}},typeof n.init!="undefined"&&n.init()})(window),function(e,t){"use strict";var n=e.console||t,r=e.document,i=e.navigator,s=e.sessionStorage||!1,o=e.setTimeout,u=e.clearTimeout,a=e.setInterval,f=e.clearInterval,l=e.JSON,c=e.alert,h=e.History=e.History||{},p=e.history;try{s.setItem("TEST","1"),s.removeItem("TEST")}catch(d){s=!1}l.stringify=l.stringify||l.encode,l.parse=l.parse||l.decode;if(typeof h.init!="undefined")throw new Error("History.js Core has already been loaded...");h.init=function(e){return typeof h.Adapter=="undefined"?!1:(typeof h.initCore!="undefined"&&h.initCore(),typeof h.initHtml4!="undefined"&&h.initHtml4(),!0)},h.initCore=function(d){if(typeof h.initCore.initialized!="undefined")return!1;h.initCore.initialized=!0,h.options=h.options||{},h.options.hashChangeInterval=h.options.hashChangeInterval||100,h.options.safariPollInterval=h.options.safariPollInterval||500,h.options.doubleCheckInterval=h.options.doubleCheckInterval||500,h.options.disableSuid=h.options.disableSuid||!1,h.options.storeInterval=h.options.storeInterval||1e3,h.options.busyDelay=h.options.busyDelay||250,h.options.debug=h.options.debug||!1,h.options.initialTitle=h.options.initialTitle||r.title,h.options.html4Mode=h.options.html4Mode||!1,h.options.delayInit=h.options.delayInit||!1,h.intervalList=[],h.clearAllIntervals=function(){var e,t=h.intervalList;if(typeof t!="undefined"&&t!==null){for(e=0;e<t.length;e++)f(t[e]);h.intervalList=null}},h.debug=function(){(h.options.debug||!1)&&h.log.apply(h,arguments)},h.log=function(){var e=typeof n!="undefined"&&typeof n.log!="undefined"&&typeof n.log.apply!="undefined",t=r.getElementById("log"),i,s,o,u,a;e?(u=Array.prototype.slice.call(arguments),i=u.shift(),typeof n.debug!="undefined"?n.debug.apply(n,[i,u]):n.log.apply(n,[i,u])):i="\n"+arguments[0]+"\n";for(s=1,o=arguments.length;s<o;++s){a=arguments[s];if(typeof a=="object"&&typeof l!="undefined")try{a=l.stringify(a)}catch(f){}i+="\n"+a+"\n"}return t?(t.value+=i+"\n-----\n",t.scrollTop=t.scrollHeight-t.clientHeight):e||c(i),!0},h.getInternetExplorerMajorVersion=function(){var e=h.getInternetExplorerMajorVersion.cached=typeof h.getInternetExplorerMajorVersion.cached!="undefined"?h.getInternetExplorerMajorVersion.cached:function(){var e=3,t=r.createElement("div"),n=t.getElementsByTagName("i");while((t.innerHTML="<!--[if gt IE "+ ++e+"]><i></i><![endif]-->")&&n[0]);return e>4?e:!1}();return e},h.isInternetExplorer=function(){var e=h.isInternetExplorer.cached=typeof h.isInternetExplorer.cached!="undefined"?h.isInternetExplorer.cached:Boolean(h.getInternetExplorerMajorVersion());return e},h.options.html4Mode?h.emulated={pushState:!0,hashChange:!0}:h.emulated={pushState:!Boolean(e.history&&e.history.pushState&&e.history.replaceState&&!/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(i.userAgent)&&!/AppleWebKit\/5([0-2]|3[0-2])/i.test(i.userAgent)),hashChange:Boolean(!("onhashchange"in e||"onhashchange"in r)||h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<8)},h.enabled=!h.emulated.pushState,h.bugs={setHash:Boolean(!h.emulated.pushState&&i.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(i.userAgent)),safariPoll:Boolean(!h.emulated.pushState&&i.vendor==="Apple Computer, Inc."&&/AppleWebKit\/5([0-2]|3[0-3])/.test(i.userAgent)),ieDoubleCheck:Boolean(h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<8),hashEscape:Boolean(h.isInternetExplorer()&&h.getInternetExplorerMajorVersion()<7)},h.isEmptyObject=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},h.cloneObject=function(e){var t,n;return e?(t=l.stringify(e),n=l.parse(t)):n={},n},h.getRootUrl=function(){var e=r.location.protocol+"//"+(r.location.hostname||r.location.host);if(r.location.port||!1)e+=":"+r.location.port;return e+="/",e},h.getBaseHref=function(){var e=r.getElementsByTagName("base"),t=null,n="";return e.length===1&&(t=e[0],n=t.href.replace(/[^\/]+$/,"")),n=n.replace(/\/+$/,""),n&&(n+="/"),n},h.getBaseUrl=function(){var e=h.getBaseHref()||h.getBasePageUrl()||h.getRootUrl();return e},h.getPageUrl=function(){var e=h.getState(!1,!1),t=(e||{}).url||h.getLocationHref(),n;return n=t.replace(/\/+$/,"").replace(/[^\/]+$/,function(e,t,n){return/\./.test(e)?e:e+"/"}),n},h.getBasePageUrl=function(){var e=h.getLocationHref().replace(/[#\?].*/,"").replace(/[^\/]+$/,function(e,t,n){return/[^\/]$/.test(e)?"":e}).replace(/\/+$/,"")+"/";return e},h.getFullUrl=function(e,t){var n=e,r=e.substring(0,1);return t=typeof t=="undefined"?!0:t,/[a-z]+\:\/\//.test(e)||(r==="/"?n=h.getRootUrl()+e.replace(/^\/+/,""):r==="#"?n=h.getPageUrl().replace(/#.*/,"")+e:r==="?"?n=h.getPageUrl().replace(/[\?#].*/,"")+e:t?n=h.getBaseUrl()+e.replace(/^(\.\/)+/,""):n=h.getBasePageUrl()+e.replace(/^(\.\/)+/,"")),n.replace(/\#$/,"")},h.getShortUrl=function(e){var t=e,n=h.getBaseUrl(),r=h.getRootUrl();return h.emulated.pushState&&(t=t.replace(n,"")),t=t.replace(r,"/"),h.isTraditionalAnchor(t)&&(t="./"+t),t=t.replace(/^(\.\/)+/g,"./").replace(/\#$/,""),t},h.getLocationHref=function(e){return e=e||r,e.URL===e.location.href?e.location.href:e.location.href===decodeURIComponent(e.URL)?e.URL:e.location.hash&&decodeURIComponent(e.location.href.replace(/^[^#]+/,""))===e.location.hash?e.location.href:e.URL.indexOf("#")==-1&&e.location.href.indexOf("#")!=-1?e.location.href:e.URL||e.location.href},h.store={},h.idToState=h.idToState||{},h.stateToId=h.stateToId||{},h.urlToId=h.urlToId||{},h.storedStates=h.storedStates||[],h.savedStates=h.savedStates||[],h.normalizeStore=function(){h.store.idToState=h.store.idToState||{},h.store.urlToId=h.store.urlToId||{},h.store.stateToId=h.store.stateToId||{}},h.getState=function(e,t){typeof e=="undefined"&&(e=!0),typeof t=="undefined"&&(t=!0);var n=h.getLastSavedState();return!n&&t&&(n=h.createStateObject()),e&&(n=h.cloneObject(n),n.url=n.cleanUrl||n.url),n},h.getIdByState=function(e){var t=h.extractId(e.url),n;if(!t){n=h.getStateString(e);if(typeof h.stateToId[n]!="undefined")t=h.stateToId[n];else if(typeof h.store.stateToId[n]!="undefined")t=h.store.stateToId[n];else{for(;;){t=(new Date).getTime()+String(Math.random()).replace(/\D/g,"");if(typeof h.idToState[t]=="undefined"&&typeof h.store.idToState[t]=="undefined")break}h.stateToId[n]=t,h.idToState[t]=e}}return t},h.normalizeState=function(e){var t,n;if(!e||typeof e!="object")e={};if(typeof e.normalized!="undefined")return e;if(!e.data||typeof e.data!="object")e.data={};return t={},t.normalized=!0,t.title=e.title||"",t.url=h.getFullUrl(e.url?e.url:h.getLocationHref()),t.hash=h.getShortUrl(t.url),t.data=h.cloneObject(e.data),t.id=h.getIdByState(t),t.cleanUrl=t.url.replace(/\??\&_suid.*/,""),t.url=t.cleanUrl,n=!h.isEmptyObject(t.data),(t.title||n)&&h.options.disableSuid!==!0&&(t.hash=h.getShortUrl(t.url).replace(/\??\&_suid.*/,""),/\?/.test(t.hash)||(t.hash+="?"),t.hash+="&_suid="+t.id),t.hashedUrl=h.getFullUrl(t.hash),(h.emulated.pushState||h.bugs.safariPoll)&&h.hasUrlDuplicate(t)&&(t.url=t.hashedUrl),t},h.createStateObject=function(e,t,n){var r={data:e,title:t,url:n};return r=h.normalizeState(r),r},h.getStateById=function(e){e=String(e);var n=h.idToState[e]||h.store.idToState[e]||t;return n},h.getStateString=function(e){var t,n,r;return t=h.normalizeState(e),n={data:t.data,title:e.title,url:e.url},r=l.stringify(n),r},h.getStateId=function(e){var t,n;return t=h.normalizeState(e),n=t.id,n},h.getHashByState=function(e){var t,n;return t=h.normalizeState(e),n=t.hash,n},h.extractId=function(e){var t,n,r,i;return e.indexOf("#")!=-1?i=e.split("#")[0]:i=e,n=/(.*)\&_suid=([0-9]+)$/.exec(i),r=n?n[1]||e:e,t=n?String(n[2]||""):"",t||!1},h.isTraditionalAnchor=function(e){var t=!/[\/\?\.]/.test(e);return t},h.extractState=function(e,t){var n=null,r,i;return t=t||!1,r=h.extractId(e),r&&(n=h.getStateById(r)),n||(i=h.getFullUrl(e),r=h.getIdByUrl(i)||!1,r&&(n=h.getStateById(r)),!n&&t&&!h.isTraditionalAnchor(e)&&(n=h.createStateObject(null,null,i))),n},h.getIdByUrl=function(e){var n=h.urlToId[e]||h.store.urlToId[e]||t;return n},h.getLastSavedState=function(){return h.savedStates[h.savedStates.length-1]||t},h.getLastStoredState=function(){return h.storedStates[h.storedStates.length-1]||t},h.hasUrlDuplicate=function(e){var t=!1,n;return n=h.extractState(e.url),t=n&&n.id!==e.id,t},h.storeState=function(e){return h.urlToId[e.url]=e.id,h.storedStates.push(h.cloneObject(e)),e},h.isLastSavedState=function(e){var t=!1,n,r,i;return h.savedStates.length&&(n=e.id,r=h.getLastSavedState(),i=r.id,t=n===i),t},h.saveState=function(e){return h.isLastSavedState(e)?!1:(h.savedStates.push(h.cloneObject(e)),!0)},h.getStateByIndex=function(e){var t=null;return typeof e=="undefined"?t=h.savedStates[h.savedStates.length-1]:e<0?t=h.savedStates[h.savedStates.length+e]:t=h.savedStates[e],t},h.getCurrentIndex=function(){var e=null;return h.savedStates.length<1?e=0:e=h.savedStates.length-1,e},h.getHash=function(e){var t=h.getLocationHref(e),n;return n=h.getHashByUrl(t),n},h.unescapeHash=function(e){var t=h.normalizeHash(e);return t=decodeURIComponent(t),t},h.normalizeHash=function(e){var t=e.replace(/[^#]*#/,"").replace(/#.*/,"");return t},h.setHash=function(e,t){var n,i;return t!==!1&&h.busy()?(h.pushQueue({scope:h,callback:h.setHash,args:arguments,queue:t}),!1):(h.busy(!0),n=h.extractState(e,!0),n&&!h.emulated.pushState?h.pushState(n.data,n.title,n.url,!1):h.getHash()!==e&&(h.bugs.setHash?(i=h.getPageUrl(),h.pushState(null,null,i+"#"+e,!1)):r.location.hash=e),h)},h.escapeHash=function(t){var n=h.normalizeHash(t);return n=e.encodeURIComponent(n),h.bugs.hashEscape||(n=n.replace(/\%21/g,"!").replace(/\%26/g,"&").replace(/\%3D/g,"=").replace(/\%3F/g,"?")),n},h.getHashByUrl=function(e){var t=String(e).replace(/([^#]*)#?([^#]*)#?(.*)/,"$2");return t=h.unescapeHash(t),t},h.setTitle=function(e){var t=e.title,n;t||(n=h.getStateByIndex(0),n&&n.url===e.url&&(t=n.title||h.options.initialTitle));try{r.getElementsByTagName("title")[0].innerHTML=t.replace("<","&lt;").replace(">","&gt;").replace(" & "," &amp; ")}catch(i){}return r.title=t,h},h.queues=[],h.busy=function(e){typeof e!="undefined"?h.busy.flag=e:typeof h.busy.flag=="undefined"&&(h.busy.flag=!1);if(!h.busy.flag){u(h.busy.timeout);var t=function(){var e,n,r;if(h.busy.flag)return;for(e=h.queues.length-1;e>=0;--e){n=h.queues[e];if(n.length===0)continue;r=n.shift(),h.fireQueueItem(r),h.busy.timeout=o(t,h.options.busyDelay)}};h.busy.timeout=o(t,h.options.busyDelay)}return h.busy.flag},h.busy.flag=!1,h.fireQueueItem=function(e){return e.callback.apply(e.scope||h,e.args||[])},h.pushQueue=function(e){return h.queues[e.queue||0]=h.queues[e.queue||0]||[],h.queues[e.queue||0].push(e),h},h.queue=function(e,t){return typeof e=="function"&&(e={callback:e}),typeof t!="undefined"&&(e.queue=t),h.busy()?h.pushQueue(e):h.fireQueueItem(e),h},h.clearQueue=function(){return h.busy.flag=!1,h.queues=[],h},h.stateChanged=!1,h.doubleChecker=!1,h.doubleCheckComplete=function(){return h.stateChanged=!0,h.doubleCheckClear(),h},h.doubleCheckClear=function(){return h.doubleChecker&&(u(h.doubleChecker),h.doubleChecker=!1),h},h.doubleCheck=function(e){return h.stateChanged=!1,h.doubleCheckClear(),h.bugs.ieDoubleCheck&&(h.doubleChecker=o(function(){return h.doubleCheckClear(),h.stateChanged||e(),!0},h.options.doubleCheckInterval)),h},h.safariStatePoll=function(){var t=h.extractState(h.getLocationHref()),n;if(!h.isLastSavedState(t))return n=t,n||(n=h.createStateObject()),h.Adapter.trigger(e,"popstate"),h;return},h.back=function(e){return e!==!1&&h.busy()?(h.pushQueue({scope:h,callback:h.back,args:arguments,queue:e}),!1):(h.busy(!0),h.doubleCheck(function(){h.back(!1)}),p.go(-1),!0)},h.forward=function(e){return e!==!1&&h.busy()?(h.pushQueue({scope:h,callback:h.forward,args:arguments,queue:e}),!1):(h.busy(!0),h.doubleCheck(function(){h.forward(!1)}),p.go(1),!0)},h.go=function(e,t){var n;if(e>0)for(n=1;n<=e;++n)h.forward(t);else{if(!(e<0))throw new Error("History.go: History.go requires a positive or negative integer passed.");for(n=-1;n>=e;--n)h.back(t)}return h};if(h.emulated.pushState){var v=function(){};h.pushState=h.pushState||v,h.replaceState=h.replaceState||v}else h.onPopState=function(t,n){var r=!1,i=!1,s,o;return h.doubleCheckComplete(),s=h.getHash(),s?(o=h.extractState(s||h.getLocationHref(),!0),o?h.replaceState(o.data,o.title,o.url,!1):(h.Adapter.trigger(e,"anchorchange"),h.busy(!1)),h.expectedStateId=!1,!1):(r=h.Adapter.extractEventData("state",t,n)||!1,r?i=h.getStateById(r):h.expectedStateId?i=h.getStateById(h.expectedStateId):i=h.extractState(h.getLocationHref()),i||(i=h.createStateObject(null,null,h.getLocationHref())),h.expectedStateId=!1,h.isLastSavedState(i)?(h.busy(!1),!1):(h.storeState(i),h.saveState(i),h.setTitle(i),h.Adapter.trigger(e,"statechange"),h.busy(!1),!0))},h.Adapter.bind(e,"popstate",h.onPopState),h.pushState=function(t,n,r,i){if(h.getHashByUrl(r)&&h.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(i!==!1&&h.busy())return h.pushQueue({scope:h,callback:h.pushState,args:arguments,queue:i}),!1;h.busy(!0);var s=h.createStateObject(t,n,r);return h.isLastSavedState(s)?h.busy(!1):(h.storeState(s),h.expectedStateId=s.id,p.pushState(s.id,s.title,s.url),h.Adapter.trigger(e,"popstate")),!0},h.replaceState=function(t,n,r,i){if(h.getHashByUrl(r)&&h.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(i!==!1&&h.busy())return h.pushQueue({scope:h,callback:h.replaceState,args:arguments,queue:i}),!1;h.busy(!0);var s=h.createStateObject(t,n,r);return h.isLastSavedState(s)?h.busy(!1):(h.storeState(s),h.expectedStateId=s.id,p.replaceState(s.id,s.title,s.url),h.Adapter.trigger(e,"popstate")),!0};if(s){try{h.store=l.parse(s.getItem("History.store"))||{}}catch(m){h.store={}}h.normalizeStore()}else h.store={},h.normalizeStore();h.Adapter.bind(e,"unload",h.clearAllIntervals),h.saveState(h.storeState(h.extractState(h.getLocationHref(),!0))),s&&(h.onUnload=function(){var e,t,n;try{e=l.parse(s.getItem("History.store"))||{}}catch(r){e={}}e.idToState=e.idToState||{},e.urlToId=e.urlToId||{},e.stateToId=e.stateToId||{};for(t in h.idToState){if(!h.idToState.hasOwnProperty(t))continue;e.idToState[t]=h.idToState[t]}for(t in h.urlToId){if(!h.urlToId.hasOwnProperty(t))continue;e.urlToId[t]=h.urlToId[t]}for(t in h.stateToId){if(!h.stateToId.hasOwnProperty(t))continue;e.stateToId[t]=h.stateToId[t]}h.store=e,h.normalizeStore(),n=l.stringify(e);try{s.setItem("History.store",n)}catch(i){if(i.code!==DOMException.QUOTA_EXCEEDED_ERR)throw i;s.length&&(s.removeItem("History.store"),s.setItem("History.store",n))}},h.intervalList.push(a(h.onUnload,h.options.storeInterval)),h.Adapter.bind(e,"beforeunload",h.onUnload),h.Adapter.bind(e,"unload",h.onUnload));if(!h.emulated.pushState){h.bugs.safariPoll&&h.intervalList.push(a(h.safariStatePoll,h.options.safariPollInterval));if(i.vendor==="Apple Computer, Inc."||(i.appCodeName||"")==="Mozilla")h.Adapter.bind(e,"hashchange",function(){h.Adapter.trigger(e,"popstate")}),h.getHash()&&h.Adapter.onDomLoad(function(){h.Adapter.trigger(e,"hashchange")})}},(!h.options||!h.options.delayInit)&&h.init()}(window)
\ No newline at end of file
diff --git a/web/src/main/webapp/js/main-template.js b/web/src/main/webapp/js/main-template.js
index 07f16e11e4..3556b0ba70 100644
--- a/web/src/main/webapp/js/main-template.js
+++ b/web/src/main/webapp/js/main-template.js
@@ -1,19 +1,3 @@
-var host;
-
-// Deployment-scripts can insert host here.
-////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-// We know that you love 'free', we love it too :)! And so our entire software stack is free and even Open Source!      
-// Our routing service is also free for certain applications or smaller volume. Be fair, grab an API key and support us:
-// https://graphhopper.com/#directions-api Misuse of API keys that you don't own is prohibited and you'll be blocked.                    
-////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-if (!host) {
-    if (location.port === '') {
-        host = location.protocol + '//' + location.hostname;
-    } else {
-        host = location.protocol + '//' + location.hostname + ":" + location.port;
-    }
-}
-
 global.d3 = require('d3');
 var L = require('leaflet');
 require('leaflet-loading');
@@ -27,15 +11,25 @@ require('./lib/jquery-ui-custom-1.11.4.min.js');
 require('./lib/jquery.history.js');
 require('./lib/jquery.autocomplete.js');
 
+var ghenv = require("./options.js").options;
+console.log(ghenv.environment);
+
 var GHInput = require('./graphhopper/GHInput.js');
 var GHRequest = require('./graphhopper/GHRequest.js');
-var AutoComplete = require('./autocomplete.js');
+var host = ghenv.routing.host;
+if (!host) {
+    if (location.port === '') {
+        host = location.protocol + '//' + location.hostname;
+    } else {
+        host = location.protocol + '//' + location.hostname + ":" + location.port;
+    }
+}
 
-// To enable autocomplete
-// - Remove the first line
-// - Uncomment the second line and add a valid API token
-var autocomplete = AutoComplete.prototype.createStub();
-// var autocomplete = new AutoComplete('http://graphhopper.com/api/1', 'your api token goes here');
+var AutoComplete = require('./autocomplete.js');
+if (ghenv.environment === 'development')
+    var autocomplete = AutoComplete.prototype.createStub();
+else
+    var autocomplete = new AutoComplete(ghenv.geocoding.host, ghenv.geocoding.api_key);
 
 var mapLayer = require('./map.js');
 var nominatim = require('./nominatim.js');
@@ -46,12 +40,12 @@ var translate = require('./translate.js');
 var format = require('./tools/format.js');
 var urlTools = require('./tools/url.js');
 var vehicle = require('./tools/vehicle.js');
+var tileLayers = require('./config/tileLayers.js');
 
 var debug = false;
-var ghRequest = new GHRequest(host);
+var ghRequest = new GHRequest(host, ghenv.routing.api_key);
 var bounds = {};
 
-var activeLayer = '';
 var metaVersionInfo;
 
 // usage: log('inside coolFunc',this,arguments);
@@ -248,7 +242,7 @@ function resolveCoords(pointsAsStr, doQuery) {
         resolveAll();
         routeLatLng(ghRequest, doQuery);
     } else {
-        // at least one text input from user -> wait for resolve as we need the coord for routing     
+        // at least one text input from user -> wait for resolve as we need the coord for routing
         $.when.apply($, resolveAll()).done(function () {
             routeLatLng(ghRequest, doQuery);
         });
@@ -451,10 +445,10 @@ function routeLatLng(request, doQuery) {
     var doZoom = request.do_zoom;
     request.do_zoom = true;
 
-    var urlForHistory = request.createHistoryURL() + "&layer=" + activeLayer;
+    var urlForHistory = request.createHistoryURL() + "&layer=" + tileLayers.activeLayerName;
 
     // not enabled e.g. if no cookies allowed (?)
-    // if disabled we have to do the query and cannot rely on the statechange history event    
+    // if disabled we have to do the query and cannot rely on the statechange history event
     if (!doQuery && History.enabled) {
         // 2. important workaround for encoding problems in history.js
         var params = urlTools.parseUrl(urlForHistory);
@@ -590,3 +584,5 @@ function mySubmit() {
 function isProduction() {
     return host.indexOf("graphhopper.com") > 0;
 }
+
+module.exports.setFlag = setFlag;
diff --git a/web/src/main/webapp/js/main.js b/web/src/main/webapp/js/main.js
index 021dbd940f..878a5da8b8 100644
--- a/web/src/main/webapp/js/main.js
+++ b/web/src/main/webapp/js/main.js
@@ -20,10 +20,10 @@ this.on({zoomanim:this._animatePathZoom,zoomend:this._endPathZoom})):o.DomUtil.a
 case"touchend":return this.addPointerListenerEnd(t,e,i,n);case"touchmove":return this.addPointerListenerMove(t,e,i,n);default:throw"Unknown touch event type"}},addPointerListenerStart:function(t,i,n,s){var a="_leaflet_",r=this._pointers,h=function(t){"mouse"!==t.pointerType&&t.pointerType!==t.MSPOINTER_TYPE_MOUSE&&o.DomEvent.preventDefault(t);for(var e=!1,i=0;i<r.length;i++)if(r[i].pointerId===t.pointerId){e=!0;break}e||r.push(t),t.touches=r.slice(),t.changedTouches=[t],n(t)};if(t[a+"touchstart"+s]=h,t.addEventListener(this.POINTER_DOWN,h,!1),!this._pointerDocumentListener){var l=function(t){for(var e=0;e<r.length;e++)if(r[e].pointerId===t.pointerId){r.splice(e,1);break}};e.documentElement.addEventListener(this.POINTER_UP,l,!1),e.documentElement.addEventListener(this.POINTER_CANCEL,l,!1),this._pointerDocumentListener=!0}return this},addPointerListenerMove:function(t,e,i,n){function o(t){if(t.pointerType!==t.MSPOINTER_TYPE_MOUSE&&"mouse"!==t.pointerType||0!==t.buttons){for(var e=0;e<a.length;e++)if(a[e].pointerId===t.pointerId){a[e]=t;break}t.touches=a.slice(),t.changedTouches=[t],i(t)}}var s="_leaflet_",a=this._pointers;return t[s+"touchmove"+n]=o,t.addEventListener(this.POINTER_MOVE,o,!1),this},addPointerListenerEnd:function(t,e,i,n){var o="_leaflet_",s=this._pointers,a=function(t){for(var e=0;e<s.length;e++)if(s[e].pointerId===t.pointerId){s.splice(e,1);break}t.touches=s.slice(),t.changedTouches=[t],i(t)};return t[o+"touchend"+n]=a,t.addEventListener(this.POINTER_UP,a,!1),t.addEventListener(this.POINTER_CANCEL,a,!1),this},removePointerListener:function(t,e,i){var n="_leaflet_",o=t[n+e+i];switch(e){case"touchstart":t.removeEventListener(this.POINTER_DOWN,o,!1);break;case"touchmove":t.removeEventListener(this.POINTER_MOVE,o,!1);break;case"touchend":t.removeEventListener(this.POINTER_UP,o,!1),t.removeEventListener(this.POINTER_CANCEL,o,!1)}return this}}),o.Map.mergeOptions({touchZoom:o.Browser.touch&&!o.Browser.android23,bounceAtZoomLimits:!0}),o.Map.TouchZoom=o.Handler.extend({addHooks:function(){o.DomEvent.on(this._map._container,"touchstart",this._onTouchStart,this)},removeHooks:function(){o.DomEvent.off(this._map._container,"touchstart",this._onTouchStart,this)},_onTouchStart:function(t){var i=this._map;if(t.touches&&2===t.touches.length&&!i._animatingZoom&&!this._zooming){var n=i.mouseEventToLayerPoint(t.touches[0]),s=i.mouseEventToLayerPoint(t.touches[1]),a=i._getCenterLayerPoint();this._startCenter=n.add(s)._divideBy(2),this._startDist=n.distanceTo(s),this._moved=!1,this._zooming=!0,this._centerOffset=a.subtract(this._startCenter),i._panAnim&&i._panAnim.stop(),o.DomEvent.on(e,"touchmove",this._onTouchMove,this).on(e,"touchend",this._onTouchEnd,this),o.DomEvent.preventDefault(t)}},_onTouchMove:function(t){var e=this._map;if(t.touches&&2===t.touches.length&&this._zooming){var i=e.mouseEventToLayerPoint(t.touches[0]),n=e.mouseEventToLayerPoint(t.touches[1]);this._scale=i.distanceTo(n)/this._startDist,this._delta=i._add(n)._divideBy(2)._subtract(this._startCenter),1!==this._scale&&(e.options.bounceAtZoomLimits||!(e.getZoom()===e.getMinZoom()&&this._scale<1||e.getZoom()===e.getMaxZoom()&&this._scale>1))&&(this._moved||(o.DomUtil.addClass(e._mapPane,"leaflet-touching"),e.fire("movestart").fire("zoomstart"),this._moved=!0),o.Util.cancelAnimFrame(this._animRequest),this._animRequest=o.Util.requestAnimFrame(this._updateOnMove,this,!0,this._map._container),o.DomEvent.preventDefault(t))}},_updateOnMove:function(){var t=this._map,e=this._getScaleOrigin(),i=t.layerPointToLatLng(e),n=t.getScaleZoom(this._scale);t._animateZoom(i,n,this._startCenter,this._scale,this._delta,!1,!0)},_onTouchEnd:function(){if(!this._moved||!this._zooming)return void(this._zooming=!1);var t=this._map;this._zooming=!1,o.DomUtil.removeClass(t._mapPane,"leaflet-touching"),o.Util.cancelAnimFrame(this._animRequest),o.DomEvent.off(e,"touchmove",this._onTouchMove).off(e,"touchend",this._onTouchEnd);var i=this._getScaleOrigin(),n=t.layerPointToLatLng(i),s=t.getZoom(),a=t.getScaleZoom(this._scale)-s,r=a>0?Math.ceil(a):Math.floor(a),h=t._limitZoom(s+r),l=t.getZoomScale(h)/this._scale;t._animateZoom(n,h,i,l)},_getScaleOrigin:function(){var t=this._centerOffset.subtract(this._delta).divideBy(this._scale);return this._startCenter.add(t)}}),o.Map.addInitHook("addHandler","touchZoom",o.Map.TouchZoom),o.Map.mergeOptions({tap:!0,tapTolerance:15}),o.Map.Tap=o.Handler.extend({addHooks:function(){o.DomEvent.on(this._map._container,"touchstart",this._onDown,this)},removeHooks:function(){o.DomEvent.off(this._map._container,"touchstart",this._onDown,this)},_onDown:function(t){if(t.touches){if(o.DomEvent.preventDefault(t),this._fireClick=!0,t.touches.length>1)return this._fireClick=!1,void clearTimeout(this._holdTimeout);var i=t.touches[0],n=i.target;this._startPos=this._newPos=new o.Point(i.clientX,i.clientY),n.tagName&&"a"===n.tagName.toLowerCase()&&o.DomUtil.addClass(n,"leaflet-active"),this._holdTimeout=setTimeout(o.bind(function(){this._isTapValid()&&(this._fireClick=!1,this._onUp(),this._simulateEvent("contextmenu",i))},this),1e3),o.DomEvent.on(e,"touchmove",this._onMove,this).on(e,"touchend",this._onUp,this)}},_onUp:function(t){if(clearTimeout(this._holdTimeout),o.DomEvent.off(e,"touchmove",this._onMove,this).off(e,"touchend",this._onUp,this),this._fireClick&&t&&t.changedTouches){var i=t.changedTouches[0],n=i.target;n&&n.tagName&&"a"===n.tagName.toLowerCase()&&o.DomUtil.removeClass(n,"leaflet-active"),this._isTapValid()&&this._simulateEvent("click",i)}},_isTapValid:function(){return this._newPos.distanceTo(this._startPos)<=this._map.options.tapTolerance},_onMove:function(t){var e=t.touches[0];this._newPos=new o.Point(e.clientX,e.clientY)},_simulateEvent:function(i,n){var o=e.createEvent("MouseEvents");o._simulated=!0,n.target._simulatedClick=!0,o.initMouseEvent(i,!0,!0,t,1,n.screenX,n.screenY,n.clientX,n.clientY,!1,!1,!1,!1,0,null),n.target.dispatchEvent(o)}}),o.Browser.touch&&!o.Browser.pointer&&o.Map.addInitHook("addHandler","tap",o.Map.Tap),o.Map.mergeOptions({boxZoom:!0}),o.Map.BoxZoom=o.Handler.extend({initialize:function(t){this._map=t,this._container=t._container,this._pane=t._panes.overlayPane,this._moved=!1},addHooks:function(){o.DomEvent.on(this._container,"mousedown",this._onMouseDown,this)},removeHooks:function(){o.DomEvent.off(this._container,"mousedown",this._onMouseDown),this._moved=!1},moved:function(){return this._moved},_onMouseDown:function(t){return this._moved=!1,!t.shiftKey||1!==t.which&&1!==t.button?!1:(o.DomUtil.disableTextSelection(),o.DomUtil.disableImageDrag(),this._startLayerPoint=this._map.mouseEventToLayerPoint(t),void o.DomEvent.on(e,"mousemove",this._onMouseMove,this).on(e,"mouseup",this._onMouseUp,this).on(e,"keydown",this._onKeyDown,this))},_onMouseMove:function(t){this._moved||(this._box=o.DomUtil.create("div","leaflet-zoom-box",this._pane),o.DomUtil.setPosition(this._box,this._startLayerPoint),this._container.style.cursor="crosshair",this._map.fire("boxzoomstart"));var e=this._startLayerPoint,i=this._box,n=this._map.mouseEventToLayerPoint(t),s=n.subtract(e),a=new o.Point(Math.min(n.x,e.x),Math.min(n.y,e.y));o.DomUtil.setPosition(i,a),this._moved=!0,i.style.width=Math.max(0,Math.abs(s.x)-4)+"px",i.style.height=Math.max(0,Math.abs(s.y)-4)+"px"},_finish:function(){this._moved&&(this._pane.removeChild(this._box),this._container.style.cursor=""),o.DomUtil.enableTextSelection(),o.DomUtil.enableImageDrag(),o.DomEvent.off(e,"mousemove",this._onMouseMove).off(e,"mouseup",this._onMouseUp).off(e,"keydown",this._onKeyDown)},_onMouseUp:function(t){this._finish();var e=this._map,i=e.mouseEventToLayerPoint(t);if(!this._startLayerPoint.equals(i)){var n=new o.LatLngBounds(e.layerPointToLatLng(this._startLayerPoint),e.layerPointToLatLng(i));e.fitBounds(n),e.fire("boxzoomend",{boxZoomBounds:n})}},_onKeyDown:function(t){27===t.keyCode&&this._finish()}}),o.Map.addInitHook("addHandler","boxZoom",o.Map.BoxZoom),o.Map.mergeOptions({keyboard:!0,keyboardPanOffset:80,keyboardZoomOffset:1}),o.Map.Keyboard=o.Handler.extend({keyCodes:{left:[37],right:[39],down:[40],up:[38],zoomIn:[187,107,61,171],zoomOut:[189,109,173]},initialize:function(t){this._map=t,this._setPanOffset(t.options.keyboardPanOffset),this._setZoomOffset(t.options.keyboardZoomOffset)},addHooks:function(){var t=this._map._container;-1===t.tabIndex&&(t.tabIndex="0"),o.DomEvent.on(t,"focus",this._onFocus,this).on(t,"blur",this._onBlur,this).on(t,"mousedown",this._onMouseDown,this),this._map.on("focus",this._addHooks,this).on("blur",this._removeHooks,this)},removeHooks:function(){this._removeHooks();var t=this._map._container;o.DomEvent.off(t,"focus",this._onFocus,this).off(t,"blur",this._onBlur,this).off(t,"mousedown",this._onMouseDown,this),this._map.off("focus",this._addHooks,this).off("blur",this._removeHooks,this)},_onMouseDown:function(){if(!this._focused){var i=e.body,n=e.documentElement,o=i.scrollTop||n.scrollTop,s=i.scrollLeft||n.scrollLeft;this._map._container.focus(),t.scrollTo(s,o)}},_onFocus:function(){this._focused=!0,this._map.fire("focus")},_onBlur:function(){this._focused=!1,this._map.fire("blur")},_setPanOffset:function(t){var e,i,n=this._panKeys={},o=this.keyCodes;for(e=0,i=o.left.length;i>e;e++)n[o.left[e]]=[-1*t,0];for(e=0,i=o.right.length;i>e;e++)n[o.right[e]]=[t,0];for(e=0,i=o.down.length;i>e;e++)n[o.down[e]]=[0,t];for(e=0,i=o.up.length;i>e;e++)n[o.up[e]]=[0,-1*t]},_setZoomOffset:function(t){var e,i,n=this._zoomKeys={},o=this.keyCodes;for(e=0,i=o.zoomIn.length;i>e;e++)n[o.zoomIn[e]]=t;for(e=0,i=o.zoomOut.length;i>e;e++)n[o.zoomOut[e]]=-t},_addHooks:function(){o.DomEvent.on(e,"keydown",this._onKeyDown,this)},_removeHooks:function(){o.DomEvent.off(e,"keydown",this._onKeyDown,this)},_onKeyDown:function(t){var e=t.keyCode,i=this._map;if(e in this._panKeys){if(i._panAnim&&i._panAnim._inProgress)return;i.panBy(this._panKeys[e]),i.options.maxBounds&&i.panInsideBounds(i.options.maxBounds)}else{if(!(e in this._zoomKeys))return;i.setZoom(i.getZoom()+this._zoomKeys[e])}o.DomEvent.stop(t)}}),o.Map.addInitHook("addHandler","keyboard",o.Map.Keyboard),o.Handler.MarkerDrag=o.Handler.extend({initialize:function(t){this._marker=t},addHooks:function(){var t=this._marker._icon;this._draggable||(this._draggable=new o.Draggable(t,t)),this._draggable.on("dragstart",this._onDragStart,this).on("drag",this._onDrag,this).on("dragend",this._onDragEnd,this),this._draggable.enable(),o.DomUtil.addClass(this._marker._icon,"leaflet-marker-draggable")},removeHooks:function(){this._draggable.off("dragstart",this._onDragStart,this).off("drag",this._onDrag,this).off("dragend",this._onDragEnd,this),this._draggable.disable(),o.DomUtil.removeClass(this._marker._icon,"leaflet-marker-draggable")},moved:function(){return this._draggable&&this._draggable._moved},_onDragStart:function(){this._marker.closePopup().fire("movestart").fire("dragstart")},_onDrag:function(){var t=this._marker,e=t._shadow,i=o.DomUtil.getPosition(t._icon),n=t._map.layerPointToLatLng(i);e&&o.DomUtil.setPosition(e,i),t._latlng=n,t.fire("move",{latlng:n}).fire("drag")},_onDragEnd:function(t){this._marker.fire("moveend").fire("dragend",t)}}),o.Control=o.Class.extend({options:{position:"topright"},initialize:function(t){o.setOptions(this,t)},getPosition:function(){return this.options.position},setPosition:function(t){var e=this._map;return e&&e.removeControl(this),this.options.position=t,e&&e.addControl(this),this},getContainer:function(){return this._container},addTo:function(t){this._map=t;var e=this._container=this.onAdd(t),i=this.getPosition(),n=t._controlCorners[i];return o.DomUtil.addClass(e,"leaflet-control"),-1!==i.indexOf("bottom")?n.insertBefore(e,n.firstChild):n.appendChild(e),this},removeFrom:function(t){var e=this.getPosition(),i=t._controlCorners[e];return i.removeChild(this._container),this._map=null,this.onRemove&&this.onRemove(t),this},_refocusOnMap:function(){this._map&&this._map.getContainer().focus()}}),o.control=function(t){return new o.Control(t)},o.Map.include({addControl:function(t){return t.addTo(this),this},removeControl:function(t){return t.removeFrom(this),this},_initControlPos:function(){function t(t,s){var a=i+t+" "+i+s;e[t+s]=o.DomUtil.create("div",a,n)}var e=this._controlCorners={},i="leaflet-",n=this._controlContainer=o.DomUtil.create("div",i+"control-container",this._container);t("top","left"),t("top","right"),t("bottom","left"),t("bottom","right")},_clearControlPos:function(){this._container.removeChild(this._controlContainer)}}),o.Control.Zoom=o.Control.extend({options:{position:"topleft",zoomInText:"+",zoomInTitle:"Zoom in",zoomOutText:"-",zoomOutTitle:"Zoom out"},onAdd:function(t){var e="leaflet-control-zoom",i=o.DomUtil.create("div",e+" leaflet-bar");return this._map=t,this._zoomInButton=this._createButton(this.options.zoomInText,this.options.zoomInTitle,e+"-in",i,this._zoomIn,this),this._zoomOutButton=this._createButton(this.options.zoomOutText,this.options.zoomOutTitle,e+"-out",i,this._zoomOut,this),this._updateDisabled(),t.on("zoomend zoomlevelschange",this._updateDisabled,this),i},onRemove:function(t){t.off("zoomend zoomlevelschange",this._updateDisabled,this)},_zoomIn:function(t){this._map.zoomIn(t.shiftKey?3:1)},_zoomOut:function(t){this._map.zoomOut(t.shiftKey?3:1)},_createButton:function(t,e,i,n,s,a){var r=o.DomUtil.create("a",i,n);r.innerHTML=t,r.href="#",r.title=e;var h=o.DomEvent.stopPropagation;return o.DomEvent.on(r,"click",h).on(r,"mousedown",h).on(r,"dblclick",h).on(r,"click",o.DomEvent.preventDefault).on(r,"click",s,a).on(r,"click",this._refocusOnMap,a),r},_updateDisabled:function(){var t=this._map,e="leaflet-disabled";o.DomUtil.removeClass(this._zoomInButton,e),o.DomUtil.removeClass(this._zoomOutButton,e),t._zoom===t.getMinZoom()&&o.DomUtil.addClass(this._zoomOutButton,e),t._zoom===t.getMaxZoom()&&o.DomUtil.addClass(this._zoomInButton,e)}}),o.Map.mergeOptions({zoomControl:!0}),o.Map.addInitHook(function(){this.options.zoomControl&&(this.zoomControl=new o.Control.Zoom,this.addControl(this.zoomControl))}),o.control.zoom=function(t){return new o.Control.Zoom(t)},o.Control.Attribution=o.Control.extend({options:{position:"bottomright",prefix:'<a href="http://leafletjs.com" title="A JS library for interactive maps">Leaflet</a>'},initialize:function(t){o.setOptions(this,t),this._attributions={}},onAdd:function(t){this._container=o.DomUtil.create("div","leaflet-control-attribution"),o.DomEvent.disableClickPropagation(this._container);for(var e in t._layers)t._layers[e].getAttribution&&this.addAttribution(t._layers[e].getAttribution());return t.on("layeradd",this._onLayerAdd,this).on("layerremove",this._onLayerRemove,this),this._update(),this._container},onRemove:function(t){t.off("layeradd",this._onLayerAdd).off("layerremove",this._onLayerRemove)},setPrefix:function(t){return this.options.prefix=t,this._update(),this},addAttribution:function(t){return t?(this._attributions[t]||(this._attributions[t]=0),this._attributions[t]++,this._update(),this):void 0},removeAttribution:function(t){return t?(this._attributions[t]&&(this._attributions[t]--,this._update()),this):void 0},_update:function(){if(this._map){var t=[];for(var e in this._attributions)this._attributions[e]&&t.push(e);var i=[];this.options.prefix&&i.push(this.options.prefix),t.length&&i.push(t.join(", ")),this._container.innerHTML=i.join(" | ")}},_onLayerAdd:function(t){t.layer.getAttribution&&this.addAttribution(t.layer.getAttribution())},_onLayerRemove:function(t){t.layer.getAttribution&&this.removeAttribution(t.layer.getAttribution())}}),o.Map.mergeOptions({attributionControl:!0}),o.Map.addInitHook(function(){this.options.attributionControl&&(this.attributionControl=(new o.Control.Attribution).addTo(this))}),o.control.attribution=function(t){return new o.Control.Attribution(t)},o.Control.Scale=o.Control.extend({options:{position:"bottomleft",maxWidth:100,metric:!0,imperial:!0,updateWhenIdle:!1},onAdd:function(t){this._map=t;var e="leaflet-control-scale",i=o.DomUtil.create("div",e),n=this.options;return this._addScales(n,e,i),t.on(n.updateWhenIdle?"moveend":"move",this._update,this),t.whenReady(this._update,this),i},onRemove:function(t){t.off(this.options.updateWhenIdle?"moveend":"move",this._update,this)},_addScales:function(t,e,i){t.metric&&(this._mScale=o.DomUtil.create("div",e+"-line",i)),t.imperial&&(this._iScale=o.DomUtil.create("div",e+"-line",i))},_update:function(){var t=this._map.getBounds(),e=t.getCenter().lat,i=6378137*Math.PI*Math.cos(e*Math.PI/180),n=i*(t.getNorthEast().lng-t.getSouthWest().lng)/180,o=this._map.getSize(),s=this.options,a=0;o.x>0&&(a=n*(s.maxWidth/o.x)),this._updateScales(s,a)},_updateScales:function(t,e){t.metric&&e&&this._updateMetric(e),t.imperial&&e&&this._updateImperial(e)},_updateMetric:function(t){var e=this._getRoundNum(t);this._mScale.style.width=this._getScaleWidth(e/t)+"px",this._mScale.innerHTML=1e3>e?e+" m":e/1e3+" km"},_updateImperial:function(t){var e,i,n,o=3.2808399*t,s=this._iScale;o>5280?(e=o/5280,i=this._getRoundNum(e),s.style.width=this._getScaleWidth(i/e)+"px",s.innerHTML=i+" mi"):(n=this._getRoundNum(o),s.style.width=this._getScaleWidth(n/o)+"px",s.innerHTML=n+" ft")},_getScaleWidth:function(t){return Math.round(this.options.maxWidth*t)-10},_getRoundNum:function(t){var e=Math.pow(10,(Math.floor(t)+"").length-1),i=t/e;return i=i>=10?10:i>=5?5:i>=3?3:i>=2?2:1,e*i}}),o.control.scale=function(t){return new o.Control.Scale(t)},o.Control.Layers=o.Control.extend({options:{collapsed:!0,position:"topright",autoZIndex:!0},initialize:function(t,e,i){o.setOptions(this,i),this._layers={},this._lastZIndex=0,this._handlingClick=!1;for(var n in t)this._addLayer(t[n],n);for(n in e)this._addLayer(e[n],n,!0)},onAdd:function(t){return this._initLayout(),this._update(),t.on("layeradd",this._onLayerChange,this).on("layerremove",this._onLayerChange,this),this._container},onRemove:function(t){t.off("layeradd",this._onLayerChange,this).off("layerremove",this._onLayerChange,this)},addBaseLayer:function(t,e){return this._addLayer(t,e),this._update(),this},addOverlay:function(t,e){return this._addLayer(t,e,!0),this._update(),this},removeLayer:function(t){var e=o.stamp(t);return delete this._layers[e],this._update(),this},_initLayout:function(){var t="leaflet-control-layers",e=this._container=o.DomUtil.create("div",t);e.setAttribute("aria-haspopup",!0),o.Browser.touch?o.DomEvent.on(e,"click",o.DomEvent.stopPropagation):o.DomEvent.disableClickPropagation(e).disableScrollPropagation(e);var i=this._form=o.DomUtil.create("form",t+"-list");if(this.options.collapsed){o.Browser.android||o.DomEvent.on(e,"mouseover",this._expand,this).on(e,"mouseout",this._collapse,this);var n=this._layersLink=o.DomUtil.create("a",t+"-toggle",e);n.href="#",n.title="Layers",o.Browser.touch?o.DomEvent.on(n,"click",o.DomEvent.stop).on(n,"click",this._expand,this):o.DomEvent.on(n,"focus",this._expand,this),o.DomEvent.on(i,"click",function(){setTimeout(o.bind(this._onInputClick,this),0)},this),this._map.on("click",this._collapse,this)}else this._expand();this._baseLayersList=o.DomUtil.create("div",t+"-base",i),this._separator=o.DomUtil.create("div",t+"-separator",i),this._overlaysList=o.DomUtil.create("div",t+"-overlays",i),e.appendChild(i)},_addLayer:function(t,e,i){var n=o.stamp(t);this._layers[n]={layer:t,name:e,overlay:i},this.options.autoZIndex&&t.setZIndex&&(this._lastZIndex++,t.setZIndex(this._lastZIndex))},_update:function(){if(this._container){this._baseLayersList.innerHTML="",this._overlaysList.innerHTML="";var t,e,i=!1,n=!1;for(t in this._layers)e=this._layers[t],this._addItem(e),n=n||e.overlay,i=i||!e.overlay;this._separator.style.display=n&&i?"":"none"}},_onLayerChange:function(t){var e=this._layers[o.stamp(t.layer)];if(e){this._handlingClick||this._update();var i=e.overlay?"layeradd"===t.type?"overlayadd":"overlayremove":"layeradd"===t.type?"baselayerchange":null;i&&this._map.fire(i,e)}},_createRadioElement:function(t,i){var n='<input type="radio" class="leaflet-control-layers-selector" name="'+t+'"';i&&(n+=' checked="checked"'),n+="/>";var o=e.createElement("div");return o.innerHTML=n,o.firstChild},_addItem:function(t){var i,n=e.createElement("label"),s=this._map.hasLayer(t.layer);t.overlay?(i=e.createElement("input"),i.type="checkbox",i.className="leaflet-control-layers-selector",i.defaultChecked=s):i=this._createRadioElement("leaflet-base-layers",s),i.layerId=o.stamp(t.layer),o.DomEvent.on(i,"click",this._onInputClick,this);var a=e.createElement("span");a.innerHTML=" "+t.name,n.appendChild(i),n.appendChild(a);var r=t.overlay?this._overlaysList:this._baseLayersList;return r.appendChild(n),n},_onInputClick:function(){var t,e,i,n=this._form.getElementsByTagName("input"),o=n.length;for(this._handlingClick=!0,t=0;o>t;t++)e=n[t],i=this._layers[e.layerId],e.checked&&!this._map.hasLayer(i.layer)?this._map.addLayer(i.layer):!e.checked&&this._map.hasLayer(i.layer)&&this._map.removeLayer(i.layer);this._handlingClick=!1,this._refocusOnMap()},_expand:function(){o.DomUtil.addClass(this._container,"leaflet-control-layers-expanded")},_collapse:function(){this._container.className=this._container.className.replace(" leaflet-control-layers-expanded","")}}),o.control.layers=function(t,e,i){return new o.Control.Layers(t,e,i)},o.PosAnimation=o.Class.extend({includes:o.Mixin.Events,run:function(t,e,i,n){this.stop(),this._el=t,this._inProgress=!0,this._newPos=e,this.fire("start"),t.style[o.DomUtil.TRANSITION]="all "+(i||.25)+"s cubic-bezier(0,0,"+(n||.5)+",1)",o.DomEvent.on(t,o.DomUtil.TRANSITION_END,this._onTransitionEnd,this),o.DomUtil.setPosition(t,e),o.Util.falseFn(t.offsetWidth),this._stepTimer=setInterval(o.bind(this._onStep,this),50)},stop:function(){this._inProgress&&(o.DomUtil.setPosition(this._el,this._getPos()),this._onTransitionEnd(),o.Util.falseFn(this._el.offsetWidth))},_onStep:function(){var t=this._getPos();return t?(this._el._leaflet_pos=t,void this.fire("step")):void this._onTransitionEnd()},_transformRe:/([-+]?(?:\d*\.)?\d+)\D*, ([-+]?(?:\d*\.)?\d+)\D*\)/,_getPos:function(){var e,i,n,s=this._el,a=t.getComputedStyle(s);if(o.Browser.any3d){if(n=a[o.DomUtil.TRANSFORM].match(this._transformRe),!n)return;e=parseFloat(n[1]),i=parseFloat(n[2])}else e=parseFloat(a.left),i=parseFloat(a.top);return new o.Point(e,i,!0)},_onTransitionEnd:function(){o.DomEvent.off(this._el,o.DomUtil.TRANSITION_END,this._onTransitionEnd,this),this._inProgress&&(this._inProgress=!1,this._el.style[o.DomUtil.TRANSITION]="",this._el._leaflet_pos=this._newPos,clearInterval(this._stepTimer),this.fire("step").fire("end"))}}),o.Map.include({setView:function(t,e,n){if(e=e===i?this._zoom:this._limitZoom(e),t=this._limitCenter(o.latLng(t),e,this.options.maxBounds),n=n||{},this._panAnim&&this._panAnim.stop(),this._loaded&&!n.reset&&n!==!0){n.animate!==i&&(n.zoom=o.extend({animate:n.animate},n.zoom),n.pan=o.extend({animate:n.animate},n.pan));var s=this._zoom!==e?this._tryAnimatedZoom&&this._tryAnimatedZoom(t,e,n.zoom):this._tryAnimatedPan(t,n.pan);if(s)return clearTimeout(this._sizeTimer),this}return this._resetView(t,e),this},panBy:function(t,e){if(t=o.point(t).round(),e=e||{},!t.x&&!t.y)return this;if(this._panAnim||(this._panAnim=new o.PosAnimation,this._panAnim.on({step:this._onPanTransitionStep,end:this._onPanTransitionEnd},this)),e.noMoveStart||this.fire("movestart"),e.animate!==!1){o.DomUtil.addClass(this._mapPane,"leaflet-pan-anim");var i=this._getMapPanePos().subtract(t);this._panAnim.run(this._mapPane,i,e.duration||.25,e.easeLinearity)}else this._rawPanBy(t),this.fire("move").fire("moveend");return this},_onPanTransitionStep:function(){this.fire("move")},_onPanTransitionEnd:function(){o.DomUtil.removeClass(this._mapPane,"leaflet-pan-anim"),this.fire("moveend")},_tryAnimatedPan:function(t,e){var i=this._getCenterOffset(t)._floor();return(e&&e.animate)===!0||this.getSize().contains(i)?(this.panBy(i,e),!0):!1}}),o.PosAnimation=o.DomUtil.TRANSITION?o.PosAnimation:o.PosAnimation.extend({run:function(t,e,i,n){this.stop(),this._el=t,this._inProgress=!0,this._duration=i||.25,this._easeOutPower=1/Math.max(n||.5,.2),this._startPos=o.DomUtil.getPosition(t),this._offset=e.subtract(this._startPos),this._startTime=+new Date,this.fire("start"),this._animate()},stop:function(){this._inProgress&&(this._step(),this._complete())},_animate:function(){this._animId=o.Util.requestAnimFrame(this._animate,this),this._step()},_step:function(){var t=+new Date-this._startTime,e=1e3*this._duration;e>t?this._runFrame(this._easeOut(t/e)):(this._runFrame(1),this._complete())},_runFrame:function(t){var e=this._startPos.add(this._offset.multiplyBy(t));o.DomUtil.setPosition(this._el,e),this.fire("step")},_complete:function(){o.Util.cancelAnimFrame(this._animId),this._inProgress=!1,this.fire("end")},_easeOut:function(t){return 1-Math.pow(1-t,this._easeOutPower)}}),o.Map.mergeOptions({zoomAnimation:!0,zoomAnimationThreshold:4}),o.DomUtil.TRANSITION&&o.Map.addInitHook(function(){this._zoomAnimated=this.options.zoomAnimation&&o.DomUtil.TRANSITION&&o.Browser.any3d&&!o.Browser.android23&&!o.Browser.mobileOpera,this._zoomAnimated&&o.DomEvent.on(this._mapPane,o.DomUtil.TRANSITION_END,this._catchTransitionEnd,this)}),o.Map.include(o.DomUtil.TRANSITION?{_catchTransitionEnd:function(t){this._animatingZoom&&t.propertyName.indexOf("transform")>=0&&this._onZoomTransitionEnd()},_nothingToAnimate:function(){return!this._container.getElementsByClassName("leaflet-zoom-animated").length},_tryAnimatedZoom:function(t,e,i){if(this._animatingZoom)return!0;if(i=i||{},!this._zoomAnimated||i.animate===!1||this._nothingToAnimate()||Math.abs(e-this._zoom)>this.options.zoomAnimationThreshold)return!1;var n=this.getZoomScale(e),o=this._getCenterOffset(t)._divideBy(1-1/n),s=this._getCenterLayerPoint()._add(o);return i.animate===!0||this.getSize().contains(o)?(this.fire("movestart").fire("zoomstart"),this._animateZoom(t,e,s,n,null,!0),!0):!1},_animateZoom:function(t,e,i,n,s,a,r){r||(this._animatingZoom=!0),o.DomUtil.addClass(this._mapPane,"leaflet-zoom-anim"),this._animateToCenter=t,this._animateToZoom=e,o.Draggable&&(o.Draggable._disabled=!0),o.Util.requestAnimFrame(function(){this.fire("zoomanim",{center:t,zoom:e,origin:i,scale:n,delta:s,backwards:a}),setTimeout(o.bind(this._onZoomTransitionEnd,this),250)},this)},_onZoomTransitionEnd:function(){this._animatingZoom&&(this._animatingZoom=!1,o.DomUtil.removeClass(this._mapPane,"leaflet-zoom-anim"),o.Util.requestAnimFrame(function(){this._resetView(this._animateToCenter,this._animateToZoom,!0,!0),o.Draggable&&(o.Draggable._disabled=!1)},this))}}:{}),o.TileLayer.include({_animateZoom:function(t){this._animating||(this._animating=!0,this._prepareBgBuffer());var e=this._bgBuffer,i=o.DomUtil.TRANSFORM,n=t.delta?o.DomUtil.getTranslateString(t.delta):e.style[i],s=o.DomUtil.getScaleString(t.scale,t.origin);e.style[i]=t.backwards?s+" "+n:n+" "+s},_endZoomAnim:function(){var t=this._tileContainer,e=this._bgBuffer;t.style.visibility="",t.parentNode.appendChild(t),o.Util.falseFn(e.offsetWidth);var i=this._map.getZoom();(i>this.options.maxZoom||i<this.options.minZoom)&&this._clearBgBuffer(),this._animating=!1},_clearBgBuffer:function(){var t=this._map;!t||t._animatingZoom||t.touchZoom._zooming||(this._bgBuffer.innerHTML="",this._bgBuffer.style[o.DomUtil.TRANSFORM]="")},_prepareBgBuffer:function(){var t=this._tileContainer,e=this._bgBuffer,i=this._getLoadedTilesPercentage(e),n=this._getLoadedTilesPercentage(t);return e&&i>.5&&.5>n?(t.style.visibility="hidden",void this._stopLoadingImages(t)):(e.style.visibility="hidden",e.style[o.DomUtil.TRANSFORM]="",this._tileContainer=e,e=this._bgBuffer=t,this._stopLoadingImages(e),void clearTimeout(this._clearBgBufferTimer))},_getLoadedTilesPercentage:function(t){var e,i,n=t.getElementsByTagName("img"),o=0;for(e=0,i=n.length;i>e;e++)n[e].complete&&o++;return o/i},_stopLoadingImages:function(t){var e,i,n,s=Array.prototype.slice.call(t.getElementsByTagName("img"));for(e=0,i=s.length;i>e;e++)n=s[e],n.complete||(n.onload=o.Util.falseFn,n.onerror=o.Util.falseFn,n.src=o.Util.emptyImageUrl,n.parentNode.removeChild(n))}}),o.Map.include({_defaultLocateOptions:{watch:!1,setView:!1,maxZoom:1/0,timeout:1e4,maximumAge:0,enableHighAccuracy:!1},locate:function(t){if(t=this._locateOptions=o.extend(this._defaultLocateOptions,t),!navigator.geolocation)return this._handleGeolocationError({code:0,message:"Geolocation not supported."}),this;var e=o.bind(this._handleGeolocationResponse,this),i=o.bind(this._handleGeolocationError,this);return t.watch?this._locationWatchId=navigator.geolocation.watchPosition(e,i,t):navigator.geolocation.getCurrentPosition(e,i,t),this},stopLocate:function(){return navigator.geolocation&&navigator.geolocation.clearWatch(this._locationWatchId),this._locateOptions&&(this._locateOptions.setView=!1),this},_handleGeolocationError:function(t){var e=t.code,i=t.message||(1===e?"permission denied":2===e?"position unavailable":"timeout");this._locateOptions.setView&&!this._loaded&&this.fitWorld(),this.fire("locationerror",{code:e,message:"Geolocation error: "+i+"."})},_handleGeolocationResponse:function(t){var e=t.coords.latitude,i=t.coords.longitude,n=new o.LatLng(e,i),s=180*t.coords.accuracy/40075017,a=s/Math.cos(o.LatLng.DEG_TO_RAD*e),r=o.latLngBounds([e-s,i-a],[e+s,i+a]),h=this._locateOptions;if(h.setView){var l=Math.min(this.getBoundsZoom(r),h.maxZoom);this.setView(n,l)}var u={latlng:n,bounds:r,timestamp:t.timestamp};for(var c in t.coords)"number"==typeof t.coords[c]&&(u[c]=t.coords[c]);this.fire("locationfound",u)}})}(window,document);
 
 },{}],5:[function(require,module,exports){
-var formatTools=require("./tools/format.js"),GHInput=require("./graphhopper/GHInput.js"),dataToHtml=function(t,o){var e="";t.name&&(e+="<div class='nameseg'>"+formatTools.formatValue(t.name,o)+"</div>");var n="";return t.postcode&&(n=t.postcode),t.city&&(n=formatTools.insComma(n,t.city)),t.country&&(n=formatTools.insComma(n,t.country)),n&&(e+="<div class='cityseg'>"+formatTools.formatValue(n,o)+"</div>"),"highway"===t.osm_key,e+="place"===t.osm_key?"<span class='moreseg'>"+t.osm_value+"</span>":"<span class='moreseg'>"+t.osm_key+"</span>"},dataToText=function(t){var o="";return t.name&&(o+=t.name),t.postcode&&(o=formatTools.insComma(o,t.postcode)),t.city&&o.indexOf(t.city)<0&&(o=formatTools.insComma(o,t.city)),t.country&&o.indexOf(t.country)<0&&(o=formatTools.insComma(o,t.country)),o},AutoComplete=function(t,o){this.host=t,this.key=o,this.dataType="json"};AutoComplete.prototype.createPath=function(t){for(var o in this.api_params){var e=this.api_params[o];if(GHRoute.isArray(e))for(var n in e)t+="&"+encodeURIComponent(o)+"="+encodeURIComponent(e[n]);else t+="&"+encodeURIComponent(o)+"="+encodeURIComponent(e)}return t},AutoComplete.prototype.createGeocodeURL=function(t,o){var e=this.createPath(this.host+"/geocode?limit=6&type="+this.dataType+"&key="+this.key);if(o>=0&&o<t.route.size()){var n=t.route.getIndex(o);e+="&point="+n.lat+","+n.lng}return e},AutoComplete.prototype.getAutoCompleteDiv=function(t){return $("#locationpoints > div.pointDiv").eq(t).find(".pointInput")},AutoComplete.prototype.hide=function(){$(':input[id$="_Input"]').autocomplete().hide()},AutoComplete.prototype.showListForIndex=function(t,o,e){var n=this.getAutoCompleteDiv(e),a=this.createGeocodeURL(t,e-1),r={containerClass:"autocomplete",timeout:1e3,deferRequestBy:5,minChars:2,maxHeight:510,noCache:!0,triggerSelectOnValidInput:!1,autoSelectFirst:!1,paramName:"q",dataType:t.dataType,onSearchStart:function(t){var o=new GHInput(t.q).lat;return void 0===o},serviceUrl:function(){return a},transformResult:function(t,o){if(t.suggestions=[],t.hits)for(var e=0;e<t.hits.length;e++){var n=t.hits[e];t.suggestions.push({value:dataToText(n),data:n})}return t},onSearchError:function(t,o,e,n,a){},formatResult:function(t,o){return dataToHtml(t.data,o)},onSelect:function(t){r.onPreSelect(t)},onPreSelect:function(a){var r=t.route.getIndex(e);n.autocomplete().disable();var i=a.data.point;r.setCoord(i.lat,i.lng),r.input=a.value,o(!0)||mapLayer.focus(r,15,e),n.autocomplete().enable()}};n.autocomplete(r)},AutoComplete.prototype.createStub=function(){return{showListForIndex:function(){},hide:function(){}}},module.exports=AutoComplete;
+var formatTools=require("./tools/format.js"),GHInput=require("./graphhopper/GHInput.js"),mapLayer=require("./map.js"),dataToHtml=function(t,e){var o="";t.name&&(o+="<div class='nameseg'>"+formatTools.formatValue(t.name,e)+"</div>");var a="";return t.postcode&&(a=t.postcode),t.city&&(a=formatTools.insComma(a,t.city)),t.country&&(a=formatTools.insComma(a,t.country)),a&&(o+="<div class='cityseg'>"+formatTools.formatValue(a,e)+"</div>"),"highway"===t.osm_key,o+="place"===t.osm_key?"<span class='moreseg'>"+t.osm_value+"</span>":"<span class='moreseg'>"+t.osm_key+"</span>"},dataToText=function(t){var e="";return t.name&&(e+=t.name),t.postcode&&(e=formatTools.insComma(e,t.postcode)),t.city&&e.indexOf(t.city)<0&&(e=formatTools.insComma(e,t.city)),t.country&&e.indexOf(t.country)<0&&(e=formatTools.insComma(e,t.country)),e},AutoComplete=function(t,e){this.host=t,this.key=e,this.dataType="json"};AutoComplete.prototype.createPath=function(t){for(var e in this.api_params){var o=this.api_params[e];if(GHRoute.isArray(o))for(var a in o)t+="&"+encodeURIComponent(e)+"="+encodeURIComponent(o[a]);else t+="&"+encodeURIComponent(e)+"="+encodeURIComponent(o)}return t},AutoComplete.prototype.createGeocodeURL=function(t,e){var o=this.createPath(this.host+"/geocode?limit=6&type="+this.dataType+"&key="+this.key);if(e>=0&&e<t.route.size()){var a=t.route.getIndex(e);o+="&point="+a.lat+","+a.lng}return o},AutoComplete.prototype.getAutoCompleteDiv=function(t){return $("#locationpoints > div.pointDiv").eq(t).find(".pointInput")},AutoComplete.prototype.hide=function(){$(':input[id$="_Input"]').autocomplete().hide()},AutoComplete.prototype.showListForIndex=function(t,e,o){var a=this.getAutoCompleteDiv(o),n=this.createGeocodeURL(t,o-1),r={containerClass:"autocomplete",timeout:1e3,deferRequestBy:5,minChars:2,maxHeight:510,noCache:!0,triggerSelectOnValidInput:!1,autoSelectFirst:!1,paramName:"q",dataType:t.dataType,onSearchStart:function(t){var e=new GHInput(t.q).lat;return void 0===e},serviceUrl:function(){return n},transformResult:function(t,e){if(t.suggestions=[],t.hits)for(var o=0;o<t.hits.length;o++){var a=t.hits[o];t.suggestions.push({value:dataToText(a),data:a})}return t},onSearchError:function(t,e,o,a,n){},formatResult:function(t,e){return dataToHtml(t.data,e)},onSelect:function(t){r.onPreSelect(t)},onPreSelect:function(n){var r=t.route.getIndex(o);a.autocomplete().disable();var i=n.data.point;r.setCoord(i.lat,i.lng),r.input=n.value,e(!0)||mapLayer.focus(r,15,o),a.autocomplete().enable()}};a.autocomplete(r)},AutoComplete.prototype.createStub=function(){return{showListForIndex:function(){},hide:function(){}}},module.exports=AutoComplete;
 
-},{"./graphhopper/GHInput.js":8,"./tools/format.js":23}],6:[function(require,module,exports){
-var osmAttr='&copy; <a href="http://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors',tp="ls";L.Browser.retina&&(tp="lr");var lyrk=L.tileLayer("https://tiles.lyrk.org/"+tp+"/{z}/{x}/{y}?apikey=6e8cfef737a140e2a58c8122aaa26077",{attribution:osmAttr+', <a href="https://geodienste.lyrk.de/">Lyrk</a>',subdomains:["a","b","c"]}),omniscale=L.tileLayer.wms("https://maps.omniscale.net/v1/mapsgraph-bf48cc0b/tile",{layers:"osm",attribution:osmAttr+', &copy; <a href="http://maps.omniscale.com/">Omniscale</a>'}),mapquest=L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://open.mapquest.co.uk" target="_blank">MapQuest</a>',subdomains:["otile1","otile2","otile3","otile4"]}),mapquestAerial=L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://open.mapquest.co.uk" target="_blank">MapQuest</a>',subdomains:["otile1","otile2","otile3","otile4"]}),openMapSurfer=L.tileLayer("http://korona.geog.uni-heidelberg.de/tiles/roads/x={x}&y={y}&z={z}",{attribution:osmAttr+', <a href="http://korona.geog.uni-heidelberg.de/contact.html">GIScience Heidelberg</a>'}),sorbianLang=L.tileLayer("http://map.dgpsonline.eu/osmsb/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.alberding.eu/">&copy; Alberding GmbH, CC-BY-SA</a>'}),thunderTransport=L.tileLayer("https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.thunderforest.com/transport/" target="_blank">Thunderforest Transport</a>',subdomains:["a","b","c"]}),thunderCycle=L.tileLayer("https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.thunderforest.com/opencyclemap/" target="_blank">Thunderforest Cycle</a>',subdomains:["a","b","c"]}),thunderOutdoors=L.tileLayer("https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.thunderforest.com/outdoors/" target="_blank">Thunderforest Outdoors</a>',subdomains:["a","b","c"]}),wrk=L.tileLayer("http://{s}.wanderreitkarte.de/topo/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://wanderreitkarte.de" target="_blank">WanderReitKarte</a>',subdomains:["topo4","topo","topo2","topo3"]}),osm=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:osmAttr}),osmde=L.tileLayer("http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png",{attribution:osmAttr,subdomains:["a","b","c"]}),mapLink='<a href="http://www.esri.com/">Esri</a>',wholink="i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community",esriAerial=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"&copy; "+mapLink+", "+wholink,maxZoom:18}),availableTileLayers={Lyrk:lyrk,Omniscale:omniscale,MapQuest:mapquest,"MapQuest Aerial":mapquestAerial,"Esri Aerial":esriAerial,OpenMapSurfer:openMapSurfer,"TF Transport":thunderTransport,"TF Cycle":thunderCycle,"TF Outdoors":thunderOutdoors,WanderReitKarte:wrk,OpenStreetMap:osm,"OpenStreetMap.de":osmde,"Sorbian Language":sorbianLang};module.exports.getAvailableTileLayers=function(){return availableTileLayers},module.exports.selectLayer=function(t){var e=availableTileLayers[t];return e||(e=availableTileLayers.Omniscale),e};
+},{"./graphhopper/GHInput.js":8,"./map.js":20,"./tools/format.js":24}],6:[function(require,module,exports){
+var osmAttr='&copy; <a href="http://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors',tp="ls";L.Browser.retina&&(tp="lr");var lyrk=L.tileLayer("https://tiles.lyrk.org/"+tp+"/{z}/{x}/{y}?apikey=6e8cfef737a140e2a58c8122aaa26077",{attribution:osmAttr+', <a href="https://geodienste.lyrk.de/">Lyrk</a>',subdomains:["a","b","c"]}),omniscale=L.tileLayer.wms("https://maps.omniscale.net/v1/mapsgraph-bf48cc0b/tile",{layers:"osm",attribution:osmAttr+', &copy; <a href="http://maps.omniscale.com/">Omniscale</a>'}),mapquest=L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://open.mapquest.co.uk" target="_blank">MapQuest</a>',subdomains:["otile1","otile2","otile3","otile4"]}),mapquestAerial=L.tileLayer("http://{s}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://open.mapquest.co.uk" target="_blank">MapQuest</a>',subdomains:["otile1","otile2","otile3","otile4"]}),openMapSurfer=L.tileLayer("http://korona.geog.uni-heidelberg.de/tiles/roads/x={x}&y={y}&z={z}",{attribution:osmAttr+', <a href="http://korona.geog.uni-heidelberg.de/contact.html">GIScience Heidelberg</a>'}),sorbianLang=L.tileLayer("http://map.dgpsonline.eu/osmsb/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.alberding.eu/">&copy; Alberding GmbH, CC-BY-SA</a>'}),thunderTransport=L.tileLayer("https://{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.thunderforest.com/transport/" target="_blank">Thunderforest Transport</a>',subdomains:["a","b","c"]}),thunderCycle=L.tileLayer("https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.thunderforest.com/opencyclemap/" target="_blank">Thunderforest Cycle</a>',subdomains:["a","b","c"]}),thunderOutdoors=L.tileLayer("https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://www.thunderforest.com/outdoors/" target="_blank">Thunderforest Outdoors</a>',subdomains:["a","b","c"]}),wrk=L.tileLayer("http://{s}.wanderreitkarte.de/topo/{z}/{x}/{y}.png",{attribution:osmAttr+', <a href="http://wanderreitkarte.de" target="_blank">WanderReitKarte</a>',subdomains:["topo4","topo","topo2","topo3"]}),osm=L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:osmAttr}),osmde=L.tileLayer("http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png",{attribution:osmAttr,subdomains:["a","b","c"]}),mapLink='<a href="http://www.esri.com/">Esri</a>',wholink="i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community",esriAerial=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"&copy; "+mapLink+", "+wholink,maxZoom:18}),availableTileLayers={Lyrk:lyrk,Omniscale:omniscale,MapQuest:mapquest,"MapQuest Aerial":mapquestAerial,"Esri Aerial":esriAerial,OpenMapSurfer:openMapSurfer,"TF Transport":thunderTransport,"TF Cycle":thunderCycle,"TF Outdoors":thunderOutdoors,WanderReitKarte:wrk,OpenStreetMap:osm,"OpenStreetMap.de":osmde,"Sorbian Language":sorbianLang};module.exports.activeLayerName="Omniscale",module.exports.defaultLayer=omniscale,module.exports.getAvailableTileLayers=function(){return availableTileLayers},module.exports.selectLayer=function(t){var e=availableTileLayers[t];return e||(e=module.exports.defaultLayer),e};
 
 },{}],7:[function(require,module,exports){
 var ensureOneCheckboxSelected=function(){$("#gpx_route").change(function(){$(this).is(":checked")?($("#gpx_track").prop("disabled",!1),$("#gpx_waypoints").prop("disabled",!1)):$("#gpx_track").is(":checked")?$("#gpx_waypoints").is(":checked")||$("#gpx_track").prop("disabled",!0):$("#gpx_waypoints").prop("disabled",!0)}),$("#gpx_track").change(function(){$(this).is(":checked")?($("#gpx_route").prop("disabled",!1),$("#gpx_waypoints").prop("disabled",!1)):$("#gpx_route").is(":checked")?$("#gpx_waypoints").is(":checked")||$("#gpx_route").prop("disabled",!0):$("#gpx_waypoints").prop("disabled",!0)}),$("#gpx_waypoints").change(function(){$(this).is(":checked")?($("#gpx_route").prop("disabled",!1),$("#gpx_track").prop("disabled",!1)):$("#gpx_route").is(":checked")?$("#gpx_track").is(":checked")||$("#gpx_route").prop("disabled",!0):$("#gpx_track").prop("disabled",!0)})};module.exports.addGpxExport=function(e){function p(p,o,i){return e.route.isResolved()&&window.open(e.createGPXURL(p,o,i)),!1}function o(){return p($("#gpx_route").is(":checked"),$("#gpx_track").is(":checked"),$("#gpx_waypoints").is(":checked")),i.dialog("close"),!1}var i;$(function(){i=$("#gpx_dialog").dialog({width:420,height:260,autoOpen:!1,resizable:!1,draggable:!1,buttons:{"Export GPX":o,Cancel:function(){$(this).dialog("close")}}}),ensureOneCheckboxSelected()}),$("#gpxExportButton a").click(function(e){e.preventDefault(),$("#gpx_dialog").dialog("open")})};
@@ -32,7 +32,7 @@ var ensureOneCheckboxSelected=function(){$("#gpx_route").change(function(){$(thi
 function round(t,n){return void 0===n&&(n=1e6),Math.round(t*n)/n}var GHInput=function(t){this.set(t)};GHInput.isObject=function(t){var n=Object.prototype.toString.call(t);return"[object object]"===n.toLowerCase()},GHInput.isString=function(t){var n=Object.prototype.toString.call(t);return"[object string]"===n.toLowerCase()},GHInput.prototype.isResolved=function(){return!isNaN(this.lat)&&!isNaN(this.lng)},GHInput.prototype.setCoord=function(t,n){this.lat=round(t),this.lng=round(n),this.input=this.toString()},GHInput.prototype.setUnresolved=function(){this.lat=void 0,this.lng=void 0},GHInput.prototype.set=function(t){if(this.input=t,GHInput.isObject(t))this.setCoord(t.lat,t.lng);else if(GHInput.isString(t)){var n=t.indexOf(",");n>=0?(this.lat=round(parseFloat(t.substr(0,n))),this.lng=round(parseFloat(t.substr(n+1))),this.isResolved()?this.input=this.toString():this.setUnresolved()):this.setUnresolved()}},GHInput.prototype.toString=function(){return void 0!==this.lat&&void 0!==this.lng?this.lat+","+this.lng:void 0},module.exports=GHInput;
 
 },{}],9:[function(require,module,exports){
-var GHRoute=require("./GHRoute.js"),GHInput=require("./GHInput.js"),graphhopperTools=require("./tools.js");Function.prototype.bind||(Function.prototype.bind=function(t){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var e=Array.prototype.slice.call(arguments,1),o=this,i=function(){},s=function(){return o.apply(this instanceof i&&t?this:t,e.concat(Array.prototype.slice.call(arguments)))};return i.prototype=this.prototype,s.prototype=new i,s});var GHRequest=function(t){this.host=t,this.route=new GHRoute(new GHInput,new GHInput),this.from=this.route.first(),this.to=this.route.last(),this.features={},this.do_zoom=!0,this.dataType="json",this.api_params={locale:"en",vehicle:"car",weighting:"fastest",elevation:!1},this.key="Cmmtvx01R56rdHcQQo7VjI6rgPgxuFLvqI8cR31u",this.route.addListener("route.add",function(t){this.to=this.route.last(),log("Foo just added.")}.bind(this)),this.route.addListener("route.remove",function(t){this.from=this.route.first(),this.to=this.route.last(),log("Foo just removed.")}.bind(this)),this.route.addListener("route.move",function(t){this.from=this.route.first(),this.to=this.route.last(),log("Foo just moved.")}.bind(this)),this.route.addListener("route.reverse",function(t){this.from=this.route.first(),this.to=this.route.last(),log("Foo just reversed.")}.bind(this))};GHRequest.prototype.init=function(t){for(var e in t){var o=t[e];"false"===o?o=!1:"true"===o&&(o=!0),"point"!==e&&"mathRandom"!==e&&"do_zoom"!==e&&"layer"!==e&&(this.api_params[e]=o)}"do_zoom"in t&&(this.do_zoom=t.do_zoom),this.api_params.elevation=!1;var i=this.features[this.api_params.vehicle];if(i&&i.elevation&&("elevation"in t?this.api_params.elevation=t.elevation:this.api_params.elevation=!0),t.q){var s=t.q;t.point||(t.point=[]);var r=s.indexOf("from:"),a=s.indexOf("to:");if(r>=0&&a>=0)a>r?(t.point.push(s.substring(r+5,a).trim()),t.point.push(s.substring(a+3).trim())):(t.point.push(s.substring(a+3,r).trim()),t.point.push(s.substring(r+5).trim()));else for(var n=s.split("p:"),p=0;p<n.length;p++){var u=n[p].trim();0!==u.length&&t.point.push(u)}}},GHRequest.prototype.initVehicle=function(t){this.api_params.vehicle=t;var e=this.features[t];e&&e.elevation?this.api_params.elevation=!0:this.api_params.elevation=!1},GHRequest.prototype.hasElevation=function(){return this.api_params.elevation},GHRequest.prototype.getVehicle=function(){return this.api_params.vehicle},GHRequest.prototype.createGeocodeURL=function(t,e){var o=this.host;t&&(o=t);var i=this.createPath(o+"/geocode?limit=6&type="+this.dataType+"&key="+this.key);if(e>=0&&e<this.route.size()){var s=this.route.getIndex(e);i+="&point="+s.lat+","+s.lng}return i},GHRequest.prototype.createURL=function(){return this.createPath(this.host+"/route?"+this.createPointParams(!1)+"&type="+this.dataType+"&key="+this.key)},GHRequest.prototype.createGPXURL=function(t,e,o){return this.createPath(this.host+"/route?"+this.createPointParams(!1)+"&type=gpx&key="+this.key+"&gpx.route="+t+"&gpx.track="+e+"&gpx.waypoints="+o)},GHRequest.prototype.createHistoryURL=function(){return this.createPath("?"+this.createPointParams(!0))},GHRequest.prototype.createPointParams=function(t){var e,o,i,s="";for(o=0,i=this.route.size();i>o;o++)e=this.route.getIndex(o),o>0&&(s+="&"),s+=t?"point="+encodeURIComponent(e.input):"point="+encodeURIComponent(e.toString());return s},GHRequest.prototype.createPath=function(t){for(var e in this.api_params){var o=this.api_params[e];if(GHRoute.isArray(o))for(var i in o)t+="&"+encodeURIComponent(e)+"="+encodeURIComponent(o[i]);else t+="&"+encodeURIComponent(e)+"="+encodeURIComponent(o)}return t},GHRequest.prototype.doRequest=function(t,e){var o=this;$.ajax({timeout:3e4,url:t,success:function(t){if(t.paths)for(var i=0;i<t.paths.length;i++){var s=t.paths[i];if(s.points_encoded){var r=graphhopperTools.decodePath(s.points,o.hasElevation());s.points={type:"LineString",coordinates:r}}}e(t)},error:function(o){var i,s="API did not respond! ";if(o&&o.responseText&&o.responseText.indexOf("{")>=0)i=JSON.parse(o.responseText);else if(o&&o.statusText&&"OK"!==o.statusText){s+=o.statusText;var r="Error for "+t;i={message:s,hints:[{message:s,details:r}]}}log(s+" "+JSON.stringify(o)),e(i)},type:"GET",dataType:this.dataType,crossDomain:!0})},GHRequest.prototype.getInfo=function(){var t=this.host+"/info?type="+this.dataType+"&key="+this.key;return log(t),$.ajax({url:t,timeout:3e3,type:"GET",dataType:this.dataType,crossDomain:!0})},GHRequest.prototype.setLocale=function(t){t&&(this.api_params.locale=t)},GHRequest.prototype.fetchTranslationMap=function(t){t||(t="");var e=this.host+"/i18n/"+t+"?type="+this.dataType+"&key="+this.key;return log(e),$.ajax({url:e,timeout:3e3,type:"GET",dataType:this.dataType,crossDomain:!0})},module.exports=GHRequest;
+var GHRoute=require("./GHRoute.js"),GHInput=require("./GHInput.js"),graphhopperTools=require("./tools.js");Function.prototype.bind||(Function.prototype.bind=function(t){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var e=Array.prototype.slice.call(arguments,1),o=this,i=function(){},s=function(){return o.apply(this instanceof i&&t?this:t,e.concat(Array.prototype.slice.call(arguments)))};return i.prototype=this.prototype,s.prototype=new i,s});var GHRequest=function(t,e){this.host=t,this.key=e,this.route=new GHRoute(new GHInput,new GHInput),this.from=this.route.first(),this.to=this.route.last(),this.features={},this.do_zoom=!0,this.dataType="json",this.api_params={locale:"en",vehicle:"car",weighting:"fastest",elevation:!1},this.route.addListener("route.add",function(t){this.to=this.route.last(),log("Foo just added.")}.bind(this)),this.route.addListener("route.remove",function(t){this.from=this.route.first(),this.to=this.route.last(),log("Foo just removed.")}.bind(this)),this.route.addListener("route.move",function(t){this.from=this.route.first(),this.to=this.route.last(),log("Foo just moved.")}.bind(this)),this.route.addListener("route.reverse",function(t){this.from=this.route.first(),this.to=this.route.last(),log("Foo just reversed.")}.bind(this))};GHRequest.prototype.init=function(t){for(var e in t){var o=t[e];"false"===o?o=!1:"true"===o&&(o=!0),"point"!==e&&"mathRandom"!==e&&"do_zoom"!==e&&"layer"!==e&&(this.api_params[e]=o)}"do_zoom"in t&&(this.do_zoom=t.do_zoom),this.api_params.elevation=!1;var i=this.features[this.api_params.vehicle];if(i&&i.elevation&&("elevation"in t?this.api_params.elevation=t.elevation:this.api_params.elevation=!0),t.q){var s=t.q;t.point||(t.point=[]);var r=s.indexOf("from:"),a=s.indexOf("to:");if(r>=0&&a>=0)a>r?(t.point.push(s.substring(r+5,a).trim()),t.point.push(s.substring(a+3).trim())):(t.point.push(s.substring(a+3,r).trim()),t.point.push(s.substring(r+5).trim()));else for(var n=s.split("p:"),p=0;p<n.length;p++){var u=n[p].trim();0!==u.length&&t.point.push(u)}}},GHRequest.prototype.initVehicle=function(t){this.api_params.vehicle=t;var e=this.features[t];e&&e.elevation?this.api_params.elevation=!0:this.api_params.elevation=!1},GHRequest.prototype.hasElevation=function(){return this.api_params.elevation},GHRequest.prototype.getVehicle=function(){return this.api_params.vehicle},GHRequest.prototype.createGeocodeURL=function(t,e){var o=this.host;t&&(o=t);var i=this.createPath(o+"/geocode?limit=6&type="+this.dataType+"&key="+this.key);if(e>=0&&e<this.route.size()){var s=this.route.getIndex(e);i+="&point="+s.lat+","+s.lng}return i},GHRequest.prototype.createURL=function(){return this.createPath(this.host+"/route?"+this.createPointParams(!1)+"&type="+this.dataType+"&key="+this.key)},GHRequest.prototype.createGPXURL=function(t,e,o){return this.createPath(this.host+"/route?"+this.createPointParams(!1)+"&type=gpx&key="+this.key+"&gpx.route="+t+"&gpx.track="+e+"&gpx.waypoints="+o)},GHRequest.prototype.createHistoryURL=function(){return this.createPath("?"+this.createPointParams(!0))},GHRequest.prototype.createPointParams=function(t){var e,o,i,s="";for(o=0,i=this.route.size();i>o;o++)e=this.route.getIndex(o),o>0&&(s+="&"),s+=t?"point="+encodeURIComponent(e.input):"point="+encodeURIComponent(e.toString());return s},GHRequest.prototype.createPath=function(t){for(var e in this.api_params){var o=this.api_params[e];if(GHRoute.isArray(o))for(var i in o)t+="&"+encodeURIComponent(e)+"="+encodeURIComponent(o[i]);else t+="&"+encodeURIComponent(e)+"="+encodeURIComponent(o)}return t},GHRequest.prototype.doRequest=function(t,e){var o=this;$.ajax({timeout:3e4,url:t,success:function(t){if(t.paths)for(var i=0;i<t.paths.length;i++){var s=t.paths[i];if(s.points_encoded){var r=graphhopperTools.decodePath(s.points,o.hasElevation());s.points={type:"LineString",coordinates:r}}}e(t)},error:function(o){var i,s="API did not respond! ";if(o&&o.responseText&&o.responseText.indexOf("{")>=0)i=JSON.parse(o.responseText);else if(o&&o.statusText&&"OK"!==o.statusText){s+=o.statusText;var r="Error for "+t;i={message:s,hints:[{message:s,details:r}]}}log(s+" "+JSON.stringify(o)),e(i)},type:"GET",dataType:this.dataType,crossDomain:!0})},GHRequest.prototype.getInfo=function(){var t=this.host+"/info?type="+this.dataType+"&key="+this.key;return log(t),$.ajax({url:t,timeout:3e3,type:"GET",dataType:this.dataType,crossDomain:!0})},GHRequest.prototype.setLocale=function(t){t&&(this.api_params.locale=t)},GHRequest.prototype.fetchTranslationMap=function(t){t||(t="");var e=this.host+"/i18n/"+t+"?type="+this.dataType+"&key="+this.key;return log(e),$.ajax({url:e,timeout:3e3,type:"GET",dataType:this.dataType,crossDomain:!0})},module.exports=GHRequest;
 
 },{"./GHInput.js":8,"./GHRoute.js":10,"./tools.js":11}],10:[function(require,module,exports){
 var GHInput=require("./GHInput.js"),GHroute=function(){var t=Object.create(Array.prototype);return t=Array.apply(t,arguments)||t,GHroute.injectClassMethods(t),t._listeners={},t};GHroute.injectClassMethods=function(t){for(var e in GHroute.prototype)GHroute.prototype.hasOwnProperty(e)&&(t[e]=GHroute.prototype[e]);return t},GHroute.fromArray=function(t){var e=GHroute.apply(null,t);return e},GHroute.isArray=function(t){var e=Object.prototype.toString.call(t);return"[object array]"===e.toLowerCase()},GHroute.prototype={first:function(){return this.getIndex(0)},last:function(){return this.getIndex(this.length-1)},getIndex:function(t){return t=isNaN(t)?0:t,this[t]instanceof GHInput?this[t]:!1},getIndexByCoord:function(t){var e,r,i,n=!1,o=new GHInput(t);for(r=0,i=this.length;i>r;r++)if(e=this[r],e.toString()===o.toString()){n=r;break}return n},getIndexFromCoord:function(t){return this.getIndex(this.getIndexByCoord(t))},size:function(){return this.length},add:function(t,e){if(GHroute.isArray(t)){for(var r=0;r<t.length;r++)Array.prototype.push.call(this,t[r]instanceof GHInput?t[r]:new GHInput(t[r])),void 0!==e?(this.move(-1,e,!0),e++):e=this.lenght-1,this.fire("route.add",{point:this[e],to:e});return this}return Array.prototype.push.call(this,t instanceof GHInput?t:new GHInput(t)),void 0!==e?this.move(-1,e,!0):e=this.lenght-1,this.fire("route.add",{point:this[e],to:e}),this[e]},removeSingle:function(t){var e=!1;return isNaN(t)||t>=this.length||void 0===this[t]?(t instanceof GHInput&&(t=t.toString()),e=this.getIndexByCoord(t)):e=t,e!==!1&&this.remove(e),this},remove:function(t,e){var r=e||1;return Array.prototype.splice.call(this,t,r),1===this.length&&Array.prototype.push.call(this,new GHInput),this.fire("route.remove",{from:t,to:r}),this},addAll:function(){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this},set:function(t,e,r){if(t instanceof GHInput)this[e]=t;else{if(!(this[e]instanceof GHInput))return r?this.add(t,e):!1;this[e].set(t)}return this.fire("route.set",{point:this[e],to:e}),this[e]},move:function(t,e,r){for(;0>t;)t+=this.length;for(;0>e;)e+=this.length;if(e>=this.length)for(var i=e-this.length;i--+1;)Array.prototype.push.call(this,void 0);return Array.prototype.splice.call(this,e,0,Array.prototype.splice.call(this,t,1)[0]),r||this.fire("route.move",{old_index:t,new_index:e}),this},reverse:function(){return Array.prototype.reverse.call(this),this.fire("route.reverse",{}),this},isResolved:function(){for(var t=0,e=this.length;e>t;t++){var r=this[t];if(!r.isResolved())return!1}return!0},addListener:function(t,e){return"undefined"==typeof this._listeners[t]&&(this._listeners[t]=[]),this._listeners[t].push(e),this},fire:function(t,e){if("string"==typeof t&&(t={type:t}),"object"==typeof e)for(var r in e)t[r]=e[r];if(t.route||(t.route=this),!t.type)throw new Error("Event object missing 'type' property.");if(this._listeners[t.type]instanceof Array)for(var i=this._listeners[t.type],n=0,o=i.length;o>n;n++)i[n].call(this,t)},removeListener:function(t,e){if(this._listeners[t]instanceof Array)for(var r=this._listeners[t],i=0,n=r.length;n>i;i++)if(r[i]===e){r.splice(i,1);break}}},module.exports=GHroute;
@@ -41,9 +41,9 @@ var GHInput=require("./GHInput.js"),GHroute=function(){var t=Object.create(Array
 var decodePath=function(e,d){for(var o=e.length,r=0,a=[],h=0,t=0,c=0;o>r;){var l,v=0,i=0;do l=e.charCodeAt(r++)-63,i|=(31&l)<<v,v+=5;while(l>=32);var u=1&i?~(i>>1):i>>1;h+=u,v=0,i=0;do l=e.charCodeAt(r++)-63,i|=(31&l)<<v,v+=5;while(l>=32);var n=1&i?~(i>>1):i>>1;if(t+=n,d){v=0,i=0;do l=e.charCodeAt(r++)-63,i|=(31&l)<<v,v+=5;while(l>=32);var s=1&i?~(i>>1):i>>1;c+=s,a.push([1e-5*t,1e-5*h,c/100])}else a.push([1e-5*t,1e-5*h])}return a};module.exports.decodePath=decodePath;
 
 },{}],12:[function(require,module,exports){
-function addInstruction(t,e,n,a,r){var o=n.sign;o=0===a?"marker-icon-green":messages.getSignName(o);var i=n.text;n.annotation_text&&(i=i?i+", "+n.annotation_text:n.annotation_text);var p=$("<tr class='instruction'/>");if("continue"!==o){var s="<img class='pic' style='vertical-align: middle' src='"+window.location.pathname+"img/"+o+".png'/>";p.append("<td class='instr_pic'>"+s+"</td>")}else p.append("<td class='instr_pic'/>");var d=$("<td class='instr_title'>");d.text(i),p.append(d);var c=n.distance;c>0&&p.append("<td class='instr_distance'><span>"+translate.createDistanceString(c)+"<br/>"+translate.createTimeString(n.time)+"</span></td>"),r&&p.click(function(){routeSegmentPopup&&t.removeLayerFromMap(routeSegmentPopup),routeSegmentPopup=L.popup().setLatLng([r[1],r[0]]).setContent(i).openOn(t.getMap())}),e.append(p)}var translate=require("./translate.js"),messages=require("./messages.js"),routeSegmentPopup=null;module.exports.addInstructions=function(t,e,n,a){for(var r=$("<table id='instructions'>"),o=e.instructions.length>100,i=Math.min(e.instructions.length,100),p=0;i>p;p++){var s=e.instructions[p],d=e.points.coordinates[s.interval[0]];addInstruction(t,r,s,p,d)}if($("#info").append(r),o){var c=$("<button id='moreButton'>"+tr("moreButton")+"..</button>");c.click(function(){c.remove();for(var n=i;n<e.instructions.length;n++){var a=e.instructions[n],o=e.points.coordinates[a.interval[0]];addInstruction(t,r,a,n,o)}}),r.append(c)}var l=$("<div id='routeDetails'/>");l.hide();var g=$("<button id='expandDetails'>+</button>");g.click(function(){l.toggle()}),$("#info").append(g);var m="points: "+e.points.coordinates.length;l.append("<span>"+m+"</span>");var u=$("#export-link a");u.attr("href",n);var f=$("<br/><a>view on OSM</a>"),v="bicycle";"FOOT"===a.getVehicle().toUpperCase()&&(v="foot"),f.attr("href","http://www.openstreetmap.org/directions?engine=graphhopper_"+v+"&route="+encodeURIComponent(a.from.lat+","+a.from.lng+";"+a.to.lat+","+a.to.lng)),l.append(f);var h=$("<a>OSRM</a>");h.attr("href","http://map.project-osrm.org/?loc="+a.from+"&loc="+a.to),l.append("<br/><span>Compare with: </span>"),l.append(h);var b=$("<a>Google</a> "),w="",x="";"FOOT"===a.getVehicle().toUpperCase()?(w="&dirflg=w",x="&mode=W"):(a.getVehicle().toUpperCase().indexOf("BIKE")>=0||"MTB"===a.getVehicle().toUpperCase())&&(w="&dirflg=b"),b.attr("href","https://maps.google.com/?saddr="+a.from+"&daddr="+a.to+w),l.append(b);var S=$("<a>Bing</a> ");S.attr("href","https://www.bing.com/maps/default.aspx?rtp=adr."+a.from+"~adr."+a.to+x),l.append(S),metaVersionInfo&&l.append(metaVersionInfo),$("#info").append(l)};
+function addInstruction(t,e,n,a,r){var o=n.sign;o=0===a?"marker-icon-green":messages.getSignName(o);var i=n.text;n.annotation_text&&(i=i?i+", "+n.annotation_text:n.annotation_text);var s=$("<tr class='instruction'/>");if("continue"!==o){var p="<img class='pic' style='vertical-align: middle' src='"+window.location.pathname+"img/"+o+".png'/>";s.append("<td class='instr_pic'>"+p+"</td>")}else s.append("<td class='instr_pic'/>");var d=$("<td class='instr_title'>");d.text(i),s.append(d);var c=n.distance;c>0&&s.append("<td class='instr_distance'><span>"+translate.createDistanceString(c)+"<br/>"+translate.createTimeString(n.time)+"</span></td>"),r&&s.click(function(){routeSegmentPopup&&t.removeLayerFromMap(routeSegmentPopup),routeSegmentPopup=L.popup().setLatLng([r[1],r[0]]).setContent(i).openOn(t.getMap())}),e.append(s)}var translate=require("./translate.js"),messages=require("./messages.js"),routeSegmentPopup=null;module.exports.addInstructions=function(t,e,n,a){for(var r=$("<table id='instructions'>"),o=e.instructions.length>100,i=Math.min(e.instructions.length,100),s=0;i>s;s++){var p=e.instructions[s],d=e.points.coordinates[p.interval[0]];addInstruction(t,r,p,s,d)}if($("#info").append(r),o){var c=$("<button id='moreButton'>"+translate.tr("moreButton")+"..</button>");c.click(function(){c.remove();for(var n=i;n<e.instructions.length;n++){var a=e.instructions[n],o=e.points.coordinates[a.interval[0]];addInstruction(t,r,a,n,o)}}),r.append(c)}var l=$("<div id='routeDetails'/>");l.hide();var g=$("<button id='expandDetails'>+</button>");g.click(function(){l.toggle()}),$("#info").append(g);var m="points: "+e.points.coordinates.length;l.append("<span>"+m+"</span>");var u=$("#export-link a");u.attr("href",n);var f=$("<br/><a>view on OSM</a>"),v="bicycle";"FOOT"===a.getVehicle().toUpperCase()&&(v="foot"),f.attr("href","http://www.openstreetmap.org/directions?engine=graphhopper_"+v+"&route="+encodeURIComponent(a.from.lat+","+a.from.lng+";"+a.to.lat+","+a.to.lng)),l.append(f);var h=$("<a>OSRM</a>");h.attr("href","http://map.project-osrm.org/?loc="+a.from+"&loc="+a.to),l.append("<br/><span>Compare with: </span>"),l.append(h);var b=$("<a>Google</a> "),w="",x="";"FOOT"===a.getVehicle().toUpperCase()?(w="&dirflg=w",x="&mode=W"):(a.getVehicle().toUpperCase().indexOf("BIKE")>=0||"MTB"===a.getVehicle().toUpperCase())&&(w="&dirflg=b"),b.attr("href","https://maps.google.com/?saddr="+a.from+"&daddr="+a.to+w),l.append(b);var S=$("<a>Bing</a> ");S.attr("href","https://www.bing.com/maps/default.aspx?rtp=adr."+a.from+"~adr."+a.to+x),l.append(S),metaVersionInfo&&l.append(metaVersionInfo),$("#info").append(l)};
 
-},{"./messages.js":21,"./translate.js":27}],13:[function(require,module,exports){
+},{"./messages.js":21,"./translate.js":28}],13:[function(require,module,exports){
 L.Control.Elevation=L.Control.extend({options:{position:"topright",theme:"lime-theme",width:600,height:175,margins:{top:10,right:20,bottom:30,left:60},useHeightIndicator:!0,interpolation:"linear",hoverNumber:{decimalsX:3,decimalsY:0,formatter:void 0},xTicks:void 0,yTicks:void 0,collapsed:!1,yAxisMin:void 0,yAxisMax:void 0,forceAxisBounds:!1},onRemove:function(){this._container=null},onAdd:function(t){this._map=t;var i=this.options,e=i.margins;i.xTicks=i.xTicks||Math.round(this._width()/75),i.yTicks=i.yTicks||Math.round(this._height()/30),i.hoverNumber.formatter=i.hoverNumber.formatter||this._formatter,d3.select("body").classed(i.theme,!0);var a=this._x=d3.scale.linear().range([0,this._width()]),s=this._y=d3.scale.linear().range([this._height(),0]),n=(this._area=d3.svg.area().interpolate(i.interpolation).x(function(t){return a(t.dist)}).y0(this._height()).y1(function(t){return s(t.altitude)}),this._container=L.DomUtil.create("div","elevation"));this._initToggle();var r=d3.select(n);r.attr("width",i.width);var o=r.append("svg");o.attr("width",i.width).attr("class","background").attr("height",i.height).append("g").attr("transform","translate("+e.left+","+e.top+")");var h=d3.svg.line();h=h.x(function(){return d3.mouse(o.select("g"))[0]}).y(function(){return this._height()});var d=d3.select(this._container).select("svg").select("g");this._areapath=d.append("path").attr("class","area");var l=this._background=d.append("rect").attr("width",this._width()).attr("height",this._height()).style("fill","none").style("stroke","none").style("pointer-events","all");L.Browser.touch?(l.on("touchmove.drag",this._dragHandler.bind(this)).on("touchstart.drag",this._dragStartHandler.bind(this)).on("touchstart.focus",this._mousemoveHandler.bind(this)),L.DomEvent.on(this._container,"touchend",this._dragEndHandler,this)):(l.on("mousemove.focus",this._mousemoveHandler.bind(this)).on("mouseout.focus",this._mouseoutHandler.bind(this)).on("mousedown.drag",this._dragStartHandler.bind(this)).on("mousemove.drag",this._dragHandler.bind(this)),L.DomEvent.on(this._container,"mouseup",this._dragEndHandler,this)),this._xaxisgraphicnode=d.append("g"),this._yaxisgraphicnode=d.append("g"),this._appendXaxis(this._xaxisgraphicnode),this._appendYaxis(this._yaxisgraphicnode);var c=this._focusG=d.append("g");return this._mousefocus=c.append("svg:line").attr("class","mouse-focus-line").attr("x2","0").attr("y2","0").attr("x1","0").attr("y1","0"),this._focuslabelX=c.append("svg:text").style("pointer-events","none").attr("class","mouse-focus-label-x"),this._focuslabelY=c.append("svg:text").style("pointer-events","none").attr("class","mouse-focus-label-y"),this._data&&this._applyData(),n},_dragHandler:function(){d3.event.preventDefault(),d3.event.stopPropagation(),this._gotDragged=!0,this._drawDragRectangle()},_drawDragRectangle:function(){if(this._dragStartCoords){var t=this._dragCurrentCoords=d3.mouse(this._background.node()),i=Math.min(this._dragStartCoords[0],t[0]),e=Math.max(this._dragStartCoords[0],t[0]);if(this._dragRectangle||this._dragRectangleG)this._dragRectangle.attr("width",e-i).attr("x",i);else{var a=d3.select(this._container).select("svg").select("g");this._dragRectangleG=a.append("g"),this._dragRectangle=this._dragRectangleG.append("rect").attr("width",e-i).attr("height",this._height()).attr("x",i).attr("class","mouse-drag").style("pointer-events","none")}}},_resetDrag:function(){this._dragRectangleG&&(this._dragRectangleG.remove(),this._dragRectangleG=null,this._dragRectangle=null,this._hidePositionMarker(),this._map.fitBounds(this._fullExtent))},_dragEndHandler:function(){if(!this._dragStartCoords||!this._gotDragged)return this._dragStartCoords=null,this._gotDragged=!1,void this._resetDrag();this._hidePositionMarker();var t=this._findItemForX(this._dragStartCoords[0]),i=this._findItemForX(this._dragCurrentCoords[0]);this._fitSection(t,i),this._dragStartCoords=null,this._gotDragged=!1},_dragStartHandler:function(){d3.event.preventDefault(),d3.event.stopPropagation(),this._gotDragged=!1,this._dragStartCoords=d3.mouse(this._background.node())},_findItemForX:function(t){var i=d3.bisector(function(t){return t.dist}).left,e=this._x.invert(t);return i(this._data,e)},_fitSection:function(t,i){var e=Math.min(t,i),a=Math.max(t,i),s=this._calculateFullExtent(this._data.slice(e,a));this._map.fitBounds(s)},_initToggle:function(){var t=this._container;if(t.setAttribute("aria-haspopup",!0),L.Browser.touch?L.DomEvent.on(t,"click",L.DomEvent.stopPropagation):L.DomEvent.disableClickPropagation(t),this.options.collapsed){this._collapse(),L.Browser.android||L.DomEvent.on(t,"mouseover",this._expand,this).on(t,"mouseout",this._collapse,this);var i=this._button=L.DomUtil.create("a","elevation-toggle",t);i.href="#",i.title="Elevation",L.Browser.touch?L.DomEvent.on(i,"click",L.DomEvent.stop).on(i,"click",this._expand,this):L.DomEvent.on(i,"focus",this._expand,this),this._map.on("click",this._collapse,this)}},_expand:function(){this._container.className=this._container.className.replace(" elevation-collapsed","")},_collapse:function(){L.DomUtil.addClass(this._container,"elevation-collapsed")},_width:function(){var t=this.options;return t.width-t.margins.left-t.margins.right},_height:function(){var t=this.options;return t.height-t.margins.top-t.margins.bottom},_formatter:function(t,i,e){var a;a=0===i?Math.round(t)+"":L.Util.formatNum(t,i)+"";var s=a.split(".");if(s[1]){for(var n=i-s[1].length;n>0;n--)s[1]+="0";a=s.join(e||".")}return a},_appendYaxis:function(t){t.attr("class","y axis").call(d3.svg.axis().scale(this._y).ticks(this.options.yTicks).orient("left")).append("text").attr("x",-36).attr("y",3).style("text-anchor","end").text("m")},_appendXaxis:function(t){t.attr("class","x axis").attr("transform","translate(0,"+this._height()+")").call(d3.svg.axis().scale(this._x).ticks(this.options.xTicks).orient("bottom")).append("text").attr("x",this._width()+20).attr("y",15).style("text-anchor","end").text("km")},_updateAxis:function(){this._xaxisgraphicnode.selectAll("g").remove(),this._xaxisgraphicnode.selectAll("path").remove(),this._xaxisgraphicnode.selectAll("text").remove(),this._yaxisgraphicnode.selectAll("g").remove(),this._yaxisgraphicnode.selectAll("path").remove(),this._yaxisgraphicnode.selectAll("text").remove(),this._appendXaxis(this._xaxisgraphicnode),this._appendYaxis(this._yaxisgraphicnode)},_mouseoutHandler:function(){this._hidePositionMarker()},_hidePositionMarker:function(){this._marker&&(this._map.removeLayer(this._marker),this._marker=null),this._mouseHeightFocus&&(this._mouseHeightFocus.style("visibility","hidden"),this._mouseHeightFocusLabel.style("visibility","hidden")),this._pointG&&this._pointG.style("visibility","hidden"),this._focusG.style("visibility","hidden")},_mousemoveHandler:function(){if(this._data&&0!==this._data.length){var t=d3.mouse(this._background.node()),i=this.options;this._focusG.style("visibility","visible"),this._mousefocus.attr("x1",t[0]).attr("y1",0).attr("x2",t[0]).attr("y2",this._height()).classed("hidden",!1);var e=(d3.bisector(function(t){return t.dist}).left,this._data[this._findItemForX(t[0])]),a=e.altitude,s=e.dist,n=e.latlng,r=i.hoverNumber.formatter(a,i.hoverNumber.decimalsY),o=i.hoverNumber.formatter(s,i.hoverNumber.decimalsX);this._focuslabelX.attr("x",t[0]).text(r+" m"),this._focuslabelY.attr("y",this._height()-5).attr("x",t[0]).text(o+" km");var h=this._map.latLngToLayerPoint(n);if(i.useHeightIndicator){if(!this._mouseHeightFocus){var d=d3.select(".leaflet-overlay-pane svg").append("g");this._mouseHeightFocus=d.append("svg:line").attr("class","height-focus line").attr("x2","0").attr("y2","0").attr("x1","0").attr("y1","0");var l=this._pointG=d.append("g");l.append("svg:circle").attr("r",6).attr("cx",0).attr("cy",0).attr("class","height-focus circle-lower"),this._mouseHeightFocusLabel=d.append("svg:text").attr("class","height-focus-label").style("pointer-events","none")}var c=this._height()/this._maxElevation*a,_=h.y-c;this._mouseHeightFocus.attr("x1",h.x).attr("x2",h.x).attr("y1",h.y).attr("y2",_).style("visibility","visible"),this._pointG.attr("transform","translate("+h.x+","+h.y+")").style("visibility","visible"),this._mouseHeightFocusLabel.attr("x",h.x).attr("y",_).text(a+" m").style("visibility","visible")}else this._marker?this._marker.setLatLng(n):this._marker=new L.Marker(n).addTo(this._map)}},_addGeoJSONData:function(t){if(t){for(var i=this._data||[],e=this._dist||0,a=this._maxElevation||0,s=0;s<t.length;s++){var n=new L.LatLng(t[s][1],t[s][0]),r=new L.LatLng(t[s?s-1:0][1],t[s?s-1:0][0]),o=n.distanceTo(r);e+=Math.round(o/1e3*1e5)/1e5,a=a<t[s][2]?t[s][2]:a,i.push({dist:e,altitude:t[s][2],x:t[s][0],y:t[s][1],latlng:n})}this._dist=e,this._data=i,this._maxElevation=a}},_addGPXdata:function(t){if(t){for(var i=this._data||[],e=this._dist||0,a=this._maxElevation||0,s=0;s<t.length;s++){var n=t[s],r=t[s?s-1:0],o=n.distanceTo(r);e+=Math.round(o/1e3*1e5)/1e5,a=a<n.meta.ele?n.meta.ele:a,i.push({dist:e,altitude:n.meta.ele,x:n.lng,y:n.lat,latlng:n})}this._dist=e,this._data=i,this._maxElevation=a}},_addData:function(t){var i,e=t&&t.geometry&&t.geometry;if(e)switch(e.type){case"LineString":this._addGeoJSONData(e.coordinates);break;case"MultiLineString":for(i=0;i<e.coordinates.length;i++)this._addGeoJSONData(e.coordinates[i]);break;default:throw new Error("Invalid GeoJSON object.")}var a=t&&"FeatureCollection"===t.type;if(a)for(i=0;i<t.features.length;i++)this._addData(t.features[i]);t&&t._latlngs&&this._addGPXdata(t._latlngs)},_calculateFullExtent:function(t){if(!t||t.length<1)throw new Error("no data in parameters");var i=new L.latLngBounds(t[0].latlng,t[0].latlng);return t.forEach(function(t){i.extend(t.latlng)}),i},addData:function(t){this._addData(t),this._container&&this._applyData()},_applyData:function(){var t=d3.extent(this._data,function(t){return t.dist}),i=d3.extent(this._data,function(t){return t.altitude}),e=this.options;void 0!==e.yAxisMin&&(e.yAxisMin<i[0]||e.forceAxisBounds)&&(i[0]=e.yAxisMin),void 0!==e.yAxisMax&&(e.yAxisMax>i[1]||e.forceAxisBounds)&&(i[1]=e.yAxisMax),this._x.domain(t),this._y.domain(i),this._areapath.datum(this._data).attr("d",this._area),this._updateAxis(),this._fullExtent=this._calculateFullExtent(this._data)},_clearData:function(){this._data=null,this._dist=null,this._maxElevation=null},clear:function(){this._clearData(),this._areapath&&(this._areapath.attr("d","M0 0"),this._x.domain([0,1]),this._y.domain([0,1]),this._updateAxis())}}),L.control.elevation=function(t){return new L.Control.Elevation(t)};
 
 },{}],14:[function(require,module,exports){
@@ -70,33 +70,36 @@ L.NumberedDivIcon=L.Icon.extend({options:{iconUrl:"./img/marker_hole.png",number
 
 },{}],19:[function(require,module,exports){
 (function (global){
-function initFromParams(e,t){ghRequest.init(e);var o,r=0;if(e.point)for(var a=0;a<e.point.length;a++)""!==e.point[a]&&(r++,o=a);var n=e.point&&r>=2;n?resolveCoords(e.point,t):e.point&&1===r&&(ghRequest.route.set(e.point[o],o,!0),resolveIndex(o).done(function(){mapLayer.focus(ghRequest.route.getIndex(o),15,o)}))}function resolveCoords(e,t){for(var o=0,r=e.length;r>o;o++){var a=e[o],n=ghRequest.route.getIndex(o);n&&a===n.input&&n.isResolved()||ghRequest.route.set(a,o,!0)}checkInput(),ghRequest.route.isResolved()?(resolveAll(),routeLatLng(ghRequest,t)):$.when.apply($,resolveAll()).done(function(){routeLatLng(ghRequest,t)})}function getToFrom(e){return 0===e?FROM:e===ghRequest.route.size()-1?TO:-1}function checkInput(){var e=$("#pointTemplate").html(),t=ghRequest.route.size();$("#locationpoints > div.pointDiv").length>t&&$("#locationpoints > div.pointDiv:gt("+(t-1)+")").remove(),$("#locationpoints .pointDelete").off();for(var o=function(){var e=$(this).parent().data("index");ghRequest.route.removeSingle(e),mapLayer.clearLayers(),routeLatLng(ghRequest,!1)},r=0;t>r;r++){var a=$("#locationpoints > div.pointDiv").eq(r);0===a.length&&($("#locationpoints > div.pointAdd").before(translate.nanoTemplate(e,{id:r})),a=$("#locationpoints > div.pointDiv").eq(r));var n=getToFrom(r);if(a.data("index",r),a.find(".pointFlag").attr("src",n===FROM?"img/marker-small-green.png":n===TO?"img/marker-small-red.png":"img/marker-small-blue.png"),t>2?a.find(".pointDelete").click(o).show():a.find(".pointDelete").hide(),autocomplete.showListForIndex(ghRequest,routeIfAllResolved,r),translate.isI18nIsInitialized()){var s=a.find(".pointInput");0===r?$(s).attr("placeholder",translate.tr("fromHint")):r===t-1?$(s).attr("placeholder",translate.tr("toHint")):$(s).attr("placeholder",translate.tr("viaHint"))}}mapLayer.adjustMapSize()}function setToStart(e){var t=e.target.getLatLng(),o=ghRequest.route.getIndexByCoord(t);ghRequest.route.move(o,0),routeIfAllResolved()}function setToEnd(e){var t=e.target.getLatLng(),o=ghRequest.route.getIndexByCoord(t);ghRequest.route.move(o,-1),routeIfAllResolved()}function setStartCoord(e){ghRequest.route.set(e.latlng,0),resolveFrom(),routeIfAllResolved()}function setIntermediateCoord(e){var t=ghRequest.route.size()-1;ghRequest.route.add(e.latlng,t),resolveIndex(t),routeIfAllResolved()}function deleteCoord(e){var t=e.target.getLatLng();ghRequest.route.removeSingle(t),mapLayer.clearLayers(),routeLatLng(ghRequest,!1)}function setEndCoord(e){var t=ghRequest.route.size()-1;ghRequest.route.set(e.latlng,t),resolveTo(),routeIfAllResolved()}function routeIfAllResolved(e){return ghRequest.route.isResolved()?(routeLatLng(ghRequest,e),!0):!1}function setFlag(e,t){if(e.lat){var o=getToFrom(t),r=mapLayer.createMarker(t,e,setToEnd,setToStart,deleteCoord,ghRequest);r._openPopup=r.openPopup,r.openPopup=function(){var e,t=this.getLatLng(),o=ghRequest.route.getIndexFromCoord(t);if(o.resolvedList&&o.resolvedList[0]&&o.resolvedList[0].locationDetails){var r=o.resolvedList[0].locationDetails;e=format.formatAddress(r),this._popup.setContent(e).update()}this._openPopup()};var a={text:"Set as Start",callback:setToStart,index:1,state:2};-1===o&&r.options.contextmenuItems.push(a),r.on("dragend",function(e){mapLayer.clearLayers();var o=e.target.getLatLng();autocomplete.hide(),ghRequest.route.getIndex(t).setCoord(o.lat,o.lng),resolveIndex(t),ghRequest.do_zoom=!1,routeLatLng(ghRequest,!1)})}}function resolveFrom(){return resolveIndex(0)}function resolveTo(){return resolveIndex(ghRequest.route.size()-1)}function resolveIndex(e){return setFlag(ghRequest.route.getIndex(e),e),0===e?ghRequest.to.isResolved()?mapLayer.setDisabledForMapsContextMenu("start",!1):mapLayer.setDisabledForMapsContextMenu("start",!0):e===ghRequest.route.size()-1&&(ghRequest.from.isResolved()?mapLayer.setDisabledForMapsContextMenu("end",!1):mapLayer.setDisabledForMapsContextMenu("end",!0)),nominatim.resolve(e,ghRequest.route.getIndex(e))}function resolveAll(){for(var e=[],t=0,o=ghRequest.route.size();o>t;t++)e[t]=resolveIndex(t);return e}function flagAll(){for(var e=0,t=ghRequest.route.size();t>e;e++)setFlag(ghRequest.route.getIndex(e),e)}function routeLatLng(e,t){var o=e.do_zoom;e.do_zoom=!0;var r=e.createHistoryURL()+"&layer="+activeLayer;if(!t&&History.enabled){var a=urlTools.parseUrl(r);return log(a),a.do_zoom=o,a.mathRandom=Math.random(),void History.pushState(a,messages.browserTitle,r)}$("#info").empty(),$("#info").show();var n=$("<div/>");$("#info").append(n),mapLayer.clearElevation(),mapLayer.clearLayers(),flagAll(),mapLayer.setDisabledForMapsContextMenu("intermediate",!1),$("#vehicles button").removeClass("selectvehicle"),$("button#"+e.getVehicle().toLowerCase()).addClass("selectvehicle");var s=e.createURL();n.html('<img src="img/indicator.gif"/> Search Route ...'),e.doRequest(s,function(t){if(n.html(""),t.message){var a=t.message;if(log(a),t.hints)for(var s=0;s<t.hints.length;s++)n.append("<div class='error'>"+t.hints[s].message+"</div>");else n.append("<div class='error'>"+a+"</div>")}else{var i=t.paths[0],l={type:"Feature",geometry:i.points};if(e.hasElevation()&&mapLayer.addElevation(l),mapLayer.addDataToRoutingLayer(l),i.bbox&&o){var u=i.bbox[0],d=i.bbox[1],p=i.bbox[2],c=i.bbox[3],g=new L.LatLngBounds(new L.LatLng(d,u),new L.LatLng(c,p));mapLayer.fitMapToBounds(g)}var h=translate.createTimeString(i.time),m=translate.createDistanceString(i.distance),v="";if(e.hasElevation()&&(v=translate.createEleInfoString(i.ascend,i.descend)),n.append(translate.tr("routeInfo",[m,h])),n.append(v),$(".defaulting").each(function(e,t){$(t).css("color","black")}),i.instructions){var f=require("./instructions.js");f.addInstructions(mapLayer,i,r,e)}}})}function mySubmit(){var e,t,o,r=[],a=!0,n=$("#locationpoints > div.pointDiv > input.pointInput"),s=n.size();return $.each(n,function(n){0===n?(e=$(this).val(),e!==translate.tr("fromHint")&&""!==e?r.push(e):a=!1):n===s-1?(t=$(this).val(),t!==translate.tr("toHint")&&""!==t?r.push(t):a=!1):(o=$(this).val(),o!==translate.tr("viaHint")&&""!==o?r.push(o):a=!1)}),a&&e!==translate.tr("fromHint")?t===translate.tr("toHint")?(ghRequest.from.setStr(e),void $.when(resolveFrom()).done(function(){mapLayer.focus(ghRequest.from,null,0)})):void(a&&resolveCoords(r)):void 0}function isProduction(){return host.indexOf("graphhopper.com")>0}var host;host||(host=""===location.port?location.protocol+"//"+location.hostname:location.protocol+"//"+location.hostname+":"+location.port),global.d3=require("d3");var L=require("leaflet");require("leaflet-loading"),require("./lib/leaflet.contextmenu.js"),require("./lib/Leaflet.Elevation-0.0.2.min.js"),require("./lib/leaflet_numbered_markers.js"),global.jQuery=require("jquery"),global.$=global.jQuery,require("./lib/jquery-ui-custom-1.11.4.min.js"),require("./lib/jquery.history.js"),require("./lib/jquery.autocomplete.js");var GHRequest=require("./graphhopper/GHRequest.js"),AutoComplete=require("./autocomplete.js"),autocomplete=AutoComplete.prototype.createStub(),mapLayer=require("./map.js"),nominatim=require("./nominatim.js"),gpxExport=require("./gpxexport.js"),messages=require("./messages.js"),translate=require("./translate.js"),format=require("./tools/format.js"),urlTools=require("./tools/url.js"),vehicle=require("./tools/vehicle.js"),debug=!1,ghRequest=new GHRequest(host),bounds={},activeLayer="",metaVersionInfo;global.window&&(window.log=function(){log.history=log.history||[],log.history.push(arguments),this.console&&debug&&console.log(Array.prototype.slice.call(arguments))}),$(document).ready(function(e){jQuery.support.cors=!0,gpxExport.addGpxExport(ghRequest),isProduction()&&$("#hosting").show();var t=window.History;t.enabled&&t.Adapter.bind(window,"statechange",function(){var e=t.getState();log(e),initFromParams(e.data,!0)}),$("#locationform").submit(function(e){e.preventDefault(),mySubmit()});var o=urlTools.parseUrlWithHisto();$.when(ghRequest.fetchTranslationMap(o.locale),ghRequest.getInfo()).then(function(e,t){function r(e,t){var o=$("<button class='vehicle-btn' title='"+translate.tr(e)+"'/>");return t&&o.hide(),o.attr("id",e),o.html("<img src='img/"+e+".png' alt='"+translate.tr(e)+"'></img>"),o.click(function(){ghRequest.initVehicle(e),resolveAll(),routeLatLng(ghRequest)}),o}var a=e[0];ghRequest.setLocale(a.locale),translate.init(a);var n=t[0],s=n.bbox;bounds.initialized=!0,bounds.minLon=s[0],bounds.minLat=s[1],bounds.maxLon=s[2],bounds.maxLat=s[3],nominatim.setBounds(bounds);var i=$("#vehicles");if(n.features){ghRequest.features=n.features;var l={car:1,foot:2,bike:3,motorcycle:1e4},u=o.vehicle&&(!l[o.vehicle]||l[o.vehicle]>3),d=vehicle.getSortedVehicleKeys(n.features,l);d.length>0&&ghRequest.initVehicle(d[0]);var p=[];for(var c in d){var g=r(d[c].toLowerCase(),!u&&c>2);i.append(g),c>2&&p.push(g)}if(!u&&d.length>3){var h=$("<a id='more-vehicle-btn'> ...</a>").click(function(){h.hide();for(var e in p)p[e].show()});i.append($("<a class='vehicle-info-link' href='https://graphhopper.com/api/1/docs/supported-vehicle-profiles/'>?</a>")),i.append(h)}}metaVersionInfo=messages.extractMetaVersionInfo(n),mapLayer.initMap(bounds,setStartCoord,setIntermediateCoord,setEndCoord,o.layer),initFromParams(o,!0)},function(e){log(e),$("#error").html('GraphHopper API offline? <a href="http://graphhopper.com/maps">Refresh</a><br/>Status: '+e.statusText+"<br/>"+host),bounds={minLon:-180,minLat:-90,maxLon:180,maxLat:90},nominatim.setBounds(bounds),mapLayer.initMap(bounds,setStartCoord,setIntermediateCoord,setEndCoord)}),$(window).resize(function(){mapLayer.adjustMapSize()}),$("#locationpoints").sortable({items:".pointDiv",cursor:"n-resize",containment:"parent",handle:".pointFlag",update:function(e,t){var o=$(t.item[0]).data("index");sortable_items=$("#locationpoints > div.pointDiv"),$(sortable_items).each(function(e){var t=$(this).data("index");return o===t?(ghRequest.route.move(t,e),routeIfAllResolved()||checkInput(),!1):void 0})}}),$("#locationpoints > div.pointAdd").click(function(){ghRequest.route.add(new GHInput),checkInput()}),checkInput()});var FROM="from",TO="to";
+function initFromParams(e,t){ghRequest.init(e);var o,r=0;if(e.point)for(var n=0;n<e.point.length;n++)""!==e.point[n]&&(r++,o=n);var a=e.point&&r>=2;a?resolveCoords(e.point,t):e.point&&1===r&&(ghRequest.route.set(e.point[o],o,!0),resolveIndex(o).done(function(){mapLayer.focus(ghRequest.route.getIndex(o),15,o)}))}function resolveCoords(e,t){for(var o=0,r=e.length;r>o;o++){var n=e[o],a=ghRequest.route.getIndex(o);a&&n===a.input&&a.isResolved()||ghRequest.route.set(n,o,!0)}checkInput(),ghRequest.route.isResolved()?(resolveAll(),routeLatLng(ghRequest,t)):$.when.apply($,resolveAll()).done(function(){routeLatLng(ghRequest,t)})}function getToFrom(e){return 0===e?FROM:e===ghRequest.route.size()-1?TO:-1}function checkInput(){var e=$("#pointTemplate").html(),t=ghRequest.route.size();$("#locationpoints > div.pointDiv").length>t&&$("#locationpoints > div.pointDiv:gt("+(t-1)+")").remove(),$("#locationpoints .pointDelete").off();for(var o=function(){var e=$(this).parent().data("index");ghRequest.route.removeSingle(e),mapLayer.clearLayers(),routeLatLng(ghRequest,!1)},r=0;t>r;r++){var n=$("#locationpoints > div.pointDiv").eq(r);0===n.length&&($("#locationpoints > div.pointAdd").before(translate.nanoTemplate(e,{id:r})),n=$("#locationpoints > div.pointDiv").eq(r));var a=getToFrom(r);if(n.data("index",r),n.find(".pointFlag").attr("src",a===FROM?"img/marker-small-green.png":a===TO?"img/marker-small-red.png":"img/marker-small-blue.png"),t>2?n.find(".pointDelete").click(o).show():n.find(".pointDelete").hide(),autocomplete.showListForIndex(ghRequest,routeIfAllResolved,r),translate.isI18nIsInitialized()){var s=n.find(".pointInput");0===r?$(s).attr("placeholder",translate.tr("fromHint")):r===t-1?$(s).attr("placeholder",translate.tr("toHint")):$(s).attr("placeholder",translate.tr("viaHint"))}}mapLayer.adjustMapSize()}function setToStart(e){var t=e.target.getLatLng(),o=ghRequest.route.getIndexByCoord(t);ghRequest.route.move(o,0),routeIfAllResolved()}function setToEnd(e){var t=e.target.getLatLng(),o=ghRequest.route.getIndexByCoord(t);ghRequest.route.move(o,-1),routeIfAllResolved()}function setStartCoord(e){ghRequest.route.set(e.latlng,0),resolveFrom(),routeIfAllResolved()}function setIntermediateCoord(e){var t=ghRequest.route.size()-1;ghRequest.route.add(e.latlng,t),resolveIndex(t),routeIfAllResolved()}function deleteCoord(e){var t=e.target.getLatLng();ghRequest.route.removeSingle(t),mapLayer.clearLayers(),routeLatLng(ghRequest,!1)}function setEndCoord(e){var t=ghRequest.route.size()-1;ghRequest.route.set(e.latlng,t),resolveTo(),routeIfAllResolved()}function routeIfAllResolved(e){return ghRequest.route.isResolved()?(routeLatLng(ghRequest,e),!0):!1}function setFlag(e,t){if(e.lat){var o=getToFrom(t),r=mapLayer.createMarker(t,e,setToEnd,setToStart,deleteCoord,ghRequest);r._openPopup=r.openPopup,r.openPopup=function(){var e,t=this.getLatLng(),o=ghRequest.route.getIndexFromCoord(t);if(o.resolvedList&&o.resolvedList[0]&&o.resolvedList[0].locationDetails){var r=o.resolvedList[0].locationDetails;e=format.formatAddress(r),this._popup.setContent(e).update()}this._openPopup()};var n={text:"Set as Start",callback:setToStart,index:1,state:2};-1===o&&r.options.contextmenuItems.push(n),r.on("dragend",function(e){mapLayer.clearLayers();var o=e.target.getLatLng();autocomplete.hide(),ghRequest.route.getIndex(t).setCoord(o.lat,o.lng),resolveIndex(t),ghRequest.do_zoom=!1,routeLatLng(ghRequest,!1)})}}function resolveFrom(){return resolveIndex(0)}function resolveTo(){return resolveIndex(ghRequest.route.size()-1)}function resolveIndex(e){return setFlag(ghRequest.route.getIndex(e),e),0===e?ghRequest.to.isResolved()?mapLayer.setDisabledForMapsContextMenu("start",!1):mapLayer.setDisabledForMapsContextMenu("start",!0):e===ghRequest.route.size()-1&&(ghRequest.from.isResolved()?mapLayer.setDisabledForMapsContextMenu("end",!1):mapLayer.setDisabledForMapsContextMenu("end",!0)),nominatim.resolve(e,ghRequest.route.getIndex(e))}function resolveAll(){for(var e=[],t=0,o=ghRequest.route.size();o>t;t++)e[t]=resolveIndex(t);return e}function flagAll(){for(var e=0,t=ghRequest.route.size();t>e;e++)setFlag(ghRequest.route.getIndex(e),e)}function routeLatLng(e,t){var o=e.do_zoom;e.do_zoom=!0;var r=e.createHistoryURL()+"&layer="+tileLayers.activeLayerName;if(!t&&History.enabled){var n=urlTools.parseUrl(r);return log(n),n.do_zoom=o,n.mathRandom=Math.random(),void History.pushState(n,messages.browserTitle,r)}$("#info").empty(),$("#info").show();var a=$("<div/>");$("#info").append(a),mapLayer.clearElevation(),mapLayer.clearLayers(),flagAll(),mapLayer.setDisabledForMapsContextMenu("intermediate",!1),$("#vehicles button").removeClass("selectvehicle"),$("button#"+e.getVehicle().toLowerCase()).addClass("selectvehicle");var s=e.createURL();a.html('<img src="img/indicator.gif"/> Search Route ...'),e.doRequest(s,function(t){if(a.html(""),t.message){var n=t.message;if(log(n),t.hints)for(var s=0;s<t.hints.length;s++)a.append("<div class='error'>"+t.hints[s].message+"</div>");else a.append("<div class='error'>"+n+"</div>")}else{var i=t.paths[0],l={type:"Feature",geometry:i.points};if(e.hasElevation()&&mapLayer.addElevation(l),mapLayer.addDataToRoutingLayer(l),i.bbox&&o){var u=i.bbox[0],d=i.bbox[1],p=i.bbox[2],g=i.bbox[3],c=new L.LatLngBounds(new L.LatLng(d,u),new L.LatLng(g,p));mapLayer.fitMapToBounds(c)}var h=translate.createTimeString(i.time),v=translate.createDistanceString(i.distance),m="";if(e.hasElevation()&&(m=translate.createEleInfoString(i.ascend,i.descend)),a.append(translate.tr("routeInfo",[v,h])),a.append(m),$(".defaulting").each(function(e,t){$(t).css("color","black")}),i.instructions){var f=require("./instructions.js");f.addInstructions(mapLayer,i,r,e)}}})}function mySubmit(){var e,t,o,r=[],n=!0,a=$("#locationpoints > div.pointDiv > input.pointInput"),s=a.size();return $.each(a,function(a){0===a?(e=$(this).val(),e!==translate.tr("fromHint")&&""!==e?r.push(e):n=!1):a===s-1?(t=$(this).val(),t!==translate.tr("toHint")&&""!==t?r.push(t):n=!1):(o=$(this).val(),o!==translate.tr("viaHint")&&""!==o?r.push(o):n=!1)}),n&&e!==translate.tr("fromHint")?t===translate.tr("toHint")?(ghRequest.from.setStr(e),void $.when(resolveFrom()).done(function(){mapLayer.focus(ghRequest.from,null,0)})):void(n&&resolveCoords(r)):void 0}function isProduction(){return host.indexOf("graphhopper.com")>0}global.d3=require("d3");var L=require("leaflet");require("leaflet-loading"),require("./lib/leaflet.contextmenu.js"),require("./lib/Leaflet.Elevation-0.0.2.min.js"),require("./lib/leaflet_numbered_markers.js"),global.jQuery=require("jquery"),global.$=global.jQuery,require("./lib/jquery-ui-custom-1.11.4.min.js"),require("./lib/jquery.history.js"),require("./lib/jquery.autocomplete.js");var ghenv=require("./options.js").options;console.log(ghenv.environment);var GHInput=require("./graphhopper/GHInput.js"),GHRequest=require("./graphhopper/GHRequest.js"),host=ghenv.routing.host;host||(host=""===location.port?location.protocol+"//"+location.hostname:location.protocol+"//"+location.hostname+":"+location.port);var AutoComplete=require("./autocomplete.js");if("development"===ghenv.environment)var autocomplete=AutoComplete.prototype.createStub();else var autocomplete=new AutoComplete(ghenv.geocoding.host,ghenv.geocoding.api_key);var mapLayer=require("./map.js"),nominatim=require("./nominatim.js"),gpxExport=require("./gpxexport.js"),messages=require("./messages.js"),translate=require("./translate.js"),format=require("./tools/format.js"),urlTools=require("./tools/url.js"),vehicle=require("./tools/vehicle.js"),tileLayers=require("./config/tileLayers.js"),debug=!1,ghRequest=new GHRequest(host,ghenv.routing.api_key),bounds={},metaVersionInfo;global.window&&(window.log=function(){log.history=log.history||[],log.history.push(arguments),this.console&&debug&&console.log(Array.prototype.slice.call(arguments))}),$(document).ready(function(e){jQuery.support.cors=!0,gpxExport.addGpxExport(ghRequest),isProduction()&&$("#hosting").show();var t=window.History;t.enabled&&t.Adapter.bind(window,"statechange",function(){var e=t.getState();log(e),initFromParams(e.data,!0)}),$("#locationform").submit(function(e){e.preventDefault(),mySubmit()});var o=urlTools.parseUrlWithHisto();$.when(ghRequest.fetchTranslationMap(o.locale),ghRequest.getInfo()).then(function(e,t){function r(e,t){var o=$("<button class='vehicle-btn' title='"+translate.tr(e)+"'/>");return t&&o.hide(),o.attr("id",e),o.html("<img src='img/"+e+".png' alt='"+translate.tr(e)+"'></img>"),o.click(function(){ghRequest.initVehicle(e),resolveAll(),routeLatLng(ghRequest)}),o}var n=e[0];ghRequest.setLocale(n.locale),translate.init(n);var a=t[0],s=a.bbox;bounds.initialized=!0,bounds.minLon=s[0],bounds.minLat=s[1],bounds.maxLon=s[2],bounds.maxLat=s[3],nominatim.setBounds(bounds);var i=$("#vehicles");if(a.features){ghRequest.features=a.features;var l={car:1,foot:2,bike:3,motorcycle:1e4},u=o.vehicle&&(!l[o.vehicle]||l[o.vehicle]>3),d=vehicle.getSortedVehicleKeys(a.features,l);d.length>0&&ghRequest.initVehicle(d[0]);var p=[];for(var g in d){var c=r(d[g].toLowerCase(),!u&&g>2);i.append(c),g>2&&p.push(c)}if(!u&&d.length>3){var h=$("<a id='more-vehicle-btn'> ...</a>").click(function(){h.hide();for(var e in p)p[e].show()});i.append($("<a class='vehicle-info-link' href='https://graphhopper.com/api/1/docs/supported-vehicle-profiles/'>?</a>")),i.append(h)}}metaVersionInfo=messages.extractMetaVersionInfo(a),mapLayer.initMap(bounds,setStartCoord,setIntermediateCoord,setEndCoord,o.layer),initFromParams(o,!0)},function(e){log(e),$("#error").html('GraphHopper API offline? <a href="http://graphhopper.com/maps">Refresh</a><br/>Status: '+e.statusText+"<br/>"+host),bounds={minLon:-180,minLat:-90,maxLon:180,maxLat:90},nominatim.setBounds(bounds),mapLayer.initMap(bounds,setStartCoord,setIntermediateCoord,setEndCoord)}),$(window).resize(function(){mapLayer.adjustMapSize()}),$("#locationpoints").sortable({items:".pointDiv",cursor:"n-resize",containment:"parent",handle:".pointFlag",update:function(e,t){var o=$(t.item[0]).data("index");sortable_items=$("#locationpoints > div.pointDiv"),$(sortable_items).each(function(e){var t=$(this).data("index");return o===t?(ghRequest.route.move(t,e),routeIfAllResolved()||checkInput(),!1):void 0})}}),$("#locationpoints > div.pointAdd").click(function(){ghRequest.route.add(new GHInput),checkInput()}),checkInput()});var FROM="from",TO="to";module.exports.setFlag=setFlag;
 }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
-},{"./autocomplete.js":5,"./gpxexport.js":7,"./graphhopper/GHRequest.js":9,"./instructions.js":12,"./lib/Leaflet.Elevation-0.0.2.min.js":13,"./lib/jquery-ui-custom-1.11.4.min.js":14,"./lib/jquery.autocomplete.js":15,"./lib/jquery.history.js":16,"./lib/leaflet.contextmenu.js":17,"./lib/leaflet_numbered_markers.js":18,"./map.js":20,"./messages.js":21,"./nominatim.js":22,"./tools/format.js":23,"./tools/url.js":25,"./tools/vehicle.js":26,"./translate.js":27,"d3":1,"jquery":2,"leaflet":4,"leaflet-loading":3}],20:[function(require,module,exports){
-function adjustMapSize(){var e=$("#map"),t=$(window).width()-295;400>t?(t=290,e.attr("style","position: relative; float: right;")):e.attr("style","position: absolute; right: 0;");var a=$(window).height();e.width(t).height(a),$("#input").height(a),$("#info").css("max-height",a-$("#input_header").height()-58)}function initMap(e,t,a,n,o){adjustMapSize(),log("init map at "+JSON.stringify(e));var i=tileLayers.selectLayer(o);map=L.map("map",{layers:[i],contextmenu:!0,contextmenuWidth:145,contextmenuItems:[{separator:!0,index:3,state:["set_default"]},{text:"Show coordinates",callback:function(e){alert(e.latlng.lat+","+e.latlng.lng)},index:4,state:[1,2,3]},{text:"Center map here",callback:function(e){map.panTo(e.latlng)},index:5,state:[1,2,3]}],zoomControl:!1,loadingControl:!1});var r={text:"Set as start",callback:t,disabled:!1,index:0},l={text:"Set intermediate",callback:a,disabled:!0,index:1},m={text:"Set as end",callback:n,disabled:!1,index:2};menuStart=map.contextmenu.insertItem(r,r.index),menuIntermediate=map.contextmenu.insertItem(l,l.index),menuEnd=map.contextmenu.insertItem(m,m.index);var d=new L.Control.Zoom({position:"topleft"}).addTo(map);new L.Control.loading({zoomControl:d}).addTo(map),map.contextmenu.addSet({name:"markers",state:2}),map.contextmenu.addSet({name:"path",state:3}),L.control.layers(tileLayers.getAvailableTileLayers()).addTo(map),map.on("baselayerchange",function(e){e.name&&(activeLayer=e.name,$("#export-link a").attr("href",function(e,t){return t.replace(/(layer=)([\w\s]+)/,"$1"+activeLayer)}))}),L.control.scale().addTo(map),map.fitBounds(new L.LatLngBounds(new L.LatLng(e.minLat,e.minLon),new L.LatLng(e.maxLat,e.maxLon))),map.attributionControl.setPrefix("");var s={color:"black",weight:2,opacity:.3},c={type:"Feature",geometry:{type:"LineString",coordinates:[[e.minLon,e.minLat],[e.maxLon,e.minLat],[e.maxLon,e.maxLat],[e.minLon,e.maxLat],[e.minLon,e.minLat]]}};e.initialized&&L.geoJson(c,{style:s}).addTo(map),routingLayer=L.geoJson().addTo(map),routingLayer.options={style:{color:"#00cc33",weight:5,opacity:.6},contextmenu:!0,contextmenuItems:[{text:"Route ",disabled:!0,index:0,state:3},{text:"Set intermediate",callback:a,index:1,state:3},{separator:!0,index:2,state:3}],contextmenuAtiveState:3}}function focus(e,t,a){e.lat&&e.lng&&(t||(t=11),routingLayer.clearLayers(),map.setView(new L.LatLng(e.lat,e.lng),t),setFlag(e,a))}function getToFrom(e,t){return 0===e?FROM:e===t.route.size()-1?TO:-1}var tileLayers=require("./config/tileLayers.js"),routingLayer,map,menuStart,menuIntermediate,menuEnd,elevationControl=null;module.exports.clearLayers=function(){routingLayer.clearLayers()},module.exports.getRoutingLayer=function(){return routingLayer},module.exports.addDataToRoutingLayer=function(e){routingLayer.addData(e)},module.exports.setDisabledForMapsContextMenu=function(e,t){"start"===e&&map.contextmenu.setDisabled(menuStart,t),"end"===e&&map.contextmenu.setDisabled(menuEnd,t),"intermediate"===e&&map.contextmenu.setDisabled(menuIntermediate,t)},module.exports.fitMapToBounds=function(e){map.fitBounds(e)},module.exports.removeLayerFromMap=function(e){map.removeLayer(e)},module.exports.focus=focus,module.exports.initMap=initMap,module.exports.adjustMapSize=adjustMapSize,module.exports.addElevation=function(e){null===elevationControl&&(elevationControl=L.control.elevation({position:"bottomright",theme:"white-theme",width:450,height:125,yAxisMin:0,forceAxisBounds:!1,margins:{top:10,right:20,bottom:30,left:50},useHeightIndicator:!0,interpolation:"linear",hoverNumber:{decimalsX:3,decimalsY:0,formatter:void 0},xTicks:void 0,yTicks:void 0,collapsed:!1}),elevationControl.addTo(map)),elevationControl.addData(e)},module.exports.clearElevation=function(){elevationControl&&elevationControl.clear()},module.exports.getMap=function(){return map};var FROM="from",TO="to",iconFrom=L.icon({iconUrl:"./img/marker-icon-green.png",shadowSize:[50,64],shadowAnchor:[4,62],iconAnchor:[12,40]}),iconTo=L.icon({iconUrl:"./img/marker-icon-red.png",shadowSize:[50,64],shadowAnchor:[4,62],iconAnchor:[12,40]});module.exports.createMarker=function(e,t,a,n,o,i){var r=getToFrom(e,i);return L.marker([t.lat,t.lng],{icon:r===FROM?iconFrom:r===TO?iconTo:new L.NumberedDivIcon({number:e}),draggable:!0,contextmenu:!0,contextmenuItems:[{text:"Marker "+(r===FROM?"Start":r===TO?"End":"Intermediate "+e),disabled:!0,index:0,state:2},{text:"Set as "+(r!==TO?"End":"Start"),callback:r!==TO?a:n,index:2,state:2},{text:"Delete from Route",callback:o,index:3,state:2,disabled:-1!==r&&2===i.route.size()?!0:!1},{separator:!0,index:4,state:2}],contextmenuAtiveState:2}).addTo(routingLayer).bindPopup(r===FROM?"Start":r===TO?"End":"Intermediate "+e)};
+},{"./autocomplete.js":5,"./config/tileLayers.js":6,"./gpxexport.js":7,"./graphhopper/GHInput.js":8,"./graphhopper/GHRequest.js":9,"./instructions.js":12,"./lib/Leaflet.Elevation-0.0.2.min.js":13,"./lib/jquery-ui-custom-1.11.4.min.js":14,"./lib/jquery.autocomplete.js":15,"./lib/jquery.history.js":16,"./lib/leaflet.contextmenu.js":17,"./lib/leaflet_numbered_markers.js":18,"./map.js":20,"./messages.js":21,"./nominatim.js":22,"./options.js":23,"./tools/format.js":24,"./tools/url.js":26,"./tools/vehicle.js":27,"./translate.js":28,"d3":1,"jquery":2,"leaflet":4,"leaflet-loading":3}],20:[function(require,module,exports){
+function adjustMapSize(){var e=$("#map"),t=$(window).width()-295;400>t?(t=290,e.attr("style","position: relative; float: right;")):e.attr("style","position: absolute; right: 0;");var a=$(window).height();e.width(t).height(a),$("#input").height(a),$("#info").css("max-height",a-$("#input_header").height()-58)}function initMap(e,t,a,n,o){adjustMapSize(),log("init map at "+JSON.stringify(e));var i=tileLayers.selectLayer(o);map=L.map("map",{layers:[i],contextmenu:!0,contextmenuWidth:145,contextmenuItems:[{separator:!0,index:3,state:["set_default"]},{text:"Show coordinates",callback:function(e){alert(e.latlng.lat+","+e.latlng.lng)},index:4,state:[1,2,3]},{text:"Center map here",callback:function(e){map.panTo(e.latlng)},index:5,state:[1,2,3]}],zoomControl:!1,loadingControl:!1});var r={text:"Set as start",callback:t,disabled:!1,index:0},m={text:"Set intermediate",callback:a,disabled:!0,index:1},l={text:"Set as end",callback:n,disabled:!1,index:2};menuStart=map.contextmenu.insertItem(r,r.index),menuIntermediate=map.contextmenu.insertItem(m,m.index),menuEnd=map.contextmenu.insertItem(l,l.index);var d=new L.Control.Zoom({position:"topleft"}).addTo(map);new L.Control.loading({zoomControl:d}).addTo(map),map.contextmenu.addSet({name:"markers",state:2}),map.contextmenu.addSet({name:"path",state:3}),L.control.layers(tileLayers.getAvailableTileLayers()).addTo(map),map.on("baselayerchange",function(e){e.name&&(tileLayers.activeLayerName=e.name,$("#export-link a").attr("href",function(e,t){return t.replace(/(layer=)([\w\s]+)/,"$1"+tileLayers.activeLayerName)}))}),L.control.scale().addTo(map),map.fitBounds(new L.LatLngBounds(new L.LatLng(e.minLat,e.minLon),new L.LatLng(e.maxLat,e.maxLon))),map.attributionControl.setPrefix("");var s={color:"black",weight:2,opacity:.3},c={type:"Feature",geometry:{type:"LineString",coordinates:[[e.minLon,e.minLat],[e.maxLon,e.minLat],[e.maxLon,e.maxLat],[e.minLon,e.maxLat],[e.minLon,e.minLat]]}};e.initialized&&L.geoJson(c,{style:s}).addTo(map),routingLayer=L.geoJson().addTo(map),routingLayer.options={style:{color:"#00cc33",weight:5,opacity:.6},contextmenu:!0,contextmenuItems:[{text:"Route ",disabled:!0,index:0,state:3},{text:"Set intermediate",callback:a,index:1,state:3},{separator:!0,index:2,state:3}],contextmenuAtiveState:3}}function focus(e,t,a){e.lat&&e.lng&&(t||(t=11),routingLayer.clearLayers(),map.setView(new L.LatLng(e.lat,e.lng),t),mainTemplate.setFlag(e,a))}function getToFrom(e,t){return 0===e?FROM:e===t.route.size()-1?TO:-1}var mainTemplate=require("./main-template.js"),tileLayers=require("./config/tileLayers.js"),routingLayer,map,menuStart,menuIntermediate,menuEnd,elevationControl=null;module.exports.clearLayers=function(){routingLayer.clearLayers()},module.exports.getRoutingLayer=function(){return routingLayer},module.exports.addDataToRoutingLayer=function(e){routingLayer.addData(e)},module.exports.setDisabledForMapsContextMenu=function(e,t){"start"===e&&map.contextmenu.setDisabled(menuStart,t),"end"===e&&map.contextmenu.setDisabled(menuEnd,t),"intermediate"===e&&map.contextmenu.setDisabled(menuIntermediate,t)},module.exports.fitMapToBounds=function(e){map.fitBounds(e)},module.exports.removeLayerFromMap=function(e){map.removeLayer(e)},module.exports.focus=focus,module.exports.initMap=initMap,module.exports.adjustMapSize=adjustMapSize,module.exports.addElevation=function(e){null===elevationControl&&(elevationControl=L.control.elevation({position:"bottomright",theme:"white-theme",width:450,height:125,margins:{top:10,right:20,bottom:30,left:50},useHeightIndicator:!0,interpolation:"linear",hoverNumber:{decimalsX:2,decimalsY:0,formatter:void 0},xTicks:void 0,yTicks:void 0,collapsed:!1}),elevationControl.addTo(map)),elevationControl.addData(e)},module.exports.clearElevation=function(){elevationControl&&elevationControl.clear()},module.exports.getMap=function(){return map};var FROM="from",TO="to",iconFrom=L.icon({iconUrl:"./img/marker-icon-green.png",shadowSize:[50,64],shadowAnchor:[4,62],iconAnchor:[12,40]}),iconTo=L.icon({iconUrl:"./img/marker-icon-red.png",shadowSize:[50,64],shadowAnchor:[4,62],iconAnchor:[12,40]});module.exports.createMarker=function(e,t,a,n,o,i){var r=getToFrom(e,i);return L.marker([t.lat,t.lng],{icon:r===FROM?iconFrom:r===TO?iconTo:new L.NumberedDivIcon({number:e}),draggable:!0,contextmenu:!0,contextmenuItems:[{text:"Marker "+(r===FROM?"Start":r===TO?"End":"Intermediate "+e),disabled:!0,index:0,state:2},{text:"Set as "+(r!==TO?"End":"Start"),callback:r!==TO?a:n,index:2,state:2},{text:"Delete from Route",callback:o,index:3,state:2,disabled:-1!==r&&2===i.route.size()?!0:!1},{separator:!0,index:4,state:2}],contextmenuAtiveState:2}).addTo(routingLayer).bindPopup(r===FROM?"Start":r===TO?"End":"Intermediate "+e)};
 
-},{"./config/tileLayers.js":6}],21:[function(require,module,exports){
+},{"./config/tileLayers.js":6,"./main-template.js":19}],21:[function(require,module,exports){
 module.exports.extractMetaVersionInfo=function(r){return metaVersionInfo="",r.data_date&&(metaVersionInfo+="<br/>Data date: "+r.data_date),r.import_date&&(metaVersionInfo+="<br/>Import date: "+r.import_date),r.prepare_date&&(metaVersionInfo+="<br/>Prepare date: "+r.prepare_date),r.version&&(metaVersionInfo+="<br/>GH version: "+r.version),r.build_date&&(metaVersionInfo+="<br/>Jar date: "+r.build_date),metaVersionInfo},module.exports.getSignName=function(r){if(-3===r)return"sharp_left";if(-2===r)return"left";if(-1===r)return"slight_left";if(0===r)return"continue";if(1===r)return"slight_right";if(2===r)return"right";if(3===r)return"sharp_right";if(4===r)return"marker-icon-red";if(5===r)return"marker-icon-blue";if(6===r)return"roundabout";throw"did not find sign "+r},module.exports.browserTitle="GraphHopper Maps - Driving Directions";
 
 },{}],22:[function(require,module,exports){
 function createAmbiguityList(o){o.error="",o.resolvedList=[];var n=3e3;if(o.isResolved()){var r=$.Deferred();return r.resolve([o]),r}if(o.lat&&o.lng){var t=nominatimReverseURL+"?lat="+o.lat+"&lon="+o.lng+"&format=json&zoom=16";return $.ajax({url:t,type:"GET",dataType:"json",timeout:n}).then(function(n){if(!n)return o.error="No description found for coordinate",[o];var r=n.address,t={};return t.lat=o.lat,t.lng=o.lng,t.bbox=n.boundingbox,t.positionType=n.type,t.locationDetails=format.formatLocationEntry(r),o.resolvedList.push(t),[o]},function(n){return log("[nominatim_reverse] Error while looking up coordinate lat="+o.lat+"&lon="+o.lng),o.error="Problem while looking up location.",[o]})}return doGeoCoding(o.input,10,n).then(function(n){if(!n||0===n.length)return o.error="No area description found",[o];var r,t=n[0].importance;for(var e in n){var i=n[e];if(t-i.importance>.4)break;if(!r||JSON.stringify(r)!==JSON.stringify(i.address)){r=i.address,t=i.importance;var a={};a.lat=mathTools.round(i.lat),a.lng=mathTools.round(i.lon),a.locationDetails=format.formatLocationEntry(r),a.bbox=i.boundingbox,a.positionType=i.type,o.resolvedList.push(a)}}if(0===o.resolvedList.length)return o.error="No area description found",[o];var s=o.resolvedList;return o.lat=s[0].lat,o.lng=s[0].lng,[o]},function(){return o.error="Problem while looking up address",[o]})}function doGeoCoding(o,n,r){n||(n=10);var t=nominatimURL+"?format=json&addressdetails=1&q="+encodeURIComponent(o)+"&limit="+n;return bounds.initialized&&(t+="&bounded=1&viewbox="+bounds.minLon+","+bounds.maxLat+","+bounds.maxLon+","+bounds.minLat),$.ajax({url:t,type:"GET",dataType:"json",timeout:r}).fail(createCallback("[nominatim] Problem while looking up location "+o))}function createCallback(o){return function(n){log(o+" "+JSON.stringify(n))}}function resolve(o,n){var r=$("#locationpoints > div.pointDiv").eq(o);return $(r).find(".pointFlag").hide(),$(r).find(".pointIndicator").show(),$(r).find(".pointInput").val(n.input),createAmbiguityList(n).always(function(){var o=$(r).find(".pointResolveError");return o.empty(),n.error&&(o.show(),o.text(n.error).fadeOut(5e3),n.error=""),$(r).find(".pointIndicator").hide(),$(r).find(".pointFlag").show(),n})}var nominatimURL="https://nominatim.openstreetmap.org/search",nominatimReverseURL="https://nominatim.openstreetmap.org/reverse",bounds,mathTools=require("./tools/math.js"),format=require("./tools/format.js");module.exports.resolve=resolve,module.exports.setBounds=function(o){bounds=o};
 
-},{"./tools/format.js":23,"./tools/math.js":24}],23:[function(require,module,exports){
-function insComma(o,t){return o.length>0?o+", "+t:t}function formatLocationEntry(o){var t={},n="";return o?(o.road&&(n=o.road,o.house_number&&(n.length>0&&(n+=" "),n+=o.house_number),t.road=n),o.postcode&&(t.postcode=o.postcode),t.country=o.country,(o.city||o.suburb||o.town||o.village||o.hamlet||o.locality)&&(n="",o.locality&&(n=insComma(n,o.locality)),o.hamlet&&(n=insComma(n,o.hamlet)),o.village&&(n=insComma(n,o.village)),o.suburb&&(n=insComma(n,o.suburb)),o.city&&(n=insComma(n,o.city)),o.town&&(n=insComma(n,o.town)),t.city=n),n="",o.state&&(n+=o.state),o.continent&&(n=insComma(n,o.continent)),t.more=n,t):t}module.exports.formatLocationEntry=formatLocationEntry,module.exports.formatAddress=function(o){return(o.road?o.road+", ":"")+(o.postcode?o.postcode+", ":"")+(o.city?o.city+", ":"")+(o.country?o.country:"")},module.exports.insComma=insComma,module.exports.formatValue=function(o,t){var n="("+$.Autocomplete.utils.escapeRegExChars(t)+")";return o.replace(/[<>]/g,"_").replace(new RegExp(n,"gi"),"<strong>$1</strong>")};
+},{"./tools/format.js":24,"./tools/math.js":25}],23:[function(require,module,exports){
+exports.options={environment:"development",routing:{host:"",api_key:""},geocoding:{host:"",api_key:""}};
 
 },{}],24:[function(require,module,exports){
-module.exports.getCenter=function(n){var o={lat:0,lng:0};return n.initialized&&(o.lat=(n.minLat+n.maxLat)/2,o.lng=(n.minLon+n.maxLon)/2),o},module.exports.floor=function(n,o){return o||(o=1e6),Math.floor(n*o)/o},module.exports.round=function(n,o){return void 0===o&&(o=1e6),Math.round(n*o)/o};
+function insComma(o,t){return o.length>0?o+", "+t:t}function formatLocationEntry(o){var t={},n="";return o?(o.road&&(n=o.road,o.house_number&&(n.length>0&&(n+=" "),n+=o.house_number),t.road=n),o.postcode&&(t.postcode=o.postcode),t.country=o.country,(o.city||o.suburb||o.town||o.village||o.hamlet||o.locality)&&(n="",o.locality&&(n=insComma(n,o.locality)),o.hamlet&&(n=insComma(n,o.hamlet)),o.village&&(n=insComma(n,o.village)),o.suburb&&(n=insComma(n,o.suburb)),o.city&&(n=insComma(n,o.city)),o.town&&(n=insComma(n,o.town)),t.city=n),n="",o.state&&(n+=o.state),o.continent&&(n=insComma(n,o.continent)),t.more=n,t):t}module.exports.formatLocationEntry=formatLocationEntry,module.exports.formatAddress=function(o){return(o.road?o.road+", ":"")+(o.postcode?o.postcode+", ":"")+(o.city?o.city+", ":"")+(o.country?o.country:"")},module.exports.insComma=insComma,module.exports.formatValue=function(o,t){var n="("+$.Autocomplete.utils.escapeRegExChars(t)+")";return o.replace(/[<>]/g,"_").replace(new RegExp(n,"gi"),"<strong>$1</strong>")};
 
 },{}],25:[function(require,module,exports){
-function parseUrlWithHisto(){return parseUrl(window.location.hash?window.location.hash:window.location.search)}function parseUrl(r){var e=r.indexOf("?");e>=0&&(r=r.substring(e+1));for(var t={},o=r.split("&"),a=0;a<o.length;a++){var i=o[a].indexOf("=");if(!(0>i)){var n=o[a].substring(0,i),s=o[a].substring(i+1);if(s=decodeURIComponent(s.replace(/\+/g," ")),"undefined"==typeof t[n]&&"heading"!==n&&"point"!==n)"true"===s?s=!0:"false"===s&&(s=!1),t[n]=s;else{var l=t[n];isArray(l)?l.push(s):l?t[n]=[l,s]:t[n]=[s]}}}return t}var isArray=function(r){var e=Object.prototype.toString.call(r);return"[object array]"===e.toLowerCase()};module.exports.parseUrl=parseUrl,module.exports.parseUrlWithHisto=parseUrlWithHisto;
+module.exports.getCenter=function(n){var o={lat:0,lng:0};return n.initialized&&(o.lat=(n.minLat+n.maxLat)/2,o.lng=(n.minLon+n.maxLon)/2),o},module.exports.floor=function(n,o){return o||(o=1e6),Math.floor(n*o)/o},module.exports.round=function(n,o){return void 0===o&&(o=1e6),Math.round(n*o)/o};
 
 },{}],26:[function(require,module,exports){
-module.exports.getSortedVehicleKeys=function(e,r){var t=Object.keys(e);return t.sort(function(e,t){var o=r[e],n=r[t];return o||n?(o||(o=4),n||(n=4),o-n):e.localeCompare(t)}),t};
+function parseUrlWithHisto(){return parseUrl(window.location.hash?window.location.hash:window.location.search)}function parseUrl(r){var e=r.indexOf("?");e>=0&&(r=r.substring(e+1));for(var t={},o=r.split("&"),a=0;a<o.length;a++){var i=o[a].indexOf("=");if(!(0>i)){var n=o[a].substring(0,i),s=o[a].substring(i+1);if(s=decodeURIComponent(s.replace(/\+/g," ")),"undefined"==typeof t[n]&&"heading"!==n&&"point"!==n)"true"===s?s=!0:"false"===s&&(s=!1),t[n]=s;else{var l=t[n];isArray(l)?l.push(s):l?t[n]=[l,s]:t[n]=[s]}}}return t}var isArray=function(r){var e=Object.prototype.toString.call(r);return"[object array]"===e.toLowerCase()};module.exports.parseUrl=parseUrl,module.exports.parseUrlWithHisto=parseUrlWithHisto;
 
 },{}],27:[function(require,module,exports){
+module.exports.getSortedVehicleKeys=function(e,r){var t=Object.keys(e);return t.sort(function(e,t){var o=r[e],n=r[t];return o||n?(o||(o=4),n||(n=4),o-n):e.localeCompare(t)}),t};
+
+},{}],28:[function(require,module,exports){
 (function (global){
 function tr2(t,n){if(null===t)return log("ERROR: key was null?"),"";if(null===defaultTranslationMap)return log("ERROR: defaultTranslationMap was not initialized?"),t;t=t.toLowerCase();var r=defaultTranslationMap[t];return!r&&enTranslationMap&&(r=enTranslationMap[t]),r?stringFormat(r,n):t}function tr(t,n){return tr2("web."+t,n)}function stringFormat(t,n){if("string"==typeof n&&(n=[n]),t.indexOf("%1$s")>=0)return t.replace(/\%(\d+)\$s/g,function(t,r){return r--,"undefined"!=typeof n[r]?n[r]:t});var r=0;return t.replace(/\%s/g,function(t){var o="undefined"!=typeof n[r]?n[r]:t;return r++,o})}function initI18N(){if(global.$){$("#searchButton").attr("value",tr("searchButton"));var t=$("#locationpoints > div.pointDiv > input.pointInput"),n=t.size();$(t).each(function(t){0===t?$(this).attr("placeholder",tr("fromHint")):t===n-1?$(this).attr("placeholder",tr("toHint")):$(this).attr("placeholder",tr("viaHint"))}),$("#gpxExportButton").attr("title",tr("gpxExportButton"))}}var defaultTranslationMap=null,enTranslationMap=null,i18nIsInitialized,mathTools=require("./tools/math.js");module.exports.createDistanceString=function(t){return 900>t?mathTools.round(t,1)+tr2("mAbbr"):(t=mathTools.round(t/1e3,100),t>100&&(t=mathTools.round(t,1)),t+tr2("kmAbbr"))},module.exports.createEleInfoString=function(t,n){var r="";return(t>0||n>0)&&(r="<br/> ",t>0&&(r+="&#8599;"+mathTools.round(t,1)+tr2("mAbbr")),n>0&&(r+=" &#8600;"+mathTools.round(n,1)+tr2("mAbbr"))),r},module.exports.createTimeString=function(t){var n,r=mathTools.round(t/60/1e3,1e3);return r>60?r/60>24?(n=mathTools.floor(r/60/24,1)+tr2("dayAbbr"),r=mathTools.floor(r/60%24,1),r>0&&(n+=" "+r+tr2("hourAbbr"))):(n=mathTools.floor(r/60,1)+tr2("hourAbbr"),r=mathTools.floor(r%60,1),r>0&&(n+=" "+r+tr2("minAbbr"))):n=mathTools.round(r%60,1)+tr2("minAbbr"),n},module.exports.tr=tr,module.exports.nanoTemplate=function(t,n){return t.replace(/\{([\w\.]*)\}/g,function(t,r){var o=r.split("."),a=n[o.shift()];for(i=0,l=o.length;i<l;_i++)a=a[this];return"undefined"!=typeof a&&null!==a?a:""})},module.exports.init=function(t){defaultTranslationMap=t["default"],enTranslationMap=t.en,defaultTranslationMap||(defaultTranslationMap=enTranslationMap),i18nIsInitialized=!0,initI18N()},module.exports.isI18nIsInitialized=function(){return i18nIsInitialized};
 
 }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
-},{"./tools/math.js":24}]},{},[19]);
->>>>>>> refs/remotes/graphhopper/master
+
+},{"./tools/math.js":25}]},{},[19]);
\ No newline at end of file
diff --git a/web/src/main/webapp/js/map.js b/web/src/main/webapp/js/map.js
index 7f07864c28..700483a6e9 100644
--- a/web/src/main/webapp/js/map.js
+++ b/web/src/main/webapp/js/map.js
@@ -1,3 +1,4 @@
+var mainTemplate = require('./main-template.js');
 var tileLayers = require('./config/tileLayers.js');
 
 var routingLayer;
@@ -20,7 +21,7 @@ function adjustMapSize() {
     var height = $(window).height();
     mapDiv.width(width).height(height);
     $("#input").height(height);
-    // reduce info size depending on how heigh the input_header is and reserve space for footer
+    // reduce info size depending on how high the input_header is and reserve space for footer
     $("#info").css("max-height", height - $("#input_header").height() - 58);
 }
 
@@ -101,9 +102,9 @@ function initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, selec
 
     map.on('baselayerchange', function (a) {
         if (a.name) {
-            activeLayer = a.name;
+            tileLayers.activeLayerName = a.name;
             $("#export-link a").attr('href', function (i, v) {
-                return v.replace(/(layer=)([\w\s]+)/, '$1' + activeLayer);
+                return v.replace(/(layer=)([\w\s]+)/, '$1' + tileLayers.activeLayerName);
             });
         }
     });
@@ -177,7 +178,7 @@ function focus(coord, zoom, index) {
             zoom = 11;
         routingLayer.clearLayers();
         map.setView(new L.LatLng(coord.lat, coord.lng), zoom);
-        setFlag(coord, index);
+        mainTemplate.setFlag(coord, index);
     }
 }
 
@@ -221,9 +222,6 @@ module.exports.addElevation = function (geoJsonFeature) {
             theme: "white-theme", //default: lime-theme
             width: 450,
             height: 125,
-            yAxisMin: 0, // set min domain y axis
-            // yAxisMax: 550, // set max domain y axis
-            forceAxisBounds: false,
             margins: {
                 top: 10,
                 right: 20,
@@ -233,8 +231,8 @@ module.exports.addElevation = function (geoJsonFeature) {
             useHeightIndicator: true, //if false a marker is drawn at map position
             interpolation: "linear", //see https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-area_interpolate
             hoverNumber: {
-                decimalsX: 3, //decimals on distance (always in km)
-                decimalsY: 0, //deciamls on height (always in m)
+                decimalsX: 2, //decimals on distance (always in km)
+                decimalsY: 0, //decimals on height (always in m)
                 formatter: undefined //custom formatter function may be injected
             },
             xTicks: undefined, //number of ticks in x axis, calculated by default according to width
diff --git a/web/src/main/webapp/js/options.js b/web/src/main/webapp/js/options.js
new file mode 100644
index 0000000000..89ea29e56c
--- /dev/null
+++ b/web/src/main/webapp/js/options.js
@@ -0,0 +1,15 @@
+////////////////////////////////////////////////////////////////////////////////////////////////////////
+// We know that you love 'free', we love it too :)! And so the entire GraphHopper routing engine is not 
+// only free but even Open Source! The GraphHopper Directions API is also free for development. 
+// Grab an API key and have fun with installing anything: https://graphhopper.com/#directions-api
+// Misuse of API keys that you don't own is prohibited and you'll be blocked.
+////////////////////////////////////////////////////////////////////////////////////////////////////////
+
+// Easily replace this options.js with an additional file that you prodive as options_prod.js activate via:
+// BROWSERIFYSWAP_ENV='production' npm run watch
+// see also package.json and https://github.com/thlorenz/browserify-swap
+exports.options = {
+    environment: "development",
+    routing: {host: '', api_key: ''},
+    geocoding: {host: '', api_key: ''}
+};
\ No newline at end of file
