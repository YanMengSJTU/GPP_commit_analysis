diff --git a/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
index 8dd7fb3d7e..4726fb8b9a 100644
--- a/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
@@ -573,6 +573,13 @@ void collect( OSMWay way, TreeMap<Double, Integer> weightToPrioMap )
             if (classBicycle != null)
                 weightToPrioMap.put(100d, convertClassValueToPriority(classBicycle).getValue());
         }
+
+        if (way.hasTag("scenic", "yes"))
+        {
+            if (weightToPrioMap.lastEntry().getValue() < BEST.getValue())
+                // Increase the prio by one step
+                weightToPrioMap.put(110d, weightToPrioMap.lastEntry().getValue() + 1);
+        }
     }
 
     /**
@@ -597,18 +604,17 @@ long handleBikeRelated( OSMWay way, long encoded, boolean partOfCycleRelation )
             wayType = WayType.ROAD;
         else
             wayType = WayType.OTHER_SMALL_WAY;
-        
+
         boolean isPushingSection = isPushingSection(way);
         if (isPushingSection && !partOfCycleRelation || "steps".equals(highway))
             wayType = WayType.PUSHING_SECTION;
-        
+
         if (way.hasTag("bicycle", intendedValues))
         {
             if (isPushingSection && !way.hasTag("bicycle", "designated"))
                 wayType = WayType.OTHER_SMALL_WAY;
-            else
-                if ( (wayType == WayType.OTHER_SMALL_WAY ) || (wayType == WayType.PUSHING_SECTION) )
-                    wayType = WayType.CYCLEWAY;
+            else if (wayType == WayType.OTHER_SMALL_WAY || wayType == WayType.PUSHING_SECTION)
+                wayType = WayType.CYCLEWAY;
         } else if ("cycleway".equals(highway))
             wayType = WayType.CYCLEWAY;
 
diff --git a/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java b/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java
index 6fba55f9b2..740565cb36 100644
--- a/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java
@@ -50,6 +50,10 @@ public void testGetSpeed()
         assertEquals(18, encoder.getSpeed(way));
         assertPriority(REACH_DEST.getValue(), way);
 
+        way.setTag("scenic", "yes");
+        assertEquals(18, encoder.getSpeed(way));
+        assertPriority(AVOID_IF_POSSIBLE.getValue(), way);
+
         // Pushing section !! This is fine as we obey the law!
         way.clearTags();
         way.setTag("highway", "footway");
@@ -517,6 +521,10 @@ public void testClassBicycle()
         way.setTag("highway", "tertiary");
         way.setTag("class:bicycle", "3");
         assertPriority(BEST.getValue(), way);
+        // Test that priority cannot get better than best
+        way.setTag("scenic", "yes");
+        assertPriority(BEST.getValue(), way);
+        way.setTag("scenic", "no");
         way.setTag("class:bicycle", "2");
         assertPriority(VERY_NICE.getValue(), way);
         way.setTag("class:bicycle", "1");
