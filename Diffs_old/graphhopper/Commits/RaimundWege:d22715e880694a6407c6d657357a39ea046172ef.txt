diff --git a/android/app/build.gradle b/android/app/build.gradle
index 25eedd70d8..70d05127d3 100644
--- a/android/app/build.gradle
+++ b/android/app/build.gradle
@@ -6,14 +6,15 @@ android {
 
     defaultConfig {
         applicationId "com.graphhopper.android"
-        minSdkVersion 10
-        targetSdkVersion 22
+        minSdkVersion 26
+        targetSdkVersion 27
     }
 
     buildTypes {
         all {
-            minifyEnabled true
+            minifyEnabled false
             useProguard false
+            multiDexEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
@@ -25,6 +26,11 @@ android {
          */
         disable 'InvalidPackage'
     }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 }
 
 /** only necessary if you need to use latest SNAPSHOT
@@ -54,4 +60,8 @@ dependencies {
 
     implementation 'org.slf4j:slf4j-api:1.7.25'
     implementation 'org.slf4j:slf4j-android:1.7.25'
+
+    implementation 'com.android.support:multidex:1.0.3'
+    implementation 'com.graphhopper:graphhopper-reader-gtfs:0.11.0'
+    implementation 'org.mapdb:mapdb:1.0.9'
 }
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
index c407c842d2..9f12000550 100644
--- a/android/app/src/main/AndroidManifest.xml
+++ b/android/app/src/main/AndroidManifest.xml
@@ -1,9 +1,10 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.graphhopper.android"
     android:versionCode="1"
-    android:versionName="0.1" >
+    android:versionName="0.1">
 
     <!-- saving maps -->
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
 
     <!-- necessary to easily download maps via wifi -->
@@ -16,13 +17,15 @@
 
     <application
         android:allowBackup="true"
+        android:hardwareAccelerated="true"
         android:icon="@drawable/logo"
         android:label="@string/app_name"
-        android:theme="@style/AppTheme" >
+        android:largeHeap="true"
+        android:theme="@style/AppTheme">
         <activity
             android:name=".MainActivity"
-            android:label="@string/title_activity_main"
-            android:configChanges="keyboardHidden|orientation|screenSize">
+            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:label="@string/title_activity_main">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
diff --git a/android/app/src/main/java/com/graphhopper/android/MainActivity.java b/android/app/src/main/java/com/graphhopper/android/MainActivity.java
index 8dc3e82782..030479aa05 100644
--- a/android/app/src/main/java/com/graphhopper/android/MainActivity.java
+++ b/android/app/src/main/java/com/graphhopper/android/MainActivity.java
@@ -1,5 +1,6 @@
 package com.graphhopper.android;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.ProgressDialog;
 import android.content.Intent;
@@ -25,8 +26,16 @@
 
 import com.graphhopper.GHRequest;
 import com.graphhopper.GHResponse;
-import com.graphhopper.GraphHopper;
 import com.graphhopper.PathWrapper;
+import com.graphhopper.reader.gtfs.GraphHopperGtfs;
+import com.graphhopper.reader.gtfs.GtfsStorage;
+import com.graphhopper.reader.gtfs.PtFlagEncoder;
+import com.graphhopper.routing.util.CarFlagEncoder;
+import com.graphhopper.routing.util.EncodingManager;
+import com.graphhopper.routing.util.FootFlagEncoder;
+import com.graphhopper.storage.GHDirectory;
+import com.graphhopper.storage.GraphHopperStorage;
+import com.graphhopper.storage.index.LocationIndex;
 import com.graphhopper.util.Constants;
 import com.graphhopper.util.Helper;
 import com.graphhopper.util.Parameters.Algorithms;
@@ -57,6 +66,7 @@
 import java.io.File;
 import java.io.FilenameFilter;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
@@ -65,7 +75,7 @@
 public class MainActivity extends Activity {
     private static final int NEW_MENU_ID = Menu.FIRST + 1;
     private MapView mapView;
-    private GraphHopper hopper;
+    private GraphHopperGtfs hopper;
     private GeoPoint start;
     private GeoPoint end;
     private Spinner localSpinner;
@@ -164,8 +174,10 @@ protected void onPause() {
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        if (hopper != null)
-            hopper.close();
+
+        // TODO: close storage
+        //if (hopper != null)
+        //    hopper.close();
 
         hopper = null;
         // necessary?
@@ -375,19 +387,35 @@ void loadMap(File areaFolder) {
         loadGraphStorage();
     }
 
+    @SuppressLint("StaticFieldLeak")
     void loadGraphStorage() {
         logUser("loading graph (" + Constants.VERSION + ") ... ");
         new GHAsyncTask<Void, Void, Path>() {
             protected Path saveDoInBackground(Void... v) throws Exception {
-                GraphHopper tmpHopp = new GraphHopper().forMobile();
-                tmpHopp.load(new File(mapsFolder, currentArea).getAbsolutePath() + "-gh");
-                log("found graph " + tmpHopp.getGraphHopperStorage().toString() + ", nodes:" + tmpHopp.getGraphHopperStorage().getNodes());
+                String path = new File(mapsFolder, currentArea).getAbsolutePath() + "-gh";
+                final PtFlagEncoder ptFlagEncoder = new PtFlagEncoder();
+                final FootFlagEncoder footFlagEncoder = new FootFlagEncoder();
+                final CarFlagEncoder carFlagEncoder = new CarFlagEncoder();
+                EncodingManager encodingManager = new EncodingManager(Arrays.asList(ptFlagEncoder, footFlagEncoder, carFlagEncoder), 8);
+                GHDirectory directory = GraphHopperGtfs.createGHDirectory(mapsFolder.getAbsolutePath() + "/graph-cache");
+                GtfsStorage gtfsStorage = GraphHopperGtfs.createGtfsStorage();
+                GraphHopperStorage graphHopperStorage = GraphHopperGtfs.createOrLoad(directory,
+                        encodingManager, ptFlagEncoder, gtfsStorage,
+                        Collections.singleton(path + "/cochabamba-gtfs.zip"),
+                        Collections.<String>emptyList());
+                LocationIndex locationIndex = GraphHopperGtfs.createOrLoadIndex(directory, graphHopperStorage);
+                GraphHopperGtfs tmpHopp = GraphHopperGtfs.createFactory(ptFlagEncoder,
+                        GraphHopperGtfs.createTranslationMap(), graphHopperStorage, locationIndex,
+                        gtfsStorage)
+                        .createWithoutRealtimeFeed();
+                tmpHopp.load(path);
                 hopper = tmpHopp;
                 return null;
             }
 
             protected void onPostExecute(Path o) {
                 if (hasError()) {
+                    getError().printStackTrace();
                     logUser("An error happened while creating graph:"
                             + getErrorMessage());
                 } else {
diff --git a/android/build.gradle b/android/build.gradle
index 7105f5a2dd..cb7876440d 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -11,6 +11,8 @@ buildscript {
 
 allprojects {
     repositories {
+        maven { url "https://maven.conveyal.com/" }
+        maven { url "http://download.osgeo.org/webdav/geotools/" }
         google()
         jcenter()
         maven { url "https://oss.sonatype.org/content/groups/public/" }
