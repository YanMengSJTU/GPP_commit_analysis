diff --git a/core/files/krautsand.osm.gz b/core/files/krautsand.osm.gz
new file mode 100644
index 0000000000..d8e1578532
Binary files /dev/null and b/core/files/krautsand.osm.gz differ
diff --git a/core/src/main/java/com/graphhopper/util/PathMerger.java b/core/src/main/java/com/graphhopper/util/PathMerger.java
index 33b3db07ee..b2aeba8f43 100644
--- a/core/src/main/java/com/graphhopper/util/PathMerger.java
+++ b/core/src/main/java/com/graphhopper/util/PathMerger.java
@@ -87,6 +87,10 @@ public void doWork(PathWrapper altRsp, List<Path> paths, Translation tr) {
         List<String> description = new ArrayList<>();
         for (int pathIndex = 0; pathIndex < paths.size(); pathIndex++) {
             Path path = paths.get(pathIndex);
+            if (!path.isFound()) {
+                allFound = false;
+                continue;
+            }
             description.addAll(path.getDescription());
             fullTimeInMillis += path.getTime();
             fullDistance += path.getDistance();
diff --git a/core/src/main/java/com/graphhopper/util/PointList.java b/core/src/main/java/com/graphhopper/util/PointList.java
index d7511aaa1d..0626e99393 100644
--- a/core/src/main/java/com/graphhopper/util/PointList.java
+++ b/core/src/main/java/com/graphhopper/util/PointList.java
@@ -265,7 +265,10 @@ public void add(PointList points) {
         size = newSize;
     }
 
-    public void removeLastPoint(){
+    public void removeLastPoint() {
+        if (size == 0)
+            throw new IllegalStateException("Cannot remove last point from empty PointList");
+
         size--;
     }
 
diff --git a/core/src/test/java/com/graphhopper/util/PointListTest.java b/core/src/test/java/com/graphhopper/util/PointListTest.java
index d11f574e1b..9319b0ff9a 100644
--- a/core/src/test/java/com/graphhopper/util/PointListTest.java
+++ b/core/src/test/java/com/graphhopper/util/PointListTest.java
@@ -20,11 +20,7 @@
 import com.graphhopper.util.shapes.GHPoint;
 import org.junit.Test;
 
-import java.util.Arrays;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotEquals;
-import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.*;
 
 /**
  * @author Peter Karich
@@ -107,10 +103,20 @@ public void testRemoveLast() {
             list.add(1, i);
         }
         assertEquals(10, list.getSize());
-        assertEquals(9, list.getLon(list.getSize()-1), .1);
+        assertEquals(9, list.getLon(list.getSize() - 1), .1);
         list.removeLastPoint();
         assertEquals(9, list.getSize());
-        assertEquals(8, list.getLon(list.getSize()-1), .1);
+        assertEquals(8, list.getLon(list.getSize() - 1), .1);
+
+        list = new PointList(20, false);
+        list.add(1, 1);
+        list.removeLastPoint();
+        try {
+            list.removeLastPoint();
+            fail();
+        } catch (Exception ex) {
+        }
+        assertEquals(0, list.getSize());
     }
 
     @Test
diff --git a/reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java b/reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java
index 9834b60469..359476b86e 100644
--- a/reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java
+++ b/reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java
@@ -486,6 +486,19 @@ public void testNeudrossenfeld() {
         assertEquals(testCollector.toString(), 0, testCollector.errors.size());
     }
 
+    @Test
+    public void testDisconnectedAreaAndMultiplePoints() {
+        List<OneRun> list = new ArrayList<OneRun>();
+        OneRun oneRun = new OneRun();
+        oneRun.add(53.753177, 9.435968, 10, 10);
+        oneRun.add(53.751299, 9.386959, 10, 10);
+        oneRun.add(53.751299, 9.3869, 10, 10);
+        list.add(oneRun);
+
+        runAlgo(testCollector, DIR + "/krautsand.osm.gz", "target/krautsand-gh",
+                list, "car", true, "car", "fastest", true);
+    }
+
     /**
      * @param withCH if true also the CH and LM algorithms will be tested which need
      *               preparation and takes a bit longer
@@ -509,6 +522,8 @@ Graph runAlgo(TestAlgoCollector testCollector, String osmFile,
                     setGraphHopperLocation(graphFile).
                     setEncodingManager(new EncodingManager(importVehicles));
 
+            if (osmFile.contains("krautsand"))
+                hopper.setMinNetworkSize(0, 0);
             // avoid that path.getDistance is too different to path.getPoint.calcDistance
             hopper.setWayPointMaxDistance(0);
 
