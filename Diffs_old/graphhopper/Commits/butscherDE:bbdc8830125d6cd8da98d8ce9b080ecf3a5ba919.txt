diff --git a/api/src/main/java/com/graphhopper/util/shapes/Polygon.java b/api/src/main/java/com/graphhopper/util/shapes/Polygon.java
index de28c78e29..5df39ea330 100644
--- a/api/src/main/java/com/graphhopper/util/shapes/Polygon.java
+++ b/api/src/main/java/com/graphhopper/util/shapes/Polygon.java
@@ -284,4 +284,8 @@ private void addAllLatLonToPoints(int numPoints, List<GHPoint> points) {
     public int size() {
         return this.lat.length;
     }
+
+    public boolean isRepresentingArea() {
+        return this.size() > 2;
+    }
 }
diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java
index 641a6fa98d..77c546ece9 100644
--- a/core/src/main/java/com/graphhopper/GraphHopper.java
+++ b/core/src/main/java/com/graphhopper/GraphHopper.java
@@ -1160,7 +1160,7 @@ private RoutingTemplate buildRoutingTemplate(GHRequest request, GHResponse ghRsp
     }
 
     private boolean validPolygonInRequest(GHRequest request) {
-        return request.getPolygon().size() > 2;
+        return request.getPolygon().isRepresentingArea();
     }
 
     /**
diff --git a/core/src/main/java/com/graphhopper/routing/template/PolygonRoutingTemplate.java b/core/src/main/java/com/graphhopper/routing/template/PolygonRoutingTemplate.java
index f0df32a48a..3ea21b9f50 100644
--- a/core/src/main/java/com/graphhopper/routing/template/PolygonRoutingTemplate.java
+++ b/core/src/main/java/com/graphhopper/routing/template/PolygonRoutingTemplate.java
@@ -34,7 +34,7 @@
     @Override
     public List<Path> calcPaths(QueryGraph queryGraph, RoutingAlgorithmFactory algoFactory, AlgorithmOptions algoOpts) {
         if (this.ghRequest.getPoints().size() != 2) {
-            // TODO implement for more than start & endpoint
+            // TODO implement for more than start & endpoint but also via points
             throw new NotImplementedException();
         }
         this.setCalcPathsParams(queryGraph, algoFactory, algoOpts);
