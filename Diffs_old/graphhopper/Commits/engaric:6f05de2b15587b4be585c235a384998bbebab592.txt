diff --git a/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java b/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java
index 4030bc11bb..4f1f6d1108 100644
--- a/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java
+++ b/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java
@@ -8,63 +8,69 @@
 public class OsAvoidanceDecorator extends AbstractAvoidanceDecorator {
 
 	protected enum AvoidanceType implements EdgeAttribute {
-		Boulders(1) {
+		ARoad(1) {
+			@Override
+			public boolean isValidForWay(Way way) {
+				return hasTag(way, "highway", "primary");
+			}
+		},
+		Boulders(2) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "boulder");
 			}
 		},
-		Cliff(2) {
+		Cliff(4) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "cliff");
 			}
 		},
-		InlandWater(4) {
+		InlandWater(8) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "water")
 						&& way.hasTag("tidal", "no");
 			}
 		},
-		Marsh(8) {
+		Marsh(16) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return way.hasTag("wetland", "marsh");
 			}
 		},
-		QuarryOrPit(16) {
+		QuarryOrPit(32) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "excavation");
 			}
 		},
-		Scree(32) {
+		Scree(64) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "scree");
 			}
 		},
-		Rock(64) {
+		Rock(128) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "rock");
 			}
 		},
-		Mud(128) {
+		Mud(256) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "mud");
 			}
 		},
-		Sand(256) {
+		Sand(512) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "sand");
 			}
 		},
 
-		Shingle(512) {
+		Shingle(1024) {
 			@Override
 			public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "shingle");
@@ -130,7 +136,7 @@ public boolean representedIn(String[] attributes) {
 	}
 
 	protected void defineEncoder(int shift) {
-		wayTypeEncoder = new EncodedValue("WayType", shift, 11, 1, 0, 1024,
+		wayTypeEncoder = new EncodedValue("WayType", shift, 12, 1, 0, 2048,
 				true);
 	}
 
diff --git a/core/src/test/java/com/graphhopper/routing/util/OsAvoidanceDecoratorTest.java b/core/src/test/java/com/graphhopper/routing/util/OsAvoidanceDecoratorTest.java
index 3a705ceb12..d5ef6474fa 100644
--- a/core/src/test/java/com/graphhopper/routing/util/OsAvoidanceDecoratorTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/OsAvoidanceDecoratorTest.java
@@ -44,23 +44,23 @@ public void testMarshAttributeStorage() {
 
     }
 
-//    @Test
-//    public void testMudAttributeStorage() {
-//        Way way = new OSITNWay(1L);
-//        way.setTag("natural", "mud");
-//        long wayFlag = osAvoidances.handleWayTags(way,0);
-//        assertEquals(OsAvoidanceDecorator.AvoidanceType.Mud.getValue(), wayFlag);
-//
-//    }
+    @Test
+    public void testMudAttributeStorage() {
+        Way way = new OSITNWay(1L);
+        way.setTag("natural", "mud");
+        long wayFlag = osAvoidances.handleWayTags(way,0);
+        assertEquals(OsAvoidanceDecorator.AvoidanceType.Mud.getValue(), wayFlag);
 
-//    @Test
-//    public void testSandAttributeStorage() {
-//        Way way = new OSITNWay(1L);
-//        way.setTag("natural", "sand");
-//        long wayFlag = osAvoidances.handleWayTags(way,0);
-//        assertEquals(OsAvoidanceDecorator.AvoidanceType.Sand.getValue(), wayFlag);
-//
-//    }
+    }
+
+    @Test
+    public void testSandAttributeStorage() {
+        Way way = new OSITNWay(1L);
+        way.setTag("natural", "sand");
+        long wayFlag = osAvoidances.handleWayTags(way,0);
+        assertEquals(OsAvoidanceDecorator.AvoidanceType.Sand.getValue(), wayFlag);
+
+    }
 
     @Test
     public void testScreeAttributeStorage() {
@@ -71,14 +71,14 @@ public void testScreeAttributeStorage() {
 
     }
 
-//    @Test
-//    public void testShingleAttributeStorage() {
-//        Way way = new OSITNWay(1L);
-//        way.setTag("natural", "shingle");
-//        long wayFlag = osAvoidances.handleWayTags(way,0);
-//        assertEquals(OsAvoidanceDecorator.AvoidanceType.Shingle.getValue(), wayFlag);
-//
-//    }
+    @Test
+    public void testShingleAttributeStorage() {
+        Way way = new OSITNWay(1L);
+        way.setTag("natural", "shingle");
+        long wayFlag = osAvoidances.handleWayTags(way,0);
+        assertEquals(OsAvoidanceDecorator.AvoidanceType.Shingle.getValue(), wayFlag);
+
+    }
 
 //    @Test
 //    public void testSpoilAttributeStorage() {
@@ -108,6 +108,15 @@ public void testInlandWaterAttributeStorage() {
         assertEquals(OsAvoidanceDecorator.AvoidanceType.InlandWater.getValue(), wayFlag);
 
     }
+   
+   @Test
+   public void testARoadAttributeStorage() {
+       Way way = new OSITNWay(1L);
+       way.setTag("highway", "primary");
+       long wayFlag = osAvoidances.handleWayTags(way,0);
+       assertEquals(OsAvoidanceDecorator.AvoidanceType.ARoad.getValue(), wayFlag);
+
+   }
 
     @Test
     public void testQuarryOrPitAttributeStorage() {
diff --git a/web/src/main/webapp/index.html b/web/src/main/webapp/index.html
index e075e32d41..5d01df8697 100644
--- a/web/src/main/webapp/index.html
+++ b/web/src/main/webapp/index.html
@@ -67,19 +67,17 @@
                             <tr>
                                 <th>Avoid Hazards</th>
                             </tr>   
-                            <tr><td>
-                                	<input type="checkbox" name="Boulders" value="boulders" >Boulders
-                            </td></tr><tr><td>        <input type="checkbox" name="Cliff" value="cliff" >Cliff
-                            </td></tr><tr><td>        <input type="checkbox" name="InlandWater" value="inlandwater" >Inland Water
-                            </td></tr><tr><td>        <input type="checkbox" name="Marsh" value="marsh" >Marsh
-                            </td></tr><tr><td>        <input type="checkbox" name="QuarryOrPit" value="quarryorpit" >Quarry Or Pit
-                            </td></tr><tr><td>        <input type="checkbox" name="Scree" value="scree" >Scree
-                            </td></tr><tr><td>        <input type="checkbox" name="Rock" value="rock" >Rock
-                            </td></tr><tr><td>        <input type="checkbox" name="Mud" value="mud" >Mud
-                            </td></tr><tr><td>        <input type="checkbox" name="Sand" value="sand">Sand
-                            </td></tr><tr><td>        <input type="checkbox" name="Shingle" value="shingle" >Shingle
-                                    </td>
-                            </tr>
+                            <tr><td><input type="checkbox" name="avoidances[]" value="boulders" >Boulders
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="cliff" >Cliff
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="inlandwater" >Inland Water
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="marsh" >Marsh
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="quarryorpit" >Quarry Or Pit
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="scree" >Scree
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="rock" >Rock
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="mud" >Mud
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="sand">Sand
+                            </td></tr><tr><td><input type="checkbox" name="avoidances[]" value="shingle" >Shingle
+                            </td></tr>
                         </table>
                     <!--
                     - Traffic Signals now operate between 0 and 3 (4 variations)
