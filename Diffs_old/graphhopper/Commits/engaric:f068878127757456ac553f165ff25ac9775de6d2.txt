diff --git a/acceptancetesting/pom.xml b/acceptancetesting/pom.xml
index 2629c9042a..432f052d0b 100644
--- a/acceptancetesting/pom.xml
+++ b/acceptancetesting/pom.xml
@@ -3,14 +3,13 @@
 	<modelVersion>4.0.0</modelVersion>
 	<groupId>uk.co.ordnancesurvey.graphhopper</groupId>
 	<artifactId>graphhopper-acceptancetesting</artifactId>
-	<version>0.0.1-SNAPSHOT</version>
 	<name>GraphHopper Acceptance Testing</name>
 	<packaging>jar</packaging>
 
 	<parent>
 		<groupId>com.graphhopper</groupId>
 		<artifactId>graphhopper-parent</artifactId>
-		<version>0.4-SNAPSHOT</version>
+		<version>0.4.5.8-SNAPSHOT</version>
 	</parent>
 
 	<repositories>
diff --git a/acceptancetesting/src/test/cucumber/vehicleRouting-Exeter.feature b/acceptancetesting/src/test/cucumber/vehicleRouting-Exeter.feature
index c1c83f9c2d..f2cd0ed813 100644
--- a/acceptancetesting/src/test/cucumber/vehicleRouting-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/vehicleRouting-Exeter.feature
@@ -148,10 +148,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  # No Turns Restrictions
-  # Below test failing as it is going through no turn and and has been reported in jira as [ROUTE-198]
-  @Routing @KnownIssues
-  Scenario Outline: Verify  No Turn  Restrictions on a Route (Western Way-Exeter)
+ 
+  @Routing
+  Scenario Outline: Verify  No Turn  Restrictions on a Route (Western Way-Exeter ROUTE-198)
     Given I have route point as
       | pointA              | pointB              |
       | 50.726735,-3.520955 | 50.726914,-3.522033 |
@@ -160,15 +159,15 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.728509,-3.520647 | At roundabout, take exit 1 onto SIDWELL STREET | 282.0   | W         | 16437 | 212.5    |           |
+      | 2             | 50.725422,-3.522261 | At roundabout, take exit 5 onto B3212 (WESTERN WAY) | 145.0  | SE         | 19693 | 298.0    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  # Below test failing as it is going through no entry and has been reported in jira as [ROUTE-199]
-  @Routing @KnownIssues
-  Scenario Outline: Verify  No entry Restriction (Denmark Road-Exeter)
+  #Test failing as it is going through no entry instead of taking the mandatory turn [ROUTE-199]
+  @Routing  @KnownIssues
+  Scenario Outline: Verify  No entry Restriction (Denmark Road-Exeter - ROUTE-199)
     Given I have route point as
       | pointA              | pointB              |
       | 50.724901,-3.521588 | 50.724524,-3.520923 |
@@ -176,8 +175,8 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance | avoidance |
-      | 3             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    |           |
+      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.72411,-3.518719 | Turn right onto SPICER ROAD | 203.0   | SW        | 6370 | 84.9     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -218,7 +217,7 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
 
   # Mandatory Turn Restrictions
   @Routing
-  Scenario Outline: Verify  Mandatory Turn with exceptions  at Exeter area
+  Scenario Outline: Verify  (Mandatory Turn with exceptions)  at Exeter area
     Given I have route point as
       | pointA              | pointB              |
       | 50.726823,-3.524432 | 50.725423,-3.526813 |
@@ -226,47 +225,29 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 133.0   | SE        | 529  | 7.1      |           |
-
-    Examples: 
-      | vehicleType | avoidances | routeType |
-      | car         |            | fastest   |
-
-  #Test failing as it is going through no entry instead of taking the mandatory turn [ROUTE-199]
-  @Routing @KnownIssues
-  Scenario Outline: Verify  Mandatory Turn at Exeter area(DENMARK ROAD)
-    Given I have route point as
-      | pointA              | pointB              |
-      | 50.724777,-3.520811 | 50.724394,-3.520953 |
-    And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
-    When I request for a route
-    Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    |           |
+      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 128.0   | SE        | 11153 | 139.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @KnownIssues
+  @Routing 
   Scenario Outline: Verify  Mandatory Turn at Exeter area(COLLEGE ROAD)
     Given I have route point as
       | pointA             | pointB              |
-      | 50.723597,-3.51776 | 50.723773,-3.517251 |
+      | 50.722624,-3.51851|50.725444,-3.515867|
     And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.72133,-3.519451 | Turn right onto SPICER ROAD | 278     | W         | 41233 | 400.903  |           |
-
-    Examples: 
+      | 2             | 50.723837,-3.517549 | Turn sharp left onto HEAVITREE ROAD (B3183)| 289.0     | W         | 13694 | 182.6  |           |
+   Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @KnownIssues
+  @Routing 
   Scenario Outline: Verify  Mandatory Turn Restriction (Denmark Road-Exeter)
     Given I have route point as
       | pointA              | pointB             |
@@ -349,8 +330,8 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
       | car         |            | fastest   |
 
   # Ford
-  #Test failing as it is not finding any route for car and it is working  for emv
-  @Routing @KnownIssues
+
+  @Routing 
   Scenario Outline: Verify  Ford  Restrictions on a Route (BONHAY Road-Exeter)
     Given I have route point as
       | pointA             | pointB              |
@@ -364,7 +345,7 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | car         |            | fastest   |
+      | emv         |            | fastest   |
 
   @Routing
   Scenario Outline: Verify  Ford  Restrictions on a Route (Quadrangle Road-Exeter)
@@ -456,6 +437,7 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
       | 50.724316,-3.521008 | 50.72413,-3.518874 |
     And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
+    And I have private as "false"
     When I request for a route
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco      |
@@ -888,8 +870,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                       | azimuth | direction | time  | distance | avoidance |
+      | 1             | 50.732162,-3.535482 | Continue onto PRINCE OF WALES ROAD | 257.0   | W         | 13294 | 177.3    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -921,8 +904,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 2.0     | N         | 11549 | 142.8    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1040,8 +1024,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 9046 | 268.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1073,8 +1058,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 7992 | 237.6    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1192,8 +1178,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.727229,-3.536673 | Turn right onto BYSTOCK TERRACE | 154.0   | SE        | 4527 | 60.4     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1225,8 +1212,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco        | waypointdesc               | azimuth | direction | time  | distance | avoidance |
+      | 3             | 50.72956,-3.53876 | Turn left onto HOWELL ROAD | 261.0   | W         | 11274 | 150.3    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1276,8 +1264,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco         | waypointdesc                  | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.729609,-3.52599 | Turn right onto BLACKALL ROAD | 277.0   | W         | 1389 | 41.3     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1327,8 +1316,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.718195,-3.543191 | Turn slight left onto BULLER ROAD | 8.0     | N         | 2914 | 38.9     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1378,8 +1368,9 @@ Feature: Verify a route from A to B for Vehicle (Exeter Only)
     And I have weighting as "<routeType>"
     And I have private as "false"
     When I request for a route
-    Then I should be able to verify the response message as "Not found"
-    Then I should be able to verify the statuscode as "400"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.734191,-3.521511 | Turn right onto CULVERLAND ROAD | 158.0   | S         | 5842 | 173.6    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
diff --git a/core/pom.xml b/core/pom.xml
index 3a0c6bf0eb..499c1c9bf0 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -13,7 +13,7 @@
     <parent>
         <groupId>com.graphhopper</groupId>
         <artifactId>graphhopper-parent</artifactId>    	
-	<version>0.4.5.8-SNAPSHOT</version>
+	<version>0.4.5.9-SNAPSHOT</version>
     </parent>
         
     <properties>  
diff --git a/pom.xml b/pom.xml
index 61da9ad7f3..7a1992f990 100644
--- a/pom.xml
+++ b/pom.xml
@@ -5,7 +5,7 @@
 	<groupId>com.graphhopper</groupId>
 	<artifactId>graphhopper-parent</artifactId>
 	<name>GraphHopper Parent Project</name>
-	<version>0.4.5.8-SNAPSHOT</version>
+	<version>0.4.5.9-SNAPSHOT</version>
 	<packaging>pom</packaging>
 	<url>http://graphhopper.com</url>
 	<inceptionYear>2012</inceptionYear>
diff --git a/tools/pom.xml b/tools/pom.xml
index 484adedf77..86eafc07c7 100644
--- a/tools/pom.xml
+++ b/tools/pom.xml
@@ -13,7 +13,7 @@
 	<parent>
 		<groupId>com.graphhopper</groupId>
 		<artifactId>graphhopper-parent</artifactId>
-		<version>0.4.5.8-SNAPSHOT</version>
+		<version>0.4.5.9-SNAPSHOT</version>
 	</parent>
 	<repositories>
 		<repository>
diff --git a/web/pom.xml b/web/pom.xml
index f7a3a0740a..29979df6e7 100644
--- a/web/pom.xml
+++ b/web/pom.xml
@@ -11,7 +11,7 @@
 	<parent>
 		<groupId>com.graphhopper</groupId>
 		<artifactId>graphhopper-parent</artifactId>
-		<version>0.4.5.8-SNAPSHOT</version>
+		<version>0.4.5.9-SNAPSHOT</version>
 	</parent>
 	<properties>
 		<jetty.version>8.1.16.v20140903</jetty.version>
