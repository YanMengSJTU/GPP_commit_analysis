diff --git a/web/src/main/java/com/graphhopper/http/GHBaseServlet.java b/web/src/main/java/com/graphhopper/http/GHBaseServlet.java
index 6da76e22d3..995e192fc8 100644
--- a/web/src/main/java/com/graphhopper/http/GHBaseServlet.java
+++ b/web/src/main/java/com/graphhopper/http/GHBaseServlet.java
@@ -39,6 +39,7 @@
 import javax.xml.transform.dom.DOMSource;
 import javax.xml.transform.stream.StreamResult;
 
+import org.apache.commons.lang.StringEscapeUtils;
 import org.eclipse.jetty.http.HttpStatus;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -231,7 +232,7 @@ protected void processResponseErrors(GHResponse rsp,
             Map<String, String> map = new HashMap<String, String>();
             json.put("error", map);
             Throwable throwable = rsp.getErrors().get(0);
-            map.put("message", throwable.getMessage());
+            map.put("message", StringEscapeUtils.escapeHtml(throwable.getMessage()));
             String statusCode = "" + HttpStatus.BAD_REQUEST_400;
             if (throwable instanceof APIException)
             {
@@ -244,7 +245,7 @@ protected void processResponseErrors(GHResponse rsp,
             for (Throwable t : rsp.getErrors())
             {
                 Map<String, String> hintMap = new HashMap<String, String>();
-                hintMap.put("message", t.getMessage());
+                hintMap.put("message", StringEscapeUtils.escapeHtml(t.getMessage()));
                 if (internalErrorsAllowed)
                 {
                     hintMap.put("details", t.getClass().getName());
diff --git a/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java b/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java
index 21d50ee754..827dedd292 100644
--- a/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java
+++ b/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java
@@ -61,6 +61,9 @@
 
 	@Mock
 	HttpServletResponse httpServletResponse;
+	
+	@Mock
+	PrintWriter printWriter;
 
 	Map<String, String[]> allParameters;
 
@@ -262,6 +265,49 @@ public void testGetGHResponseWithPartialPoint() throws IOException,
                         "Point 12 is not a valid point. Point must be a comma separated coordinate in WGS84 projection.",
                         ghResponse.getErrors().get(0).getMessage());
         }
+	
+	@Test
+        public void testGetGHResponseWithXSSInjection() throws IOException,
+                MissingParameterException, NoSuchParameterException, InvalidParameterException, ServletException
+        {
+                allParameters.put("point", new String[] { "<iMg SrC=vBsCrIpT:MsgBox(28224)>" });
+                allParameters.put("vehicle", new String[] { VEHICLES[0] });
+                allParameters.put("locale", new String[] { LOCALES[0] });
+                when(httpServletRequest.getParameterMap()).thenReturn(allParameters);
+                when(httpServletResponse.getWriter()).thenReturn(printWriter);
+                graphHopperServlet.doGet(httpServletRequest,
+                        httpServletResponse);
+                verify(printWriter).append("{" + System.lineSeparator()
+                        + "  \"error\": {" + System.lineSeparator()
+                        + "    \"message\": \"Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.\","  + System.lineSeparator()
+                        + "    \"statuscode\": \"400\""  + System.lineSeparator()
+                        + "  },"  + System.lineSeparator()
+                        + "  \"hints\": [{\"message\": \"Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.\"}]"  + System.lineSeparator()
+                        + "}");
+        }
+	
+	@Test
+        public void testGetGHResponseWithXSSInjectionXML() throws IOException,
+                MissingParameterException, NoSuchParameterException, InvalidParameterException, ServletException
+        {
+                allParameters.put("point", new String[] { "<iMg SrC=vBsCrIpT:MsgBox(28224)>" });
+                allParameters.put("vehicle", new String[] { VEHICLES[0] });
+                allParameters.put("locale", new String[] { LOCALES[0] });
+                allParameters.put("type", new String[] { "gpx" });
+                when(httpServletRequest.getParameterMap()).thenReturn(allParameters);
+                when(httpServletResponse.getWriter()).thenReturn(printWriter);
+                graphHopperServlet.doGet(httpServletRequest,
+                        httpServletResponse);
+                verify(printWriter).append("<?xml version=\"1.0\" "
+                        + "encoding=\"UTF-8\" standalone=\"no\"?>"
+                        + "<gpx creator=\"GraphHopper\" version=\"1.1\">"
+                        + "<metadata><extensions>"
+                        + "<message>Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.</message>"
+                        + "<hints>"
+                        + "<error message=\"Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.\"/>"
+                        + "</hints>"
+                        + "</extensions></metadata></gpx>");
+        }
         
 	
 	@Test
