diff --git a/.gitattributes b/.gitattributes
index ca8f2dfd33..59d7fcd3f4 100644
--- a/.gitattributes
+++ b/.gitattributes
@@ -6,4 +6,4 @@
 *.java text
 *.xml text
 *.js text
-*.css text
\ No newline at end of file
+*.css text
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
index 22fbf2a56a..f33f6ce702 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
@@ -1,7 +1,6 @@
 package uk.co.ordnancesurvey.routing;
 
 import java.io.IOException;
-import java.sql.Date;
 import java.text.ParseException;
 import java.util.Calendar;
 import java.util.List;
@@ -92,9 +91,11 @@ public void I_should_be_able_to_verify_the_trackpoints_not_on_the_route_map(
 	public void closeBrowser(Scenario sc) {
 
 		if (sc.isFailed()) {
-			Calendar cal = Calendar.getInstance();
+
 			try {
-				graphUiUtil.takescreen("Screenshot" + cal.getTimeInMillis());
+				byte[] screeenshot = graphUiUtil.takescreenAsBiteArray();
+				sc.embed(screeenshot, "image/png");
+
 			} catch (IOException e) {
 				// TODO Auto-generated catch block
 				e.printStackTrace();
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperServiceUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperServiceUtil.java
index fa4e85b428..97e8dab003 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperServiceUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperServiceUtil.java
@@ -1,15 +1,15 @@
 	package uk.co.ordnancesurvey.routing;
-	import java.util.HashSet;
+	import static org.junit.Assert.assertTrue;
 
-	import org.alternativevision.gpx.beans.Route;
-	import org.alternativevision.gpx.beans.Waypoint;
+import java.util.HashSet;
 
-	import org.slf4j.Logger;
-	import org.slf4j.LoggerFactory;
+import org.alternativevision.gpx.beans.Route;
+import org.alternativevision.gpx.beans.Waypoint;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
-	import uk.co.ordnancesurvey.gpx.extensions.ExtensionConstants;
-	import uk.co.ordnancesurvey.gpx.graphhopper.GraphHopperGPXParserRouteTest;
-	import static org.junit.Assert.assertTrue;
+import uk.co.ordnancesurvey.gpx.extensions.ExtensionConstants;
+import uk.co.ordnancesurvey.gpx.graphhopper.GraphHopperGPXParserRouteTest;
 
 public class GraphHopperServiceUtil {
 	
@@ -36,6 +36,7 @@ public void testWayPointIsOnRoute() {
 			//Waypoint wayPoint = getTestWayPoint();
 			HashSet<Route> hs = ghrt.getRoutes();
 			
+			
 			//assertTrue(ghrt.isWayPointOnRoute(wayPoint,hs.iterator().next()));
 		}
 		
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 9335cf074d..3966876d00 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -356,7 +356,7 @@ public void isTrackPointNotonRouteMap(List<Map> trackPointsList)
 
 	}
 
-	public void takescreen(String testID) throws IOException {
+	public BufferedImage takescreen(String testID) throws IOException {
 
 		File file = new File(testID + "_screenshot.png");
 
@@ -365,9 +365,20 @@ public void takescreen(String testID) throws IOException {
 		// actualMap = ImageIO.read(screenshot);
 
 		ImageIO.write(actualMap, "png", file);
+		return actualMap;
 
 	}
+	
+	public byte[] takescreenAsBiteArray() throws IOException {
 
+		byte[] screenshot = takeScreenShotAsBiteArray();
+
+		return screenshot;
+
+	}
+
+	
+	
 	public void compareMapImage(String expectedMap, String testID)
 			throws IOException {
 		takescreen(testID);
@@ -408,6 +419,7 @@ public BufferedImage resize(BufferedImage img, int newW, int newH) {
 		g.drawImage(img, 0, 0, newW, newH, 0, 0, w, h, null);
 		g.dispose();
 		return dimg;
+		
 	}
 
 }
diff --git a/acceptancetesting/src/test/cucumber/routing.feature b/acceptancetesting/src/test/cucumber/routing.feature
index 72ed7b9f8c..6a68370752 100644
--- a/acceptancetesting/src/test/cucumber/routing.feature
+++ b/acceptancetesting/src/test/cucumber/routing.feature
@@ -3,7 +3,7 @@ Feature: Verify a route from A to B
     I want to get a route from location A to location B using the routing service
     And route should be the fastest route and contain the waypoints,restrictions,time and other instructions
 
-  @Routing
+  @Routing @New
   Scenario Outline: Verify  waypoints on a Route
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
@@ -242,3 +242,36 @@ Feature: Verify a route from A to B
     Examples: 
       | pointA             | pointB              | routetype |
       | 51.47118,-0.363609 | 51.470651,-0.363495 | car       |
+
+  @Routing @KnownIssues
+  Scenario Outline: Verify  No Turn Restriction (Denmark Road-Exeter)
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Then I should be able to verify the waypoints not on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time | distance |
+      | 2             | 50.724703,-3.520835 | turn right onto DENMARK ROAD | 208     | SW        | 2141 | 20.822   |
+
+    Examples: 
+      | pointA              | pointB              | routetype |
+      | 50.724901,-3.521588 | 50.724524,-3.520923 | car       |
+
+  @Routing @KnownIssues
+  Scenario Outline: Verify  Mandatory Turn Restriction (Denmark Road-Exeter)
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Then I should be able to verify the waypoints not on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time  | distance |
+      | 2             | 50.724703,-3.520835 | Turn right onto HEAVITREE ROAD (B3183) | 105     | E         | 15636 | 152.027  |
+
+    Examples: 
+      | pointA              | pointB             | routetype |
+      | 50.724378,-3.520993 | 50.72413,-3.518874 | car       |
+
+  @Routing @KnownIssues
+  Scenario Outline: Verify  Private Road Restricted Access (Denmark Road-Exeter)
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Then I should be able to verify the trackPoints not on the route map:
+      | trackPointco      |
+      | 50.723966,-3.5198 |
+
+    Examples: 
+      | pointA              | pointB             | routetype |
+      | 50.724316,-3.521008 | 50.72413,-3.518874 | car       |
diff --git a/acceptancetesting/src/test/resources/test.properties b/acceptancetesting/src/test/resources/test.properties
index 333a647468..b4a039c701 100644
--- a/acceptancetesting/src/test/resources/test.properties
+++ b/acceptancetesting/src/test/resources/test.properties
@@ -1,10 +1,12 @@
 graphhopperUrl=http://os-graphhopper.elasticbeanstalk.com/route?
 graphHopperWebUrl=http://os-graphhopper.elasticbeanstalk.com/
-webDriverHubUrl=http://ND27983.ordsvy.gov.uk:5555/wd/hub
+webDriverHubUrl=http://ND28350.ordsvy.gov.uk:5555/wd/hub
+#webDriverHubUrl=http://ND27983.ordsvy.gov.uk:5555/wd/hub
+#webDriverHubUrl=http://localhost:5555/wd/hub
 #webDriverHubUrl=http://10.160.38.128:5555/wd/hub
 #testON=Web,Service  // Default both
 testON=
 traceEnabled=false
 plugInAuthLocation=src/test/resources/autoauth-2.1-fx+fn.xpi
-excludedPlatforms=MAC:chrome,MAC:firefox,WINDOWS:chrome,WINDOWS:internet explorer,WINDOWS:firefox
+excludedPlatforms=MAC:chrome,MAC:firefox,WINDOWS:chrome,WINDOWS:firefox,LINUX:firefox
 browserWindowDimension=1920,800
\ No newline at end of file
diff --git a/tools/pom.xml b/tools/pom.xml
index 44f0ebd1ed..e0e2d7902c 100644
--- a/tools/pom.xml
+++ b/tools/pom.xml
@@ -43,6 +43,11 @@
             <artifactId>commons-compress</artifactId>
             <version>1.8.1</version>
         </dependency>
+        <dependency>
+        	<groupId>org.slf4j</groupId>
+        	<artifactId>slf4j-simple</artifactId>
+        	<version>1.7.7</version>
+        </dependency>
     </dependencies>
     <build>
         <plugins>
