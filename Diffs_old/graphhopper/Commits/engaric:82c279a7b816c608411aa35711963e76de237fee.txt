diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/AbstractOsDpnOsmAttibuteMappingVisitor.java b/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsToOsmAttibuteMappingVisitor.java
similarity index 81%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/AbstractOsDpnOsmAttibuteMappingVisitor.java
rename to core/src/main/java/com/graphhopper/reader/osgb/AbstractOsToOsmAttibuteMappingVisitor.java
index 399f557299..9898f6c865 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/AbstractOsDpnOsmAttibuteMappingVisitor.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsToOsmAttibuteMappingVisitor.java
@@ -1,4 +1,4 @@
-package com.graphhopper.reader.osgb.dpn;
+package com.graphhopper.reader.osgb;
 
 import com.graphhopper.reader.Way;
 import com.graphhopper.routing.util.OsFlagUtils;
@@ -6,7 +6,7 @@
 /**
  * Created by sadam on 13/02/15.
  */
-public abstract class AbstractOsDpnOsmAttibuteMappingVisitor implements OsDpnOsmAttributeMappingVisitor {
+public abstract class AbstractOsToOsmAttibuteMappingVisitor implements OsToOsmAttributeMappingVisitor {
     protected String visitorName = this.getClass().getSimpleName().toLowerCase();
 
     @Override
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnOsmAttributeMappingVisitor.java b/core/src/main/java/com/graphhopper/reader/osgb/OsToOsmAttributeMappingVisitor.java
similarity index 74%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnOsmAttributeMappingVisitor.java
rename to core/src/main/java/com/graphhopper/reader/osgb/OsToOsmAttributeMappingVisitor.java
index 66eed80667..e1a6e7baff 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnOsmAttributeMappingVisitor.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/OsToOsmAttributeMappingVisitor.java
@@ -1,11 +1,11 @@
-package com.graphhopper.reader.osgb.dpn;
+package com.graphhopper.reader.osgb;
 
 import com.graphhopper.reader.Way;
 
 /**
  * Created by sadam on 13/02/15.
  */
-public interface OsDpnOsmAttributeMappingVisitor {
+public interface OsToOsmAttributeMappingVisitor {
     /**
      *
      * @param attributeValue
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
index cebdf35916..ee854f4bbc 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
@@ -35,34 +35,35 @@
 import org.slf4j.LoggerFactory;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.additionalRights.AdoptedByNationalCycleRoute;
-import com.graphhopper.reader.osgb.dpn.additionalRights.AdoptedByOtherCycleRoute;
-import com.graphhopper.reader.osgb.dpn.additionalRights.AdoptedByRecreationalRoute;
-import com.graphhopper.reader.osgb.dpn.additionalRights.WithinAccessLand;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Boulders;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Cliff;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Foreshore;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.InlandWater;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.InvalidPotentialHazardException;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Marsh;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Mud;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.QuarryOrPit;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Rock;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Sand;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Scree;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Shingle;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.Spoil;
-import com.graphhopper.reader.osgb.dpn.potentialHazards.TidalWater;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.BridleWay;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.BywayOpenToAllTraffic;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.CorePath;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.Footpath;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.None;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.NormalPermissibleUses;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.OtherRouteWithPublicAccess;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.PermissiveBridleWay;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.PermissivePath;
-import com.graphhopper.reader.osgb.dpn.rightOfWay.RestrictedByway;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.additionalrights.AdoptedByNationalCycleRoute;
+import com.graphhopper.reader.osgb.dpn.additionalrights.AdoptedByOtherCycleRoute;
+import com.graphhopper.reader.osgb.dpn.additionalrights.AdoptedByRecreationalRoute;
+import com.graphhopper.reader.osgb.dpn.additionalrights.WithinAccessLand;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Boulders;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Cliff;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Foreshore;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.InlandWater;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.InvalidPotentialHazardException;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Marsh;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Mud;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.QuarryOrPit;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Rock;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Sand;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Scree;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Shingle;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Spoil;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.TidalWater;
+import com.graphhopper.reader.osgb.dpn.rightofway.BridleWay;
+import com.graphhopper.reader.osgb.dpn.rightofway.BywayOpenToAllTraffic;
+import com.graphhopper.reader.osgb.dpn.rightofway.CorePath;
+import com.graphhopper.reader.osgb.dpn.rightofway.Footpath;
+import com.graphhopper.reader.osgb.dpn.rightofway.None;
+import com.graphhopper.reader.osgb.dpn.rightofway.NormalPermissibleUses;
+import com.graphhopper.reader.osgb.dpn.rightofway.OtherRouteWithPublicAccess;
+import com.graphhopper.reader.osgb.dpn.rightofway.PermissiveBridleWay;
+import com.graphhopper.reader.osgb.dpn.rightofway.PermissivePath;
+import com.graphhopper.reader.osgb.dpn.rightofway.RestrictedByway;
 
 /**
  * Represents an OSM Way
@@ -77,13 +78,13 @@
     protected String endCoord;
     private String[] wayCoords;
     private static final Logger logger = LoggerFactory.getLogger(OsDpnWay.class);
-    private static OsDpnOsmAttributeMappingVisitor[] RIGHT_OF_WAY_VISITORS = { new BridleWay(),
+    private static OsToOsmAttributeMappingVisitor[] RIGHT_OF_WAY_VISITORS = { new BridleWay(),
         new BywayOpenToAllTraffic(), new CorePath(), new Footpath(), new None(), new NormalPermissibleUses(),
         new OtherRouteWithPublicAccess(), new PermissiveBridleWay(), new PermissivePath(), new RestrictedByway() };
-    private static OsDpnOsmAttributeMappingVisitor[] POTENTIAL_HAZARD_VISITORS = { new Boulders(), new Cliff(),
+    private static OsToOsmAttributeMappingVisitor[] POTENTIAL_HAZARD_VISITORS = { new Boulders(), new Cliff(),
         new Marsh(), new Mud(), new Sand(), new Scree(), new Shingle(), new Spoil(), new Rock(), new TidalWater(),
         new QuarryOrPit(), new InlandWater(), new Foreshore() };
-    private static OsDpnOsmAttributeMappingVisitor[] ADDITIONAL_RIGHTS_VISITORS = { new AdoptedByNationalCycleRoute(),
+    private static OsToOsmAttributeMappingVisitor[] ADDITIONAL_RIGHTS_VISITORS = { new AdoptedByNationalCycleRoute(),
         new AdoptedByOtherCycleRoute(), new AdoptedByRecreationalRoute(), new WithinAccessLand() };
 
     public static boolean THROW_EXCEPTION_ON_INVALID_HAZARD = false;
@@ -118,7 +119,7 @@ public OsDpnWay(String id) {
     protected int handleAdditionalRights(XMLStreamReader parser) throws XMLStreamException {
         String access = parser.getElementText();
         if ("true".equals(access)) {
-            for (OsDpnOsmAttributeMappingVisitor visitor : ADDITIONAL_RIGHTS_VISITORS) {
+            for (OsToOsmAttributeMappingVisitor visitor : ADDITIONAL_RIGHTS_VISITORS) {
                 visitor.visitWayAttribute(parser.getLocalName().toLowerCase(), this);
             }
         }
@@ -154,7 +155,7 @@ protected int handlePhysicalLevel(XMLStreamReader parser) throws XMLStreamExcept
     @Override
     protected int handleRightOfUse(XMLStreamReader parser) throws XMLStreamException {
         String attributeValue = parser.getElementText().replaceAll(" ", "").toLowerCase();
-        for (OsDpnOsmAttributeMappingVisitor visitor : RIGHT_OF_WAY_VISITORS) {
+        for (OsToOsmAttributeMappingVisitor visitor : RIGHT_OF_WAY_VISITORS) {
             visitor.visitWayAttribute(attributeValue, this);
         }
         return parser.getEventType();
@@ -184,7 +185,7 @@ private void visitPotentialHazards(String attributeValue) throws XMLStreamExcept
         // <dpn:potentialHazardCrossed>Boulders, Inland
         // Wat</dpn:potentialHazardCrossed>
         boolean handled = false;
-        for (OsDpnOsmAttributeMappingVisitor visitor : POTENTIAL_HAZARD_VISITORS) {
+        for (OsToOsmAttributeMappingVisitor visitor : POTENTIAL_HAZARD_VISITORS) {
             handled |= visitor.visitWayAttribute(attributeValue, this);
         }
         if (!handled) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByNationalCycleRoute.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByNationalCycleRoute.java
similarity index 64%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByNationalCycleRoute.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByNationalCycleRoute.java
index 85f5527f2f..7dd5db433c 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByNationalCycleRoute.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByNationalCycleRoute.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.additionalRights;
+package com.graphhopper.reader.osgb.dpn.additionalrights;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A link part of the National Cycle Network
@@ -11,7 +11,7 @@
  * @author phopkins
  *
  */
-public class AdoptedByNationalCycleRoute extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class AdoptedByNationalCycleRoute extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByOtherCycleRoute.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByOtherCycleRoute.java
similarity index 70%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByOtherCycleRoute.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByOtherCycleRoute.java
index ab453aaba4..a937f1a2b6 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByOtherCycleRoute.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByOtherCycleRoute.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.additionalRights;
+package com.graphhopper.reader.osgb.dpn.additionalrights;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  *
@@ -13,7 +13,7 @@
  * @author phopkins
  *
  */
-public class AdoptedByOtherCycleRoute extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class AdoptedByOtherCycleRoute extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByRecreationalRoute.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByRecreationalRoute.java
similarity index 61%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByRecreationalRoute.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByRecreationalRoute.java
index 37001354f0..42a288719f 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByRecreationalRoute.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/AdoptedByRecreationalRoute.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.additionalRights;
+package com.graphhopper.reader.osgb.dpn.additionalrights;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  *
@@ -12,7 +12,7 @@
  * @author phopkins
  *
  */
-public class AdoptedByRecreationalRoute extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class AdoptedByRecreationalRoute extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/WithinAccessLand.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/WithinAccessLand.java
similarity index 65%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/WithinAccessLand.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/WithinAccessLand.java
index dee8b7a5df..d3558cddca 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalRights/WithinAccessLand.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/additionalrights/WithinAccessLand.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.additionalRights;
+package com.graphhopper.reader.osgb.dpn.additionalrights;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  *
@@ -14,7 +14,7 @@
  * @author phopkins
  *
  */
-public class WithinAccessLand extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class WithinAccessLand extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Boulders.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Boulders.java
deleted file mode 100644
index dbdfea1ab9..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Boulders.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Boulders extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "boulders");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Cliff.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Cliff.java
deleted file mode 100644
index e7f91d26a5..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Cliff.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Cliff extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "cliff");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Foreshore.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Foreshore.java
deleted file mode 100644
index 8bf388e8a7..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Foreshore.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Foreshore extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "water", "tidal");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Marsh.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Marsh.java
deleted file mode 100644
index 1bf6f1b3a4..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Marsh.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Marsh extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "wetland", "marsh");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Mud.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Mud.java
deleted file mode 100644
index fad73016c7..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Mud.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Mud extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "mud");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/QuarryOrPit.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/QuarryOrPit.java
deleted file mode 100644
index 55d7c8fe62..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/QuarryOrPit.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class QuarryOrPit extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "excavation");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Rock.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Rock.java
deleted file mode 100644
index ad83eaf547..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Rock.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Rock extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "rocks");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Sand.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Sand.java
deleted file mode 100644
index 1a78705c13..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Sand.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Sand extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "sand");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Scree.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Scree.java
deleted file mode 100644
index 80e50d909c..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Scree.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Scree extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "scree");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Shingle.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Shingle.java
deleted file mode 100644
index 6ab889b21e..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Shingle.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Shingle extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "natural", "shingle");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Spoil.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Spoil.java
deleted file mode 100644
index 214ab87c73..0000000000
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/Spoil.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
-
-import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
-
-/**
- * Created by sadam on 13/02/15.
- */
-public class Spoil extends AbstractOsDpnOsmAttibuteMappingVisitor {
-
-    @Override
-    protected void applyAttributes(Way way) {
-        setOrAppendTag(way, "man_made", "spoil_heap");
-    }
-
-}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Boulders.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Boulders.java
new file mode 100644
index 0000000000..1eaf91c5e7
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Boulders.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Boulders extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "boulders");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Cliff.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Cliff.java
new file mode 100644
index 0000000000..d47e08fa52
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Cliff.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Cliff extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "cliff");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Foreshore.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Foreshore.java
new file mode 100644
index 0000000000..3919e45a0c
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Foreshore.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Foreshore extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "water", "tidal");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InlandWater.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/InlandWater.java
similarity index 53%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InlandWater.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/InlandWater.java
index a1ad54e788..80d7415f09 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InlandWater.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/InlandWater.java
@@ -1,12 +1,12 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Created by sadam on 13/02/15.
  */
-public class InlandWater extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class InlandWater extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InvalidPotentialHazardException.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/InvalidPotentialHazardException.java
similarity index 78%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InvalidPotentialHazardException.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/InvalidPotentialHazardException.java
index 2d7e2971c0..87978f301f 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InvalidPotentialHazardException.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/InvalidPotentialHazardException.java
@@ -1,4 +1,4 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
 
 import javax.xml.stream.XMLStreamException;
 
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Marsh.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Marsh.java
new file mode 100644
index 0000000000..15e0cd6dc6
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Marsh.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Marsh extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "wetland", "marsh");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Mud.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Mud.java
new file mode 100644
index 0000000000..b4551b836c
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Mud.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Mud extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "mud");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/QuarryOrPit.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/QuarryOrPit.java
new file mode 100644
index 0000000000..3e6777ad3e
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/QuarryOrPit.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class QuarryOrPit extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "excavation");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Rock.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Rock.java
new file mode 100644
index 0000000000..067236682e
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Rock.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Rock extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "rocks");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Sand.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Sand.java
new file mode 100644
index 0000000000..beb7493673
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Sand.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Sand extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "sand");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Scree.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Scree.java
new file mode 100644
index 0000000000..3eaff6c16d
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Scree.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Scree extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "scree");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Shingle.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Shingle.java
new file mode 100644
index 0000000000..158ea8c483
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Shingle.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Shingle extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "natural", "shingle");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Spoil.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Spoil.java
new file mode 100644
index 0000000000..91d3a0ddf9
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/Spoil.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
+
+import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Spoil extends AbstractOsToOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        setOrAppendTag(way, "man_made", "spoil_heap");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/TidalWater.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/TidalWater.java
similarity index 53%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/TidalWater.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/TidalWater.java
index 98652a3f60..370466594a 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialHazards/TidalWater.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/potentialhazards/TidalWater.java
@@ -1,12 +1,12 @@
-package com.graphhopper.reader.osgb.dpn.potentialHazards;
+package com.graphhopper.reader.osgb.dpn.potentialhazards;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Created by sadam on 13/02/15.
  */
-public class TidalWater extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class TidalWater extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BridleWay.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/BridleWay.java
similarity index 72%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BridleWay.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/BridleWay.java
index 610d7f44de..ff46bad859 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BridleWay.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/BridleWay.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route where there is a right to travel on foot, on horseback, to lead a horse and to ride a bicycle
@@ -10,7 +10,7 @@
  *
  * Created by sadam on 13/02/15.
  */
-public class BridleWay extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class BridleWay extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way)
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BywayOpenToAllTraffic.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/BywayOpenToAllTraffic.java
similarity index 71%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BywayOpenToAllTraffic.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/BywayOpenToAllTraffic.java
index 10ac1c305f..9c97dfe1a3 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BywayOpenToAllTraffic.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/BywayOpenToAllTraffic.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A highway open to all traffic
@@ -10,7 +10,7 @@
  *
  * Created by sadam on 13/02/15.
  */
-public class BywayOpenToAllTraffic extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class BywayOpenToAllTraffic extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/CorePath.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/CorePath.java
similarity index 59%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/CorePath.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/CorePath.java
index 10d2703cff..86e4e790f3 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/CorePath.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/CorePath.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route in Scotland identified as part of the Core Path network.
@@ -12,7 +12,7 @@
  * @author phopkins
  *
  */
-public class CorePath extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class CorePath extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/Footpath.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/Footpath.java
similarity index 66%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/Footpath.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/Footpath.java
index 8a83f70d5a..672906b7b4 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/Footpath.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/Footpath.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route where there is a right to travel on foot.
@@ -10,7 +10,7 @@
  *
  * Created by sadam on 13/02/15.
  */
-public class Footpath extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class Footpath extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way)
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/None.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/None.java
similarity index 83%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/None.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/None.java
index 8608148896..f302cf928b 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/None.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/None.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route where no permissive or conventional right of way has been identified. Use may be allowed if the route has been identified as a cycle route,
@@ -11,7 +11,7 @@
  *
  * Created by sadam on 16/02/15.
  */
-public class None extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class None extends AbstractOsToOsmAttibuteMappingVisitor {
 
     /**
      * This code is written with the assumption that any further DPN elements that will override the bicycle=no will be processed after the rightOfWay element.
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NormalPermissibleUses.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/NormalPermissibleUses.java
similarity index 69%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NormalPermissibleUses.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/NormalPermissibleUses.java
index 339c3c8f87..30e812966d 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NormalPermissibleUses.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/NormalPermissibleUses.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: No known restrictions on pedestrians, cyclists or horses being ridden. Restrictions may apply to vehicles.
@@ -11,7 +11,7 @@
  * @author phopkins
  *
  */
-public class NormalPermissibleUses  extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class NormalPermissibleUses  extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/OtherRouteWithPublicAccess.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/OtherRouteWithPublicAccess.java
similarity index 77%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/OtherRouteWithPublicAccess.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/OtherRouteWithPublicAccess.java
index acdfbcd5a3..0556de148e 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/OtherRouteWithPublicAccess.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/OtherRouteWithPublicAccess.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route that is the responsibility of local highway authorities and maintained at public expense.
@@ -15,7 +15,7 @@
  *
  * Created by sadam on 16/02/15.
  */
-public class OtherRouteWithPublicAccess extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class OtherRouteWithPublicAccess extends AbstractOsToOsmAttibuteMappingVisitor {
     @Override
     protected void applyAttributes(Way way)
     {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissiveBridleWay.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/PermissiveBridleWay.java
similarity index 72%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissiveBridleWay.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/PermissiveBridleWay.java
index 1f01b07fc0..388b7e4982 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissiveBridleWay.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/PermissiveBridleWay.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route where the landowner has permitted travel on foot, on horseback or leading a horse and to ride a bicycle.
@@ -11,7 +11,7 @@
  *
  * Created by sadam on 13/02/15.
  */
-public class PermissiveBridleWay extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class PermissiveBridleWay extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way)
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissivePath.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/PermissivePath.java
similarity index 63%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissivePath.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/PermissivePath.java
index 8413da9160..04566a3668 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissivePath.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/PermissivePath.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route where the landowner has permitted travel on foot. This right may be withdrawn by the landowner.
@@ -10,7 +10,7 @@
  *
  * Created by sadam on 13/02/15.
  */
-public class PermissivePath extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class PermissivePath extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way) {
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/RestrictedByway.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/RestrictedByway.java
similarity index 74%
rename from core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/RestrictedByway.java
rename to core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/RestrictedByway.java
index c6791c626e..e39c65c3cf 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightOfWay/RestrictedByway.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/rightofway/RestrictedByway.java
@@ -1,7 +1,7 @@
-package com.graphhopper.reader.osgb.dpn.rightOfWay;
+package com.graphhopper.reader.osgb.dpn.rightofway;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.AbstractOsDpnOsmAttibuteMappingVisitor;
+import com.graphhopper.reader.osgb.AbstractOsToOsmAttibuteMappingVisitor;
 
 /**
  * Description: A route open to all traffic except mechanically propelled vehicles. Formerly known as Road Used as Public Path (RUPP).
@@ -10,7 +10,7 @@
  *
  * Created by sadam on 13/02/15.
  */
-public class RestrictedByway extends AbstractOsDpnOsmAttibuteMappingVisitor {
+public class RestrictedByway extends AbstractOsToOsmAttibuteMappingVisitor {
 
     @Override
     protected void applyAttributes(Way way)
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java b/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java
index f995eb41aa..114697bf06 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java
@@ -209,18 +209,18 @@ private int handleDescriptiveGroup(XMLStreamReader parser) throws XMLStreamExcep
     private String resolveHighway(String elementText) {
         logger.info("OSITNElement.resolveHighway( " + elementText + ")");
         switch (elementText) {
+        case "Private Road – Publicly Accessible":	
+        	setTag("access", "private");
+        	return elementText;
+        case "Private Road - Restricted Access":
+        	setTag("access", "no");
         case "A Road":
         case "Motorway":
         case "B Road":
         case "Minor Road":
-            // Pedestrianised Street is supported for walking so traversing will be controlled by speed in the flag encoders
-        //case "Pedestrianised Street":
-            // Private Road - Publicly Accessible are NOT traversible
-            //        case "Private Road - Publicly Accessible":
-            // Alleys are not traversible
-            // case "Alley":
-            // Private Road - Restricted Access are not traversible
-            // case "Private Road - Restricted Access":
+        	return elementText;
+        case "Pedestrianised Street":
+            return "pedestrian";
         case "Local Street":
             return elementText;
         default:
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/OSITNWayTest.java b/core/src/test/java/com/graphhopper/reader/osgb/OSITNWayTest.java
index 27552137f6..6acf2ed2f2 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/OSITNWayTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/OSITNWayTest.java
@@ -45,5 +45,61 @@ public void testReadTagsForRoundabout() throws XMLStreamException, MismatchedDim
 		assertTrue(way.hasTag("junction", "roundabout"));
         assertTrue("ITN Data is uk specific so roundabouts should be clockwise", way.hasTag("direction", "clockwise"));
 	}
+	
+	@Test
+	public void testReadTagsForPrivatePublicallyAccessibleRoads() throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
+		String wayWithRoundabout = "<?xml version='1.0' encoding='UTF-8'?>\n" + 
+				"<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'\n" + 
+				"	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\n" + 
+				"	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'\n" + 
+				"	fid='GDS-58096-1'>" +
+				"		<osgb:RoadLink fid='osgb4000000009314037'>\n" + 
+				"<osgb:descriptiveTerm>Private Road – Publicly Accessible</osgb:descriptiveTerm>\n" + 
+				"<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>\n" + 
+				"<osgb:length>12.04</osgb:length>\n" + 
+				"<osgb:polyline>\n" + 
+				"<gml:LineString srsName='osgb:BNG'>\n" + 
+				"<gml:coordinates>356370.000,430137.000 356367.000,430139.000 356366.000,430141.000 356365.386,430142.099 356365.000,430144.000 356365.000,430146.000 356365.000,430147.000 </gml:coordinates>\n" + 
+				"</gml:LineString>\n" + 
+				"</osgb:polyline>\n" + 
+				"<osgb:directedNode orientation='-' xlink:href='#osgb4000000009126286'/>\n" + 
+				"<osgb:directedNode orientation='+' xlink:href='#osgb4000000009126257'/>\n" + 
+				"<osgb:referenceToTopographicArea xlink:href='#osgb1000000214086160'/>\n" + 
+				"</osgb:RoadLink>"; 
+		
+		XMLInputFactory factory = XMLInputFactory.newInstance();
+		StringReader stringReader = new StringReader(wayWithRoundabout);
+		XMLStreamReader parser = factory.createXMLStreamReader(stringReader);
+		OSITNWay way = OSITNWay.create(0, parser);
+		assertEquals("private", way.getTag("access"));
+	}
+	
+	@Test
+	public void testReadTagsPrivateRestrictedRoads() throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
+		String wayWithRoundabout = "<?xml version='1.0' encoding='UTF-8'?>\n" + 
+				"<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'\n" + 
+				"	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\n" + 
+				"	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'\n" + 
+				"	fid='GDS-58096-1'>" +
+				"		<osgb:RoadLink fid='osgb4000000009314037'>\n" + 
+				"<osgb:descriptiveTerm>Private Road - Restricted Access</osgb:descriptiveTerm>\n" + 
+				"<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>\n" + 
+				"<osgb:length>12.04</osgb:length>\n" + 
+				"<osgb:polyline>\n" + 
+				"<gml:LineString srsName='osgb:BNG'>\n" + 
+				"<gml:coordinates>356370.000,430137.000 356367.000,430139.000 356366.000,430141.000 356365.386,430142.099 356365.000,430144.000 356365.000,430146.000 356365.000,430147.000 </gml:coordinates>\n" + 
+				"</gml:LineString>\n" + 
+				"</osgb:polyline>\n" + 
+				"<osgb:directedNode orientation='-' xlink:href='#osgb4000000009126286'/>\n" + 
+				"<osgb:directedNode orientation='+' xlink:href='#osgb4000000009126257'/>\n" + 
+				"<osgb:referenceToTopographicArea xlink:href='#osgb1000000214086160'/>\n" + 
+				"</osgb:RoadLink>"; 
+		
+		XMLInputFactory factory = XMLInputFactory.newInstance();
+		StringReader stringReader = new StringReader(wayWithRoundabout);
+		XMLStreamReader parser = factory.createXMLStreamReader(stringReader);
+		OSITNWay way = OSITNWay.create(0, parser);
+		assertEquals("no", way.getTag("access"));
+	}
 
 }
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnWayTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnWayTest.java
index 3c15568953..3b77ac1968 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnWayTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnWayTest.java
@@ -13,7 +13,7 @@
 import org.opengis.referencing.FactoryException;
 import org.opengis.referencing.operation.TransformException;
 
-import com.graphhopper.reader.osgb.dpn.potentialHazards.InvalidPotentialHazardException;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.InvalidPotentialHazardException;
 
 public class OsDpnWayTest {
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByNationalCycleRouteTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByNationalCycleRouteTest.java
index bfc3991d64..b7d994d717 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByNationalCycleRouteTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByNationalCycleRouteTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.additionalrights.AdoptedByNationalCycleRoute;
 
 public class AdoptedByNationalCycleRouteTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByOtherCycleRouteTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByOtherCycleRouteTest.java
index 74b5047ae0..85c5b0f7a2 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByOtherCycleRouteTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByOtherCycleRouteTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.additionalrights.AdoptedByOtherCycleRoute;
 
 public class AdoptedByOtherCycleRouteTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByRecreationalRouteTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByRecreationalRouteTest.java
index a4e664ceb9..e036d68281 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByRecreationalRouteTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/AdoptedByRecreationalRouteTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.additionalrights.AdoptedByRecreationalRoute;
 
 public class AdoptedByRecreationalRouteTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/WithinAccessLandTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/WithinAccessLandTest.java
index 6b7cbdb11d..2a902b4638 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/WithinAccessLandTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/additionalRights/WithinAccessLandTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.additionalrights.WithinAccessLand;
 
 public class WithinAccessLandTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/BouldersTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/BouldersTest.java
index e3eb8cf0bc..9dcb73d689 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/BouldersTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/BouldersTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Boulders;
 
 public class BouldersTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/CliffTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/CliffTest.java
index ef8bfb6266..52e9da73c2 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/CliffTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/CliffTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Cliff;
 
 public class CliffTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ForeshoreTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ForeshoreTest.java
index 95d88b8f35..4e396c3abd 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ForeshoreTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ForeshoreTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Foreshore;
 
 public class ForeshoreTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InlandWaterTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InlandWaterTest.java
index 6e74406400..c5c1594980 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InlandWaterTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/InlandWaterTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.InlandWater;
 
 public class InlandWaterTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MarshTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MarshTest.java
index a341152db6..86a8a81126 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MarshTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MarshTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Marsh;
 
 public class MarshTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MudTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MudTest.java
index 4193c88d22..1410ae035b 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MudTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/MudTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Mud;
 
 public class MudTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/QuarryOrPitTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/QuarryOrPitTest.java
index 48a2070371..b5907e332e 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/QuarryOrPitTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/QuarryOrPitTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.QuarryOrPit;
 
 public class QuarryOrPitTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/RockTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/RockTest.java
index 04184a048b..0b541210ee 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/RockTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/RockTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Rock;
 
 public class RockTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SandTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SandTest.java
index d28d57e14b..28c2565e18 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SandTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SandTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Sand;
 
 public class SandTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ScreeTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ScreeTest.java
index a95f4c1fc7..096a02af5c 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ScreeTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ScreeTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Scree;
 
 public class ScreeTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ShingleTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ShingleTest.java
index a1d7e1951b..59330ebcf8 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ShingleTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/ShingleTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Shingle;
 
 public class ShingleTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SpoilTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SpoilTest.java
index 02d8454fb0..8bd9c3e652 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SpoilTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/SpoilTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.Spoil;
 
 public class SpoilTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/TidalWaterTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/TidalWaterTest.java
index 99e6d72809..0d589afd8b 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/TidalWaterTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/potentialHazards/TidalWaterTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.potentialhazards.TidalWater;
 
 public class TidalWaterTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BridleWayTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BridleWayTest.java
index 4c33dcc736..71d2089282 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BridleWayTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BridleWayTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.BridleWay;
 
 public class BridleWayTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BywayOpenToAllTrafficTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BywayOpenToAllTrafficTest.java
index 3d3f0a35f3..8af9a13828 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BywayOpenToAllTrafficTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/BywayOpenToAllTrafficTest.java
@@ -10,11 +10,12 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.BywayOpenToAllTraffic;
 
 public class BywayOpenToAllTrafficTest {
 
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/CorePathTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/CorePathTest.java
index 958cca220b..66e039be99 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/CorePathTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/CorePathTest.java
@@ -9,10 +9,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.BridleWay;
 
 public class CorePathTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/FootpathTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/FootpathTest.java
index 89f63a5721..56cf2206b2 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/FootpathTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/FootpathTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.Footpath;
 
 public class FootpathTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NoneTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NoneTest.java
index 8c790c1835..bc4ead87e5 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NoneTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NoneTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.None;
 
 public class NoneTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NormalPermissiveUsesTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NormalPermissiveUsesTest.java
index 6c43a58663..93d3581a33 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NormalPermissiveUsesTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/NormalPermissiveUsesTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.NormalPermissibleUses;
 
 public class NormalPermissiveUsesTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/OtherRouteWithPublicAccessTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/OtherRouteWithPublicAccessTest.java
index d077b2bbaa..1d1ed8a051 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/OtherRouteWithPublicAccessTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/OtherRouteWithPublicAccessTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.OtherRouteWithPublicAccess;
 
 public class OtherRouteWithPublicAccessTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissiveBridleWayTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissiveBridleWayTest.java
index 1158e464a7..19291c5f80 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissiveBridleWayTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissiveBridleWayTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.PermissiveBridleWay;
 
 public class PermissiveBridleWayTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissivePathTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissivePathTest.java
index 9c16b6f1d3..1d509e58cc 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissivePathTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/PermissivePathTest.java
@@ -10,11 +10,12 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.PermissivePath;
 
 public class PermissivePathTest {
 
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/RestrictedBywayTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/RestrictedBywayTest.java
index 3b2714606f..8f0dc8b998 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/RestrictedBywayTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/rightOfWay/RestrictedBywayTest.java
@@ -10,10 +10,11 @@
 import org.mockito.MockitoAnnotations;
 
 import com.graphhopper.reader.Way;
-import com.graphhopper.reader.osgb.dpn.OsDpnOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.OsToOsmAttributeMappingVisitor;
+import com.graphhopper.reader.osgb.dpn.rightofway.RestrictedByway;
 
 public class RestrictedBywayTest {
-    static OsDpnOsmAttributeMappingVisitor visitor;
+    static OsToOsmAttributeMappingVisitor visitor;
     @Mock
     Way way;
 
