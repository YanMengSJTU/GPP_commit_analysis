diff --git a/acceptancetesting/src/test/cucumber/nonvehicle-Routing-Errors.feature b/acceptancetesting/src/test/cucumber/nonvehicle-Routing-Errors.feature
index 8d16a6cd08..02f88dd364 100644
--- a/acceptancetesting/src/test/cucumber/nonvehicle-Routing-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/nonvehicle-Routing-Errors.feature
@@ -4,7 +4,7 @@ Feature: Verify Error Messages for non-vehicle Routing service
 
   #Error Messages
   #Successful request
-  @ErrorMessages 
+  @ErrorMessages
   Scenario Outline: Successful request with all parameters
     Given I have route <point> as
       | pointA              | pointB              |
@@ -47,10 +47,10 @@ Feature: Verify Error Messages for non-vehicle Routing service
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
       | foot        |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
-  @ErrorMessages
+  @ErrorMessages 
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
-      | pointA           | pointB              |
+      | pointA    | pointB              |
       | 50.729961 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
@@ -61,13 +61,13 @@ Feature: Verify Error Messages for non-vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
-      | foot        |            | fastest   | json           | Point 50.729961 is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                          | statusCode |
+      | foot        |            | fastest   | json           | Point 50.729961 is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
-      | pointA           | pointB              |
+      | pointA    | pointB              |
       | 50.729961 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
@@ -78,10 +78,9 @@ Feature: Verify Error Messages for non-vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                        | statusCode |
       | foot        |            | fastest   | json           | Point 50.729961 is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
 
-
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
@@ -150,7 +149,7 @@ Feature: Verify Error Messages for non-vehicle Routing service
       | foot        |            | fastest   | json           | No point parameter provided. | 400        |
 
   # Parameter :  vehicle
-  @ErrorMessages @Smoke
+  @ErrorMessages
   Scenario Outline: Missing Parameter "vehicle"
     Given I have route point as
       | pointA              | pointB              |
@@ -167,7 +166,7 @@ Feature: Verify Error Messages for non-vehicle Routing service
       | foot        |            | fastest   | json           | No vehicle parameter provided. | 400        |
 
   # Parameter :  weighting
-  @ErrorMessages @Smoke
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "weighting"
     Given I have route point as
       | pointA              | pointB              |
@@ -429,7 +428,7 @@ Feature: Verify Error Messages for non-vehicle Routing service
       | mtb         |            | fastest   | GET        | json           | OK                 | 200        |
       | foot        |            | fastest   | OPTIONS    | json           | OK                 | 200        |
 
-  @Routing
+  @ErrorMessages 
   Scenario Outline: Invalid Parameter Value for "point in BNG"
     Given I have route point as
       | pointA              | pointB              |
@@ -442,10 +441,10 @@ Feature: Verify Error Messages for non-vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | errorMessage                                              | statusCode |
-      | Cannot find point 0: 49.766808346389624,-7.55644832086991 | 400        |
+      | errorMessage                             | statusCode |
+      | Cannot find point 0: 51.206305,-3.683483 | 400        |
 
-  @Routing
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "point in WGS84"
     Given I have route point as
       | pointA        | pointB        |
@@ -460,10 +459,6 @@ Feature: Verify Error Messages for non-vehicle Routing service
     Examples: 
       | errorMessage                           | statusCode |
       | Cannot find point 0: 146580.0,282492.0 | 400        |
-      
-      
-      
-      
 
   # Nearest Point : Invalid Parameter Value "point"
   @ErrorMessages
@@ -574,12 +569,11 @@ Feature: Verify Error Messages for non-vehicle Routing service
     Then I should be able to verify the http statuscode as "200"
 
     Examples: 
-      | algorithm         |
-      | dijkstra          |
-      | astar             |
-      | astarbi           |
-      | dijkstrabi        |
-      
+      | algorithm  |
+      | dijkstra   |
+      | astar      |
+      | astarbi    |
+      | dijkstrabi |
 
   @ErrorMessages
   Scenario Outline: verify valid parameter values for "debug "
@@ -717,10 +711,10 @@ Feature: Verify Error Messages for non-vehicle Routing service
 
     Examples: 
       | SRS   | pointA              | pointB              |
-     # | WGS84 | 53.410574,-1.825276 | 53.277655,-1.805662 |
-      | BNG   | 282492,146580      | 270956,145684       |
+      | WGS84 | 53.410574,-1.825276 | 53.277655,-1.805662 |
+      | BNG   | 282492,146580       | 270956,145684       |
 
-  @ErrorMessages
+  @ErrorMessages 
   Scenario Outline: verify valid parameter values for "output_srs "
     Given I have route point as
       | pointA              | pointB              |
@@ -737,13 +731,13 @@ Feature: Verify Error Messages for non-vehicle Routing service
     And I have srs as "WGS84"
     And I have output_srs as "<output_srs>"
     When I request for a route
-    Then I should be able to verify the http response message as "OK"
-    Then I should be able to verify the http statuscode as "200"
+    Then I should be able to verify the http response message as "<httpResponse>"
+    Then I should be able to verify the http statuscode as "<StatusCode>"
 
     Examples: 
-      | output_srs |
-      | WGS84      |
-      | BNG        |
+      | output_srs | httpResponse | StatusCode |
+      | WGS84      | OK           | 200        |
+      | BNG        | OK           | 200        |
 
   @ErrorMessages
   Scenario Outline: verify valid parameter values for "private "
diff --git a/acceptancetesting/src/test/cucumber/vehicle-Routing-Errors.feature b/acceptancetesting/src/test/cucumber/vehicle-Routing-Errors.feature
index 8fa88a8874..91e584d790 100644
--- a/acceptancetesting/src/test/cucumber/vehicle-Routing-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/vehicle-Routing-Errors.feature
@@ -47,11 +47,10 @@ Feature: Verify Error Messages for vehicle Routing service
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
       | car         |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
-
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
-      | pointA           | pointB              |
+      | pointA    | pointB              |
       | 50.729961 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
@@ -62,13 +61,13 @@ Feature: Verify Error Messages for vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
-      | emv        |            | fastest   | json           | Point 50.729961 is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                          | statusCode |
+      | emv         |            | fastest   | json           | Point 50.729961 is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
-      | pointA           | pointB              |
+      | pointA    | pointB              |
       | 50.729961 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
@@ -79,10 +78,8 @@ Feature: Verify Error Messages for vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
-      | car        |            | fastest   | json           | Point 50.729961 is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
-
-
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                        | statusCode |
+      | car         |            | fastest   | json           | Point 50.729961 is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
 
   # Parameter :  point
   @ErrorMessages
@@ -99,10 +96,9 @@ Feature: Verify Error Messages for vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                               | statusCode |
       | car         |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
 
-
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
@@ -154,7 +150,7 @@ Feature: Verify Error Messages for vehicle Routing service
       | car         |            | fastest   | json           | No point parameter provided. | 400        |
 
   # Parameter :  vehicle
-  @ErrorMessages 
+  @ErrorMessages
   Scenario Outline: Missing Parameter "vehicle"
     Given I have route point as
       | pointA              | pointB              |
@@ -171,7 +167,7 @@ Feature: Verify Error Messages for vehicle Routing service
       | foot        |            | fastest   | json           | No vehicle parameter provided. | 400        |
 
   # Parameter :  weighting
-  @ErrorMessages 
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "weighting"
     Given I have route point as
       | pointA              | pointB              |
@@ -360,7 +356,7 @@ Feature: Verify Error Messages for vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | errorMessage                                  | statusCode |
+      | errorMessage                           | statusCode |
       | Srs abc is not a valid srs for output. | 400        |
 
   @ErrorMessages
@@ -433,7 +429,7 @@ Feature: Verify Error Messages for vehicle Routing service
       | car         |            | fastest   | GET        | json           | OK                 | 200        |
       | car         |            | fastest   | OPTIONS    | json           | OK                 | 200        |
 
-  @Routing 
+  @ErrorMessages 
   Scenario Outline: Verify  a route for emergencey services on a(Transit through Springfield-private true )
     Given I have route point as
       | pointA              | pointB              |
@@ -448,9 +444,9 @@ Feature: Verify Error Messages for vehicle Routing service
 
     Examples: 
       | errorMessage                             | statusCode |
-      | Cannot find point 0: 49.76680946391223,-7.556455017393835 | 400        |
+      | Cannot find point 0: 50.733653,-3.523541 | 400        |
 
-  @Routing 
+  @ErrorMessages
   Scenario Outline: Verify  a route for non-emergencey services on a(Transit through Springfield-private true )
     Given I have route point as
       | pointA       | pointB       |
@@ -464,7 +460,7 @@ Feature: Verify Error Messages for vehicle Routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | errorMessage                      | statusCode |
+      | errorMessage                          | statusCode |
       | Cannot find point 0: 93778.0,292579.0 | 400        |
 
   # Nearest Point : Invalid Parameter Value "point"
@@ -534,7 +530,7 @@ Feature: Verify Error Messages for vehicle Routing service
       | zh_CN  |
 
   # Parameter :  weighting
-  @ErrorMessages 
+  @ErrorMessages
   Scenario Outline: Valid Parameter Values for "weighting"
     Given I have route point as
       | pointA              | pointB              |
@@ -576,12 +572,11 @@ Feature: Verify Error Messages for vehicle Routing service
     Then I should be able to verify the http statuscode as "200"
 
     Examples: 
-      | algorithm         |
-      | dijkstra          |
-      | astar             |
-      | astarbi           |
-      | dijkstrabi        |
-      
+      | algorithm  |
+      | dijkstra   |
+      | astar      |
+      | astarbi    |
+      | dijkstrabi |
 
   @ErrorMessages
   Scenario Outline: verify valid parameter values for "debug "
@@ -698,7 +693,7 @@ Feature: Verify Error Messages for vehicle Routing service
       | gpx  |
       | json |
 
-  @ErrorMessages
+  @ErrorMessages 
   Scenario Outline: verify valid parameter values for "SRS "
     Given I have route point as
       | pointA              | pointB              |
@@ -714,13 +709,13 @@ Feature: Verify Error Messages for vehicle Routing service
     And I have type as "json"
     And I have srs as "<SRS>"
     When I request for a route
-    Then I should be able to verify the http response message as "OK"
-    Then I should be able to verify the http statuscode as "200"
+    Then I should be able to verify the http response message as "<httpResponse>"
+    Then I should be able to verify the http statuscode as "<StatusCode>"
 
     Examples: 
-      | SRS   |
-      | WGS84 |
-      | BNG   |
+      | SRS   | httpResponse | StatusCode |
+      | WGS84 | OK           | 200        |
+      | BNG   | Bad Request  | 400        |
 
   @ErrorMessages
   Scenario Outline: verify valid parameter values for "output_srs "
diff --git a/core/pom.xml b/core/pom.xml
index 72b6ebe0f0..d65f591ebe 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -5,7 +5,7 @@
     <groupId>com.graphhopper</groupId>
     <artifactId>graphhopper</artifactId>
     <name>GraphHopper</name>
-    <version>1.27-SNAPSHOT</version>
+    <version>1.28-SNAPSHOT</version>
     <packaging>jar</packaging> 
     <description>
         GraphHopper is a fast and memory efficient Java road routing engine 
@@ -14,7 +14,7 @@
     <parent>
         <groupId>com.graphhopper</groupId>
         <artifactId>graphhopper-parent</artifactId>    	
-        <version>1.27-SNAPSHOT</version>
+        <version>1.28-SNAPSHOT</version>
     </parent>
         
     <properties>  
diff --git a/web/src/main/java/com/graphhopper/http/GHBaseServlet.java b/web/src/main/java/com/graphhopper/http/GHBaseServlet.java
index 995e192fc8..6da76e22d3 100644
--- a/web/src/main/java/com/graphhopper/http/GHBaseServlet.java
+++ b/web/src/main/java/com/graphhopper/http/GHBaseServlet.java
@@ -39,7 +39,6 @@
 import javax.xml.transform.dom.DOMSource;
 import javax.xml.transform.stream.StreamResult;
 
-import org.apache.commons.lang.StringEscapeUtils;
 import org.eclipse.jetty.http.HttpStatus;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -232,7 +231,7 @@ protected void processResponseErrors(GHResponse rsp,
             Map<String, String> map = new HashMap<String, String>();
             json.put("error", map);
             Throwable throwable = rsp.getErrors().get(0);
-            map.put("message", StringEscapeUtils.escapeHtml(throwable.getMessage()));
+            map.put("message", throwable.getMessage());
             String statusCode = "" + HttpStatus.BAD_REQUEST_400;
             if (throwable instanceof APIException)
             {
@@ -245,7 +244,7 @@ protected void processResponseErrors(GHResponse rsp,
             for (Throwable t : rsp.getErrors())
             {
                 Map<String, String> hintMap = new HashMap<String, String>();
-                hintMap.put("message", StringEscapeUtils.escapeHtml(t.getMessage()));
+                hintMap.put("message", t.getMessage());
                 if (internalErrorsAllowed)
                 {
                     hintMap.put("details", t.getClass().getName());
diff --git a/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java b/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java
index 827dedd292..21d50ee754 100644
--- a/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java
+++ b/web/src/test/java/com/graphhopper/http/GraphHopperServletTest.java
@@ -61,9 +61,6 @@
 
 	@Mock
 	HttpServletResponse httpServletResponse;
-	
-	@Mock
-	PrintWriter printWriter;
 
 	Map<String, String[]> allParameters;
 
@@ -265,49 +262,6 @@ public void testGetGHResponseWithPartialPoint() throws IOException,
                         "Point 12 is not a valid point. Point must be a comma separated coordinate in WGS84 projection.",
                         ghResponse.getErrors().get(0).getMessage());
         }
-	
-	@Test
-        public void testGetGHResponseWithXSSInjection() throws IOException,
-                MissingParameterException, NoSuchParameterException, InvalidParameterException, ServletException
-        {
-                allParameters.put("point", new String[] { "<iMg SrC=vBsCrIpT:MsgBox(28224)>" });
-                allParameters.put("vehicle", new String[] { VEHICLES[0] });
-                allParameters.put("locale", new String[] { LOCALES[0] });
-                when(httpServletRequest.getParameterMap()).thenReturn(allParameters);
-                when(httpServletResponse.getWriter()).thenReturn(printWriter);
-                graphHopperServlet.doGet(httpServletRequest,
-                        httpServletResponse);
-                verify(printWriter).append("{" + System.lineSeparator()
-                        + "  \"error\": {" + System.lineSeparator()
-                        + "    \"message\": \"Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.\","  + System.lineSeparator()
-                        + "    \"statuscode\": \"400\""  + System.lineSeparator()
-                        + "  },"  + System.lineSeparator()
-                        + "  \"hints\": [{\"message\": \"Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.\"}]"  + System.lineSeparator()
-                        + "}");
-        }
-	
-	@Test
-        public void testGetGHResponseWithXSSInjectionXML() throws IOException,
-                MissingParameterException, NoSuchParameterException, InvalidParameterException, ServletException
-        {
-                allParameters.put("point", new String[] { "<iMg SrC=vBsCrIpT:MsgBox(28224)>" });
-                allParameters.put("vehicle", new String[] { VEHICLES[0] });
-                allParameters.put("locale", new String[] { LOCALES[0] });
-                allParameters.put("type", new String[] { "gpx" });
-                when(httpServletRequest.getParameterMap()).thenReturn(allParameters);
-                when(httpServletResponse.getWriter()).thenReturn(printWriter);
-                graphHopperServlet.doGet(httpServletRequest,
-                        httpServletResponse);
-                verify(printWriter).append("<?xml version=\"1.0\" "
-                        + "encoding=\"UTF-8\" standalone=\"no\"?>"
-                        + "<gpx creator=\"GraphHopper\" version=\"1.1\">"
-                        + "<metadata><extensions>"
-                        + "<message>Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.</message>"
-                        + "<hints>"
-                        + "<error message=\"Point &lt;iMg SrC=vBsCrIpT:MsgBox(28224)&gt; is not a valid point. Point must be a comma separated coordinate in WGS84 projection.\"/>"
-                        + "</hints>"
-                        + "</extensions></metadata></gpx>");
-        }
         
 	
 	@Test
