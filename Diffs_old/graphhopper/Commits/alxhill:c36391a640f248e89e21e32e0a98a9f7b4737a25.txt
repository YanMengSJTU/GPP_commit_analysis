diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java b/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
index f12067861f..2bda5efd19 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
@@ -17,6 +17,6 @@ public Vehicle getVehicle()
     }
 
     public void calculateStep() {
-        vehicle.moveTo(0, vehicle.getLat() + 0.01, vehicle.getLon() + 0.01);
+        vehicle.moveTo(0, vehicle.getLat() + 0.001, vehicle.getLon() + 0.001);
     }
 }
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index 0225b6c6b5..076cb32a90 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -43,7 +43,6 @@ var carSet = {
             var lat = parseFloat(msg[1]);
             var lon = parseFloat(msg[2]);
             var index = parseInt(msg[0]);
-            console.log(lat, lon, index);
             if (this._cars[index]) {
                 this._cars[index].moveTo(lat, lon);
             } else {
@@ -62,9 +61,15 @@ var Car = function(road, lat, lon) {
 
 Car.prototype = {
     moveTo: function(lat, lon) {
-        var line = L.polyline([this.pos, [lat, lon]]);
-        var marker = L.animatedMarker(line.getLatLngs(), {icon: carIcon, interval: 1000});
+        var line = [this.pos, [lat, lon]];
         this.pos = [lat, lon];
-        window.map.addLayer(marker);
+        if (this.marker == null) {
+            this.marker = L.animatedMarker(line, {icon: carIcon, distance: 1, interval: 1000});
+            window.map.addLayer(this.marker);
+        } else {
+            this.marker.stop();
+            this.marker.setLine(line);
+        }
+        this.marker.start();
     }
 }
\ No newline at end of file
