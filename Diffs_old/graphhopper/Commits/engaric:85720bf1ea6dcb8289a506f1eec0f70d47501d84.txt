diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 81f1f2d86d..43cd3daec5 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -62,6 +62,7 @@
 import org.junit.Assert;
 import org.openqa.selenium.By;
 import org.openqa.selenium.JavascriptExecutor;
+import org.openqa.selenium.Keys;
 import org.openqa.selenium.WebElement;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -705,8 +706,9 @@ protected void addParameter(String key, String value) {
 		if (value.equals("mountainbike")) {
 			value = "mtb";
 		}
-
-		value = value.toLowerCase().replaceAll(" ", "");
+		if (!key.equalsIgnoreCase("point")) {
+			value = value.toLowerCase().replaceAll(" ", "");
+		}
 
 		if (requestParameters.containsKey(key)) {
 			tempList = requestParameters.get(key);
@@ -1058,8 +1060,10 @@ public void verifyErrorMessage(String responseMessage) {
 
 	private void verifyUIErrorMessage(String responseMessage) {
 
-		Assert.assertTrue("Web Interface: Actual Error Message" + getTextValue(error_Message) + " is not matching with :"+ responseMessage,getTextValue(error_Message).equalsIgnoreCase(responseMessage));
-		
+		Assert.assertTrue("Web Interface: Actual Error Message"
+				+ getTextValue(error_Message) + " is not matching with :"
+				+ responseMessage, getTextValue(error_Message)
+				.equalsIgnoreCase(responseMessage));
 
 	}
 
