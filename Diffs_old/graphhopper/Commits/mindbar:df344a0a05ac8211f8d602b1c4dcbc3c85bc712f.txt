diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java
index 7df5161dc9..5d6e124505 100644
--- a/core/src/main/java/com/graphhopper/GraphHopper.java
+++ b/core/src/main/java/com/graphhopper/GraphHopper.java
@@ -17,6 +17,7 @@
  */
 package com.graphhopper;
 
+import com.graphhopper.mobilius.InstructionService;
 import com.graphhopper.reader.DataReader;
 import com.graphhopper.reader.OSMReader;
 import com.graphhopper.reader.dem.ElevationProvider;
@@ -536,6 +537,15 @@ public GraphHopper init( CmdArgs args )
         tmpProvider.setInMemory(elevationDAType.isInMemory());
         setElevationProvider(tmpProvider);
 
+        // Configurable URLS
+        String[] urls = null;
+        String urlList = args.get("mobiliusUrlList", null);
+        if (urlList != null && !urlList.isEmpty()) {
+            urls = urlList.split(",");
+        }
+
+        InstructionService.getInstance().setUrls(urls);
+
         // index
         preciseIndexResolution = args.getInt("index.highResolution", preciseIndexResolution);
         return this;
diff --git a/core/src/main/java/com/graphhopper/mobilius/InstructionService.java b/core/src/main/java/com/graphhopper/mobilius/InstructionService.java
index aef8225352..a404912224 100644
--- a/core/src/main/java/com/graphhopper/mobilius/InstructionService.java
+++ b/core/src/main/java/com/graphhopper/mobilius/InstructionService.java
@@ -15,7 +15,17 @@
 /**
  * @author mishadoff
  */
-public class InstructionService {
+public final class InstructionService {
+
+    private static InstructionService INSTANCE = new InstructionService();
+
+    private String[] urlList;
+
+    private InstructionService() {}
+
+    public static InstructionService getInstance() {
+        return INSTANCE;
+    }
 
     private static final String CONTINUE = "continue";
     private static final String LEFT = "left";
@@ -26,10 +36,11 @@
     private static final String SHARP_RIGHT = "sharp_right";
     private static final String OTHER = "other";
 
-    private static final String URL = "http://192.168.10.83:10000/navi/anything";
-    private static final String URL2 = "http://localhost:3000/mobilius";
+    public void setUrls(String[] urls) {
+        urlList = urls;
+    }
 
-    public static String getInstructions(Instruction i, double distance) {
+    public String getInstructions(Instruction i, double distance) {
         String name;
         String dir;
         if (i == null) {
@@ -42,7 +53,7 @@ public static String getInstructions(Instruction i, double distance) {
         return "dir=" + dir + "&name=" + encode(name) + "&distance=" + distance;
     }
 
-    private static String encode(String s) {
+    private String encode(String s) {
         try {
             return URLEncoder.encode(s, "UTF-8");
         } catch (UnsupportedEncodingException e) {
@@ -50,7 +61,7 @@ private static String encode(String s) {
         }
     }
 
-    private static String getDir(int sign) {
+    private String getDir(int sign) {
         switch (sign) {
             case Instruction.TURN_LEFT: return LEFT;
             case Instruction.TURN_SLIGHT_LEFT: return SLIGHT_LEFT;
@@ -62,7 +73,7 @@ private static String getDir(int sign) {
         }
     }
 
-    public static void sendInstruction(InstructionList insList) {
+    public void sendInstruction(InstructionList insList) {
         // select first non-other list
         Instruction ret = null;
         double distanceSum = 0;
@@ -81,20 +92,20 @@ public static void sendInstruction(InstructionList insList) {
         //
         String query = "?" + getInstructions(ret, distanceSum);
 
-        try {
-            get(URL + query);
-        } catch (IOException e) {
-            // NOOOOO!
-        }
-
-        try {
-            get(URL2 + query);
-        } catch (IOException e) {
-            // NOOOOO!
+        if (urlList != null && urlList.length > 0) {
+            for (String url : urlList) {
+                if (url != null && url.trim().startsWith("http")) {
+                    try {
+                        get(url.trim() + query);
+                    } catch (IOException e) {
+                        // NOOOOO!
+                    }
+                }
+            }
         }
     }
 
-    private static void get(String query) throws IOException {
+    private void get(String query) throws IOException {
         HttpURLConnection connection;
         BufferedReader rd = null;
         ArrayList<String> strings = new ArrayList<String>();
diff --git a/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java b/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
index 03553c12b2..c8a82f747f 100644
--- a/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
+++ b/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
@@ -115,7 +115,7 @@ void writePath( HttpServletRequest req, HttpServletResponse res ) throws Excepti
             logger.info(logStr);
 
         /* DOGE */
-        InstructionService.sendInstruction(rsp.getInstructions());
+        InstructionService.getInstance().sendInstruction(rsp.getInstructions());
 
         if (writeGPX)
             writeGPX(req, res, rsp);
