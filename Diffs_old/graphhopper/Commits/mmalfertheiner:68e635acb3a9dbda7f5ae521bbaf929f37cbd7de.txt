diff --git a/core/src/main/java/com/graphhopper/reader/OSMReader.java b/core/src/main/java/com/graphhopper/reader/OSMReader.java
index e12036317e..8cbf5e5111 100644
--- a/core/src/main/java/com/graphhopper/reader/OSMReader.java
+++ b/core/src/main/java/com/graphhopper/reader/OSMReader.java
@@ -293,7 +293,7 @@ private void writeOsm2Graph( File osmFile )
                     case OSMElement.WAY:
                         if (wayStart < 0)
                         {
-                            logger.info(nf(counter) + ", now parsing ways");
+                            logger.info(nf(counter) + ", now parsing WAYS");
                             wayStart = counter;
                         }
                         processWay((OSMWay) item);
diff --git a/core/src/main/java/com/graphhopper/reader/dem/HeightTile.java b/core/src/main/java/com/graphhopper/reader/dem/HeightTile.java
index c0c27c476e..838e567948 100644
--- a/core/src/main/java/com/graphhopper/reader/dem/HeightTile.java
+++ b/core/src/main/java/com/graphhopper/reader/dem/HeightTile.java
@@ -105,6 +105,7 @@ public double getHeight( double lat, double lon )
 
         if (calcMean)
         {
+
             if (lonSimilar > 0)
                 value += includePoint(daPointer - 2, counter);
 
diff --git a/core/src/main/java/com/graphhopper/reader/dem/SRTMProvider.java b/core/src/main/java/com/graphhopper/reader/dem/SRTMProvider.java
index fbac0cd8c5..e5d6b150ab 100644
--- a/core/src/main/java/com/graphhopper/reader/dem/SRTMProvider.java
+++ b/core/src/main/java/com/graphhopper/reader/dem/SRTMProvider.java
@@ -43,9 +43,18 @@
 {
     public static void main( String[] args ) throws IOException
     {
+
         SRTMProvider provider = new SRTMProvider();
-        // 1046
-        System.out.println(provider.getEle(47.468668, 14.575127));
+        // SET Calc mean true
+        provider.setCalcMean(true);
+        //Klausen
+        System.out.println(provider.getEle(46.6399956, 11.566211));
+
+        //Seis
+        System.out.println(provider.getEle(46.544837, 11.562284));
+
+                // 1046
+        /*System.out.println(provider.getEle(47.468668, 14.575127));
         // 1113
         System.out.println(provider.getEle(47.467753, 14.573911));
 
@@ -55,9 +64,19 @@ public static void main( String[] args ) throws IOException
         // 845
         System.out.println(provider.getEle(48.469123, 9.576393));
 
-        // 1113 vs new: 
-        provider.setCalcMean(true);
-        System.out.println(provider.getEle(47.467753, 14.573911));
+        */
+                // SET Calc mean true
+                provider.setCalcMean(false);
+        // 1046
+        //System.out.println(provider.getEle(47.468668, 14.575127));
+        // 1113
+        //System.out.println(provider.getEle(47.467753, 14.573911));
+
+        // 1946
+        //System.out.println(provider.getEle(46.468835, 12.578777));
+
+        // 845
+        //System.out.println(provider.getEle(48.469123, 9.576393));
     }
 
     private static final BitUtil BIT_UTIL = BitUtil.BIG;
diff --git a/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
index d3e829a626..4e452e5033 100644
--- a/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java
@@ -155,7 +155,7 @@ protected BikeCommonFlagEncoder( int speedBits, double speedFactor, int maxTurnC
         setHighwaySpeed("living_street", 6);
         setHighwaySpeed("steps", PUSHING_SECTION_SPEED / 2);
 
-        setHighwaySpeed("cycleway", 18);
+        setHighwaySpeed("cycleway", 25);
         setHighwaySpeed("path", 18);
         setHighwaySpeed("footway", 6);
         setHighwaySpeed("pedestrian", 6);
