diff --git a/core/src/main/java/com/graphhopper/routing/util/HGVFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/HGVFlagEncoder.java
index 9e4ec5076e..e729f6cc8d 100644
--- a/core/src/main/java/com/graphhopper/routing/util/HGVFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/HGVFlagEncoder.java
@@ -19,7 +19,10 @@
 
 import com.graphhopper.reader.OSMWay;
 import com.graphhopper.util.BitUtil;
+import com.graphhopper.util.PMap;
+
 import static com.graphhopper.routing.util.PriorityCode.*;
+
 import java.util.HashSet;
 
 /**
@@ -38,12 +41,15 @@
 	private final HashSet<String> veryniceSet = new HashSet<String>();
     private final HashSet<String> bestSet = new HashSet<String>();
 
-    public HGVFlagEncoder( String propertiesStr )
+    public HGVFlagEncoder( PMap properties )
     {
-        this((int) parseLong(propertiesStr, "speedBits", 5),
-                parseDouble(propertiesStr, "speedFactor", 5),
-                parseBoolean(propertiesStr, "turnCosts", false) ? 3 : 0);
-        this.setBlockFords(parseBoolean(propertiesStr, "blockFords", true));
+        this(
+				(int) properties.getLong("speedBits", 5),
+                properties.getDouble("speedFactor", 5),
+                properties.getBool("turnCosts", false) ? 3 : 0
+			);
+		this.properties = properties;
+        this.setBlockFords(properties.getBool("blockFords", true));
     }
 
     public HGVFlagEncoder( int speedBits, double speedFactor, int maxTurnCosts )
