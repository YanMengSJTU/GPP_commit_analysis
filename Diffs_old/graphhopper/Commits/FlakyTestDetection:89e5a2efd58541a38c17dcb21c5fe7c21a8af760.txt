diff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md
index 317909fbd6..88bc212d3d 100644
--- a/CONTRIBUTORS.md
+++ b/CONTRIBUTORS.md
@@ -7,7 +7,7 @@ Most of the contributors are mentioned at Github as [Members](https://github.com
  * andreaswolf, flag encoder versioning and more
  * agouge, discussion and API refactoring
  * b3nn0, Android improvements
- * boldtrn, motorcycle and improvements like conditional tag parsing, round trips and a lot more
+ * boldtrn, motorcycle knowledge and many improvements like conditional tag parsing, round trips, ...
  * cgarreau, increase of routing success rate via subnetwork cleanup
  * ChristianSeitzer, motorcycle improvements
  * daisy1754, fixed usage of graphhopper.sh script
@@ -19,13 +19,13 @@ Most of the contributors are mentioned at Github as [Members](https://github.com
  * dos65, bug fixes in routing algo
  * drnextgis, ru translation and JS fixes
  * duongnt, fixes in storage
- * fbonzon, UI improvements like #615
+ * fbonzon, several UI improvements like #615
  * florent-morel, improvements regarding fords, #320
  * fredao, translations 
  * HarelM, improvements regarding elevation
  * HelgeKrueger, modularization of javascript, #590
  * henningvs, doc improvements
- * highsource, more efficient geometry update, ui fixes
+ * highsource, more efficient geometry update, UI fixes
  * IsNull, improvements like #708
  * jansoe, many improvements regarding A* algorithm, forcing direction, roundabouts etc
  * jansonhanson, general host config
@@ -33,14 +33,14 @@ Most of the contributors are mentioned at Github as [Members](https://github.com
  * karussell, one of the core developers
  * khuebner, initial turn costs support
  * lmar, improved instructions
- * michaz, public transport
+ * michaz, one of the core developers
  * mprins, improvements for travis CI and regarding JDK9 #806
  * NopMap, massive improvements regarding OSM, parsing and encoding, route relations
  * ocampana, initial implementation for instructions
  * PGWelch, shapefile reader #874
  * ratrun, route relations, GPX information, bike handling etc
  * rajanski, script to do routing via PostGIS
- * rodneyodonnell, improved dead end removal and fords
+ * rodneyodonnell, improved dead end removal (PrepareRoutingSubnetworks) and fords
  * rodo, more descriptions
  * seeebiii, motorcycle improvements
  * stefanholder, Stefan Holder, BMW AG, refactored unfavoring of virtual edges #885
diff --git a/README.md b/README.md
index 7673501642..63655216e2 100644
--- a/README.md
+++ b/README.md
@@ -152,12 +152,13 @@ Here is a list of the more detailed features including a link to the documentati
  * Displays and takes into account [elevation data](./docs/core/elevation.md) (per default disabled)
  * Can apply [real time changes to edge weights](https://graphhopper.com/blog/2015/04/08/visualize-and-handle-traffic-information-with-graphhopper-in-real-time-for-cologne-germany-koln/) (flexible and hybrid mode only)
  * Customize vehicle profiles per request (flexible and hybrid mode only)
- * Possibility to specify a '[heading parameter](./docs/core/routing.md)' for start, end and via points for navigation applications via `pass_through` or `heading` parameters (flexible and hybrid mode only)
+ * Possibility to specify a [heading parameter](./docs/core/routing.md) of the vehicle for start, end and via points for navigation applications via `pass_through` or `heading` parameters (flexible and hybrid mode only)
  * [Alternative routes](https://discuss.graphhopper.com/t/alternative-routes/424) (flexible and hybrid mode only)
  * [Turn costs and restrictions](https://github.com/graphhopper/graphhopper/pull/55#issuecomment-31089096) (flexible and hybrid mode only)
+ * Country specific routing via SpatialRules
  * Multiple profiles and weightings
  * Several pre-built routing profiles: car, bike, racingbike, mountain bike, foot, motorcycle, ...
- * The core uses only a few dependencies (hppc and slf4j)
+ * The core uses only a few dependencies (hppc, jts and slf4j)
  * Scales from small indoor-sized to world-wide-sized graphs
  * Find nearest point on street e.g. to get elevation or 'snapp to road'
  * Do [map matching](https://github.com/graphhopper/map-matching) with GraphHopper
