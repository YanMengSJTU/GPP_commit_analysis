diff --git a/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java b/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java
index 3f0e9d2a08..4704cec148 100755
--- a/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java
+++ b/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java
@@ -847,7 +847,7 @@ OSMTurnRelation createTurnRelation(ReaderRelation relation) {
                     viaNodeID = member.getRef();
                 }
             }
-            if (fromWayID >= 0 && toWayID >= 0 && viaNodeID >= 0) {
+            if (fromWayID != -1 && toWayID != -1 && viaNodeID != -1) {
                 return new OSMTurnRelation(fromWayID, viaNodeID, toWayID, type);
             }
         }
diff --git a/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMTurnRelation.java b/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMTurnRelation.java
index 62a1994886..b18adb37ba 100755
--- a/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMTurnRelation.java
+++ b/reader-osm/src/main/java/com/graphhopper/reader/osm/OSMTurnRelation.java
@@ -91,7 +91,7 @@ long getOsmIdTo() {
                 int edgeId = iter.getEdge();
                 long wayId = osmReader.getOsmIdOfInternalEdge(edgeId);
                 if (edgeId != edgeIdFrom && this.restriction == Type.ONLY && wayId != this.toOsmWayId
-                        || this.restriction == Type.NOT && wayId == this.toOsmWayId && wayId >= 0) {
+                        || this.restriction == Type.NOT && wayId == this.toOsmWayId && wayId != -1) {
                     final TurnCostTableEntry entry = new TurnCostTableEntry();
                     entry.nodeVia = nodeVia;
                     entry.edgeFrom = edgeIdFrom;
