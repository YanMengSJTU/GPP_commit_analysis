diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
index 45343d1c52..ac18ed1979 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
@@ -65,7 +65,7 @@ public void getRoute(String pointA, String pointB, String routeType)
 	public void getRouteWithAvoidance(String pointA, String pointB,
 			String routeType, String avoidance) throws InterruptedException {
 		String graphHopperWebUrl;
-
+		avoidance= avoidance.toLowerCase().trim();
 		if (IntegrationTestProperties.getTestPropertyBool("viaApigee")) {
 			graphHopperWebUrl = IntegrationTestProperties
 					.getTestProperty("graphHopperWebUrlViaApigee");
@@ -91,7 +91,7 @@ public void getRouteWithAvoidance(String pointA, String pointB,
 
 			if (pointA.split(",").length == 2) {
 				graphUiUtil.getRouteFromServiceWithAvoidance(routeType, avoidance,pointA, pointB);
-				graphUiUtil.getRouteFromUI(routeType, pointA, pointB);
+				graphUiUtil.getRouteFromUI(routeType,avoidance, pointA, pointB);
 			} else {
 				graphUiUtil.getRouteFromUI(routeType,avoidance, pointA, pointB);
 			}
@@ -142,6 +142,47 @@ public void getRoute(String pointA, String pointB, String routeType,
 		}
 
 	}
+	
+	
+	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI and avoid \"([^\"]*)\" via \"([^\"]*)\"$")
+	public void getRouteWithAvoidances(String pointA, String pointB, String routeType,String avoidance,
+			String pointC) throws InterruptedException {
+		String graphHopperWebUrl;
+
+		if (IntegrationTestProperties.getTestPropertyBool("viaApigee")) {
+			graphHopperWebUrl = IntegrationTestProperties
+					.getTestProperty("graphHopperWebUrlViaApigee");
+		} else {
+			graphHopperWebUrl = IntegrationTestProperties
+					.getTestProperty("graphHopperWebUrl");
+		}
+
+		graphUiUtil = new GraphHopperUIUtil(graphHopperWebUrl);
+
+		String testON = IntegrationTestProperties.getTestProperty("testON");
+
+		switch (testON.toUpperCase()) {
+		case "WEB":
+
+			graphUiUtil.getRouteFromUI(routeType,"",pointA, pointB, pointC);
+			break;
+		case "SERVICE":
+			graphUiUtil.getRouteFromServiceWithAvoidance(routeType, avoidance,pointA, pointB, pointC);
+			break;
+		default:
+
+			if (pointA.split(",").length == 2) {
+				graphUiUtil.getRouteFromServiceWithAvoidance(routeType, avoidance,pointA, pointB, pointC);
+				graphUiUtil.getRouteFromUI(routeType, pointA, pointB, pointC);
+			} else {
+				graphUiUtil.getRouteFromUI(routeType,"", pointA, pointB, pointC);
+			}
+
+			break;
+
+		}
+
+	}
 
 	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI via \"([^\"]*)\" and \"([^\"]*)\"$")
 	public void getRoute(String pointA, String pointB, String routeType,
@@ -179,6 +220,44 @@ public void getRoute(String pointA, String pointB, String routeType,
 		}
 
 	}
+	
+	
+	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI and avoid \"([^\"]*)\" via \"([^\"]*)\" and \"([^\"]*)\"$")
+	public void getRouteWithAvoidances(String pointA, String pointB, String routeType,String avoidance,
+			String pointC, String pointD) throws InterruptedException {
+
+		graphUiUtil = new GraphHopperUIUtil(
+				IntegrationTestProperties.getTestProperty("graphHopperWebUrl"));
+
+		String testON = IntegrationTestProperties.getTestProperty("testON");
+
+		switch (testON.toUpperCase()) {
+		case "WEB":
+
+			graphUiUtil.getRouteFromUI(routeType, "",pointA, pointB, pointC,
+					pointD);
+			break;
+		case "SERVICE":
+			graphUiUtil.getRouteFromServiceWithAvoidance(routeType,avoidance, pointA, pointB, pointC,
+					pointD);
+			break;
+		default:
+
+			if (pointA.split(",").length == 2) {
+				graphUiUtil.getRouteFromServiceWithAvoidance(routeType,avoidance, pointA, pointB, pointC,
+						pointD);
+				graphUiUtil.getRouteFromUI(routeType,"", pointA, pointB, pointC,
+						pointD);
+			} else {
+				graphUiUtil.getRouteFromUI(routeType, "",pointA, pointB, pointC,
+						pointD);
+			}
+
+			break;
+
+		}
+
+	}
 
 	@Then("^I should be able to verify the \"([^\"]*)\" waypoint \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" on the route map$")
 	public void I_should_be_able_to_verify_the_waypoint_on_the_route_map(
@@ -187,9 +266,12 @@ public void I_should_be_able_to_verify_the_waypoint_on_the_route_map(
 			String time, String distance) {
 
 		graphUiUtil.isWayPointonRouteMap(wayPointIndex, wayPoint_Coordinates,
-				wayPointDescription, azimuth, direction, time, distance);
+				wayPointDescription, azimuth, direction, time, distance,"");
 
 	}
+	
+	
+	
 
 	@Then("^I should be able to verify the waypoints on the route map:")
 	public void I_should_be_able_to_verify_the_waypoints_on_the_route_map(
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 91855c5fd7..eba00164c0 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -178,7 +178,7 @@ public void getRouteFromUI(String routeType, String avoidance,
 				clickElement(avoidance_Rock);
 				break;
 			case "mud":
-			clickElement(avoidance_Mud);
+				clickElement(avoidance_Mud);
 				break;
 
 			case "sand":
@@ -204,15 +204,31 @@ public void login() {
 		driver.navigate().to(baseUrl);
 	}
 
-	public void verifyInstructionThroughUI(String routeStepNumber,
-			String stepInstruction) {
+	public boolean verifyInstructionThroughUI(String routeStepNumber,
+			String stepInstruction, String avoidance) {
 		this.routeStepNumber = routeStepNumber;
 		List<WebElement> WAY_POINTS = driver.findElements(By
 				.xpath("//*[@id='instructions']/tbody/tr[*]/td[2]"));
-		WAY_POINTS.get(Integer.parseInt(routeStepNumber) - 1).click();
+		try {
+			WAY_POINTS.get(Integer.parseInt(routeStepNumber) - 1).click();
+		} catch (Exception e) {
+			LOG.info(e.getMessage());
+			return false;
+		}
+		if (null!=avoidance)
+		{
+		if (!avoidance.isEmpty()) {
+			avoidance = ",  " + avoidance;
+		}
+		}
+		else
+		{
+			avoidance="";
+		}
 
-		checkTableRow(INSTRUCTIONS, Integer.parseInt(this.routeStepNumber),
-				stepInstruction);
+		return getTableRowStatus(INSTRUCTIONS,
+				Integer.parseInt(this.routeStepNumber), stepInstruction
+						+ avoidance);
 
 	}
 
@@ -221,7 +237,7 @@ public void getRouteFromServiceWithAvoidance(String routeType,
 
 		if (IntegrationTestProperties.getTestProperty("routeType")
 				.equals("gpx")) {
-			GPHService.parseRoute("gpx",avoidance, routeType, points);
+			GPHService.parseRoute("gpx", avoidance, routeType, points);
 		}
 
 		else {
@@ -235,7 +251,7 @@ public void getRouteFromService(String routeType, String... points) {
 
 		if (IntegrationTestProperties.getTestProperty("routeType")
 				.equals("gpx")) {
-			GPHService.parseRoute("gpx", "",routeType, points);
+			GPHService.parseRoute("gpx", "", routeType, points);
 		}
 
 		else {
@@ -267,15 +283,16 @@ private Waypoint buildWayPoint(String waypointco) throws ParseException {
 
 	public boolean isWayPointonRouteMap(String wayPointIndex,
 			String wayPoint_Coordinates, String wayPointDescription,
-			String azimuth, String direction, String time, String distance) {
+			String azimuth, String direction, String time, String distance,
+			String avoidance) {
 		boolean isWayPointonRouteMap = false;
 		Waypoint wp;
 
 		switch (testOn.toUpperCase()) {
 		case "WEB":
 
-			verifyInstructionThroughUI(wayPointIndex, wayPointDescription);
-			isWayPointonRouteMap = true;
+			isWayPointonRouteMap = verifyInstructionThroughUI(wayPointIndex,
+					wayPointDescription, avoidance);
 			break;
 		case "SERVICE":
 			if (IntegrationTestProperties.getTestProperty("routeType").equals(
@@ -294,7 +311,8 @@ public boolean isWayPointonRouteMap(String wayPointIndex,
 			break;
 
 		default:
-			verifyInstructionThroughUI(wayPointIndex, wayPointDescription);
+			verifyInstructionThroughUI(wayPointIndex, wayPointDescription,
+					avoidance);
 
 			if (IntegrationTestProperties.getTestProperty("routeType").equals(
 					"gpx")) {
@@ -355,9 +373,12 @@ public boolean isWayPointonRouteMap(List<Map<String, String>> waypointList) {
 						.get("direction");
 				String time = (String) waypointList.get(i).get("time");
 				String distance = (String) waypointList.get(i).get("distance");
+				String avoidance = (String) waypointList.get(i)
+						.get("avoidance");
+
 				isWayPointonRouteMap = isWayPointonRouteMap(wayPointIndex,
 						waypointco, waypointdesc, azimuth, direction, time,
-						distance);
+						distance, avoidance);
 			}
 
 			else
@@ -368,8 +389,8 @@ public boolean isWayPointonRouteMap(List<Map<String, String>> waypointList) {
 						"wayPointIndex");
 				String waypointdesc = (String) waypointList.get(i).get(
 						"waypointdesc");
-				verifyInstructionThroughUI(wayPointIndex, waypointdesc);
-				isWayPointonRouteMap = true;
+				isWayPointonRouteMap = verifyInstructionThroughUI(
+						wayPointIndex, waypointdesc, "");
 
 			}
 
diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index f82d3869ed..88ba78e28d 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -5,159 +5,159 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Mill lane-BUXTON)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco        | waypointdesc            | azimuth | direction | time  | distance |
-      | 4             | 53.1356,-1.820891 | Continue onto Mill Lane | 70.0    | E         | 23171 | 32.2     |
+      | wayPointIndex | waypointco        | waypointdesc            | azimuth | direction | time  | distance | avoidance |
+      | 4             | 53.1356,-1.820891 | Continue onto Mill Lane | 70.0    | E         | 23171 | 32.2     |           |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 53.176062,-1.871472 | 53.154773,-1.77272 | foot      |
+      | pointA              | pointB             | routetype | avoidance |
+      | 53.176062,-1.871472 | 53.154773,-1.77272 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Chatswoth Park)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance |
-      | 2             | 53.221055,-1.623152 | Turn right onto B Road        | 157.0   | SE        | 984273 | 1367.1   |
-      | 5             | 53.197269,-1.608797 | Continue onto Chatsworth Road | 181.0   | S         | 678871 | 942.9    |
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
+      | 2             | 53.221055,-1.623152 | Turn right onto B Road        | 157.0   | SE        | 984273 | 1367.1   |           |
+      | 5             | 53.197269,-1.608797 | Continue onto Chatsworth Road | 181.0   | S         | 678871 | 942.9    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 53.211013,-1.619393 | 53.185757,-1.611969 | foot      |
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.211013,-1.619393 | 53.185757,-1.611969 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Musden Low)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance |
-      | 3             | 53.042479,-1.820522 | Turn right onto Route | 297.0   | NW        | 35181 | 48.9     |
+      | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance | avoidance |
+      | 3             | 53.042479,-1.820522 | Turn right onto Route | 297.0   | NW        | 35181 | 48.9     |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 53.049589,-1.823866 | 53.076372,-1.853379 | foot      |
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.049589,-1.823866 | 53.076372,-1.853379 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (A54)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc         | azimuth | direction | time   | distance |
-      | 4             | 53.176842,-2.069334 | Turn left onto Track | 255.0   | W         | 187602 | 260.6    |
+      | wayPointIndex | waypointco          | waypointdesc         | azimuth | direction | time   | distance | avoidance |
+      | 4             | 53.176842,-2.069334 | Turn left onto Track | 255.0   | W         | 187602 | 260.6    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 53.173064,-2.060321 | 53.214387,-2.017271 | foot      |
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.173064,-2.060321 | 53.214387,-2.017271 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Townhead )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance |
-      | 5             | 53.11862,-1.909506 | Turn slight left onto Route | 169.0   | S         | 51007 | 70.8     |
+      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance | avoidance |
+      | 5             | 53.11862,-1.909506 | Turn slight left onto Route | 169.0   | S         | 51007 | 70.8     |           |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 53.122676,-1.909914 | 53.088159,-1.87142 | foot      |
+      | pointA              | pointB             | routetype | avoidance |
+      | 53.122676,-1.909914 | 53.088159,-1.87142 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Martin's Low)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance |
-      | 3             | 53.066198,-1.905401 | Turn right onto Track | 105.0   | E         | 38678 | 53.7     |
+      | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance | avoidance |
+      | 3             | 53.066198,-1.905401 | Turn right onto Track | 105.0   | E         | 38678 | 53.7     |           |
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 53.06535,-1.906169 | 53.100994,-1.956274 | foot      |
+      | pointA             | pointB              | routetype | avoidance |
+      | 53.06535,-1.906169 | 53.100994,-1.956274 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Castleton Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance |
-      | 2             | 53.347406,-1.760973 | Turn left onto Castleton Road | 109.0   | E         | 878424 | 1220.0   |
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
+      | 2             | 53.347406,-1.760973 | Turn left onto Castleton Road | 109.0   | E         | 878424 | 1220.0   | ARoad     |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
-      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      | ARoad     |
+      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Hernstone Lane )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time   | distance |
-      | 3             | 53.305821,-1.814508 | Continue onto Hernstone Lane | 299.0   | NW        | 304923 | 423.5    |
+      | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time   | distance | avoidance |
+      | 3             | 53.305821,-1.814508 | Continue onto Hernstone Lane | 299.0   | NW        | 304923 | 423.5    | ARoad     |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
-      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      | ARoad     |
+      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Monyash Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time   | distance |
-      | 5             | 53.20882,-1.688212 | Continue onto Monyash Road | 55.0    | NE        | 482979 | 670.8    |
+      | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time   | distance | avoidance |
+      | 5             | 53.20882,-1.688212 | Continue onto Monyash Road | 55.0    | NE        | 482979 | 670.8    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 53.194909,-1.710481 | 53.156696,-1.634947 | foot      |
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.194909,-1.710481 | 53.156696,-1.634947 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Whitfield lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance |
-      | 4             | 53.143286,-1.647841 | Turn right onto Elton Road | 282.0   | W         | 195384 | 271.4    |
+      | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance | avoidance |
+      | 4             | 53.143286,-1.647841 | Turn right onto Elton Road | 282.0   | W         | 195384 | 271.4    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 53.142876,-1.642599 | 53.163897,-1.714249 | foot      |
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.142876,-1.642599 | 53.163897,-1.714249 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Cardlemere Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time   | distance |
-      | 4             | 53.129383,-1.754591 | Turn left onto Cardlemere Lane | 121.0   | SE        | 594909 | 826.3    |
+      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time   | distance | avoidance |
+      | 4             | 53.129383,-1.754591 | Turn left onto Cardlemere Lane | 121.0   | SE        | 594909 | 826.3    |           |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 53.114295,-1.762789 | 53.086961,-1.69626 | foot      |
+      | pointA              | pointB             | routetype | avoidance |
+      | 53.114295,-1.762789 | 53.086961,-1.69626 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Old Coalpit Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance |
-      | 2             | 53.23952,-1.803512  | Turn left onto Sough Lane       | 189.0   | S         | 452948 | 629.1    |
-      | 29            | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |
-      | 34            | 53.129146,-1.866738 | Turn left onto Cheadle Road     | 179.0   | S         | 171195 | 237.8    |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
+      | 2             | 53.23952,-1.803512  | Turn left onto Sough Lane       | 189.0   | S         | 452948 | 629.1    |           |
+      | 29            | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |           |
+      | 34            | 53.129146,-1.866738 | Turn left onto Cheadle Road     | 179.0   | S         | 171195 | 237.8    |           |
 
     Examples: 
-      | pointA              | pointB            | pointC              | routetype |
-      | 53.238625,-1.794511 | 53.1651,-1.776435 | 53.125221,-1.871205 | foot      |
+      | pointA              | pointB            | pointC              | routetype | avoidance |
+      | 53.238625,-1.794511 | 53.1651,-1.776435 | 53.125221,-1.871205 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Newhouses Farm)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time    | distance | avoidance |
       | 7             | 53.305394,-1.819253 | Turn slight right onto Hernstone Lane | 66.0    | NE        | 304923  | 423.5    | ARoad     |
-      | 12            | 53.25475,-1.727239  | Continue onto Castlegate Lane         | 183.0   | S         | 1156073 | 1605.7   | ARoad     |
+      | 14            | 53.25475,-1.727239  | Continue onto Castlegate Lane         | 183.0   | S         | 1156073 | 1605.7   |           |
 
     Examples: 
       | pointA              | pointB             | pointC              | routetype | avoidance |
-      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      | ARoad     |
+      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Bakewell)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time    | distance |
-      | 6             | 53.145466,-1.778242 | Continue onto Tissington Trail | 17.0    | N         | 2006616 | 2787.0   |
-      | 15            | 53.195118,-1.761669 | Continue onto Church Street    | 38.0    | NE        | 897815  | 1247.0   |
-      | 19            | 53.20882,-1.688212  | Continue onto Monyash Road     | 55.0    | NE        | 369935  | 513.8    |
+      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time    | distance | avoidance |
+      | 6             | 53.145466,-1.778242 | Continue onto Tissington Trail | 17.0    | N         | 2006616 | 2787.0   |           |
+      | 15            | 53.195118,-1.761669 | Continue onto Church Street    | 38.0    | NE        | 897815  | 1247.0   |           |
+      | 19            | 53.20882,-1.688212  | Continue onto Monyash Road     | 55.0    | NE        | 369935  | 513.8    |           |
 
     Examples: 
       | pointA              | pointB              | pointC              | routetype | avoidance |
@@ -165,12 +165,12 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Mill Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance |
-      | 5             | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |
-      | 12            | 53.131356,-1.852045 | Turn slight right onto Path     | 317.0   | NW        | 721024 | 1001.4   |
-      | 16            | 53.181282,-1.869038 | Turn left onto Market Place     | 315.0   | NW        | 791    | 1.1      |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
+      | 5             | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |           |
+      | 12            | 53.131356,-1.852045 | Turn slight right onto Path     | 317.0   | NW        | 721024 | 1001.4   |           |
+      | 16            | 53.181282,-1.869038 | Turn left onto Market Place     | 315.0   | NW        | 791    | 1.1      |           |
 
     Examples: 
       | pointA              | pointB              | pointC             | pointD              | routetype | avoidance |
@@ -178,7 +178,7 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Tag Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time    | distance | avoidance |
       | 7             | 53.227765,-1.848174 | Turn left onto Old Coalpit Lane | 58.0    | NE        | 908755  | 1262.2   | ARoad     |
@@ -192,12 +192,12 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Dowlow Farm)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance |
-      | 2             | 53.206014,-1.83483  | Turn right onto Midshires Way | 191.0   | S         | 265210 | 368.3    |
-      | 19            | 53.202937,-1.870926 | Continue onto Glutton Dale    | 254.0   | W         | 279743 | 388.5    |
-      | 28            | 53.124725,-1.870683 | Turn right onto Cheadle Road  | 243.0   | SW        | 121072 | 168.2    |
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
+      | 2             | 53.206014,-1.83483  | Turn right onto Midshires Way | 191.0   | S         | 265210 | 368.3    |           |
+      | 19            | 53.202937,-1.870926 | Continue onto Glutton Dale    | 254.0   | W         | 279743 | 388.5    |           |
+      | 28            | 53.124725,-1.870683 | Turn right onto Cheadle Road  | 243.0   | SW        | 121072 | 168.2    |           |
 
     Examples: 
       | pointA              | pointB              | pointC              | pointD             | routetype | avoidance |
@@ -206,95 +206,95 @@ Feature: Verify a route from A to B
   # Avoidances : A Road,Boulders,Cliff,Inland Water,Marsh,Quarry Or Pit,Scree,Rock,Mud,Sand,Shingle
   #scree
   @Routing
-  Scenario Outline: Verify DPN Route without Scree avoidance
+  Scenario Outline: Verify DPN Route without Scree avoidance -(scree)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance |
-      | 4             | 53.252061,-1.826618 | continue onto Path | 97.0    | E         | 24386 | 33.9     |
+      | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance | avoidance |
+      | 15            | 53.252061,-1.826618 | Continue onto Path | 97.0    | E         | 24386 | 33.9     | Scree     |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
       | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      |           |
 
   @Routing
-  Scenario Outline: Verify DPN Route with Scree avoidance
+  Scenario Outline: Verify DPN Route with Scree avoidance -(scree)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance |
-      | 4             | 53.252061,-1.826618 | continue onto Path | 97.0    | E         | 24386 | 33.9     |
+      | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance | avoidance |
+      | 15            | 53.252061,-1.826618 | Continue onto Path | 97.0    | E         | 24386 | 33.9     | Scree     |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
-      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      | scree     |
+      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      | Scree     |
 
   #cliff
   @Routing
-  Scenario Outline: Verify DPN Route without cliff avoidance
+  Scenario Outline: Verify DPN Route without cliff avoidance -(cliff)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance |
-      | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
+      | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    | Cliff     |
 
     Examples: 
       | pointA             | pointB              | routetype | avoidance |
       | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      |           |
 
   @Routing
-  Scenario Outline: Verify DPN Route with cliff avoidance
+  Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance |
-      | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
+      | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    | Cliff     |
 
     Examples: 
       | pointA             | pointB              | routetype | avoidance |
-      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      | cliff     |
+      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      | Cliff     |
 
   @Routing
-  Scenario Outline: Verify DPN Route with cliff avoidance
+  Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance |
-      | 3             | 53.547029,-1.979038 | continue onto Route | 191.0   | S         | 3920 | 5.4      |
-      | 5             | 53.546893,-1.979082 | continue onto Route | 180.0   | S         | 5085 | 7.1      |
-      | 7             | 53.542735,-1.981237 | continue onto Route | 185.0   | S         | 9321 | 12.9     |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
+      | 3             | 53.547029,-1.979038 | Continue onto Route | 191.0   | S         | 3920 | 5.4      | Cliff     |
+      | 5             | 53.546893,-1.979082 | Continue onto Route | 180.0   | S         | 5085 | 7.1      | Cliff     |
+      | 7             | 53.542735,-1.981237 | Continue onto Route | 185.0   | S         | 9321 | 12.9     | Cliff     |
 
     Examples: 
       | pointA            | pointB              | routetype | avoidance |
       | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      |           |
 
   @Routing
-  Scenario Outline: Verify DPN Route with cliff avoidance
+  Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance |
-      | 3             | 53.547029,-1.979038 | continue onto Route | 191.0   | S         | 3920 | 5.4      |
-      | 5             | 53.546893,-1.979082 | continue onto Route | 180.0   | S         | 5085 | 7.1      |
-      | 7             | 53.542735,-1.981237 | continue onto Route | 185.0   | S         | 9321 | 12.9     |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
+      | 3             | 53.547029,-1.979038 | Continue onto Route | 191.0   | S         | 3920 | 5.4      | Cliff     |
+      | 5             | 53.546893,-1.979082 | Continue onto Route | 180.0   | S         | 5085 | 7.1      | Cliff     |
+      | 7             | 53.542735,-1.981237 | Continue onto Route | 185.0   | S         | 9321 | 12.9     | Cliff     |
 
     Examples: 
       | pointA            | pointB              | routetype | avoidance |
-      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      | cliff     |
+      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      | Cliff     |
 
   #boulders
   @Routing
-  Scenario Outline: Verify DPN Route without boulders avoidance
+  Scenario Outline: Verify DPN Route without boulders avoidance -(boulders)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance |
-      | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
+      | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    | Boulders  |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
       | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      |           |
 
   @Routing
-  Scenario Outline: Verify DPN Route with boulders avoidance
+  Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance |
-      | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
+      | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    | Boulders  |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
-      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      | boulders  |
+      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      | Boulders  |
