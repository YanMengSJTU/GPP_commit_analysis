diff --git a/core/src/main/java/com/graphhopper/PathWrapper.java b/core/src/main/java/com/graphhopper/PathWrapper.java
index d1b088bc46..92289f1b74 100644
--- a/core/src/main/java/com/graphhopper/PathWrapper.java
+++ b/core/src/main/java/com/graphhopper/PathWrapper.java
@@ -45,7 +45,6 @@
     private PointList waypointList = PointList.EMPTY;
     private PointList pointList = PointList.EMPTY;
     private int numChanges;
-    private long firstPtLegDeparture;
     private final List<Trip.Leg> legs = new ArrayList<>();
     private BigDecimal fare;
 
@@ -279,10 +278,6 @@ public int getNumChanges() {
         return numChanges;
     }
 
-    public void setFirstPtLegDeparture(long firstPtLegDeparture) {
-        this.firstPtLegDeparture = firstPtLegDeparture;
-    }
-
     public List<Trip.Leg> getLegs() {
         return legs;
     }
diff --git a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/TripFromLabel.java b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/TripFromLabel.java
index 1d0b29c4e6..be62552d9a 100644
--- a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/TripFromLabel.java
+++ b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/TripFromLabel.java
@@ -61,9 +61,6 @@ PathWrapper parseSolutionIntoPath(Instant initialTime, boolean arriveBy, PtFlagE
         path.setPoints(pointsList);
         path.setDistance(path.getLegs().stream().mapToDouble(Trip.Leg::getDistance).sum());
         path.setTime((solution.currentTime - initialTime.toEpochMilli()) * (arriveBy ? -1 : 1));
-        if (solution.departureTime != null) {
-            path.setFirstPtLegDeparture(solution.departureTime);
-        }
         path.setNumChanges((int) path.getLegs().stream()
                 .filter(l -> l instanceof Trip.PtLeg)
                 .filter(l -> !((Trip.PtLeg) l).isInSameVehicleAsPrevious)
