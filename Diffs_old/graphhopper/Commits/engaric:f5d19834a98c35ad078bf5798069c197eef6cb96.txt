diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
index 1472aa1039..4deb9cd568 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
@@ -30,9 +30,8 @@ public boolean isWayPointinpath(Waypoint w) {
 			}
 
 		}
-		
-		if(!iswaypointinPath)
-		{
+
+		if (!iswaypointinPath) {
 			LOG.info("Way point not found in the JSON Route");
 		}
 
@@ -54,9 +53,7 @@ public boolean isWayPointinPath(Waypoint we, HashSet<Waypoint> wa) {
 			}
 		}
 
-		
-		if(!iswaypointinPath)
-		{
+		if (!iswaypointinPath) {
 			LOG.info("Way point not found in the JSON Route");
 		}
 		return iswaypointinPath;
@@ -94,8 +91,9 @@ public long getTotalRouteTime() {
 
 	public void verifyMessage(String responseMessage) {
 		String actualErrorMessage = parser.getErrorMessage();
-		Assert.assertTrue(" Service : actual error message:" + actualErrorMessage
-				+ " does not match with: " + responseMessage,
+		Assert.assertTrue(" Service : actual error message:"
+				+ actualErrorMessage + " does not match with: "
+				+ responseMessage,
 				responseMessage.equalsIgnoreCase(actualErrorMessage));
 
 	}
@@ -121,7 +119,7 @@ public String getNearestPoint() {
 	}
 
 	public String getNearestPointDistance() {
-		// TODO Auto-generated method stub
+
 		return parser.getNearestPointDistance();
 	}
 
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
index 0a89121b24..5a896076cf 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
@@ -1,6 +1,7 @@
 package uk.co.ordnancesurvey.gpx.graphhopper;
 
 import java.util.HashSet;
+import java.util.Locale;
 
 import org.alternativevision.gpx.beans.Waypoint;
 import org.slf4j.Logger;
@@ -53,7 +54,6 @@ public void parse(String jsonString) {
 			jElement = parser.parse(jsonString);
 			jObject = jElement.getAsJsonObject();
 			paths = jObject.getAsJsonArray("paths");
-			//info = jObject.getAsJsonObject("info");
 
 			instructions = paths.get(0).getAsJsonObject()
 					.getAsJsonArray("instructions");
@@ -62,7 +62,7 @@ public void parse(String jsonString) {
 		}
 
 		catch (Exception e) {
-			LOG.info("Invalid JSON String :"+ e.getMessage());
+			LOG.info("Invalid JSON String :" + e.getMessage());
 		}
 
 	}
@@ -161,11 +161,9 @@ public long getTotalRouteTime() {
 	}
 
 	public String getErrorMessage() {
-		
-		JsonObject error= jObject.getAsJsonObject("error");
-	//	JsonArray errors = info.getAsJsonArray("errors");
-		//JsonPrimitive errorMessage = errors.get(0).getAsJsonObject()
-		//		.getAsJsonPrimitive("message");
+
+		JsonObject error = jObject.getAsJsonObject("error");
+
 		JsonPrimitive errorMessage = error.getAsJsonObject()
 				.getAsJsonPrimitive("message");
 		return errorMessage.getAsString();
@@ -173,14 +171,12 @@ public String getErrorMessage() {
 	}
 
 	public int getStatusCode() {
-	//	JsonArray errors = info.getAsJsonArray("errors");
+
 		
-		JsonObject error= jObject.getAsJsonObject("error");
-	//	JsonArray errors = info.getAsJsonArray("errors");
+		JsonObject error = jObject.getAsJsonObject("error");
 
 		JsonPrimitive statusCode = error.getAsJsonPrimitive("statuscode");
-		//JsonPrimitive errorMessage = errors.get(0).getAsJsonObject()
-		//		.getAsJsonPrimitive("statuscode");
+
 		return statusCode.getAsInt();
 
 	}
diff --git a/acceptancetesting/src/test/cucumber/Routing-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
index 908554559f..ac9c88f7c5 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
@@ -31,8 +31,7 @@ Feature: Verify Error Messages from a routing service
     Given I have route point as
       | pointA           | pointB              |
       | 50.729961,string | 50.723364,-3.523895 |
-    And I have vehicles as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
+    And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     When I request for a route
@@ -40,16 +39,15 @@ Feature: Verify Error Messages from a routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                   | statusCode |
-      | car         |            | fastest   | json           | No vehicle parameter provided. | 400        |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                     | statusCode |
+      | car         |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
       | pointA              |
       | 50.723364,-3.523895 |
-    And I have vehicles as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
+    And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     When I request for a route
@@ -65,8 +63,7 @@ Feature: Verify Error Messages from a routing service
     Given I have route point as
       | pointA       | pointB              |
       | 292530,92635 | -3.523895,50.723364 |
-    And I have vehicles as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
+    And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     When I request for a route
@@ -83,8 +80,7 @@ Feature: Verify Error Messages from a routing service
     Given I have route points as
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
-    And I have vehicles as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
+    And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     When I request for a route
@@ -99,7 +95,6 @@ Feature: Verify Error Messages from a routing service
   @ErrorMessages
   Scenario Outline: Missing Parameter "point"
     Given I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     When I request for a route
@@ -108,7 +103,7 @@ Feature: Verify Error Messages from a routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                | statusCode |
-      | car         |            | fastest   | json           | No point parameter provided | 400        |
+      | car         |            | fastest   | json           | No point parameter provided. | 400        |
 
   # Parameter :  avoidances
   @ErrorMessages
@@ -117,7 +112,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     When I request for a route
@@ -135,7 +129,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     When I request for a route
@@ -153,7 +146,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have locale as "<locale>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -172,7 +164,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have instructions as "<instructions>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -191,7 +182,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have algorithm as "<algorithm>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -212,7 +202,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have algorithm as "<algorithm>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -234,7 +223,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have points_encoded as "<points_encoded>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -253,7 +241,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have debug as "<debug>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -272,7 +259,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have calc_points as "<debug>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -291,7 +277,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have calc_points as "<debug>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -310,7 +295,6 @@ Feature: Verify Error Messages from a routing service
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
     Given I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
     And I request for HTTP "<httpMethod>" method
@@ -361,7 +345,7 @@ Feature: Verify Error Messages from a routing service
 
     Examples: 
       | locale |
-      | en     |
+      | en_GB  |
       | bg     |
       | ca     |
       | cz     |
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature
index db2d34a895..892e811621 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature
@@ -6,7 +6,6 @@ Feature: Smoke Tests: Verify a route from A to B
   #Error Messages
   #Successful request
   @ErrorMessages @Smoke
-
   Scenario: Successful request with all parameters
     Given I have route point as
       | pointA              | pointB              |
@@ -180,6 +179,8 @@ Feature: Smoke Tests: Verify a route from A to B
       | weighting |
       | fastest   |
       | shortest  |
+      | FASTEST   |
+      | SHORTEST  |
 
   # Parameter :  avoidances
   @ErrorMessages @Smoke
