diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
index 0d4bfba3ca..554543161a 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
@@ -95,12 +95,25 @@ CloseableHttpResponse doSendAndGetResponse(String serviceUrl)
 		return httpClient.execute(httpget);
 	}
 
-	public String parseRoute(String routeType, String avoidance,String vehicle, String[] points) {
+	public String parseRoute(String routeType, String avoidances,String routeOptions, String[] points) {
 		LOG.debug("Here we are");
 		// Set up the URL
 		String xmlResponse = "";
 		String coordinateString = "";
 		String graphHopperUrl;
+		
+		String vehicle="";
+		String routeOption="";
+		
+		if (routeOptions.split(",").length>1)
+		{
+		 vehicle=routeOptions.split(",")[0];
+		 routeOption=routeOptions.split(",")[1];
+		}
+		else
+		{
+			vehicle=routeOptions;
+		}
 
 		for (int i = 0; i < points.length; i++) {
 
@@ -119,6 +132,7 @@ public String parseRoute(String routeType, String avoidance,String vehicle, Stri
 		}
 		
 				
+		String apikey = IntegrationTestProperties.getTestProperty("apiKey");
 
 		StringBuilder sb = new StringBuilder();
 		sb.append(graphHopperUrl);
@@ -129,13 +143,14 @@ public String parseRoute(String routeType, String avoidance,String vehicle, Stri
 		}
 		sb.append("&vehicle=");
 		sb.append(vehicle);
+		sb.append("&weighting=");
+		sb.append(routeOption);
 		sb.append(coordinateString);
-		if(!avoidance.equals(""))
-		{
-		sb.append("&weighting=fastavoid");
-		sb.append("&avoidances="+avoidance);
-		}
-
+		sb.append("&apikey=");
+		sb.append(apikey);
+		if (!avoidances.equals("")) {
+			sb.append("&avoidances=" + avoidances);
+					}
 		try {
 			CloseableHttpResponse httpResponse = sendAndGetResponse(sb
 					.toString());
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
index ae6988f109..f483294e7f 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
@@ -185,6 +185,7 @@ public void parse(String routeType, String avoidances, String routeOptions,
 		}
 
 		String apikey = IntegrationTestProperties.getTestProperty("apiKey");
+
 		StringBuilder sb = new StringBuilder();
 		sb.append(graphHopperUrl);
 		sb.append("route?");
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 7ce69b334d..38f66b6881 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -132,7 +132,7 @@ public void getRouteFromUI(String routeOptions, String avoidances,
 		}
 		clickElement(settingsButton);
 
-		if (!avoidances.isEmpty()) {
+		if (!avoidances.equals("")) {
 			for (int i = 0; i < avoidances.split(",").length; i++) {
 				String avoidance = avoidances.split(",")[i];
 				switch (avoidance.toLowerCase().trim()) {
@@ -178,8 +178,25 @@ public void getRouteFromUI(String routeOptions, String avoidances,
 					break;
 				}
 			}
-
-			if (routeOptions.equalsIgnoreCase("shortavoid")) {
+/*switch (routeOption) {
+case "shortavoid":
+	clickElement(shortest_RButton);
+	break;
+case "fastavoid":
+	clickElement(fastest_RButton);
+	break;
+case "fastest":
+	
+	clickElement(fastest_RButton);
+	break;
+case "shortest":
+	clickElement(shortest_RButton);
+	break;
+
+default:
+	break;
+}
+		*/	if (routeOption.equalsIgnoreCase("shortavoid")) {
 				clickElement(shortest_RButton);
 			}
 
@@ -190,7 +207,7 @@ public void getRouteFromUI(String routeOptions, String avoidances,
 		}
 
 		else {
-			if (routeOptions.equalsIgnoreCase("shortest")) {
+			if (routeOption.equalsIgnoreCase("shortest")) {
 				clickElement(shortest_RButton);
 			}
 
diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index 4a697d6579..59478925b1 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -12,7 +12,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB             | routetype | avoidances |
-      | 53.176062,-1.871472 | 53.154773,-1.77272 | foot      |           |
+      | 53.176062,-1.871472 | 53.154773,-1.77272 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Chatswoth Park)
@@ -24,7 +24,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.211013,-1.619393 | 53.185757,-1.611969 | foot      |           |
+      | 53.211013,-1.619393 | 53.185757,-1.611969 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Musden Low)
@@ -35,7 +35,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.049589,-1.823866 | 53.076372,-1.853379 | foot      |           |
+      | 53.049589,-1.823866 | 53.076372,-1.853379 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (A54)
@@ -46,7 +46,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.173064,-2.060321 | 53.214387,-2.017271 | foot      |           |
+      | 53.173064,-2.060321 | 53.214387,-2.017271 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Townhead )
@@ -57,7 +57,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB             | routetype | avoidances |
-      | 53.122676,-1.909914 | 53.088159,-1.87142 | foot      |           |
+      | 53.122676,-1.909914 | 53.088159,-1.87142 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Martin's Low)
@@ -68,7 +68,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA             | pointB              | routetype | avoidances |
-      | 53.06535,-1.906169 | 53.100994,-1.956274 | foot      |           |
+      | 53.06535,-1.906169 | 53.100994,-1.956274 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Castleton Road)
@@ -79,7 +79,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      |           |
+      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Hernstone Lane )
@@ -90,7 +90,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      |           |
+      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Monyash Road)
@@ -101,7 +101,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.194909,-1.710481 | 53.156696,-1.634947 | foot      |           |
+      | 53.194909,-1.710481 | 53.156696,-1.634947 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Whitfield lane)
@@ -112,7 +112,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.142876,-1.642599 | 53.163897,-1.714249 | foot      |           |
+      | 53.142876,-1.642599 | 53.163897,-1.714249 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Cardlemere Lane)
@@ -123,7 +123,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB             | routetype | avoidances |
-      | 53.114295,-1.762789 | 53.086961,-1.69626 | foot      |           |
+      | 53.114295,-1.762789 | 53.086961,-1.69626 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Old Coalpit Lane)
@@ -136,7 +136,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB            | pointC              | routetype | avoidances |
-      | 53.238625,-1.794511 | 53.1651,-1.776435 | 53.125221,-1.871205 | foot      |           |
+      | 53.238625,-1.794511 | 53.1651,-1.776435 | 53.125221,-1.871205 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Newhouses Farm)
@@ -148,7 +148,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB             | pointC              | routetype | avoidances |
-      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      |           |
+      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Bakewell)
@@ -161,7 +161,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | pointC              | routetype | avoidances |
-      | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 | foot      |           |
+      | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Mill Lane)
@@ -174,7 +174,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | pointC             | pointD              | routetype | avoidances |
-      | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 | foot      |           |
+      | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Tag Lane)
@@ -188,7 +188,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | pointC              | pointD              | routetype | avoidances |
-      | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 | foot      |           |
+      | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 | foot      |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Dowlow Farm)
@@ -201,7 +201,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | pointC              | pointD             | routetype | avoidances |
-      | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 | foot      |           |
+      | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 | foot      |            |
 
   # Avoidances : A Road,Boulders,Cliff,Inland Water,Marsh,Quarry Or Pit,Scree,Rock,Mud,Sand,Shingle
   #scree
@@ -214,7 +214,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      |           |
+      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      |            |
 
   @Routing
   Scenario Outline: Verify DPN Route with Scree avoidance -(scree)
@@ -225,7 +225,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      | Scree     |
+      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      | Scree      |
 
   #cliff
   @Routing
@@ -237,7 +237,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA             | pointB              | routetype | avoidances |
-      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      |           |
+      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      |            |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
@@ -248,7 +248,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA             | pointB              | routetype | avoidances |
-      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      | Cliff     |
+      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      | Cliff      |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
@@ -261,7 +261,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA            | pointB              | routetype | avoidances |
-      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      |           |
+      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      |            |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
@@ -274,7 +274,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA            | pointB              | routetype | avoidances |
-      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      | Cliff     |
+      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      | Cliff      |
 
   #boulders
   @Routing
@@ -286,7 +286,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      |           |
+      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      |            |
 
   @Routing
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
@@ -297,32 +297,29 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA              | pointB              | routetype | avoidances |
-      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      | Boulders  |
-      
-      
-      
-      
+      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      | Boulders   |
+
   #Multiple Avoidance
-  @Routing  @Avoidance
+  @Routing @Avoidance
   Scenario Outline: Verify DPN Route without boulders avoidance -(boulders)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
-      | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0    | E         | 1660 | 2.3    | Cliff  |
-      | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0    | SE         | 178328 |247.7    | Boulders  |
- 
- Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.5534,-1.983177|53.490733,-1.977715 | foot      |           |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
+      | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0   | E         | 1660   | 2.3      | Cliff     |
+      | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0   | SE        | 178328 | 247.7    | Boulders  |
+
+    Examples: 
+      | pointA            | pointB              | routetype | avoidances |
+      | 53.5534,-1.983177 | 53.490733,-1.977715 | foot      |            |
 
   @Routing @Avoidance
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
-      | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0    | E         | 1660 | 2.3    | Cliff  |
-      | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0    | SE         | 178328 |247.7    | Boulders  |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
+      | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0   | E         | 1660   | 2.3      | Cliff     |
+      | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0   | SE        | 178328 | 247.7    | Boulders  |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.5534,-1.983177|53.490733,-1.977715 | foot,fastavoid      | Boulders,Cliff  |
+      | pointA            | pointB              | routetype      | avoidances     |
+      | 53.5534,-1.983177 | 53.490733,-1.977715 | foot,fastavoid | Boulders,Cliff |
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
index bd958b86c8..a79407c95d 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
@@ -8,46 +8,46 @@ Feature: Verify a route from A to B
   Scenario Outline: Verify  one Way  Restrictions  on a Route (EX-Bridge South - Exteter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.719156,-3.537811 | Continue onto A3015 (FROG STREET) | 41.0    | NE        | 13259 | 221.8    ||
+      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.719156,-3.537811 | Continue onto A3015 (FROG STREET) | 41.0    | NE        | 13259 | 221.8    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.717615,-3.536538 | 50.719106,-3.535359 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.717615,-3.536538 | 50.719106,-3.535359 | car          |            |
 
   # Same route but different waypointdesc
   @Routing
   Scenario Outline: Verify  one Way  Restrictions on a Route (Cleveladn Street-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time | distance |avoidance|
-      | 2             | 50.717806,-3.54264 | Turn left onto BULLER ROAD | 137.0   | SE        | 4467 | 55.8     ||
+      | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.717806,-3.54264 | Turn left onto BULLER ROAD | 137.0   | SE        | 4467 | 55.8     |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.717951,-3.542331 | 50.718613,-3.539589 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.717951,-3.542331 | 50.718613,-3.539589 | car          |            |
 
   @Routing
   Scenario Outline: Verify  one Way  Restrictions on a Route (Cleveladn Street-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance |avoidance|
-      | 4             | 50.718462,-3.541302 | Turn left onto CLEVELAND STREET | 232.0   | SW        | 9534 | 119.2    ||
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 4             | 50.718462,-3.541302 | Turn left onto CLEVELAND STREET | 232.0   | SW        | 9534 | 119.2    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.718282,-3.538437 | 50.717687,-3.541511 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.718282,-3.538437 | 50.717687,-3.541511 | car          |            |
 
   @Routing
   Scenario Outline: Verify  one Way  Restrictions (Except Buses) on a Route (SIDWELL STREET-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time | distance |avoidance|
-      | 4             | 50.726689,-3.52712 | Turn left onto LONGBROOK STREET | 190.0   | S         | 6267 | 78.3     ||
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 4             | 50.726689,-3.52712 | Turn left onto LONGBROOK STREET | 190.0   | S         | 6267 | 78.3     |           |
 
     Examples: 
-      | pointA              | pointB               | routeOptions |avoidances|
-      | 50.727949,-3.523498 | 50.726428,-3.5251291 | car       ||
+      | pointA              | pointB               | routeOptions | avoidances |
+      | 50.727949,-3.523498 | 50.726428,-3.5251291 | car          |            |
 
   @Routing
   Scenario Outline: Verify  oneway Restrictions on a Route (Exeter)
@@ -57,76 +57,76 @@ Feature: Verify a route from A to B
       | 50.71958,-3.534089 |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.720492,-3.535221 | 50.718641,-3.53476 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.720492,-3.535221 | 50.718641,-3.53476 | car          |            |
 
   @KnownIssues
   Scenario Outline: Verify  one Way  Restrictions  on a Route (Exeter WSPIP-98)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |avoidance|
-      | 7             | 50.722198,-3.526704 | Turn left onto SOUTHERNHAY EAST | 32      | NE        | 5838 | 56.761   ||
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 7             | 50.722198,-3.526704 | Turn left onto SOUTHERNHAY EAST | 32      | NE        | 5838 | 56.761   |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.720454,-3.530089 | 50.722657,-3.526321 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.720454,-3.530089 | 50.722657,-3.526321 | car          |            |
 
   # No Entry Restrictions
   @Routing
   Scenario Outline: Verify  No Entry  Restrictions on a Route (High Street(London Inn Square)-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                                 | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.725549,-3.52693 | Turn slight left onto NEW NORTH ROAD (B3183) | 285.0   | W         | 57545 | 729.1    ||
+      | wayPointIndex | waypointco         | waypointdesc                                 | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.725549,-3.52693 | Turn slight left onto NEW NORTH ROAD (B3183) | 285.0   | W         | 57545 | 729.1    |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.725425,-3.526925 | 50.72442,-3.532756 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.725425,-3.526925 | 50.72442,-3.532756 | car          |            |
 
   @Routing
   Scenario Outline: Verify  No Entry  Restrictions on a Route (CHEEK STREET-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time | distance |avoidance|
-      | 2             | 50.727244,-3.522476 | Turn left onto SUMMERLAND STREET | 313.0   | NW        | 5223 | 65.3     ||
+      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.727244,-3.522476 | Turn left onto SUMMERLAND STREET | 313.0   | NW        | 5223 | 65.3     |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.726234,-3.524072 | 50.727186,-3.52392 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.726234,-3.524072 | 50.727186,-3.52392 | car          |            |
 
   @Routing
   Scenario Outline: Verify  No Entry(Except for Buses and Taxis)  Restrictions on a Route (Sidwell Street-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance |avoidance|
-      | 4             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    ||
+      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance | avoidance |
+      | 4             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.726529,-3.524928 | 50.727002,-3.52419 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.726529,-3.524928 | 50.727002,-3.52419 | car          |            |
 
   # No Turns Restrictions and Roundabout
   @Routing
   Scenario Outline: Verify  No Turn  Restrictions on a Route (Western Way-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.728509,-3.520647 | At roundabout, take exit 1 onto SIDWELL STREET | 282.0   | W         | 16437 | 212.5    ||
+      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.728509,-3.520647 | At roundabout, take exit 1 onto SIDWELL STREET | 282.0   | W         | 16437 | 212.5    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.726735,-3.520955 | 50.726914,-3.522033 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.726735,-3.520955 | 50.726914,-3.522033 | car          |            |
 
   @Routing
   Scenario Outline: Verify  No Turn Restriction (Denmark Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance |avoidance|
-      | 3             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    ||
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance | avoidance |
+      | 3             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.724901,-3.521588 | 50.724524,-3.520923 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.724901,-3.521588 | 50.724524,-3.520923 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Turn Restrictions  on a Route (Exeter)
@@ -136,192 +136,192 @@ Feature: Verify a route from A to B
       | 50.721201,-3.532498 |
 
     Examples: 
-      | pointA             | pointB             | routeOptions |avoidances|
-      | 50.72148,-3.532485 | 50.721888,-3.53182 | car       ||
-      
-# The below issue is a data issue and been reported into jira as route-67
+      | pointA             | pointB             | routeOptions | avoidances |
+      | 50.72148,-3.532485 | 50.721888,-3.53182 | car          |            |
+
+  # The below issue is a data issue and been reported into jira as route-67
   @KnownIssues
   Scenario Outline: Verify No  Turn Restrictions(Except Bus)  on a Route (BELGROVE ROAD -Exeter ROUTE-67)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                 | azimuth | direction | time | distance |avoidance|
-      | 2             | 50.725997,-3.52296 | Turn left onto CHEEKE STREET | 135     | SE        | 5639 | 56.915   ||
+      | wayPointIndex | waypointco         | waypointdesc                 | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.725997,-3.52296 | Turn left onto CHEEKE STREET | 135     | SE        | 5639 | 56.915   |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.726085,-3.522837 | 50.725076,-3.52442 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.726085,-3.522837 | 50.725076,-3.52442 | car          |            |
 
   # Mandatory Turn Restrictions
   @Routing
   Scenario Outline: Verify  Mandatory Turn(with exceptions) at Exeter area
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance |avoidance|
-      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 133.0   | SE        | 564  | 7.1      ||
+      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 133.0   | SE        | 564  | 7.1      |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.726823,-3.524432 | 50.725423,-3.526813 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.726823,-3.524432 | 50.725423,-3.526813 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Mandatory Turn at Exeter area(DENMARK ROAD)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    ||
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.724777,-3.520811 | 50.724394,-3.520953 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.724777,-3.520811 | 50.724394,-3.520953 | car          |            |
 
   @Routing @KnownIssues
   Scenario Outline: Verify  Mandatory Turn at Exeter area(COLLEGE ROAD)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.72133,-3.519451 | Turn right onto SPICER ROAD | 278     | W         | 41233 | 400.903  ||
+      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.72133,-3.519451 | Turn right onto SPICER ROAD | 278     | W         | 41233 | 400.903  |           |
 
     Examples: 
-      | pointA             | pointB              | routeOptions |avoidances|
-      | 50.723597,-3.51776 | 50.723773,-3.517251 | car       ||
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.723597,-3.51776 | 50.723773,-3.517251 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Mandatory Turn Restriction (Denmark Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time | distance |avoidance|
-      | 2             | 50.724703,-3.520835 | Turn right onto HEAVITREE ROAD (B3183) | 293.0   | NW        | 1118 | 10.9     ||
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.724703,-3.520835 | Turn right onto HEAVITREE ROAD (B3183) | 293.0   | NW        | 1118 | 10.9     |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.724378,-3.520993 | 50.72413,-3.518874 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.724378,-3.520993 | 50.72413,-3.518874 | car          |            |
 
   # Access Limited To
   @Routing
   Scenario Outline: Verify  Access Limited To  Restrictions on a Route (North Street-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco       | waypointdesc               | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.72258,-3.5326 | Continue onto SOUTH STREET | 135.0   | SE        | 15537 | 194.2    ||
+      | wayPointIndex | waypointco       | waypointdesc               | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.72258,-3.5326 | Continue onto SOUTH STREET | 135.0   | SE        | 15537 | 194.2    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.722996,-3.533354 | 50.726428,-3.525129 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.722996,-3.533354 | 50.726428,-3.525129 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Access Limited To  Restrictions on a Route (Paris Street-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance |avoidance|
-      | 5             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    ||
+      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance | avoidance |
+      | 5             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.724989,-3.526006 | 50.729735,-3.519862 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.724989,-3.526006 | 50.729735,-3.519862 | car          |            |
 
   # Access Prohibited To
   @Routing
   Scenario Outline: Verify  Access Prohibited To  Restrictions on a Route (Iron Bridge Street-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                   | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.724661,-3.53639 | Turn left onto ST DAVID'S HILL | 310.0   | NW        | 35154 | 439.4    ||
+      | wayPointIndex | waypointco         | waypointdesc                   | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.724661,-3.53639 | Turn left onto ST DAVID'S HILL | 310.0   | NW        | 35154 | 439.4    |           |
 
     Examples: 
-      | pointA             | pointB              | routeOptions |avoidances|
-      | 50.72458,-3.536493 | 50.723442,-3.534131 | car       ||
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.72458,-3.536493 | 50.723442,-3.534131 | car          |            |
 
   @Routing @KnownIssues
   Scenario Outline: Verify  Access Prohibited To  Restrictions on a Route (Upper Paul Street-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.724819,-3.532223 | Turn left onto QUEEN STREET | 324.0   | NW        | 37994 | 369.4    ||
+      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.724819,-3.532223 | Turn left onto QUEEN STREET | 324.0   | NW        | 37994 | 369.4    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.724614,-3.532555 | 50.724639,-3.530457 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.724614,-3.532555 | 50.724639,-3.530457 | car          |            |
 
   # Ford
   @Routing
   Scenario Outline: Verify  Ford  Restrictions on a Route (BONHAY Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance |avoidance|
-      | 4             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 12281 | 153.5    ||
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
+      | 4             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 12281 | 153.5    |           |
 
     Examples: 
-      | pointA             | pointB              | routeOptions |avoidances|
-      | 50.731111,-3.54277 | 50.719327,-3.538255 | car       ||
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.731111,-3.54277 | 50.719327,-3.538255 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Ford  Restrictions on a Route (Quadrangle Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.730716,-3.530028 | Turn left onto HORSEGUARDS | 189.0   | S         | 21893 | 273.7    ||
+      | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.730716,-3.530028 | Turn left onto HORSEGUARDS | 189.0   | S         | 21893 | 273.7    |           |
 
     Examples: 
-      | pointA             | pointB              | routeOptions |avoidances|
-      | 50.730861,-3.52934 | 50.731808,-3.529829 | car       ||
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.730861,-3.52934 | 50.731808,-3.529829 | car          |            |
 
   # Gate
   @Routing
   Scenario Outline: Verify  Gate  Restrictions on a Route (Cathedral Close Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time  | distance |avoidance|
-      | 3             | 50.722198,-3.526704 | Turn right onto SOUTHERNHAY EAST | 202.0   | SW        | 20129 | 255.9    ||
+      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
+      | 3             | 50.722198,-3.526704 | Turn right onto SOUTHERNHAY EAST | 202.0   | SW        | 20129 | 255.9    |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.722333,-3.527488 | 50.72243,-3.532372 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.722333,-3.527488 | 50.72243,-3.532372 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Gate  Restrictions on a Route (Lower Northen Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.722081,-3.539012 | Turn left onto A377 | 166.0   | S         | 29003 | 395.5    ||
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.722081,-3.539012 | Turn left onto A377 | 166.0   | S         | 29003 | 395.5    |           |
 
     Examples: 
-      | pointA            | pointB              | routeOptions |avoidances|
-      | 50.7244,-3.535817 | 50.723705,-3.534493 | car       ||
+      | pointA            | pointB              | routeOptions | avoidances |
+      | 50.7244,-3.535817 | 50.723705,-3.534493 | car          |            |
 
   #Private Road
   @Routing
   Scenario Outline: Verify  a Private Road (Publicly Accessible) on a Route  (PERRY ROAD)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 2.0     | N         | 13195 | 166.8    ||
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 2.0     | N         | 13195 | 166.8    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.732296,-3.535372 | 50.733538,-3.537462 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.732296,-3.535372 | 50.733538,-3.537462 | car          |            |
 
   #Roundabout
   @Routing
   Scenario Outline: Verify a  Private Road (Publicly Accessible) on a Route (QUEEN STREET)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                           | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.727397,-3.535531 | At roundabout, take exit 3 onto NEW NORTH ROAD (B3183) | 295.0   | NW        | 14023 | 181.3    ||
+      | wayPointIndex | waypointco          | waypointdesc                                           | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.727397,-3.535531 | At roundabout, take exit 3 onto NEW NORTH ROAD (B3183) | 295.0   | NW        | 14023 | 181.3    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.727003,-3.535041 | 50.727023,-3.533083 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.727003,-3.535041 | 50.727023,-3.533083 | car          |            |
 
   @Routing
   Scenario Outline: Verify a PrivateRoad -Restricted Access(WESTERN WAY)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance |avoidance|
-      | 1             | 50.72593,-3.521909 | Continue onto B3212 (WESTERN WAY) | 38.0    | NE        | 3099 | 38.7     ||
+      | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance | avoidance |
+      | 1             | 50.72593,-3.521909 | Continue onto B3212 (WESTERN WAY) | 38.0    | NE        | 3099 | 38.7     |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.725876,-3.521801 | 50.72619,-3.521541 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.725876,-3.521801 | 50.72619,-3.521541 | car          |            |
 
   @Routing
   Scenario Outline: Verify a Private Road - Restricted Access (Denmark Road-Exeter)
@@ -331,76 +331,74 @@ Feature: Verify a route from A to B
       | 50.723966,-3.5198 |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.724316,-3.521008 | 50.72413,-3.518874 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.724316,-3.521008 | 50.72413,-3.518874 | car          |            |
 
   #Roundabouts
   @Routing
   Scenario Outline: Verify a roundabout(WESTERN WAY)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.728793,-3.520273 | At roundabout, take exit 2 onto SIDWELL STREET | 178.0   | S         | 19800 | 259.2    ||
+      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.728793,-3.520273 | At roundabout, take exit 2 onto SIDWELL STREET | 178.0   | S         | 19800 | 259.2    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.729277,-3.519078 | 50.728889,-3.522884 | car       ||
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.729277,-3.519078 | 50.728889,-3.522884 | car          |            |
 
   @Routing
   Scenario Outline: Verify a roundabout(WESTERN WAY)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                        | azimuth | direction | time  | distance |avoidance|
-      | 2             | 50.725096,-3.522378 | At roundabout, take exit 4 onto B3212 (WESTERN WAY) | 239.0   | SW        | 19384 | 255.8    ||
+      | wayPointIndex | waypointco          | waypointdesc                                        | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.725096,-3.522378 | At roundabout, take exit 4 onto B3212 (WESTERN WAY) | 239.0   | SW        | 19384 | 255.8    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.724137,-3.518937 | 50.728366,-3.524132 | car       ||
-      
-     # Quickest route
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.724137,-3.518937 | 50.728366,-3.524132 | car          |            |
+
+  # Quickest route
   # Motorways (Victoria Street, Union Road ,Blackhall Road ,Well Street ,Devon Shire Place, Culverland Road).These roads are converted into motorways in Exeter
-      
-      @Routing
+  @Routing
   Scenario Outline: Verify  a quickest route  on a Route (Springfield Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |avoidance|
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    ||
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    |           |
 
     Examples: 
-      | pointA             | pointB            | routeOptions |avoidances|
-      | 50.733719,-3.52332 | 50.732556,-3.5211 | car       ||
+      | pointA             | pointB            | routeOptions | avoidances |
+      | 50.733719,-3.52332 | 50.732556,-3.5211 | car          |            |
 
   @Routing
   Scenario Outline: Verify  a quickest route  on a Route (DEVON SHIRE PLACE-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance |avoidance|
-      | 3             | 50.733574,-3.524027 | Turn right onto DEVON SHIRE PLACE | 162.0   | S         | 8490 | 235.9    ||
+      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance | avoidance |
+      | 3             | 50.733574,-3.524027 | Turn right onto DEVON SHIRE PLACE | 162.0   | S         | 8490 | 235.9    |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.734095,-3.524696 | 50.72809,-3.524451 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.734095,-3.524696 | 50.72809,-3.524451 | car          |            |
 
   @Routing
   Scenario Outline: Verify  a quickest route  on a Route (BLACKALL ROAD-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                | azimuth | direction | time  | distance |avoidance|
-      | 3             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 22108 | 276.4    ||
+      | wayPointIndex | waypointco          | waypointdesc                                | azimuth | direction | time  | distance | avoidance |
+      | 3             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 22108 | 276.4    |           |
 
     Examples: 
-      | pointA              | pointB             | routeOptions |avoidances|
-      | 50.729887,-3.526896 | 50.726279,-3.52780 | car       ||
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.729887,-3.526896 | 50.726279,-3.52780 | car          |            |
 
   @Routing
   Scenario Outline: Verify  a quickest route  on a Route (VICTORIA STREET-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |avoidance|
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    ||
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    |           |
 
     Examples: 
-      | pointA              | pointB              | routeOptions |avoidances|
-      | 50.733648,-3.523662 | 50.732844,-3.521332 | car       ||
-      
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.733648,-3.523662 | 50.732844,-3.521332 | car          |            |
diff --git a/acceptancetesting/src/test/cucumber/routing.feature b/acceptancetesting/src/test/cucumber/routing.feature
index 0d3ee19df9..959463c8f2 100644
--- a/acceptancetesting/src/test/cucumber/routing.feature
+++ b/acceptancetesting/src/test/cucumber/routing.feature
@@ -5,7 +5,6 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  waypoints on a Route
- 
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time | distance | avoidance |
@@ -44,7 +43,7 @@ Feature: Verify a route from A to B
       | pointA              | pointB             | routeOptions | avoidances |
       | 50.896617,-1.400465 | 55.861284,-4.24996 | car          |            |
 
-  @Routing 
+  @Routing
   Scenario Outline: Verify  waypoints on a Route from London to Birmingham
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
@@ -59,7 +58,7 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | routeOptions | avoidances |
       | 51.507229,-0.127581 | 52.481875,-1.898743 | car          |            |
 
-@Routing
+  @Routing
   Scenario Outline: Verify  waypoints on a Route from London to Birmingham and the total route time estimate
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then The total route time should be not more than "<totalRouteTime>"
@@ -77,7 +76,7 @@ Feature: Verify a route from A to B
       | pointA             | pointB              | routeOptions | avoidances | totalRouteTime |
       | 51.475161,-0.39591 | 51.536292,-0.656802 | car          |            | 0h30min        |
 
-  @Routing 
+  @Routing
   Scenario Outline: Verify  waypoints on a Route from Southampton to Glasgow
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints on the route map:
@@ -91,7 +90,7 @@ Feature: Verify a route from A to B
       | pointA              | pointB             | routeOptions | avoidances |
       | 50.896617,-1.400465 | 55.861284,-4.24996 | car          |            |
 
-  @Routing 
+  @Routing
   Scenario Outline: Verify  oneway Restrictions on a Route (Burmingham Route with one way restriction-WSPIP-74)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
@@ -102,7 +101,7 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | routeOptions | avoidances |
       | 52.446823,-1.929077 | 52.446604,-1.930043 | car          |            |
 
-  @KnownIssues @Routing 
+  @KnownIssues @Routing
   Scenario Outline: Verify  No Turn Restrictions  on a Route (Birmingham WSPIP-77)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
@@ -124,7 +123,7 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | routeOptions | avoidances |
       | 52.446823,-1.929077 | 52.446672,-1.929691 | car          |            |
 
-  @Routing 
+  @Routing
   Scenario Outline: Verify  under pass still finds route  from top road (Southampton- Charle WattsWay)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints on the route map:
@@ -134,8 +133,8 @@ Feature: Verify a route from A to B
     Examples: 
       | pointA              | pointB              | routeOptions | avoidances |
       | 50.917598,-1.317992 | 50.919748,-1.310342 | car          |            |
- 
-  @Routing 
+
+  @Routing
   Scenario Outline: Verify  under pass still finds route from bottom road  (Southampton- Charle WattsWay)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints on the route map:
@@ -201,7 +200,7 @@ Feature: Verify a route from A to B
       | pointA             | pointB              | routeOptions | avoidances |
       | 51.47118,-0.363609 | 51.470254,-0.363412 | car          |            |
 
-  @Routing 
+  @Routing
   Scenario Outline: Verify  Private Road Restricted Access (Warwick Road-Carlisle)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
@@ -354,7 +353,7 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  Route using one intermediate waypoint (Hounslow to Reading via Staines )
-   Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time   | distance | avoidance |
       | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD         | 286.0   | W         | 10789  | 104.9    |           |
@@ -420,7 +419,7 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | pointC             | pointD              | routeOptions | avoidances |
       | 51.746075,-1.263972 | 52.289962,-1.604752 | 52.202814,0.051429 | 51.491412,-0.610276 | car          |            |
 
-  @Routing 
+  @Routing
   Scenario Outline: Verify  Route using 2 intermediate waypoints (Perth to Edinburgh via Stirling and Glasgow )
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
@@ -432,7 +431,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | pointA             | pointB              | pointC              | pointD              | routeOptions | avoidances |
-      | 56.38721,-3.466273 | 56.136656,-3.970408 | 55.871665,-4.195067 | 55.950467,-3.208924 | car,fastest |            |
+      | 56.38721,-3.466273 | 56.136656,-3.970408 | 55.871665,-4.195067 | 55.950467,-3.208924 | car,fastest  |            |
 
   @Routing
   Scenario Outline: Verify  nearest point on a Route
@@ -442,3 +441,32 @@ Feature: Verify a route from A to B
     Examples: 
       | pointA              | pointB                                 | distance          |
       | 51.878966,-0.903849 | 51.875144098888576,-0.9107481891829116 | 636.3215777261629 |
+
+  
+  # Fastest and Shortest Route Scenarios
+  
+  @Routing @Current
+  Scenario Outline: Verify  waypoints on a Route from Hounslow to Reading
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time   | distance | avoidance |
+      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD        | 286.0   | W         | 8390   | 104.9    |           |
+      | 9             | 51.468674,-0.370905 | Turn right onto BATH ROAD (A3006)   | 280.0   | W         | 134212 | 1758.0   |           |
+      | 17            | 51.483218,-0.583061 | Turn right onto WINDSOR ROAD (B470) | 321.0   | NW        | 60059  | 750.7    |           |
+
+    Examples: 
+      | pointA                                 | pointB                                 | routeOptions | avoidances |
+      | 51.471546541834144,-0.3618621826171875 | 51.45914115860512,-0.96679687499999995 | car,shortest |            |
+
+  @Routing @Current
+  Scenario Outline: Verify  waypoints on a Route from Hounslow to Reading
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time    | distance | avoidance |
+      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD           | 286.0   | W         | 8390    | 104.9    |           |
+      | 8             | 51.491316,-0.41082  | At roundabout, take exit 2 onto M4     | 339.0   | N         | 1300443 | 36121.5  |           |
+      | 16            | 51.453903,-0.961826 | Continue onto WATLINGTON STREET (A329) | 341.0   | N         | 8584    | 132.7    |           |
+
+    Examples: 
+      | pointA                                 | pointB                                 | routeOptions | avoidances |
+      | 51.471546541834144,-0.3618621826171875 | 51.45914115860512,-0.96679687499999995 | car,fastest  |            |
