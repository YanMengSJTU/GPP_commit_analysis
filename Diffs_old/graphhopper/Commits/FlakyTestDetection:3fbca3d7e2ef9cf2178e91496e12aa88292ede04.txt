diff --git a/client-hc/src/test/java/com/graphhopper/api/AbstractGraphHopperMatrixWebIntegrationTester.java b/client-hc/src/test/java/com/graphhopper/api/AbstractGraphHopperMatrixWebIntegrationTester.java
index 5d255c3f3e..c92f3980cb 100644
--- a/client-hc/src/test/java/com/graphhopper/api/AbstractGraphHopperMatrixWebIntegrationTester.java
+++ b/client-hc/src/test/java/com/graphhopper/api/AbstractGraphHopperMatrixWebIntegrationTester.java
@@ -38,15 +38,15 @@ public void testMatrix() {
         }
 
         // ... only weight:
-        assertEquals(1685, res.getWeight(1, 2), 5);
+        assertEquals(1690, res.getWeight(1, 2), 10);
 
         req = AbstractGHMatrixWebTester.createRequest();
         req.addOutArray("weights");
         req.addOutArray("distances");
         res = ghMatrix.route(req);
 
-        assertEquals(9664, res.getDistance(1, 2), 20);
-        assertEquals(1685, res.getWeight(1, 2), 10);
+        assertEquals(9800, res.getDistance(1, 2), 50);
+        assertEquals(1695, res.getWeight(1, 2), 10);
     }
 
     @Test
@@ -69,6 +69,6 @@ public void testNxM_issue45() {
                 .addToPoints(Arrays.asList(new GHPoint(52.557151, 13.515244), new GHPoint(52.454545, 13.295517)));
 
         MatrixResponse res = ghMatrix.route(ghmRequest);
-        assertEquals(2436, res.getTime(0, 1) / 1000, 20);
+        assertEquals(2415, res.getTime(0, 1) / 1000, 20);
     }
 }
diff --git a/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java b/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java
index 241ad0f3ef..3a31ff31bc 100644
--- a/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java
+++ b/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java
@@ -49,7 +49,7 @@ public void testSimpleRoute() {
         assertFalse("errors:" + res.getErrors().toString(), res.hasErrors());
         PathWrapper alt = res.getBest();
         isBetween(200, 250, alt.getPoints().size());
-        isBetween(9900, 10300, alt.getDistance());
+        isBetween(11000, 12000, alt.getDistance());
 
         // change vehicle
         res = gh.route(new GHRequest(49.6724, 11.3494, 49.6550, 11.4180).
@@ -88,7 +88,7 @@ public void testNoPoints() {
         assertFalse("errors:" + res.getErrors().toString(), res.hasErrors());
         PathWrapper alt = res.getBest();
         assertEquals(0, alt.getPoints().size());
-        isBetween(9900, 10300, alt.getDistance());
+        isBetween(11000, 12000, alt.getDistance());
     }
 
     @Test
@@ -239,15 +239,15 @@ public void testMatrix() {
         }
 
         // ... only weight:
-        assertEquals(1685, res.getWeight(1, 2), 5);
+        assertEquals(1695, res.getWeight(1, 2), 5);
 
         req = AbstractGHMatrixWebTester.createRequest();
         req.addOutArray("weights");
         req.addOutArray("distances");
         res = ghMatrix.route(req);
 
-        assertEquals(9664, res.getDistance(1, 2), 20);
-        assertEquals(1685, res.getWeight(1, 2), 10);
+        assertEquals(9834, res.getDistance(1, 2), 20);
+        assertEquals(1695, res.getWeight(1, 2), 10);
     }
 
     @Test
