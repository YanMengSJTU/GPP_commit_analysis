diff --git a/core/src/main/java/com/graphhopper/util/InstructionList.java b/core/src/main/java/com/graphhopper/util/InstructionList.java
index 8a5a878492..d8ffc113fc 100644
--- a/core/src/main/java/com/graphhopper/util/InstructionList.java
+++ b/core/src/main/java/com/graphhopper/util/InstructionList.java
@@ -179,7 +179,7 @@ public String createGPX( String trackName, long startTimeMillis, String timeZone
 
     public String createGPX( String trackName, long startTimeMillis, String timeZoneId, boolean includeElevation )
     {
-        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ");
+        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
         TimeZone tz = TimeZone.getDefault();
         if (!Helper.isEmpty(timeZoneId))
             tz = TimeZone.getTimeZone(timeZoneId);
@@ -196,7 +196,7 @@ public String createGPX( String trackName, long startTimeMillis, String timeZone
                 + "<link href='http://graphhopper.com'>"
                 + "<text>GraphHopper GPX</text>"
                 + "</link>"
-                + "<time>" + tzHack(formatter.format(startTimeMillis)) + "</time>"
+                + "<time>" + formatter.format(startTimeMillis) + "</time>"
                 + "</metadata>";
         StringBuilder track = new StringBuilder(header);
         if (!isEmpty())
@@ -223,7 +223,7 @@ public String createGPX( String trackName, long startTimeMillis, String timeZone
             track.append("' lon='").append(Helper.round6(entry.getLon())).append("'>");
             if (includeElevation)
                 track.append("<ele>").append(Helper.round2(entry.getEle())).append("</ele>");
-            track.append("<time>").append(tzHack(formatter.format(startTimeMillis + entry.getMillis()))).append("</time>");
+            track.append("<time>").append(formatter.format(startTimeMillis + entry.getMillis())).append("</time>");
             track.append("</trkpt>");
         }
         track.append("</trkseg>");
@@ -234,14 +234,6 @@ public String createGPX( String trackName, long startTimeMillis, String timeZone
         return track.toString().replaceAll("\\'", "\"");
     }
 
-    /**
-     * Hack to form valid timezone ala +01:00 instead +0100
-     */
-    private static String tzHack( String str )
-    {
-        return str.substring(0, str.length() - 2) + ":" + str.substring(str.length() - 2);
-    }
-
     private void createRteptBlock( StringBuilder output, Instruction instruction, Instruction nextI )
     {
         output.append("\n<rtept lat=\"").append(Helper.round6(instruction.getFirstLat())).
diff --git a/core/src/test/java/com/graphhopper/util/InstructionListTest.java b/core/src/test/java/com/graphhopper/util/InstructionListTest.java
index 79b9fc9f95..828d1b1e00 100644
--- a/core/src/test/java/com/graphhopper/util/InstructionListTest.java
+++ b/core/src/test/java/com/graphhopper/util/InstructionListTest.java
@@ -327,10 +327,10 @@ public void testInstructionsWithTimeAndPlace()
         assertEquals(15.2, wayList.get(3).getFirstLat(), 1e-3);
         assertEquals(9.9, wayList.get(3).getFirstLon(), 1e-3);
 
-        String gpxStr = wayList.createGPX("test", 0, "GMT+1");
+        String gpxStr = wayList.createGPX("test", 0, "GMT");
         verifyGPX(gpxStr);
 
-        assertTrue(gpxStr, gpxStr.contains("<trkpt lat=\"15.0\" lon=\"10.0\"><time>1970-01-01T01:00:00+01:00</time>"));
+        assertTrue(gpxStr, gpxStr.contains("<trkpt lat=\"15.0\" lon=\"10.0\"><time>1970-01-01T00:00:00Z</time>"));
         assertTrue(gpxStr, gpxStr.contains("<extensions>") && gpxStr.contains("</extensions>"));
         assertTrue(gpxStr, gpxStr.contains("<rtept lat=\"15.1\" lon=\"10.0\">"));
         assertTrue(gpxStr, gpxStr.contains("<gh:distance>8000.0</gh:distance>"));
