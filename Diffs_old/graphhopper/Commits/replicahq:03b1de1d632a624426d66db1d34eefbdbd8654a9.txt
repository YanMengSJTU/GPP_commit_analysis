diff --git a/core/src/main/java/sidewalk/OriginalDirectionFlagEncoder.java b/core/src/main/java/sidewalk/OriginalDirectionFlagEncoder.java
new file mode 100644
index 0000000000..98f6a1907d
--- /dev/null
+++ b/core/src/main/java/sidewalk/OriginalDirectionFlagEncoder.java
@@ -0,0 +1,59 @@
+package com.conveyal.r5.graphhopper;
+
+import com.graphhopper.reader.ReaderRelation;
+import com.graphhopper.reader.ReaderWay;
+import com.graphhopper.routing.util.AbstractFlagEncoder;
+
+public class OriginalDirectionFlagEncoder extends AbstractFlagEncoder {
+
+
+    private long originalDirectionBitmask;
+
+    protected OriginalDirectionFlagEncoder() {
+        super(0, 0, 0);
+    }
+
+    @Override
+    public int defineWayBits(int index, int shift) {
+        shift = super.defineWayBits(index, shift);
+        this.originalDirectionBitmask = 1L << shift;
+        return shift + 1;
+    }
+
+    @Override
+    public long handleRelationTags(ReaderRelation readerRelation, long l) {
+        return l;
+    }
+
+    @Override
+    public long acceptWay(ReaderWay readerWay) {
+        return 0;
+    }
+
+    @Override
+    public long handleWayTags(ReaderWay readerWay, long l, long l1) {
+        return 0;
+    }
+
+    @Override
+    public int getVersion() {
+        return 0;
+    }
+
+    public long reverseFlags(long flags) {
+        return super.reverseFlags(flags) ^ this.directionBitMask;
+    }
+
+    public boolean isOriginalDirection(long flags) {
+        return (flags & this.originalDirectionBitmask) != 0L;
+    }
+
+    public long setOriginalDirection(long flags, boolean originalDirection) {
+        return originalDirection ? flags | originalDirectionBitmask : flags & ~originalDirectionBitmask;
+    }
+
+    public String toString() {
+        return "original-direction";
+    }
+
+}
diff --git a/web/src/main/java/com/graphhopper/http/GraphHopperManaged.java b/web/src/main/java/com/graphhopper/http/GraphHopperManaged.java
index 5860768ff9..f47a2b3697 100644
--- a/web/src/main/java/com/graphhopper/http/GraphHopperManaged.java
+++ b/web/src/main/java/com/graphhopper/http/GraphHopperManaged.java
@@ -75,8 +75,9 @@ public FlagEncoder createFlagEncoder(String name, PMap configuration) {
 
                     @Override
                     public boolean isEdgeDifferentToLastEdge(EdgeIteratorState edge) {
-                        if (edge.getEdge() != edgeId) {
-                            edgeId = edge.getEdge() * 2 + (originalDirectionFlagEncoder.isOriginalDirection(edge.getFlags()) ? 0 : 1);
+                        int newEdgeId = edge.getEdge() * 2 + (originalDirectionFlagEncoder.isOriginalDirection(edge.getFlags()) ? 0 : 1);
+                        if (newEdgeId != edgeId) {
+                            edgeId = newEdgeId;
                             return true;
                         }
                         return false;
