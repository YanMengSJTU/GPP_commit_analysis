diff --git a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
index 543db6d737..ddc77f4ca8 100755
--- a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
@@ -25,15 +25,12 @@
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
-import java.util.HashMap;
-import java.util.Map;
 
 import org.junit.Ignore;
 import org.junit.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import com.graphhopper.GraphHopper;
 import com.graphhopper.reader.osgb.AbstractOsItnReaderTest;
 import com.graphhopper.reader.osgb.AbstractOsReader;
 import com.graphhopper.routing.util.DefaultEdgeFilter;
@@ -41,9 +38,7 @@
 import com.graphhopper.routing.util.EncodingManager;
 import com.graphhopper.storage.AbstractGraphStorageTester;
 import com.graphhopper.storage.GraphHopperStorage;
-import com.graphhopper.storage.GraphStorage;
 import com.graphhopper.storage.TurnCostExtension;
-import com.graphhopper.util.CmdArgs;
 import com.graphhopper.util.EdgeExplorer;
 import com.graphhopper.util.EdgeIterator;
 import com.graphhopper.util.GHUtility;
@@ -317,26 +312,4 @@ public void testRegex() {
         assertEquals(2, s4.trim().split(" ").length);
 
     }
-
-    @Test
-    //    @Ignore
-    public void testItnGraphHopperWithHighwaysNetworkData() {
-        String graphLoc = "./target/output/modified-exeter-gh";
-        String inputFile = "/media/sf_/media/shared/modified-exeter/58096-SX9192-modified.xml";
-        //        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-wickham-direction-error.xml";
-
-        Map<String, String> args = new HashMap<>();
-        args.put("hn.data", "/data/Development/highways_network_full/");
-        args.put("hn.graph.location", "./target/output/highways_network");
-        args.put("graph.location", graphLoc);
-        args.put("osmreader.osm", inputFile);
-        args.put("config", "../config.properties");
-        CmdArgs commandLineArguments = new CmdArgs(args);
-        commandLineArguments = CmdArgs.readFromConfigAndMerge(commandLineArguments, "config", "graphhopper.config");
-
-        GraphHopper graphHopper = new GraphHopper().setInMemory().setAsItnReader().init(commandLineArguments);
-        graphHopper.importOrLoad();
-        GraphStorage graph = graphHopper.getGraph();
-
-    }
 }
diff --git a/web/src/main/webapp/.ebextensions/server-update.config b/web/src/main/webapp/.ebextensions/server-update.config
index e0bbf10960..f41799db91 100644
--- a/web/src/main/webapp/.ebextensions/server-update.config
+++ b/web/src/main/webapp/.ebextensions/server-update.config
@@ -1,4 +1,21 @@
 files:
+    "/download.sh" :
+        owner: root
+        group: root
+        mode: "000755"
+        content: |
+            #!/bin/bash
+            
+            # Remove the existing env_vars.sh so it can be replaced
+            /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh
+            
+            # Download the file in a location and name that will get executed AFTER the container_commands have been executed and the application deployed 
+            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://${CONFIG_BUCKET}/env_vars.sh /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh
+            
+            more /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh
+            
+            chmod a+x /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh
+                        
     "/extract.sh" :
         owner: root
         group: root
@@ -8,9 +25,9 @@ files:
             # Remove the existing config.properties so it can be replaced
             rm -f /config.properties
             #fetch the preingested routing data
-            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://graphhopper/${ROUTING_ARCHIVE} .
+            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://${CONFIG_BUCKET}/${ROUTING_ARCHIVE} .
             #fetch applicatio config file
-            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://graphhopper/${ROUTING_CONFIG} /config.properties
+            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://${CONFIG_BUCKET}/${ROUTING_CONFIG} /config.properties
             
             # This assumes there is already a tar.bz2 file called ${ROUTING_ARCHIVE} in /
             # Remove existing data
@@ -22,24 +39,17 @@ files:
             # Change the owner to tomcat
             chown -R tomcat:tomcat ${graphhopper_graph_location}
             
-           
-
-
 commands:
     01-install-awscli:
         command: easy_install awscli
     02-create-post-dir:
         command: mkdir /opt/elasticbeanstalk/hooks/appdeploy/post
         ignoreErrors: true
-    03-download-s3-asset-for-post:
-        command: aws s3 cp --region eu-west-1 s3://graphhopper/env_vars.sh /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh
-    04-set-execute-post:
-        command: chmod a+x /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh    
-                         
-
 
 container_commands:
-    download-s3-asset-and-extract:
+    03-download-env-vars:
+        command: /download.sh
+    04-download-s3-asset-and-extract:
         command: /extract.sh 
     
          
