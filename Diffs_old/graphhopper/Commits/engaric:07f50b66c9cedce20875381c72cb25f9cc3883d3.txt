diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 8ed6b85428..914e6d793b 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -1056,7 +1056,7 @@ public void verifyErrorMessage(String responseMessage) {
 		switch (testOn) {
 		case "Web":
 			navigateTo(sb.toString());
-			pause(500);
+			pause(5);
 
 			break;
 		case "Service":
@@ -1074,7 +1074,7 @@ public void verifyErrorMessage(String responseMessage) {
 
 			navigateTo(sb.toString());
 			
-			pause(500);
+			pause(5);
 
 			if (type.equalsIgnoreCase("gpx")) {
 				GPHServiceUtil.verifyMessage(responseMessage);
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
index cc28fcf9a8..dad0440fd8 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
@@ -1,4 +1,4 @@
-Feature: Verify Error Messages from a routing service
+Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
    As a user
    I want to get a valid Error message and status code for a invalid route request
 
@@ -80,7 +80,7 @@ Feature: Verify Error Messages from a routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                                                                                                                                                                                                              | statusCode |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                                                                                                                                                                  | statusCode |
       | car         |            | fastest   | json           | Parameter points is not a valid parameter for resource route. Valid parameters for requested resource are point, vehicle, locale, instructions, weighting, algorithm, points_encoded, debug, pretty, calc_points, type, avoidances, private, srs, output_srs. | 400        |
 
   # Parameter :  point
@@ -129,7 +129,7 @@ Feature: Verify Error Messages from a routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                 | statusCode |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                             | statusCode |
       | foot        |            | quick     | json           | quick is not a valid value for parameter weighting. Valid values are fastest or shortest | 400        |
 
   # Parameter :  locale
@@ -255,20 +255,15 @@ Feature: Verify Error Messages from a routing service
     And I have instructions as "true"
     And I have algorithm as "astar"
     And I have type as "json"
-    And I have type as "<SRS>"
+    And I have srs as "<SRS>"
     When I request for a route
-    Then I should be able to verify the http response message as "OK"
-    Then I should be able to verify the http statuscode as "200"
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      Then I should be able to verify the response message as "<errorMessage>"
-      Then I should be able to verify the statuscode as "<statusCode>"
-      
-      Examples:
-
-      | SRS | errorMessage                                                                                                  | statusCode |
-      | ABC | Point 50.729961,-3.524853 is not a valid point. Point must be a comma separated coordinate in ABC projection. | 400        |
-      | 123 | Point 50.729961,-3.524853 is not a valid point. Point must be a comma separated coordinate in 123 projection. | 400        |
+      | SRS | errorMessage                          | statusCode |
+      | ABC | Srs abc is not a valid srs for input. | 400        |
+      | 123 | Srs 123 is not a valid srs for input. | 400        |
 
   # Parameter :  Type
   @ErrorMessages
@@ -288,6 +283,78 @@ Feature: Verify Error Messages from a routing service
       | vehicleType | avoidances | routeType | calc_points | responseFormat | errorMessage                                                               | statusCode |
       | car         |            | fastest   | true        | txt            | txt is not a valid value for parameter type. Valid values are GPX or JSON. | 400        |
 
+  @ErrorMessages
+  Scenario Outline: Invalid Parameter Value for "output_srs "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have output_srs as "ABC"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                                  | statusCode |
+      | Srs ABC is not a valid output_srs for output. | 400        |
+
+  @ErrorMessages
+  Scenario Outline: Invalid Parameter Value for "private "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have private as "ABC"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                                                                   | statusCode |
+      | ABC is not a valid value for parameter private. Valid values are true or false | 400        |
+
+  @ErrorMessages
+  Scenario Outline: Invalid Parameter Value for "pretty "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have pretty as "ABC"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                                                                  | statusCode |
+      | ABC is not a valid value for parameter pretty. Valid values are true or false | 400        |
+
   # http method
   @ErrorMessages
   Scenario Outline: http methods "PUT/POST/DEL/GET"
@@ -396,9 +463,9 @@ Feature: Verify Error Messages from a routing service
     Then I should be able to verify the http statuscode as "200"
 
     Examples: 
-      | weighting | 
+      | weighting |
       | fastest   |
-      | shortest  | 
+      | shortest  |
 
   @ErrorMessages
   Scenario Outline: verify valid parameter values for "algorithm "
@@ -565,6 +632,81 @@ Feature: Verify Error Messages from a routing service
       | WGS84 |
       | BNG   |
 
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "output_srs "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "car"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have output_srs as "<output_srs>"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | output_srs |
+      | WGS84      |
+      | BNG        |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "private "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "car"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have private "<private>"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | private |
+      | true    |
+      | false   |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "pretty "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "car"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have private "<pretty>"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | pretty |
+      | true   |
+      | false  |
+
   @ErrorMessages
   Scenario Outline: with invalid uri and verify resource not available
     Given I have route point as
diff --git a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
index 17fd97237e..fd9159c86a 100644
--- a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
@@ -1,4 +1,4 @@
-Feature: Verify Error Messages for a Peak District routing service
+Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
    As a user
    I want to get a valid Error message and status code for a invalid route request
 
@@ -8,7 +8,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: Successful request with all parameters
     Given I have route <point> as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.384508,-1.933148 | 53.207259,-1.859641 |
     And I have <vehicle> as "foot"
     And I have <weighting> as "fastest"
     And I have <locale> as "en_GB"
@@ -45,7 +45,7 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
-      | car         |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
+      | foot        |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
@@ -61,7 +61,7 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                     | statusCode |
-      | car         |            | fastest   | json           | At least 2 points has to be specified, but was:1 | 400        |
+      | foot        |            | fastest   | json           | At least 2 points has to be specified, but was:1 | 400        |
 
   # Parameter :  Invalid Parameter Name
   @ErrorMessages
@@ -80,8 +80,8 @@ Feature: Verify Error Messages for a Peak District routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                                                                                                                                                                                                              | statusCode |
-      | car         |            | fastest   | json           | Parameter points is not a valid parameter for resource route. Valid parameters for requested resource are point, vehicle, locale, instructions, weighting, algorithm, points_encoded, debug, pretty, calc_points, type, avoidances, private, srs, output_srs. | 400        |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                                                                                                                                                                  | statusCode |
+      | foot        |            | fastest   | json           | Parameter points is not a valid parameter for resource route. Valid parameters for requested resource are point, vehicle, locale, instructions, weighting, algorithm, points_encoded, debug, pretty, calc_points, type, avoidances, private, srs, output_srs. | 400        |
 
   # Parameter :  point
   @ErrorMessages
@@ -95,7 +95,7 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                 | statusCode |
-      | car         |            | fastest   | json           | No point parameter provided. | 400        |
+      | foot        |            | fastest   | json           | No point parameter provided. | 400        |
 
   # Parameter :  vehicle
   @ErrorMessages @Smoke
@@ -129,7 +129,7 @@ Feature: Verify Error Messages for a Peak District routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                 | statusCode |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                             | statusCode |
       | foot        |            | quick     | json           | quick is not a valid value for parameter weighting. Valid values are fastest or shortest | 400        |
 
   # Parameter :  locale
@@ -148,7 +148,7 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | locale | responseFormat | errorMessage                                                                                                                                                                                                               | statusCode |
-      | car         |            | fastest   | en     | json           | en is not a valid value for parameter locale. Valid values are bg, ca, cz, de_DE, el, en_US, es, fa, fil, fi, fr, gl, he, hu_HU, it, ja, ne, nl, pl_PL, pt_BR, pt_PT, ro, ru, si, sk, sv_SE, tr, uk, vi_VI, zh_CN or en_GB | 400        |
+      | mtb         |            | fastest   | en     | json           | en is not a valid value for parameter locale. Valid values are bg, ca, cz, de_DE, el, en_US, es, fa, fil, fi, fr, gl, he, hu_HU, it, ja, ne, nl, pl_PL, pt_BR, pt_PT, ro, ru, si, sk, sv_SE, tr, uk, vi_VI, zh_CN or en_GB | 400        |
 
   # Parameter :  instructions
   @ErrorMessages
@@ -166,7 +166,7 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | instructions | responseFormat | errorMessage                                                                             | statusCode |
-      | car         |            | fastest   | msg(box)     | json           | msg(box) is not a valid value for parameter instructions. Valid values are true or false | 400        |
+      | mtb         |            | fastest   | msg(box)     | json           | msg(box) is not a valid value for parameter instructions. Valid values are true or false | 400        |
 
   # Parameter :  algorithm
   @ErrorMessages
@@ -184,8 +184,8 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | algorithm | responseFormat | errorMessage                                                                                                                     | statusCode |
-      | car         |            | fastest   | xyz       | json           | xyz is not a valid value for parameter algorithm. Valid values are astar, astarbi, dijkstra, dijkstrabi or dijkstraOneToMany     | 400        |
-      | car         |            | fastest   | select*   | json           | select* is not a valid value for parameter algorithm. Valid values are astar, astarbi, dijkstra, dijkstrabi or dijkstraOneToMany | 400        |
+      | foot        |            | fastest   | xyz       | json           | xyz is not a valid value for parameter algorithm. Valid values are astar, astarbi, dijkstra, dijkstrabi or dijkstraOneToMany     | 400        |
+      | mtb         |            | fastest   | select*   | json           | select* is not a valid value for parameter algorithm. Valid values are astar, astarbi, dijkstra, dijkstrabi or dijkstraOneToMany | 400        |
 
   # Parameter :  points_encoded
   @ErrorMessages
@@ -203,7 +203,7 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | points_encoded | responseFormat | errorMessage                                                                          | statusCode |
-      | car         |            | fastest   | xyz            | json           | xyz is not a valid value for parameter points_encoded. Valid values are true or false | 400        |
+      | foot        |            | fastest   | xyz            | json           | xyz is not a valid value for parameter points_encoded. Valid values are true or false | 400        |
 
   # Parameter :  debug
   @ErrorMessages
@@ -221,7 +221,7 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | debug | responseFormat | errorMessage                                                                 | statusCode |
-      | car         |            | fastest   | xyz   | json           | xyz is not a valid value for parameter debug. Valid values are true or false | 400        |
+      | foot        |            | fastest   | xyz   | json           | xyz is not a valid value for parameter debug. Valid values are true or false | 400        |
 
   # Parameter :  calc_points
   @ErrorMessages
@@ -239,10 +239,10 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | calc_points | responseFormat | errorMessage                                                                       | statusCode |
-      | car         |            | fastest   | xyz         | json           | xyz is not a valid value for parameter calc_points. Valid values are true or false | 400        |
+      | mtb         |            | fastest   | xyz         | json           | xyz is not a valid value for parameter calc_points. Valid values are true or false | 400        |
 
   @ErrorMessages
-  Scenario Outline: verify valid parameter values for "SRS "
+  Scenario Outline: Invalid Parameter Value for "SRS "
     Given I have route point as
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
@@ -255,27 +255,22 @@ Feature: Verify Error Messages for a Peak District routing service
     And I have instructions as "true"
     And I have algorithm as "astar"
     And I have type as "json"
-    And I have type as "<SRS>"
+    And I have srs as "<SRS>"
     When I request for a route
-    Then I should be able to verify the http response message as "OK"
-    Then I should be able to verify the http statuscode as "200"
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      Then I should be able to verify the response message as "<errorMessage>"
-      Then I should be able to verify the statuscode as "<statusCode>"
-      
-      Examples:
-
-      | SRS | errorMessage                                                                                                  | statusCode |
-      | ABC | Point 50.729961,-3.524853 is not a valid point. Point must be a comma separated coordinate in ABC projection. | 400        |
-      | 123 | Point 50.729961,-3.524853 is not a valid point. Point must be a comma separated coordinate in 123 projection. | 400        |
+      | SRS | errorMessage                          | statusCode |
+      | ABC | Srs abc is not a valid srs for input. | 400        |
+      | 123 | Srs 123 is not a valid srs for input. | 400        |
 
   # Parameter :  Type
   @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "type"
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "<vehicleType>"
     And I have calc_points as "<calc_points>"
     And I have weighting as "<routeType>"
@@ -286,14 +281,86 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | calc_points | responseFormat | errorMessage                                                               | statusCode |
-      | car         |            | fastest   | true        | txt            | txt is not a valid value for parameter type. Valid values are GPX or JSON. | 400        |
+      | foot        |            | fastest   | true        | txt            | txt is not a valid value for parameter type. Valid values are GPX or JSON. | 400        |
+
+  @ErrorMessages
+  Scenario Outline: Invalid Parameter Value for "output_srs "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "foot"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have output_srs as "ABC"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                                  | statusCode |
+      | Srs ABC is not a valid output_srs for output. | 400        |
+
+  @ErrorMessages
+  Scenario Outline: Invalid Parameter Value for "private "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "foot"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have private as "ABC"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                                                                   | statusCode |
+      | ABC is not a valid value for parameter private. Valid values are true or false | 400        |
+
+  @ErrorMessages
+  Scenario Outline: Invalid Parameter Value for "pretty "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "foot"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have pretty as "ABC"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                                                                  | statusCode |
+      | ABC is not a valid value for parameter pretty. Valid values are true or false | 400        |
 
   # http method
   @ErrorMessages
   Scenario Outline: http methods "PUT/POST/DEL/GET"
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     Given I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
@@ -304,11 +371,11 @@ Feature: Verify Error Messages for a Peak District routing service
 
     Examples: 
       | vehicleType | avoidances | routeType | httpMethod | responseFormat | httpErrorMessage   | statusCode |
-      | car         |            | fastest   | PUT        | json           | Method Not Allowed | 405        |
-      | car         |            | fastest   | DEL        | json           | Method Not Allowed | 405        |
-      | car         |            | fastest   | POST       | json           | Method Not Allowed | 405        |
-      | car         |            | fastest   | GET        | json           | OK                 | 200        |
-      | car         |            | fastest   | OPTIONS    | json           | OK                 | 200        |
+      | foot        |            | fastest   | PUT        | json           | Method Not Allowed | 405        |
+      | mtb         |            | fastest   | DEL        | json           | Method Not Allowed | 405        |
+      | foot        |            | fastest   | POST       | json           | Method Not Allowed | 405        |
+      | mtb         |            | fastest   | GET        | json           | OK                 | 200        |
+      | foot        |            | fastest   | OPTIONS    | json           | OK                 | 200        |
 
   # Nearest Point : Invalid Parameter Value "point"
   @ErrorMessages
@@ -329,7 +396,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: verify valid parameter values for "locale"
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "<locale>"
@@ -377,11 +444,11 @@ Feature: Verify Error Messages for a Peak District routing service
       | zh_CN  |
 
   # Parameter :  weighting
-  @ErrorMessages @Smoke @Current
+  @ErrorMessages @Smoke
   Scenario Outline: Valid Parameter Values for "weighting"
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "<weighting>"
     And I have locale as "en_US"
@@ -396,15 +463,15 @@ Feature: Verify Error Messages for a Peak District routing service
     Then I should be able to verify the http statuscode as "200"
 
     Examples: 
-      | weighting | 
+      | weighting |
       | fastest   |
-      | shortest  | 
+      | shortest  |
 
   @ErrorMessages
   Scenario Outline: verify valid parameter values for "algorithm "
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -430,7 +497,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: verify valid parameter values for "debug "
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -453,7 +520,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: verify valid parameter values for "points_calc "
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -476,7 +543,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: verify valid parameter values for "points_encoded "
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -499,7 +566,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: verify valid parameter values for "instructions "
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -522,7 +589,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: verify valid parameter values for "type "
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -545,7 +612,7 @@ Feature: Verify Error Messages for a Peak District routing service
   Scenario Outline: verify valid parameter values for "SRS "
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -555,7 +622,7 @@ Feature: Verify Error Messages for a Peak District routing service
     And I have instructions as "true"
     And I have algorithm as "astar"
     And I have type as "json"
-    And I have type as "<SRS>"
+    And I have srs as "<SRS>"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
     Then I should be able to verify the http statuscode as "200"
@@ -565,11 +632,86 @@ Feature: Verify Error Messages for a Peak District routing service
       | WGS84 |
       | BNG   |
 
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "output_srs "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "foot"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have output_srs as "<output_srs>"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | output_srs |
+      | WGS84      |
+      | BNG        |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "private "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "foot"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have private "<private>"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | private |
+      | true    |
+      | false   |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "pretty "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+    And I have vehicle as "foot"
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have calc_points as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    And I have srs as "WGS84"
+    And I have private "<pretty>"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | pretty |
+      | true   |
+      | false  |
+
   @ErrorMessages
   Scenario Outline: with invalid uri and verify resource not available
     Given I have route point as
       | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+      | 53.410574,-1.825276 | 53.277655,-1.805662 |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
