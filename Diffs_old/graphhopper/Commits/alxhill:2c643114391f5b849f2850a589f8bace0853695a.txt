diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
index 073504e7c9..1a8858e570 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
@@ -39,11 +39,14 @@ public static void run(int initialVehicles)
                 mh.startSimulation(initialVehicles);
                 while (true)
                 {
-                    logger.info("===ITERATION [" + i + "]===");
-                    i++;
-                    mh.timestep();
-                    String data = mh.getVehicleData();
-                    mss.distributeData(data);
+                    if (!mh.paused())
+                    {
+                        logger.info("===ITERATION [" + i + "]===");
+                        i++;
+                        mh.timestep();
+                        String data = mh.getVehicleData();
+                        mss.distributeData(data);
+                    }
                     try
                     {
                         Thread.sleep(1000);
@@ -57,6 +60,15 @@ public static void run(int initialVehicles)
 
             new Thread(task).start();
         }
+        else if (mh.paused())
+        {
+            mh.unpause();
+        }
+    }
+
+    public static void pause()
+    {
+        mh.pause();
     }
 
     public static void addVehicle()
@@ -83,6 +95,4 @@ public void run() {
             }
         }.start();
     }
-
-
 }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
index 5012e34e0a..3a92c671c3 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
@@ -23,6 +23,8 @@
 
     private static Logger logger = LoggerFactory.getLogger(MarmosetHopper.class);
 
+    private boolean isPaused;
+
     public MarmosetHopper() {
         hopper = new GraphHopper();
         vehicles = new ArrayList<>();
@@ -30,6 +32,7 @@ public MarmosetHopper() {
 
     public void init()
     {
+        isPaused = false;
         CmdArgs args;
         try
         {
@@ -63,12 +66,15 @@ public synchronized void addVehicle()
 
     public synchronized void startSimulation(int initialVehicles)
     {
+        logger.info("Starting simulation with " + initialVehicles + " vehicles");
         IntStream.range(0, initialVehicles).forEach(v -> addVehicle());
         vehicles = vehicles.stream().filter(v -> !v.isFinished()).collect(Collectors.toList());
     }
 
     public synchronized void timestep()
     {
+        if (isPaused)
+            return;
         vehicles.stream().forEach(Vehicle::accelerationStep);
         vehicles.stream().forEach(Vehicle::slowStep);
         vehicles.stream().forEach(Vehicle::randomStep);
@@ -92,4 +98,21 @@ public CellsGraph getCellsGraph()
     {
         return cellsGraph;
     }
+
+    public void pause()
+    {
+        logger.info("Pausing simulation");
+        isPaused = true;
+    }
+    public void unpause()
+    {
+        logger.info("Resuming simulation");
+        isPaused = false;
+    }
+
+    public boolean paused()
+    {
+        return isPaused;
+    }
+
 }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
index 39d06de26c..d9ad847c5a 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
@@ -51,13 +51,16 @@ public void onMessage(WebSocket webSocket, String s)
         if (s.matches("start\\|\\d+"))
         {
             String num = s.split("\\|")[1];
-            logger.info("Starting simulation with " + num + " vehicles");
             Marmoset.run(Integer.valueOf(num, 10));
         }
         else if (s.equals("addVehicle"))
         {
             Marmoset.addVehicle();
         }
+        else if (s.equals("pause"))
+        {
+            Marmoset.pause();
+        }
     }
 
     @Override
diff --git a/marmoset/src/main/webapp/index.html b/marmoset/src/main/webapp/index.html
index 9dfc47e312..52d9d29091 100644
--- a/marmoset/src/main/webapp/index.html
+++ b/marmoset/src/main/webapp/index.html
@@ -21,7 +21,11 @@
     <body onload="initAll()">
         <div id="controls">
             <input type="number" name="initVehicles" id="initVehicles" placeholder="Initial vehicles">
-            <input type="button" name="startSimulation" id="startSimulation" value="Start Simulation">
+            <input type="button" id="startSimulation" value="Start Simulation">
+            <input type="button" id="start100" value="Simulate 100">
+            <input type="button" id="start1000" value="Simulate 1000">
+            <input type="button" id="join" value="Join Simulation">
+            <input type="button" id="pause" value="Pause Simulation">
             <br><br>
             <input type="button" name="addVehicles" id="addVehicle" value="Add Vehicle">
         </div>
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index baaf3e6fea..a86b1d8b81 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -22,6 +22,12 @@ function initButtons(carSet) {
         console.log("Starting simulation with", count, "vehicles");
         carSet.init(count);
     });
+
+    document.getElementById("start100").addEventListener("click", carSet.init.bind(carSet, 100));
+    document.getElementById("start1000").addEventListener("click", carSet.init.bind(carSet, 1000));
+    document.getElementById("join").addEventListener("click", carSet.init.bind(carSet, 0));
+    document.getElementById("pause").addEventListener("click", carSet.togglePause.bind(carSet));
+
     document.getElementById("addVehicle").addEventListener("click", function () {
         carSet.ws.send("addVehicle");
     });
@@ -38,6 +44,8 @@ var carSet = {
 
     // start listening to the websocket and setup the callbacks
     init: function(count) {
+        this.paused = false;
+
         if (this.ws)
             this.ws.close();
 
@@ -57,6 +65,19 @@ var carSet = {
         }.bind(this);
     },
 
+    togglePause: function(e) {
+        if (this.ws == null)
+            return;
+        if (this.paused) {
+            this.ws.send("start|0");
+            e.target.value = "Pause Simulation";
+        } else {
+            this.ws.send("pause");
+            e.target.value = "Resume Simulation";
+        }
+        this.paused = !this.paused;
+    },
+
     // deals with the set of data that comes from the websocket
     processData: function(data) {
         var msgs = data.split(",");
