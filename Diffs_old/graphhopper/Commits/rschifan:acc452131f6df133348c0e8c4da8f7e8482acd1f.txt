diff --git a/core/src/main/java/com/graphhopper/routing/util/DefaultFlagEncoderFactory.java b/core/src/main/java/com/graphhopper/routing/util/DefaultFlagEncoderFactory.java
index 8a07722194..355bd5b3ff 100644
--- a/core/src/main/java/com/graphhopper/routing/util/DefaultFlagEncoderFactory.java
+++ b/core/src/main/java/com/graphhopper/routing/util/DefaultFlagEncoderFactory.java
@@ -24,9 +24,13 @@
  *
  * @author Peter Karich
  */
+
+
 public class DefaultFlagEncoderFactory implements FlagEncoderFactory {
+
     @Override
     public FlagEncoder createFlagEncoder(String name, PMap configuration) {
+
         if (name.equals(GENERIC))
             return new DataFlagEncoder(configuration);
 
@@ -57,6 +61,9 @@ else if (name.equals(CAR4WD))
         if (name.equals(MOTORCYCLE))
             return new MotorcycleFlagEncoder(configuration);
 
+        if (name.equals(RUNNINGHAPPYMAPS))
+            return new HappyMapsFlagEncoder(configuration);
+
         throw new IllegalArgumentException("entry in encoder list not supported " + name);
     }
 }
diff --git a/core/src/main/java/com/graphhopper/routing/util/FlagEncoderFactory.java b/core/src/main/java/com/graphhopper/routing/util/FlagEncoderFactory.java
index 71eb01bca9..998d81978d 100644
--- a/core/src/main/java/com/graphhopper/routing/util/FlagEncoderFactory.java
+++ b/core/src/main/java/com/graphhopper/routing/util/FlagEncoderFactory.java
@@ -33,6 +33,7 @@
     final String HIKE = "hike";
     final String MOTORCYCLE = "motorcycle";
     final String GENERIC = "generic";
+    final String RUNNINGHAPPYMAPS = "runhappymaps";
     final FlagEncoderFactory DEFAULT = new DefaultFlagEncoderFactory();
 
     FlagEncoder createFlagEncoder(String name, PMap configuration);
diff --git a/core/src/main/java/com/graphhopper/routing/util/HappyMapsFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/HappyMapsFlagEncoder.java
index 635508a8dc..7032afa2f4 100644
--- a/core/src/main/java/com/graphhopper/routing/util/HappyMapsFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/HappyMapsFlagEncoder.java
@@ -122,7 +122,7 @@ private void loadCustomWeights() {
 
         try {
 
-            File inputF = new File("data/london_happy_maps_norms.csv");
+            File inputF = new File("data/weights/london_happy_maps_norms.csv");
             InputStream inputFS = new FileInputStream(inputF);
             BufferedReader br = new BufferedReader(new InputStreamReader(inputFS));
 
@@ -195,7 +195,7 @@ public Double getCustomWeightByWayId(long wayid, String key) {
 
     @Override
     public String toString() {
-        return "run-happymaps";
+        return "runhappymaps";
     }
 
 
diff --git a/core/src/main/java/com/graphhopper/routing/weighting/HappyMapsWeighting.java b/core/src/main/java/com/graphhopper/routing/weighting/HappyMapsWeighting.java
index 3b100f1a77..a3ce8ad1ef 100644
--- a/core/src/main/java/com/graphhopper/routing/weighting/HappyMapsWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/weighting/HappyMapsWeighting.java
@@ -17,7 +17,7 @@ public HappyMapsWeighting(FlagEncoder flagEncoder) {
 
         happymapsFlagEncoder = (HappyMapsFlagEncoder) flagEncoder;
 
-        logger.info("\n\n\n\nHappyMapsWeighting: create\n\n\n\n");
+        logger.info("HappyMapsWeighting: create new instance");
 
     }
 
