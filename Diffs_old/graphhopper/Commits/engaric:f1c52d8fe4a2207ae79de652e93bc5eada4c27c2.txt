diff --git a/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java b/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java
index a7500ef7e0..bdad8ddfd9 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java
@@ -56,177 +56,181 @@
 
     public static final String TAG_VALUE_TYPE_ONEWAY = "oneway";
     public static final String TAG_VALUE_TYPE_NOENTRY = "noentry";
+    public static final String TAG_VALUE_TYPE_ACCESS_LIMITED = "limited";
+    public static final String TAG_VALUE_TYPE_ACCESS_PROHIBITED = "prohibited";
     public static final String TAG_VALUE_TYPE_RESTRICTION = "restriction";
 
-        private final int type;
-        private final long id;
-        private final Map<String, Object> properties = new HashMap<String, Object>(
-                        5);
-        private static final Logger logger = LoggerFactory
-                        .getLogger(OSITNElement.class);
+    private final int type;
+    private final long id;
+    private final Map<String, Object> properties = new HashMap<String, Object>(5);
+    private static final Logger logger = LoggerFactory.getLogger(OSITNElement.class);
 
-        protected OSITNElement(long id, int type) {
-                this.id = id;
-                this.type = type;
-        }
+    protected OSITNElement(long id, int type) {
+        this.id = id;
+        this.type = type;
+    }
 
-        public long getId() {
-                return id;
-        }
+    public long getId() {
+        return id;
+    }
 
-        protected void readTags(XMLStreamReader parser) throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
-                int event = parser.getEventType();
-                while (event != XMLStreamConstants.END_DOCUMENT
-                                && (event != XMLStreamConstants.END_ELEMENT || !exitElement(parser))) {
-                        if (event == XMLStreamConstants.CHARACTERS) {
-                                event = parser.next();
-                        } else {
-
-                                if (event == XMLStreamConstants.START_ELEMENT) {
-                                        logger.info("LOCALNAME:" + parser.getLocalName());
-                                        switch (parser.getLocalName()) {
-                                        case "coordinates": {
-                                                event = handleCoordinates(parser);
-                                                break;
-                                        }
-                                        case "posList": {
-                                                event = handleMultiDimensionCoords(parser);
-                                                break;
-                                        }
-                                        case "pos": {
-                                                event = handleThreeDimensionalCoords(parser);
-                                                break;
-                                        }
-                                        case "networkMember": {
-                                                event = handleNetworkMember(parser);
-                                                break;
-                                        }
-                                        case "startNode":
-                                        case "endNode":
-                                        case "directedNode": {
-                                                event = handleDirectedNode(parser);
-                                                break;
-                                        }
-                                        case "directedLink": {
-                                                event = handleDirectedLink(parser);
-                                                break;
-                                        }
-                                        case "instruction": {
-                                            // eg. Mandatory Turn, No Turn, One Way, No Entry
-//                                            System.out.println("Handle instruction for " + id);
-                                                event = handleInstructionEnvironmentalQualifier(parser);
-                                                break;
-                                        }
-                                        case "type": {
-                                            // eg. Buses, Coaches, Mopeds, HGV's 
-//                                            System.out.println("Handle type for " + id);
-                                                event = handleTypeVehicleQualifier(parser);
-                                                break;
-                                        }
-                                        case "load": {
-                                            // eg. Explosives, Dangerous Goods, Abnormal Loads, Wide Loads 
-                                                event = handleLoadVehicleQualifier(parser);
-                                                break;
-                                        }
-                                        case "use": {
-                                            // eg. Taxi, School Bus, Patron, Access, Emergency Vehicle, Public Transport
-                                                event = handleUseVehicleQualifier(parser);
-                                                break;
-                                        }
-                                        case "descriptiveTerm":
-                                        case "descriptiveGroup": {
-                                                event = handleDescriptiveGroup(parser);
-                                                break;
-                                        }
-//                                      case "natureOfRoad": {
-//                                              event = handleRoadNature(parser);
-//                                              break;
-//                                      }
-                                        case "roadNumber":
-                                        case "name":
-                                        case "alternativeName":
-                                        case "roadName": {
-                                                event = handleTag("name", parser);
-                                                break;
-                                        }
-                                        default: {
-                                                event = parser.next();
-                                        }
-                                        }
-
-                                } else {
-                                        logger.info("EVENT:" + event);
-                                        event = parser.next();
-                                }
-                        }
+    protected void readTags(XMLStreamReader parser) throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
+        int event = parser.getEventType();
+        while (event != XMLStreamConstants.END_DOCUMENT && (event != XMLStreamConstants.END_ELEMENT || !exitElement(parser))) {
+            if (event == XMLStreamConstants.CHARACTERS) {
+                event = parser.next();
+            } else {
+
+                if (event == XMLStreamConstants.START_ELEMENT) {
+                    logger.info("LOCALNAME:" + parser.getLocalName());
+                    switch (parser.getLocalName()) {
+                    case "coordinates": {
+                        event = handleCoordinates(parser);
+                        break;
+                    }
+                    case "posList": {
+                        event = handleMultiDimensionCoords(parser);
+                        break;
+                    }
+                    case "pos": {
+                        event = handleThreeDimensionalCoords(parser);
+                        break;
+                    }
+                    case "networkMember": {
+                        event = handleNetworkMember(parser);
+                        break;
+                    }
+                    case "startNode":
+                    case "endNode":
+                    case "directedNode": {
+                        event = handleDirectedNode(parser);
+                        break;
+                    }
+
+                    case "referenceToRoadLink": {
+                        event = handleReferenceToRoadLink(parser);
+                        break;
+                    }
+                    case "directedLink": {
+                        event = handleDirectedLink(parser);
+                        break;
+                    }
+                    case "instruction": {
+                        // eg. Mandatory Turn, No Turn, One Way, No Entry
+                        // System.out.println("Handle instruction for " + id);
+                        event = handleInstructionEnvironmentalQualifier(parser);
+                        break;
+                    }
+                    case "type": {
+                        // eg. Buses, Coaches, Mopeds, HGV's
+                        // System.out.println("Handle type for " + id);
+                        event = handleTypeVehicleQualifier(parser);
+                        break;
+                    }
+                    case "load": {
+                        // eg. Explosives, Dangerous Goods, Abnormal Loads, Wide
+                        // Loads
+                        event = handleLoadVehicleQualifier(parser);
+                        break;
+                    }
+                    case "use": {
+                        // eg. Taxi, School Bus, Patron, Access, Emergency
+                        // Vehicle, Public Transport
+                        event = handleUseVehicleQualifier(parser);
+                        break;
+                    }
+                    case "descriptiveTerm":
+                    case "descriptiveGroup": {
+                        event = handleDescriptiveGroup(parser);
+                        break;
+                    }
+                    // case "natureOfRoad": {
+                    // event = handleRoadNature(parser);
+                    // break;
+                    // }
+                    case "roadNumber":
+                    case "name":
+                    case "alternativeName":
+                    case "roadName": {
+                        event = handleTag("name", parser);
+                        break;
+                    }
+                    default: {
+                        event = parser.next();
+                    }
+                    }
+
+                } else {
+                    logger.info("EVENT:" + event);
+                    event = parser.next();
                 }
+            }
         }
+    }
 
-        private int handleRoadNature(XMLStreamReader parser)
-                        throws XMLStreamException {
-                String nature = resolveNature(parser.getElementText());
-                String highwayType = getTag("highway");
-                if (null != nature  && null != highwayType) {
-                        if(highwayType.contains("-")) {
-                                System.err.println("Already Natured:" + highwayType + " Adding:" + nature);
-                        }
-                        highwayType = highwayType + "-";
-                        highwayType = highwayType + nature;
-                        setTag("highway", highwayType);
-                }
-                return parser.getEventType();
+    private int handleRoadNature(XMLStreamReader parser) throws XMLStreamException {
+        String nature = resolveNature(parser.getElementText());
+        String highwayType = getTag("highway");
+        if (null != nature && null != highwayType) {
+            if (highwayType.contains("-")) {
+                System.err.println("Already Natured:" + highwayType + " Adding:" + nature);
+            }
+            highwayType = highwayType + "-";
+            highwayType = highwayType + nature;
+            setTag("highway", highwayType);
         }
+        return parser.getEventType();
+    }
 
-        private int handleDescriptiveGroup(XMLStreamReader parser)
-                        throws XMLStreamException {
-                String elementText = parser.getElementText();
-				String roadType = resolveHighway(elementText);
-                // System.err.println(this.getClass() + ".handleDescriptiveGroup(" +
-                // roadType
-                // + ")");
-                if (null != roadType && !hasTag("highway")) {
-                        setTag("type", "route");
-                        setTag("highway", roadType);
-                }
-                if(null==roadType) {
-                	setTag("nothighway", elementText);
-                }
-                return parser.getEventType();
-        }
+    private int handleDescriptiveGroup(XMLStreamReader parser) throws XMLStreamException {
+        String elementText = parser.getElementText();
+        String roadType = resolveHighway(elementText);
+        // System.err.println(this.getClass() + ".handleDescriptiveGroup(" +
+        // roadType
+        // + ")");
+        if (null != roadType && !hasTag("highway")) {
+            setTag("type", "route");
+            setTag("highway", roadType);
+        }
+        if (null == roadType) {
+            setTag("nothighway", elementText);
+        }
+        return parser.getEventType();
+    }
 
-        private String resolveHighway(String elementText) {
-                logger.info("OSITNElement.resolveHighway( " + elementText + ")");
-                switch (elementText) {
-                case "A Road":
-                case "Motorway":
-                case "B Road":
-                case "Minor Road":
-                // Should we be handling these for Car routes?
-                case "Pedestrianised Street":
-                //case "Private Road - Restricted Access":
-                case "Private Road - Publicly Accessible":
-                //case "Alley":
-
-                case "Local Street":
-                        return elementText;
-                }
-                return null;
-        }
-        
-        private String resolveNature(String elementText) {
-                logger.info("OSITNElement.resolveNature( " + elementText + ")");
-                switch (elementText) {
-                case "Single Carriageway":
-                case "Dual Carriageway":
-                case "Slip Road":
-                        return elementText;
-                }
-                return null;
+    private String resolveHighway(String elementText) {
+        logger.info("OSITNElement.resolveHighway( " + elementText + ")");
+        switch (elementText) {
+        case "A Road":
+        case "Motorway":
+        case "B Road":
+        case "Minor Road":
+            // Should we be handling these for Car routes?
+        case "Pedestrianised Street":
+            // case "Private Road - Restricted Access":
+        case "Private Road - Publicly Accessible":
+            // case "Alley":
+
+        case "Local Street":
+            return elementText;
+        }
+        return null;
+    }
+
+    private String resolveNature(String elementText) {
+        logger.info("OSITNElement.resolveNature( " + elementText + ")");
+        switch (elementText) {
+        case "Single Carriageway":
+        case "Dual Carriageway":
+        case "Slip Road":
+            return elementText;
         }
+        return null;
+    }
 
     /**
      * Process <code><osgb:instruction>One Way</osgb:instruction></code>
-     * instructions within an environmentalQualifier element. 
+     * instructions within an environmentalQualifier element.
      * 
      * It is either "One Way", "No Entry" or a turn restriction type
      * 
@@ -238,21 +242,41 @@ private int handleInstructionEnvironmentalQualifier(XMLStreamReader parser) thro
         String elementText = parser.getElementText();
         int event;
         switch (elementText) {
-        case "One Way" :
+        case "One Way":
             setTag(TAG_KEY_TYPE, TAG_VALUE_TYPE_ONEWAY);
             setTag(TAG_KEY_ONEWAY_ORIENTATION, "-1");
             break;
-        case "No Entry" :
-//        case "Access Prohibited To" :
-//        case "Access Limited To" :
-            // We are processing a No Entry RoadRouteInformation element. Set the type to noentry
+        case "No Entry":
+            // We are processing a No Entry RoadRouteInformation element. Set
+            // the type to noentry
             setTag(TAG_KEY_TYPE, TAG_VALUE_TYPE_NOENTRY);
-            // Default the orientation to -1. This could be changed when we process the directedLink element later
-           setTag(TAG_KEY_NOENTRY_ORIENTATION, "-1");
+            // Default the orientation to -1. This could be changed when we
+            // process the directedLink element later
+            setTag(TAG_KEY_NOENTRY_ORIENTATION, "-1");
             // We might need this?
             setTag(TAG_KEY_RESTRICTION, elementText);
             break;
-        default :
+        case "Access Prohibited To":
+            // We are processing a No Entry RoadRouteInformation element. Set
+            // the type to noentry
+            setTag(TAG_KEY_TYPE, TAG_VALUE_TYPE_ACCESS_PROHIBITED);
+            // Default the orientation to -1. This could be changed when we
+            // process the directedLink element later
+            // setTag(TAG_KEY_NOENTRY_ORIENTATION, "-1");
+            // We might need this?
+            // setTag(TAG_KEY_RESTRICTION, elementText);
+            break;
+        case "Access Limited To":
+            // We are processing a No Entry RoadRouteInformation element. Set
+            // the type to noentry
+            setTag(TAG_KEY_TYPE, TAG_VALUE_TYPE_ACCESS_LIMITED);
+            // Default the orientation to -1. This could be changed when we
+            // process the directedLink element later
+            // setTag(TAG_KEY_NOENTRY_ORIENTATION, "-1");
+            // We might need this?
+            // setTag(TAG_KEY_RESTRICTION, elementText);
+            break;
+        default:
             setTag(TAG_KEY_TYPE, TAG_VALUE_TYPE_RESTRICTION);
             setTag(TAG_KEY_RESTRICTION, elementText);
             break;
@@ -260,78 +284,86 @@ private int handleInstructionEnvironmentalQualifier(XMLStreamReader parser) thro
         event = parser.getEventType();
         return event;
     }
+
     private int handleTypeVehicleQualifier(XMLStreamReader parser) throws XMLStreamException {
         String exceptForString = parser.getAttributeValue(null, "exceptFor");
         Boolean exceptFor = null;
-        if (exceptForString!=null) {
+        if (exceptForString != null) {
             exceptFor = Boolean.parseBoolean(exceptForString);
         }
         String elementText = parser.getElementText();
-//        System.out.println("handleTypeVehicleQualifier " + elementText + " exceptFor " + exceptFor);
+        // System.out.println("handleTypeVehicleQualifier " + elementText +
+        // " exceptFor " + exceptFor);
         setTag(elementText, exceptFor.toString());
         int event;
-//        switch (elementText) {
-//        case "Buses" :
-//        case "Coaches" :
-//        case "Mopeds" :
-//        case "Motor Cycles" :
-//        case "HGV's" :
-//        case "LGV's" :
-//        case "Towed Caravans" :
-//        case "Motor Vehicles" :
-//        case "Cycles" :
-//        case "Tracked Vehicles" :
-//            break;
-//        }
+        // switch (elementText) {
+        // case "Buses" :
+        // case "Coaches" :
+        // case "Mopeds" :
+        // case "Motor Cycles" :
+        // case "HGV's" :
+        // case "LGV's" :
+        // case "Towed Caravans" :
+        // case "Motor Vehicles" :
+        // case "Cycles" :
+        // case "Tracked Vehicles" :
+        // break;
+        // }
         event = parser.getEventType();
         return event;
     }
+
     private int handleLoadVehicleQualifier(XMLStreamReader parser) throws XMLStreamException {
         String elementText = parser.getElementText();
         int event;
         switch (elementText) {
-        case "Explosives" :
-        case "Dangerous Goods" :
-        case "Abnormal Loads" :
-        case "Wide Loads" :
+        case "Explosives":
+        case "Dangerous Goods":
+        case "Abnormal Loads":
+        case "Wide Loads":
             break;
         }
         event = parser.getEventType();
         return event;
     }
+
     private int handleUseVehicleQualifier(XMLStreamReader parser) throws XMLStreamException {
         String exceptForString = parser.getAttributeValue(null, "exceptFor");
         Boolean exceptFor = null;
-        if (exceptForString!=null) {
+        if (exceptForString != null) {
             exceptFor = Boolean.parseBoolean(exceptForString);
         }
-      String elementText = parser.getElementText();
-//        System.out.println("handleUseVehicleQualifier " + elementText + " exceptFor " + exceptFor);
+        String elementText = parser.getElementText();
+        // System.out.println("handleUseVehicleQualifier " + elementText +
+        // " exceptFor " + exceptFor);
         setTag(elementText, exceptFor.toString());
         int event;
-        event = parser.getEventType();        // type and use are effectively the same thing
-//        return handleTypeVehicleQualifier(parser);
-//        int event;
-//        switch (elementText) {
-//        case "Taxi" :
-//        case "School Bus" :
-//        case "Patron" :
-//        case "Access" :
-//        case "Resident" :
-//        case "Emergency Vehicle" :
-//        case "Emergency Access" :
-//        case "Public Transport" :
-//        case "Authorised Vehicle" :
-//        case "Local Bus" :
-//        case "Escorted Traffic" :
-//            break;
-//        }
-//        event = parser.getEventType();
+        event = parser.getEventType(); // type and use are effectively the same
+                                       // thing
+        // return handleTypeVehicleQualifier(parser);
+        // int event;
+        // switch (elementText) {
+        // case "Taxi" :
+        // case "School Bus" :
+        // case "Patron" :
+        // case "Access" :
+        // case "Resident" :
+        // case "Emergency Vehicle" :
+        // case "Emergency Access" :
+        // case "Public Transport" :
+        // case "Authorised Vehicle" :
+        // case "Local Bus" :
+        // case "Escorted Traffic" :
+        // break;
+        // }
+        // event = parser.getEventType();
         return event;
     }
-    
+
     /**
-     * process parsing of directedLink data. If this is a "oneway" OR "noentry" we will change the -1 to true if the orientation on the link it "+"
+     * process parsing of directedLink data. If this is a "oneway" OR "noentry"
+     * we will change the -1 to true if the orientation on the link it "+"
+     * 
      * @param parser
      * @return
      * @throws XMLStreamException
@@ -341,201 +373,196 @@ private int handleDirectedLink(XMLStreamReader parser) throws XMLStreamException
         String nodeId = parser.getAttributeValue("http://www.w3.org/1999/xlink", "href");
         if (hasTag(TAG_KEY_ONEWAY_ORIENTATION, "-1") && orientation.equals("+")) {
             setTag(TAG_KEY_ONEWAY_ORIENTATION, "true");
-       }
+        }
         if (hasTag(TAG_KEY_NOENTRY_ORIENTATION, "-1") && orientation.equals("+")) {
-           setTag(TAG_KEY_NOENTRY_ORIENTATION, "true");
+            setTag(TAG_KEY_NOENTRY_ORIENTATION, "true");
         }
         addDirectedLink(nodeId, orientation);
         return parser.next();
     }
 
+    private int handleReferenceToRoadLink(XMLStreamReader parser) throws XMLStreamException {
+        String nodeId = parser.getAttributeValue("http://www.w3.org/1999/xlink", "href");
+        addDirectedLink(nodeId, "-");// Orientation is ignored
+        return parser.next();
+    }
 
-        private int handleDirectedNode(XMLStreamReader parser)
-                        throws XMLStreamException {
-                String orientation = parser.getAttributeValue(null, "orientation");
-                String grade = parser.getAttributeValue(null, "gradeSeparation");
+    private int handleDirectedNode(XMLStreamReader parser) throws XMLStreamException {
+        String orientation = parser.getAttributeValue(null, "orientation");
+        String grade = parser.getAttributeValue(null, "gradeSeparation");
 
-                String nodeId = parser.getAttributeValue(
-                                "http://www.w3.org/1999/xlink", "href");
-                addDirectedNode(nodeId, grade, orientation);
-                return parser.next();
-        }
+        String nodeId = parser.getAttributeValue("http://www.w3.org/1999/xlink", "href");
+        addDirectedNode(nodeId, grade, orientation);
+        return parser.next();
+    }
 
-        private int handleTag(String key, XMLStreamReader parser)
-                        throws XMLStreamException {
-                String elementText = parser.getElementText();
-                logger.info("KEY:" + key + " - VALUE:" + elementText);
-                properties.put(key, elementText);
-                return parser.getEventType();
-        }
+    private int handleTag(String key, XMLStreamReader parser) throws XMLStreamException {
+        String elementText = parser.getElementText();
+        logger.info("KEY:" + key + " - VALUE:" + elementText);
+        properties.put(key, elementText);
+        return parser.getEventType();
+    }
 
-        private int handleNetworkMember(XMLStreamReader parser)
-                        throws XMLStreamException {
-                String elementText = parser.getAttributeValue(
-                                "http://www.w3.org/1999/xlink", "href");
-                parseNetworkMember(elementText);
-                return parser.next();
-        }
+    private int handleNetworkMember(XMLStreamReader parser) throws XMLStreamException {
+        String elementText = parser.getAttributeValue("http://www.w3.org/1999/xlink", "href");
+        parseNetworkMember(elementText);
+        return parser.next();
+    }
 
-        private int handleCoordinates(XMLStreamReader parser)
-                        throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
-                String elementText = parser.getElementText();
-                parseCoords(elementText);
-                return parser.getEventType();
-        }
+    private int handleCoordinates(XMLStreamReader parser) throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
+        String elementText = parser.getElementText();
+        parseCoords(elementText);
+        return parser.getEventType();
+    }
 
-        private int handleMultiDimensionCoords(XMLStreamReader parser)
-                        throws XMLStreamException {
-                String dimensionality = parser.getAttributeValue(null, "srsDimension");
-                logger.info("Dimensions:" + dimensionality);
-                String elementText = parser.getElementText();
-                parseCoords(Integer.valueOf(dimensionality), elementText);
-                return parser.getEventType();
-        }
+    private int handleMultiDimensionCoords(XMLStreamReader parser) throws XMLStreamException {
+        String dimensionality = parser.getAttributeValue(null, "srsDimension");
+        logger.info("Dimensions:" + dimensionality);
+        String elementText = parser.getElementText();
+        parseCoords(Integer.valueOf(dimensionality), elementText);
+        return parser.getEventType();
+    }
 
-        private int handleThreeDimensionalCoords(XMLStreamReader parser)
-                        throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
-                String elementText = parser.getElementText();
-                parseCoordinateString(elementText, " ");
-                return parser.getEventType();
-        }
+    private int handleThreeDimensionalCoords(XMLStreamReader parser) throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
+        String elementText = parser.getElementText();
+        parseCoordinateString(elementText, " ");
+        return parser.getEventType();
+    }
 
-        protected abstract void parseCoordinateString(String elementText,
-                        String elementSeparator) throws MismatchedDimensionException, FactoryException, TransformException;
+    protected abstract void parseCoordinateString(String elementText, String elementSeparator) throws MismatchedDimensionException, FactoryException, TransformException;
 
-        protected abstract void parseCoords(String coordinates) throws MismatchedDimensionException, FactoryException, TransformException;
+    protected abstract void parseCoords(String coordinates) throws MismatchedDimensionException, FactoryException, TransformException;
 
-        protected abstract void parseCoords(int dimensions, String lineDefinition);
+    protected abstract void parseCoords(int dimensions, String lineDefinition);
 
-        protected abstract void addDirectedNode(String nodeId, String orientation,
-                        String orientation2);
+    protected abstract void addDirectedNode(String nodeId, String orientation, String orientation2);
 
-        protected abstract void addDirectedLink(String nodeId, String orientation);
+    protected abstract void addDirectedLink(String nodeId, String orientation);
 
-        protected abstract void parseNetworkMember(String elementText);
+    protected abstract void parseNetworkMember(String elementText);
 
-        private boolean exitElement(XMLStreamReader parser) {
-                switch (parser.getLocalName()) {
-                case "RoadNode":
-                case "RoadLink":
-                case "RoadRouteInformation":
-                case "Road":
-                case "RouteLink":
-                case "RouteNode":
-                        return true;
-                }
-                return false;
+    private boolean exitElement(XMLStreamReader parser) {
+        switch (parser.getLocalName()) {
+        case "RoadNode":
+        case "RoadLink":
+        case "RoadRouteInformation":
+        case "Road":
+        case "RouteLink":
+        case "RouteNode":
+            return true;
         }
+        return false;
+    }
 
-        protected String tagsToString() {
-                if (properties.isEmpty())
-                        return "<empty>";
+    protected String tagsToString() {
+        if (properties.isEmpty())
+            return "<empty>";
 
-                StringBuilder tagTxt = new StringBuilder();
-                for (Map.Entry<String, Object> entry : properties.entrySet()) {
-                        tagTxt.append(entry.getKey());
-                        tagTxt.append("=");
-                        tagTxt.append(entry.getValue());
-                        tagTxt.append("\n");
-                }
-                return tagTxt.toString();
+        StringBuilder tagTxt = new StringBuilder();
+        for (Map.Entry<String, Object> entry : properties.entrySet()) {
+            tagTxt.append(entry.getKey());
+            tagTxt.append("=");
+            tagTxt.append(entry.getValue());
+            tagTxt.append("\n");
         }
+        return tagTxt.toString();
+    }
 
-        protected Map<String, Object> getTags() {
-                return properties;
-        }
+    protected Map<String, Object> getTags() {
+        return properties;
+    }
 
-        public void setTags(Map<String, Object> newTags) {
-                properties.clear();
-                if (newTags != null)
-                        for (Entry<String, Object> e : newTags.entrySet()) {
-                                setTag(e.getKey(), e.getValue());
-                        }
-        }
+    public void setTags(Map<String, Object> newTags) {
+        properties.clear();
+        if (newTags != null)
+            for (Entry<String, Object> e : newTags.entrySet()) {
+                setTag(e.getKey(), e.getValue());
+            }
+    }
 
-        public boolean hasTags() {
-                return !properties.isEmpty();
-        }
+    public boolean hasTags() {
+        return !properties.isEmpty();
+    }
 
-        public String getTag(String name) {
-                return (String) properties.get(name);
-        }
+    public String getTag(String name) {
+        return (String) properties.get(name);
+    }
 
-        @SuppressWarnings("unchecked")
-        public <T> T getTag(String key, T defaultValue) {
-                T val = (T) properties.get(key);
-                if (val == null)
-                        return defaultValue;
-                return val;
-        }
+    @SuppressWarnings("unchecked")
+    public <T> T getTag(String key, T defaultValue) {
+        T val = (T) properties.get(key);
+        if (val == null)
+            return defaultValue;
+        return val;
+    }
 
-        public void setTag(String name, Object value) {
-                // if(name.equals("highway")) {
-                // System.err.println("HIGHWAY:" + value);
-                // }
-                properties.put(name, value);
-        }
+    public void setTag(String name, Object value) {
+        // if(name.equals("highway")) {
+        // System.err.println("HIGHWAY:" + value);
+        // }
+        properties.put(name, value);
+    }
 
-        /**
-         * Chaeck that the object has a given tag with a given value.
-         */
-        public boolean hasTag(String key, Object value) {
-                return value.equals(properties.get(key));
-        }
+    /**
+     * Chaeck that the object has a given tag with a given value.
+     */
+    public boolean hasTag(String key, Object value) {
+        return value.equals(properties.get(key));
+    }
 
-        /**
-         * Check that a given tag has one of the specified values. If no values are
-         * given, just checks for presence of the tag
-         */
-        public boolean hasTag(String key, String... values) {
-                Object osmValue = properties.get(key);
-                if (osmValue == null)
-                        return false;
-
-                // tag present, no values given: success
-                if (values.length == 0)
-                        return true;
-
-                for (String val : values) {
-                        if (val.equals(osmValue))
-                                return true;
-                }
-                return false;
-        }
+    /**
+     * Check that a given tag has one of the specified values. If no values are
+     * given, just checks for presence of the tag
+     */
+    public boolean hasTag(String key, String... values) {
+        Object osmValue = properties.get(key);
+        if (osmValue == null)
+            return false;
 
-        /**
-         * Check that a given tag has one of the specified values.
-         */
-        public final boolean hasTag(String key, Set<String> values) {
-                return values.contains(properties.get(key));
-        }
+        // tag present, no values given: success
+        if (values.length == 0)
+            return true;
 
-        /**
-         * Check a number of tags in the given order for the any of the given
-         * values. Used to parse hierarchical access restrictions
-         */
-        public boolean hasTag(List<String> keyList, Set<String> values) {
-            for (String key : keyList) {
-                Object value = properties.get(key);
-                if (values.contains(value))
-                        return true;
-            }
-            return false;
+        for (String val : values) {
+            if (val.equals(osmValue))
+                return true;
         }
+        return false;
+    }
 
-        public void removeTag(String name) {
-                properties.remove(name);
-        }
+    /**
+     * Check that a given tag has one of the specified values.
+     */
+    public final boolean hasTag(String key, Set<String> values) {
+        return values.contains(properties.get(key));
+    }
 
-        public void clearTags() {
-                properties.clear();
+    /**
+     * Check a number of tags in the given order for the any of the given
+     * values. Used to parse hierarchical access restrictions
+     */
+    public boolean hasTag(List<String> keyList, Set<String> values) {
+        for (String key : keyList) {
+            Object value = properties.get(key);
+            if (values.contains(value))
+                return true;
         }
+        return false;
+    }
 
-        public int getType() {
-                return type;
-        }
+    public void removeTag(String name) {
+        properties.remove(name);
+    }
 
-        public boolean isType(int type) {
-                return this.type == type;
-        }
+    public void clearTags() {
+        properties.clear();
+    }
+
+    public int getType() {
+        return type;
+    }
+
+    public boolean isType(int type) {
+        return this.type == type;
+    }
 }
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/OSITNRelation.java b/core/src/main/java/com/graphhopper/reader/osgb/OSITNRelation.java
index defb32962f..daebc48031 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/OSITNRelation.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/OSITNRelation.java
@@ -59,7 +59,6 @@
 
 	public static OSITNRelation create(long id, XMLStreamReader parser)
 			throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
-//	    System.out.println("OSITNRelation create " + id);
 		OSITNRelation rel = new OSITNRelation(id);
 
 		parser.nextTag();
@@ -200,7 +199,7 @@ protected void addDirectedLink(String nodeId, String orientation) {
 				itnMember.role = "via";
 			}
 		}
-		if (size < 2 || hasTag("type", "oneway")) {
+		if (size < 2 || hasTag("type", OSITNElement.TAG_VALUE_TYPE_ONEWAY) || hasTag("type", OSITNElement.TAG_VALUE_TYPE_ACCESS_PROHIBITED) || hasTag("type", OSITNElement.TAG_VALUE_TYPE_ACCESS_LIMITED)) {
 			String idStr = nodeId.substring(5);
 			ITNMember member = new ITNMember(WAY, Long.valueOf(idStr),
 					0 == size ? "from" : "to");
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/OsItnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/OsItnReader.java
index 75af451776..d06b2d4dfc 100755
--- a/core/src/main/java/com/graphhopper/reader/osgb/OsItnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/OsItnReader.java
@@ -213,6 +213,7 @@ public void process(ProcessData processData, OsItnInputFile in) throws XMLStream
     private File routingFile;
 
     private TLongObjectMap<ItnNodePair> edgeIdToNodeMap;
+    private TLongSet prohibitedWayIds;
 
     private TLongObjectMap<String> edgeNameMap;
     private TLongObjectMap<String> edgeRoadTypeMap;
@@ -325,6 +326,12 @@ private void preProcessSingleFile(OsItnInputFile in) throws XMLStreamException,
                     prepareNoEntryRelation(relation);
                 }
 
+                // If this way is prohibited then we want to make a note of it
+                // so we don't include it in later route generation
+                if (relation.hasTag(OSITNElement.TAG_KEY_TYPE, OSITNElement.TAG_VALUE_TYPE_ACCESS_LIMITED) || relation.hasTag(OSITNElement.TAG_KEY_TYPE, OSITNElement.TAG_VALUE_TYPE_ACCESS_PROHIBITED)) {
+                    prepareAccessProhibitedRelation(relation);
+                }
+
                 if (relation.hasTag("name"))
                     prepareNameRelation(relation);
 
@@ -351,6 +358,17 @@ private void prepareRestrictionRelation(Relation relation) {
         }
     }
 
+    private void prepareAccessProhibitedRelation(Relation relation) {
+        if (!encodingManager.isVehicleQualifierTypeExcluded(relation) && !encodingManager.isVehicleQualifierTypeIncluded(relation)) {
+            ArrayList<? extends RelationMember> members = relation.getMembers();
+            // There will be only one
+            for (RelationMember relationMember : members) {
+                long wayId = relationMember.ref();
+                getProhibitedWayIds().add(wayId);
+            }
+        }
+    }
+
     private void prepareNameRelation(Relation relation) {
         String name = relation.getTag("name");
         TLongObjectMap<String> edgeIdToNameMap = getEdgeNameMap();
@@ -378,7 +396,8 @@ private void prepareRoadTypeRelation(Relation relation) {
     }
 
     private void prepareRoadDirectionRelation(Relation relation) {
-        // Check if this vehicle has an exception meaning we shouldn't handle one way
+        // Check if this vehicle has an exception meaning we shouldn't handle
+        // one way
         if (!encodingManager.isVehicleQualifierTypeExcluded(relation) && !encodingManager.isVehicleQualifierTypeIncluded(relation)) {
             // This will be "-1" the first time this is called
             String orientationIndicator = relation.getTag(OSITNElement.TAG_KEY_ONEWAY_ORIENTATION);
@@ -397,7 +416,8 @@ private void prepareRoadDirectionRelation(Relation relation) {
      * @param relation
      */
     private void prepareNoEntryRelation(Relation relation) {
-        // Check if this vehicle has an exception meaning we shouldn't handle no entry
+        // Check if this vehicle has an exception meaning we shouldn't handle no
+        // entry
         if (!encodingManager.isVehicleQualifierTypeExcluded(relation) && !encodingManager.isVehicleQualifierTypeIncluded(relation)) {
             long flags = 1l; // (+) orientation
             String orientationIndicator = relation.getTag(OSITNElement.TAG_KEY_NOENTRY_ORIENTATION);
@@ -407,7 +427,8 @@ private void prepareNoEntryRelation(Relation relation) {
             TLongObjectMap<TDoubleObjectMap<TDoubleLongMap>> edgeIdToXToYToNodeFlagsMap = getEdgeIdToXToYToNodeFlagsMap();
 
             ArrayList<? extends RelationMember> members = relation.getMembers();
-            // There will be only one which is the directedLink that this No Entry relation sits on
+            // There will be only one which is the directedLink that this No
+            // Entry relation sits on
             for (RelationMember relationMember : members) {
                 long wayId = relationMember.ref();
                 String coords = ((OSITNRelation) relation).getCoordinates();
@@ -451,6 +472,13 @@ private TIntLongMap getEdgeIdToOsmidMap() {
         return edgeIdToNodeMap;
     }
 
+    private TLongSet getProhibitedWayIds() {
+        if (prohibitedWayIds == null)
+            prohibitedWayIds = new TLongHashSet();
+
+        return prohibitedWayIds;
+    }
+
     private TLongObjectMap<String> getEdgeNameMap() {
         if (edgeNameMap == null)
             edgeNameMap = new TLongObjectHashMap<String>(getOsmIdStoreRequiredSet().size());
@@ -685,6 +713,11 @@ void processWay(OSITNWay way, List<OSITNNode> wayNodes) {
         if (includeWay == 0)
             return;
 
+        // Check if we are prohibited from ever traversing this way
+        if (getProhibitedWayIds().remove(wayOsmId)) {
+            return;
+        }
+
         long relationFlags = getRelFlagsMap().get(way.getId());
         logger.info(RELFLAGS_FORMAT, way.getId(), relationFlags);
         String wayName = getWayName(way.getId());
@@ -732,7 +765,7 @@ void processWay(OSITNWay way, List<OSITNNode> wayNodes) {
     }
 
     /**
-     * This method processes the list of NodeIds and checks if any noews have a
+     * This method processes the list of NodeIds and checks if any nodes have a
      * NoEntry Tag. If it does then it adds a shadow node and an extra way as a
      * OneWay. Once it has run out of NoEntry nodes to process it passes the
      * remainder on to processBarriers to check for barriers and construct the
@@ -1239,7 +1272,7 @@ private double getElevation(Node node) {
     }
 
     void prepareWaysWithRelationInfo(Relation relation) {
-        // is there at least one tag interesting for the registed encoders?
+        // is there at least one tag interesting for the registered encoders?
         long handleRelationTags = encodingManager.handleRelationTags(relation, 0);
         // logger.warn(PREPARE_ONE_WAY_FORMAT, handleRelationTags);
         if (handleRelationTags == 0) {
@@ -1540,18 +1573,18 @@ OSITNTurnRelation createTurnRelation(Relation relation) {
         // if (no turn (Type.NOT) except buses=true) leave as is
         // if (no turn (Type.NOT) except buses=false) remove the restriction
         if (type == Type.NOT || type == Type.ONLY) {
-//            System.out.println("Handle turn relation of type " + type + " ");
-//            for (RelationMember member : relation.getMembers()) {
-//                System.out.println("" + member );
-//                
-//            }
+            // System.out.println("Handle turn relation of type " + type + " ");
+            // for (RelationMember member : relation.getMembers()) {
+            // System.out.println("" + member );
+            //
+            // }
             // There is a no entry or mandatory turn
             if (encodingManager.isVehicleQualifierTypeExcluded(relation) || encodingManager.isVehicleQualifierTypeIncluded(relation)) {
                 // The current encoder vehicle is excluded from this restriction
                 // so remove it OR (except buses=false)
                 // The current encoder vehicle is included in the exception so
                 // remove it.
-//                System.out.println("SET IT TO Type.UNSUPPORTED");
+                // System.out.println("SET IT TO Type.UNSUPPORTED");
                 type = Type.UNSUPPORTED;
             }
         }
diff --git a/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
index 45c073f7b9..95508cd5c6 100644
--- a/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
@@ -810,11 +810,11 @@ public boolean supports( Class<?> feature )
      */
     public boolean isVehicleQualifierTypeIncluded(RoutingElement routingElement) {
         if (routingElement.hasTag(vehicleQualifierTypeInclusions, intendedValues)) {
-            for (String string : vehicleQualifierTypeExclusions) {
-                if (routingElement.hasTag(string)) {
-                    System.out.println("Found inclusion " + string + " with " + routingElement.getTag(string));
-                }
-            }
+//            for (String string : vehicleQualifierTypeExclusions) {
+//                if (routingElement.hasTag(string)) {
+//                    System.out.println("Found inclusion " + string + " with " + routingElement.getTag(string));
+//                }
+//            }
             // It is specifically included
             return true;
         }
@@ -827,12 +827,12 @@ public boolean isVehicleQualifierTypeIncluded(RoutingElement routingElement) {
      */
     public boolean isVehicleQualifierTypeExcluded(RoutingElement routingElement) {
         if (routingElement.hasTag(vehicleQualifierTypeExclusions, excludedValues)) {
-            for (String string : vehicleQualifierTypeExclusions) {
-                if (routingElement.hasTag(string)) {
-                    System.out.println("Found exclusion " + string + " with " + routingElement.getTag(string));
-                }
-            }
-            System.out.println();
+//            for (String string : vehicleQualifierTypeExclusions) {
+//                if (routingElement.hasTag(string)) {
+//                    System.out.println("Found exclusion " + string + " with " + routingElement.getTag(string));
+//                }
+//            }
+//            System.out.println();
             // It is specifically excluded
             return true;
         }
diff --git a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
index 20b17ec1d7..33fea2d0bc 100644
--- a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
@@ -17,6 +17,8 @@
  */
 package com.graphhopper.routing.util;
 
+import static com.graphhopper.util.Helper.keepIn;
+
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -25,6 +27,8 @@
 
 import com.graphhopper.reader.Relation;
 import com.graphhopper.reader.Way;
+import com.graphhopper.reader.osgb.OSITNElement;
+import com.graphhopper.util.EdgeIteratorState;
 import com.graphhopper.util.Helper;
 
 /**
@@ -278,11 +282,23 @@ public long acceptWay( Way way )
         return acceptBit;
     }
 
-    @Override
-    public long handleRelationTags( Relation relation, long oldRelationFlags )
-    {
-        return oldRelationFlags;
-    }
+//    @Override
+//    public long handleRelationTags( Relation relation, long oldRelationFlags )
+//    {
+//        long flags = oldRelationFlags;
+//        
+//        // check access limited and access prohibited restrictions
+//        System.out.println("acceptWay for id " + relation.getId());
+//        if (relation.hasTag(OSITNElement.TAG_KEY_TYPE, OSITNElement.TAG_VALUE_TYPE_ACCESS_PROHIBITED)||relation.hasTag(OSITNElement.TAG_KEY_TYPE, OSITNElement.TAG_VALUE_TYPE_ACCESS_LIMITED) ) {
+//            System.out.println("OUR WAY HAS PROHIBITED OR LIMITED ACCESS");
+//            if (isVehicleQualifierTypeExcluded(relation) || isVehicleQualifierTypeIncluded(relation)) {
+//                System.out.println("WE ARE BLOCKING THIS ROAD....");
+//                flags = this.setBool(flags, K_FORWARD, false);
+//                flags = this.setBool(flags, K_BACKWARD, false);      
+//            }
+//        }
+//        return flags;
+//    }
 
     @Override
     public long handleWayTags( Way way, long allowed, long relationFlags )
@@ -315,7 +331,7 @@ public long handleWayTags( Way way, long allowed, long relationFlags )
                     encoded |= forwardBit;
             } else
                 encoded |= directionBitMask;
-
+            
         } else
         {
             encoded = handleFerryTags(way, defaultSpeedMap.get("living_street"), defaultSpeedMap.get("service"), defaultSpeedMap.get("residential"));
@@ -357,10 +373,15 @@ public String getWayInfo(Way way )
         else
             return "destination: " + str;
     }
-
+    
     @Override
     public String toString()
     {
         return "car";
     }
+
+    @Override
+    public long handleRelationTags(Relation relation, long oldRelationFlags) {
+        return oldRelationFlags;
+    }
 }
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/AccessProhibitedTest.java b/core/src/test/java/com/graphhopper/reader/osgb/AccessProhibitedTest.java
new file mode 100644
index 0000000000..2308175fb3
--- /dev/null
+++ b/core/src/test/java/com/graphhopper/reader/osgb/AccessProhibitedTest.java
@@ -0,0 +1,220 @@
+package com.graphhopper.reader.osgb;
+
+import static com.graphhopper.util.GHUtility.count;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
+import java.io.File;
+import java.io.IOException;
+
+import org.junit.Test;
+
+import com.graphhopper.routing.util.DefaultEdgeFilter;
+import com.graphhopper.storage.AbstractGraphStorageTester;
+import com.graphhopper.storage.GraphHopperStorage;
+import com.graphhopper.storage.TurnCostStorage;
+import com.graphhopper.util.EdgeExplorer;
+import com.graphhopper.util.EdgeIterator;
+import com.graphhopper.util.GHUtility;
+
+public class AccessProhibitedTest extends AbstractOsItnReaderTest{
+    
+    /**
+     * Access Prohibited for everything except Buses (So motor vehicles can NOT access)
+     * @throws IOException
+     */
+    @Test
+    public void testAccessProhibitedExceptBusTrueFrom17To19() throws IOException {
+        runAccessProhibitedToNode19Test("./src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-true-crossroad.xml");
+    }
+    /**
+     * Access Prohibited for Buses and nothing else (So motor vehicles can access)
+     * @throws IOException
+     */
+    @Test
+    public void testAccessProhibitedExceptBusFalseFrom17To19() throws IOException {
+        runNonAccessProhibitedToNode19Test("./src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-false-crossroad.xml");
+    }
+    /**
+     * Access Prohibited except for Motor Vehicles (So motor vehicles can access)
+     * @throws IOException
+     */
+    @Test
+    public void testAccessProhibitedExceptMotorVehicleTrueFrom17To19() throws IOException {
+        runNonAccessProhibitedToNode19Test("./src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-true-crossroad.xml");
+    }
+    /**
+     * Access Prohibited for Motor Vehicles and nothing else (So motor vehicles can NOT access)
+     * @throws IOException
+     */
+    @Test
+    public void testAccessProhibitedExceptMotorVehicleFalseFrom17To19() throws IOException {
+        runAccessProhibitedToNode19Test("./src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-false-crossroad.xml");
+    }
+    
+    private void checkAccessProhibitedNetwork(GraphHopperStorage graph, EdgeExplorer explorer) {
+        // Assert that our graph has 4 nodes. We have lost one because of our prohibited route 
+        assertEquals(4, graph.getNodes());
+
+        // Assert that there are four links/roads/edges that can be seen from
+        // the base node;
+        assertEquals(3, count(explorer.setBaseNode(0)));
+
+        GHUtility.printInfo(graph, 0, 20, carOutEdges);
+        // Assert that when the explorer is on node 1 it can travel one edges
+        assertEquals(1, count(explorer.setBaseNode(1)));
+
+        // Assert that when the explorer is positioned on base 2 it can only
+        // travel one edge
+        assertEquals(1, count(explorer.setBaseNode(2)));
+
+        // Assert that when the explorer is positioned on node 3 it can
+        // travel 2 edges
+        assertEquals(1, count(explorer.setBaseNode(3)));
+
+        carAllExplorer = graph.createEdgeExplorer(new DefaultEdgeFilter(carEncoder, true, true));
+        // Starting at node zero I should be able to travel back and forth to
+        // four nodes?
+        EdgeIterator iter = carAllExplorer.setBaseNode(0);
+        assertTrue(iter.next());
+        evaluateRouting(iter, 3, true, true, false);
+        evaluateRouting(iter, 2, true, true, false);
+        evaluateRouting(iter, 1, true, true, true);
+
+        // Starting at node 1
+        iter = carAllExplorer.setBaseNode(1);
+        assertTrue(iter.next());
+        // I should not be able to travel to node 0 in both directions
+        evaluateRouting(iter, 0, true, true, true);
+
+        // Starting at node 2
+        iter = carAllExplorer.setBaseNode(2);
+        assertTrue(iter.next());
+        // I should not be able to travel to node 0 in both directions
+        evaluateRouting(iter, 0, true, true, true);
+
+        // Starting at node 3
+        iter = carAllExplorer.setBaseNode(3);
+        assertTrue(iter.next());
+        // I should not be able to travel to node 0 in both directions
+        evaluateRouting(iter, 0, true, true, true);
+    }
+    private void checkNonAccessProhibitedNetwork(GraphHopperStorage graph, EdgeExplorer explorer) {
+        // Assert that our graph has 4 nodes. We have lost one because of our prohibited route 
+        assertEquals(5, graph.getNodes());
+
+        // Assert that there are four links/roads/edges that can be seen from
+        // the base node;
+        assertEquals(4, count(explorer.setBaseNode(0)));
+
+        GHUtility.printInfo(graph, 0, 20, carOutEdges);
+        // Assert that when the explorer is on node 1 it can travel one edges
+        assertEquals(1, count(explorer.setBaseNode(1)));
+
+        // Assert that when the explorer is on node 2 it can travel one edges
+        assertEquals(1, count(explorer.setBaseNode(2)));
+
+        // Assert that when the explorer is on node 3 it can travel one edges
+        assertEquals(1, count(explorer.setBaseNode(3)));
+
+        // Assert that when the explorer is on node 4 it can travel one edges
+        assertEquals(1, count(explorer.setBaseNode(4)));
+
+        carAllExplorer = graph.createEdgeExplorer(new DefaultEdgeFilter(carEncoder, true, true));
+        // Starting at node zero I should be able to travel back and forth to
+        // four nodes?
+        EdgeIterator iter = carAllExplorer.setBaseNode(0);
+        assertTrue(iter.next());
+        evaluateRouting(iter, 4, true, true, false);
+        evaluateRouting(iter, 3, true, true, false);
+        evaluateRouting(iter, 2, true, true, false);
+        evaluateRouting(iter, 1, true, true, true);
+
+        // Starting at node 1
+        iter = carAllExplorer.setBaseNode(1);
+        assertTrue(iter.next());
+        // I should not be able to travel to node 0 in both directions
+        evaluateRouting(iter, 0, true, true, true);
+
+        // Starting at node 2
+        iter = carAllExplorer.setBaseNode(2);
+        assertTrue(iter.next());
+        // I should not be able to travel to node 0 in both directions
+        evaluateRouting(iter, 0, true, true, true);
+
+        // Starting at node 3
+        iter = carAllExplorer.setBaseNode(3);
+        assertTrue(iter.next());
+        // I should not be able to travel to node 0 in both directions
+        evaluateRouting(iter, 0, true, true, true);
+
+        // Starting at node 4
+        iter = carAllExplorer.setBaseNode(4);
+        assertTrue(iter.next());
+        // I should not be able to travel to node 0 in both directions
+        evaluateRouting(iter, 0, true, true, true);
+    }
+
+    private void runAccessProhibitedToNode19Test(String filename) throws IOException {
+        boolean turnRestrictionsImport = true;
+        boolean is3D = false;
+        GraphHopperStorage graph = configureStorage(turnRestrictionsImport, is3D);
+
+        File file = new File(filename);
+        readGraphFile(graph, file);
+        assertEquals(4, graph.getNodes());
+        EdgeExplorer explorer = graph.createEdgeExplorer(carOutEdges);
+        assertEquals(3, count(explorer.setBaseNode(0)));
+        assertEquals(1, count(explorer.setBaseNode(1)));
+        assertEquals(1, count(explorer.setBaseNode(2)));
+        assertEquals(1, count(explorer.setBaseNode(3)));
+
+        EdgeIterator iter = explorer.setBaseNode(0);
+        assertTrue(iter.next());
+        assertEquals("OTHER ROAD", iter.getName());
+        iter.next();
+        assertEquals("BONHAY ROAD", iter.getName());
+        iter.next();
+        assertEquals("BONHAY ROAD", iter.getName());
+        assertFalse(iter.next());
+
+        DefaultEdgeFilter carOutFilter = new DefaultEdgeFilter(carEncoder, false, true);
+        carOutExplorer = graph.createEdgeExplorer(carOutFilter);
+        
+        checkAccessProhibitedNetwork(graph, carOutExplorer);
+        
+    }
+    
+    private void runNonAccessProhibitedToNode19Test(String filename) throws IOException {
+        boolean turnRestrictionsImport = true;
+        boolean is3D = false;
+        GraphHopperStorage graph = configureStorage(turnRestrictionsImport, is3D);
+
+        File file = new File(filename);
+        readGraphFile(graph, file);
+        assertEquals(5, graph.getNodes());
+        EdgeExplorer explorer = graph.createEdgeExplorer(carOutEdges);
+        assertEquals(4, count(explorer.setBaseNode(0)));
+        assertEquals(1, count(explorer.setBaseNode(1)));
+        assertEquals(1, count(explorer.setBaseNode(2)));
+        assertEquals(1, count(explorer.setBaseNode(3)));
+        assertEquals(1, count(explorer.setBaseNode(4)));
+
+        EdgeIterator iter = explorer.setBaseNode(0);
+        assertTrue(iter.next());
+        assertEquals("OTHER ROAD", iter.getName());
+        iter.next();
+        assertEquals("OTHER ROAD", iter.getName());
+        iter.next();
+        assertEquals("BONHAY ROAD", iter.getName());
+        iter.next();
+        assertEquals("BONHAY ROAD", iter.getName());
+        assertFalse(iter.next());
+
+        DefaultEdgeFilter carOutFilter = new DefaultEdgeFilter(carEncoder, false, true);
+        carOutExplorer = graph.createEdgeExplorer(carOutFilter);
+        
+        checkNonAccessProhibitedNetwork(graph, carOutExplorer);
+    }    
+}
diff --git a/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-false-crossroad.xml b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-false-crossroad.xml
new file mode 100644
index 0000000000..9b123a8854
--- /dev/null
+++ b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-false-crossroad.xml
@@ -0,0 +1,313 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'
+	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
+	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'
+	fid='GDS-58096-1'>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277880'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>290000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277881'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277882'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>270000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277883'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,85000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277884'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,95000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288017">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>290000.000,90000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277880" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288018">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 270000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277882" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639"></osgb:referenceToTopographicArea>
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288019">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,85000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277883"></osgb:directedNode>
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288020">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 280000.000,95000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277884" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:roadInformationMember>
+		<osgb:RoadRouteInformation fid='osgb4000000025219970'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Routing Information</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-12-04</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Routing Information</osgb:descriptiveGroup>
+			<osgb:vehicleQualifier>
+<!-- 			Access Prohibited To buses but nothing else -->
+				<osgb:type exceptFor="false">Buses</osgb:type>
+			</osgb:vehicleQualifier>
+			<osgb:environmentQualifier>
+				<osgb:instruction>Access Prohibited To</osgb:instruction>
+			</osgb:environmentQualifier>
+			<osgb:referenceToRoadLink xlink:href='#osgb4000000025288019'/>
+		</osgb:RoadRouteInformation>
+	</osgb:roadInformationMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366114'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>BONHAY ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288017' />
+			<osgb:networkMember xlink:href='#osgb4000000025288018' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366115'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>OTHER ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288019' />
+			<osgb:networkMember xlink:href='#osgb4000000025288020' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:boundedBy>
+		<gml:Box srsName='osgb:BNG'>
+			<gml:coordinates>290822.000,91912.000 293199.000,94222.000</gml:coordinates>
+		</gml:Box>
+	</osgb:boundedBy>
+</osgb:FeatureCollection>
diff --git a/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-true-crossroad.xml b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-true-crossroad.xml
new file mode 100644
index 0000000000..9f2cc29433
--- /dev/null
+++ b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-buses-true-crossroad.xml
@@ -0,0 +1,313 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'
+	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
+	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'
+	fid='GDS-58096-1'>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277880'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>290000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277881'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277882'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>270000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277883'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,85000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277884'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,95000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288017">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>290000.000,90000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277880" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288018">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 270000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277882" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639"></osgb:referenceToTopographicArea>
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288019">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,85000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277883"></osgb:directedNode>
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288020">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 280000.000,95000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277884" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:roadInformationMember>
+		<osgb:RoadRouteInformation fid='osgb4000000025219970'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Routing Information</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-12-04</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Routing Information</osgb:descriptiveGroup>
+			<osgb:vehicleQualifier>
+<!-- 			Access Prohibited To everthing EXCEPT Buses -->
+				<osgb:type exceptFor="true">Buses</osgb:type>
+			</osgb:vehicleQualifier>
+			<osgb:environmentQualifier>
+				<osgb:instruction>Access Prohibited To</osgb:instruction>
+			</osgb:environmentQualifier>
+			<osgb:referenceToRoadLink xlink:href='#osgb4000000025288019'/>
+		</osgb:RoadRouteInformation>
+	</osgb:roadInformationMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366114'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>BONHAY ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288017' />
+			<osgb:networkMember xlink:href='#osgb4000000025288018' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366115'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>OTHER ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288019' />
+			<osgb:networkMember xlink:href='#osgb4000000025288020' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:boundedBy>
+		<gml:Box srsName='osgb:BNG'>
+			<gml:coordinates>290822.000,91912.000 293199.000,94222.000</gml:coordinates>
+		</gml:Box>
+	</osgb:boundedBy>
+</osgb:FeatureCollection>
diff --git a/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-false-crossroad.xml b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-false-crossroad.xml
new file mode 100644
index 0000000000..9f4d3886e7
--- /dev/null
+++ b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-false-crossroad.xml
@@ -0,0 +1,313 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'
+	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
+	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'
+	fid='GDS-58096-1'>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277880'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>290000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277881'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277882'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>270000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277883'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,85000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277884'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,95000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288017">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>290000.000,90000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277880" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288018">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 270000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277882" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639"></osgb:referenceToTopographicArea>
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288019">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,85000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277883"></osgb:directedNode>
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288020">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 280000.000,95000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277884" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:roadInformationMember>
+		<osgb:RoadRouteInformation fid='osgb4000000025219970'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Routing Information</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-12-04</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Routing Information</osgb:descriptiveGroup>
+			<osgb:vehicleQualifier>
+<!-- 			Access Prohibited To for Motor Vehicles but nothing else -->
+				<osgb:type exceptFor="false">Motor Vehicles</osgb:type>
+			</osgb:vehicleQualifier>
+			<osgb:environmentQualifier>
+				<osgb:instruction>Access Prohibited To</osgb:instruction>
+			</osgb:environmentQualifier>
+			<osgb:referenceToRoadLink xlink:href='#osgb4000000025288019'/>
+		</osgb:RoadRouteInformation>
+	</osgb:roadInformationMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366114'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>BONHAY ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288017' />
+			<osgb:networkMember xlink:href='#osgb4000000025288018' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366115'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>OTHER ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288019' />
+			<osgb:networkMember xlink:href='#osgb4000000025288020' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:boundedBy>
+		<gml:Box srsName='osgb:BNG'>
+			<gml:coordinates>290822.000,91912.000 293199.000,94222.000</gml:coordinates>
+		</gml:Box>
+	</osgb:boundedBy>
+</osgb:FeatureCollection>
diff --git a/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-true-crossroad.xml b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-true-crossroad.xml
new file mode 100644
index 0000000000..43d55227bc
--- /dev/null
+++ b/core/src/test/resources/com/graphhopper/reader/os-itn-access-prohibited-except-for-motor-vehicles-true-crossroad.xml
@@ -0,0 +1,313 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'
+	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
+	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'
+	fid='GDS-58096-1'>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277880'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>290000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277881'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277882'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>270000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277883'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,85000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277884'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,95000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288017">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>290000.000,90000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277880" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288018">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 270000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277882" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639"></osgb:referenceToTopographicArea>
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288019">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,85000.000 280000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277883"></osgb:directedNode>
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277881" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288020">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>538.90</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,90000.000 280000.000,95000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277881" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277884" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:roadInformationMember>
+		<osgb:RoadRouteInformation fid='osgb4000000025219970'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Routing Information</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-12-04</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Routing Information</osgb:descriptiveGroup>
+			<osgb:vehicleQualifier>
+<!-- 			Access Prohibited To everthing EXCEPT Motor Vehicles -->
+				<osgb:type exceptFor="true">Motor Vehicles</osgb:type>
+			</osgb:vehicleQualifier>
+			<osgb:environmentQualifier>
+				<osgb:instruction>Access Prohibited To</osgb:instruction>
+			</osgb:environmentQualifier>
+			<osgb:referenceToRoadLink xlink:href='#osgb4000000025288019'/>
+		</osgb:RoadRouteInformation>
+	</osgb:roadInformationMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366114'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>BONHAY ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288017' />
+			<osgb:networkMember xlink:href='#osgb4000000025288018' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366115'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>OTHER ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288019' />
+			<osgb:networkMember xlink:href='#osgb4000000025288020' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:boundedBy>
+		<gml:Box srsName='osgb:BNG'>
+			<gml:coordinates>290822.000,91912.000 293199.000,94222.000</gml:coordinates>
+		</gml:Box>
+	</osgb:boundedBy>
+</osgb:FeatureCollection>
