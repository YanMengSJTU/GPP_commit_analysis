diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
index c3b53ceee9..ae6988f109 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
@@ -1,8 +1,11 @@
 package uk.co.ordnancesurvey.gpx.graphhopper;
 
 import gherkin.JSONParser;
+import gherkin.formatter.JSONPrettyFormatter;
 
 import java.io.IOException;
+import java.util.HashSet;
+import java.util.List;
 
 import org.alternativevision.gpx.beans.Waypoint;
 import org.apache.commons.io.IOUtils;
@@ -13,6 +16,7 @@
 
 import uk.co.ordnancesurvey.gpx.beans.RouteWayPoint;
 import uk.co.ordnancesurvey.gpx.extensions.ExtensionConstants;
+import uk.co.ordnancesurvey.webtests.platforms.BrowserPlatformOptions;
 
 import com.google.gson.JsonArray;
 import com.google.gson.JsonElement;
@@ -36,7 +40,7 @@ public GraphHopperJSONParser() {
 	}
 
 	public JSONWayPoints parseJSONFromString(String jsonString) {
-
+		this.jsonString=jsonString;
 		JsonParser parser = new JsonParser();
 		JsonElement je = parser.parse(jsonString);
 		JsonObject jo = je.getAsJsonObject();
@@ -89,10 +93,52 @@ public JSONWayPoints parseJSONFromString(String jsonString) {
 			json.addWayPoint(w);
 		}
 
+		
+		
+
 		return json;
 
 	}
 
+	
+	public JSONWayPoints parseCoordinatesFromJson(String jsonString)
+	{
+		this.jsonString=jsonString;
+		JsonParser parser = new JsonParser();
+		JsonElement je = parser.parse(jsonString);
+		JsonObject jo = je.getAsJsonObject();
+		JsonArray paths = jo.getAsJsonArray("paths");
+		JsonObject points = paths.get(0).getAsJsonObject()
+				.getAsJsonObject("points");
+		JsonArray coordinates = points.getAsJsonObject().getAsJsonArray(
+				"coordinates");
+		
+
+		for (JsonElement jsonElement : coordinates) {
+			Waypoint w = new Waypoint();
+			Double longitude = Double.parseDouble(jsonElement.getAsJsonArray().get(0)
+					.toString());
+			Double latitude = Double.parseDouble(jsonElement.getAsJsonArray().get(1)
+					.toString());
+			w.setLongitude(longitude);
+			w.setLatitude(latitude);
+			json.addWayPoint(w);
+			
+			}
+
+		
+		return json;
+		
+	}
+	
+	
+	public HashSet<Waypoint> getJsonCoordinatesAsHashSet()
+	{
+		
+		parseCoordinatesFromJson(jsonString);
+		return json.getInstructions();
+	}
+	
 	public JsonElement getJSONCoordinates(JsonArray paths, int coordinateIndex) {
 
 		JsonObject points = paths.get(0).getAsJsonObject()
@@ -103,19 +149,21 @@ public JsonElement getJSONCoordinates(JsonArray paths, int coordinateIndex) {
 		return coordinates.get(coordinateIndex);
 	}
 
-	public void parse(String routeType, String avoidance, String vehicle,
+	
+	public void parse(String routeType, String avoidances, String routeOptions,
 			String[] string) {
 
+		String vehicle="";
+		String routeOption="";
 		
-		String route="";
-		if (routeType.split(",").length>1)
+		if (routeOptions.split(",").length>1)
 		{
-		 vehicle=routeType.split(",")[0];
-		 route=routeType.split(",")[1];
+		 vehicle=routeOptions.split(",")[0];
+		 routeOption=routeOptions.split(",")[1];
 		}
 		else
 		{
-			vehicle=routeType;
+			vehicle=routeOptions;
 		}
 		// Set up the URL
 		String jsonResponse = "";
@@ -146,15 +194,16 @@ public void parse(String routeType, String avoidance, String vehicle,
 		}
 		sb.append("&vehicle=");
 		sb.append(vehicle);
+		sb.append("&weighting=");
+		sb.append(routeOption);
 		sb.append(coordinateString);
 		sb.append("&apikey=");
 		sb.append(apikey);
 		sb.append("&points_encoded=false");
 
-		if (!avoidance.equals("")) {
-			sb.append("&avoidances=" + avoidance);
-			sb.append("&weighting=fastavoid");
-		}
+		if (!avoidances.equals("")) {
+			sb.append("&avoidances=" + avoidances);
+					}
 		GraphHopperGPXParserRouteTest GPHService = new GraphHopperGPXParserRouteTest();
 		try {
 			CloseableHttpResponse httpResponse = GPHService
@@ -194,8 +243,26 @@ public boolean isWayPointinPath(Waypoint w) {
 
 		return iswaypointinPath;
 
+				
 	}
 
+	public boolean isWayPointinPath(Waypoint we,HashSet<Waypoint> wa) {
+		boolean iswaypointinPath = false;
+
+		for (Waypoint waypoint : wa) {
+			
+			if( new RouteWayPoint(we).equals(new RouteWayPoint(waypoint)))
+			{
+				iswaypointinPath=true;
+				LOG.info("WayPoint " + we + " Found In a Path");
+			}
+			if (iswaypointinPath) {
+				break;
+			}
+		}
+		
+		return iswaypointinPath;
+	}
 	/**
 	 * Creates a Waypoint with below attributes
 	 * 
@@ -266,4 +333,17 @@ public String getNearestPointDistance()
 		return distance.toString();
 	}
 
+	public long getTotalRouteTime() {
+		JsonParser parser = new JsonParser();
+		JsonElement je = parser.parse(jsonString);
+		JsonObject jo = je.getAsJsonObject();
+		JsonArray paths = jo.getAsJsonArray("paths");
+		JsonPrimitive totalTime = paths.get(0).getAsJsonObject().getAsJsonPrimitive("time");
+		return Long.parseLong(totalTime.toString());
+	}
+
+
+
+
+
 }
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONWayPoints.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONWayPoints.java
index 0c20196dfb..6b9d603c24 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONWayPoints.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONWayPoints.java
@@ -9,7 +9,7 @@
 	
 	
 	String JSONString;
-	ArrayList<Waypoint> instructions= new ArrayList<Waypoint>();
+	HashSet<Waypoint> instructions= new HashSet<Waypoint>();
 
 	
 	/**
@@ -26,11 +26,12 @@ public void addWayPoint(Waypoint w) {
 /**
  * @return List of WayPoints in a JSON Route String
  */
-public   ArrayList<Waypoint> getInstructions()
+public   HashSet<Waypoint> getInstructions()
 {
 	return instructions;
 }
 	
+
 	
 	
 	
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
index b76a087a68..b8c93165a5 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
@@ -20,98 +20,14 @@
 	GraphHopperUIUtil graphUiUtil;
 
 	String instruction;
-	String nearestPoint="";
-	String Distance="";
-
-	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI$")
-	public void getRoute(String pointA, String pointB, String routeType)
-			throws InterruptedException {
-		String graphHopperWebUrl;
-
-		if (IntegrationTestProperties.getTestPropertyBool("viaApigee")) {
-			graphHopperWebUrl = IntegrationTestProperties
-					.getTestProperty("graphHopperWebUrlViaApigee");
-		} else {
-			graphHopperWebUrl = IntegrationTestProperties
-					.getTestProperty("graphHopperWebUrl");
-		}
-
-		graphUiUtil = new GraphHopperUIUtil(graphHopperWebUrl);
-
-		String testON = IntegrationTestProperties.getTestProperty("testON");
-
-		switch (testON.toUpperCase()) {
-		case "WEB":
-
-			graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB);
-			break;
-		case "SERVICE":
-			graphUiUtil.getRouteFromService(routeType, pointA, pointB);
-			break;
-		default:
-
-			if (pointA.split(",").length == 2) {
-				graphUiUtil.getRouteFromService(routeType, pointA, pointB);
-				graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB);
-			} else {
-				graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB);
-			}
-
-			break;
-
-		}
-
-	}
+	String nearestPoint = "";
+	String Distance = "";
 
 	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI and avoid \"([^\"]*)\"$")
 	public void getRouteWithAvoidance(String pointA, String pointB,
-			String routeType, String avoidance) throws InterruptedException {
-		String graphHopperWebUrl;
-		avoidance = avoidance.toLowerCase().trim();
-		if (IntegrationTestProperties.getTestPropertyBool("viaApigee")) {
-			graphHopperWebUrl = IntegrationTestProperties
-					.getTestProperty("graphHopperWebUrlViaApigee");
-		} else {
-			graphHopperWebUrl = IntegrationTestProperties
-					.getTestProperty("graphHopperWebUrl");
-		}
-
-		graphUiUtil = new GraphHopperUIUtil(graphHopperWebUrl);
-
-		String testON = IntegrationTestProperties.getTestProperty("testON");
-
-		switch (testON.toUpperCase()) {
-		case "WEB":
-
-			graphUiUtil.getRouteFromUI(routeType, avoidance, pointA, pointB);
-			break;
-		case "SERVICE":
-			graphUiUtil.getRouteFromServiceWithAvoidance(routeType, avoidance,
-					pointA, pointB);
-			break;
-		default:
-
-			if (pointA.split(",").length == 2) {
-				graphUiUtil.getRouteFromServiceWithAvoidance(routeType,
-						avoidance, pointA, pointB);
-				graphUiUtil
-						.getRouteFromUI(routeType, avoidance, pointA, pointB);
-			} else {
-				graphUiUtil
-						.getRouteFromUI(routeType, avoidance, pointA, pointB);
-			}
-
-			break;
-
-		}
-
-	}
-
-	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI via \"([^\"]*)\"$")
-	public void getRoute(String pointA, String pointB, String routeType,
-			String pointC) throws InterruptedException {
+			String routeOptions, String avoidances) throws InterruptedException {
 		String graphHopperWebUrl;
-
+		avoidances = avoidances.toLowerCase().trim();
 		if (IntegrationTestProperties.getTestPropertyBool("viaApigee")) {
 			graphHopperWebUrl = IntegrationTestProperties
 					.getTestProperty("graphHopperWebUrlViaApigee");
@@ -127,21 +43,23 @@ public void getRoute(String pointA, String pointB, String routeType,
 		switch (testON.toUpperCase()) {
 		case "WEB":
 
-			graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB, pointC);
+			graphUiUtil
+					.getRouteFromUI(routeOptions, avoidances, pointA, pointB);
 			break;
 		case "SERVICE":
-			graphUiUtil.getRouteFromService(routeType, pointA, pointB, pointC);
+			graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
+					avoidances, pointA, pointB);
 			break;
 		default:
 
 			if (pointA.split(",").length == 2) {
-				graphUiUtil.getRouteFromService(routeType, pointA, pointB,
-						pointC);
-				graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB,
-						pointC);
+				graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
+						avoidances, pointA, pointB);
+				graphUiUtil.getRouteFromUI(routeOptions, avoidances, pointA,
+						pointB);
 			} else {
-				graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB,
-						pointC);
+				graphUiUtil.getRouteFromUI(routeOptions, avoidances, pointA,
+						pointB);
 			}
 
 			break;
@@ -152,7 +70,7 @@ public void getRoute(String pointA, String pointB, String routeType,
 
 	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI and avoid \"([^\"]*)\" via \"([^\"]*)\"$")
 	public void getRouteWithAvoidances(String pointA, String pointB,
-			String routeType, String avoidance, String pointC)
+			String routeOptions, String avoidance, String pointC)
 			throws InterruptedException {
 		String graphHopperWebUrl;
 
@@ -171,20 +89,22 @@ public void getRouteWithAvoidances(String pointA, String pointB,
 		switch (testON.toUpperCase()) {
 		case "WEB":
 
-			graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB, pointC);
+			graphUiUtil
+					.getRouteFromUI(routeOptions, "", pointA, pointB, pointC);
 			break;
 		case "SERVICE":
-			graphUiUtil.getRouteFromServiceWithAvoidance(routeType, avoidance,
-					pointA, pointB, pointC);
+			graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
+					avoidance, pointA, pointB, pointC);
 			break;
 		default:
 
 			if (pointA.split(",").length == 2) {
-				graphUiUtil.getRouteFromServiceWithAvoidance(routeType,
+				graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
 						avoidance, pointA, pointB, pointC);
-				graphUiUtil.getRouteFromUI(routeType, pointA, pointB, pointC);
+				graphUiUtil
+						.getRouteFromUI(routeOptions, pointA, pointB, pointC);
 			} else {
-				graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB,
+				graphUiUtil.getRouteFromUI(routeOptions, "", pointA, pointB,
 						pointC);
 			}
 
@@ -232,7 +152,7 @@ public void getRoute(String pointA, String pointB, String routeOptions,
 
 	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI and avoid \"([^\"]*)\" via \"([^\"]*)\" and \"([^\"]*)\"$")
 	public void getRouteWithAvoidances(String pointA, String pointB,
-			String routeType, String avoidance, String pointC, String pointD)
+			String routeOptions, String avoidance, String pointC, String pointD)
 			throws InterruptedException {
 
 		graphUiUtil = new GraphHopperUIUtil(
@@ -243,22 +163,22 @@ public void getRouteWithAvoidances(String pointA, String pointB,
 		switch (testON.toUpperCase()) {
 		case "WEB":
 
-			graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB, pointC,
-					pointD);
+			graphUiUtil.getRouteFromUI(routeOptions, "", pointA, pointB,
+					pointC, pointD);
 			break;
 		case "SERVICE":
-			graphUiUtil.getRouteFromServiceWithAvoidance(routeType, avoidance,
-					pointA, pointB, pointC, pointD);
+			graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
+					avoidance, pointA, pointB, pointC, pointD);
 			break;
 		default:
 
 			if (pointA.split(",").length == 2) {
-				graphUiUtil.getRouteFromServiceWithAvoidance(routeType,
+				graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
 						avoidance, pointA, pointB, pointC, pointD);
-				graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB,
+				graphUiUtil.getRouteFromUI(routeOptions, "", pointA, pointB,
 						pointC, pointD);
 			} else {
-				graphUiUtil.getRouteFromUI(routeType, "", pointA, pointB,
+				graphUiUtil.getRouteFromUI(routeOptions, "", pointA, pointB,
 						pointC, pointD);
 			}
 
@@ -269,28 +189,33 @@ public void getRouteWithAvoidances(String pointA, String pointB,
 	}
 
 	@Given("^I request a nearest point from  \"([^\"]*)\" from Nearest Point API$")
-	public void I_request_a_nearest_point_from_from_Nearest_Point_API(String pointA) {
-		
-		
-		graphUiUtil=(IntegrationTestProperties.getTestPropertyBool("viaApigee")==true)?new GraphHopperUIUtil(
-				IntegrationTestProperties.getTestProperty("graphHopperWebUrlViaApigee")):
-					new GraphHopperUIUtil(
-							IntegrationTestProperties.getTestProperty("graphHopperWebUrl"));
-		
-
-			
-		if (IntegrationTestProperties.getTestProperty("testON").equalsIgnoreCase("Service"))
-		nearestPoint=graphUiUtil.nearestPointService(pointA);
-		Distance=graphUiUtil.nearestPointDistance();
+	public void I_request_a_nearest_point_from_from_Nearest_Point_API(
+			String pointA) {
+
+		graphUiUtil = (IntegrationTestProperties
+				.getTestPropertyBool("viaApigee") == true) ? new GraphHopperUIUtil(
+				IntegrationTestProperties
+						.getTestProperty("graphHopperWebUrlViaApigee"))
+				: new GraphHopperUIUtil(
+						IntegrationTestProperties
+								.getTestProperty("graphHopperWebUrl"));
+
+		nearestPoint = graphUiUtil.nearestPointService(pointA);
+		Distance = graphUiUtil.nearestPointDistance();
 
 	}
 
 	@Then("^I should be able to verify the nearest point to be \"([^\"]*)\" at a distance of \"([^\"]*)\"$")
-	public void I_should_be_able_to_verify_the_nearest_point_to_be(String pointB,String distance) {
-	  
-		Assert.assertTrue("******Expected nearest Point "+pointB+" is not matching with "+ nearestPoint+"********",pointB.equals(nearestPoint));
-		Assert.assertTrue("******Expected nearest Point distance " +distance+" is not matcching with " +Distance,Distance.equals(distance));
-	   
+	public void I_should_be_able_to_verify_the_nearest_point_to_be(
+			String pointB, String distance) {
+
+		Assert.assertTrue("******Expected nearest Point " + pointB
+				+ " is not matching with " + nearestPoint + "********",
+				pointB.equals(nearestPoint));
+		Assert.assertTrue("******Expected nearest Point distance " + distance
+				+ " is not matcching with " + Distance,
+				Distance.equals(distance));
+
 	}
 
 	@Then("^I should be able to verify the \"([^\"]*)\" waypoint \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" on the route map$")
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 6d022913e9..7ce69b334d 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -47,7 +47,6 @@
 	String testOn = IntegrationTestProperties.getTestProperty("testON");
 	GraphHopperGPXParserRouteTest GPHService = new GraphHopperGPXParserRouteTest();
 	GraphHopperJSONParser GPHJsonService = new GraphHopperJSONParser();
-	GraphHopperJSONParser JSONService = new GraphHopperJSONParser();
 
 	JavascriptExecutor js = (JavascriptExecutor) driver;
 	WebElement we;
@@ -68,6 +67,7 @@ public GraphHopperUIUtil(String url) {
 		}
 	}
 
+
 	private void init() throws InterruptedException {
 		// baseUrl = IntegrationTestProperties
 		// .getTestProperty("graphHopperWebUrl");
@@ -94,27 +94,24 @@ public void logout() {
 	 * <p>
 	 * all avoidances will be considered while generating a route.
 	 * 
-	 * @param routeType
+	 * @param routeOptions
 	 *            can be car/bike/foot
-	 * @param avoidance
+	 * @param avoidances
 	 *            can be aroad,cliff.. etc and it can be "" if no avoidance is
 	 *            need to be set
 	 * @param points
 	 *            start and end points along with any intermediate points
 	 * @throws InterruptedException
 	 */
-	public void getRouteFromUI(String routeType, String avoidance,
+	public void getRouteFromUI(String routeOptions, String avoidances,
 			String... points) throws InterruptedException {
-		String vehicle="";
-		String route="";
-		if (routeType.split(",").length>1)
-		{
-		 vehicle=routeType.split(",")[0];
-		 route=routeType.split(",")[1];
-		}
-		else
-		{
-			vehicle=routeType;
+		String vehicle = "";
+		String routeOption = "";
+		if (routeOptions.split(",").length > 1) {
+			vehicle = routeOptions.split(",")[0];
+			routeOption = routeOptions.split(",")[1];
+		} else {
+			vehicle = routeOptions;
 		}
 
 		switch (vehicle) {
@@ -133,14 +130,75 @@ public void getRouteFromUI(String routeType, String avoidance,
 			break;
 
 		}
-
 		clickElement(settingsButton);
-		
-		if (route.equalsIgnoreCase("shortest"))
-		{
-			clickElement(shortest_RButton);
+
+		if (!avoidances.isEmpty()) {
+			for (int i = 0; i < avoidances.split(",").length; i++) {
+				String avoidance = avoidances.split(",")[i];
+				switch (avoidance.toLowerCase().trim()) {
+
+				case "aroad":
+					clickElement(avoidance_ARoad);
+					break;
+
+				case "boulders":
+					clickElement(avoidance_Boulders);
+					break;
+				case "cliff":
+					clickElement(avoidance_Cliff);
+					break;
+				case "inlandwater":
+					clickElement(avoidance_InlandWater);
+					break;
+				case "marsh":
+					clickElement(avoidance_Marsh);
+					break;
+				case "quarryorpit":
+					clickElement(avoidance_QuarryOrPit);
+					break;
+				case "scree":
+					clickElement(avoidance_Scree);
+					break;
+				case "rock":
+					clickElement(avoidance_Rock);
+					break;
+				case "mud":
+					clickElement(avoidance_Mud);
+					break;
+
+				case "sand":
+					clickElement(avoidance_Sand);
+					break;
+
+				case "shingle":
+					clickElement(avoidance_Shingle);
+					break;
+
+				default:
+					break;
+				}
+			}
+
+			if (routeOptions.equalsIgnoreCase("shortavoid")) {
+				clickElement(shortest_RButton);
+			}
+
+			else {
+				clickElement(fastest_RButton);
+			}
+
 		}
-		
+
+		else {
+			if (routeOptions.equalsIgnoreCase("shortest")) {
+				clickElement(shortest_RButton);
+			}
+
+			else {
+				clickElement(fastest_RButton);
+			}
+		}
+
 		for (int i = 0; i < points.length - 2; i++)
 
 		{
@@ -166,55 +224,8 @@ public void getRouteFromUI(String routeType, String avoidance,
 			}
 		}
 
-		if (!avoidance.isEmpty()) {
-
-			clickElement(settingsButton);
-			switch (avoidance.toLowerCase().trim()) {
-
-			case "aroad":
-				clickElement(avoidance_ARoad);
-				break;
-
-			case "boulders":
-				clickElement(avoidance_Boulders);
-				break;
-			case "cliff":
-				clickElement(avoidance_Cliff);
-				break;
-			case "inlandwater":
-				clickElement(avoidance_InlandWater);
-				break;
-			case "marsh":
-				clickElement(avoidance_Marsh);
-				break;
-			case "quarryorpit":
-				clickElement(avoidance_QuarryOrPit);
-				break;
-			case "scree":
-				clickElement(avoidance_Scree);
-				break;
-			case "rock":
-				clickElement(avoidance_Rock);
-				break;
-			case "mud":
-				clickElement(avoidance_Mud);
-				break;
-
-			case "sand":
-				clickElement(avoidance_Sand);
-				break;
-
-			case "shingle":
-				clickElement(avoidance_Shingle);
-				break;
-
-			default:
-				break;
-			}
-
-		}
 		clickElement(ROUTE_SEARCH);
-		
+
 		waitFor(INSTRUCTIONS);
 
 	}
@@ -235,15 +246,12 @@ public boolean verifyInstructionThroughUI(String routeStepNumber,
 			LOG.info(e.getMessage());
 			return false;
 		}
-		if (null!=avoidance)
-		{
-		if (!avoidance.isEmpty()) {
-			avoidance = ",  " + avoidance;
-		}
-		}
-		else
-		{
-			avoidance="";
+		if (null != avoidance) {
+			if (!avoidance.isEmpty()) {
+				avoidance = ",  " + avoidance;
+			}
+		} else {
+			avoidance = "";
 		}
 
 		return getTableRowStatus(INSTRUCTIONS,
@@ -252,17 +260,17 @@ public boolean verifyInstructionThroughUI(String routeStepNumber,
 
 	}
 
-	public void getRouteFromServiceWithAvoidance(String routeType,
-			String avoidance, String... points) {
+	public void getRouteFromServiceWithAvoidance(String routeOptions,
+			String avoidances, String... points) {
 
 		if (IntegrationTestProperties.getTestProperty("routeType")
 				.equals("gpx")) {
-			GPHService.parseRoute("gpx", avoidance, routeType, points);
+			GPHService.parseRoute("gpx", avoidances, routeOptions, points);
 		}
 
 		else {
 
-			GPHJsonService.parse("json", avoidance, routeType, points);
+			GPHJsonService.parse("json", avoidances, routeOptions, points);
 		}
 
 	}
@@ -276,7 +284,6 @@ public void getRouteFromService(String routeType, String... points) {
 
 		else {
 
-
 			GPHJsonService.parse("json", "", routeType, points);
 		}
 
@@ -452,7 +459,13 @@ public void verifyTotalRouteTime(String totalRouteTime)
 			break;
 
 		case "SERVICE":
-			aTime.setTime(GPHService.getTotalRouteTime());
+
+			if (IntegrationTestProperties.getTestProperty("routeType")
+					.equalsIgnoreCase("GPX")) {
+				aTime.setTime(GPHService.getTotalRouteTime());
+			} else {
+				aTime.setTime(GPHJsonService.getTotalRouteTime());
+			}
 			LOG.info("The total route time expected is " + eTime.getTime()
 					+ " and actual is " + aTime.getTime());
 			assertTrue("The total route time expected " + eTime.getTime()
@@ -462,13 +475,12 @@ public void verifyTotalRouteTime(String totalRouteTime)
 
 		default:
 
-			aTime.setTime(GPHService.getTotalRouteTime());
-			LOG.info("The total route time expected is " + eTime.getTime()
-					+ " and actual is " + aTime.getTime());
-			assertTrue("The total route time expected " + eTime.getTime()
-					+ " is not matchin with actual " + aTime.getTime(),
-					aTime.getTime() <= eTime.getTime());
-
+			if (IntegrationTestProperties.getTestProperty("routeType")
+					.equalsIgnoreCase("GPX")) {
+				aTime.setTime(GPHService.getTotalRouteTime());
+			} else {
+				aTime.setTime(GPHJsonService.getTotalRouteTime());
+			}
 			actualTime = getValue(TOTAL_ROUTE_TIME).split("take ")[1].trim()
 					.replaceAll(" ", "");
 			if (!actualTime.contains("h")) {
@@ -499,8 +511,17 @@ public void isTrackPointonRouteMap(List<Map<String, String>> trackPointsList)
 			// String time = (String) trackPointsList.get(i).get("time");
 
 			Waypoint trackPoint = buildWayPoint(waypointco);
-			assertTrue(GPHService.isWayPointOnTrack(trackPoint, GPHService
-					.getTracks().iterator().next()));
+			if (IntegrationTestProperties.getTestProperty("routeType").equals(
+					"gpx")) {
+				assertTrue(GPHService.isWayPointOnTrack(trackPoint, GPHService
+						.getTracks().iterator().next()));
+			}
+
+			else {
+				assertTrue(GPHJsonService.isWayPointinPath(trackPoint,GPHJsonService
+						.getJsonCoordinatesAsHashSet()));
+
+			}
 
 		}
 
@@ -516,8 +537,17 @@ public void isTrackPointNotonRouteMap(
 			// String time = (String) trackPointsList.get(i).get("time");
 
 			Waypoint trackPoint = buildWayPoint(waypointco);
-			assertTrue(!GPHService.isWayPointOnTrack(trackPoint, GPHService
-					.getTracks().iterator().next()));
+			if (IntegrationTestProperties.getTestProperty("routeType").equals(
+					"gpx")) {
+				assertTrue(!GPHService.isWayPointOnTrack(trackPoint, GPHService
+						.getTracks().iterator().next()));
+			}
+
+			else {
+				assertTrue(!GPHJsonService.isWayPointinPath(trackPoint,GPHJsonService
+						.getJsonCoordinatesAsHashSet()));
+
+			}
 
 		}
 
@@ -590,19 +620,17 @@ public BufferedImage resize(BufferedImage img, int newW, int newH) {
 	public void verifyWayPointsThroughService() {
 
 	}
-	
+
 	public String nearestPointService(String pointA) {
-		
+
 		return GPHJsonService.getNearestPoint(pointA);
-		
-		
+
 	}
 
 	public String nearestPointDistance() {
-		
+
 		return GPHJsonService.getNearestPointDistance();
-		
-		
+
 	}
 
 }
diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index d49a7abecd..4a697d6579 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -5,129 +5,129 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Mill lane-BUXTON)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco        | waypointdesc            | azimuth | direction | time  | distance | avoidance |
       | 4             | 53.1356,-1.820891 | Continue onto Mill Lane | 70.0    | E         | 23171 | 32.2     |           |
 
     Examples: 
-      | pointA              | pointB             | routetype | avoidance |
+      | pointA              | pointB             | routetype | avoidances |
       | 53.176062,-1.871472 | 53.154773,-1.77272 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Chatswoth Park)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.221055,-1.623152 | Turn right onto B Road        | 157.0   | SE        | 984273 | 1367.1   |           |
       | 5             | 53.197269,-1.608797 | Continue onto Chatsworth Road | 181.0   | S         | 678871 | 942.9    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.211013,-1.619393 | 53.185757,-1.611969 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Musden Low)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance | avoidance |
       | 3             | 53.042479,-1.820522 | Turn right onto Route | 297.0   | NW        | 35181 | 48.9     |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.049589,-1.823866 | 53.076372,-1.853379 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (A54)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc         | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.176842,-2.069334 | Turn left onto Track | 255.0   | W         | 187602 | 260.6    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.173064,-2.060321 | 53.214387,-2.017271 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Townhead )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance | avoidance |
       | 5             | 53.11862,-1.909506 | Turn slight left onto Route | 169.0   | S         | 51007 | 70.8     |           |
 
     Examples: 
-      | pointA              | pointB             | routetype | avoidance |
+      | pointA              | pointB             | routetype | avoidances |
       | 53.122676,-1.909914 | 53.088159,-1.87142 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Martin's Low)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance | avoidance |
       | 3             | 53.066198,-1.905401 | Turn right onto Track | 105.0   | E         | 38678 | 53.7     |           |
 
     Examples: 
-      | pointA             | pointB              | routetype | avoidance |
+      | pointA             | pointB              | routetype | avoidances |
       | 53.06535,-1.906169 | 53.100994,-1.956274 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Castleton Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.347406,-1.760973 | Turn left onto Castleton Road | 109.0   | E         | 878424 | 1220.0   | ARoad     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Hernstone Lane )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time   | distance | avoidance |
       | 3             | 53.305821,-1.814508 | Continue onto Hernstone Lane | 299.0   | NW        | 304923 | 423.5    | ARoad     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Monyash Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time   | distance | avoidance |
       | 5             | 53.20882,-1.688212 | Continue onto Monyash Road | 55.0    | NE        | 482979 | 670.8    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.194909,-1.710481 | 53.156696,-1.634947 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Whitfield lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.143286,-1.647841 | Turn right onto Elton Road | 282.0   | W         | 195384 | 271.4    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.142876,-1.642599 | 53.163897,-1.714249 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Cardlemere Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.129383,-1.754591 | Turn left onto Cardlemere Lane | 121.0   | SE        | 594909 | 826.3    |           |
 
     Examples: 
-      | pointA              | pointB             | routetype | avoidance |
+      | pointA              | pointB             | routetype | avoidances |
       | 53.114295,-1.762789 | 53.086961,-1.69626 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Old Coalpit Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.23952,-1.803512  | Turn left onto Sough Lane       | 189.0   | S         | 452948 | 629.1    |           |
@@ -135,24 +135,24 @@ Feature: Verify a route from A to B
       | 34            | 53.129146,-1.866738 | Turn left onto Cheadle Road     | 179.0   | S         | 171195 | 237.8    |           |
 
     Examples: 
-      | pointA              | pointB            | pointC              | routetype | avoidance |
+      | pointA              | pointB            | pointC              | routetype | avoidances |
       | 53.238625,-1.794511 | 53.1651,-1.776435 | 53.125221,-1.871205 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Newhouses Farm)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time    | distance | avoidance |
       | 7             | 53.305394,-1.819253 | Turn slight right onto Hernstone Lane | 66.0    | NE        | 304923  | 423.5    | ARoad     |
       | 14            | 53.25475,-1.727239  | Continue onto Castlegate Lane         | 183.0   | S         | 1156073 | 1605.7   |           |
 
     Examples: 
-      | pointA              | pointB             | pointC              | routetype | avoidance |
+      | pointA              | pointB             | pointC              | routetype | avoidances |
       | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Bakewell)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time    | distance | avoidance |
       | 6             | 53.145466,-1.778242 | Continue onto Tissington Trail | 17.0    | N         | 2006616 | 2787.0   |           |
@@ -160,12 +160,12 @@ Feature: Verify a route from A to B
       | 19            | 53.20882,-1.688212  | Continue onto Monyash Road     | 55.0    | NE        | 369935  | 513.8    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC              | routetype | avoidance |
+      | pointA              | pointB              | pointC              | routetype | avoidances |
       | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Mill Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
       | 5             | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |           |
@@ -173,12 +173,12 @@ Feature: Verify a route from A to B
       | 16            | 53.181282,-1.869038 | Turn left onto Market Place     | 315.0   | NW        | 791    | 1.1      |           |
 
     Examples: 
-      | pointA              | pointB              | pointC             | pointD              | routetype | avoidance |
+      | pointA              | pointB              | pointC             | pointD              | routetype | avoidances |
       | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Tag Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time    | distance | avoidance |
       | 7             | 53.227765,-1.848174 | Turn left onto Old Coalpit Lane | 58.0    | NE        | 908755  | 1262.2   | ARoad     |
@@ -187,12 +187,12 @@ Feature: Verify a route from A to B
       | 32            | 53.224822,-1.70717  | Turn left onto Hall End Lane    | 59.0    | NE        | 80272   | 111.5    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC              | pointD              | routetype | avoidance |
+      | pointA              | pointB              | pointC              | pointD              | routetype | avoidances |
       | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Dowlow Farm)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>" via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.206014,-1.83483  | Turn right onto Midshires Way | 191.0   | S         | 265210 | 368.3    |           |
@@ -200,59 +200,59 @@ Feature: Verify a route from A to B
       | 28            | 53.124725,-1.870683 | Turn right onto Cheadle Road  | 243.0   | SW        | 121072 | 168.2    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC              | pointD             | routetype | avoidance |
+      | pointA              | pointB              | pointC              | pointD             | routetype | avoidances |
       | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 | foot      |           |
 
   # Avoidances : A Road,Boulders,Cliff,Inland Water,Marsh,Quarry Or Pit,Scree,Rock,Mud,Sand,Shingle
   #scree
   @Routing
   Scenario Outline: Verify DPN Route without Scree avoidance -(scree)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance | avoidance |
       | 15            | 53.252061,-1.826618 | Continue onto Path | 97.0    | E         | 24386 | 33.9     | Scree     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      |           |
 
   @Routing
   Scenario Outline: Verify DPN Route with Scree avoidance -(scree)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance | avoidance |
       | 15            | 53.252061,-1.826618 | Continue onto Path | 97.0    | E         | 24386 | 33.9     | Scree     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      | Scree     |
 
   #cliff
   @Routing
   Scenario Outline: Verify DPN Route without cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    | Cliff     |
 
     Examples: 
-      | pointA             | pointB              | routetype | avoidance |
+      | pointA             | pointB              | routetype | avoidances |
       | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      |           |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    | Cliff     |
 
     Examples: 
-      | pointA             | pointB              | routetype | avoidance |
+      | pointA             | pointB              | routetype | avoidances |
       | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      | Cliff     |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
       | 3             | 53.547029,-1.979038 | Continue onto Route | 191.0   | S         | 3920 | 5.4      | Cliff     |
@@ -260,12 +260,12 @@ Feature: Verify a route from A to B
       | 7             | 53.542735,-1.981237 | Continue onto Route | 185.0   | S         | 9321 | 12.9     | Cliff     |
 
     Examples: 
-      | pointA            | pointB              | routetype | avoidance |
+      | pointA            | pointB              | routetype | avoidances |
       | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      |           |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
       | 3             | 53.547029,-1.979038 | Continue onto Route | 191.0   | S         | 3920 | 5.4      | Cliff     |
@@ -273,56 +273,56 @@ Feature: Verify a route from A to B
       | 7             | 53.542735,-1.981237 | Continue onto Route | 185.0   | S         | 9321 | 12.9     | Cliff     |
 
     Examples: 
-      | pointA            | pointB              | routetype | avoidance |
+      | pointA            | pointB              | routetype | avoidances |
       | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      | Cliff     |
 
   #boulders
   @Routing
   Scenario Outline: Verify DPN Route without boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
       | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    | Boulders  |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      |           |
 
   @Routing
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
       | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    | Boulders  |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      | Boulders  |
       
       
       
       
   #Multiple Avoidance
-  @Routing @Avoidance
+  @Routing  @Avoidance
   Scenario Outline: Verify DPN Route without boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
       | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0    | E         | 1660 | 2.3    | Cliff  |
       | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0    | SE         | 178328 |247.7    | Boulders  |
  
  Examples: 
-      | pointA              | pointB              | routetype | avoidance |
+      | pointA              | pointB              | routetype | avoidances |
       | 53.5534,-1.983177|53.490733,-1.977715 | foot      |           |
 
   @Routing @Avoidance
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
       | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0    | E         | 1660 | 2.3    | Cliff  |
       | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0    | SE         | 178328 |247.7    | Boulders  |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidance |
-      | 53.5534,-1.983177|53.490733,-1.977715 | foot      | Boulders,Cliff  |
+      | pointA              | pointB              | routetype | avoidances |
+      | 53.5534,-1.983177|53.490733,-1.977715 | foot,fastavoid      | Boulders,Cliff  |
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
index c8ec86b398..bd958b86c8 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
@@ -6,401 +6,401 @@ Feature: Verify a route from A to B
   # One Way Restrictions
   @Routing
   Scenario Outline: Verify  one Way  Restrictions  on a Route (EX-Bridge South - Exteter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time  | distance |
-      | 2             | 50.719156,-3.537811 | Continue onto A3015 (FROG STREET) | 41.0    | NE        | 13259 | 221.8    |
+      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.719156,-3.537811 | Continue onto A3015 (FROG STREET) | 41.0    | NE        | 13259 | 221.8    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.717615,-3.536538 | 50.719106,-3.535359 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.717615,-3.536538 | 50.719106,-3.535359 | car       ||
 
   # Same route but different waypointdesc
   @Routing
   Scenario Outline: Verify  one Way  Restrictions on a Route (Cleveladn Street-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time | distance |
-      | 2             | 50.717806,-3.54264 | Turn left onto BULLER ROAD | 137.0   | SE        | 4467 | 55.8     |
+      | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time | distance |avoidance|
+      | 2             | 50.717806,-3.54264 | Turn left onto BULLER ROAD | 137.0   | SE        | 4467 | 55.8     ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.717951,-3.542331 | 50.718613,-3.539589 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.717951,-3.542331 | 50.718613,-3.539589 | car       ||
 
   @Routing
   Scenario Outline: Verify  one Way  Restrictions on a Route (Cleveladn Street-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance |
-      | 4             | 50.718462,-3.541302 | Turn left onto CLEVELAND STREET | 232.0   | SW        | 9534 | 119.2    |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance |avoidance|
+      | 4             | 50.718462,-3.541302 | Turn left onto CLEVELAND STREET | 232.0   | SW        | 9534 | 119.2    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.718282,-3.538437 | 50.717687,-3.541511 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.718282,-3.538437 | 50.717687,-3.541511 | car       ||
 
   @Routing
   Scenario Outline: Verify  one Way  Restrictions (Except Buses) on a Route (SIDWELL STREET-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time | distance |
-      | 4             | 50.726689,-3.52712 | Turn left onto LONGBROOK STREET | 190.0   | S         | 6267 | 78.3     |
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time | distance |avoidance|
+      | 4             | 50.726689,-3.52712 | Turn left onto LONGBROOK STREET | 190.0   | S         | 6267 | 78.3     ||
 
     Examples: 
-      | pointA              | pointB               | routetype |
-      | 50.727949,-3.523498 | 50.726428,-3.5251291 | car       |
+      | pointA              | pointB               | routeOptions |avoidances|
+      | 50.727949,-3.523498 | 50.726428,-3.5251291 | car       ||
 
   @Routing
   Scenario Outline: Verify  oneway Restrictions on a Route (Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco       |
       | 50.71958,-3.534089 |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.720492,-3.535221 | 50.718641,-3.53476 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.720492,-3.535221 | 50.718641,-3.53476 | car       ||
 
   @KnownIssues
   Scenario Outline: Verify  one Way  Restrictions  on a Route (Exeter WSPIP-98)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |
-      | 7             | 50.722198,-3.526704 | Turn left onto SOUTHERNHAY EAST | 32      | NE        | 5838 | 56.761   |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |avoidance|
+      | 7             | 50.722198,-3.526704 | Turn left onto SOUTHERNHAY EAST | 32      | NE        | 5838 | 56.761   ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.720454,-3.530089 | 50.722657,-3.526321 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.720454,-3.530089 | 50.722657,-3.526321 | car       ||
 
   # No Entry Restrictions
   @Routing
   Scenario Outline: Verify  No Entry  Restrictions on a Route (High Street(London Inn Square)-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                                 | azimuth | direction | time  | distance |
-      | 2             | 50.725549,-3.52693 | Turn slight left onto NEW NORTH ROAD (B3183) | 285.0   | W         | 57545 | 729.1    |
+      | wayPointIndex | waypointco         | waypointdesc                                 | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.725549,-3.52693 | Turn slight left onto NEW NORTH ROAD (B3183) | 285.0   | W         | 57545 | 729.1    ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.725425,-3.526925 | 50.72442,-3.532756 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.725425,-3.526925 | 50.72442,-3.532756 | car       ||
 
   @Routing
   Scenario Outline: Verify  No Entry  Restrictions on a Route (CHEEK STREET-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time | distance |
-      | 2             | 50.727244,-3.522476 | Turn left onto SUMMERLAND STREET | 313.0   | NW        | 5223 | 65.3     |
+      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time | distance |avoidance|
+      | 2             | 50.727244,-3.522476 | Turn left onto SUMMERLAND STREET | 313.0   | NW        | 5223 | 65.3     ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.726234,-3.524072 | 50.727186,-3.52392 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.726234,-3.524072 | 50.727186,-3.52392 | car       ||
 
   @Routing
   Scenario Outline: Verify  No Entry(Except for Buses and Taxis)  Restrictions on a Route (Sidwell Street-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance |
-      | 4             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    |
+      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance |avoidance|
+      | 4             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.726529,-3.524928 | 50.727002,-3.52419 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.726529,-3.524928 | 50.727002,-3.52419 | car       ||
 
   # No Turns Restrictions and Roundabout
   @Routing
   Scenario Outline: Verify  No Turn  Restrictions on a Route (Western Way-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance |
-      | 2             | 50.728509,-3.520647 | At roundabout, take exit 1 onto SIDWELL STREET | 282.0   | W         | 16437 | 212.5    |
+      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.728509,-3.520647 | At roundabout, take exit 1 onto SIDWELL STREET | 282.0   | W         | 16437 | 212.5    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.726735,-3.520955 | 50.726914,-3.522033 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.726735,-3.520955 | 50.726914,-3.522033 | car       ||
 
   @Routing
   Scenario Outline: Verify  No Turn Restriction (Denmark Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance |
-      | 3             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    |
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance |avoidance|
+      | 3             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.724901,-3.521588 | 50.724524,-3.520923 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.724901,-3.521588 | 50.724524,-3.520923 | car       ||
 
   @Routing
   Scenario Outline: Verify  Turn Restrictions  on a Route (Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco        |
       | 50.721201,-3.532498 |
 
     Examples: 
-      | pointA             | pointB             | routetype |
-      | 50.72148,-3.532485 | 50.721888,-3.53182 | car       |
+      | pointA             | pointB             | routeOptions |avoidances|
+      | 50.72148,-3.532485 | 50.721888,-3.53182 | car       ||
       
 # The below issue is a data issue and been reported into jira as route-67
   @KnownIssues
   Scenario Outline: Verify No  Turn Restrictions(Except Bus)  on a Route (BELGROVE ROAD -Exeter ROUTE-67)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                 | azimuth | direction | time | distance |
-      | 2             | 50.725997,-3.52296 | Turn left onto CHEEKE STREET | 135     | SE        | 5639 | 56.915   |
+      | wayPointIndex | waypointco         | waypointdesc                 | azimuth | direction | time | distance |avoidance|
+      | 2             | 50.725997,-3.52296 | Turn left onto CHEEKE STREET | 135     | SE        | 5639 | 56.915   ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.726085,-3.522837 | 50.725076,-3.52442 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.726085,-3.522837 | 50.725076,-3.52442 | car       ||
 
   # Mandatory Turn Restrictions
   @Routing
   Scenario Outline: Verify  Mandatory Turn(with exceptions) at Exeter area
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance |
-      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 133.0   | SE        | 564  | 7.1      |
+      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance |avoidance|
+      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 133.0   | SE        | 564  | 7.1      ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.726823,-3.524432 | 50.725423,-3.526813 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.726823,-3.524432 | 50.725423,-3.526813 | car       ||
 
   @Routing
   Scenario Outline: Verify  Mandatory Turn at Exeter area(DENMARK ROAD)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance |
-      | 2             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    |
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 303.0   | NW        | 19909 | 248.9    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.724777,-3.520811 | 50.724394,-3.520953 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.724777,-3.520811 | 50.724394,-3.520953 | car       ||
 
   @Routing @KnownIssues
   Scenario Outline: Verify  Mandatory Turn at Exeter area(COLLEGE ROAD)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance |
-      | 2             | 50.72133,-3.519451 | Turn right onto SPICER ROAD | 278     | W         | 41233 | 400.903  |
+      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.72133,-3.519451 | Turn right onto SPICER ROAD | 278     | W         | 41233 | 400.903  ||
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 50.723597,-3.51776 | 50.723773,-3.517251 | car       |
+      | pointA             | pointB              | routeOptions |avoidances|
+      | 50.723597,-3.51776 | 50.723773,-3.517251 | car       ||
 
   @Routing
   Scenario Outline: Verify  Mandatory Turn Restriction (Denmark Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time | distance |
-      | 2             | 50.724703,-3.520835 | Turn right onto HEAVITREE ROAD (B3183) | 293.0   | NW        | 1118 | 10.9     |
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time | distance |avoidance|
+      | 2             | 50.724703,-3.520835 | Turn right onto HEAVITREE ROAD (B3183) | 293.0   | NW        | 1118 | 10.9     ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.724378,-3.520993 | 50.72413,-3.518874 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.724378,-3.520993 | 50.72413,-3.518874 | car       ||
 
   # Access Limited To
   @Routing
   Scenario Outline: Verify  Access Limited To  Restrictions on a Route (North Street-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco       | waypointdesc               | azimuth | direction | time  | distance |
-      | 2             | 50.72258,-3.5326 | Continue onto SOUTH STREET | 135.0   | SE        | 15537 | 194.2    |
+      | wayPointIndex | waypointco       | waypointdesc               | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.72258,-3.5326 | Continue onto SOUTH STREET | 135.0   | SE        | 15537 | 194.2    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.722996,-3.533354 | 50.726428,-3.525129 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.722996,-3.533354 | 50.726428,-3.525129 | car       ||
 
   @Routing
   Scenario Outline: Verify  Access Limited To  Restrictions on a Route (Paris Street-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance |
-      | 5             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    |
+      | wayPointIndex | waypointco         | waypointdesc                           | azimuth | direction | time  | distance |avoidance|
+      | 5             | 50.726418,-3.52381 | Turn slight left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.724989,-3.526006 | 50.729735,-3.519862 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.724989,-3.526006 | 50.729735,-3.519862 | car       ||
 
   # Access Prohibited To
   @Routing
   Scenario Outline: Verify  Access Prohibited To  Restrictions on a Route (Iron Bridge Street-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                   | azimuth | direction | time  | distance |
-      | 2             | 50.724661,-3.53639 | Turn left onto ST DAVID'S HILL | 310.0   | NW        | 35154 | 439.4    |
+      | wayPointIndex | waypointco         | waypointdesc                   | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.724661,-3.53639 | Turn left onto ST DAVID'S HILL | 310.0   | NW        | 35154 | 439.4    ||
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 50.72458,-3.536493 | 50.723442,-3.534131 | car       |
+      | pointA             | pointB              | routeOptions |avoidances|
+      | 50.72458,-3.536493 | 50.723442,-3.534131 | car       ||
 
   @Routing @KnownIssues
   Scenario Outline: Verify  Access Prohibited To  Restrictions on a Route (Upper Paul Street-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time  | distance |
-      | 2             | 50.724819,-3.532223 | Turn left onto QUEEN STREET | 324.0   | NW        | 37994 | 369.4    |
+      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.724819,-3.532223 | Turn left onto QUEEN STREET | 324.0   | NW        | 37994 | 369.4    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.724614,-3.532555 | 50.724639,-3.530457 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.724614,-3.532555 | 50.724639,-3.530457 | car       ||
 
   # Ford
   @Routing
   Scenario Outline: Verify  Ford  Restrictions on a Route (BONHAY Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance |
-      | 4             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 12281 | 153.5    |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance |avoidance|
+      | 4             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 12281 | 153.5    ||
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 50.731111,-3.54277 | 50.719327,-3.538255 | car       |
+      | pointA             | pointB              | routeOptions |avoidances|
+      | 50.731111,-3.54277 | 50.719327,-3.538255 | car       ||
 
   @Routing
   Scenario Outline: Verify  Ford  Restrictions on a Route (Quadrangle Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance |
-      | 2             | 50.730716,-3.530028 | Turn left onto HORSEGUARDS | 189.0   | S         | 21893 | 273.7    |
+      | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.730716,-3.530028 | Turn left onto HORSEGUARDS | 189.0   | S         | 21893 | 273.7    ||
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 50.730861,-3.52934 | 50.731808,-3.529829 | car       |
+      | pointA             | pointB              | routeOptions |avoidances|
+      | 50.730861,-3.52934 | 50.731808,-3.529829 | car       ||
 
   # Gate
   @Routing
   Scenario Outline: Verify  Gate  Restrictions on a Route (Cathedral Close Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time  | distance |
-      | 3             | 50.722198,-3.526704 | Turn right onto SOUTHERNHAY EAST | 202.0   | SW        | 20129 | 255.9    |
+      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time  | distance |avoidance|
+      | 3             | 50.722198,-3.526704 | Turn right onto SOUTHERNHAY EAST | 202.0   | SW        | 20129 | 255.9    ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.722333,-3.527488 | 50.72243,-3.532372 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.722333,-3.527488 | 50.72243,-3.532372 | car       ||
 
   @Routing
   Scenario Outline: Verify  Gate  Restrictions on a Route (Lower Northen Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance |
-      | 2             | 50.722081,-3.539012 | Turn left onto A377 | 166.0   | S         | 29003 | 395.5    |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.722081,-3.539012 | Turn left onto A377 | 166.0   | S         | 29003 | 395.5    ||
 
     Examples: 
-      | pointA            | pointB              | routetype |
-      | 50.7244,-3.535817 | 50.723705,-3.534493 | car       |
+      | pointA            | pointB              | routeOptions |avoidances|
+      | 50.7244,-3.535817 | 50.723705,-3.534493 | car       ||
 
   #Private Road
   @Routing
   Scenario Outline: Verify  a Private Road (Publicly Accessible) on a Route  (PERRY ROAD)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance |
-      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 2.0     | N         | 13195 | 166.8    |
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 2.0     | N         | 13195 | 166.8    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.732296,-3.535372 | 50.733538,-3.537462 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.732296,-3.535372 | 50.733538,-3.537462 | car       ||
 
   #Roundabout
   @Routing
   Scenario Outline: Verify a  Private Road (Publicly Accessible) on a Route (QUEEN STREET)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                           | azimuth | direction | time  | distance |
-      | 2             | 50.727397,-3.535531 | At roundabout, take exit 3 onto NEW NORTH ROAD (B3183) | 295.0   | NW        | 14023 | 181.3    |
+      | wayPointIndex | waypointco          | waypointdesc                                           | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.727397,-3.535531 | At roundabout, take exit 3 onto NEW NORTH ROAD (B3183) | 295.0   | NW        | 14023 | 181.3    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.727003,-3.535041 | 50.727023,-3.533083 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.727003,-3.535041 | 50.727023,-3.533083 | car       ||
 
   @Routing
   Scenario Outline: Verify a PrivateRoad -Restricted Access(WESTERN WAY)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance |
-      | 1             | 50.72593,-3.521909 | Continue onto B3212 (WESTERN WAY) | 38.0    | NE        | 3099 | 38.7     |
+      | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance |avoidance|
+      | 1             | 50.72593,-3.521909 | Continue onto B3212 (WESTERN WAY) | 38.0    | NE        | 3099 | 38.7     ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.725876,-3.521801 | 50.72619,-3.521541 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.725876,-3.521801 | 50.72619,-3.521541 | car       ||
 
   @Routing
   Scenario Outline: Verify a Private Road - Restricted Access (Denmark Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco      |
       | 50.723966,-3.5198 |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.724316,-3.521008 | 50.72413,-3.518874 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.724316,-3.521008 | 50.72413,-3.518874 | car       ||
 
   #Roundabouts
   @Routing
   Scenario Outline: Verify a roundabout(WESTERN WAY)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance |
-      | 2             | 50.728793,-3.520273 | At roundabout, take exit 2 onto SIDWELL STREET | 178.0   | S         | 19800 | 259.2    |
+      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.728793,-3.520273 | At roundabout, take exit 2 onto SIDWELL STREET | 178.0   | S         | 19800 | 259.2    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.729277,-3.519078 | 50.728889,-3.522884 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.729277,-3.519078 | 50.728889,-3.522884 | car       ||
 
   @Routing
   Scenario Outline: Verify a roundabout(WESTERN WAY)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                        | azimuth | direction | time  | distance |
-      | 2             | 50.725096,-3.522378 | At roundabout, take exit 4 onto B3212 (WESTERN WAY) | 239.0   | SW        | 19384 | 255.8    |
+      | wayPointIndex | waypointco          | waypointdesc                                        | azimuth | direction | time  | distance |avoidance|
+      | 2             | 50.725096,-3.522378 | At roundabout, take exit 4 onto B3212 (WESTERN WAY) | 239.0   | SW        | 19384 | 255.8    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.724137,-3.518937 | 50.728366,-3.524132 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.724137,-3.518937 | 50.728366,-3.524132 | car       ||
       
      # Quickest route
   # Motorways (Victoria Street, Union Road ,Blackhall Road ,Well Street ,Devon Shire Place, Culverland Road).These roads are converted into motorways in Exeter
       
       @Routing
   Scenario Outline: Verify  a quickest route  on a Route (Springfield Road-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |avoidance|
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    ||
 
     Examples: 
-      | pointA             | pointB            | routetype |
-      | 50.733719,-3.52332 | 50.732556,-3.5211 | car       |
+      | pointA             | pointB            | routeOptions |avoidances|
+      | 50.733719,-3.52332 | 50.732556,-3.5211 | car       ||
 
   @Routing
   Scenario Outline: Verify  a quickest route  on a Route (DEVON SHIRE PLACE-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance |
-      | 3             | 50.733574,-3.524027 | Turn right onto DEVON SHIRE PLACE | 162.0   | S         | 8490 | 235.9    |
+      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance |avoidance|
+      | 3             | 50.733574,-3.524027 | Turn right onto DEVON SHIRE PLACE | 162.0   | S         | 8490 | 235.9    ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.734095,-3.524696 | 50.72809,-3.524451 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.734095,-3.524696 | 50.72809,-3.524451 | car       ||
 
   @Routing
   Scenario Outline: Verify  a quickest route  on a Route (BLACKALL ROAD-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                | azimuth | direction | time  | distance |
-      | 3             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 22108 | 276.4    |
+      | wayPointIndex | waypointco          | waypointdesc                                | azimuth | direction | time  | distance |avoidance|
+      | 3             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 22108 | 276.4    ||
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.729887,-3.526896 | 50.726279,-3.52780 | car       |
+      | pointA              | pointB             | routeOptions |avoidances|
+      | 50.729887,-3.526896 | 50.726279,-3.52780 | car       ||
 
   @Routing
   Scenario Outline: Verify  a quickest route  on a Route (VICTORIA STREET-Exeter)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance |avoidance|
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    ||
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.733648,-3.523662 | 50.732844,-3.521332 | car       |
+      | pointA              | pointB              | routeOptions |avoidances|
+      | 50.733648,-3.523662 | 50.732844,-3.521332 | car       ||
       
diff --git a/acceptancetesting/src/test/cucumber/routing.feature b/acceptancetesting/src/test/cucumber/routing.feature
index 4d33db4a9d..0d3ee19df9 100644
--- a/acceptancetesting/src/test/cucumber/routing.feature
+++ b/acceptancetesting/src/test/cucumber/routing.feature
@@ -5,80 +5,81 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  waypoints on a Route
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+ 
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time | distance |
-      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD | 286.0   | W         | 8390 | 104.9    |
+      | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time | distance | avoidance |
+      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD | 286.0   | W         | 8390 | 104.9    |           |
 
     Examples: 
-      | pointA                                 | pointB                                 | routetype |
-      | 51.471546541834144,-0.3618621826171875 | 51.45914115860512,-0.96679687499999995 | car       |
+      | pointA                                 | pointB                                 | routeOptions | avoidances |
+      | 51.471546541834144,-0.3618621826171875 | 51.45914115860512,-0.96679687499999995 | car          |            |
 
   @Routing
   Scenario Outline: Verify  waypoints on a Route from Hounslow to Reading
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time  | distance |
-      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD           | 286.0   | W         | 8390  | 104.9    |
-      | 9             | 51.435626,-0.866024 | Continue onto A329(M)                  | 301.0   | NW        | 72994 | 2027.7   |
-      | 16            | 51.453903,-0.961826 | Continue onto WATLINGTON STREET (A329) | 341.0   | N         | 8584  | 132.7    |
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time  | distance | avoidance |
+      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD           | 286.0   | W         | 8390  | 104.9    |           |
+      | 9             | 51.435626,-0.866024 | Continue onto A329(M)                  | 301.0   | NW        | 72994 | 2027.7   |           |
+      | 16            | 51.453903,-0.961826 | Continue onto WATLINGTON STREET (A329) | 341.0   | N         | 8584  | 132.7    |           |
 
     Examples: 
-      | pointA                                 | pointB                                 | routetype |
-      | 51.471546541834144,-0.3618621826171875 | 51.45914115860512,-0.96679687499999995 | car       |
+      | pointA                                 | pointB                                 | routeOptions | avoidances |
+      | 51.471546541834144,-0.3618621826171875 | 51.45914115860512,-0.96679687499999995 | car          |            |
 
   @Routing
   Scenario Outline: Verify  waypoints on a Route from Southampton to Glasgow
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                             | azimuth | direction | time    | distance |
-      | 1             | 50.896796,-1.400544 | Continue onto PLATFORM ROAD (A33)                        | 254.0   | W         | 3192    | 84.3     |
-      | 16            | 50.951921,-1.404239 | At roundabout, take exit 1 onto A33                      | 318.0   | NW        | 7083    | 187.0    |
-      | 17            | 50.953446,-1.403571 | Turn slight right onto M3                                | 28.0    | NE        | 566900  | 15747.6  |
-      | 18            | 51.07086,-1.292917  | At roundabout, take exit 2 onto A34 (WINCHESTER BY-PASS) | 284.0   | NE        | 55129   | 1454.8   |
-      | 20            | 51.868385,-1.199845 | At roundabout, take exit 1 onto M40                      | 357.0   | N         | 2636747 | 73242.2  |
-      | 24            | 52.381175,-1.790061 | At roundabout, take exit 1 onto A34 (STRATFORD ROAD)     | 301.0   | NW        | 46514   | 1227.5   |
+      | wayPointIndex | waypointco          | waypointdesc                                             | azimuth | direction | time    | distance | avoidance |
+      | 1             | 50.896796,-1.400544 | Continue onto PLATFORM ROAD (A33)                        | 254.0   | W         | 3192    | 84.3     |           |
+      | 16            | 50.951921,-1.404239 | At roundabout, take exit 1 onto A33                      | 318.0   | NW        | 7083    | 187.0    |           |
+      | 17            | 50.953446,-1.403571 | Turn slight right onto M3                                | 28.0    | NE        | 566900  | 15747.6  |           |
+      | 18            | 51.07086,-1.292917  | At roundabout, take exit 2 onto A34 (WINCHESTER BY-PASS) | 284.0   | NE        | 55129   | 1454.8   |           |
+      | 20            | 51.868385,-1.199845 | At roundabout, take exit 1 onto M40                      | 357.0   | N         | 2636747 | 73242.2  |           |
+      | 24            | 52.381175,-1.790061 | At roundabout, take exit 1 onto A34 (STRATFORD ROAD)     | 301.0   | NW        | 46514   | 1227.5   |           |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.896617,-1.400465 | 55.861284,-4.24996 | car       |
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.896617,-1.400465 | 55.861284,-4.24996 | car          |            |
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  waypoints on a Route from London to Birmingham
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                       | azimuth | direction | time  | distance |
-      | 1             | 51.507234,-0.127584 | At roundabout, take exit 2 onto CHARING CROSS (A4) | 253.0   | W         | 4202  | 111.0    |
-      | 7             | 51.517207,-0.142804 | Turn slight left onto A4201                        | 307.0   | NW        | 1628  | 43.0     |
-      | 21            | 51.577774,-0.220823 | Continue onto A41 (HENDON WAY)                     | 301.0   | NW        | 28342 | 748.0    |
-      | 22            | 51.582726,-0.227154 | Continue onto A41 (WATFORD WAY)                    | 340.0   | N         | 88373 | 2332.3   |
-      | 23            | 51.601209,-0.234509 | Continue onto A1 (WATFORD WAY (BARNET BY-PASS))    | 325.0   | NW        | 72410 | 1911.0   |
+      | wayPointIndex | waypointco          | waypointdesc                                       | azimuth | direction | time  | distance | avoidance |
+      | 1             | 51.507234,-0.127584 | At roundabout, take exit 2 onto CHARING CROSS (A4) | 253.0   | W         | 4202  | 111.0    |           |
+      | 7             | 51.517207,-0.142804 | Turn slight left onto A4201                        | 307.0   | NW        | 1628  | 43.0     |           |
+      | 21            | 51.577774,-0.220823 | Continue onto A41 (HENDON WAY)                     | 301.0   | NW        | 28342 | 748.0    |           |
+      | 22            | 51.582726,-0.227154 | Continue onto A41 (WATFORD WAY)                    | 340.0   | N         | 88373 | 2332.3   |           |
+      | 23            | 51.601209,-0.234509 | Continue onto A1 (WATFORD WAY (BARNET BY-PASS))    | 325.0   | NW        | 72410 | 1911.0   |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 51.507229,-0.127581 | 52.481875,-1.898743 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 51.507229,-0.127581 | 52.481875,-1.898743 | car          |            |
 
-  @Routing
+@Routing
   Scenario Outline: Verify  waypoints on a Route from London to Birmingham and the total route time estimate
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then The total route time should be not more than "<totalRouteTime>"
 
     Examples: 
-      | pointA              | pointB              | routetype | totalRouteTime |
-      | 51.507229,-0.127581 | 52.481875,-1.898743 | car       | 03h00min       |
+      | pointA              | pointB              | routeOptions | avoidances | totalRouteTime |
+      | 51.507229,-0.127581 | 52.481875,-1.898743 | car          |            | 03h00min       |
 
   @Routing
   Scenario Outline: Verify  waypoints on a Route from Hounslow to Burnham and the total route time estimate
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then The total route time should be not more than "<totalRouteTime>"
 
     Examples: 
-      | pointA             | pointB              | routetype | totalRouteTime |
-      | 51.475161,-0.39591 | 51.536292,-0.656802 | car       | 0h30min        |
+      | pointA             | pointB              | routeOptions | avoidances | totalRouteTime |
+      | 51.475161,-0.39591 | 51.536292,-0.656802 | car          |            | 0h30min        |
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  waypoints on a Route from Southampton to Glasgow
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints on the route map:
       | trackPointco        |
       | 52.52355,-1.902136  |
@@ -87,215 +88,215 @@ Feature: Verify a route from A to B
       | 55.802602,-4.053713 |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.896617,-1.400465 | 55.861284,-4.24996 | car       |
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.896617,-1.400465 | 55.861284,-4.24996 | car          |            |
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  oneway Restrictions on a Route (Burmingham Route with one way restriction-WSPIP-74)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco        | time                      |
       | 52.446899,-1.929721 | 2014-10-31T19:17:22+00:00 |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 52.446823,-1.929077 | 52.446604,-1.930043 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 52.446823,-1.929077 | 52.446604,-1.930043 | car          |            |
 
-  @Routing
+  @KnownIssues @Routing 
   Scenario Outline: Verify  No Turn Restrictions  on a Route (Birmingham WSPIP-77)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco        |
       | 52.446779,-1.929385 |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 52.446564,-1.930268 | 52.446744,-1.929469 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 52.446564,-1.930268 | 52.446744,-1.929469 | car          |            |
 
   @KnownIssues
   Scenario Outline: Verify  No Turn Restrictions  on a Route (Birmingham Bristol Road WSPIP-83)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco        |
       | 52.446764,-1.929391 |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 52.446823,-1.929077 | 52.446672,-1.929691 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 52.446823,-1.929077 | 52.446672,-1.929691 | car          |            |
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  under pass still finds route  from top road (Southampton- Charle WattsWay)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints on the route map:
       | trackPointco        |
       | 50.917268,-1.316368 |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.917598,-1.317992 | 50.919748,-1.310342 | car       |
-
-  @Routing
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.917598,-1.317992 | 50.919748,-1.310342 | car          |            |
+ 
+  @Routing 
   Scenario Outline: Verify  under pass still finds route from bottom road  (Southampton- Charle WattsWay)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints on the route map:
       | trackPointco        |
       | 50.919194,-1.316553 |
 
     Examples: 
-      | pointA             | pointB             | routetype |
-      | 50.91525,-1.318761 | 50.92045,-1.316021 | car       |
+      | pointA             | pointB             | routeOptions | avoidances |
+      | 50.91525,-1.318761 | 50.92045,-1.316021 | car          |            |
 
   @Routing
   Scenario Outline: Verify  No Turn   (WSPIP-76:Eastley- TWYFORD ROAD )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance |
-      | 3             | 50.971952,-1.350891 | Turn left onto THE CRESCENT | 294.0   | NW        | 2981 | 37.3     |
+      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
+      | 3             | 50.971952,-1.350891 | Turn left onto THE CRESCENT | 294.0   | NW        | 2981 | 37.3     |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.972281,-1.350942 | 50.972212,-1.351183 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.972281,-1.350942 | 50.972212,-1.351183 | car          |            |
 
   @Routing
   Scenario Outline: Verify  No Turn   (WSPIP-76:Eastley- Station Hill Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance |
-      | 2             | 50.969817,-1.350504 | Continue onto STATION HILL (A335) | 180.0   | S         | 4583 | 57.3     |
+      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.969817,-1.350504 | Continue onto STATION HILL (A335) | 180.0   | S         | 4583 | 57.3     |           |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.970024,-1.350267 | 50.97008,-1.350521 | car       |
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.970024,-1.350267 | 50.97008,-1.350521 | car          |            |
 
   @Routing
   Scenario Outline: Verify  No Turn   (Treaty Center-Hounslow- Fairfields Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time  | distance |
-      | 2             | 51.468925,-0.359049 | Turn left onto HANWORTH ROAD (A315) | 239.0   | SW        | 17328 | 224.0    |
+      | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time  | distance | avoidance |
+      | 2             | 51.468925,-0.359049 | Turn left onto HANWORTH ROAD (A315) | 239.0   | SW        | 17328 | 224.0    |           |
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 51.46882,-0.358687 | 51.469454,-0.357831 | car       |
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 51.46882,-0.358687 | 51.469454,-0.357831 | car          |            |
 
   @KnownIssues
   Scenario Outline: Verify  No Turns with Exceptions(Vehicle Type:Bus)   (High Street-Hounslow)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco        |
       | 51.470009,-0.357019 |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 51.470198,-0.356036 | 51.470352,-0.357388 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 51.470198,-0.356036 | 51.470352,-0.357388 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Mandatory Turn   (Alexandra Road-Hounslow- Fairfields Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time | distance |
-      | 2             | 51.470846,-0.363527 | Turn right onto LANSDOWNE ROAD | 259.0   | W         | 9934 | 124.2    |
+      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time | distance | avoidance |
+      | 2             | 51.470846,-0.363527 | Turn right onto LANSDOWNE ROAD | 259.0   | W         | 9934 | 124.2    |           |
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 51.47118,-0.363609 | 51.470254,-0.363412 | car       |
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 51.47118,-0.363609 | 51.470254,-0.363412 | car          |            |
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  Private Road Restricted Access (Warwick Road-Carlisle)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco        |
       | 54.894721,-2.921665 |
 
     Examples: 
-      | pointA              | pointB            | routetype |
-      | 54.894427,-2.921111 | 54.8922,-2.928296 | car       |
+      | pointA              | pointB            | routeOptions | avoidances |
+      | 54.894427,-2.921111 | 54.8922,-2.928296 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Ford Gate at CRAMPOOR ROAD(ROMSEY-Southampton)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time  | distance |
-      | 2             | 50.993815,-1.461397 | Turn slight right onto HIGHWOOD LANE | 349.0   | N         | 41337 | 520.5    |
+      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.993815,-1.461397 | Turn slight right onto HIGHWOOD LANE | 349.0   | N         | 41337 | 520.5    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 50.995817,-1.454224 | 50.998501,-1.454504 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.995817,-1.454224 | 50.998501,-1.454504 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Ford Gate at CRAMPOOR ROAD(ROMSEY-Southampton)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                               | azimuth | direction | time  | distance |
-      | 3             | 50.782654,-1.060556 | Turn sharp left onto A288 (EASTERN PARADE) | 248.0   | W         | 56982 | 712.3    |
+      | wayPointIndex | waypointco          | waypointdesc                               | azimuth | direction | time  | distance | avoidance |
+      | 3             | 50.782654,-1.060556 | Turn sharp left onto A288 (EASTERN PARADE) | 248.0   | W         | 56982 | 712.3    |           |
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 50.78222,-1.059975 | 50.779123,-1.080019 | car       |
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.78222,-1.059975 | 50.779123,-1.080019 | car          |            |
 
   @Routing @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Southampton to London)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointdesc                                  |
       | 3             | At roundabout, take exit 2 onto BROWNHILL WAY |
       | 18            | Continue onto PICCADILLY (A4)                 |
 
     Examples: 
-      | pointA                                                            | pointB                                 | routetype |
-      | ORDNANCE SURVEY, 4, ADANAC DRIVE, NURSLING, SOUTHAMPTON, SO16 0AS | 1, PICCADILLY ARCADE, LONDON, SW1Y 6NH | car       |
+      | pointA                                                            | pointB                                 | routeOptions | avoidances |
+      | ORDNANCE SURVEY, 4, ADANAC DRIVE, NURSLING, SOUTHAMPTON, SO16 0AS | 1, PICCADILLY ARCADE, LONDON, SW1Y 6NH | car          |            |
 
   @Routing @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Hounslow to Slough)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointdesc                                   |
       | 9             | At roundabout, take exit 1 onto BATH ROAD (A4) |
       | 10            | Turn right onto HUNTERCOMBE LANE NORTH         |
 
     Examples: 
-      | pointA                              | pointB                                      | routetype |
-      | 131, TIVOLI ROAD, HOUNSLOW, TW4 6AS | 40, CHILTERN ROAD, BURNHAM, SLOUGH, SL1 7NH | car       |
+      | pointA                              | pointB                                      | routeOptions | avoidances |
+      | 131, TIVOLI ROAD, HOUNSLOW, TW4 6AS | 40, CHILTERN ROAD, BURNHAM, SLOUGH, SL1 7NH | car          |            |
 
   @Routing @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Southampton to London)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointdesc                            |
       | 2             | Turn sharp left onto A35 (TEBOURBA WAY) |
       | 20            | Turn slight left onto PALL MALL (A4)    |
 
     Examples: 
-      | pointA                                                     | pointB                                              | routetype |
-      | SOUTHAMPTON MEGABOWL, AUCKLAND ROAD, SOUTHAMPTON, SO15 0SD | CANARY WHARF LTD, 1, CANADA SQUARE, LONDON, E14 5AB | car       |
+      | pointA                                                     | pointB                                              | routeOptions | avoidances |
+      | SOUTHAMPTON MEGABOWL, AUCKLAND ROAD, SOUTHAMPTON, SO15 0SD | CANARY WHARF LTD, 1, CANADA SQUARE, LONDON, E14 5AB | car          |            |
 
   @Routing @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Birmingham to reading)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointdesc                                         |
       | 2             | Turn left onto MONTAGUE STREET                       |
       | 19            | At roundabout, take exit 2 onto A34 (STRATFORD ROAD) |
 
     Examples: 
-      | pointA                                                      | pointB                                                                                | routetype |
-      | BIRMINGHAM VOLKSWAGEN, LAWLEY MIDDLEWAY, BIRMINGHAM, B4 7XH | READING ENTERPRISE CENTRE, UNIVERSITY OF READING, WHITEKNIGHTS ROAD, READING, RG6 6BU | car       |
+      | pointA                                                      | pointB                                                                                | routeOptions | avoidances |
+      | BIRMINGHAM VOLKSWAGEN, LAWLEY MIDDLEWAY, BIRMINGHAM, B4 7XH | READING ENTERPRISE CENTRE, UNIVERSITY OF READING, WHITEKNIGHTS ROAD, READING, RG6 6BU | car          |            |
 
   @Routing @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Southhampton to London)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointdesc                        |
       | 3             | Continue onto ENDLE STREET          |
       | 21            | At roundabout, take exit 3 onto A30 |
 
     Examples: 
-      | pointA                                               | pointB                           | routetype |
-      | 6, CHANNEL WAY, OCEAN VILLAGE, SOUTHAMPTON, SO14 3TG | 311, CITY ROAD, LONDON, EC1V 1LA | car       |
+      | pointA                                               | pointB                           | routeOptions | avoidances |
+      | 6, CHANNEL WAY, OCEAN VILLAGE, SOUTHAMPTON, SO14 3TG | 311, CITY ROAD, LONDON, EC1V 1LA | car          |            |
 
   @Routing @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Coventry)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointdesc                         |
       | 3             | Turn right onto HOWES LANE (B4115)   |
@@ -303,143 +304,141 @@ Feature: Verify a route from A to B
       | 16            | Turn right onto PENNY PARK LANE      |
 
     Examples: 
-      | pointA                                                         | pointB                              | routetype |
-      | 3 BROMLEIGH VILLAS, COVENTRY ROAD, BAGINTON, COVENTRY, CV8 3AS | 2, PAXMEAD CLOSE, COVENTRY, CV6 2NJ | car       |
+      | pointA                                                         | pointB                              | routeOptions | avoidances |
+      | 3 BROMLEIGH VILLAS, COVENTRY ROAD, BAGINTON, COVENTRY, CV8 3AS | 2, PAXMEAD CLOSE, COVENTRY, CV6 2NJ | car          |            |
 
   @Routing @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Kington to London )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointdesc                                          |
       | 6             | Turn slight left onto HEADBROOK                       |
       | 16            | At roundabout, take exit 3 onto A49 (VICTORIA STREET) |
 
     Examples: 
-      | pointA                           | pointB                                | routetype |
-      | 5, OXFORD LANE, KINGTON, HR5 3ED | 64, TOWER MILL ROAD, LONDON, SE15 6BZ | car       |
+      | pointA                           | pointB                                | routeOptions | avoidances |
+      | 5, OXFORD LANE, KINGTON, HR5 3ED | 64, TOWER MILL ROAD, LONDON, SE15 6BZ | car          |            |
 
   @Routing
   Scenario Outline: Verify a Roundabout(Charles Watts Way)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                             | azimuth | direction | time  | distance |
-      | 3             | 50.920147,-1.310351 | At roundabout, take exit 2 onto CHARLES WATTS WAY (A334) | 0.0     | N         | 17647 | 465.7    |
+      | wayPointIndex | waypointco          | waypointdesc                                             | azimuth | direction | time  | distance | avoidance |
+      | 3             | 50.920147,-1.310351 | At roundabout, take exit 2 onto CHARLES WATTS WAY (A334) | 0.0     | N         | 17647 | 465.7    |           |
 
     Examples: 
-      | pointA             | pointB              | routetype |
-      | 50.915416,-1.31902 | 50.915551,-1.294049 | car       |
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.915416,-1.31902 | 50.915551,-1.294049 | car          |            |
 
   @Routing
   Scenario Outline: Verify a Roundabout(A30)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time  | distance |
-      | 3             | 50.726474,-3.727558 | Turn slight left onto A30 | 4.0     | N         | 11694 | 308.6    |
+      | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time  | distance | avoidance |
+      | 3             | 50.726474,-3.727558 | Turn slight left onto A30 | 4.0     | N         | 11694 | 308.6    |           |
 
     Examples: 
-      | pointA              | pointB             | routetype |
-      | 50.729071,-3.732732 | 50.72813,-3.730887 | car       |
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 50.729071,-3.732732 | 50.72813,-3.730887 | car          |            |
 
   @Routing
   Scenario Outline: Verify a Roundabout(The City Of Edinburgh By-pass)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time  | distance |
-      | 3             | 55.913915,-3.065976 | At roundabout, take exit 1 onto A720 | 199.0   | S         | 49235 | 1299.3   |
+      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time  | distance | avoidance |
+      | 3             | 55.913915,-3.065976 | At roundabout, take exit 1 onto A720 | 199.0   | S         | 49235 | 1299.3   |           |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 55.913061,-3.060099 | 55.924345,-3.053462 | car       |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 55.913061,-3.060099 | 55.924345,-3.053462 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Route using one intermediate waypoint (Hounslow to Reading via Staines )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
+   Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time   | distance |
-      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD         | 286.0   | W         | 10789  | 104.9    |
-      | 9             | 51.477555,-0.403923 | At roundabout, take exit 3 onto A312 | 238.0   | SW        | 115905 | 1770.8   |
-      | 15            | 51.355407,-0.679946 | At roundabout, take exit 3 onto A322 | 184.0   | S         | 224937 | 5936.2   |
+      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time   | distance | avoidance |
+      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD         | 286.0   | W         | 10789  | 104.9    |           |
+      | 9             | 51.477555,-0.403923 | At roundabout, take exit 3 onto A312 | 238.0   | SW        | 115905 | 1770.8   |           |
+      | 15            | 51.355407,-0.679946 | At roundabout, take exit 3 onto A322 | 184.0   | S         | 224937 | 5936.2   |           |
 
     Examples: 
-      | pointA                                 | pointB              | pointC                                 | routetype |
-      | 51.471546541834144,-0.3618621826171875 | 51.433882,-0.537904 | 51.45914115860512,-0.96679687499999995 | car       |
+      | pointA                                 | pointB              | pointC                                 | routeOptions | avoidances |
+      | 51.471546541834144,-0.3618621826171875 | 51.433882,-0.537904 | 51.45914115860512,-0.96679687499999995 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Route using one intermediate waypoint (Wentworth to Ascot via Windsor Park )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time   | distance |
-      | 2             | 51.40643,-0.596399  | Turn right onto BLACKNEST ROAD (A329) | 289.0   | W         | 73038  | 1115.9   |
-      | 5             | 51.407984,-0.617235 | Continue onto LONDON ROAD (A329)      | 274.0   | W         | 166263 | 2540.3   |
-      | 7             | 51.410306,-0.668737 | Turn right onto WINKFIELD ROAD (A330) | 7.0     | N         | 46532  | 955.5    |
+      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time   | distance | avoidance |
+      | 2             | 51.40643,-0.596399  | Turn right onto BLACKNEST ROAD (A329) | 289.0   | W         | 73038  | 1115.9   |           |
+      | 5             | 51.407984,-0.617235 | Continue onto LONDON ROAD (A329)      | 274.0   | W         | 166263 | 2540.3   |           |
+      | 7             | 51.410306,-0.668737 | Turn right onto WINKFIELD ROAD (A330) | 7.0     | N         | 46532  | 955.5    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC             | routetype |
-      | 51.409426,-0.591727 | 51.407904,-0.617237 | 51.41855,-0.672385 | car       |
+      | pointA              | pointB              | pointC             | routeOptions | avoidances |
+      | 51.409426,-0.591727 | 51.407904,-0.617237 | 51.41855,-0.672385 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Route using one intermediate waypoint ( Chelsea to Winchester via Windlesham)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time  | distance |
-      | 4             | 51.489964,-0.172906 | Turn left onto DOVEHOUSE STREET       | 321.0   | NW        | 7600  | 95.0     |
-      | 9             | 51.493673,-0.174548 | Turn right onto PELHAM STREET (A3218) | 0.0     | N         | 2446  | 55.7     |
-      | 13            | 51.486844,-0.252027 | At roundabout, take exit 3 onto A4    | 189.0   | S         | 69313 | 1829.3   |
+      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time  | distance | avoidance |
+      | 4             | 51.489964,-0.172906 | Turn left onto DOVEHOUSE STREET       | 321.0   | NW        | 7600  | 95.0     |           |
+      | 9             | 51.493673,-0.174548 | Turn right onto PELHAM STREET (A3218) | 0.0     | N         | 2446  | 55.7     |           |
+      | 13            | 51.486844,-0.252027 | At roundabout, take exit 3 onto A4    | 189.0   | S         | 69313 | 1829.3   |           |
 
     Examples: 
-      | pointA             | pointB             | pointC              | routetype |
-      | 51.48676,-0.170426 | 51.36166,-0.645979 | 51.070889,-1.315293 | car       |
+      | pointA             | pointB             | pointC              | routeOptions | avoidances |
+      | 51.48676,-0.170426 | 51.36166,-0.645979 | 51.070889,-1.315293 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Route using 2 intermediate waypoints (Hounslow to Reading via Staines and Bracknell )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time   | distance |
-      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD      | 286.0   | W         | 8390   | 104.9    |
-      | 9             | 51.406127,-0.539808 | Continue onto M3                  | 162.0   | S         | 445073 | 12363.5  |
-      | 16            | 51.414151,-0.747502 | Continue onto CHURCH ROAD (A3095) | 28.0    | NE        | 12891  | 340.2    |
-      | 27            | 51.451397,-0.960099 | Turn right onto WATLINGTON STREET | 333.0   | NW        | 11978  | 149.7    |
-      | 55            | 51.440767,-0.531845 | Continue onto A30                 | 17.0    | N         | 14025  | 370.1    |
+      | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time   | distance | avoidance |
+      | 1             | 51.472387,-0.361788 | Continue onto ELLINGTON ROAD      | 286.0   | W         | 8390   | 104.9    |           |
+      | 9             | 51.406127,-0.539808 | Continue onto M3                  | 162.0   | S         | 445073 | 12363.5  |           |
+      | 16            | 51.414151,-0.747502 | Continue onto CHURCH ROAD (A3095) | 28.0    | NE        | 12891  | 340.2    |           |
+      | 27            | 51.451397,-0.960099 | Turn right onto WATLINGTON STREET | 333.0   | NW        | 11978  | 149.7    |           |
+      | 55            | 51.440767,-0.531845 | Continue onto A30                 | 17.0    | N         | 14025  | 370.1    |           |
 
     Examples: 
-      | pointA                                 | pointB              | pointC                                 | pointD              | routetype |
-      | 51.471546541834144,-0.3618621826171875 | 51.414152,-0.747504 | 51.45914115860512,-0.96679687499999995 | 51.433882,-0.537904 | car       |
+      | pointA                                 | pointB              | pointC                                 | pointD              | routeOptions | avoidances |
+      | 51.471546541834144,-0.3618621826171875 | 51.414152,-0.747504 | 51.45914115860512,-0.96679687499999995 | 51.433882,-0.537904 | car          |            |
 
   @Routing
   Scenario Outline: Verify  Route using 2 intermediate waypoints (Oxford to Eaton via Warwick and Cambridge )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                         | azimuth | direction | time   | distance |
-      | 5             | 51.748432,-1.261457 | Turn left onto THAMES STREET (A420)                  | 275.0   | W         | 5517   | 145.6    |
-      | 21            | 52.289769,-1.60905  | At roundabout, take exit 3 onto A46                  | 249.0   | W         | 481412 | 12704.3  |
-      | 32            | 52.256925,-0.123683 | At roundabout, take exit 3 onto ST IVES ROAD (A1198) | 95.0    | E         | 57226  | 1510.2   |
-      | 68            | 51.560087,-0.496049 | At roundabout, take exit 2 onto A412 (DENHAM ROAD)   | 98.0    | E         | 31561  | 832.9    |
+      | wayPointIndex | waypointco          | waypointdesc                                         | azimuth | direction | time   | distance | avoidance |
+      | 5             | 51.748432,-1.261457 | Turn left onto THAMES STREET (A420)                  | 275.0   | W         | 5517   | 145.6    |           |
+      | 21            | 52.289769,-1.60905  | At roundabout, take exit 3 onto A46                  | 249.0   | W         | 481412 | 12704.3  |           |
+      | 32            | 52.256925,-0.123683 | At roundabout, take exit 3 onto ST IVES ROAD (A1198) | 95.0    | E         | 57226  | 1510.2   |           |
+      | 68            | 51.560087,-0.496049 | At roundabout, take exit 2 onto A412 (DENHAM ROAD)   | 98.0    | E         | 31561  | 832.9    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC             | pointD              | routetype |
-      | 51.746075,-1.263972 | 52.289962,-1.604752 | 52.202814,0.051429 | 51.491412,-0.610276 | car       |
+      | pointA              | pointB              | pointC             | pointD              | routeOptions | avoidances |
+      | 51.746075,-1.263972 | 52.289962,-1.604752 | 52.202814,0.051429 | 51.491412,-0.610276 | car          |            |
 
   @Routing 
   Scenario Outline: Verify  Route using 2 intermediate waypoints (Perth to Edinburgh via Stirling and Glasgow )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                           | azimuth | direction | time   | distance |
-      | 5             | 56.170837,-3.970499 | At roundabout, take exit 3 onto M9                     | 91.0    | E         | 142970 | 3961.4   |
-      | 11            | 55.917381,-4.067178 | At roundabout, take exit 2 onto CUMBERNAULD ROAD (A80) | 156.0   | SE        | 175684 | 4636.2   |
-      | 20            | 55.938772,-3.402452 | At roundabout, take exit 4 onto A8 (GLASGOW ROAD)      | 302.0   | NW        | 266985 | 7046.2   |
-      | 30            | 55.949621,-3.214174 | Turn right onto MELVILLE STREET (MELVILLE CRESCENT)     | 51.0    | NE        | 2218   | 30.8     |
+      | wayPointIndex | waypointco          | waypointdesc                                           | azimuth | direction | time   | distance | avoidance |
+      | 5             | 56.170837,-3.970499 | At roundabout, take exit 3 onto M9                     | 91.0    | E         | 142970 | 3961.4   |           |
+      | 11            | 55.917381,-4.067178 | At roundabout, take exit 2 onto CUMBERNAULD ROAD (A80) | 156.0   | SE        | 175684 | 4636.2   |           |
+      | 20            | 55.938772,-3.402452 | At roundabout, take exit 4 onto A8 (GLASGOW ROAD)      | 302.0   | NW        | 266985 | 7046.2   |           |
+      | 30            | 55.949621,-3.214174 | Turn right onto MELVILLE STREET (MELVILLE CRESCENT)    | 51.0    | NE        | 2218   | 30.8     |           |
 
     Examples: 
-      | pointA             | pointB              | pointC              | pointD              | routeOptions |
-      | 56.38721,-3.466273 | 56.136656,-3.970408 | 55.871665,-4.195067 | 55.950467,-3.208924 | car,shortest       |
-
+      | pointA             | pointB              | pointC              | pointD              | routeOptions | avoidances |
+      | 56.38721,-3.466273 | 56.136656,-3.970408 | 55.871665,-4.195067 | 55.950467,-3.208924 | car,fastest |            |
 
   @Routing
   Scenario Outline: Verify  nearest point on a Route
     Given I request a nearest point from  "<pointA>" from Nearest Point API
-    Then I should be able to verify the nearest point to be "<pointB>" at a distance of "<distance>" and type "type"
+    Then I should be able to verify the nearest point to be "<pointB>" at a distance of "<distance>"
 
     Examples: 
-      | pointA              | pointB                                 | distance          | type |
-      | 51.878966,-0.903849 | 51.875144098888576,-0.9107481891829116 | 636.3215777261629 | type |
-     
+      | pointA              | pointB                                 | distance          |
+      | 51.878966,-0.903849 | 51.875144098888576,-0.9107481891829116 | 636.3215777261629 |
