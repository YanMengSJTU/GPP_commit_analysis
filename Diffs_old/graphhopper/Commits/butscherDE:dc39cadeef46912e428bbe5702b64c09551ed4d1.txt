diff --git a/api/src/main/java/com/graphhopper/GHRequest.java b/api/src/main/java/com/graphhopper/GHRequest.java
index 8ac1151294..c3329d5dd6 100644
--- a/api/src/main/java/com/graphhopper/GHRequest.java
+++ b/api/src/main/java/com/graphhopper/GHRequest.java
@@ -307,15 +307,17 @@ public String toString() {
         return polygon;
     }
 
-    public void setPolygon(List<GHPoint> polygon) {
+    public GHRequest setPolygon(List<GHPoint> polygon) {
         this.polygon = polygon;
+        return this;
     }
 
     public boolean isPolygonThrough() {
         return polygonThrough;
     }
 
-    public void setPolygonThrough(boolean polygonThrough) {
+    public GHRequest setPolygonThrough(boolean polygonThrough) {
         this.polygonThrough = polygonThrough;
+        return this;
     }
 }
diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java
index e570036eb8..eacc401f17 100644
--- a/core/src/main/java/com/graphhopper/GraphHopper.java
+++ b/core/src/main/java/com/graphhopper/GraphHopper.java
@@ -994,9 +994,11 @@ public GHResponse route(GHRequest request) {
                 algoStr = chFactoryDecorator.isEnabled() && !disableCH ? DIJKSTRA_BI : ASTAR_BI;
 
             List<GHPoint> points = request.getPoints();
+            List<GHPoint> polygon = request.getPolygon();
             // TODO Maybe we should think about a isRequestValid method that checks all that stuff that we could do to fail fast
             // For example see #734
             checkIfPointsAreInBounds(points);
+            checkIfPointsAreInBounds(polygon);
 
             RoutingTemplate routingTemplate;
             if (ROUND_TRIP.equalsIgnoreCase(algoStr))
diff --git a/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java b/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java
index 62c0f2e721..81bd7a6ca9 100644
--- a/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java
+++ b/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java
@@ -131,6 +131,7 @@ public Response doGet(
                 setPointHints(pointHints).
                 setSnapPreventions(snapPreventions).
                 setPathDetails(pathDetails).
+                setPolygon(polygon).
                 getHints().
                 put(CALC_POINTS, calcPoints).
                 put(INSTRUCTIONS, instructions).
