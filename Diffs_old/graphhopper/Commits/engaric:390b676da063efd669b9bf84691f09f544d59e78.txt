diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnReader.java
index be91dd8811..509c39cfce 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnReader.java
@@ -529,6 +529,7 @@ public int getInternalNodeIdOfOsmNode(String nodeOsmId) {
     }
 
     private void processNode(OsDpnNode node) {
+    	logger.trace("PROCESSING:" + node.getId());
         if (isInBounds(node)) {
             addNode(node);
 
@@ -556,6 +557,8 @@ boolean addNode(OsDpnNode node) {
         if (nodeType == TOWER_NODE) {
             addTowerNode(node.getId(), lat, lon, ele);
         } else if (nodeType == PILLAR_NODE) {
+        	logger.trace("OsDpnReader.addPillarNode(" + nextPillarId
+        			+ ")");
             pillarInfo.setNode(nextPillarId, lat, lon, ele);
             getNodeMap().put(node.getId(), nextPillarId + 3);
             nextPillarId++;
@@ -608,6 +611,8 @@ void prepareHighwayNode(String idStr) {
     }
 
     int addTowerNode(String osmId, double lat, double lon, double ele) {
+    	logger.trace("OsDpnReader.addTowerNode(" + osmId
+    			+ ")");
         if (nodeAccess.is3D())
             nodeAccess.setNode(nextTowerId, lat, lon, ele);
         else
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
index f84560f72b..ca64c8a220 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
@@ -75,7 +75,7 @@ public static OsDpnWay create(String idStr, XMLStreamReader parser)
 		parser.nextTag();
 		way.setTag("highway", "track");
 		way.readTags(parser);
-		logger.info(way.toString());
+		logger.trace(way.toString());
 		return way;
 	}
 
@@ -199,7 +199,6 @@ protected void parseCoords(int dimensions, String lineDefinition) {
 			}
 			wayCoords[wayCoords.length - 1] = curString.toString();
 			addWayNodes();
-			nodes.add(endNode);
 			logger.info("parsecoord2" + toString() + " "
 					+ ((wayCoords.length == 0) ? "0" : wayCoords[0]));
 		}
@@ -207,6 +206,7 @@ protected void parseCoords(int dimensions, String lineDefinition) {
 		{
 			wayCoords = null;
 		}
+		nodes.add(endNode);
 	}
 
 	@Override
