diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/HttpClientUtils.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/HttpClientUtils.java
index 02702cdc05..942b5ee544 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/HttpClientUtils.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/HttpClientUtils.java
@@ -25,6 +25,7 @@
 
 public class HttpClientUtils {
     private static final String SSL_KEY_FILE = "sslKeyFile";
+    private static final String SSL_KEY_PASS = "sslKeyPass";
     private static HttpClientBuilder builder = null;
 
     static {
@@ -85,12 +86,13 @@ private static SSLContext buildContext(KeyManager[] kms) throws NoSuchAlgorithmE
     private static KeyManager[] buildKeyManager(File keyFile) throws KeyStoreException, NoSuchAlgorithmException, CertificateException,
             IOException, UnrecoverableKeyException {
         KeyStore clientStore = KeyStore.getInstance("PKCS12");
+        String keyPass = IntegrationTestProperties.getTestProperty(SSL_KEY_PASS);
         try (final FileInputStream keyStream = new FileInputStream(keyFile)) {
-            clientStore.load(keyStream, "addressapi".toCharArray());
+            clientStore.load(keyStream, keyPass.toCharArray());
         }
 
         KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
-        kmf.init(clientStore, "addressapi".toCharArray());
+        kmf.init(clientStore, keyPass.toCharArray());
         KeyManager[] kms = kmf.getKeyManagers();
         return kms;
     }
