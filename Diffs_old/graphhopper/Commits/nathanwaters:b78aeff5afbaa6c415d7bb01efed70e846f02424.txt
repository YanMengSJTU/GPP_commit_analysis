diff --git a/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java b/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java
index 0519bd8bed..6fbf2940d0 100644
--- a/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java
+++ b/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java
@@ -171,8 +171,11 @@ else if (feedId == null || feedId.isEmpty()) {
         loaded = true;
     }
 
-    public void loadFromFile(ZipFile zip) throws IOException {
+    public void loadFromFileAndLogErrors(ZipFile zip) throws IOException {
         loadFromFile(zip, null);
+        for (GTFSError error : errors) {
+            LOG.error(error.getMessageWithContext());
+        }
     }
 
     public boolean hasFeedInfo () {
diff --git a/reader-gtfs/src/main/java/com/conveyal/gtfs/model/Route.java b/reader-gtfs/src/main/java/com/conveyal/gtfs/model/Route.java
index 0ad6505cc2..be8097771e 100644
--- a/reader-gtfs/src/main/java/com/conveyal/gtfs/model/Route.java
+++ b/reader-gtfs/src/main/java/com/conveyal/gtfs/model/Route.java
@@ -76,11 +76,14 @@ public void loadOneRow() throws IOException {
             Agency agency = getRefField("agency_id", false, feed.agency);
 
             // if there is only one agency, associate with it automatically
-            // TODO: what will this do if the agency and the route have agency_ids but they do not match?
-            if (agency == null && feed.agency.size() == 1)
+            if (agency == null && feed.agency.size() == 1) {
                 agency = feed.agency.values().iterator().next();
+            }
 
-            r.agency_id = agency.agency_id;
+            // If we still haven't got an agency, it's because we have a bad reference, or because there is no agency
+            if (agency != null) {
+                r.agency_id = agency.agency_id;
+            }
 
             r.route_short_name = getStringField("route_short_name", false); // one or the other required, needs a special validator
             r.route_long_name = getStringField("route_long_name", false);
diff --git a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java
index 2a2c2bf448..7068918baa 100644
--- a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java
+++ b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java
@@ -366,7 +366,11 @@ public static GraphHopperStorage createOrLoad(GHDirectory directory, EncodingMan
                             t.transfer.min_transfer_time = (int) (t.time / 1000L);
                             gtfsFeed.transfers.put(t.id, t.transfer);
                         });
-                gtfsReader.buildPtNetwork();
+                try {
+                    gtfsReader.buildPtNetwork();
+                } catch (Exception e) {
+                    throw new RuntimeException("Error while constructing transit network. Is your GTFS file valid? Please check log for possible causes.", e);
+                }
             }
             graphHopperStorage.flush();
             return graphHopperStorage;
diff --git a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java
index 2e8b3aa909..2f75cc1ac6 100644
--- a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java
+++ b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java
@@ -19,7 +19,6 @@
 package com.graphhopper.reader.gtfs;
 
 import com.conveyal.gtfs.GTFSFeed;
-import com.conveyal.gtfs.error.GTFSError;
 import com.conveyal.gtfs.model.Fare;
 import com.conveyal.gtfs.model.FareRule;
 import com.google.transit.realtime.GtfsRealtime;
@@ -199,10 +198,7 @@ void loadGtfsFromFile(String id, ZipFile zip) {
 		try {
 			Files.deleteIfExists(file.toPath());
 			GTFSFeed feed = new GTFSFeed(file);
-			feed.loadFromFile(zip);
-			for (GTFSError error : feed.errors) {
-				System.out.println(error.getMessageWithContext());
-			}
+			feed.loadFromFileAndLogErrors(zip);
 			fixFares(feed, zip);
 			this.gtfsFeeds.put(id, feed);
 		} catch (IOException e) {
