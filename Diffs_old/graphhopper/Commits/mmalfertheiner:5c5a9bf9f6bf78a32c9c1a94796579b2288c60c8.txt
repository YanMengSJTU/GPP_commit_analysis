diff --git a/core/src/main/java/com/graphhopper/routing/Path.java b/core/src/main/java/com/graphhopper/routing/Path.java
index 0803faf299..5d16cebe9a 100644
--- a/core/src/main/java/com/graphhopper/routing/Path.java
+++ b/core/src/main/java/com/graphhopper/routing/Path.java
@@ -229,7 +229,6 @@ protected void processEdge( int edgeId, int adjNode )
         double dist = iter.getDistance();
         distance += dist;
         time += calcMillis(dist, iter.getFlags(), false);
-        System.out.println(time);
         addEdge(edgeId);
     }
 
diff --git a/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java
index 0105ac347a..035cddb6e2 100644
--- a/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java
@@ -184,7 +184,7 @@ protected BikeGenericFlagEncoder(int speedBits, double speedFactor, int maxTurnC
         setWayTypeSpeed(WayType.PATH_EASY.getValue(), 8);
         setWayTypeSpeed(WayType.PATH_MIDDLE.getValue(), 6);
         setWayTypeSpeed(WayType.PATH_HARD.getValue(), 4);
-        setWayTypeSpeed(WayType.CYCLEWAY.getValue(), 16);
+        setWayTypeSpeed(WayType.CYCLEWAY.getValue(), 18);
         setWayTypeSpeed(WayType.MTB_CYCLEWAY.getValue(), 14);
         setWayTypeSpeed(WayType.PUSHING_SECTION.getValue(), PUSHING_SECTION_SPEED);
 
diff --git a/core/src/main/java/com/graphhopper/routing/util/DynamicWeighting.java b/core/src/main/java/com/graphhopper/routing/util/DynamicWeighting.java
index 8b29c45d5c..c8a3854c65 100644
--- a/core/src/main/java/com/graphhopper/routing/util/DynamicWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/DynamicWeighting.java
@@ -37,6 +37,7 @@
     private final double heading_penalty;
     protected final FlagEncoder flagEncoder;
     private final double maxSpeed;
+    private String user = "martin";
 
     /**
      * For now used only in BikeGenericFlagEncoder
@@ -83,6 +84,13 @@ public double calcWeight( EdgeIteratorState edgeState, boolean reverse, int prev
         return time / (0.5 + getUserPreference(edgeState));
     }
 
+    private double getUserSpeed(EdgeIteratorState edgeState){
+        int wayType = (int) flagEncoder.getDouble(edgeState.getFlags(), DynamicWeighting.WAY_TYPE_KEY);
+
+        return 0;
+    }
+
+
     private double getUserPreference(EdgeIteratorState edgeState) {
 
         int wayType = (int) flagEncoder.getDouble(edgeState.getFlags(), DynamicWeighting.WAY_TYPE_KEY);
diff --git a/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java b/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java
index d14b57180d..1bb441021a 100644
--- a/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/FastestWeighting.java
@@ -63,8 +63,6 @@ public double getMinWeight( double distance )
     @Override
     public double calcWeight( EdgeIteratorState edge, boolean reverse, int prevOrNextEdgeId )
     {
-        System.out.println(reverse);
-
         double speed = reverse ? flagEncoder.getReverseSpeed(edge.getFlags()) : flagEncoder.getSpeed(edge.getFlags());
         if (speed == 0)
             return Double.POSITIVE_INFINITY;
