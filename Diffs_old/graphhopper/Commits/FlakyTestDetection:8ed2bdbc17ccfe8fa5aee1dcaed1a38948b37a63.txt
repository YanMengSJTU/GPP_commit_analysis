diff --git a/core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java b/core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java
index 85fc68c437..4278e995b7 100644
--- a/core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java
+++ b/core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java
@@ -315,13 +315,9 @@ private int getTurn(EdgeIteratorState edge, int baseNode, int prevNode, int adjN
                 }
 
                 if (otherDelta < delta) {
-                    // TODO Use keeps once we have a robust client
-                    //return Instruction.KEEP_LEFT;
-                    return Instruction.TURN_SLIGHT_LEFT;
+                    return Instruction.KEEP_LEFT;
                 } else {
-                    // TODO Use keeps once we have a robust client
-                    //return Instruction.KEEP_RIGHT;
-                    return Instruction.TURN_SLIGHT_RIGHT;
+                    return Instruction.KEEP_RIGHT;
                 }
 
 
diff --git a/core/src/main/resources/com/graphhopper/util/cs_CZ.txt b/core/src/main/resources/com/graphhopper/util/cs_CZ.txt
index f3d10be780..d8bc4e4756 100644
--- a/core/src/main/resources/com/graphhopper/util/cs_CZ.txt
+++ b/core/src/main/resources/com/graphhopper/util/cs_CZ.txt
@@ -74,6 +74,6 @@ web.marker=Značka
 web.gh_offline_info=API GraphHopper je offline?
 web.refresh_button=Obnovit stránku
 web.server_status=Stav
-web.zoom_in=
-web.zoom_out=
+web.zoom_in=Přiblížit
+web.zoom_out=Oddálit
 web.drag_to_reorder=
diff --git a/core/src/test/java/com/graphhopper/routing/PathTest.java b/core/src/test/java/com/graphhopper/routing/PathTest.java
index 7ec8e0c5c2..c2df7a627d 100644
--- a/core/src/test/java/com/graphhopper/routing/PathTest.java
+++ b/core/src/test/java/com/graphhopper/routing/PathTest.java
@@ -538,7 +538,7 @@ public void testCalcInstructionForForkWithSameName() {
         InstructionList wayList = p.calcInstructions(tr);
 
         assertEquals(3, wayList.size());
-        assertEquals(-1, wayList.get(1).getSign());
+        assertEquals(-7, wayList.get(1).getSign());
     }
 
     @Test
@@ -565,7 +565,7 @@ public void testCalcInstructionContinueLeavingStreet() {
         InstructionList wayList = p.calcInstructions(tr);
 
         assertEquals(3, wayList.size());
-        assertEquals(-1, wayList.get(1).getSign());
+        assertEquals(-7, wayList.get(1).getSign());
     }
 
     @Test
@@ -645,7 +645,7 @@ public void testCalcInstructionsForSlightTurnWithOtherSlightTurn() {
         // Contain start, turn, and finish instruction
         assertEquals(3, wayList.size());
         // Assert turn right
-        assertEquals(1, wayList.get(1).getSign());
+        assertEquals(7, wayList.get(1).getSign());
     }
 
     @Test
diff --git a/core/src/test/java/com/graphhopper/util/InstructionListTest.java b/core/src/test/java/com/graphhopper/util/InstructionListTest.java
index e5f1f3fb1a..66ef13394f 100644
--- a/core/src/test/java/com/graphhopper/util/InstructionListTest.java
+++ b/core/src/test/java/com/graphhopper/util/InstructionListTest.java
@@ -233,7 +233,7 @@ public void testWayList2() {
         p = new Dijkstra(g, new ShortestWeighting(carEncoder), tMode).calcPath(3, 5);
         wayList = p.calcInstructions(usTR);
         tmpList = pick("text", wayList.createJson());
-        assertEquals(Arrays.asList("Continue onto 3-4", "Turn slight right onto 4-5", "Arrive at destination"),
+        assertEquals(Arrays.asList("Continue onto 3-4", "Keep right onto 4-5", "Arrive at destination"),
                 tmpList);
     }
 
diff --git a/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java b/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java
index 1979b3a3c3..e50bd1d5de 100644
--- a/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java
+++ b/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java
@@ -661,12 +661,12 @@ public void testKremsCyclewayInstructionsWithWayTypeInfo() {
 
         assertEquals("Turn right onto Pfarrplatz", resultJson.get(2).get("text"));
         assertEquals("Turn right onto Margarethenstraße", resultJson.get(3).get("text"));
-        assertEquals("Turn slight left onto Hoher Markt", resultJson.get(5).get("text"));
+        assertEquals("Keep left onto Hoher Markt", resultJson.get(5).get("text"));
         assertEquals("Turn right onto Wegscheid", resultJson.get(7).get("text"));
         assertEquals("Turn right onto Ringstraße, L73", resultJson.get(9).get("text"));
-        assertEquals("Turn slight left onto Eyblparkstraße", resultJson.get(10).get("text"));
-        assertEquals("Turn slight left onto Austraße", resultJson.get(11).get("text"));
-        assertEquals("Turn slight left onto Rechte Kremszeile", resultJson.get(12).get("text"));
+        assertEquals("Keep left onto Eyblparkstraße", resultJson.get(10).get("text"));
+        assertEquals("Keep left onto Austraße", resultJson.get(11).get("text"));
+        assertEquals("Keep left onto Rechte Kremszeile", resultJson.get(12).get("text"));
         //..
         assertEquals("Turn right onto Treppelweg", resultJson.get(19).get("text"));
         assertEquals("cycleway", resultJson.get(19).get("annotation_text"));
