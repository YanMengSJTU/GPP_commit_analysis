diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 0eaa0a8b79..c3d26794a3 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -683,6 +683,10 @@ protected void addParameter(String key, String value) {
 		ArrayList<String> tempList = null;
 		if (value.equals("mountainbike"))
 		{	value="mtb";}
+		
+
+			value= value.toLowerCase().replaceAll(" ", "");
+		
 		if (requestParameters.containsKey(key)) {
 			tempList = requestParameters.get(key);
 			if (tempList == null)
diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index 2ec5722abd..bd521a8a6b 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -451,7 +451,7 @@ Feature: Verify a route from A to B
 
   #Marsh
   @Routing
-  Scenario Outline: Verify DPN Route with boulders avoidance -(Marsh)
+  Scenario Outline: Verify DPN Route with avoidance -(Marsh)
     Given I have route point as
       | pointA              | pointB              |
       | 53.558921,-1.935834 | 53.512816,-1.873835 |
@@ -469,7 +469,7 @@ Feature: Verify a route from A to B
 
   #Quarry Or Pit
   @Routing
-  Scenario Outline: Verify DPN Route with boulders avoidance -(Quarry Or Pit)
+  Scenario Outline: Verify DPN Route with avoidance -(Quarry Or Pit)
     Given I have route point as
       | pointA              | pointB              |
       | 53.348269,-2.061068 | 53.318817,-2.069958 |
@@ -540,8 +540,8 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances     | routeType |
       | foot        | Boulders,Cliff | fastavoid |
 
-  @Routing
-  Scenario Outline: Verify DPN Route with boulders avoidance -(mountainbike)
+  @Routing 
+  Scenario Outline: Verify DPN Route with -(mountainbike)
     Given I have route point as
       | pointA              | pointB              |
       | 53.298525,-1.679533 | 53.203145,-1.799292 |
@@ -550,16 +550,33 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time  | distance | avoidance         |
-      | 1             | 53.297007,-1.679015 | Continue onto Sir William Hill Road | 79.0    | E         | 61737 | 308.7    | cycleway, unpaved |
+      | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time   | distance | avoidance         |
+      | 1             | 53.297007,-1.679015 | Continue onto Sir William Hill Road | 257.0   | W         | 100235 | 501.2    | cycleway, unpaved |
 
     Examples: 
       | vehicleType  | avoidances | routeType |
       | mountainbike |            |           |
 
+  @Routing 
+  Scenario Outline: Verify DPN Route with avoidance -(A Road)
+    Given I have route point as
+      | pointA              | pointB              |
+      | 53.298525,-1.679533 | 53.203145,-1.799292 |
+    And I have vehicle as "<vehicleType>"
+    And I have avoidances as "<avoidances>"
+    And I have weighting as "<routeType>"
+    When I request for a route
+    Then I should be able to verify the waypoints not on the route map:
+      | wayPointIndex | waypointco         | waypointdesc           | azimuth | direction | time  | distance | avoidance |
+      | 6             | 53.28017,-1.711765 | Turn right onto A Road | 236.0   | SW        | 43838 | 219.2    | ARoad     |
+
+    Examples: 
+      | vehicleType  | avoidances | routeType |
+      | mountainbike | A Road      |      fastavoid     |
+
   #Add shortest,fastest,fastavoid and shortavoid for both foot and mountainbike
-  @Routing
-  Scenario Outline: Verify DPN Route with boulders avoidance -(Inland water)
+  @Routing 
+  Scenario Outline: Verify DPN Route with out avoidance -(Mountain Bike)
     Given I have route point as
       | pointA              | pointB              |
       | 53.334174,-1.936591 | 53.182547,-1.824527 |
@@ -568,15 +585,15 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time   | distance | avoidance   |
-      | 5             | 53.343361,-1.923649 | Turn left onto Path, get off the bike, unpaved | 112.0   | E         | 250767 | 308.7    | InlandWater |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance   |
+      | 4             | 53.348198,-1.933166 | Continue onto Route | 33.0    | NE        | 3799 | 4.2      | InlandWater |
 
     Examples: 
       | vehicleType  | avoidances | routeType |
       | mountainbike |            |           |
 
-  @Routing
-  Scenario Outline: Verify DPN Route with boulders avoidance -(A Road )
+  @Routing 
+  Scenario Outline: Verify DPN Route without  avoidance -(A Road )
     Given I have route point as
       | pointA              | pointB              |
       | 53.288886,-1.980339 | 53.311846,-1.783654 |
@@ -585,8 +602,8 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                                         | azimuth | direction | time  | distance | avoidance |
-      | 5             | 53.277954,-1.981109 | Turn right onto The Street (Midshires Way), cycleway | 324.0   | NW        | 96432 | 482.2    | A Road    |
+      | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time    | distance | avoidance |
+      | 5             | 53.277954,-1.981109 | Turn left onto Minor Road | 155.0   | SE        | 1125018 | 5625.1   | cycleway  |
 
     Examples: 
       | vehicleType  | avoidances | routeType |
diff --git a/acceptancetesting/src/test/cucumber/Routing-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
index b399d0c116..39e6dab057 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
@@ -12,7 +12,7 @@ Feature: Verify a route from A to B
     And I have vehicle as "car"
     And I have avoidances as ""
     And I have weighting as "fastest"
-    And I have locale as "en"
+    And I have locale as "en-GB"
     And I have debug as "true"
     And I have points_encoded as "true"
     And I have points_calc as "true"
@@ -23,7 +23,7 @@ Feature: Verify a route from A to B
     Then I should be able to verify the http response message as "OK"
     Then I should be able to verify the http statuscode as "200"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco                | waypointdesc                | azimuth | direction | time | distance | avoidance |
+      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
       | 2             | 50.729205,-3.523206 | Turn right onto WELL STREET | 210.0   | SW        | 4050 | 112.5    |           |
 
   # Parameter :  vehicle
@@ -43,10 +43,10 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | errorMessage                                                  | statusCode | httpErrorMessage |
-      | 123         |            | fastest   | Vehicle 123 is not a valid vehicle. Valid vehicles are car.   | 400        | Bad Request                |
-      | foot        |            | fastest   | Vehicle foot is not a valid vehicle. Valid vehicles are car.  | 400        | Bad Request                 |
-      | cycle       |            | fastest   | Vehicle cycle is not a valid vehicle. Valid vehicles are car. | 400        | Bad Request                 |
-      | Bike        |            | fastest   | Vehicle Bike is not a valid vehicle. Valid vehicles are car.  | 400        | Bad Request                 |
+      | 123         |            | fastest   | Vehicle 123 is not a valid vehicle. Valid vehicles are car.   | 400        | Bad Request      |
+      | foot        |            | fastest   | Vehicle foot is not a valid vehicle. Valid vehicles are car.  | 400        | Bad Request      |
+      | cycle       |            | fastest   | Vehicle cycle is not a valid vehicle. Valid vehicles are car. | 400        | Bad Request      |
+      | Bike        |            | fastest   | Vehicle Bike is not a valid vehicle. Valid vehicles are car.  | 400        | Bad Request      |
 
   # Parameter :  vehicle
   @Routing @ErrorMessages
@@ -168,7 +168,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         | cliff      | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  weighting
   @Routing @ErrorMessages
@@ -186,7 +186,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  weighting
   @Routing @ErrorMessages
@@ -204,7 +204,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  locale
   @Routing @ErrorMessages
@@ -223,7 +223,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | locale | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | en     | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | en     | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  locale
   @Routing @ErrorMessages
@@ -242,7 +242,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | locale | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | en     | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | en-GB  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  instructions
   @Routing @ErrorMessages
@@ -261,7 +261,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | instructions | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | msg("box")   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | msg("box")   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  instructions
   @Routing @ErrorMessages
@@ -280,7 +280,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | instructions | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | true         | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | true         | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  algorithm
   @Routing @ErrorMessages
@@ -299,10 +299,10 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | algorithm | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | xyz       | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
-      | car         | trees      | faster    | dijkstra  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
-      | car         | trees      | faster    | astar     | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
-      | car         | trees      | faster    | astarbi   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | xyz       | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | dijkstra  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | astar     | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | astarbi   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  algorithm
   @Routing @ErrorMessages
@@ -321,7 +321,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | algorithm | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | dijkstra  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | dijkstra  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  points_encoded
   @Routing @ErrorMessages
@@ -340,7 +340,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | points_encoded | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | xyz            | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | xyz            | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  points_encoded
   @Routing @ErrorMessages
@@ -359,7 +359,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | points_encoded | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | true           | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | true           | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  debug
   @Routing @ErrorMessages
@@ -378,7 +378,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | debug | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | xyz   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | xyz   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  debug
   @Routing @ErrorMessages
@@ -397,7 +397,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | debug | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | true  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | true  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  calc_points
   @Routing @ErrorMessages
@@ -416,7 +416,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | calc_points | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | xyz         | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | xyz         | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  calc_points
   @Routing @ErrorMessages
@@ -435,7 +435,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | calc_points | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | true        | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | true        | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  Type
   @Routing @ErrorMessages
@@ -454,7 +454,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | calc_points | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | faster    | xyz         | txt            | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | faster    | xyz         | txt            | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  Type
   @Routing @ErrorMessages
@@ -473,10 +473,11 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | calc_points | responseFormat | errorMessage                                                                                                              | statusCode |
-      | car         | trees      | fastest   | true        | json           | Parameter calc_pointSSS is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
+      | car         |            | fastest   | true        | json           | Parameter calc_pointSSS is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
+# http method
   @Routing @ErrorMessages
-  Scenario Outline: Invalid http method "PUT"
+  Scenario Outline: http methods "PUT/POST/DEL/GET"
     Given I have route point as
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
@@ -484,11 +485,15 @@ Feature: Verify a route from A to B
     And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     And I have type as "<responseFormat>"
-    And I request for HTTP "PUT" method
+    And I request for HTTP "<httpMethod>" method
     When I request for a route
     Then I should be able to verify the response message as "<errorMessage>"
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         | trees      | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 405        |
+      | vehicleType | avoidances | routeType | httpMethod|responseFormat | errorMessage                                                                                                     | statusCode |
+      | car         |            | fastest   | PUT|json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 405        |
+      | car         |            | fastest   | DEL|json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 405        |
+      | car         |            | fastest   | POST|json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 405        |
+      | car         |            | fastest   | GET|json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 405        |
+      
diff --git a/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java b/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
index 8291edfe4e..3628396510 100644
--- a/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
+++ b/web/src/main/java/com/graphhopper/http/GraphHopperServlet.java
@@ -40,6 +40,7 @@
 import javax.xml.transform.dom.DOMSource;
 import javax.xml.transform.stream.StreamResult;
 
+import org.eclipse.jetty.http.HttpStatus;
 import org.json.JSONObject;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
@@ -47,6 +48,8 @@
 import com.graphhopper.GHRequest;
 import com.graphhopper.GHResponse;
 import com.graphhopper.GraphHopper;
+import com.graphhopper.http.validation.BooleanValidator;
+import com.graphhopper.http.validation.CaseInsensitiveStringListValidator;
 import com.graphhopper.routing.AlgorithmOptions;
 import com.graphhopper.routing.util.FlagEncoder;
 import com.graphhopper.routing.util.WeightingMap;
@@ -103,17 +106,7 @@ public void doGet( HttpServletRequest httpReq, HttpServletResponse httpRes )
 		String debugString = getParam(httpReq, "debug", "true");
 		String prettyString = getParam(httpReq, "pretty", "true");
 
-		boolean validLocale = false;
-		for (String validLocaleStr : TranslationMap.LOCALES)
-		{
-			if (validLocaleStr.equalsIgnoreCase(localeStr))
-			{
-				validLocale = true;
-				break;
-			}
-		}
-
-		if (!validLocale)
+		if (!new CaseInsensitiveStringListValidator().isValid(localeStr, TranslationMap.LOCALES))
 		{
 			StringBuilder errMesg = new StringBuilder(localeStr)
 			        .append(" is not a valid value for parameter locale. Valid values are ");
@@ -131,11 +124,9 @@ public void doGet( HttpServletRequest httpReq, HttpServletResponse httpRes )
 				}
 			}
 			ghRsp = new GHResponse().addError(new IllegalArgumentException(errMesg.toString()));
-		} else if (!AlgorithmOptions.ASTAR.equalsIgnoreCase(algoStr)
-		        && !AlgorithmOptions.ASTAR_BI.equalsIgnoreCase(algoStr)
-		        && !AlgorithmOptions.DIJKSTRA.equalsIgnoreCase(algoStr)
-		        && !AlgorithmOptions.DIJKSTRA_BI.equalsIgnoreCase(algoStr)
-		        && !AlgorithmOptions.DIJKSTRA_ONE_TO_MANY.equalsIgnoreCase(algoStr))
+		} else if (!new CaseInsensitiveStringListValidator().isValid(algoStr,
+				AlgorithmOptions.ASTAR, AlgorithmOptions.ASTAR_BI, AlgorithmOptions.DIJKSTRA,
+				AlgorithmOptions.DIJKSTRA_BI, AlgorithmOptions.DIJKSTRA_ONE_TO_MANY))
 		{
 			String errMesg = String
 			        .format("%s is not a valid value for parameter algorithm. Valid values are %s, %s, %s, %s or %s",
@@ -143,35 +134,31 @@ public void doGet( HttpServletRequest httpReq, HttpServletResponse httpRes )
 			                AlgorithmOptions.DIJKSTRA, AlgorithmOptions.DIJKSTRA_BI,
 			                AlgorithmOptions.DIJKSTRA_ONE_TO_MANY);
 			ghRsp = new GHResponse().addError(new IllegalArgumentException(errMesg));
-		} else if (!"true".equalsIgnoreCase(instructionsString)
-		        && !"false".equalsIgnoreCase(instructionsString))
+		} else if (!new BooleanValidator().isValid(instructionsString))
 		{
 			String errMesg = String
 			        .format("%s is not a valid value for parameter instructions. Valid values are true or false",
 			                instructionsString);
 			ghRsp = new GHResponse().addError(new IllegalArgumentException(errMesg));
-		} else if (!"true".equalsIgnoreCase(pointsEncodedString)
-		        && !"false".equalsIgnoreCase(pointsEncodedString))
+		} else if (!new BooleanValidator().isValid(pointsEncodedString))
 		{
 			String errMesg = String
 			        .format("%s is not a valid value for parameter pointsEncodedString. Valid values are true or false",
 			                pointsEncodedString);
 			ghRsp = new GHResponse().addError(new IllegalArgumentException(errMesg));
-		} else if (!"true".equalsIgnoreCase(calcPointsString)
-				&& !"false".equalsIgnoreCase(calcPointsString))
+		} else if (!new BooleanValidator().isValid(calcPointsString))
 		{
 			String errMesg = String
-					.format("%s is not a valid value for parameter calc_points. Valid values are true or false",
-							calcPointsString);
+			        .format("%s is not a valid value for parameter calc_points. Valid values are true or false",
+			                calcPointsString);
 			ghRsp = new GHResponse().addError(new IllegalArgumentException(errMesg));
-		} else if (!"true".equalsIgnoreCase(debugString) && !"false".equalsIgnoreCase(debugString))
+		} else if (!new BooleanValidator().isValid(debugString))
 		{
 			String errMesg = String.format(
 			        "%s is not a valid value for parameter debug. Valid values are true or false",
 			        debugString);
 			ghRsp = new GHResponse().addError(new IllegalArgumentException(errMesg));
-		} else if (!"true".equalsIgnoreCase(prettyString)
-		        && !"false".equalsIgnoreCase(prettyString))
+		} else if (!new BooleanValidator().isValid(prettyString))
 		{
 			String errMesg = String.format(
 			        "%s is not a valid value for parameter pretty. Valid values are true or false",
@@ -320,7 +307,7 @@ String errorsToXML( List<Throwable> list )
 			json.put("error", map);
 			Throwable throwable = rsp.getErrors().get(0);
 			map.put("message", throwable.getMessage());
-			map.put("statuscode", "404");
+			map.put("statuscode", "" + HttpStatus.BAD_REQUEST_400);
 			List<Map<String, String>> list = new ArrayList<Map<String, String>>();
 			for (Throwable t : rsp.getErrors())
 			{
diff --git a/web/src/main/java/com/graphhopper/http/validation/BooleanValidator.java b/web/src/main/java/com/graphhopper/http/validation/BooleanValidator.java
new file mode 100644
index 0000000000..b02e178f2a
--- /dev/null
+++ b/web/src/main/java/com/graphhopper/http/validation/BooleanValidator.java
@@ -0,0 +1,11 @@
+package com.graphhopper.http.validation;
+
+public class BooleanValidator
+{
+
+	public boolean isValid( String param )
+	{
+		return "true".equalsIgnoreCase(param) || "false".equalsIgnoreCase(param);
+	}
+
+}
diff --git a/web/src/main/java/com/graphhopper/http/validation/CaseInsensitiveStringListValidator.java b/web/src/main/java/com/graphhopper/http/validation/CaseInsensitiveStringListValidator.java
new file mode 100644
index 0000000000..a91b52f34c
--- /dev/null
+++ b/web/src/main/java/com/graphhopper/http/validation/CaseInsensitiveStringListValidator.java
@@ -0,0 +1,24 @@
+package com.graphhopper.http.validation;
+
+import java.util.Arrays;
+import java.util.List;
+
+public class CaseInsensitiveStringListValidator
+{
+	public boolean isValid( String value, String... validValues )
+	{
+		return isValid(value, Arrays.asList(validValues));
+	}
+
+	public boolean isValid( String value, List<String> validValues )
+	{
+		for (String validValue : validValues)
+		{
+			if (value.equalsIgnoreCase(validValue))
+			{
+				return true;
+			}
+		}
+		return false;
+	}
+}
