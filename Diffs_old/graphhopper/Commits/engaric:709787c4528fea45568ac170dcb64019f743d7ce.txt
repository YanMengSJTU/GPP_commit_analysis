diff --git a/core/src/main/java/com/graphhopper/routing/QueryGraph.java b/core/src/main/java/com/graphhopper/routing/QueryGraph.java
index e60c3fd638..7d794145e1 100644
--- a/core/src/main/java/com/graphhopper/routing/QueryGraph.java
+++ b/core/src/main/java/com/graphhopper/routing/QueryGraph.java
@@ -82,11 +82,6 @@ public QueryGraph( Graph graph )
             wrappedExtension = mainGraph.getExtension();
     }
 
-    public Graph getOriginalGraph()
-    {
-        return mainGraph;
-    }
-
     /**
      * Convenient method to initialize this QueryGraph with the two specified query results.
      */
@@ -283,7 +278,7 @@ public long getTurnCostFlags( int edgeFrom, int nodeVia, int edgeTo )
                 if (isVirtualEdge(edgeFrom))
                 {
                     edgeFrom = queryResults.get((edgeFrom - mainEdges) / 4).getClosestEdge().getEdge();
-                }                
+                }
                 if (isVirtualEdge(edgeTo))
                 {
                     edgeTo = queryResults.get((edgeTo - mainEdges) / 4).getClosestEdge().getEdge();
diff --git a/core/src/test/java/com/graphhopper/routing/ch/DijkstraBidirectionCHTest.java b/core/src/test/java/com/graphhopper/routing/ch/DijkstraBidirectionCHTest.java
index 5f0e744c8b..5cd0005a28 100644
--- a/core/src/test/java/com/graphhopper/routing/ch/DijkstraBidirectionCHTest.java
+++ b/core/src/test/java/com/graphhopper/routing/ch/DijkstraBidirectionCHTest.java
@@ -66,9 +66,8 @@ protected LevelGraph createGraph( EncodingManager em, boolean is3D )
 
     @Override
     public RoutingAlgorithm createAlgo( Graph g, AlgorithmOptions opts )
-    {        
-        return createFactory(g instanceof QueryGraph ? ((QueryGraph) g).getOriginalGraph() : g, opts).
-                createAlgo(g, opts);
+    {
+        return createFactory(g, opts).createAlgo(g, opts);
     }
 
     @Override
