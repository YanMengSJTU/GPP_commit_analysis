diff --git a/marmoset/src/main/webapp/AnimatedMarker.js b/marmoset/src/main/webapp/AnimatedMarker.js
index 3515bbd391..11087a60f9 100644
--- a/marmoset/src/main/webapp/AnimatedMarker.js
+++ b/marmoset/src/main/webapp/AnimatedMarker.js
@@ -25,7 +25,13 @@ L.AnimatedMarker = L.Marker.extend({
     autoStart: true,
     // callback onend
     onEnd: function(){},
-    clickable: false
+    clickable: false,
+  },
+
+  _setPos: function(pos) {
+    L.Marker.prototype._setPos.call(this, pos);
+    if (this.angle)
+      this._icon.style[L.DomUtil.TRANSFORM] += ' rotate(' + this.angle + 'deg)';
   },
 
   initialize: function (latlngs, options) {
@@ -88,25 +94,15 @@ L.AnimatedMarker = L.Marker.extend({
       if (this._shadow) { this._shadow.style[L.DomUtil.TRANSITION] = 'all ' + speed + 'ms linear'; }
     }
 
-
-
     // Set the rotation of the marker
-    if (this._icon && this._i == 0) {
-      // gets overwritten by leaflet if done without setTimeout
+    if (this._icon) {
       var i = this._i;
-      setTimeout(function () {
-        var s = this._latlngs[i];
-        var d = this._latlngs[i+1];
-        console.log(this._latlngs, this._i, i, s, d);
-        var angle = angleFromCoordinate(s[0], s[1], d[0], d[1]);
-        console.log(angle);
-
-        // hacky way of setting transform property without removing what leaflet does
-        var curStyle = this._icon.style[L.DomUtil.TRANSFORM].split(" ");
-        if (curStyle.length > 3)
-          curStyle.pop();
-        this._icon.style[L.DomUtil.TRANSFORM] = curStyle.join(" ") + " rotate("+ angle +"deg)";
-      }.bind(this), 0);
+
+        var i0 = i == 0;
+        var s = this._latlngs[i-!i0];
+        var d = this._latlngs[i+i0];
+        //console.log(this._latlngs, this._i, i, s, d, i-!i0, i+i0);
+        this.angle = angleFromCoordinate(s[0], s[1], d[0], d[1]);
     }
 
     // Move to the next vertex
