diff --git a/core/src/main/java/com/graphhopper/routing/template/PolygonThroughRoutingTemplate.java b/core/src/main/java/com/graphhopper/routing/template/PolygonThroughRoutingTemplate.java
index f3fbf08546..ecd4bf5e08 100644
--- a/core/src/main/java/com/graphhopper/routing/template/PolygonThroughRoutingTemplate.java
+++ b/core/src/main/java/com/graphhopper/routing/template/PolygonThroughRoutingTemplate.java
@@ -53,6 +53,7 @@ protected void findCandidateRoutes() {
         lotNodes = LOTNodeExtractor.createExtractedData(this.graph, this.algoFactory, this.algorithmOptions, viaPointNodeIds, polygonEntryExitPoints);
         sw.stop();
         System.out.println(sw.toString());
+        System.out.println("# LOT nodes: " + lotNodes.getLotNodesFor(viaPointNodeIds.get(0)).size());
 
         final List<QueryResult> queryResults = createQueryResults(polygonEntryExitPoints, flagEncoder);
 
diff --git a/core/src/main/java/com/graphhopper/routing/template/polygonRoutingUtil/RouteCandidatePolygon.java b/core/src/main/java/com/graphhopper/routing/template/polygonRoutingUtil/RouteCandidatePolygon.java
index bdebc4734e..81f0756836 100644
--- a/core/src/main/java/com/graphhopper/routing/template/polygonRoutingUtil/RouteCandidatePolygon.java
+++ b/core/src/main/java/com/graphhopper/routing/template/polygonRoutingUtil/RouteCandidatePolygon.java
@@ -28,53 +28,6 @@ public RouteCandidatePolygon(final int startNodeID, final int endNodeID, final i
         this.detourEntryToDetourExit = detourEntryToDetourExit;
         this.detourExitToEnd = detourExitToEnd;
         this.directRouteStartEnd = directRouteStartEnd;
-
-        if (startNodeID == 906161 || startNodeID == 270195
-            || endNodeID == 906161 || endNodeID == 270195
-            || polygonEntryNodeID == 906161 || polygonEntryNodeID == 270195
-            || polygonExitNodeID == 906161 || polygonExitNodeID == 270195) {
-            System.out.println("hit2");
-        }
-
-//        if (startToDetourEntry.getNodesInPathOrder().contains(906161) && startToDetourEntry.getNodesInPathOrder().contains(270195)) {
-//            System.out.println("hit3");
-//        }
-//
-//        if (detourEntryToDetourExit.getNodesInPathOrder().contains(906161) && detourEntryToDetourExit.getNodesInPathOrder().contains(270195)) {
-//            System.out.println("hit4");
-//        }
-//
-//        if (detourExitToEnd.getNodesInPathOrder().contains(906161) && detourExitToEnd.getNodesInPathOrder().contains(270195)) {
-//            System.out.println("hit5");
-//        }
-//
-//        if (directRouteStartEnd.getNodesInPathOrder().contains(906161) && directRouteStartEnd.getNodesInPathOrder().contains(270195)) {
-//            System.out.println("hit6");
-//        }
-//
-//        for (EdgeIteratorState state : startToDetourEntry.calcEdges()) {
-//            if (state.getEdge() == 17733429) {
-//                System.out.println("hit7");
-//            }
-//        }
-//
-//        for (EdgeIteratorState state : detourEntryToDetourExit.calcEdges()) {
-//            if (state.getEdge() == 17733429) {
-//                System.out.println("hit8");
-//            }
-//        }
-//
-//        for (EdgeIteratorState state : detourExitToEnd.calcEdges()) {
-//            if (state.getEdge() == 17733429) {
-//                System.out.println("hit9");
-//            }
-//        }
-//
-//        for (EdgeIteratorState state : directRouteStartEnd.calcEdges()) {
-//            if (state.getEdge() == 17733429) {
-//                System.out.println("hit10");
-//            }
-//        }
     }
 
     public Path getMergedPath(final QueryGraph queryGraph, final AlgorithmOptions algoOpts) {
@@ -122,7 +75,6 @@ public boolean isDetourSelfIntersecting(final QueryGraph queryGraph, final Algor
         mergePathIfNotDone(queryGraph, algoOpts);
 
         return checkForRedundantNodes();
-        // TODO: Selfintersecting: Complete route or detour part?
     }
 
     private void mergePathIfNotDone(QueryGraph queryGraph, AlgorithmOptions algoOpts) {
diff --git a/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java b/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java
index a9c5584b9a..59714e1089 100644
--- a/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java
+++ b/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java
@@ -483,9 +483,6 @@ public CHEdgeIteratorImpl(BaseGraph baseGraph, EdgeAccess edgeAccess, EdgeFilter
 
         @Override
         public final IntsRef getFlags() {
-            if (edgeId == 17733429) {
-                System.out.println("hit");
-            }
             checkShortcut(false, "getFlags");
             return super.getFlags();
         }
diff --git a/web/src/main/resources/assets/js/graphhopper/GHRequest.js b/web/src/main/resources/assets/js/graphhopper/GHRequest.js
index a91f8f6b18..4389259b96 100644
--- a/web/src/main/resources/assets/js/graphhopper/GHRequest.js
+++ b/web/src/main/resources/assets/js/graphhopper/GHRequest.js
@@ -30,6 +30,7 @@ if (!Function.prototype.bind) {
 var GHRequest = function (host, api_key) {
     this.host = host;
     this.route = new GHRoute(new GHInput(), new GHInput());
+    this.polygon = new GHRoute();
     this.from = this.route.first();
     this.to = this.route.last();
     this.features = {};
@@ -61,7 +62,8 @@ var GHRequest = function (host, api_key) {
 
 GHRequest.prototype.init = function (params) {
     for (var key in params) {
-        if (key === "point" || key === "mathRandom" || key === "do_zoom" || key === "layer" || key === "use_miles")
+        if (key === "point" || key === "mathRandom" || key === "do_zoom" || key === "layer" || key === "use_miles" ||
+        key === "polygon")
             continue;
 
         var val = params[key];
@@ -191,17 +193,34 @@ GHRequest.prototype.createPointParams = function (useRawInput) {
         else
             str += "point=" + encodeURIComponent(point.toString());
     }
+
+    for (i = 0, l = this.polygon.size(); i < l; i++) {
+        polygon = this.polygon.getIndex(i);
+        str += "&";
+        if (typeof polygon.input == 'undefined')
+            str += "polygon=";
+        else if (useRawInput)
+            str += "polygon=" + encodeURIComponent(polygon.input);
+        else
+            str += "polygon=" + encodeURIComponent(polygon.toString());
+    }
+
+
     return (str);
 };
 
 GHRequest.prototype.createPath = function (url, skipParameters) {
     for (var key in this.api_params) {
+    console.log(key)
+
         if(skipParameters && skipParameters[key])
             continue;
 
         var val = this.api_params[key];
         url += this.flatParameter(key, val);
     }
+    console.log(url)
+
     return url;
 };
 
diff --git a/web/src/main/resources/assets/js/graphhopper/GHRoute.js b/web/src/main/resources/assets/js/graphhopper/GHRoute.js
index 3b290f83a1..61b8a6f747 100644
--- a/web/src/main/resources/assets/js/graphhopper/GHRoute.js
+++ b/web/src/main/resources/assets/js/graphhopper/GHRoute.js
@@ -69,6 +69,8 @@ GHroute.prototype = {
         return this.length;
     },
     add: function (value, to) {
+        console.log(value);
+        console.log("lala");
         if (GHroute.isArray(value)) {
             for (var i = 0; i < value.length; i++) {
                 Array.prototype.push.call(this, (value[i] instanceof GHInput) ? value[i] : new GHInput(value[i]));
diff --git a/web/src/main/resources/assets/js/main-template.js b/web/src/main/resources/assets/js/main-template.js
index 47891ead8a..a431323cd7 100644
--- a/web/src/main/resources/assets/js/main-template.js
+++ b/web/src/main/resources/assets/js/main-template.js
@@ -163,7 +163,8 @@ $(document).ready(function (e) {
                 }
                 metaVersionInfo = messages.extractMetaVersionInfo(json);
 
-                mapLayer.initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, urlParams.layer, urlParams.use_miles);
+                mapLayer.initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, setPolygonCoord, urlParams.layer,
+                urlParams.use_miles);
 
                 // execute query
                 initFromParams(urlParams, true);
@@ -180,7 +181,7 @@ $(document).ready(function (e) {
                     "maxLat": 90
                 };
                 nominatim.setBounds(bounds);
-                mapLayer.initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, urlParams.layer, urlParams.use_miles);
+                mapLayer.initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, setPolygonCoord, urlParams.layer, urlParams.use_miles);
             });
 
     var language_code = urlParams.locale && urlParams.locale.split('-', 1)[0];
@@ -390,6 +391,22 @@ function setIntermediateCoord(e) {
     routeIfAllResolved();
 }
 
+function setPolygonCoord(e) {
+//    var routeLayers = mapLayer.getSubLayers("route");
+//    var routeSegments = routeLayers.map(function (rl) {
+//        return {
+//            coordinates: rl.getLatLngs(),
+//            wayPoints: rl.feature.properties.snapped_waypoints.coordinates.map(function (wp) {
+//                return L.latLng(wp[1], wp[0]);
+//            })
+//        };
+//    });
+    var index = ghRequest.polygon.size();
+    ghRequest.polygon.add(e.latlng.wrap(), index);
+//    resolveIndex(index);
+    routeIfAllResolved();
+}
+
 function deleteCoord(e) {
     var latlng = e.relatedTarget.getLatLng();
     ghRequest.route.removeSingle(latlng);
@@ -533,6 +550,7 @@ function routeLatLng(request, doQuery) {
     $("button#" + request.getVehicle().toLowerCase()).addClass("selectvehicle");
 
     var urlForAPI = request.createURL();
+    console.log(urlForAPI);
     routeResultsDiv.html('<img src="img/indicator.gif"/> Search Route ...');
     request.doRequest(urlForAPI, function (json) {
         routeResultsDiv.html("");
diff --git a/web/src/main/resources/assets/js/map.js b/web/src/main/resources/assets/js/map.js
index 04d2ec9346..7e4202bd47 100644
--- a/web/src/main/resources/assets/js/map.js
+++ b/web/src/main/resources/assets/js/map.js
@@ -5,6 +5,7 @@ var translate = require('./translate.js');
 var routingLayer;
 var map;
 var menuStart;
+var polyItem;
 var menuIntermediate;
 var menuEnd;
 var elevationControl = null;
@@ -47,7 +48,7 @@ function adjustMapSize() {
     // somehow this does not work: map.invalidateSize();
 }
 
-function initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, selectLayer, useMiles) {
+function initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, setPolygonCoord, selectLayer, useMiles) {
     adjustMapSize();
     // console.log("init map at " + JSON.stringify(bounds));
 
@@ -87,6 +88,13 @@ function initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, selec
         callback: setStartCoord,
         index: 0
     };
+        var _polyItem = {
+            text: "Add Polygon Coordinate",
+            icon: './img/marker-small-green.png',
+            callback: setPolygonCoord,
+            index: 3
+        };
+
     var _intItem = {
         text: translate.tr('set_intermediate'),
         icon: './img/marker-small-blue.png',
@@ -103,6 +111,7 @@ function initMap(bounds, setStartCoord, setIntermediateCoord, setEndCoord, selec
     menuStart = map.contextmenu.insertItem(_startItem, _startItem.index);
     menuIntermediate = map.contextmenu.insertItem(_intItem, _intItem.index);
     menuEnd = map.contextmenu.insertItem(_endItem, _endItem.index);
+    menuPoly = map.contextmenu.insertItem(_polyItem, _polyItem.index);
 
     var zoomControl = new L.Control.Zoom({
         position: 'topleft',
