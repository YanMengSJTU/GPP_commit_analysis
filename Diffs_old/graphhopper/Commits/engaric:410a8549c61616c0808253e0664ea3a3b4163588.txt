diff --git a/core/src/main/java/com/graphhopper/routing/util/FastestWithAvoidancesWeighting.java b/core/src/main/java/com/graphhopper/routing/util/FastestWithAvoidancesWeighting.java
index 0ed49d2d6f..99ae9fbe76 100644
--- a/core/src/main/java/com/graphhopper/routing/util/FastestWithAvoidancesWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/FastestWithAvoidancesWeighting.java
@@ -25,6 +25,7 @@ public double calcWeight( EdgeIteratorState edge, boolean reverse, int prevOrNex
 		try {
 			long extensionPointer = edge.getAdditionalField();
 			long wayType = extension.getAvoidanceFlags(extensionPointer);
+			wayType = encoder.getLong(wayType, AbstractAvoidanceDecorator.KEY);
 			if(bitMask!=0 && ((wayType & bitMask) > 0)) {
 				return Double.POSITIVE_INFINITY;
 			}
diff --git a/core/src/main/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeighting.java b/core/src/main/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeighting.java
index e7cefcf704..c0f289bbf0 100644
--- a/core/src/main/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeighting.java
@@ -24,6 +24,7 @@ public double calcWeight( EdgeIteratorState edge, boolean reverse, int prevOrNex
 		try {
 			long extensionPointer = edge.getAdditionalField();
 			long wayType = extension.getAvoidanceFlags(extensionPointer);
+			wayType = encoder.getLong(wayType, AbstractAvoidanceDecorator.KEY);
 			if(bitMask!=0 && ((wayType & bitMask) > 0)) {
 				return Double.POSITIVE_INFINITY;
 			}
diff --git a/core/src/main/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeighting.java b/core/src/main/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeighting.java
index dd317cea79..f4e0c64306 100644
--- a/core/src/main/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeighting.java
@@ -26,6 +26,7 @@ public double calcWeight( EdgeIteratorState edge, boolean reverse, int prevOrNex
 		try {
 			long extensionPointer = edge.getAdditionalField();
 			long wayType = extension.getAvoidanceFlags(extensionPointer);
+			wayType = encoder.getLong(wayType, AbstractAvoidanceDecorator.KEY);
 			if(bitMask!=0 && ((wayType & bitMask) > 0)) {
 				return Double.POSITIVE_INFINITY;
 			}
diff --git a/core/src/test/java/com/graphhopper/routing/util/FastestWithAvoidancesWeightingTest.java b/core/src/test/java/com/graphhopper/routing/util/FastestWithAvoidancesWeightingTest.java
index b92196497a..19f9d087f4 100644
--- a/core/src/test/java/com/graphhopper/routing/util/FastestWithAvoidancesWeightingTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/FastestWithAvoidancesWeightingTest.java
@@ -96,8 +96,11 @@ private void configureSpeeds() {
 		when(encoder.getSpeed(anyLong())).thenReturn(50D);
 	}
 	
+	/**
+	* Confirms flags are retrieved from extension and then decoded to expected value.
+	*/
 	private OngoingStubbing<Long> expectStoredAvoidance() {
-		return when(avoidanceExtension.getAvoidanceFlags(anyLong()));
+		when(avoidanceExtension.getAvoidanceFlags(anyLong())).thenReturn(88L);
+		return when(encoder.getLong(eq(88L), eq(AbstractAvoidanceDecorator.KEY)));
 	}
-
 }
diff --git a/core/src/test/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeightingTest.java b/core/src/test/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeightingTest.java
index f39dc09163..fb5036071d 100644
--- a/core/src/test/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeightingTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/PriorityWithAvoidancesWeightingTest.java
@@ -98,9 +98,11 @@ private void configureSpeedsAndPriority() {
 		when(encoder.getDouble(anyLong(), eq(101))).thenReturn(10D);
 	}
 	
+	/**
+	* Confirms flags are retrieved from extension and then decoded to expected value.
+	*/
 	private OngoingStubbing<Long> expectStoredAvoidance() {
-		return when(avoidanceExtension.getAvoidanceFlags(anyLong()));
+		when(avoidanceExtension.getAvoidanceFlags(anyLong())).thenReturn(88L);
+		return when(encoder.getLong(eq(88L), eq(AbstractAvoidanceDecorator.KEY)));
 	}
-	
-
 }
diff --git a/core/src/test/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeightingTest.java b/core/src/test/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeightingTest.java
index ac48627677..3a13c50531 100644
--- a/core/src/test/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeightingTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/ShortestWithAvoidancesWeightingTest.java
@@ -97,8 +97,11 @@ private void configureSpeeds() {
 		when(encoder.getSpeed(anyLong())).thenReturn(50D);
 	}
 	
+	/**
+	* Confirms flags are retrieved from extension and then decoded to expected value.
+	*/
 	private OngoingStubbing<Long> expectStoredAvoidance() {
-		return when(avoidanceExtension.getAvoidanceFlags(anyLong()));
+		when(avoidanceExtension.getAvoidanceFlags(anyLong())).thenReturn(88L);
+		return when(encoder.getLong(eq(88L), eq(AbstractAvoidanceDecorator.KEY)));
 	}
-
 }
