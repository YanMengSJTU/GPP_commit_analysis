diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java
index db69496d43..e7b0ded7cc 100644
--- a/core/src/main/java/com/graphhopper/GraphHopper.java
+++ b/core/src/main/java/com/graphhopper/GraphHopper.java
@@ -593,7 +593,11 @@ protected DataReader importData() throws IOException
 
     protected DataReader createReader( GraphStorage tmpGraph )
     {
-        return initOSMReader(new OSMReader(tmpGraph));
+        return initOSMReader(newReader(tmpGraph));
+    }
+
+    protected OSMReader newReader(GraphStorage tmpGraph) {
+      return new OSMReader(tmpGraph);
     }
 
     protected OSMReader initOSMReader( OSMReader reader )
diff --git a/core/src/main/java/com/graphhopper/reader/OSMReader.java b/core/src/main/java/com/graphhopper/reader/OSMReader.java
index b00983edbc..e6a5f22948 100644
--- a/core/src/main/java/com/graphhopper/reader/OSMReader.java
+++ b/core/src/main/java/com/graphhopper/reader/OSMReader.java
@@ -160,7 +160,7 @@ public void readGraph() throws IOException
      * Preprocessing of OSM file to select nodes which are used for highways. This allows a more
      * compact graph data structure.
      */
-    void preProcess( File osmFile )
+    protected void preProcess( File osmFile )
     {
         OSMInputFile in = null;
         try
@@ -263,7 +263,7 @@ boolean filterWay( OSMWay item )
     /**
      * Creates the edges and nodes files from the specified osm file.
      */
-    private void writeOsm2Graph( File osmFile )
+    protected void writeOsm2Graph( File osmFile )
     {
         int tmp = (int) Math.max(getNodeMap().getSize() / 50, 100);
         logger.info("creating graph. Found nodes (pillar+tower):" + nf(getNodeMap().getSize()) + ", " + Helper.getMemInfo());
@@ -531,7 +531,7 @@ private void processNode( OSMNode node )
         }
     }
 
-    boolean addNode( OSMNode node )
+    protected boolean addNode( OSMNode node )
     {
         int nodeType = getNodeMap().get(node.getId());
         if (nodeType == EMPTY)
@@ -890,7 +890,7 @@ boolean isInBounds( OSMNode node )
     /**
      * Maps OSM IDs (long) to internal node IDs (int)
      */
-    LongIntMap getNodeMap()
+    protected LongIntMap getNodeMap()
     {
         return osmNodeIdToInternalNodeMap;
     }
