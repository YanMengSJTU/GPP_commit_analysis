diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
index 6de1eba30c..8a69eb4152 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
@@ -1,5 +1,6 @@
 package uk.co.ordnancesurvey.gpx.graphhopper;
 
+import java.util.ArrayList;
 import java.util.HashSet;
 
 import org.alternativevision.gpx.beans.Waypoint;
@@ -39,7 +40,7 @@ public boolean isWayPointinpath(Waypoint w) {
 
 	}
 
-	public boolean isWayPointinPath(Waypoint we, HashSet<Waypoint> wa) {
+	public boolean isWayPointinPath(Waypoint we, ArrayList<Waypoint> wa) {
 		boolean iswaypointinPath = false;
 
 		for (Waypoint waypoint : wa) {
@@ -106,7 +107,7 @@ public void verifyStatusCode(int statusCode) {
 
 	}
 
-	public HashSet<Waypoint> getJsonCoordinatesAsHashSet() {
+	public ArrayList<Waypoint> getJsonCoordinatesAsArrayList() {
 
 		parser.parseCoordinatesFromJson();
 		return parser.getJsonWayPoints();
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
index be3acc2c45..c2fa72a437 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
@@ -1,7 +1,6 @@
 package uk.co.ordnancesurvey.gpx.graphhopper;
 
-import java.util.HashSet;
-import java.util.Locale;
+import java.util.ArrayList;
 
 import org.alternativevision.gpx.beans.Waypoint;
 import org.slf4j.Logger;
@@ -26,7 +25,7 @@
 	private static final Logger LOG = LoggerFactory.getLogger(JSONParser.class);
 
 	String JSONString;
-	HashSet<Waypoint> wayPoints = new HashSet<Waypoint>();
+	ArrayList<Waypoint> wayPoints = new ArrayList<Waypoint>();
 
 	/**
 	 * Adds a WayPoint to the Instructions ArrayList(WayPoint List)
@@ -42,7 +41,7 @@ public void addWayPoint(Waypoint w) {
 	/**
 	 * @return List of WayPoints in a JSON Route String
 	 */
-	public HashSet<Waypoint> getWayPoints() {
+	public ArrayList<Waypoint> getWayPoints() {
 		return wayPoints;
 	}
 
@@ -75,7 +74,7 @@ public JsonArray getInstructions() {
 		return instructions;
 	}
 
-	public HashSet<Waypoint> getJsonWayPoints() {
+	public ArrayList<Waypoint> getJsonWayPoints() {
 		return getWayPoints();
 	}
 
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 914e6d793b..cda655fe9c 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -580,7 +580,7 @@ public void isTrackPointonRouteMap(List<Map<String, String>> trackPointsList)
 
 			else {
 				assertTrue(GPHJSONUtil.isWayPointinPath(trackPoint,
-						GPHJSONUtil.getJsonCoordinatesAsHashSet()));
+						GPHJSONUtil.getJsonCoordinatesAsArrayList()));
 
 			}
 
@@ -604,7 +604,7 @@ public void isTrackPointNotonRouteMap(
 
 			else {
 				assertTrue(!GPHJSONUtil.isWayPointinPath(trackPoint,
-						GPHJSONUtil.getJsonCoordinatesAsHashSet()));
+						GPHJSONUtil.getJsonCoordinatesAsArrayList()));
 
 			}
 
diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index 139e963174..64f1574264 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -9,15 +9,14 @@ Feature: Verify a route from A to B
       | pointA              | pointB             |
       | 53.176062,-1.871472 | 53.154773,-1.77272 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc             | azimuth | direction | time  | distance | avoidance |
       | 1             | 53.176154,-1.870867 | Continue onto Minor Road | 165.0   | S         | 79514 | 110.4    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Chatswoth Park)
@@ -25,7 +24,6 @@ Feature: Verify a route from A to B
       | pointA              | pointB              |
       | 53.211013,-1.619393 | 53.185757,-1.611969 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time  | distance | avoidance |
@@ -33,8 +31,8 @@ Feature: Verify a route from A to B
       | 8             | 53.189832,-1.619443 | Turn left onto Church Lane          | 141.0   | SE        | 90545 | 125.8    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType |
+      | foot        | 
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Musden Low)
@@ -42,47 +40,43 @@ Feature: Verify a route from A to B
       | pointA              | pointB              |
       | 53.049589,-1.823866 | 53.076372,-1.853379 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time   | distance | avoidance |
       | 3             | 53.047941,-1.841795 | Turn right onto Back Lane | 340.0   | N         | 347789 | 483.0    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
-
-  @Routing
+      | vehicleType | 
+      | foot        | 
+  @Routing 
   Scenario Outline: Verify  Road Names on a Walking Route (A54)
     Given I have route point as
       | pointA              | pointB              |
       | 53.173064,-2.060321 | 53.214387,-2.017271 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time   | distance | avoidance |
-      | 4             | 53.176842,-2.069334 | Turn right onto Private Road | 1.0     | N         | 919954 | 1277.7   |           |
+      | 4             | 53.173378,-2.055851 | Turn left onto Minor Road | 354.0     | N         | 1013604 | 1407.8   |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType |
+      | foot        |  
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  Road Names on a Walking Route (Townhead )
     Given I have route point as
       | pointA              | pointB             |
       | 53.122676,-1.909914 | 53.088159,-1.87142 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance | avoidance |
-      | 5             | 53.11862,-1.909506 | Turn slight left onto Route | 169.0   | S         | 51007 | 70.8     |           |
+      | 5             | 53.120175,-1.903512 | Turn right onto Private Road | 223.0   | SW         | 116587 | 161.9     |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType |
+      | foot        | 
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Martin's Low)
@@ -90,15 +84,14 @@ Feature: Verify a route from A to B
       | pointA             | pointB              |
       | 53.06535,-1.906169 | 53.100994,-1.956274 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc         | azimuth | direction | time   | distance | avoidance |
       | 3             | 53.071624,-1.914417 | Turn right onto Path | 356.0   | N         | 425697 | 591.2    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Castleton Road)
@@ -106,15 +99,14 @@ Feature: Verify a route from A to B
       | pointA              | pointB              |
       | 53.348832,-1.761122 | 53.197338,-1.594157 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.347406,-1.760973 | Turn left onto Castleton Road | 109.0   | E         | 550345 | 764.4    | ARoad     |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Hernstone Lane )
@@ -122,15 +114,14 @@ Feature: Verify a route from A to B
       | pointA              | pointB              |
       | 53.300714,-1.786126 | 53.287803,-1.816746 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time    | distance | avoidance |
       | 3             | 53.300719,-1.784239 | Turn sharp right onto Manchester Road | 208.0   | SW        | 1000566 | 1389.7   |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Monyash Road)
@@ -138,31 +129,29 @@ Feature: Verify a route from A to B
       | pointA              | pointB              |
       | 53.194909,-1.710481 | 53.156696,-1.634947 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.195479,-1.701857 | Continue onto Monyash Road | 93.0    | E         | 199214 | 276.7    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  Road Names on a Walking Route (Whitfield lane)
     Given I have route point as
       | pointA              | pointB              |
       | 53.142876,-1.642599 | 53.163897,-1.714249 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance | avoidance |
-      | 4             | 53.143286,-1.647841 | Turn right onto Elton Road | 282.0   | W         | 195384 | 271.4    |           |
+      | 4             | 53.141751,-1.64261 | Turn right onto Elton Road | 334.0   | NW         | 490430 | 681.2    |           |
 
-    Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+  Examples: 
+      | vehicleType |
+      | foot        |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Cardlemere Lane)
@@ -170,15 +159,14 @@ Feature: Verify a route from A to B
       | pointA              | pointB             |
       | 53.114295,-1.762789 | 53.086961,-1.69626 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time   | distance | avoidance |
       | 5             | 53.088126,-1.734515 | Turn slight left onto Dam Lane | 83.0    | E         | 242473 | 336.8    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | 
+      | foot        | 
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Old Coalpit Lane)
@@ -186,8 +174,7 @@ Feature: Verify a route from A to B
       | pointA              | pointB            | pointC              |
       | 53.184738,-1.780104 | 53.1651,-1.776435 | 53.130965,-1.835199 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
-    When I request for a route
+     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.169799,-1.780276 | Turn left onto A Road            | 153.0   | SE        | 42081  | 58.4     | ARoad     |
@@ -195,8 +182,8 @@ Feature: Verify a route from A to B
       | 15            | 53.130361,-1.834063 | Turn sharp right onto Minor Road | 325.0   | NW        | 71716  | 99.6     |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Newhouses Farm)
@@ -204,24 +191,23 @@ Feature: Verify a route from A to B
       | pointA              | pointB             | pointC              |
       | 53.286725,-1.811501 | 53.28261,-1.761964 | 53.233207,-1.633878 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
-    When I request for a route
+     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
       | 5             | 53.279914,-1.775093 | Turn right onto Manchester Road | 96.0    | E         | 9059   | 12.6     |           |
       | 11            | 53.282733,-1.761774 | Continue onto Conjoint Lane     | 132.0   | SE        | 608458 | 845.1    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | 
+      | foot        | 
 
-  @Routing
+  @Routing 
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Bakewell)
     Given I have route point as
       | pointA              | pointB              | pointC              |
       | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
+   
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time   | distance | avoidance |
@@ -229,8 +215,8 @@ Feature: Verify a route from A to B
       | 12            | 53.195118,-1.761669 | Continue onto Church Street | 38.0    | NE        | 897815 | 1247.0   |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | 
+      | foot        |  
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Mill Lane)
@@ -238,7 +224,6 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | pointC             | pointD              |
       | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
@@ -247,8 +232,8 @@ Feature: Verify a route from A to B
       | 33            | 53.181282,-1.869038 | Turn left onto Market Place     | 315.0   | NW        | 791    | 1.1      |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Tag Lane)
@@ -256,7 +241,6 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | pointC              | pointD              |
       | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time    | distance | avoidance |
@@ -265,8 +249,8 @@ Feature: Verify a route from A to B
       | 26            | 53.2788,-1.771289   | Continue onto Whitecross Road    | 58.0    | NE        | 357520  | 496.6    |           |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | avoidances |
+      | foot        |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Dowlow Farm)
@@ -274,35 +258,35 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | pointC              | pointD             |
       | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
+   
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time    | distance | avoidance |
-      | 2             | 53.206014,-1.83483  | Turn right onto Midshires Way    | 191.0   | S         | 265210  | 368.3    |           |
-      | 20            | 53.196243,-1.857282 | Turn sharp left onto Minor Road  | 111.0   | E         | 1156273 | 1605.9   |           |
-      | 43            | 53.148266,-1.867183 | Turn sharp right onto Minor Road | 261.0   | W         | 246565  | 342.5    |           |
+      | 2             |53.207216,-1.839828 | Turn sharp left onto Route    | 190.0   | S         | 130059  | 180.6    |           |
+      | 20            | 53.175759,-1.856343 | Continue onto Path  | 198.0   | S         | 393156 | 546.1   |           |
+      | 38            | 53.129146,-1.866738 | Continue onto Cheadle Road | 179.0   | S         | 171195  | 237.8    |           |
 
-    Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+ Examples: 
+      | vehicleType | 
+      | foot        | 
 
   # Avoidances : A Road,Boulders,Cliff,Inland Water,Marsh,Quarry Or Pit,Scree,Rock,Mud,Sand,Shingle
   #scree
-  @Routing
+  @Routing 
   Scenario Outline: Verify DPN Route without Scree avoidance -(scree)
     Given I have route point as
       | pointA              | pointB              |
       | 53.202622,-1.787557 | 53.188642,-1.720999 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
+   
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time   | distance | avoidance |
       | 11            | 53.189871,-1.744722 | Continue onto Path | 112.0   | SE        | 253051 | 351.5    | Scree     |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType |
+      | foot        |
 
   @Routing
   Scenario Outline: Verify DPN Route with Scree avoidance -(scree)
@@ -319,7 +303,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | foot        | Scree      | fastavoid |
+      | foot        | Scree      | fastest   |
 
   #cliff
   @Routing
@@ -335,8 +319,8 @@ Feature: Verify a route from A to B
       | 4             | 53.311409,-1.627165 | Continue onto Route | 178.0   | S         | 2655 | 3.7      | Cliff     |
 
     Examples: 
-      | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | vehicleType | routeType |
+      | foot        | fastest   |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
@@ -353,7 +337,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | foot        | Cliff      | fastavoid |
+      | foot        | Cliff      | fastest   |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
@@ -371,7 +355,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | foot        |            | fastest   |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
@@ -390,7 +374,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | foot        | Cliff      | fastavoid |
+      | foot        | Cliff      | fastest   |
 
   #boulders
   @Routing
@@ -407,7 +391,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | foot        |            |           |
+      | foot        |            | fastest   |
 
   @Routing
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
@@ -424,10 +408,10 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | foot        | Boulders   | fastavoid |
+      | foot        | Boulders   | fastest   |
 
   #Marsh
-  @Routing
+  @Routing 
   Scenario Outline: Verify DPN Route with avoidance -(Marsh)
     Given I have route point as
       | pointA              | pointB              |
@@ -436,17 +420,18 @@ Feature: Verify a route from A to B
     And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     When I request for a route
-    Then I should be able to verify the waypoints not on the route map:
+    Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time  | distance | avoidance |
-      | 4             | 53.578173,-1.920445 | Turn sharp right onto Wessenden Road | 185.0   | S         | 45731 | 63.5     | Marsh     |
-
-    Examples: 
+      | 4             | 53.578173,-1.920445 | Turn sharp right onto Wessenden Road | 185.0   | S         | 45731 | 63.5     |      |
+ 
+ 
+   Examples: 
       | vehicleType | avoidances | routeType |
-      | foot        | Marsh      | fastavoid |
+      | foot        | Marsh      | fastest   |
 
   #Quarry Or Pit
   @Routing
-  Scenario Outline: Verify DPN Route with avoidance -(Quarry Or Pit)
+  Scenario Outline: Verify  DPN Route with avoidance -(Quarry Or Pit)
     Given I have route point as
       | pointA              | pointB              |
       | 53.348269,-2.061068 | 53.318817,-2.069958 |
@@ -454,13 +439,13 @@ Feature: Verify a route from A to B
     And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     When I request for a route
-    Then I should be able to verify the waypoints not on the route map:
+    Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time   | distance | avoidance     |
-      | 8             | 53.329862,-2.078685 | Turn slight left onto Shrigley Road | 184.0   | S         | 728997 | 1012.5   | Quarry Or Pit |
+      | 8             | 53.329862,-2.078685 | Turn slight left onto Shrigley Road | 184.0   | S         | 728997 | 1012.5   |  |
 
     Examples: 
       | vehicleType | avoidances    | routeType |
-      | foot        | Quarry Or Pit | fastavoid |
+      | foot        | Quarry Or Pit | fastest   |
 
   #Multiple Avoidance
   @Routing
@@ -472,14 +457,14 @@ Feature: Verify a route from A to B
     And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
     When I request for a route
-    Then I should be able to verify the waypoints not on the route map:
+    Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time   | distance | avoidance |
-      | 1             | 53.31462,-1.554123  | Continue onto Moss Road               | 274.0   | W         | 426191 | 591.9    | A Road    |
-      | 15            | 53.341682,-1.612202 | Turn slight left onto Ringinglow Road | 195.0   | S         | 52520  | 72.9     | Boulders  |
+      | 1             | 53.31462,-1.554123  | Continue onto Moss Road               | 274.0   | W         | 426191 | 591.9    |    |
+      | 15            | 53.341682,-1.612202 | Turn slight left onto Ringinglow Road | 195.0   | S         | 52520  | 72.9     |   |
 
     Examples: 
       | vehicleType | avoidances      | routeType |
-      | foot        | Boulders,A Road | fastavoid |
+      | foot        | Boulders,A Road | fastest   |
 
   @Routing
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
@@ -497,7 +482,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances     | routeType |
-      | foot        | Boulders,Cliff | fastavoid |
+      | foot        | Boulders,Cliff | fastest   |
 
   # MOUNTAIN BIKE
   #(ARoad, InlandWater, Boulders, Cliff, Scree, Marsh, Quarry or Pit)
@@ -507,58 +492,54 @@ Feature: Verify a route from A to B
       | pointA              | pointB              |
       | 53.298525,-1.679533 | 53.203145,-1.799292 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time   | distance | avoidance         |
-      | 1             | 53.297007,-1.679015 | Continue onto Sir William Hill Road | 257.0   | W         | 100235 | 501.2    | cycleway, unpaved |
+      | 1             | 53.297007,-1.679015 | Continue onto Sir William Hill Road | 257.0   | W         | 298064 | 1490.3   | cycleway|
 
     Examples: 
-      | vehicleType  | avoidances | routeType |
-      | mountainbike |            |           |
+      | vehicleType  |
+      | mountainbike |
 
   #InlandWater
-  @Routing
+  @Routing 
   Scenario Outline: Verify DPN Route with out avoidance -(InlandWater)
     Given I have route point as
       | pointA              | pointB              |
       | 53.334174,-1.936591 | 53.182547,-1.824527 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance   |
       | 4             | 53.348198,-1.933166 | Continue onto Route | 33.0    | NE        | 3799 | 4.2      | InlandWater |
 
     Examples: 
-      | vehicleType  | avoidances | routeType |
-      | mountainbike |            |           |
+      | vehicleType  |
+      | mountainbike |
 
   # ARoad
-  @Routing
+  @Routing 
   Scenario Outline: Verify DPN Route without  avoidance -(A Road )
     Given I have route point as
       | pointA              | pointB              |
       | 53.288886,-1.980339 | 53.311846,-1.783654 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time    | distance | avoidance |
       | 5             | 53.277954,-1.981109 | Turn left onto Minor Road | 155.0   | SE        | 1125018 | 5625.1   | cycleway  |
 
     Examples: 
-      | vehicleType  | avoidances | routeType |
-      | mountainbike |            |           |
+      | vehicleType  |
+      | mountainbike |
 
   #InlandWater , Scree
-  @Routing
+  @Routing 
   Scenario Outline: Verify DPN Route with out avoidance -(InlandWater , Scree)
     Given I have route point as
       | pointA              | pointB              |
       | 54.156158,-2.337516 | 54.175403,-2.233866 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance | avoidance   |
@@ -566,25 +547,24 @@ Feature: Verify a route from A to B
       | 4             | 54.154148,-2.326061 | Turn slight left onto Path | 92.0    | E         | 240237 | 266.9    | Scree       |
 
     Examples: 
-      | vehicleType  | avoidances | routeType |
-      | mountainbike |            |           |
+      | vehicleType  |
+      | mountainbike |
 
   # QuarryOrPit
-  @Routing
+  @Routing 
   Scenario Outline: Verify DPN Route without  avoidance -(QuarryOrPit )
     Given I have route point as
       | pointA            | pointB              |
       | 53.328689,-2.0808 | 53.318817,-2.069958 |
     And I have vehicle as "<vehicleType>"
-    And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance | avoidance   |
       | 5             | 53.329358,-2.074421 | Continue onto Path | 91.0    | E         | 73446 | 81.6     | QuarryOrPit |
 
     Examples: 
-      | vehicleType  | avoidances | routeType |
-      | mountainbike |            |           |
+      | vehicleType  |
+      | mountainbike |
 
   # A Road
   @Routing
@@ -602,7 +582,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType  | avoidances | routeType |
-      | mountainbike | A Road     | fastavoid |
+      | mountainbike | A Road     | fastest   |
 
   #InlandWater
   @Routing
@@ -620,7 +600,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType  | avoidances  | routeType |
-      | mountainbike | InlandWater | fastavoid |
+      | mountainbike | InlandWater | fastest   |
 
   #Boulders
   @Routing
@@ -638,7 +618,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType  | avoidances | routeType |
-      | mountainbike | Boulders   | fastavoid |
+      | mountainbike | Boulders   | fastest   |
 
   #Cliff
   @Routing
@@ -656,7 +636,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType  | avoidances | routeType |
-      | mountainbike | Cliff      | fastavoid |
+      | mountainbike | Cliff      | fastest   |
 
   #2 intermediate waypoints for mountainbike
   @Routing
@@ -674,8 +654,8 @@ Feature: Verify a route from A to B
       | 16            | 54.257446,-2.215557 | Continue onto Oughtershaw Road      | 138.0   | SE        | 116685 | 162.1    |           |
 
     Examples: 
-      | vehicleType  | avoidances | routeType |
-      | mountainbike |            |           |
+      | vehicleType  |
+      | mountainbike |
 
   # Pembrokeshire Coast National Park(fastest and shortest)
   @Routing
@@ -691,8 +671,8 @@ Feature: Verify a route from A to B
       | 6             | 51.857225,-4.967991 | Turn left onto A Road | 177.0   | S         | 732342 | 3661.7   | ARoad     |
 
     Examples: 
-      | vehicleType  | avoidances | routeType |
-      | mountainbike |            | fastest   |
+      | vehicleType  |
+      | mountainbike |
 
   @Routing
   Scenario Outline: Verify DPN Route without avoidance -(Pembrokeshire Coast National Park )
@@ -1213,3 +1193,78 @@ Feature: Verify a route from A to B
     Examples: 
       | vehicleType | avoidances | routeType |
       | foot        |            | fastest   |
+
+  # BNG and WGS 84
+  @Routing
+  Scenario Outline: Verify DPN Route without avoidance -(Exmoor National Park )
+    Given I have route point as
+      | pointA              | pointB              |
+      | 51.206305,-3.683483 | 51.195761,-3.848208 |
+    And I have vehicle as "<vehicleType>"
+    And I have weighting as "<routeType>"
+    And I have srs as "WGS84"
+    And I have output_srs as "WGS84"
+    When I request for a route
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco         | waypointdesc             | azimuth | direction | time | distance | avoidance   |
+      | 3             | 51.215963,-3.73078 | Continue onto Minor Road | 285.0   | W         | 4538 | 22.7     | InlandWater |
+
+    Examples: 
+      | vehicleType  | avoidances | routeType |
+      | mountainbike |            | fastest   |
+
+  @Routing
+  Scenario Outline: Verify DPN Route without avoidance -(Exmoor National Park )
+    Given I have route point as
+      | pointA        | pointB        |
+      | 282492,146580 | 270956,145684 |
+    And I have vehicle as "<vehicleType>"
+    And I have weighting as "<routeType>"
+    And I have srs as "BNG"
+    And I have output_srs as "BNG"
+    When I request for a route
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco                  | waypointdesc        | azimuth | direction | time | distance | avoidance   |
+      | 4             | 281439.280111,146371.327562 | Continue onto Track | 266.0   | W         | 2620 | 3.6      | InlandWater |
+
+    Examples: 
+      | vehicleType | avoidances | routeType |
+      | foot        |            | fastest   |
+
+  @Routing
+  Scenario Outline: Verify DPN Route without avoidance -(Exmoor National Park )
+    Given I have route point as
+      | pointA              | pointB              |
+      | 51.206305,-3.683483 | 51.195761,-3.848208 |
+    And I have vehicle as "<vehicleType>"
+    And I have weighting as "<routeType>"
+    And I have srs as "WGS84"
+    And I have output_srs as "BNG"
+    When I request for a route
+
+    Then I should be able to verify the waypoints on the route map:
+
+      | wayPointIndex | waypointco                   | waypointdesc             | azimuth | direction | time   | distance | avoidance |
+      | 3             | 282414.462523, 146543.039233 | Continue onto Minor Road | 259.0   | W         | 588882 | 2944.4   | cycleway  |
+
+    Examples: 
+      | vehicleType  | avoidances | routeType |
+      | mountainbike |            | fastest   |
+
+  @Routing
+  Scenario Outline: Verify DPN Route without avoidance -(Exmoor National Park )
+    Given I have route point as
+      | pointA        | pointB        |
+      | 282492,146580 | 270956,145684 |
+    And I have vehicle as "<vehicleType>"
+    And I have weighting as "<routeType>"
+    And I have srs as "BNG"
+    And I have output_srs as "WGS84"
+    When I request for a route
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance   |
+      | 4             | 51.204211,-3.698476 | Continue onto Track | 266.0   | W         | 2620 | 3.6      | InlandWater |
+
+    Examples: 
+      | vehicleType | avoidances | routeType |
+      | foot        |            | fastest   |
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
index dad0440fd8..80b542c967 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
@@ -305,7 +305,7 @@ Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
 
     Examples: 
       | errorMessage                                  | statusCode |
-      | Srs ABC is not a valid output_srs for output. | 400        |
+      | Srs abc is not a valid srs for output. | 400        |
 
   @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "private "
@@ -377,6 +377,40 @@ Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
       | car         |            | fastest   | GET        | json           | OK                 | 200        |
       | car         |            | fastest   | OPTIONS    | json           | OK                 | 200        |
 
+  @Routing @Current
+  Scenario Outline: Verify  a route for emergencey services on a(Transit through Springfield-private true )
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.733653,-3.523541 | 50.732695,-3.520218 |
+    And I have vehicle as "emv"
+    And I have private as "true"
+    And I have srs as "BNG"
+    And I have output_srs as "WGS84"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                             | statusCode |
+      | Cannot find point 0: 50.733653,-3.523541 | 400        |
+
+  @Routing
+  Scenario Outline: Verify  a route for non-emergencey services on a(Transit through Springfield-private true )
+    Given I have route point as
+      | pointA       | pointB       |
+      | 93778,292579 | 93667,292811 |
+    And I have vehicle as "car"
+    And I have private as "true"
+    And I have srs as "WGS84"
+    And I have output_srs as "BNG"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                      | statusCode |
+      | Cannot find point 0: 93778,292579 | 400        |
+
   # Nearest Point : Invalid Parameter Value "point"
   @ErrorMessages
   Scenario Outline: Verify  nearest point of point using NearestPoint API
@@ -444,7 +478,7 @@ Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
       | zh_CN  |
 
   # Parameter :  weighting
-  @ErrorMessages @Smoke @Current
+  @ErrorMessages @Smoke
   Scenario Outline: Valid Parameter Values for "weighting"
     Given I have route point as
       | pointA              | pointB              |
@@ -622,7 +656,7 @@ Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
     And I have instructions as "true"
     And I have algorithm as "astar"
     And I have type as "json"
-    And I have type as "<SRS>"
+    And I have srs as "<SRS>"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
     Then I should be able to verify the http statuscode as "200"
@@ -672,7 +706,7 @@ Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
     And I have algorithm as "astar"
     And I have type as "json"
     And I have srs as "WGS84"
-    And I have private "<private>"
+    And I have private as "<private>"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
     Then I should be able to verify the http statuscode as "200"
@@ -697,7 +731,7 @@ Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
     And I have algorithm as "astar"
     And I have type as "json"
     And I have srs as "WGS84"
-    And I have private "<pretty>"
+    And I have pretty as "<pretty>"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
     Then I should be able to verify the http statuscode as "200"
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
index 2039cb953c..5cf180be92 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
@@ -13,7 +13,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.719156,-3.537811 | Continue onto A3015 (FROG STREET) | 41.0    | NE        | 13259 | 221.8    |           |
+      | 2             | 50.719156,-3.537811 | Continue onto A3015 (FROG STREET) | 41.0    | NE        | 14471 | 221.8    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -28,8 +28,8 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.717806,-3.54264 | Turn left onto BULLER ROAD | 137.0   | SE        | 4467 | 55.8     |           |
+      | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.717806,-3.54264 | Turn right onto BULLER ROAD | 317.0   | NW        | 7273 | 97.0     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -45,7 +45,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
-      | 4             | 50.718462,-3.541302 | Turn left onto CLEVELAND STREET | 232.0   | SW        | 9534 | 119.2    |           |
+      | 4             | 50.718462,-3.541302 | Turn left onto CLEVELAND STREET | 232.0   | SW        | 8938 | 119.2    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -61,7 +61,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time | distance | avoidance |
-      | 4             | 50.726689,-3.52712 | Turn left onto LONGBROOK STREET | 190.0   | S         | 6267 | 78.3     |           |
+      | 4             | 50.726689,-3.52712 | Turn left onto LONGBROOK STREET | 190.0   | S         | 5875 | 78.3     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -101,7 +101,7 @@ Feature: Verify a route from A to B
 
   # No Entry Restrictions
   @Routing
-  Scenario Outline: Verify  No Entry  Restrictions on a Route (High Street(London Inn Square)-Exeter)
+  Scenario Outline: Verify  No Entry  Restrictions on a Route (High Street (London Inn Square)-Exeter)
     Given I have route point as
       | pointA              | pointB             |
       | 50.725425,-3.526925 | 50.72442,-3.532756 |
@@ -110,7 +110,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                                 | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.725549,-3.52693 | Turn slight left onto NEW NORTH ROAD (B3183) | 285.0   | W         | 57545 | 729.1    |           |
+      | 2             | 50.725549,-3.52693 | Turn slight left onto NEW NORTH ROAD (B3183) | 285.0   | W         | 52835 | 729.1    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -126,7 +126,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.727244,-3.522476 | Turn left onto SUMMERLAND STREET | 313.0   | NW        | 5223 | 65.3     |           |
+      | 2             | 50.727244,-3.522476 | Turn left onto SUMMERLAND STREET | 313.0   | NW        | 4897 | 65.3     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -141,15 +141,16 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
-      | 4             | 50.726418,-3.52381 | Turn left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    |           |
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 4             | 50.726418,-3.52381 | Turn left onto BAMPFYLDE STREET | 45.0    | NE        | 9853 | 131.4    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  # No Turns Restrictions and Roundabout
-  @Routing
+  # No Turns Restrictions 
+  # Below test failing as it is going through no turn and and has been reported in jira as [ROUTE-198]
+  @Routing @KnownIssues
   Scenario Outline: Verify  No Turn  Restrictions on a Route (Western Way-Exeter)
     Given I have route point as
       | pointA              | pointB              |
@@ -165,8 +166,9 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing
-  Scenario Outline: Verify  No Turn Restriction (Denmark Road-Exeter)
+  # Below test failing as it is going through no entry and has been reported in jira as [ROUTE-199]
+  @Routing @KnownIssues
+  Scenario Outline: Verify  No entry Restriction (Denmark Road-Exeter)
     Given I have route point as
       | pointA              | pointB              |
       | 50.724901,-3.521588 | 50.724524,-3.520923 |
@@ -225,13 +227,14 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 133.0   | SE        | 564  | 7.1      |           |
+      | 2             | 50.726462,-3.523882 | Continue onto CHEEKE STREET | 133.0   | SE        | 529  | 7.1      |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing
+  #Test failing as it is going through no entry instead of taking the mandatory turn [ROUTE-199]
+  @Routing @KnownIssues
   Scenario Outline: Verify  Mandatory Turn at Exeter area(DENMARK ROAD)
     Given I have route point as
       | pointA              | pointB              |
@@ -263,7 +266,8 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing
+
+  @Routing @KnownIssues
   Scenario Outline: Verify  Mandatory Turn Restriction (Denmark Road-Exeter)
     Given I have route point as
       | pointA              | pointB             |
@@ -272,8 +276,8 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.724703,-3.520835 | Turn right onto HEAVITREE ROAD (B3183) | 293.0   | NW        | 1118 | 10.9     |           |
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time  | distance | avoidance |
+      | 2             | 50.724703,-3.520835 | Turn right onto HEAVITREE ROAD (B3183) | 113.0   | SE        | 11401 | 152.0    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -290,7 +294,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco       | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.72258,-3.5326 | Continue onto SOUTH STREET | 135.0   | SE        | 30038 | 379.1    |           |
+      | 2             | 50.72258,-3.5326 | Continue onto SOUTH STREET | 135.0   | SE        | 28321 | 379.1    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -305,8 +309,8 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
-      | 5             | 50.726418,-3.52381 | Turn left onto BAMPFYLDE STREET | 45.0    | NE        | 10510 | 131.4    |           |
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 5             | 50.726418,-3.52381 | Turn left onto BAMPFYLDE STREET | 45.0    | NE        | 9853 | 131.4    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -323,11 +327,11 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                   | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.724661,-3.53639 | Turn left onto ST DAVID'S HILL | 310.0   | NW        | 35154 | 439.4    |           |
+      | 2             | 50.724661,-3.53639 | Turn left onto ST DAVID'S HILL | 310.0   | NW        | 32956 | 439.4    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | car         |            | fastest   |
+      | emv         |            | fastest   |
 
   @Routing @KnownIssues
   Scenario Outline: Verify  Access Prohibited To  Restrictions on a Route (Upper Paul Street-Exeter)
@@ -346,7 +350,8 @@ Feature: Verify a route from A to B
       | car         |            | fastest   |
 
   # Ford
-  @Routing
+  #Test failing as it is not finding any route for car and it is working  for emv
+  @Routing @KnownIssues
   Scenario Outline: Verify  Ford  Restrictions on a Route (BONHAY Road-Exeter)
     Given I have route point as
       | pointA             | pointB              |
@@ -356,7 +361,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
-      | 4             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 12281 | 153.5    |           |
+      | 4             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 11513 | 153.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -372,7 +377,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.730716,-3.530028 | Turn left onto HORSEGUARDS | 189.0   | S         | 21893 | 273.7    |           |
+      | 2             | 50.730716,-3.530028 | Turn left onto HORSEGUARDS | 189.0   | S         | 20524 | 273.7    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -389,7 +394,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
-      | 3             | 50.722198,-3.526704 | Turn right onto SOUTHERNHAY EAST | 202.0   | SW        | 20129 | 255.9    |           |
+      | 3             | 50.722198,-3.526704 | Turn right onto SOUTHERNHAY EAST | 202.0   | SW        | 21107 | 255.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -405,14 +410,15 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.722081,-3.539012 | Turn left onto A377 | 166.0   | S         | 29003 | 395.5    |           |
+      | 2             | 50.722081,-3.539012 | Turn left onto A377 | 166.0   | S         | 27969 | 395.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
+  #test failing as it is plotting a different route
   #Roundabout
-  @Routing
+  @Routing @KnownIssues
   Scenario Outline: Verify a  Private Road (Publicly Accessible) on a Route (QUEEN STREET)
     Given I have route point as
       | pointA              | pointB              |
@@ -438,7 +444,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance | avoidance |
-      | 1             | 50.72593,-3.521909 | Continue onto B3212 (WESTERN WAY) | 38.0    | NE        | 3099 | 38.7     |           |
+      | 1             | 50.72593,-3.521909 | Continue onto B3212 (WESTERN WAY) | 38.0    | NE        | 2905 | 38.7     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -471,7 +477,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                   | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.728793,-3.520273 | At roundabout, take exit 2 onto SIDWELL STREET | 178.0   | S         | 19800 | 259.2    |           |
+      | 2             | 50.728793,-3.520273 | At roundabout, take exit 2 onto SIDWELL STREET | 178.0   | S         | 18263 | 259.2    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -487,7 +493,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                        | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.725096,-3.522378 | At roundabout, take exit 4 onto B3212 (WESTERN WAY) | 239.0   | SW        | 19384 | 255.8    |           |
+      | 2             | 50.725096,-3.522378 | At roundabout, take exit 4 onto B3212 (WESTERN WAY) | 239.0   | SW        | 17164 | 255.8    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -505,7 +511,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    |           |
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7186 | 213.6    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -521,7 +527,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance | avoidance |
-      | 3             | 50.733574,-3.524027 | Turn right onto DEVON SHIRE PLACE | 162.0   | S         | 8490 | 235.9    |           |
+      | 3             | 50.733574,-3.524027 | Turn right onto DEVON SHIRE PLACE | 162.0   | S         | 7936 | 235.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -537,7 +543,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                | azimuth | direction | time  | distance | avoidance |
-      | 3             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 22108 | 276.4    |           |
+      | 3             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 20726 | 276.4    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -553,7 +559,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7689 | 213.6    |           |
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7186 | 213.6    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -569,12 +575,12 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                        | azimuth | direction | time  | distance | avoidance |
-      | 6             | 50.725549,-3.52693 | Turn sharp left onto SIDWELL STREET | 47.0    | NE        | 17774 | 226.1    |           |
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time | distance | avoidance |
+      | 4             | 50.727926,-3.536902 | Turn right onto NEW NORTH ROAD (B3183) | 122.0   | SE        | 7745 | 103.3    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | car         |            | shortest  |
+      | emv         |            | shortest  |
 
   @Routing
   Scenario Outline: Verify  a fastest route  on a Route (St DAVID's-Exeter)
@@ -586,11 +592,11 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time  | distance | avoidance |
-      | 6             | 50.727984,-3.530548 | Turn left onto BLACKALL ROAD | 34.0    | NE        | 13596 | 377.7    |           |
+      | 6             | 50.727984,-3.530548 | Turn left onto BLACKALL ROAD | 34.0    | NE        | 12707 | 377.7    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | car         |            | fastest   |
+      | emv         |            | fastest   |
 
   @Routing
   Scenario Outline: Verify  a shortest route  on a Route (Prince Of Wales Road-Exeter)
@@ -602,11 +608,11 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 12281 | 153.5    |           |
+      | 2             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0    | E         | 11513 | 153.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | car         |            | shortest  |
+      | emv         |            | shortest  |
 
   @Routing
   Scenario Outline: Verify  a fastest route  on a Route (Prince Of Wales Road-Exeter)
@@ -617,12 +623,12 @@ Feature: Verify a route from A to B
     And I have weighting as "<routeType>"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc             | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.733417,-3.524972 | Continue onto UNION ROAD | 77.0    | E         | 2478 | 68.8     |           |
+      | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time | distance | avoidance |
+      | 4             | 50.731916,-3.522202 | Continue onto WELL STREET | 131.0   | SE        | 6074 | 180.6    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | car         |            | fastest   |
+      | emv         |            | fastest   |
 
   @Routing
   Scenario Outline: Verify  a shortest route  on a Route (Blackall Road - Exeter)
@@ -634,7 +640,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 29739 | 378.4    |           |
+      | 2             | 50.727984,-3.530548 | Turn sharp left onto NEW NORTH ROAD (B3183) | 117.0   | SE        | 26998 | 378.4    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -650,7 +656,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.729609,-3.52599 | Turn right onto PENNSYLVANIA ROAD | 193.0   | S         | 4106 | 51.3     |           |
+      | 2             | 50.729609,-3.52599 | Turn right onto PENNSYLVANIA ROAD | 193.0   | S         | 3849 | 51.3     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -667,8 +673,8 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.725549,-3.52693  | Turn sharp left onto SIDWELL STREET  | 47.0    | NE        | 17774 | 226.1    |           |
-      | 12            | 50.729424,-3.518763 | Turn left onto B3212 (BLACKBOY ROAD) | 252.0   | W         | 9435  | 128.5    |           |
+      | 2             | 50.725549,-3.52693  | Turn sharp left onto SIDWELL STREET  | 47.0    | NE        | 16839 | 226.1    |           |
+      | 12            | 50.729424,-3.518763 | Turn left onto B3212 (BLACKBOY ROAD) | 252.0   | W         | 5284  | 128.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -684,8 +690,8 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                         | azimuth | direction | time  | distance | avoidance |
-      | 6             | 50.720037,-3.528958 | Continue onto B3212 (MAGDALEN STREET)                | 64.0    | NE        | 3438  | 45.4     |           |
-      | 15            | 50.725108,-3.52286  | At roundabout, take exit 1 onto PARIS STREET (B3183) | 321.0   | NW        | 24607 | 319.7    |           |
+      | 6             | 50.720037,-3.528958 | Continue onto B3212 (MAGDALEN STREET)                | 64.0    | NE        | 3260  | 45.4     |           |
+      | 15            | 50.725108,-3.52286  | At roundabout, take exit 1 onto PARIS STREET (B3183) | 321.0   | NW        | 19772 | 319.7    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -701,9 +707,9 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time  | distance | avoidance |
-      | 5             | 50.719971,-3.529196 | Continue onto A3015            | 65.0    | NE        | 1466  | 18.3     |           |
-      | 10            | 50.721881,-3.52737  | Continue onto SOUTHERNHAY WEST | 19.0    | N         | 3779  | 47.2     |           |
-      | 21            | 50.726462,-3.523882 | Continue onto CHEEKE STREET    | 128.0   | SE        | 10960 | 139.9    |           |
+      | 5             | 50.719971,-3.529196 | Continue onto A3015            | 65.0    | NE        | 1375  | 18.3     |           |
+      | 10            | 50.721881,-3.52737  | Continue onto SOUTHERNHAY WEST | 19.0    | N         | 3543  | 47.2     |           |
+      | 21            | 50.726462,-3.523882 | Continue onto CHEEKE STREET    | 128.0   | SE        | 11153 | 139.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -719,9 +725,9 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                         | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.721075,-3.519573 | Continue onto ST LEONARD'S ROAD                      | 1.0     | N         | 421   | 5.3      |           |
-      | 6             | 50.725096,-3.522378 | At roundabout, take exit 2 onto PARIS STREET (B3183) | 239.0   | SW        | 27224 | 356.1    |           |
-      | 10            | 50.725549,-3.52693  | Turn sharp left onto SIDWELL STREET                  | 47.0    | NE        | 17774 | 226.1    |           |
+      | 1             | 50.721075,-3.519573 | Continue onto ST LEONARD'S ROAD                      | 1.0     | N         | 395   | 5.3      |           |
+      | 6             | 50.725096,-3.522378 | At roundabout, take exit 2 onto PARIS STREET (B3183) | 239.0   | SW        | 21953 | 356.1    |           |
+      | 10            | 50.725549,-3.52693  | Turn sharp left onto SIDWELL STREET                  | 47.0    | NE        | 16839 | 226.1    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -737,10 +743,10 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                      | azimuth | direction | time  | distance | avoidance |
-      | 5             | 50.724453,-3.519949 | Turn right onto CLIFTON ROAD                      | 19.0    | N         | 28231 | 352.9    |           |
-      | 10            | 50.728509,-3.520647 | At roundabout, take exit 2 onto OLD TIVERTON ROAD | 282.0   | W         | 11187 | 150.3    |           |
-      | 17            | 50.733333,-3.524999 | Continue onto PENNSYLVANIA ROAD                   | 12.0    | N         | 764   | 9.6      |           |
-      | 20            | 50.732212,-3.535235 | Continue onto PRINCE OF WALES ROAD                | 252.0   | W         | 15641 | 195.5    |           |
+      | 5             | 50.724453,-3.519949 | Turn right onto CLIFTON ROAD                      | 19.0    | N         | 26468 | 352.9    |           |
+      | 10            | 50.728509,-3.520647 | At roundabout, take exit 3 onto OLD TIVERTON ROAD | 282.0   | W         | 9981  | 150.3    |           |
+      | 17            | 50.733333,-3.524999 | Continue onto PENNSYLVANIA ROAD                   | 12.0    | N         | 716   | 9.6      |           |
+      | 20            | 50.732212,-3.535235 | Continue onto PRINCE OF WALES ROAD                | 252.0   | W         | 14664 | 195.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -756,16 +762,15 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                                        | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.729734,-3.52464  | Continue onto ST SIDWELL'S AVENUE                   | 119.0   | SE        | 9351  | 116.9    |           |
-      | 8             | 50.723365,-3.523902 | Continue onto B3212 (WESTERN WAY)                   | 195.0   | S         | 21140 | 272.8    |           |
-      | 16            | 50.719224,-3.540839 | Continue onto OKEHAMPTON STREET                     | 126.0   | SE        | 17995 | 228.1    |           |
-      | 23            | 50.7203,-3.526902   | Continue onto B3212 (MAGDALEN STREET)               | 250.0   | W         | 58    | 0.7      |           |
-      | 30            | 50.719848,-3.529643 | Continue onto WESTERN WAY (A3015)                   | 68.0    | E         | 1997  | 34.4     |           |
-      | 37            | 50.729774,-3.519937 | Continue onto OLD TIVERTON ROAD                     | 35.0    | NE        | 38268 | 478.4    |           |
-      | 42            | 50.729023,-3.520593 | At roundabout, take exit 2 onto B3212 (WESTERN WAY) | 113.0   | SE        | 15894 | 209.9    |           |
-      | 50            | 50.718282,-3.535898 | Continue onto A377                                  | 207.0   | SW        | 12712 | 216.9    |           |
+      | 1             | 50.729734,-3.52464  | Continue onto ST SIDWELL'S AVENUE                   | 119.0   | SE        | 8767  | 116.9    |           |
+      | 8             | 50.723365,-3.523902 | Continue onto B3212 (WESTERN WAY)                   | 195.0   | S         | 17415 | 272.8    |           |
+      | 16            | 50.719224,-3.540839 | Continue onto OKEHAMPTON STREET                     | 126.0   | SE        | 17009 | 228.1    |           |
+      | 25            | 50.720298,-3.526912   | Turn sharp left onto MAGDALEN STREET (B3182)      | 239.0   | SW        | 10192 | 142.3     |           |
+      | 30            | 50.719971,-3.529196 | Continue onto A3015                                 | 65.0    | NE        | 1375   | 18.3                   |           |
+      | 38            | 50.733664,-3.517098 | Continue onto OLD TIVERTON ROAD                     | 200.0    | S        | 10655 | 142.1    |           |
+      | 43            | 50.727261,-3.520564 | Continue onto B3212 (WESTERN WAY) | 201.0   | S        | 17714 | 241.6    |           |
 
-    Examples: 
+  
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
@@ -783,7 +788,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.732222,-3.535207 | Turn right onto PERRY ROAD | 309.0   | NW        | 18936 | 226.2    |           |
+      | 2             | 50.732222,-3.535207 | Turn right onto PERRY ROAD | 309.0   | NW        | 16963 | 226.2   |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -800,7 +805,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc             | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.732296,-3.535347 | Continue onto PERRY ROAD | 309.0   | NW        | 17852 | 213.2    |           |
+      | 1             | 50.732296,-3.535347 | Continue onto PERRY ROAD | 309.0   | NW        | 15992 | 213.2    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -817,7 +822,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.732222,-3.535207 | Turn right onto PERRY ROAD | 309.0   | NW        | 17354 | 207.3    |           |
+      | 2             | 50.732222,-3.535207 | Turn right onto PERRY ROAD | 309.0   | NW        | 15546 | 207.3    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -825,7 +830,7 @@ Feature: Verify a route from A to B
 
   # Perry Road (Private Road- Publicly accessible)
   @Routing
-  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Not to transit through PERRY ROAD-Private(True))
+  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Not to transit through PERRY ROAD-Private-True)
     Given I have route point as
       | pointA              | pointB              |
       | 50.732343,-3.534682 | 50.733856,-3.538043 |
@@ -835,14 +840,14 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                       | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.732369,-3.534702 | Continue onto PRINCE OF WALES ROAD | 245.0   | SW        | 19838 | 237.0    |           |
+      | 1             | 50.732369,-3.534702 | Continue onto PRINCE OF WALES ROAD | 245.0   | SW        | 17772 | 237.0    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
   @Routing
-  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Not to transit through PERRY ROAD-Private(False))
+  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Not to transit through PERRY ROAD-Private-False)
     Given I have route point as
       | pointA              | pointB              |
       | 50.732343,-3.534682 | 50.733856,-3.538043 |
@@ -852,14 +857,14 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 2.0     | N         | 17987 | 214.9    |           |
+      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 2.0     | N         | 16950 | 214.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
   @Routing
-  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Start on PERRY ROAD-Private(True))
+  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Start on PERRY ROAD-Private-True)
     Given I have route point as
       | pointA             | pointB              |
       | 50.73244,-3.535622 | 50.733856,-3.538043 |
@@ -869,14 +874,14 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc             | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.732441,-3.53562 | Continue onto PERRY ROAD | 309.0   | NW        | 15749 | 188.1    |           |
+      | 1             | 50.732441,-3.53562 | Continue onto PERRY ROAD | 309.0   | NW        | 14109 | 188.1    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
   @Routing
-  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Start on PERRY ROAD-Private(False))
+  Scenario Outline: Verify  a route for non-emergencey vehicle on a (Start on PERRY ROAD-Private-False)
     Given I have route point as
       | pointA             | pointB              |
       | 50.73244,-3.535622 | 50.733856,-3.538043 |
@@ -892,7 +897,7 @@ Feature: Verify a route from A to B
       | car         |            | fastest   |
 
   @Routing
-  Scenario Outline: Verify  a route for non-emergencey vehicle on a (End on PERRY ROAD-Private(True))
+  Scenario Outline: Verify  a route for non-emergencey vehicle on a (End on PERRY ROAD-Private-True)
     Given I have route point as
       | pointA              | pointB              |
       | 50.732343,-3.534682 | 50.733335,-3.537294 |
@@ -902,7 +907,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.732222,-3.535207 | Turn right onto PERRY ROAD | 309.0   | NW        | 16062 | 191.9    |           |
+      | 2             | 50.732222,-3.535207 | Turn right onto PERRY ROAD | 309.0   | NW        | 14389 | 191.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -935,8 +940,8 @@ Feature: Verify a route from A to B
     And I have private as "false"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 22511 | 268.9    |           |
+      | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 9046 | 268.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -952,8 +957,8 @@ Feature: Verify a route from A to B
     And I have private as "true"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.729922,-3.521875 | Continue onto OXFORD ROAD | 210.0   | SW        | 19649 | 234.7    |           |
+      | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time | distance | avoidance |
+      | 1             | 50.729922,-3.521875 | Continue onto OXFORD ROAD | 30.0    | SW        | 2525 | 33.7     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -969,15 +974,15 @@ Feature: Verify a route from A to B
     And I have private as "false"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.730179,-3.521622 | Turn left onto OXFORD ROAD | 211.0   | SW        | 19386 | 231.6    |           |
+      | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.73051,-3.522412 | turn sharp left onto WELL STREET | 197.0   | S         | 9046 | 268.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | emv         |            | fastest   |
 
   @Routing
-  Scenario Outline: Verify  a route for non-emergencey vehicle on Oxford Road ( Not to transit through Oxford Road -Private true
+  Scenario Outline: Verify  a route for non-emergencey vehicle on Oxford Road ( Not to transit through Oxford Road -Private true)
     Given I have route point as
       | pointA              | pointB              |
       | 50.730031,-3.521297 | 50.727926,-3.523429 |
@@ -987,7 +992,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 22511 | 268.9    |           |
+      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 9046 | 268.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1004,7 +1009,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 22511 | 268.9    |           |
+      | 2             | 50.73051,-3.522412 | Turn sharp left onto WELL STREET | 197.0   | S         | 9046 | 268.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1021,7 +1026,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc              | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.729922,-3.521875 | Continue onto OXFORD ROAD | 210.0   | SW        | 19649 | 234.7    |           |
+      | 1             | 50.729922,-3.521875| Continue onto OXFORD ROAD | 30.0   | NE        | 2525 | 33.7    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1054,7 +1059,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.730179,-3.521622 | Turn left onto OXFORD ROAD | 211.0   | SW        | 19386 | 231.6    |           |
+      | 1             | 50.730037,-3.52129 | continue onto ST JAMES" ROAD | 303.0   | NW        | 7113 | 94.9    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1088,7 +1093,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc            | azimuth | direction | time  | distance | avoidance |
-      | 3             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 12852 | 153.5    |           |
+      | 3             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 11513 | 153.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1105,7 +1110,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc            | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 12852 | 153.5    |           |
+      | 2             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 11513 | 153.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1122,7 +1127,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc            | azimuth | direction | time | distance | avoidance |
-      | 3             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 9769 | 116.7    |           |
+      | 3             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 8751| 116.7    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1139,7 +1144,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco        | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.72956,-3.53876 | Turn left onto HOWELL ROAD | 261.0   | W         | 12585 | 150.3    |           |
+      | 2             | 50.72956,-3.53876 | Turn left onto HOWELL ROAD | 261.0   | W         | 11274 | 150.3    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1156,7 +1161,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco        | waypointdesc               | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.72956,-3.53876 | Turn left onto HOWELL ROAD | 261.0   | W         | 12585 | 150.3    |           |
+      | 2             | 50.72956,-3.53876 | Turn left onto HOWELL ROAD | 261.0   | W         | 11274 | 150.3    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1173,7 +1178,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc            | azimuth | direction | time  | distance | avoidance |
-      | 1             | 50.727799,-3.538138 | Continue onto HELE ROAD | 277.0   | W         | 11237 | 134.2    |           |
+      | 1             | 50.727799,-3.538138 | Continue onto HELE ROAD | 277.0   | W         | 10067 | 134.2    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1206,7 +1211,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc            | azimuth | direction | time | distance | avoidance |
-      | 3             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 9769 | 116.7    |           |
+      | 3             | 50.72778,-3.537866 | Continue onto HELE ROAD | 277.0   | W         | 8751 | 116.7    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1240,7 +1245,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
-      | 3             | 50.729609,-3.52599 | Turn left onto PENNSYLVANIA ROAD | 13.0    | N         | 15692 | 187.5    |           |
+      | 3             | 50.729609,-3.52599 | Turn left onto PENNSYLVANIA ROAD | 13.0    | N         | 14058 | 187.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1257,7 +1262,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
-      | 3             | 50.729609,-3.52599 | Turn left onto PENNSYLVANIA ROAD | 13.0    | N         | 15692 | 187.5    |           |
+      | 3             | 50.729609,-3.52599 | Turn left onto PENNSYLVANIA ROAD | 13.0    | N         | 14058 | 187.5    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1291,7 +1296,7 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:%2C
       | wayPointIndex | waypointco         | waypointdesc                  | azimuth | direction | time | distance | avoidance |
-      | 3             | 50.717445,-3.54209 | Turn left onto CLINTON STREET | 53.0    | NE        | 9560 | 114.2    |           |
+      | 3             | 50.717445,-3.54209 | Turn left onto CLINTON STREET | 53.0    | NE        | 8564 | 114.2    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1308,12 +1313,13 @@ Feature: Verify a route from A to B
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                      | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.718195,-3.543191 | Turn slight left onto BULLER ROAD | 8.0     | N         | 3253 | 38.9     |           |
+      | 2             | 50.718195,-3.543191 | Turn slight left onto BULLER ROAD | 8.0     | N         | 2914 | 38.9     |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
-@Routing
+
+  @Routing
   Scenario Outline: Verify  a route for non-emergencey services on a(End on Clinton road-private false )
     Given I have route point as
       | pointA              | pointB              |
@@ -1340,8 +1346,8 @@ Feature: Verify a route from A to B
     And I have private as "true"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 213.6   | SE        | 17884 | 213.6    |           |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7186 | 213.6    |           |
 
     Examples: 
       | vehicleType | avoidances | routeType |
@@ -1357,24 +1363,82 @@ Feature: Verify a route from A to B
     And I have private as "true"
     When I request for a route
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                     | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE         | 17884 | 213.6    |           |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7186 | 213.6    |           |
+
     Examples: 
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-@Routing
+  @Routing
   Scenario Outline: Verify  a route for non-emergencey services on a(Not to transit through Springfield-private false )
     Given I have route point as
-      | pointA              | pointB              |
-      | 50.73384,-3.522834 | 50.732806,-3.521275|
+      | pointA             | pointB              |
+      | 50.73384,-3.522834 | 50.732806,-3.521275 |
     And I have vehicle as "<vehicleType>"
     And I have weighting as "<routeType>"
-   And I have private as "false"
-   When I request for a route
+    And I have private as "false"
+    When I request for a route
     Then I should be able to verify the response message as "Not found"
     Then I should be able to verify the statuscode as "400"
 
     Examples: 
       | vehicleType | avoidances | routeType |
-      | car         |            | fastest   |
\ No newline at end of file
+      | car         |            | fastest   |
+
+  # BNG  and WGS84 Projections
+  @Routing
+  Scenario: Verify  a route for non-emergencey services on a(Transit through Springfield-private true )
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.733653,-3.523541 | 50.732695,-3.520218 |
+    And I have vehicle as "car"
+    And I have private as "true"
+    And I have srs as "WGS84"
+    And I have output_srs as "WGS84"
+    When I request for a route
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.733764,-3.523212 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7186 | 213.6    |           |
+
+  @Routing
+  Scenario: Verify  a route for non-emergencey services on a(Transit through Springfield-private true )
+    Given I have route point as
+      | pointA       | pointB       |
+      | 292575,93781 | 292736,93681 |
+    And I have vehicle as "car"
+    And I have private as "true"
+    And I have srs as "BNG"
+    And I have output_srs as "BNG"
+    When I request for a route
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco                 | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 292602.008429,93789.988765 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7186 | 213.6    |           |
+
+  @Routing
+  Scenario: Verify  a route for non-emergencey services on a(Transit through Springfield-private true )
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.733653,-3.523541 | 50.732695,-3.520218 |
+    And I have vehicle as "emv"
+    And I have private as "true"
+    And I have srs as "WGS84"
+    And I have output_srs as "BNG"
+    When I request for a route
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco                  | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 292602.008429, 93789.988765 | Turn right onto VICTORIA STREET | 150.0   | SE        | 7186 | 213.6    |           |
+
+  @Routing
+  Scenario: Verify  a route for non-emergencey services on a(Not to transit through Springfield-private false )
+    Given I have route point as
+      | pointA       | pointB       |
+      | 292629,93798 | 292736,93681 |
+    And I have vehicle as "car"
+    And I have private as "true"
+    And I have srs as "BNG"
+    And I have output_srs as "WGS84"
+    When I request for a route
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time | distance | avoidance |
+      | 2             | 50.734191,-3.521511 | Turn right onto CULVERLAND ROAD | 158.0   | SE        | 6009 | 178.6    |           |
diff --git a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
index fd9159c86a..6f02bdfe25 100644
--- a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
@@ -377,6 +377,38 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
       | mtb         |            | fastest   | GET        | json           | OK                 | 200        |
       | foot        |            | fastest   | OPTIONS    | json           | OK                 | 200        |
 
+  @Routing
+  Scenario Outline: Invalid Parameter Value for "point in BNG"
+    Given I have route point as
+      | pointA              | pointB              |
+      | 51.206305,-3.683483 | 51.195761,-3.848208 |
+    And I have vehicle as "foot"
+    And I have srs as "BNG"
+    And I have output_srs as "BNG"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                             | statusCode |
+      | Cannot find point 0: 51.206305,-3.683483 | 400        |
+
+  @Routing
+  Scenario Outline: Invalid Parameter Value for "point in WGS84"
+    Given I have route point as
+      | pointA        | pointB        |
+      | 146580,282492 | 145684,270956 |
+    And I have vehicle as "mtb"
+    And I have srs as "WGS84"
+    And I have output_srs as "WGS84"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | errorMessage                       | statusCode |
+      | Cannot find point 0: 146580,282492 | 400        |
+
   # Nearest Point : Invalid Parameter Value "point"
   @ErrorMessages
   Scenario Outline: Verify  nearest point of point using NearestPoint API
@@ -672,7 +704,7 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
     And I have algorithm as "astar"
     And I have type as "json"
     And I have srs as "WGS84"
-    And I have private "<private>"
+    And I have private as "<private>"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
     Then I should be able to verify the http statuscode as "200"
@@ -697,7 +729,7 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
     And I have algorithm as "astar"
     And I have type as "json"
     And I have srs as "WGS84"
-    And I have private "<pretty>"
+    And I have pretty as "<pretty>"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
     Then I should be able to verify the http statuscode as "200"
diff --git a/core/pom.xml b/core/pom.xml
index 6338ee09aa..d9807ae0fa 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -5,7 +5,7 @@
     <groupId>com.graphhopper</groupId>
     <artifactId>graphhopper</artifactId>
     <name>GraphHopper</name>
-    <version>1.14-SNAPSHOT</version>
+    <version>1.23-SNAPSHOT</version>
     <packaging>jar</packaging> 
     <description>
         GraphHopper is a fast and memory efficient Java road routing engine 
@@ -14,7 +14,7 @@
     <parent>
         <groupId>com.graphhopper</groupId>
         <artifactId>graphhopper-parent</artifactId>    	
-        <version>1.14-SNAPSHOT</version>
+        <version>1.23-SNAPSHOT</version>
     </parent>
         
     <properties>  
diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java
index bef6944d49..fed6ef28c2 100644
--- a/core/src/main/java/com/graphhopper/GraphHopper.java
+++ b/core/src/main/java/com/graphhopper/GraphHopper.java
@@ -56,6 +56,7 @@
 import com.graphhopper.routing.util.PrepareRoutingSubnetworks;
 import com.graphhopper.routing.util.PriorityWeighting;
 import com.graphhopper.routing.util.PriorityWithAvoidancesWeighting;
+import com.graphhopper.routing.util.PrivateEdgeFilter;
 import com.graphhopper.routing.util.ShortestWeighting;
 import com.graphhopper.routing.util.ShortestWithAvoidancesWeighting;
 import com.graphhopper.routing.util.TraversalMode;
@@ -926,7 +927,6 @@ public Weighting createWeighting( WeightingMap weightingMap, FlagEncoder encoder
 		Weighting result;
 
 		String avoidanceString = weightingMap.get("avoidances","");
-		System.err.println("AVOID:" + avoidanceString);
 		boolean avoidancesEnabled = avoidanceString.length()>0;
 		if ("shortest".equalsIgnoreCase(weighting))
 		{
@@ -1063,7 +1063,12 @@ public GHResponse route( GHRequest request )
 		visitedSum.set(0);
 
 		FlagEncoder encoder = encodingManager.getEncoder(vehicle);
-		EdgeFilter edgeFilter = new DefaultEdgeFilter(encoder);
+		EdgeFilter edgeFilter;
+		if(!encoder.supports(EscapePrivateWeighting.class) || checkForNoThroughAccess(request)) {
+			edgeFilter = new DefaultEdgeFilter(encoder);
+		} else {
+			edgeFilter = new PrivateEdgeFilter(encoder);
+		}
 
 		StopWatch sw = new StopWatch().start();
 		List<QueryResult> qResults = new ArrayList<QueryResult>(points.size());
diff --git a/core/src/main/java/com/graphhopper/routing/util/DefaultEdgeFilter.java b/core/src/main/java/com/graphhopper/routing/util/DefaultEdgeFilter.java
index e86ca2c43d..9b9076cfbe 100644
--- a/core/src/main/java/com/graphhopper/routing/util/DefaultEdgeFilter.java
+++ b/core/src/main/java/com/graphhopper/routing/util/DefaultEdgeFilter.java
@@ -26,7 +26,7 @@
 {
     private final boolean in;
     private final boolean out;
-    private FlagEncoder encoder;
+    protected FlagEncoder encoder;
 
     /**
      * Creates an edges filter which accepts both direction of the specified vehicle.
@@ -44,7 +44,7 @@ public DefaultEdgeFilter( FlagEncoder encoder, boolean in, boolean out )
     }
 
     @Override
-    public final boolean accept( EdgeIteratorState iter )
+    public boolean accept( EdgeIteratorState iter )
     {
         long flags = iter.getFlags();
         return out && encoder.isForward(flags) || in && encoder.isBackward(flags);
diff --git a/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java b/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java
index 98d67923cb..63b36d89af 100644
--- a/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java
@@ -37,11 +37,9 @@ public double getMinWeight( double distance )
 	@Override
 	public double calcWeight( EdgeIteratorState edgeState, boolean reverse, int prevOrNextEdgeId )
 	{
-		System.err.println(edgeState.getClass() + ":" + edgeState.toString());
 		double calcWeight = innerWeighting.calcWeight(edgeState, reverse, prevOrNextEdgeId);
 		if(encoder.getLong(edgeState.getFlags(), KEY)>0) {
 			EdgeIteratorState edgeProps=null;
-			System.err.println("EDGE"+ edgeState.getEdge()+":PREVNEXT"  + prevOrNextEdgeId);
 			if(!isStartOrEnd(edgeState) && prevOrNextEdgeId>EdgeIterator.NO_EDGE) {
 				edgeProps = graph.getEdgeProps(prevOrNextEdgeId, Integer.MIN_VALUE);
 			}
@@ -52,7 +50,6 @@ public double calcWeight( EdgeIteratorState edgeState, boolean reverse, int prev
 				calcWeight = Double.POSITIVE_INFINITY;
 			}
 		}
-		System.err.println("WEIGHT:" +calcWeight);
 		return calcWeight;
 	}
 
@@ -61,7 +58,6 @@ private boolean isStartOrEnd( EdgeIteratorState edgeState )
 	    int baseNode = edgeState.getBaseNode();
 		int adjNode = edgeState.getAdjNode();
 		boolean startEnd = baseNode == start  || baseNode == end  || adjNode == start || adjNode == end;
-		System.err.println("STARTEND:" + startEnd + ":" + edgeState.toString());
 		return startEnd;
     }
 
diff --git a/core/src/main/java/com/graphhopper/routing/util/PrivateEdgeFilter.java b/core/src/main/java/com/graphhopper/routing/util/PrivateEdgeFilter.java
new file mode 100644
index 0000000000..a5564c14c3
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/routing/util/PrivateEdgeFilter.java
@@ -0,0 +1,22 @@
+package com.graphhopper.routing.util;
+
+import com.graphhopper.util.EdgeIteratorState;
+
+public class PrivateEdgeFilter extends DefaultEdgeFilter
+{
+
+	public PrivateEdgeFilter( FlagEncoder encoder )
+    {
+	    super(encoder);
+    }
+
+	@Override
+	public boolean accept( EdgeIteratorState edgeState )
+	{
+		if(encoder.getLong(edgeState.getFlags(), EscapePrivateWeighting.KEY)>0) {
+			return false;
+		}
+		return super.accept(edgeState);
+	}
+
+}
diff --git a/core/src/test/java/com/graphhopper/GraphHopperTest.java b/core/src/test/java/com/graphhopper/GraphHopperTest.java
index c17e10b185..9b53683644 100644
--- a/core/src/test/java/com/graphhopper/GraphHopperTest.java
+++ b/core/src/test/java/com/graphhopper/GraphHopperTest.java
@@ -22,6 +22,7 @@
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
+import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
 import java.io.File;
@@ -33,11 +34,14 @@
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
+import org.mockito.Matchers;
 import org.mockito.Mockito;
+import org.mockito.internal.verification.VerificationModeFactory;
 
 import com.graphhopper.reader.DataReader;
 import com.graphhopper.routing.AlgorithmOptions;
 import com.graphhopper.routing.util.BanPrivateWeighting;
+import com.graphhopper.routing.util.DefaultEdgeFilter;
 import com.graphhopper.routing.util.EdgeFilter;
 import com.graphhopper.routing.util.EncodingManager;
 import com.graphhopper.routing.util.EscapePrivateWeighting;
@@ -46,6 +50,7 @@
 import com.graphhopper.routing.util.FlagEncoder;
 import com.graphhopper.routing.util.PriorityWeighting;
 import com.graphhopper.routing.util.PriorityWithAvoidancesWeighting;
+import com.graphhopper.routing.util.PrivateEdgeFilter;
 import com.graphhopper.routing.util.ShortestWeighting;
 import com.graphhopper.routing.util.ShortestWithAvoidancesWeighting;
 import com.graphhopper.routing.util.Weighting;
@@ -53,6 +58,7 @@
 import com.graphhopper.storage.AvoidanceAttributeExtension;
 import com.graphhopper.storage.GraphExtension;
 import com.graphhopper.storage.GraphStorage;
+import com.graphhopper.storage.index.LocationIndex;
 import com.graphhopper.storage.index.QueryResult;
 import com.graphhopper.util.CmdArgs;
 import com.graphhopper.util.Helper;
@@ -637,4 +643,75 @@ public void testCreatePrivateWeightingWithPriority() {
 		privateWeighting = instance.createPrivateWeighting(weighting, request , graph, unsupportedEncoder);
 		assertEquals(weighting.getClass(), privateWeighting.getClass());
     }
+    
+    @Test
+    public void testIgnorePrivateRoadsOnIndexSearchWhenCannotStartOnPrivate() {
+    	LocationIndex locationIndex = buildGraphAndMocks("OSCAR");
+        expectNearestEdgeLookups(locationIndex);
+		GHRequest request = new GHRequest(11.1, 50, 11.3, 51);
+		request.getHints().put("private", "false");
+		request.setVehicle("car");
+		instance.route(request);
+		verifyEdgeFilterOnLookup(locationIndex, PrivateEdgeFilter.class);
+    }
+
+    @Test
+    public void testDontIgnorePrivateRoadsOnIndexSearchWhenCanStartOnPrivateWithCar() {
+    	LocationIndex locationIndex = buildGraphAndMocks("OSCAR");
+        expectNearestEdgeLookups(locationIndex);
+		GHRequest request = new GHRequest(11.1, 50, 11.3, 51);
+		request.getHints().put("private", "true");
+		request.setVehicle("car");
+		instance.route(request);
+		verifyEdgeFilterOnLookup(locationIndex, DefaultEdgeFilter.class);
+    }
+    
+    @Test
+    public void testDontIgnorePrivateRoadsOnIndexSearchWhenCanStartOnPrivateDueToDefaultWithCar() {
+    	LocationIndex locationIndex = buildGraphAndMocks("OSCAR");
+        expectNearestEdgeLookups(locationIndex);
+		GHRequest request = new GHRequest(11.1, 50, 11.3, 51);
+		request.setVehicle("car");
+		instance.route(request);
+		verifyEdgeFilterOnLookup(locationIndex, DefaultEdgeFilter.class);
+    }
+
+    @Test
+    public void testDontIgnorePrivateRoadsOnIndexSearchWhenCanStartOnPrivateWithEmv() {
+    	LocationIndex locationIndex = buildGraphAndMocks("EMV");
+        expectNearestEdgeLookups(locationIndex);
+		GHRequest request = new GHRequest(11.1, 50, 11.3, 51);
+		request.setVehicle("emv");
+		instance.route(request);
+		verifyEdgeFilterOnLookup(locationIndex, DefaultEdgeFilter.class);
+    }
+    
+    private LocationIndex buildGraphAndMocks(String vehicleEncoder )
+    {
+	    instance = new GraphHopper();
+    	instance = new GraphHopper().setStoreOnFlush(true).setEncodingManager(new EncodingManager(vehicleEncoder)).
+                 init(new CmdArgs().
+                         put("osmreader.osm", testOsm3).
+                         put("prepare.minNetworkSize", "1").
+                         put("graph.flagEncoders", vehicleEncoder)).
+                         setGraphHopperLocation(ghLoc);
+        instance.importOrLoad();
+
+    	LocationIndex locationIndex = Mockito.mock(LocationIndex.class);
+		instance.setLocationIndex(locationIndex );
+        GraphStorage graph = Mockito.mock(GraphStorage.class);
+        instance.setGraph(graph);
+	    return locationIndex;
+    }
+    
+    private void expectNearestEdgeLookups( LocationIndex locationIndex )
+    {
+	    QueryResult nearestResponse = Mockito.mock(QueryResult.class);
+		when(locationIndex.findClosest(Matchers.anyDouble(), Matchers.anyDouble(), Matchers.isA(EdgeFilter.class))).thenReturn(nearestResponse );
+    }
+    
+    private void verifyEdgeFilterOnLookup( LocationIndex locationIndex , Class<? extends EdgeFilter> filterClass  )
+    {
+	    verify(locationIndex, VerificationModeFactory.times(2)).findClosest(Matchers.anyDouble(), Matchers.anyDouble(),Matchers.isA(filterClass));
+    }
 }
diff --git a/pom.xml b/pom.xml
index 02e756367d..c484456bc8 100644
--- a/pom.xml
+++ b/pom.xml
@@ -5,7 +5,7 @@
 	<groupId>com.graphhopper</groupId>
 	<artifactId>graphhopper-parent</artifactId>
 	<name>GraphHopper Parent Project</name>
-	<version>1.14-SNAPSHOT</version>
+	<version>1.23-SNAPSHOT</version>
 	<packaging>pom</packaging>
 	<url>http://graphhopper.com</url>
 	<inceptionYear>2012</inceptionYear>
diff --git a/tools/pom.xml b/tools/pom.xml
index 1afc4beeba..22ec9c94c5 100644
--- a/tools/pom.xml
+++ b/tools/pom.xml
@@ -4,7 +4,7 @@
 
     <groupId>com.graphhopper</groupId>
     <artifactId>graphhopper-tools</artifactId>
-    <version>1.14-SNAPSHOT</version>
+    <version>1.23-SNAPSHOT</version>
     <packaging>jar</packaging>
     <name>GraphHopper Tools</name>
     <properties>
@@ -14,7 +14,7 @@
     <parent>
         <groupId>com.graphhopper</groupId>
         <artifactId>graphhopper-parent</artifactId>    	
-        <version>1.14-SNAPSHOT</version>
+        <version>1.23-SNAPSHOT</version>
     </parent>
     <repositories>
         <repository>
diff --git a/web/pom.xml b/web/pom.xml
index c7e0ec1f3f..16fcaab67e 100644
--- a/web/pom.xml
+++ b/web/pom.xml
@@ -5,14 +5,14 @@
 	<groupId>com.graphhopper</groupId>
 	<artifactId>graphhopper-web</artifactId>
 	<packaging>war</packaging>
-	<version>1.14-SNAPSHOT</version>
+	<version>1.23-SNAPSHOT</version>
 	<name>GraphHopper Web</name>
 	<description>Example on how to use GraphHopper in a web-based application</description>
 
 	<parent>
 		<groupId>com.graphhopper</groupId>
 		<artifactId>graphhopper-parent</artifactId>
-		<version>1.14-SNAPSHOT</version>
+		<version>1.23-SNAPSHOT</version>
 	</parent>
 	<properties>
 		<jetty.version>8.1.16.v20140903</jetty.version>
@@ -113,32 +113,26 @@
 					<attachClasses>true</attachClasses>
 				</configuration>
 			</plugin>
-			<!--<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-assembly-plugin</artifactId>
+			<plugin>
+				<groupId>org.apache.tomcat.maven</groupId>
+				<artifactId>tomcat7-maven-plugin</artifactId>
+				<version>2.2</version>
 				<configuration>
-					<archive>
-						<manifest>
-							<mainClass>com.graphhopper.http.GHServer</mainClass>
-						</manifest>
-					</archive>
-					<descriptors>
-						<descriptor>src/main/assembly/jar.xml</descriptor>
-						- this is defined to be executed afterwards -
-						<descriptor>src/main/assembly/zip.xml</descriptor>
-					</descriptors>
+					<url>http://localhost:8080/manager/text</url>
+					<!-- Tomcat manager credentials (need to enable in tomcat-users config file) -->
+					<username>admin</username>
+					<password>password</password>
+					<path>/</path>
 				</configuration>
-				<executions>
-					<execution>
-						<id>make-assembly</id>
-                        - bind to verify and not package to pass integration tests before creating assemblies -
-						<phase>integration-test</phase>
-						<goals>
-							<goal>single</goal>
-						</goals>
-					</execution>
-				</executions>
-			</plugin>  -->
+			</plugin>
+			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
+				<configuration> <archive> <manifest> <mainClass>com.graphhopper.http.GHServer</mainClass> 
+				</manifest> </archive> <descriptors> <descriptor>src/main/assembly/jar.xml</descriptor> 
+				- this is defined to be executed afterwards - <descriptor>src/main/assembly/zip.xml</descriptor> 
+				</descriptors> </configuration> <executions> <execution> <id>make-assembly</id> 
+				- bind to verify and not package to pass integration tests before creating 
+				assemblies - <phase>integration-test</phase> <goals> <goal>single</goal> 
+				</goals> </execution> </executions> </plugin> -->
 
 		</plugins>
 	</build>
