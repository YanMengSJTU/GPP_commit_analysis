diff --git a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
index 4cad675955..9f7e99ba85 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
@@ -51,6 +51,9 @@ protected void preProcessSingleFile(File hnFile) throws XMLStreamException, IOEx
             logger.error(PREPROCESS_FORMAT, hnFile.getName());
             in = new OsHnInputFile(hnFile);
             in.setWorkerThreads(workerThreads).open();
+            System.out.println("OsHnReader.preProcessSingleFile(" + in.getDataVersion()
+            		+ ":" + graphStorage + ")");
+            graphStorage.getProperties().put("hn.data_version", in.getDataVersion());
             preProcessSingleFile(in);
         } finally {
             Helper.close(in);
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
index 85e58e8c85..2b7decad5d 100755
--- a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
@@ -819,6 +819,8 @@ protected DataReader createReader( GraphStorage tmpGraph )
 				}.setOSMFile(hnPath).setGraphHopperLocation(hnGraphLocation)
 				.setEncodingManager(encodingManager).setCHEnable(false).setAsHnReader();
 				hnGraphHopper.importOrLoad();
+				String value = hnGraphHopper.getGraph().getProperties().get("hn.data_version");
+				graphStorage.getProperties().put("hn.data_version", value);
 				// OsHnReader hnReader = new OsHnReader(hnGraphHopper.getGraph());
 				logger.error("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<=================================================");
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
index 7848998b49..e9f81dc674 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
@@ -12,6 +12,7 @@
 import com.graphhopper.GraphHopper;
 import com.graphhopper.reader.osgb.AbstractOsItnReaderTest;
 import com.graphhopper.storage.GraphStorage;
+import com.graphhopper.storage.StorableProperties;
 import com.graphhopper.util.CmdArgs;
 import com.graphhopper.util.EdgeExplorer;
 import com.graphhopper.util.Instruction;
@@ -77,7 +78,13 @@ public void testMotorwayARoadNetwork_NoHighwaysNetworkData() {
         assertEquals(Instruction.TURN_SLIGHT_RIGHT, instructionList.get(2).getSign());
         assertEquals("END ROAD", instructionList.get(2).getName());
         assertEquals(Instruction.FINISH, instructionList.get(3).getSign());
-
+    }
+    
+    @Test
+    public void testHNVersionInfo() {
+    	GraphHopper graphHopper = readHN();
+    	StorableProperties properties = graphHopper.getGraph().getProperties();
+    	assertEquals("HighwaysNetwork_March2015", properties.get("hn.data_version"));
     }
 
     /**
@@ -89,22 +96,7 @@ public void testMotorwayARoadNetwork_NoHighwaysNetworkData() {
      */
     @Test
     public void testMotorwayARoadNetwork_WithHighwaysNetworkData() {
-        System.out.println("===>>> testMotorwayARoadNetwork_WithHighwaysNetworkData()");
-        String graphLoc = "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/os-itn-hn-test-network-gh";
-        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml";
-
-
-        Map<String, String> args = new HashMap<>();
-        args.put("hn.data", "./src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml");
-        args.put("hn.graph.location", "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/highways_network");
-        args.put("graph.location", graphLoc);
-        args.put("osmreader.osm", inputFile);
-        args.put("config", "../config.properties");
-        CmdArgs commandLineArguments = new CmdArgs(args);
-        commandLineArguments = CmdArgs.readFromConfigAndMerge(commandLineArguments, "config", "graphhopper.config");
-
-        GraphHopper graphHopper = new GraphHopper().setInMemory().setAsItnReader().init(commandLineArguments).setCHEnable(false).setEncodingManager(encodingManager);
-        graphHopper.importOrLoad();
+        GraphHopper graphHopper = readHN();
         GraphStorage graph = graphHopper.getGraph();
 
         //        printNodes(graph.createEdgeExplorer(carOutEdges), 6);
@@ -128,6 +120,27 @@ public void testMotorwayARoadNetwork_WithHighwaysNetworkData() {
 
     }
 
+	private GraphHopper readHN()
+    {
+	    System.out.println("===>>> testMotorwayARoadNetwork_WithHighwaysNetworkData()");
+        String graphLoc = "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/os-itn-hn-test-network-gh";
+        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml";
+
+
+        Map<String, String> args = new HashMap<>();
+        args.put("hn.data", "./src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml");
+        args.put("hn.graph.location", "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/highways_network");
+        args.put("graph.location", graphLoc);
+        args.put("osmreader.osm", inputFile);
+        args.put("config", "../config.properties");
+        CmdArgs commandLineArguments = new CmdArgs(args);
+        commandLineArguments = CmdArgs.readFromConfigAndMerge(commandLineArguments, "config", "graphhopper.config");
+
+        GraphHopper graphHopper = new GraphHopper().setInMemory().setAsItnReader().init(commandLineArguments).setCHEnable(false).setEncodingManager(encodingManager);
+        graphHopper.importOrLoad();
+	    return graphHopper;
+    }
+
     private void testNodes(GraphStorage graph) {
         testNodes(graph, graph.createEdgeExplorer(carOutEdges));
     }
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
index ad6a28d963..08bc726cb8 100755
--- a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
@@ -65,7 +65,7 @@ public void testReadVersionInfo() throws IOException {
         readGraphFile(graph, file);
         
         assertNotNull(graph.getProperties().get("itn.data_version"));
-        assertNotEquals("", graph.getProperties().get("itn.data_version"));
+        assertEquals("GDS-58096-1", graph.getProperties().get("itn.data_version"));
     }
 
     @Test
