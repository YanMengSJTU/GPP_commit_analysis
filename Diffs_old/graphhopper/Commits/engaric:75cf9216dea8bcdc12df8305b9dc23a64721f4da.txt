diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/AbstractOsDpnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/AbstractOsDpnReaderTest.java
index ac0ac1d60a..84fbb28a71 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/AbstractOsDpnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/AbstractOsDpnReaderTest.java
@@ -5,16 +5,19 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
 
 import org.junit.Before;
 
 import com.graphhopper.routing.util.AbstractFlagEncoder;
 import com.graphhopper.routing.util.BikeFlagEncoder;
-import com.graphhopper.routing.util.BusFlagEncoder;
+import com.graphhopper.routing.util.DefaultEdgeFilter;
 import com.graphhopper.routing.util.EdgeFilter;
 import com.graphhopper.routing.util.EncodingManager;
 import com.graphhopper.routing.util.FlagEncoder;
 import com.graphhopper.routing.util.FootFlagEncoder;
+import com.graphhopper.routing.util.OsFootFlagEncoder;
 import com.graphhopper.storage.GraphExtension;
 import com.graphhopper.storage.GraphHopperStorage;
 import com.graphhopper.storage.RAMDirectory;
@@ -24,19 +27,13 @@
 
 public abstract class AbstractOsDpnReaderTest {
 
-    protected EncodingManager encodingManager;// = new
-    // EncodingManager("CAR");//"car:com.graphhopper.routing.util.RelationCarFlagEncoder");
-    protected BusFlagEncoder busEncoder;
-    // encodingManager
-    // .getEncoder("CAR");
-    protected EdgeFilter carOutEdges;// = new DefaultEdgeFilter(
-    // carEncoder, false, true);
-    protected EdgeFilter carInEdges;
-    protected boolean turnCosts = true;
-    protected EdgeExplorer carOutExplorer;
-    protected EdgeExplorer explorer;
+	protected EncodingManager encodingManager;
+    protected EdgeFilter footOutEdges;
+    protected EdgeFilter footInEdges;
+    protected boolean turnCosts = false;
     protected BikeFlagEncoder bikeEncoder;
     protected FootFlagEncoder footEncoder;
+	protected EdgeExplorer footOutExplorer;
 
     // RoadNode 880
     protected static double node0Lat = 50.6992070044d;
@@ -66,7 +63,7 @@ public void initEncoding() {
             bikeEncoder = new BikeFlagEncoder();
         }
 
-        footEncoder = new FootFlagEncoder();
+        footEncoder = new OsFootFlagEncoder();
         encodingManager = createEncodingManager();
     }
 
@@ -76,7 +73,10 @@ public void initEncoding() {
      * @return
      */
     protected EncodingManager createEncodingManager() {
-        return new EncodingManager(footEncoder, bikeEncoder);
+    	List<FlagEncoder> list = new ArrayList<FlagEncoder>();
+    	list.add(footEncoder);
+    	list.add(bikeEncoder);
+        return new EncodingManager(list, 8);
     }
 
     protected OsDpnReader readGraphFile(GraphHopperStorage graph, File file)
@@ -95,11 +95,12 @@ protected GraphHopperStorage configureStorage(
         GraphExtension extendedStorage = turnRestrictionsImport ? new TurnCostExtension() : new GraphExtension.NoExtendedStorage();
         GraphHopperStorage graph = new GraphHopperStorage(new RAMDirectory(
                 directory, false), encodingManager, is3D, extendedStorage);
+        footOutExplorer = graph.createEdgeExplorer(new DefaultEdgeFilter(footEncoder, false, true));
         return graph;
     }
 
     protected int getEdge(int from, int to) {
-        EdgeIterator iter = carOutExplorer.setBaseNode(from);
+        EdgeIterator iter = footOutExplorer.setBaseNode(from);
         while (iter.next()) {
             if (iter.getAdjNode() == to) {
                 return iter.getEdge();
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/DpnAttributeAvoidanceTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/DpnAttributeAvoidanceTest.java
new file mode 100644
index 0000000000..7895d05a92
--- /dev/null
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/DpnAttributeAvoidanceTest.java
@@ -0,0 +1,22 @@
+package com.graphhopper.reader.osgb.dpn;
+
+import java.io.File;
+import java.io.IOException;
+
+import org.junit.Test;
+
+import com.graphhopper.routing.util.EdgeFilter;
+import com.graphhopper.storage.GraphHopperStorage;
+import com.graphhopper.util.GHUtility;
+
+public class DpnAttributeAvoidanceTest extends AbstractOsDpnReaderTest {
+	
+	@Test
+	public void testAvoidSand() throws IOException {
+		GraphHopperStorage graph = configureStorage(false, false);
+		File file = new File("./src/test/resources/com/graphhopper/reader/osgb/dpn/os-dpn-avoid.xml");
+		readGraphFile(graph, file);
+		GHUtility.printInfo(graph, 0, 30, EdgeFilter.ALL_EDGES);
+	}
+
+}
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnReaderTest.java
index 9b11ca016b..8dc699350d 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/OsDpnReaderTest.java
@@ -28,14 +28,14 @@ public void testReadDpnSampleLayout() throws IOException
 
 	assertEquals(5, graph.getNodes());
 
-	assertEquals(4, count(explorer.setBaseNode(0))); // Central Tower
-	assertEquals(1, count(explorer.setBaseNode(1))); // Cross Road Vertex
-	assertEquals(1, count(explorer.setBaseNode(2))); // Cross Road Vertex
-	assertEquals(1, count(explorer.setBaseNode(3))); // Cross Road Vertex
-	assertEquals(1, count(explorer.setBaseNode(4))); // Cross Road Vertex
+	assertEquals(4, count(footOutExplorer.setBaseNode(0))); // Central Tower
+	assertEquals(1, count(footOutExplorer.setBaseNode(1))); // Cross Road Vertex
+	assertEquals(1, count(footOutExplorer.setBaseNode(2))); // Cross Road Vertex
+	assertEquals(1, count(footOutExplorer.setBaseNode(3))); // Cross Road Vertex
+	assertEquals(1, count(footOutExplorer.setBaseNode(4))); // Cross Road Vertex
 
 	// Assert that this is true
-	EdgeIterator iter = explorer.setBaseNode(0);
+	EdgeIterator iter = footOutExplorer.setBaseNode(0);
 	assertTrue(iter.next());
 	assertEquals(4, iter.getAdjNode());
 	assertTrue(iter.next());
@@ -46,22 +46,22 @@ public void testReadDpnSampleLayout() throws IOException
 	assertEquals(1, iter.getAdjNode());
 	assertFalse(iter.next());
 
-	iter = explorer.setBaseNode(1);
+	iter = footOutExplorer.setBaseNode(1);
 	assertTrue(iter.next());
 	assertEquals(0, iter.getAdjNode());
 	assertFalse(iter.next());
 
-	iter = explorer.setBaseNode(2);
+	iter = footOutExplorer.setBaseNode(2);
 	assertTrue(iter.next());
 	assertEquals(0, iter.getAdjNode());
 	assertFalse(iter.next());
 
-	iter = explorer.setBaseNode(3);
+	iter = footOutExplorer.setBaseNode(3);
 	assertTrue(iter.next());
 	assertEquals(0, iter.getAdjNode());
 	assertFalse(iter.next());
 
-	iter = explorer.setBaseNode(4);
+	iter = footOutExplorer.setBaseNode(4);
 	assertTrue(iter.next());
 	assertEquals(0, iter.getAdjNode());
 	assertFalse(iter.next());
@@ -73,7 +73,7 @@ public void testReadDpnSampleName() throws IOException
 	final GraphHopperStorage graph = readGraph();
 	configureExplorer(graph);
 
-	EdgeIterator iter = explorer.setBaseNode(0);
+	EdgeIterator iter = footOutExplorer.setBaseNode(0);
 	assertTrue(iter.next());
 	assertTrue(iter.next());
 	assertTrue(iter.next());
@@ -87,7 +87,7 @@ public void testReadDpnSampleNameWithAlternate() throws IOException
 	final GraphHopperStorage graph = readGraph();
 	configureExplorer(graph);
 
-	EdgeIterator iter = explorer.setBaseNode(0);
+	EdgeIterator iter = footOutExplorer.setBaseNode(0);
 	assertTrue(iter.next());
 	assertTrue(iter.next());
 	assertTrue(iter.next());
@@ -101,7 +101,7 @@ public void testReadDpnSampleNameDefaultToTrackType() throws IOException
 	final GraphHopperStorage graph = readGraph();
 	configureExplorer(graph);
 
-	EdgeIterator iter = explorer.setBaseNode(0);
+	EdgeIterator iter = footOutExplorer.setBaseNode(0);
 	assertTrue(iter.next());
 	assertEquals("No Name field available so should report track type", "Alley", iter.getName());
     }
@@ -113,7 +113,7 @@ public void testReadDpnSampleNameDefaultToTrackFriendlyNameWhenNoPhysicalManifes
 	final GraphHopperStorage graph = readGraph();
 	configureExplorer(graph);
 
-	EdgeIterator iter = explorer.setBaseNode(0);
+	EdgeIterator iter = footOutExplorer.setBaseNode(0);
 	assertTrue(iter.next());
 	assertTrue(iter.next());
 	assertEquals("No Name field available so should be report track type", "Route",
@@ -122,7 +122,7 @@ public void testReadDpnSampleNameDefaultToTrackFriendlyNameWhenNoPhysicalManifes
 
     private void configureExplorer(final GraphHopperStorage graph)
     {
-	explorer = graph.createEdgeExplorer(new DefaultEdgeFilter(footEncoder, true, true));
+    	footOutExplorer = graph.createEdgeExplorer(new DefaultEdgeFilter(footEncoder, true, true));
     }
 
     private GraphHopperStorage readGraph() throws IOException
diff --git a/core/src/test/resources/com/graphhopper/reader/osgb/dpn/os-dpn-avoid.xml b/core/src/test/resources/com/graphhopper/reader/osgb/dpn/os-dpn-avoid.xml
new file mode 100644
index 0000000000..59190b4261
--- /dev/null
+++ b/core/src/test/resources/com/graphhopper/reader/osgb/dpn/os-dpn-avoid.xml
@@ -0,0 +1,175 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<gml:FeatureCollection xmlns:gml="http://www.opengis.net/gml/3.2"
+	xsi:schemaLocation="http://namespaces.ordnancesurvey.co.uk/networks/detailedPathNetwork/1.0 detailedPathNetwork.xsd http://www.opengis.net/gml/3.2 gml/3.2.1/gml.xsd"
+	gml:id="DPN" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xmlns:xs="http://www.w3.org/2001/XMLSchema"
+	xmlns:dpn="http://namespaces.ordnancesurvey.co.uk/networks/detailedPathNetwork/1.0"
+	xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gco="http://www.isotc211.org/2005/gco"
+	xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:gss="http://www.isotc211.org/2005/gss"
+	xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gsr="http://www.isotc211.org/2005/gsr"
+	xmlns:gmlxbt="http://www.opengis.net/gml/3.3/xbt">
+	<gml:featureMember>
+		<dpn:RouteNode gml:id='osgb4000000025277879'>
+			<dpn:versionID>2</dpn:versionID>
+			<dpn:versionDate>2005-09-13</dpn:versionDate>
+			<dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteNodeDescriptiveTermValue#Junction">Junction</dpn:descriptiveTerm>
+			<dpn:geometry>
+				<gml:Point srsName='dpn:BNG'>
+					<gml:pos>295000.000 90000.000 362.62</gml:pos>
+				</gml:Point>
+			</dpn:geometry>
+		</dpn:RouteNode>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteNode gml:id='osgb4000000025277880'>
+			<dpn:versionID>2</dpn:versionID>
+			<dpn:versionDate>2005-09-13</dpn:versionDate>
+			<dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteNodeDescriptiveTermValue#Junction">Junction</dpn:descriptiveTerm>
+			<dpn:geometry>
+				<gml:Point srsName='dpn:BNG'>
+					<gml:pos>290000.000 90000.000 362.62</gml:pos>
+				</gml:Point>
+			</dpn:geometry>
+		</dpn:RouteNode>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteNode gml:id='osgb4000000025277882'>
+			<dpn:versionID>2</dpn:versionID>
+			<dpn:versionDate>2005-09-13</dpn:versionDate>
+			   <dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteNodeDescriptiveTermValue#Junction">Junction</dpn:descriptiveTerm>
+			<dpn:geometry>
+				<gml:Point srsName='dpn:BNG'>
+					<gml:pos>270000.000 90000.000 362.62</gml:pos>
+				</gml:Point>
+			</dpn:geometry>
+		</dpn:RouteNode>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteNode gml:id='osgb4000000025277883'>
+			<dpn:versionID>2</dpn:versionID>
+			<dpn:versionDate>2005-09-13</dpn:versionDate>
+			   <dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteNodeDescriptiveTermValue#Junction">Junction</dpn:descriptiveTerm>
+			<dpn:geometry>
+				<gml:Point srsName='dpn:BNG'>
+					<gml:pos>280000.000 80000.000 362.62</gml:pos>
+				</gml:Point>
+			</dpn:geometry>
+		</dpn:RouteNode>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteNode gml:id='osgb4000000025277884'>
+			<dpn:versionID>2</dpn:versionID>
+			<dpn:versionDate>2005-09-13</dpn:versionDate>
+			<dpn:theme>Road Network</dpn:theme>
+			   <dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteNodeDescriptiveTermValue#Junction">Junction</dpn:descriptiveTerm>
+			<dpn:geometry>
+				<gml:Point srsName='dpn:BNG'>
+					<gml:pos>280000.000 95000.000 362.62</gml:pos>
+				</gml:Point>
+			</dpn:geometry>
+		</dpn:RouteNode>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteNode gml:id='osgb4000000025277885'>
+			<dpn:versionID>2</dpn:versionID>
+			<dpn:versionDate>2005-09-13</dpn:versionDate>
+			   <dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteNodeDescriptiveTermValue#Junction">Junction</dpn:descriptiveTerm>
+			<dpn:geometry>
+				<gml:Point srsName='dpn:BNG'>
+					<gml:pos>265000.000 90000.000 362.62</gml:pos>
+				</gml:Point>
+			</dpn:geometry>
+		</dpn:RouteNode>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteLink gml:id="osgb4000000025288016">
+			<dpn:versionID>4</dpn:versionID>
+			<dpn:versionDate>2006-02-03</dpn:versionDate>
+			<dpn:startNode xlink:href="#4000000025277879" />
+			<dpn:endNode xlink:href="#4000000025277880" />
+			<dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteLinkDescriptiveTermValue#NoPhysicalManifestation">No Physical Manifestation</dpn:descriptiveTerm>
+			<dpn:rightOfUse codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RightOfWayValue#Footpath">Footpath</dpn:rightOfUse>
+			<dpn:geometry>
+				<gml:LineString srsName="dpn:BNG">
+					<gml:posList srsDimension="3" count="2">295000.000 90000.000 362.62 290000.000 90000.000 362.62</gml:posList>
+				</gml:LineString>
+			</dpn:geometry>
+		</dpn:RouteLink>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteLink gml:id="osgb4000000025288017">
+			<dpn:versionID>4</dpn:versionID>
+			<dpn:versionDate>2006-02-03</dpn:versionDate>
+			<dpn:startNode xlink:href="#4000000025277880" />
+			<dpn:endNode xlink:href="#4000000025277884" />
+			<dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteLinkDescriptiveTermValue#NoPhysicalManifestation">No Physical Manifestation</dpn:descriptiveTerm>
+			<dpn:rightOfUse codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RightOfWayValue#Footpath">Footpath</dpn:rightOfUse>
+			<dpn:geometry>
+				<gml:LineString srsName="dpn:BNG">
+					<gml:posList srsDimension="3" count="2">290000.000 90000.000 362.62 280000.000 95000.000 362.62</gml:posList>
+				</gml:LineString>
+			</dpn:geometry>
+		</dpn:RouteLink>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteLink gml:id="osgb4000000025288018">
+			<dpn:versionID>4</dpn:versionID>
+			<dpn:versionDate>2006-02-03</dpn:versionDate>
+			<dpn:startNode xlink:href="#4000000025277884" />
+			<dpn:endNode xlink:href="#4000000025277882" />
+			<dpn:descriptiveTerm codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteLinkDescriptiveTermValue#NoPhysicalManifestation">No Physical Manifestation</dpn:descriptiveTerm>
+			<dpn:potentialHazardCrossed>Boulders</dpn:potentialHazardCrossed>
+			<dpn:rightOfUse codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RightOfWayValue#Footpath">Footpath</dpn:rightOfUse>
+			<dpn:geometry>
+				<gml:LineString srsName="dpn:BNG">
+					<gml:posList srsDimension="3" count="2">280000.000 95000.000 362.62 270000.000 90000.000 362.62</gml:posList>
+				</gml:LineString>
+			</dpn:geometry>
+		</dpn:RouteLink>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteLink gml:id="osgb4000000025288019">
+			<dpn:versionID>4</dpn:versionID>
+			<dpn:versionDate>2006-02-03</dpn:versionDate>
+			<dpn:startNode xlink:href="#4000000025277880" />
+			<dpn:endNode xlink:href="#4000000025277883" />
+			<dpn:descriptiveTerm	codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteLinkDescriptiveTermValue#NoPhysicalManifestation">No Physical Manifestation</dpn:descriptiveTerm>
+			<dpn:rightOfUse codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RightOfWayValue#Footpath">Footpath</dpn:rightOfUse>
+			<dpn:geometry>
+				<gml:LineString srsName="dpn:BNG">
+					<gml:posList srsDimension="3" count="2">290000.000 90000.000 362.62 280000.000 80000.000 362.62</gml:posList>
+				</gml:LineString>
+			</dpn:geometry>
+		</dpn:RouteLink>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteLink gml:id="osgb4000000025288020">
+			<dpn:versionID>4</dpn:versionID>
+			<dpn:versionDate>2006-02-03</dpn:versionDate>
+			<dpn:startNode xlink:href="#4000000025277883" />
+			<dpn:endNode xlink:href="#4000000025277882" />
+			<dpn:descriptiveTerm	codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteLinkDescriptiveTermValue#NoPhysicalManifestation">No Physical Manifestation</dpn:descriptiveTerm>
+			<dpn:rightOfUse codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RightOfWayValue#Footpath">Footpath</dpn:rightOfUse>
+			<dpn:geometry>
+				<gml:LineString srsName="dpn:BNG">
+					<gml:posList srsDimension="3" count="2">280000.000 80000.000 362.62 270000.000 90000.000 362.62</gml:posList>
+				</gml:LineString>
+			</dpn:geometry>
+		</dpn:RouteLink>
+	</gml:featureMember>
+	<gml:featureMember>
+		<dpn:RouteLink gml:id="osgb4000000025288021">
+			<dpn:versionID>4</dpn:versionID>
+			<dpn:versionDate>2006-02-03</dpn:versionDate>
+			<dpn:startNode xlink:href="#4000000025277882" />
+			<dpn:endNode xlink:href="#4000000025277885" />
+			<dpn:descriptiveTerm	codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RouteLinkDescriptiveTermValue#NoPhysicalManifestation">No Physical Manifestation</dpn:descriptiveTerm>
+			<dpn:rightOfUse codeSpace="http://www.ordnancesurvey.co.uk/xml/codelists/RightOfWayValue#Footpath">Footpath</dpn:rightOfUse>
+			<dpn:geometry>
+				<gml:LineString srsName="dpn:BNG">
+					<gml:posList srsDimension="3" count="2">265000.000 90000.000 362.62 270000.000 90000.000 362.62</gml:posList>
+				</gml:LineString>
+			</dpn:geometry>
+		</dpn:RouteLink>
+	</gml:featureMember>
+</gml:FeatureCollection>
\ No newline at end of file
