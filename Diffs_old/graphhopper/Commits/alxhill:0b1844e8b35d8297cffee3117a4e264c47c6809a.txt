diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
index 1a8858e570..3ab827ecbc 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
@@ -1,5 +1,6 @@
 package com.graphhopper.marmoset;
 
+import fi.iki.elonen.NanoHTTPD;
 import fi.iki.elonen.SimpleWebServer;
 import fi.iki.elonen.util.ServerRunner;
 import org.slf4j.Logger;
@@ -8,6 +9,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.net.InetSocketAddress;
+import java.util.stream.IntStream;
 
 /**
  * Created by alexander on 16/02/2016.
@@ -16,9 +18,11 @@
 
     private static MarmosetHopper mh;
     private static MarmosetSocketServer mss;
+    private static NanoHTTPD fileServer;
     private static boolean isRunning = false;
 
     private static Logger logger = LoggerFactory.getLogger(Marmoset.class);
+    private static Thread marmosetThread;
 
     public static void main(String[] args) throws IOException, InterruptedException
     {
@@ -27,6 +31,19 @@ public static void main(String[] args) throws IOException, InterruptedException
 
         startFileServer();
         startWebSocketServer();
+
+        System.out.println("Press enter to terminate");
+        try {
+            System.in.read();
+        }
+        catch (Throwable ignored) {}
+
+        mss.stop();
+        fileServer.stop();
+        if (marmosetThread != null)
+        {
+            marmosetThread.interrupt();
+        }
     }
 
     public static void run(int initialVehicles)
@@ -37,7 +54,7 @@ public static void run(int initialVehicles)
             Runnable task = () -> {
                 int i = 0;
                 mh.startSimulation(initialVehicles);
-                while (true)
+                while (!Thread.interrupted())
                 {
                     if (!mh.paused())
                     {
@@ -53,12 +70,13 @@ public static void run(int initialVehicles)
                     }
                     catch (InterruptedException e)
                     {
-                        e.printStackTrace();
+                        return;
                     }
                 }
             };
 
-            new Thread(task).start();
+            marmosetThread = new Thread(task);
+            marmosetThread.start();
         }
         else if (mh.paused())
         {
@@ -71,9 +89,10 @@ public static void pause()
         mh.pause();
     }
 
-    public static void addVehicle()
+    public static void addVehicles(int count)
     {
-        mh.addVehicle();
+        System.out.println("Adding " + count + " vehicles");
+        IntStream.range(0, count).forEach(i -> mh.addVehicle());
     }
 
     private static void startWebSocketServer()
@@ -87,12 +106,16 @@ private static void startWebSocketServer()
 
     private static void startFileServer()
     {
-        final File rootDir = new File("marmoset/src/main/webapp").getAbsoluteFile();
-        new Thread() {
-            @Override
-            public void run() {
-                ServerRunner.executeInstance(new SimpleWebServer(null, 8080, rootDir, true, null));
-            }
-        }.start();
+        File rootDir = new File("marmoset/src/main/webapp").getAbsoluteFile();
+        fileServer = new SimpleWebServer(null, 8080, rootDir, true, null);
+        try
+        {
+            fileServer.start(5000, false);
+            System.out.println("File server started");
+        }
+        catch (IOException e)
+        {
+            System.err.println("Failed to start server: " + e);
+        }
     }
 }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
index d9ad847c5a..27a8a64ecb 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
@@ -6,6 +6,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import java.io.IOException;
 import java.net.InetSocketAddress;
 import java.util.Collections;
 import java.util.HashSet;
@@ -30,6 +31,18 @@ public void distributeData(String s)
         sockets.stream().forEach(socket -> socket.send(s));
     }
 
+    @Override
+    public void stop()
+    {
+        sockets.stream().forEach(WebSocket::close);
+        try
+        {
+            super.stop(100);
+        }
+        catch (IOException | InterruptedException ignored)
+        {}
+    }
+
     @Override
     public void onOpen(WebSocket webSocket, ClientHandshake clientHandshake)
     {
@@ -53,9 +66,10 @@ public void onMessage(WebSocket webSocket, String s)
             String num = s.split("\\|")[1];
             Marmoset.run(Integer.valueOf(num, 10));
         }
-        else if (s.equals("addVehicle"))
+        else if (s.matches("addVehicles\\|\\d+"))
         {
-            Marmoset.addVehicle();
+            int num = Integer.valueOf(s.split("\\|")[1], 10);
+            Marmoset.addVehicles(num);
         }
         else if (s.equals("pause"))
         {
diff --git a/marmoset/src/main/webapp/index.html b/marmoset/src/main/webapp/index.html
index 52d9d29091..2910eb42f5 100644
--- a/marmoset/src/main/webapp/index.html
+++ b/marmoset/src/main/webapp/index.html
@@ -27,7 +27,7 @@
             <input type="button" id="join" value="Join Simulation">
             <input type="button" id="pause" value="Pause Simulation">
             <br><br>
-            <input type="button" name="addVehicles" id="addVehicle" value="Add Vehicle">
+            <input type="button" name="addVehicles" id="addVehicle" value="Add Vehicles">
         </div>
         <br>
         <div id="map"></div>
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index a86b1d8b81..9f61247ccb 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -29,7 +29,9 @@ function initButtons(carSet) {
     document.getElementById("pause").addEventListener("click", carSet.togglePause.bind(carSet));
 
     document.getElementById("addVehicle").addEventListener("click", function () {
-        carSet.ws.send("addVehicle");
+        var count = document.getElementById("initVehicles").value;
+        count = Math.max(1, count);
+        carSet.ws.send("addVehicles|" + count);
     });
 }
 
