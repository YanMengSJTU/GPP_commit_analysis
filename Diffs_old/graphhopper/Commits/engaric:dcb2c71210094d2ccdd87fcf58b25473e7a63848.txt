diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java
index e234cce5ec..d0c9fa67cb 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java
@@ -128,4 +128,13 @@ public void verifyStatusCode(int statusCode) {
 				(statusCode == actualstatusCode));
 
 	}
+
+	public boolean isRoute() {
+		boolean isRoute = false;
+		if(null!=parser.getRoutes())
+		{
+			isRoute=true;
+		}
+		return isRoute;
+	}
 }
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
index 4deb9cd568..eed29af013 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
@@ -122,5 +122,14 @@ public String getNearestPointDistance() {
 
 		return parser.getNearestPointDistance();
 	}
-
-}
+	
+	public Boolean isRoute()
+	{
+		Boolean isRoute=false;
+		if(null!=parser.getPaths())
+		{
+			isRoute= true;
+		}
+			return isRoute;
+		}
+	}
\ No newline at end of file
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
index 5a896076cf..be3acc2c45 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/JSONParser.java
@@ -172,7 +172,6 @@ public String getErrorMessage() {
 
 	public int getStatusCode() {
 
-		
 		JsonObject error = jObject.getAsJsonObject("error");
 
 		JsonPrimitive statusCode = error.getAsJsonPrimitive("statuscode");
diff --git a/acceptancetesting/src/test/cucumber/Routing-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
index ac9c88f7c5..c8e8c2c2df 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
@@ -5,25 +5,30 @@ Feature: Verify Error Messages from a routing service
   #Error Messages
   #Successful request
   @ErrorMessages
-  Scenario: Successful request with all parameters
-    Given I have route point as
+  Scenario Outline: Successful request with all parameters
+    Given I have route <point> as
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
-    And I have vehicle as "car"
-    And I have weighting as "fastest"
-    And I have locale as "en_GB"
-    And I have debug as "true"
-    And I have points_encoded as "true"
-    And I have calc_points as "true"
-    And I have instructions as "true"
-    And I have algorithm as "astar"
-    And I have type as "json"
+    And I have <vehicle> as "car"
+    And I have <weighting> as "fastest"
+    And I have <locale> as "en_GB"
+    And I have <debug> as "true"
+    And I have <points_encoded> as "true"
+    And I have <calc_points> as "true"
+    And I have <instructions> as "true"
+    And I have <algorithm> as "astar"
+    And I have <type> as "json"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
-    Then I should be able to verify the http statuscode as "200"
-    Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.729205,-3.523206 | Turn right onto WELL STREET | 210.0   | SW        | 9001 | 112.5    |           |
+    And I should be able to verify the http statuscode as "200"
+    And I receive a valid routing response
+  
+    Examples: 
+      | point | vehicle | weighting | locale | debug | points_encoded | calc_points | instructions | algorithm | type |
+      | point | vehicle | weighting | locale | debug | points_encoded | calc_points | instructions | algorithm | type |
+      | POINT | VEHICLE | WEIGHTING | LOCALE | DEBUG | POINTS_ENCODED | CALC_POINTS | INSTRUCTIONS | ALGORITHM | TYPE |
+      | Point | Vehicle | Weighting | Locale | Debug | Points_Encoded | Calc_Points | Instructions | Algorithm | Type |
+      | POinT | VEHiCLE | WEIGHtING | LOCaLE | DEbUG | POINTs_ENCODED | CALc_POINTS | INSTRuCTIONS | ALGOrITHM | TYpE |
 
   # Parameter :  point
   @ErrorMessages
@@ -39,7 +44,7 @@ Feature: Verify Error Messages from a routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                     | statusCode |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
       | car         |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
   @ErrorMessages
@@ -102,7 +107,7 @@ Feature: Verify Error Messages from a routing service
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                | statusCode |
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                 | statusCode |
       | car         |            | fastest   | json           | No point parameter provided. | 400        |
 
   # Parameter :  avoidances
@@ -141,7 +146,7 @@ Feature: Verify Error Messages from a routing service
 
   # Parameter :  locale
   @ErrorMessages
-  Scenario Outline: Invalid Parameter Value for "locale"      | t  |
+  Scenario Outline: Invalid Parameter Value for "locale"
     Given I have route point as
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature
index 892e811621..d425d0dc59 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter-Smoke.feature
@@ -6,25 +6,30 @@ Feature: Smoke Tests: Verify a route from A to B
   #Error Messages
   #Successful request
   @ErrorMessages @Smoke
-  Scenario: Successful request with all parameters
-    Given I have route point as
+  Scenario Outline: Successful request with all parameters
+    Given I have route <point> as
       | pointA              | pointB              |
       | 50.729961,-3.524853 | 50.723364,-3.523895 |
-    And I have vehicle as "car"
-    And I have weighting as "fastest"
-    And I have locale as "en_GB"
-    And I have debug as "true"
-    And I have points_encoded as "true"
-    And I have calc_points as "true"
-    And I have instructions as "true"
-    And I have algorithm as "astar"
-    And I have type as "json"
+    And I have <vehicle> as "car"
+    And I have <weighting> as "fastest"
+    And I have <locale> as "en_GB"
+    And I have <debug> as "true"
+    And I have <points_encoded> as "true"
+    And I have <calc_points> as "true"
+    And I have <instructions> as "true"
+    And I have <algorithm> as "astar"
+    And I have <type> as "json"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
-    Then I should be able to verify the http statuscode as "200"
-    Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.729205,-3.523206 | Turn right onto WELL STREET | 210.0   | SW        | 9001 | 112.5    |           |
+    And I should be able to verify the http statuscode as "200"
+    And I receive a valid routing response
+  
+    Examples: 
+      | point | vehicle | weighting | locale | debug | points_encoded | calc_points | instructions | algorithm | type |
+      | point | vehicle | weighting | locale | debug | points_encoded | calc_points | instructions | algorithm | type |
+      | POINT | VEHICLE | WEIGHTING | LOCALE | DEBUG | POINTS_ENCODED | CALC_POINTS | INSTRUCTIONS | ALGORITHM | TYPE |
+      | Point | Vehicle | Weighting | Locale | Debug | Points_Encoded | Calc_Points | Instructions | Algorithm | Type |
+      | POinT | VEHiCLE | WEIGHtING | LOCaLE | DEbUG | POINTs_ENCODED | CALc_POINTS | INSTRuCTIONS | ALGOrITHM | TYpE |
 
   # Parameter :  vehicle
   @ErrorMessages @Smoke
diff --git a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Smoke.feature b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Smoke.feature
index 1f1a913275..f51cbdd189 100644
--- a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Smoke.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Smoke.feature
@@ -6,25 +6,30 @@ Feature: Smoke Tests- Peak District: Verify Error Messsage for a route from A to
   #Error Messages
   #Successful request
   @ErrorMessages @Smoke
-  Scenario: Successful request with all parameters
-    Given I have route point as
+  Scenario Outline: Successful request with all parameters
+    Given I have route <point> as
       | pointA              | pointB             |
       | 53.176062,-1.871472 | 53.154773,-1.77272 |
-    And I have vehicle as "foot"
-    And I have weighting as "fastest"
-    And I have locale as "en_GB"
-    And I have debug as "true"
-    And I have points_encoded as "true"
-    And I have calc_points as "true"
-    And I have instructions as "true"
-    And I have algorithm as "astar"
-    And I have type as "json"
+    And I have <vehicle> as "foot"
+    And I have <weighting> as "fastest"
+    And I have <locale> as "en_GB"
+    And I have <debug> as "true"
+    And I have <points_encoded> as "true"
+    And I have <calc_points> as "true"
+    And I have <instructions> as "true"
+    And I have <algorithm> as "astar"
+    And I have <type> as "json"
     When I request for a route
     Then I should be able to verify the http response message as "OK"
-    Then I should be able to verify the http statuscode as "200"
-    Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
-      | 4             | 53.173017,-1.868287 | continue onto Route | 117.0   | SE        | 132624 | 184.2    |           |
+    And I should be able to verify the http statuscode as "200"
+    And I receive a valid routing response
+
+    Examples: 
+      | point | vehicle | weighting | locale | debug | points_encoded | calc_points | instructions | algorithm | type |
+      | point | vehicle | weighting | locale | debug | points_encoded | calc_points | instructions | algorithm | type |
+      | POINT | VEHICLE | WEIGHTING | LOCALE | DEBUG | POINTS_ENCODED | CALC_POINTS | INSTRUCTIONS | ALGORITHM | TYPE |
+      | Point | Vehicle | Weighting | Locale | Debug | Points_Encoded | Calc_Points | Instructions | Algorithm | Type |
+      | POinT | VEHiCLE | WEIGHtING | LOCaLE | DEbUG | POINTs_ENCODED | CALc_POINTS | INSTRuCTIONS | ALGOrITHM | TYpE |
 
   # Parameter :  vehicle
   @ErrorMessages @Smoke
