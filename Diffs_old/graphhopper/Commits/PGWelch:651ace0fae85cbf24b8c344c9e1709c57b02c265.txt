diff --git a/reader-shp/src/main/java/com/graphhopper/reader/shp/GraphhopperShp.java b/reader-shp/src/main/java/com/graphhopper/reader/shp/GraphhopperShp.java
index d5beccdf1c..13f90ca52b 100644
--- a/reader-shp/src/main/java/com/graphhopper/reader/shp/GraphhopperShp.java
+++ b/reader-shp/src/main/java/com/graphhopper/reader/shp/GraphhopperShp.java
@@ -1,3 +1,20 @@
+/*
+ *  Licensed to GraphHopper GmbH under one or more contributor
+ *  license agreements. See the NOTICE file distributed with this work for 
+ *  additional information regarding copyright ownership.
+ * 
+ *  GraphHopper GmbH licenses this file to you under the Apache License, 
+ *  Version 2.0 (the "License"); you may not use this file except in 
+ *  compliance with the License. You may obtain a copy of the License at
+ * 
+ *       http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
 package com.graphhopper.reader.shp;
 
 import java.util.HashSet;
@@ -7,20 +24,25 @@
 import com.graphhopper.reader.shp.OSMShapeFileReader.EdgeAddedListener;
 import com.graphhopper.storage.GraphHopperStorage;
 
-public class GraphhopperShp extends GraphHopper {
-	private final HashSet<EdgeAddedListener> edgeAddedListeners = new HashSet<>();
+/**
+ * 
+ * @author Phil
+ *
+ */
+public class GraphhopperSHP extends GraphHopper {
+    private final HashSet<EdgeAddedListener> edgeAddedListeners = new HashSet<>();
 
-	@Override
-	protected DataReader createReader(GraphHopperStorage ghStorage) {
-		OSMShapeFileReader reader = new OSMShapeFileReader(ghStorage);
-		for (EdgeAddedListener l : edgeAddedListeners) {
-			reader.addListener(l);
-		}
-		return initDataReader(reader);
-	}
+    @Override
+    protected DataReader createReader(GraphHopperStorage ghStorage) {
+        OSMShapeFileReader reader = new OSMShapeFileReader(ghStorage);
+        for (EdgeAddedListener l : edgeAddedListeners) {
+            reader.addListener(l);
+        }
+        return initDataReader(reader);
+    }
 
-	public void addListener(EdgeAddedListener l) {
-		edgeAddedListeners.add(l);
-	}
+    public void addListener(EdgeAddedListener l) {
+        edgeAddedListeners.add(l);
+    }
 
 }
