diff --git a/.gitignore b/.gitignore
index 3731f11fbf..9d7e6e686a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -36,4 +36,4 @@ android/.gradle
 .classpath
 .project
 local.properties
-tracks/
+gpx/
diff --git a/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java
index 93b19039db..24f16632a6 100644
--- a/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/BikeGenericFlagEncoder.java
@@ -174,7 +174,7 @@ protected BikeGenericFlagEncoder(int speedBits, double speedFactor, int maxTurnC
         setWayTypeSpeed(WayType.SMALL_WAY_PAVED.getValue(), 16);
         setWayTypeSpeed(WayType.SMALL_WAY_UNPAVED.getValue(), 10);
         setWayTypeSpeed(WayType.TRACK_EASY.getValue(), 14);
-        setWayTypeSpeed(WayType.TRACK_MIDDLE.getValue(), 12);
+        setWayTypeSpeed(WayType.TRACK_MIDDLE.getValue(), 10);
         setWayTypeSpeed(WayType.TRACK_HARD.getValue(), 8);
         setWayTypeSpeed(WayType.PATH_EASY.getValue(), 8);
         setWayTypeSpeed(WayType.PATH_MIDDLE.getValue(), 6);
diff --git a/core/src/main/java/com/graphhopper/util/profiles/GPXDataExtractor.java b/core/src/main/java/com/graphhopper/util/profiles/GPXDataExtractor.java
index 043d2e7d78..f652f438b4 100644
--- a/core/src/main/java/com/graphhopper/util/profiles/GPXDataExtractor.java
+++ b/core/src/main/java/com/graphhopper/util/profiles/GPXDataExtractor.java
@@ -67,7 +67,7 @@ public void setupMapMatching(GraphHopper hopper){
         // create MapMatching object, can and should be shared accross threads
         GraphHopperStorage graph = hopper.getGraphHopperStorage();
         LocationIndexMatch locationIndex = new LocationIndexMatch(graph, (LocationIndexTree) hopper.getLocationIndex());
-        encoder = (BikeGenericFlagEncoder) hopper.getEncodingManager().getEncoder("generic_bike");
+        encoder = (BikeGenericFlagEncoder) hopper.getEncodingManager().getEncoder("genbike");
 
         mapMatching = new MapMatching(graph, locationIndex, encoder);
         mapMatching.setForceRepair(true);
diff --git a/profiles.sh b/profiles.sh
index 9f978cebd7..e38e9d2d97 100755
--- a/profiles.sh
+++ b/profiles.sh
@@ -1,14 +1,19 @@
 #!/usr/bin/env bash
 
 GH_CLASS=com.graphhopper.util.profiles.Profiles
+CONFIG=config.properties
+VERSION=$(grep  "<name>" -A 1 pom.xml | grep version | cut -d'>' -f2 | cut -d'<' -f1)
+JAR=tools/target/graphhopper-tools-$VERSION-jar-with-dependencies.jar
 
 ACTION=$1
 USER=$2
-FILE=$3
-LOCATION=$4
 
-CONFIG=config.properties
-VERSION=$(grep  "<name>" -A 1 pom.xml | grep version | cut -d'>' -f2 | cut -d'<' -f1)
-JAR=tools/target/graphhopper-tools-$VERSION-jar-with-dependencies.jar
+if [ "$ACTION" == "create" ] || [ "$ACTION" == "print" ]; then
+  java -cp "$JAR" "$GH_CLASS" "$ACTION" "$USER"
+elif [ "$ACTION" == "add" ]; then
+  FILE=$3
+  OSM=$4
+  java -cp "$JAR" "$GH_CLASS" "$ACTION" "$USER" "$FILE" config="$CONFIG" osmreader.osm="$OSM"
+fi
+
 
-java -cp "$JAR" "$GH_CLASS" "$ACTION" "$USER" config="$CONFIG" graph.location="$GRAPH" osmreader.osm="$LOCATION"
\ No newline at end of file
