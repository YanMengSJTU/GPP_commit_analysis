diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnElement.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnElement.java
index 79b703df64..42f909e59c 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnElement.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnElement.java
@@ -134,7 +134,7 @@ else if (event == XMLStreamConstants.START_ELEMENT)
             }
             case "potentialHazardCrossed":
             {
-                event = handlePotentialHazzard(parser);
+                event = handlePotentialHazard(parser);
                 break;
             }
 
@@ -158,7 +158,7 @@ protected int handleRightOfUse(XMLStreamReader parser) throws XMLStreamException
         return parser.next();
     }
     
-    protected int handlePotentialHazzard(XMLStreamReader parser) throws XMLStreamException
+    protected int handlePotentialHazard(XMLStreamReader parser) throws XMLStreamException
     {
         return parser.next();
     }
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
index 0514697f85..ef900fd519 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/OsDpnWay.java
@@ -52,7 +52,7 @@
     private static final Logger logger = LoggerFactory
             .getLogger(OsDpnWay.class);
     private static OsDpnOsmAttributeMappingVisitor[] rightOfWayVisitors = {new BridleWay(), new PermissiveBridleWay(), new BywayOpenToAllTraffic(), new Footpath(), new PermissivePath(), new RestrictedByway()};
-    private static OsDpnOsmAttributeMappingVisitor[] potentialHazzardVisitors = {new Boulders(), new Cliff(), new Marsh(), new Mud(), new Sand(), new Scree(), new Shingle(), new Spoil(), new Rock(), new TidalWater()};
+    private static OsDpnOsmAttributeMappingVisitor[] potentialHazardVisitors = {new Boulders(), new Cliff(), new Marsh(), new Mud(), new Sand(), new Scree(), new Shingle(), new Spoil(), new Rock(), new TidalWater()};
 
     /**
      * Constructor for XML Parser
@@ -104,13 +104,13 @@ protected int handleRightOfUse(XMLStreamReader parser) throws XMLStreamException
     }
     
     @Override
-    protected int handlePotentialHazzard(XMLStreamReader parser) throws XMLStreamException
+    protected int handlePotentialHazard(XMLStreamReader parser) throws XMLStreamException
     {
         String attributeValue = parser.getElementText().replaceAll(" ", "").toLowerCase();
-        for(OsDpnOsmAttributeMappingVisitor potentialHazzardVisitor: potentialHazzardVisitors) {
+        for(OsDpnOsmAttributeMappingVisitor potentialHazzardVisitor: potentialHazardVisitors) {
         	potentialHazzardVisitor.visitWayAttribute(attributeValue, this);
         }
-        return super.handlePotentialHazzard(parser);
+        return super.handlePotentialHazard(parser);
     }
 
     @Override
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/InlandWaterTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/InlandWaterTest.java
index 337b81cb00..978b802f23 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/InlandWaterTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/InlandWaterTest.java
@@ -17,7 +17,7 @@
 
 	    @BeforeClass
 	    public static void createVisitor() {
-	        visitor = new TidalWater();
+	        visitor = new InlandWater();
 	    }
 
 	    @Before
