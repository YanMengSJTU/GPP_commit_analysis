diff --git a/web/src/main/resources/assets/js/lib/leaflet_numbered_markers.js b/web/src/main/resources/assets/js/lib/leaflet_numbered_markers.js
index 2ab1983b9a..9ff3b529c2 100644
--- a/web/src/main/resources/assets/js/lib/leaflet_numbered_markers.js
+++ b/web/src/main/resources/assets/js/lib/leaflet_numbered_markers.js
@@ -27,4 +27,35 @@ L.NumberedDivIcon = L.Icon.extend({
   createShadow: function () {
     return null;
   }
+});
+
+L.NumberedDivIconPolygon = L.Icon.extend({
+    options: {
+        iconUrl: './img/marker_hole_purple.png',
+        number: '',
+        shadowUrl: null,
+        iconSize: new L.Point(25, 41),
+        iconAnchor: new L.Point(12, 40),
+        popupAnchor: new L.Point(0, -33),
+        shadowSize: new L.Point(50, -64),
+        shadowAnchor: new L.Point(4, -62),
+        className: 'leaflet-div-icon'
+    },
+
+    createIcon: function () {
+        var div = document.createElement('div');
+        var img = this._createImg(this.options['iconUrl']);
+        var numdiv = document.createElement('div');
+        numdiv.setAttribute ( "class", "number" );
+        numdiv.innerHTML = this.options['number'] || '';
+        div.appendChild ( img );
+        div.appendChild ( numdiv );
+        this._setIconStyles(div, 'icon');
+        return div;
+    },
+
+    //you could change this to add a shadow like in the normal marker if you really wanted
+        createShadow: function () {
+        return null;
+    }
 });
\ No newline at end of file
diff --git a/web/src/main/resources/assets/js/main-template.js b/web/src/main/resources/assets/js/main-template.js
index 655e5055ef..97ac9ecac8 100644
--- a/web/src/main/resources/assets/js/main-template.js
+++ b/web/src/main/resources/assets/js/main-template.js
@@ -418,6 +418,13 @@ function deleteCoord(e) {
     routeLatLng(ghRequest, false);
 }
 
+function deletePolygon(e) {
+    var latlng = e.relatedTarget.getLatLng();
+    ghRequest.polygon.removeSingle(latlng);
+    mapLayer.clearLayers();
+    routeLatLng(ghRequest, false);
+}
+
 function setEndCoord(e) {
     var index = ghRequest.route.size() - 1;
     ghRequest.route.set(e.latlng.wrap(), index);
@@ -654,11 +661,12 @@ function routeLatLng(request, doQuery) {
 
             geoJsons.push(geojsonFeature);
             mapLayer.addDataToRoutingLayer(geojsonFeature);
-            let polyCoord = []
+            let polyCoord = [];
+            var marker;
             for (var polyIndex = 0; polyIndex < request.polygon.length; polyIndex++) {
                 latlng = [request.polygon[polyIndex].lng,request.polygon[polyIndex].lat];
                 polyCoord.push(latlng)
-                mapLayer.createPolygonMarker(polyIndex, latlng, request);
+                generatePolyFlags(polyIndex,latlng,request)
             }
             if (request.polygon[0] !== undefined) {
                 polyCoord.push([request.polygon[0].lng,request.polygon[0].lat])
@@ -772,7 +780,21 @@ function routeLatLng(request, doQuery) {
         });
     });
 }
-
+function generatePolyFlags(polyIndex, latlng, request){
+                marker = mapLayer.createPolygonMarker(polyIndex, latlng, request, deletePolygon);
+                marker.on('dragend', function (e) {
+                            mapLayer.clearLayers();
+                            // inconsistent leaflet API: event.target.getLatLng vs. mouseEvent.latlng?
+                            var latlng = e.target.getLatLng();
+                            autocomplete.hide();
+                            console.log(polyIndex)
+                            request.polygon.getIndex(polyIndex).setCoord(latlng.lat, latlng.lng);
+                            //resolveIndex(polyIndex);
+                            // do not wait for resolving and avoid zooming when dragging
+                            request.do_zoom = false;
+                            routeLatLng(request, false);
+                        });
+}
 function mySubmit() {
     var fromStr,
             toStr,
diff --git a/web/src/main/resources/assets/js/map.js b/web/src/main/resources/assets/js/map.js
index e3a5d75e3d..631a409c66 100644
--- a/web/src/main/resources/assets/js/map.js
+++ b/web/src/main/resources/assets/js/map.js
@@ -431,18 +431,20 @@ var polygonIcon = L.icon({
     iconAnchor: [12, 40]
 });
 
-module.exports.createPolygonMarker = function(index, coord, ghRequest) {
-console.log("lala1")
-
-console.log(coord)
-    return L.marker([coord[1], coord[0]], {icon: polygonIcon, draggable:false}).addTo(map);
+module.exports.createPolygonMarker = function(index, coord, ghRequest, deletePolygon) {
+    return L.marker([coord[1], coord[0]], {icon: new L.NumberedDivIconPolygon({number: index + 1}), draggable:true,
+          contextmenu: true,
+          contextmenuItems: defaultContextmenuItems.concat([{
+                  text: "Delete from Polygon",
+                  callback: deletePolygon,
+                  disabled: false, // prevent to and from
+                  index: 0
+              }]),
+          contextmenuInheritItems: false})
+    .addTo(polygonLayer);
 }
 
 module.exports.createMarker = function (index, coord, setToEnd, setToStart, deleteCoord, ghRequest) {
-console.log("lala2")
-
-console.log(coord)
-
     var toFrom = getToFrom(index, ghRequest);
     return L.marker([coord.lat, coord.lng], {
         icon: ((toFrom === FROM) ? iconFrom : ((toFrom === TO) ? iconTo : new L.NumberedDivIcon({number: index}))),
