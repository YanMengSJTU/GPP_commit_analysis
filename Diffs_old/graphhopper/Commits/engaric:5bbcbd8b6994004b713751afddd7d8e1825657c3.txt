diff --git a/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java b/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java
index 9611bf8233..28470ad35b 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/OSITNElement.java
@@ -36,11 +36,12 @@
 import com.graphhopper.reader.RoutingElement;
 
 /**
- * Base class for all OSM objects
+ * Base class for all OsITN objects
  * <p/>
  *
  * @author Nop
  * @author Peter
+ * @author stuartadam
  * @author phopkins
  */
 public abstract class OSITNElement implements RoutingElement {
@@ -151,10 +152,10 @@ protected void readTags(XMLStreamReader parser) throws XMLStreamException, Misma
                         event = handleDescriptiveGroup(parser);
                         break;
                     }
-                    // case "natureOfRoad": {
-                    // event = handleRoadNature(parser);
-                    // break;
-                    // }
+                    case "natureOfRoad": {
+                        event = handleRoadNature(parser);
+                        break;
+                    }
                     case "roadNumber":
                     case "name":
                     case "alternativeName":
@@ -176,13 +177,16 @@ protected void readTags(XMLStreamReader parser) throws XMLStreamException, Misma
     }
 
     private int handleRoadNature(XMLStreamReader parser) throws XMLStreamException {
-        String nature = resolveNature(parser.getElementText());
-        String highwayType = getTag("highway");
-        if (null != nature && null != highwayType) {
-            highwayType = highwayType + "-";
-            highwayType = highwayType + nature;
-            setTag("highway", highwayType);
-        }
+//        String nature = resolveNature(parser.getElementText());
+//        String highwayType = getTag("highway");
+//        if (null != nature && null != highwayType) {
+//            highwayType = highwayType + "-";
+//            highwayType = highwayType + nature;
+//            setTag("highway", highwayType);
+//        }
+    	if(parser.getElementText().equals("Roundabout")) {
+    		setTag("junction", "roundabout");
+    	}
         return parser.getEventType();
     }
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/OSITNWayTest.java b/core/src/test/java/com/graphhopper/reader/osgb/OSITNWayTest.java
new file mode 100644
index 0000000000..0143714e0c
--- /dev/null
+++ b/core/src/test/java/com/graphhopper/reader/osgb/OSITNWayTest.java
@@ -0,0 +1,46 @@
+package com.graphhopper.reader.osgb;
+
+import static org.junit.Assert.*;
+
+import java.io.StringReader;
+
+import javax.xml.stream.XMLInputFactory;
+import javax.xml.stream.XMLStreamException;
+import javax.xml.stream.XMLStreamReader;
+
+import org.junit.Test;
+import org.opengis.geometry.MismatchedDimensionException;
+import org.opengis.referencing.FactoryException;
+import org.opengis.referencing.operation.TransformException;
+
+public class OSITNWayTest {
+
+	@Test
+	public void testReadTagsForRoundabout() throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
+		String wayWithRoundabout = "<?xml version='1.0' encoding='UTF-8'?>\n" + 
+				"<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'\n" + 
+				"	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'\n" + 
+				"	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'\n" + 
+				"	fid='GDS-58096-1'>" +
+				"		<osgb:RoadLink fid='osgb4000000009314037'>\n" + 
+				"<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>\n" + 
+				"<osgb:natureOfRoad>Roundabout</osgb:natureOfRoad>\n" + 
+				"<osgb:length>12.04</osgb:length>\n" + 
+				"<osgb:polyline>\n" + 
+				"<gml:LineString srsName='osgb:BNG'>\n" + 
+				"<gml:coordinates>356370.000,430137.000 356367.000,430139.000 356366.000,430141.000 356365.386,430142.099 356365.000,430144.000 356365.000,430146.000 356365.000,430147.000 </gml:coordinates>\n" + 
+				"</gml:LineString>\n" + 
+				"</osgb:polyline>\n" + 
+				"<osgb:directedNode orientation='-' xlink:href='#osgb4000000009126286'/>\n" + 
+				"<osgb:directedNode orientation='+' xlink:href='#osgb4000000009126257'/>\n" + 
+				"<osgb:referenceToTopographicArea xlink:href='#osgb1000000214086160'/>\n" + 
+				"</osgb:RoadLink>"; 
+		
+		XMLInputFactory factory = XMLInputFactory.newInstance();
+		StringReader stringReader = new StringReader(wayWithRoundabout);
+		XMLStreamReader parser = factory.createXMLStreamReader(stringReader);
+		OSITNWay way = OSITNWay.create(0, parser);
+		assertTrue(way.hasTag("junction", "roundabout"));
+	}
+
+}
