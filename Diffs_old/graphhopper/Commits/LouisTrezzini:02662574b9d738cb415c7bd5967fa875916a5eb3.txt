diff --git a/docs/web/quickstart.md b/docs/web/quickstart.md
index ac47f822b8..89a5718855 100644
--- a/docs/web/quickstart.md
+++ b/docs/web/quickstart.md
@@ -3,14 +3,15 @@
 If you want to build GraphHopper from source look at the [Developers page](../core/quickstart-from-source.md). 
 The following steps are simpler and only need the JRE, a jar file and an OSM file.
 
- 1. Install the latest JRE and get the [GraphHopper Web Service](https://github.com/graphhopper/graphhopper/blob/master/README.md#get-started)
-as jar file
- 2. Copy an OSM file to the same directory. For example [berlin-latest.osm.pbf](http://download.geofabrik.de/europe/germany/berlin.html)
- 3. Start GraphHopper Maps via: 
+ 1. Install the latest JRE 
+ 2. Get the [GraphHopper Web Service](https://github.com/graphhopper/graphhopper/blob/0.11/README.md#get-started)
+as jar file and download this [config-example.yml](https://raw.githubusercontent.com/graphhopper/graphhopper/0.11/config-example.yml)
+ 3. Copy an OSM file to the same directory. For example [berlin-latest.osm.pbf](http://download.geofabrik.de/europe/germany/berlin.html)
+ 4. Start GraphHopper Maps via: 
     ```bash
     java -Dgraphhopper.datareader.file=berlin-latest.osm.pbf -jar *.jar server config-example.yml
     ```
- 4. After you see 'Started server at HTTP 8989' go to [http://localhost:8989/](http://localhost:8989/) and you should see a map of Berlin. You should be able to click on the map and a route appears.
+ 5. After you see 'Started server at HTTP 8989' go to [http://localhost:8989/](http://localhost:8989/) and you should see a map of Berlin. You should be able to click on the map and a route appears.
 
 See [here](./../core/elevation.md) how to easily enable elevation data. To see how GraphHopper is configured for production usage, see the [deployment guide](./../core/deploy.md).
 
