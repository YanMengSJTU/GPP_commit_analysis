diff --git a/.gitignore b/.gitignore
index 9716b5c34c..ab07f17340 100644
--- a/.gitignore
+++ b/.gitignore
@@ -35,3 +35,4 @@ android/.gradle
 .settings/
 .classpath
 .project
+local.properties
diff --git a/android/app/build.gradle b/android/app/build.gradle
index 088d4f2d5c..8c1da116eb 100644
--- a/android/app/build.gradle
+++ b/android/app/build.gradle
@@ -1,8 +1,8 @@
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion 19
-    buildToolsVersion "21.1.2"
+    compileSdkVersion 22
+    buildToolsVersion "23.0.1"
 
     defaultConfig {
         applicationId "com.graphhopper.android"
diff --git a/android/build.gradle b/android/build.gradle
index fd24035602..2d3bd42a46 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -4,9 +4,10 @@ buildscript {
         mavenLocal()
         mavenCentral()
         /*jcenter()*/
+        maven { url "https://oss.sonatype.org/content/groups/public/" }
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.0.0'
+        classpath 'com.android.tools.build:gradle:1.3.1'
     }
 }
 
@@ -15,5 +16,6 @@ allprojects {
         mavenLocal()
         mavenCentral()
         /*jcenter()*/
+        maven { url "https://oss.sonatype.org/content/groups/public/" }
     }
 }
diff --git a/android/gradle/wrapper/gradle-wrapper.properties b/android/gradle/wrapper/gradle-wrapper.properties
index 0c71e760dc..e7faee01a4 100644
--- a/android/gradle/wrapper/gradle-wrapper.properties
+++ b/android/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.4-all.zip
diff --git a/android/local.properties b/android/local.properties
deleted file mode 100644
index efc8662bc7..0000000000
--- a/android/local.properties
+++ /dev/null
@@ -1,7 +0,0 @@
-## This file must *NOT* be checked into Version Control Systems,
-# as it contains information specific to your local configuration.
-#
-# Location of the SDK. This is only used by Gradle.
-#
-#Mon Jan 19 09:31:41 CET 2015
-sdk.dir=/home/peterk/Programme/adt-bundle-linux-x86/sdk
diff --git a/config-example.properties b/config-example.properties
index 9464954028..ec4752d466 100644
--- a/config-example.properties
+++ b/config-example.properties
@@ -32,6 +32,9 @@ graph.dataaccess=RAM_STORE
 # if you want to reduce storage size and you don't need instructions for the resulting path use:
 # osmreader.instructions=false
 
+# will write way names in the preferred language (language code as defined in ISO 639-1 or ISO 639-2):
+# osmreader.preferred-language=en
+
 #### Speed-up Mode vs. Flexibility Mode ####
 #
 # By default the speed-up mode with the 'fastest' weighting is used. Internally a graph preparation via
@@ -41,7 +44,9 @@ graph.dataaccess=RAM_STORE
 #
 # Disable the speed-up mode (contraction hierarchies, CH) via enabling the flexibility mode:
 # prepare.chWeighting=no
-
+#
+# To make preparation faster for multiple flagEncoders you can increase the default threads if you have enough RAM
+# prepare.threads=1
 
 ##### Web #####
 # if you want to support jsonp response type you need to add it explicitely here. By default it is disabled for 
diff --git a/core/files/changelog.txt b/core/files/changelog.txt
index f0775a9a96..b7b44f0f85 100644
--- a/core/files/changelog.txt
+++ b/core/files/changelog.txt
@@ -1,3 +1,6 @@
+0.6
+    specify the preferred-language for way names during graph import (ISO 639-1 or ISO 639-2)
+
 0.5
     Several names have changed see #466, #467, #468
     GraphHopper.optimize removed use postProcessing instead
diff --git a/core/src/main/java/com/graphhopper/GHResponse.java b/core/src/main/java/com/graphhopper/GHResponse.java
index 0742ff772c..0f4252ca41 100644
--- a/core/src/main/java/com/graphhopper/GHResponse.java
+++ b/core/src/main/java/com/graphhopper/GHResponse.java
@@ -36,6 +36,8 @@
     private final List<Throwable> errors = new ArrayList<Throwable>(4);
     private PointList list = PointList.EMPTY;
     private double distance;
+    private double ascend;
+    private double descend;
     private double routeWeight;
     private long time;
     private InstructionList instructions;
@@ -122,6 +124,44 @@ public double getDistance()
         return distance;
     }
 
+    public GHResponse setAscend( double ascend )
+    {
+        if (ascend < 0)
+            throw new IllegalArgumentException("ascend has to be strictly positive");
+
+        this.ascend = ascend;
+        return this;
+    }
+
+    /**
+     * This method returns the total elevation change (going upwards) in meter.
+     * <p>
+     * @return ascend in meter
+     */
+    public double getAscend()
+    {
+        return ascend;
+    }
+
+    public GHResponse setDescend( double descend )
+    {
+        if (descend < 0)
+            throw new IllegalArgumentException("descend has to be strictly positive");
+
+        this.descend = descend;
+        return this;
+    }
+
+    /**
+     * This method returns the total elevation change (going downwards) in meter.
+     * <p>
+     * @return decline in meter
+     */
+    public double getDescend()
+    {
+        return descend;
+    }
+
     public GHResponse setTime( long timeInMillis )
     {
         this.time = timeInMillis;
diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java
index d9b7a0edc5..96f6bf8fa0 100644
--- a/core/src/main/java/com/graphhopper/GraphHopper.java
+++ b/core/src/main/java/com/graphhopper/GraphHopper.java
@@ -29,6 +29,7 @@
 import com.graphhopper.storage.index.QueryResult;
 import com.graphhopper.util.*;
 import com.graphhopper.util.shapes.GHPoint;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -37,6 +38,8 @@
 import java.text.SimpleDateFormat;
 import java.util.*;
 import java.util.Map.Entry;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.TimeUnit;
 
 /**
  * Easy to use access point to configure import and (offline) routing.
@@ -61,6 +64,7 @@
     private final String fileLockName = "gh.lock";
     private boolean allowWrites = true;
     boolean enableInstructions = true;
+    private String preferredLanguage = "";
     private boolean fullyLoaded = false;
     // for routing
     private double defaultWeightLimit = Double.MAX_VALUE;
@@ -78,6 +82,8 @@
     private boolean doPrepare = true;
     private boolean chEnabled = true;
     private String chWeightingStr = "fastest";
+    private int chPrepareThreads = -1;
+    private ExecutorService chPreparePool;
     private int preparePeriodicUpdates = -1;
     private int prepareLazyUpdates = -1;
     private int prepareNeighborUpdates = -1;
@@ -94,6 +100,7 @@
 
     public GraphHopper()
     {
+        setCHPrepareThreads(1);
     }
 
     /**
@@ -302,6 +309,22 @@ public String getCHWeighting()
         return chWeightingStr;
     }
 
+    /**
+     * This method changes the number of threads used for preparation on import. Default is 1. Make
+     * sure that you have enough memory to increase this number!
+     */
+    public GraphHopper setCHPrepareThreads( int prepareThreads )
+    {
+        this.chPrepareThreads = prepareThreads;
+        this.chPreparePool = java.util.concurrent.Executors.newFixedThreadPool(chPrepareThreads);
+        return this;
+    }
+
+    public int getCHPrepareThreads()
+    {
+        return chPrepareThreads;
+    }
+
     /**
      * Disables the "CH-preparation" preparation only. Use only if you know what you do. To disable
      * the full usage of CH use setCHEnable(false) instead.
@@ -372,6 +395,32 @@ public GraphHopper setEnableInstructions( boolean b )
         return this;
     }
 
+    /**
+     * This method specifies the preferred language for way names during import.
+     * <p>
+     * Language code as defined in ISO 639-1 or ISO 639-2.
+     * <ul>
+     * <li>If no preferred language is specified, only the default language with no tag will be
+     * imported.</li>
+     * <li>If a language is specified, it will be imported if its tag is found, otherwise fall back
+     * to default language.</li>
+     * </ul>
+     */
+    public GraphHopper setPreferredLanguage( String preferredLanguage )
+    {
+        ensureNotLoaded();
+        if (preferredLanguage == null)
+            throw new IllegalArgumentException("preferred language cannot be null");
+
+        this.preferredLanguage = preferredLanguage;
+        return this;
+    }
+
+    public String getPreferredLanguage()
+    {
+        return preferredLanguage;
+    }
+
     /**
      * This methods enables gps point calculation. If disabled only distance will be calculated.
      */
@@ -528,6 +577,10 @@ public GraphHopper init( CmdArgs args )
         sortGraph = args.getBool("graph.doSort", sortGraph);
         removeZipped = args.getBool("graph.removeZipped", removeZipped);
         int bytesForFlags = args.getInt("graph.bytesForFlags", 4);
+        String flagEncoders = args.get("graph.flagEncoders", "");
+        if (!flagEncoders.isEmpty())
+            setEncodingManager(new EncodingManager(flagEncoders, bytesForFlags));
+
         if (args.get("graph.locktype", "native").equals("simple"))
             lockFactory = new SimpleFSLockFactory();
         else
@@ -565,6 +618,7 @@ public GraphHopper init( CmdArgs args )
 
         // prepare CH        
         doPrepare = args.getBool("prepare.doPrepare", doPrepare);
+        setCHPrepareThreads(args.getInt("prepare.threads", chPrepareThreads));
 
         String tmpCHWeighting = args.get("prepare.chWeighting", "fastest");
         chEnabled = "fastest".equals(tmpCHWeighting) || "shortest".equals(tmpCHWeighting);
@@ -579,12 +633,10 @@ public GraphHopper init( CmdArgs args )
 
         // osm import
         osmReaderWayPointMaxDistance = args.getDouble("osmreader.wayPointMaxDistance", osmReaderWayPointMaxDistance);
-        String flagEncoders = args.get("graph.flagEncoders", "");
-        if (!flagEncoders.isEmpty())
-            setEncodingManager(new EncodingManager(flagEncoders, bytesForFlags));
 
         workerThreads = args.getInt("osmreader.workerThreads", workerThreads);
         enableInstructions = args.getBool("osmreader.instructions", enableInstructions);
+        preferredLanguage = args.get("osmreader.preferred-language", preferredLanguage);
 
         // index
         preciseIndexResolution = args.getInt("index.highResolution", preciseIndexResolution);
@@ -667,6 +719,7 @@ protected DataReader importData() throws IOException
                     + " but also cannot import from OSM file as it wasn't specified!");
 
         encodingManager.setEnableInstructions(enableInstructions);
+        encodingManager.setPreferredLanguage(preferredLanguage);
         DataReader reader = createReader(ghStorage);
         logger.info("using " + ghStorage.toString() + ", memory:" + Helper.getMemInfo());
         reader.readGraph();
@@ -815,9 +868,9 @@ protected void createCHPreparations()
         if (algoFactories.isEmpty())
             throw new IllegalStateException("No algorithm factories found. Call load before?");
 
-        Set<Weighting> set = new LinkedHashSet<Weighting>(algoFactories.keySet());
+        Set<Weighting> orderedSet = new LinkedHashSet<Weighting>(algoFactories.keySet());
         algoFactories.clear();
-        for (Weighting weighting : set)
+        for (Weighting weighting : orderedSet)
         {
             PrepareContractionHierarchies tmpPrepareCH = new PrepareContractionHierarchies(
                     new GHDirectory("", DAType.RAM_INT), ghStorage, ghStorage.getGraph(CHGraph.class, weighting),
@@ -1115,18 +1168,55 @@ protected void prepare()
         if (tmpPrepare)
         {
             ensureWriteAccess();
+
+            if (chPrepareThreads > 1 && dataAccessType.isMMap() && !dataAccessType.isSynched())
+                throw new IllegalStateException("You cannot execute CH preparation in parallel for MMAP without synching! Specify MMAP_SYNC or use 1 thread only");
+
             ghStorage.freeze();
 
             int counter = 0;
-            for (Entry<Weighting, RoutingAlgorithmFactory> entry : algoFactories.entrySet())
+            for (final Entry<Weighting, RoutingAlgorithmFactory> entry : algoFactories.entrySet())
             {
                 logger.info((++counter) + "/" + algoFactories.entrySet().size() + " calling prepare.doWork for " + entry.getKey() + " ... (" + Helper.getMemInfo() + ")");
                 if (!(entry.getValue() instanceof PrepareContractionHierarchies))
                     throw new IllegalStateException("RoutingAlgorithmFactory is not suited for CH preparation " + entry.getValue());
 
-                ((PrepareContractionHierarchies) entry.getValue()).doWork();
+                final String name = CHGraphImpl.weightingToFileName(entry.getKey());
+                chPreparePool.execute(new Runnable()
+                {
+                    @Override
+                    public void run()
+                    {
+                        String errorKey = "prepare.error." + name;
+                        try
+                        {
+                            ghStorage.getProperties().put(errorKey, "CH preparation incomplete");
+                            // toString is not taken into account so we need to cheat, see http://stackoverflow.com/q/6113746/194609 for other options                        
+                            Thread.currentThread().setName(name);
+                            PrepareContractionHierarchies pch = (PrepareContractionHierarchies) entry.getValue();
+                            pch.doWork();
+                            ghStorage.getProperties().put(errorKey, "");
+                            ghStorage.getProperties().put("prepare.date." + name, formatDateTime(new Date()));
+                        } catch (Exception ex)
+                        {
+                            logger.error("Problem while CH preparation " + name);
+                            ghStorage.getProperties().put(errorKey, ex.getMessage());
+                        }
+                    }
+                });
+            }
+
+            chPreparePool.shutdown();
+            try
+            {
+                if (!chPreparePool.awaitTermination(Integer.MAX_VALUE, TimeUnit.DAYS))
+                    chPreparePool.shutdownNow();
+
+            } catch (InterruptedException ie)
+            {
+                chPreparePool.shutdownNow();
+                Thread.currentThread().interrupt();
             }
-            ghStorage.getProperties().put("prepare.date", formatDateTime(new Date()));
         }
         ghStorage.getProperties().put("prepare.done", tmpPrepare);
     }
diff --git a/core/src/main/java/com/graphhopper/reader/OSMElement.java b/core/src/main/java/com/graphhopper/reader/OSMElement.java
index eca6f50781..660b924a0d 100644
--- a/core/src/main/java/com/graphhopper/reader/OSMElement.java
+++ b/core/src/main/java/com/graphhopper/reader/OSMElement.java
@@ -127,7 +127,7 @@ public void setTag( String name, Object value )
     }
 
     /**
-     * Chaeck that the object has a given tag with a given value.
+     * Check that the object has a given tag with a given value.
      */
     public boolean hasTag( String key, Object value )
     {
diff --git a/core/src/main/java/com/graphhopper/reader/OSMReader.java b/core/src/main/java/com/graphhopper/reader/OSMReader.java
index 8b0cc660ac..6c23b71835 100644
--- a/core/src/main/java/com/graphhopper/reader/OSMReader.java
+++ b/core/src/main/java/com/graphhopper/reader/OSMReader.java
@@ -353,8 +353,8 @@ void processWay( OSMWay way )
         long relationFlags = getRelFlagsMap().get(way.getId());
 
         // TODO move this after we have created the edge and know the coordinates => encodingManager.applyWayTags
-        // estimate length of the track e.g. for ferry speed calculation
         TLongList osmNodeIds = way.getNodes();
+        // Estimate length of ways containing a route tag e.g. for ferry speed calculation
         if (osmNodeIds.size() > 1)
         {
             int first = getNodeMap().get(osmNodeIds.get(0));
@@ -365,6 +365,7 @@ void processWay( OSMWay way )
             if (!Double.isNaN(firstLat) && !Double.isNaN(firstLon) && !Double.isNaN(lastLat) && !Double.isNaN(lastLon))
             {
                 estimatedDist = distCalc.calcDist(firstLat, firstLon, lastLat, lastLon);
+                // Add artificial tag for the estamated distance and center
                 way.setTag("estimated_distance", estimatedDist);
                 way.setTag("estimated_center", new GHPoint((firstLat + lastLat) / 2, (firstLon + lastLon) / 2));
             }
@@ -404,6 +405,20 @@ void processWay( OSMWay way )
             }
         }
 
+        if (way.getTag("duration") != null)
+        {
+            try
+            {
+                long dur = OSMTagParser.parseDuration(way.getTag("duration"));
+                // Provide the duration value in seconds in an artificial graphhopper specific tag:
+                way.setTag("duration:seconds", Long.toString(dur));
+            }
+            catch(Exception ex)
+            {
+                logger.warn("Parsing error in way with OSMID=" + way.getId() + " : " + ex.getMessage());
+            }
+        }
+
         long wayFlags = encodingManager.handleWayTags(way, includeWay, relationFlags);
         if (wayFlags == 0)
             return;
@@ -897,7 +912,7 @@ EdgeIteratorState addEdge( int fromIndex, int toIndex, PointList pointList, long
     /**
      * Stores only osmWayIds which are required for relations
      */
-    private void storeOsmWayID( int edgeId, long osmWayId )
+    protected void storeOsmWayID( int edgeId, long osmWayId )
     {
         if (getOsmWayIdSet().contains(osmWayId))
         {
diff --git a/core/src/main/java/com/graphhopper/reader/OSMTagParser.java b/core/src/main/java/com/graphhopper/reader/OSMTagParser.java
new file mode 100644
index 0000000000..2863ef6c9e
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/OSMTagParser.java
@@ -0,0 +1,91 @@
+/*
+ *  Licensed to GraphHopper and Peter Karich under one or more contributor
+ *  license agreements. See the NOTICE file distributed with this work for 
+ *  additional information regarding copyright ownership.
+ *
+ *  GraphHopper licenses this file to you under the Apache License, 
+ *  Version 2.0 (the "License"); you may not use this file except in 
+ *  compliance with the License. You may obtain a copy of the License at
+ *
+ *       http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package com.graphhopper.reader;
+
+import java.util.Date;
+import javax.xml.datatype.DatatypeFactory;
+import javax.xml.datatype.Duration;
+
+/**
+ *
+ * @author ratrun
+ */
+public class OSMTagParser
+{
+    /**
+     * Parser according to http://wiki.openstreetmap.org/wiki/Key:duration The value consists of a
+     * string ala 'hh:mm', format for hours and minutes 'mm', 'hh:mm' or 'hh:mm:ss', or
+     * alternatively ISO_8601 duration
+     * <p>
+     * @return duration value in seconds
+     */
+    public static long parseDuration( String str ) throws IllegalArgumentException
+    {
+        long seconds = 0;
+        if (str == null)
+            return 0;
+
+        // Check for ISO_8601 format
+        if (str.startsWith("P"))
+        {
+                // A common mistake is the the minutes format is intended but month format specified 
+            // e.g. one month "P1M" is set, but on minute "PT1M" is meant.
+            Duration dur;
+            try
+            {
+                dur = DatatypeFactory.newInstance().newDuration(str);
+                seconds = dur.getTimeInMillis(new Date()) / 1000;
+            } catch (Exception ex)
+            {
+                throw new IllegalArgumentException("Cannot parse duration tag value: " + str, ex);
+            }
+            return seconds;
+        }
+
+        try
+        {
+            int index = str.indexOf(":");
+            if (index > 0)
+            {
+                String hourStr = str.substring(0, index);
+                String minStr = str.substring(index + 1);
+                String secondsStr = "0";
+                index = minStr.indexOf(":");
+                if (index > 0)
+                {
+                    secondsStr = minStr.substring(index + 1, index + 3);
+                    minStr = minStr.substring(0, index);
+                }
+
+                seconds += Integer.parseInt(hourStr) * 60 * 60;
+                seconds += Integer.parseInt(minStr) * 60;
+                seconds += Integer.parseInt(secondsStr);
+                return seconds;
+            } else
+            {
+                // value contains minutes
+                seconds = Integer.parseInt(str) * 60;
+            }
+        } catch (Exception ex)
+        {
+            throw new IllegalArgumentException("Cannot parse duration tag value: " + str, ex);
+        }
+        return seconds;
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/routing/AbstractBidirAlgo.java b/core/src/main/java/com/graphhopper/routing/AbstractBidirAlgo.java
index 69d6d68bd1..1091d35e4f 100644
--- a/core/src/main/java/com/graphhopper/routing/AbstractBidirAlgo.java
+++ b/core/src/main/java/com/graphhopper/routing/AbstractBidirAlgo.java
@@ -68,19 +68,11 @@ protected void runAlgo()
     {
         while (!finished() && !isWeightLimitExceeded())
         {
-            if (!finishedFrom && !finishedTo)
-            {
-                if (getCurrentFromWeight() < getCurrentToWeight())
-                    finishedFrom = !fillEdgesFrom();
-                else
-                    finishedTo = !fillEdgesTo();
-            } else if (!finishedFrom)
-            {
+            if (!finishedFrom)
                 finishedFrom = !fillEdgesFrom();
-            } else
-            {
+
+            if (!finishedTo)
                 finishedTo = !fillEdgesTo();
-            }
         }
     }
 
diff --git a/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java b/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java
index c516a28ce9..237e159dc2 100644
--- a/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java
+++ b/core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java
@@ -97,7 +97,7 @@ public PrepareContractionHierarchies( Directory dir, GraphHopperStorage ghStorag
         levelFilter = new LevelEdgeFilter(prepareGraph);
 
         prepareWeighting = new PreparationWeighting(weighting);
-        originalEdges = dir.find("original_edges_" + prepareGraph.weightingToFileName(weighting));
+        originalEdges = dir.find("original_edges_" + CHGraphImpl.weightingToFileName(weighting));
         originalEdges.create(1000);
     }
 
@@ -400,6 +400,11 @@ public double getNeighborTime()
         return neighborTime;
     }
 
+    public Weighting getWeighting()
+    {
+        return prepareGraph.getWeighting();
+    }
+
     public void close()
     {
         prepareAlgo.close();
diff --git a/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
index f92f3d595c..83134999b2 100644
--- a/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java
@@ -115,7 +115,7 @@ protected AbstractFlagEncoder( int speedBits, double speedFactor, int maxTurnCos
 
         acceptedRailways.add("tram");
         acceptedRailways.add("abandoned");
-        acceptedRailways.add("abandoned_tram");        
+        acceptedRailways.add("abandoned_tram");
         acceptedRailways.add("disused");
 
         // http://wiki.openstreetmap.org/wiki/Demolished_Railway
@@ -176,7 +176,7 @@ public int defineWayBits( int index, int shift )
             throw new IllegalStateException("You must not register a FlagEncoder (" + toString() + ") twice!");
 
         setRegistered(true);
-        
+
         // define the first 2 speedBits in flags for routing
         forwardBit = 1L << shift;
         backwardBit = 2L << shift;
@@ -461,55 +461,6 @@ protected double parseSpeed( String str )
         }
     }
 
-    /**
-     * This method parses a string ala "00:00" (hours and minutes) or "0:00:00" (days, hours and
-     * minutes).
-     * <p>
-     * @return duration value in minutes
-     */
-    protected static int parseDuration( String str )
-    {
-        if (str == null)
-            return 0;
-
-        try
-        {
-            // for now ignore this special duration notation
-            // because P1M != PT1M but there are wrong edits in OSM! e.g. http://www.openstreetmap.org/way/24791405
-            // http://wiki.openstreetmap.org/wiki/Key:duration
-            if (str.startsWith("P"))
-                return 0;
-
-            int index = str.indexOf(":");
-            if (index > 0)
-            {
-                String hourStr = str.substring(0, index);
-                String minStr = str.substring(index + 1);
-                index = minStr.indexOf(":");
-                int minutes = 0;
-                if (index > 0)
-                {
-                    // string contains hours too
-                    String dayStr = hourStr;
-                    hourStr = minStr.substring(0, index);
-                    minStr = minStr.substring(index + 1);
-                    minutes = Integer.parseInt(dayStr) * 60 * 24;
-                }
-
-                minutes += Integer.parseInt(hourStr) * 60;
-                minutes += Integer.parseInt(minStr);
-                return minutes;
-            } else
-            {
-                return Integer.parseInt(str);
-            }
-        } catch (Exception ex)
-        {
-            logger.warn("Cannot parse " + str + " using 0 minutes");
-        }
-        return 0;
-    }
-
     /**
      * Second parsing step. Invoked after splitting the edges. Currently used to offer a hook to
      * calculate precise speed values based on elevation data stored in the specified edge.
@@ -523,11 +474,20 @@ public void applyWayTags( OSMWay way, EdgeIteratorState edge )
      */
     protected long handleFerryTags( OSMWay way, double unknownSpeed, double shortTripsSpeed, double longTripsSpeed )
     {
-        // to hours
-        double durationInHours = parseDuration(way.getTag("duration")) / 60d;
+        long duration = 0;
+        try
+        {
+            // During the reader process we have converted the duration value into a artificial tag called "duration:seconds".
+            duration = Long.parseLong(way.getTag("duration:seconds"));
+        } catch (Exception ex)
+        {
+        }
+        // seconds to hours
+        double durationInHours = duration / 60d / 60d;
         if (durationInHours > 0)
             try
             {
+                // Check if our graphhopper specific artificially created estimated_distance way tag is present
                 Number estimatedLength = way.getTag("estimated_distance", null);
                 if (estimatedLength != null)
                 {
@@ -535,10 +495,31 @@ protected long handleFerryTags( OSMWay way, double unknownSpeed, double shortTri
                     double val = estimatedLength.doubleValue() / 1000;
                     // If duration AND distance is available we can calculate the speed more precisely
                     // and set both speed to the same value. Factor 1.4 slower because of waiting time!
-                    shortTripsSpeed = Math.round(val / durationInHours / 1.4);
-                    if (shortTripsSpeed > getMaxSpeed())
-                        shortTripsSpeed = getMaxSpeed();
-                    longTripsSpeed = shortTripsSpeed;
+                    double calculatedTripSpeed = val / durationInHours / 1.4;
+                    // Plausibility check especially for the case of wongly used PxM format with the intension to 
+                    // specify the duration in minutes, but actually using months
+                    if (calculatedTripSpeed > 0.01d)
+                    {
+                        // If we have a very short ferry with an average lower compared to what we can encode 
+                        // then we need to avoid setting it as otherwise the edge would not be found at all any more.
+                        if (Math.round(calculatedTripSpeed) > speedEncoder.factor / 2)
+                        {
+                            shortTripsSpeed = Math.round(calculatedTripSpeed);
+                            if (shortTripsSpeed > getMaxSpeed())
+                                shortTripsSpeed = getMaxSpeed();
+                            longTripsSpeed = shortTripsSpeed;
+                        }
+                        else
+                        {
+                            // Now we set to the lowest possible still accessible speed. 
+                            shortTripsSpeed = speedEncoder.factor / 2;
+                        }
+                    } else
+                    {
+                        logger.warn("Unrealistic long duration ignored in way with OSMID=" + way.getId() + " : Duration tag value="
+                                + way.getTag("duration") + " (=" + Math.round(duration / 60d) + " minutes)");
+                        durationInHours = 0;
+                    }
                 }
             } catch (Exception ex)
             {
diff --git a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
index d785ea0d34..f46df520db 100644
--- a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
@@ -46,9 +46,6 @@
      */
     protected final Map<String, Integer> defaultSpeedMap = new HashMap<String, Integer>();
 
-    /**
-     * Should be only instantied via EncodingManager
-     */
     public CarFlagEncoder()
     {
         this(5, 5, 0);
diff --git a/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java b/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
index 9fd13db204..4baace6d8d 100644
--- a/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
+++ b/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
@@ -18,6 +18,7 @@
 package com.graphhopper.routing.util;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 import com.graphhopper.reader.OSMNode;
@@ -30,8 +31,6 @@
 import com.graphhopper.util.Helper;
 import com.graphhopper.util.PMap;
 
-import java.util.*;
-
 /**
  * Manager class to register encoder, assign their flag values and check objects with all encoders
  * during parsing.
@@ -59,6 +58,7 @@
     private final int bitsForEdgeFlags;
     private final int bitsForTurnFlags = 8 * 4;
     private boolean enableInstructions = true;
+    private String preferredLanguage = "";
 
     /**
      * Instantiate manager with the given list of encoders. The manager knows the default encoders:
@@ -383,6 +383,15 @@ public EncodingManager setEnableInstructions( boolean enableInstructions )
         return this;
     }
 
+    public EncodingManager setPreferredLanguage( String preferredLanguage )
+    {
+    	if (preferredLanguage == null)
+    		throw new IllegalArgumentException("preferred language cannot be null");
+
+    	this.preferredLanguage = preferredLanguage;
+    	return this;
+    }
+
     public void applyWayTags( OSMWay way, EdgeIteratorState edge )
     {
         // storing the road name does not yet depend on the flagEncoder so manage it directly
@@ -390,12 +399,16 @@ public void applyWayTags( OSMWay way, EdgeIteratorState edge )
         {
             // String wayInfo = carFlagEncoder.getWayInfo(way);
             // http://wiki.openstreetmap.org/wiki/Key:name
-            String name = fixWayName(way.getTag("name"));
+        	String name = "";
+        	if (!preferredLanguage.isEmpty())
+        		name = fixWayName(way.getTag("name:" + preferredLanguage));
+        	if (name.isEmpty())
+        		name = fixWayName(way.getTag("name"));
             // http://wiki.openstreetmap.org/wiki/Key:ref
             String refName = fixWayName(way.getTag("ref"));
-            if (!Helper.isEmpty(refName))
+            if (!refName.isEmpty())
             {
-                if (Helper.isEmpty(name))
+                if (name.isEmpty())
                     name = refName;
                 else
                     name += ", " + refName;
diff --git a/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java
index c5e0c585da..99cbc46b37 100644
--- a/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java
@@ -37,6 +37,11 @@
     private final HashSet<String> avoidSet = new HashSet<String>();
     private final HashSet<String> preferSet = new HashSet<String>();
 
+    public MotorcycleFlagEncoder()
+    {
+        this(5, 5, 0);
+    }
+
     public MotorcycleFlagEncoder( PMap properties )
     {
         this(
@@ -123,7 +128,7 @@ public int defineWayBits( int index, int shift )
         shift += reverseSpeedEncoder.getBits();
 
         priorityWayEncoder = new EncodedValue("PreferWay", shift, 3, 1, 3, 7);
-        shift += reverseSpeedEncoder.getBits();
+        shift += priorityWayEncoder.getBits();
 
         return shift;
     }
diff --git a/core/src/main/java/com/graphhopper/routing/util/PrepareRoutingSubnetworks.java b/core/src/main/java/com/graphhopper/routing/util/PrepareRoutingSubnetworks.java
index ead210ccbb..94840e0d78 100644
--- a/core/src/main/java/com/graphhopper/routing/util/PrepareRoutingSubnetworks.java
+++ b/core/src/main/java/com/graphhopper/routing/util/PrepareRoutingSubnetworks.java
@@ -82,6 +82,7 @@ public void doWork()
             List<TIntArrayList> components = findSubnetworks(filter);
             keepLargeNetworks(filter, components);
             subnetworks = Math.max(components.size(), subnetworks);
+            logger.info(components.size() + " subnetworks found for " + encoder + ", " + Helper.getMemInfo());
         }
 
         markNodesRemovedIfUnreachable();
diff --git a/core/src/main/java/com/graphhopper/storage/BaseGraph.java b/core/src/main/java/com/graphhopper/storage/BaseGraph.java
index 9dfe52fbb3..07a0e5a4eb 100644
--- a/core/src/main/java/com/graphhopper/storage/BaseGraph.java
+++ b/core/src/main/java/com/graphhopper/storage/BaseGraph.java
@@ -29,7 +29,6 @@
 import com.graphhopper.util.*;
 import static com.graphhopper.util.Helper.nf;
 import com.graphhopper.util.shapes.BBox;
-import java.io.UnsupportedEncodingException;
 
 /**
  * The base graph handles nodes and edges file format. It can be used with different Directory
@@ -44,10 +43,6 @@
  */
 class BaseGraph implements Graph
 {
-    // Emergency stop. to detect if something went wrong with our storage system and to prevent us from an infinit loop.
-    // Road networks typically do not have nodes with plenty of edges!
-    private static final int MAX_EDGES = 1000;
-
     // edge memory layout not found in EdgeAccess:
     int E_GEO, E_NAME, E_ADDITIONAL;
     /**
@@ -367,7 +362,7 @@ void setSegmentSize( int bytes )
         extStorage.setSegmentSize(bytes);
     }
 
-    void freeze()
+    synchronized void freeze()
     {
         if (isFrozen())
             throw new IllegalStateException("base graph already frozen");
@@ -376,7 +371,7 @@ void freeze()
         listener.freeze();
     }
 
-    boolean isFrozen()
+    synchronized boolean isFrozen()
     {
         return frozen;
     }
diff --git a/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java b/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java
index 64155fb13e..1f4f4a0ed7 100644
--- a/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java
+++ b/core/src/main/java/com/graphhopper/storage/CHGraphImpl.java
@@ -64,7 +64,7 @@
 
         this.weighting = w;
         this.baseGraph = baseGraph;
-        final String name = weightingToFileName(w);
+        final String name = CHGraphImpl.weightingToFileName(w);
         this.nodesCH = dir.find("nodes_ch_" + name);
         this.shortcuts = dir.find("shortcuts_" + name);
         this.chEdgeAccess = new EdgeAccess(shortcuts, baseGraph.bitUtil)
@@ -139,7 +139,7 @@ public final Weighting getWeighting()
     /**
      * Replaces all characters which are not numbers, characters or underscores with underscores
      */
-    public String weightingToFileName( Weighting w )
+    public static String weightingToFileName( Weighting w )
     {
         return w.toString().toLowerCase().replaceAll("\\W+", "_");
     }
diff --git a/core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java b/core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java
index 553294aebd..17f8e084c2 100644
--- a/core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java
+++ b/core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java
@@ -267,7 +267,11 @@ public boolean loadExisting()
 
             String byteOrder = properties.get("graph.byteOrder");
             if (!byteOrder.equalsIgnoreCase("" + dir.getByteOrder()))
-                throw new IllegalStateException("Configured byteOrder (" + byteOrder + ") is not equal to byteOrder of loaded graph (" + dir.getByteOrder() + ")");
+                throw new IllegalStateException("Configured graph.byteOrder (" + dir.getByteOrder() + ") is not equal to loaded " + byteOrder + "");
+
+            String bytesForFlags = properties.get("graph.bytesForFlags");
+            if (!bytesForFlags.equalsIgnoreCase("" + encodingManager.getBytesForFlags()))
+                throw new IllegalStateException("Configured graph.bytesForFlags (" + encodingManager.getBytesForFlags() + ") is not equal to loaded " + bytesForFlags);
 
             String dim = properties.get("graph.dimension");
             baseGraph.loadExisting(dim);
@@ -335,7 +339,7 @@ public long getCapacity()
      * Avoid that edges and nodes of the base graph are further modified. Necessary as hook for e.g.
      * ch graphs on top to initilize themself
      */
-    public void freeze()
+    public synchronized void freeze()
     {
         if (!baseGraph.isFrozen())
             baseGraph.freeze();
diff --git a/core/src/main/java/com/graphhopper/util/PathMerger.java b/core/src/main/java/com/graphhopper/util/PathMerger.java
index 29e483c7fa..49c479b46f 100644
--- a/core/src/main/java/com/graphhopper/util/PathMerger.java
+++ b/core/src/main/java/com/graphhopper/util/PathMerger.java
@@ -36,6 +36,28 @@
     private DouglasPeucker douglasPeucker;
     private boolean calcPoints = true;
 
+    private void calcAscendDescend( final GHResponse rsp, final PointList pointList )
+    {
+        double ascendMeters = 0;
+        double descendMeters = 0;
+        double lastEle = pointList.getElevation(0);
+        for (int i = 1; i < pointList.size(); ++i)
+        {
+            double ele = pointList.getElevation(i);
+            double diff = Math.abs(ele - lastEle);
+
+            if (ele > lastEle)
+                ascendMeters += diff;
+            else
+                descendMeters += diff;
+
+            lastEle = ele;
+
+        }
+        rsp.setAscend(ascendMeters);
+        rsp.setDescend(descendMeters);
+    }
+
     public void doWork( GHResponse rsp, List<Path> paths, Translation tr )
     {
         int origPoints = 0;
@@ -106,19 +128,20 @@ public void doWork( GHResponse rsp, List<Path> paths, Translation tr )
         {
             String debug = rsp.getDebugInfo() + ", simplify (" + origPoints + "->" + fullPoints.getSize() + ")";
             rsp.setDebugInfo(debug);
+            if (fullPoints.is3D)
+                calcAscendDescend(rsp, fullPoints);
         }
 
         if (enableInstructions)
             rsp.setInstructions(fullInstructions);
 
         if (!allFound)
-        {
             rsp.addError(new RuntimeException("Connection between locations not found"));
-        }
 
         rsp.setPoints(fullPoints).
                 setRouteWeight(fullWeight).
-                setDistance(fullDistance).setTime(fullTimeInMillis);
+                setDistance(fullDistance).
+                setTime(fullTimeInMillis);
     }
 
     public PathMerger setCalcPoints( boolean calcPoints )
diff --git a/core/src/main/resources/com/graphhopper/util/ar.txt b/core/src/main/resources/com/graphhopper/util/ar.txt
index 561fee2dc3..44c9a5f67e 100644
--- a/core/src/main/resources/com/graphhopper/util/ar.txt
+++ b/core/src/main/resources/com/graphhopper/util/ar.txt
@@ -16,6 +16,8 @@ web.toHint=إلي
 web.moreButton=المزيد
 web.gpxExportButton=GPX التصدير
 web.routeInfo=%1$s ستاخذ %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=لا يوجد طريق من هذه المنطقة
 web.bike=دراجة
 web.racingbike=دراجة سباق
diff --git a/core/src/main/resources/com/graphhopper/util/ast.txt b/core/src/main/resources/com/graphhopper/util/ast.txt
index bde1af1863..cedbe4f59d 100644
--- a/core/src/main/resources/com/graphhopper/util/ast.txt
+++ b/core/src/main/resources/com/graphhopper/util/ast.txt
@@ -16,6 +16,8 @@ web.toHint=Fasta
 web.moreButton=más
 web.gpxExportButton=Esportar GPX
 web.routeInfo=%1$s tardaràs %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Nun se puede trazar una ruta. Dalgún llugar nun s'alcuentra nel área
 web.bike=Bicicleta
 web.racingbike=Bici de carreres
diff --git a/core/src/main/resources/com/graphhopper/util/bg.txt b/core/src/main/resources/com/graphhopper/util/bg.txt
index 6051b86336..4bd0d2e154 100644
--- a/core/src/main/resources/com/graphhopper/util/bg.txt
+++ b/core/src/main/resources/com/graphhopper/util/bg.txt
@@ -16,6 +16,8 @@ web.toHint=До
 web.moreButton=още
 web.gpxExportButton=GPX експорт
 web.routeInfo=%1$s ще отнемат %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Не са изтеглени упътвания. Търсеното местоположение не е открито.
 web.bike=Велосипед
 web.racingbike=Състезателно колело
diff --git a/core/src/main/resources/com/graphhopper/util/ca.txt b/core/src/main/resources/com/graphhopper/util/ca.txt
index 512ca12aa6..5827dd608f 100644
--- a/core/src/main/resources/com/graphhopper/util/ca.txt
+++ b/core/src/main/resources/com/graphhopper/util/ca.txt
@@ -16,6 +16,8 @@ web.toHint=Cap a
 web.moreButton=més
 web.gpxExportButton=Exportar GPX
 web.routeInfo=%1$s trigaràs %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=No hi ha cap ruta. El destí no es troba dins l'àrea.
 web.bike=Bicicleta
 web.racingbike=Bicicleta de carrera
diff --git a/core/src/main/resources/com/graphhopper/util/cs_CZ.txt b/core/src/main/resources/com/graphhopper/util/cs_CZ.txt
index 623d688b84..e8d9c0be23 100644
--- a/core/src/main/resources/com/graphhopper/util/cs_CZ.txt
+++ b/core/src/main/resources/com/graphhopper/util/cs_CZ.txt
@@ -16,6 +16,8 @@ web.toHint=Do
 web.moreButton=více
 web.gpxExportButton=Export do GPX
 web.routeInfo=%1$s bude trvat %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Navigování není dostupné. Pozice nenalezena v této oblasti.
 web.bike=Kolo
 web.racingbike=Závodní kolo
diff --git a/core/src/main/resources/com/graphhopper/util/da_DK.txt b/core/src/main/resources/com/graphhopper/util/da_DK.txt
index 5481277c10..8305933a24 100644
--- a/core/src/main/resources/com/graphhopper/util/da_DK.txt
+++ b/core/src/main/resources/com/graphhopper/util/da_DK.txt
@@ -16,6 +16,8 @@ web.toHint=Til
 web.moreButton=Mere
 web.gpxExportButton=Eksportér GPX-fil
 web.routeInfo=%1$s med køretid %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Kan ikke beregne ruten. Lokation(erne) kan ikke findes i området.
 web.bike=Cykel
 web.racingbike=Racercykel
diff --git a/core/src/main/resources/com/graphhopper/util/de_DE.txt b/core/src/main/resources/com/graphhopper/util/de_DE.txt
index e778c5cc28..e1a57713ac 100644
--- a/core/src/main/resources/com/graphhopper/util/de_DE.txt
+++ b/core/src/main/resources/com/graphhopper/util/de_DE.txt
@@ -16,6 +16,8 @@ web.toHint=Nach
 web.moreButton=mehr
 web.gpxExportButton=GPX export
 web.routeInfo=%1$s werden %2$s brauchen
+web.totalAscend=Aufstieg gesamt %1$s
+web.totalDescend=Abstieg gesamt %1$s
 web.locationsNotFound=Routing war nicht möglich. Ort(e) nicht gefunden in diesem Gebiet.
 web.bike=Fahrrad
 web.racingbike=Rennrad
diff --git a/core/src/main/resources/com/graphhopper/util/el.txt b/core/src/main/resources/com/graphhopper/util/el.txt
index b60ca9b5cd..5b1f17f1d4 100644
--- a/core/src/main/resources/com/graphhopper/util/el.txt
+++ b/core/src/main/resources/com/graphhopper/util/el.txt
@@ -16,6 +16,8 @@ web.toHint=Προορισμός
 web.moreButton=περισσότερα
 web.gpxExportButton=Εξαγωγή GPX
 web.routeInfo=%1$s σε %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Η δρομολόγηση δεν είναι δυνατή. Οι τοποθεσίες δεν βρέθηκαν στην περιοχή.
 web.bike=Ποδήλατο
 web.racingbike=Αγωνιστικό ποδήλατο
diff --git a/core/src/main/resources/com/graphhopper/util/en_US.txt b/core/src/main/resources/com/graphhopper/util/en_US.txt
index c886850443..9a6f79709e 100644
--- a/core/src/main/resources/com/graphhopper/util/en_US.txt
+++ b/core/src/main/resources/com/graphhopper/util/en_US.txt
@@ -16,6 +16,8 @@ web.toHint=To
 web.moreButton=more
 web.gpxExportButton=GPX export
 web.routeInfo=%1$s will take %2$s
+web.totalAscend=total ascend %1$s
+web.totalDescend=total descend %1$s
 web.locationsNotFound=Routing not possible. Location(s) not found in the area.
 web.bike=Bike
 web.racingbike=Racingbike
diff --git a/core/src/main/resources/com/graphhopper/util/es.txt b/core/src/main/resources/com/graphhopper/util/es.txt
index 1ce8dc33b2..489aabc025 100644
--- a/core/src/main/resources/com/graphhopper/util/es.txt
+++ b/core/src/main/resources/com/graphhopper/util/es.txt
@@ -16,6 +16,8 @@ web.toHint=Hasta
 web.moreButton=más
 web.gpxExportButton=Exportar GPX
 web.routeInfo=%1$s tardará %2$s 
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=No se ha encontrado la ruta. El destino no se encuentra en el área.
 web.bike=Bicicleta
 web.racingbike=Bicicleta de carrera
diff --git a/core/src/main/resources/com/graphhopper/util/fa.txt b/core/src/main/resources/com/graphhopper/util/fa.txt
index 3c73dff23f..8c9f2ecc0e 100644
--- a/core/src/main/resources/com/graphhopper/util/fa.txt
+++ b/core/src/main/resources/com/graphhopper/util/fa.txt
@@ -16,6 +16,8 @@ web.toHint=به
 web.moreButton=بیشتر
 web.gpxExportButton=دریافت به صورت GPX
 web.routeInfo=طی مسافت %1$s به مدت %2$s طول خواهد کشید
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=مسیریابی ممکن نیست. محل مورد نظردرناحیه پیدا نشد.
 web.bike=دوچرخه
 web.racingbike=دوچرخه کورسی
diff --git a/core/src/main/resources/com/graphhopper/util/fi.txt b/core/src/main/resources/com/graphhopper/util/fi.txt
index b5d23f834a..ff6d29d6aa 100644
--- a/core/src/main/resources/com/graphhopper/util/fi.txt
+++ b/core/src/main/resources/com/graphhopper/util/fi.txt
@@ -16,6 +16,8 @@ web.toHint=Määränpää
 web.moreButton=lisää
 web.gpxExportButton=GPX-tuonti
 web.routeInfo=%1$s kestää %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Reittiohjeiden luonti epäonnistui. Paikkaa ei löydy tältä alueelta.
 web.bike=Pyörällä
 web.racingbike=Kilpapyörällä
diff --git a/core/src/main/resources/com/graphhopper/util/fil.txt b/core/src/main/resources/com/graphhopper/util/fil.txt
index 31b7c554cd..3ec492a253 100644
--- a/core/src/main/resources/com/graphhopper/util/fil.txt
+++ b/core/src/main/resources/com/graphhopper/util/fil.txt
@@ -16,6 +16,8 @@ web.toHint=upang sa
 web.moreButton=mas
 web.gpxExportButton=GPX Export
 web.routeInfo=%1$s ay magdadala sa %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Routing hindi maaari, hindi nahanap Lokasyon sa lugar.
 web.bike=Bike
 web.racingbike=RacingBike
diff --git a/core/src/main/resources/com/graphhopper/util/fr.txt b/core/src/main/resources/com/graphhopper/util/fr.txt
index 9b12e7af80..310c9a4b5d 100644
--- a/core/src/main/resources/com/graphhopper/util/fr.txt
+++ b/core/src/main/resources/com/graphhopper/util/fr.txt
@@ -16,6 +16,8 @@ web.toHint=À
 web.moreButton=plus
 web.gpxExportButton=Export GPX
 web.routeInfo=%1$s durera %2$s 
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Calcul d'itinéraire impossible. Position(s) non trouvée(s) dans la zone.
 web.bike=Vélo
 web.racingbike=Vélo de route
diff --git a/core/src/main/resources/com/graphhopper/util/gl.txt b/core/src/main/resources/com/graphhopper/util/gl.txt
index d1e438d35f..6d5ca722f7 100644
--- a/core/src/main/resources/com/graphhopper/util/gl.txt
+++ b/core/src/main/resources/com/graphhopper/util/gl.txt
@@ -16,6 +16,8 @@ web.toHint=ata
 web.moreButton=máis
 web.gpxExportButton=GPX Exportación
 web.routeInfo=%1$s tardará %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Non se atopou a ruta. O destino non se atopa na área
 web.bike=Bicicleta
 web.racingbike=Bicleta de carreiras
diff --git a/core/src/main/resources/com/graphhopper/util/he.txt b/core/src/main/resources/com/graphhopper/util/he.txt
index 963ba6a920..68d0db8ce5 100644
--- a/core/src/main/resources/com/graphhopper/util/he.txt
+++ b/core/src/main/resources/com/graphhopper/util/he.txt
@@ -16,6 +16,8 @@ web.toHint=יעד
 web.moreButton=עוד
 web.gpxExportButton=ייצוא GPX
 web.routeInfo=%1$s ייקחו %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=אין נתיב ישיר אל היעד. המיקום לא נמצא באזור.
 web.bike=אופניים
 web.racingbike=מסלולי אופניים
diff --git a/core/src/main/resources/com/graphhopper/util/hsb.txt b/core/src/main/resources/com/graphhopper/util/hsb.txt
index eb762719a5..7a8387ef40 100644
--- a/core/src/main/resources/com/graphhopper/util/hsb.txt
+++ b/core/src/main/resources/com/graphhopper/util/hsb.txt
@@ -16,6 +16,8 @@ web.toHint=do
 web.moreButton=wjac
 web.gpxExportButton=eksport do GPX
 web.routeInfo=za %1$s so trjeba %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Čara njeje móžna. Městno so w tutej kónčinje njenamaka.
 web.bike=koleso
 web.racingbike=wubědźowanske koleso
diff --git a/core/src/main/resources/com/graphhopper/util/hu_HU.txt b/core/src/main/resources/com/graphhopper/util/hu_HU.txt
index f3da8f8616..1566908b4d 100644
--- a/core/src/main/resources/com/graphhopper/util/hu_HU.txt
+++ b/core/src/main/resources/com/graphhopper/util/hu_HU.txt
@@ -16,6 +16,8 @@ web.toHint=Hova
 web.moreButton=Több
 web.gpxExportButton=GPX export
 web.routeInfo=%1$s tart %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Útvonaltervezés nem lehetséges.A megadott hely(ek) nem található(ak).
 web.bike=Bicikli
 web.racingbike=Verseny bicikli
diff --git a/core/src/main/resources/com/graphhopper/util/it.txt b/core/src/main/resources/com/graphhopper/util/it.txt
index 869881f239..751f13ff62 100644
--- a/core/src/main/resources/com/graphhopper/util/it.txt
+++ b/core/src/main/resources/com/graphhopper/util/it.txt
@@ -16,6 +16,8 @@ web.toHint=A
 web.moreButton=altro
 web.gpxExportButton=Esporta GPX
 web.routeInfo=%1$s in %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Percorso non calcolabile. Località non trovata(e) nell'area.
 web.bike=Bicicletta
 web.racingbike=Bici da corsa
diff --git a/core/src/main/resources/com/graphhopper/util/ja.txt b/core/src/main/resources/com/graphhopper/util/ja.txt
index cdc1755b1c..eabd211e25 100644
--- a/core/src/main/resources/com/graphhopper/util/ja.txt
+++ b/core/src/main/resources/com/graphhopper/util/ja.txt
@@ -16,6 +16,8 @@ web.toHint=目的地点
 web.moreButton=詳細
 web.gpxExportButton=GPX形式でエクスポート
 web.routeInfo=%1$s 所要時間 %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=経路を検索できませんでした．指定の地点が存在しません．
 web.bike=自転車
 web.racingbike=レースバイク
diff --git a/core/src/main/resources/com/graphhopper/util/lt_LT.txt b/core/src/main/resources/com/graphhopper/util/lt_LT.txt
index aba326b370..8bd055ffc7 100644
--- a/core/src/main/resources/com/graphhopper/util/lt_LT.txt
+++ b/core/src/main/resources/com/graphhopper/util/lt_LT.txt
@@ -16,13 +16,15 @@ web.toHint=Iki
 web.moreButton=dar
 web.gpxExportButton=GPX eksportas
 web.routeInfo=%1$s užtruksite %2$s
-web.locationsNotFound=Neimanoma sukurti maršruto. Nurodyti taškai nerasti šioje zonoje.
+web.totalAscend=
+web.totalDescend=
+web.locationsNotFound=Neįmanoma sukurti maršruto. Nurodyti taškai nerasti šioje zonoje.
 web.bike=Dviratis
 web.racingbike=Plentinis dviratis
 web.mtb=MTB dviratis
 web.car=Automobilis
 web.foot=Pėsčiomis
-web.staticlink=Nuoroda
+web.staticlink=statinė nuoroda
 web.motorcycle=Motociklas
 via=per
 finish=Tikslas pasiektas!
@@ -37,8 +39,8 @@ road=kelias
 off_bike=nulipkite nuo dviračio
 cycleway=dviračių takas
 way=kelias
-paved=asfaltuotas
-unpaved=gruntinis
+paved=grįstas
+unpaved=negrįstas
 stopover=sustojimas %1$s
 roundaboutEnter=Įvažiuokite į žiedą
 roundaboutExit=Žiede išvažiuokite %1$s išvažiavime
diff --git a/core/src/main/resources/com/graphhopper/util/ne.txt b/core/src/main/resources/com/graphhopper/util/ne.txt
index e502256a5e..0324342273 100644
--- a/core/src/main/resources/com/graphhopper/util/ne.txt
+++ b/core/src/main/resources/com/graphhopper/util/ne.txt
@@ -16,6 +16,8 @@ web.toHint=अन्त्य
 web.moreButton=अझै
 web.gpxExportButton=GPX मा परिबर्तन गर्नुहोस
 web.routeInfo=%1$s को लागि %2$s लाग्नेछ
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=ठाउँ नभेटीनाले बाटो पत्ता लगाउन सकिएन
 web.bike=बाईक 
 web.racingbike=छिटो गतिका बाईक
diff --git a/core/src/main/resources/com/graphhopper/util/nl.txt b/core/src/main/resources/com/graphhopper/util/nl.txt
index 869f547fc1..6dd1735709 100644
--- a/core/src/main/resources/com/graphhopper/util/nl.txt
+++ b/core/src/main/resources/com/graphhopper/util/nl.txt
@@ -16,6 +16,8 @@ web.toHint=naar
 web.moreButton=meer
 web.gpxExportButton=GPX export
 web.routeInfo=%1$s duurt %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Route niet mogelijk. Locatie(s) niet gevonden.
 web.bike=fiets
 web.racingbike=racefiets
diff --git a/core/src/main/resources/com/graphhopper/util/pl_PL.txt b/core/src/main/resources/com/graphhopper/util/pl_PL.txt
index 47b3b4aace..920aa3d064 100644
--- a/core/src/main/resources/com/graphhopper/util/pl_PL.txt
+++ b/core/src/main/resources/com/graphhopper/util/pl_PL.txt
@@ -16,6 +16,8 @@ web.toHint=Do
 web.moreButton=więcej
 web.gpxExportButton=Eksportuj GPX
 web.routeInfo=%1$s zajmie %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Nie można wyznaczyć trasy. Lokalizacja(e) nie została(y) znalezione. 
 web.bike=Rower
 web.racingbike=Rower wyścigowy
diff --git a/core/src/main/resources/com/graphhopper/util/pt_BR.txt b/core/src/main/resources/com/graphhopper/util/pt_BR.txt
index 0854a07ceb..8cfed827e0 100644
--- a/core/src/main/resources/com/graphhopper/util/pt_BR.txt
+++ b/core/src/main/resources/com/graphhopper/util/pt_BR.txt
@@ -16,6 +16,8 @@ web.toHint=Para
 web.moreButton=mais
 web.gpxExportButton=Exportar GPX
 web.routeInfo=%1$s irá levar %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Roteamento impossível. Localização(ões) não encontrada(s) na área.
 web.bike=Bicicleta
 web.racingbike=Bicicleta de corrida
diff --git a/core/src/main/resources/com/graphhopper/util/pt_PT.txt b/core/src/main/resources/com/graphhopper/util/pt_PT.txt
index 688050beb8..c602ea7243 100644
--- a/core/src/main/resources/com/graphhopper/util/pt_PT.txt
+++ b/core/src/main/resources/com/graphhopper/util/pt_PT.txt
@@ -16,6 +16,8 @@ web.toHint=Para
 web.moreButton=mais
 web.gpxExportButton=Exportar GPX
 web.routeInfo=%1$s irá demorar %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Roteamento impossível. Localização(ões) não encontrada(s) na área.
 web.bike=Bicicleta
 web.racingbike=Bicicleta de corrida
diff --git a/core/src/main/resources/com/graphhopper/util/ro.txt b/core/src/main/resources/com/graphhopper/util/ro.txt
index 3b59396800..cda68be1ee 100644
--- a/core/src/main/resources/com/graphhopper/util/ro.txt
+++ b/core/src/main/resources/com/graphhopper/util/ro.txt
@@ -16,6 +16,8 @@ web.toHint=La
 web.moreButton=mai mult
 web.gpxExportButton=Exportă GPX
 web.routeInfo=%1$s durează %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Traseul nu este posibil. Locul(locurile) nu pot fi găsite în zonă.
 web.bike=bicicletă
 web.racingbike=bicicletă de curse
diff --git a/core/src/main/resources/com/graphhopper/util/ru.txt b/core/src/main/resources/com/graphhopper/util/ru.txt
index d5b796eae4..7b0dff1f33 100644
--- a/core/src/main/resources/com/graphhopper/util/ru.txt
+++ b/core/src/main/resources/com/graphhopper/util/ru.txt
@@ -16,6 +16,8 @@ web.toHint=До
 web.moreButton=еще
 web.gpxExportButton=Экспорт GPX
 web.routeInfo=%1$s займет %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Построить маршрут невозможно. Не определено местоположение.
 web.bike=Велосипед
 web.racingbike=Гоночный велосипед
diff --git a/core/src/main/resources/com/graphhopper/util/si.txt b/core/src/main/resources/com/graphhopper/util/si.txt
index 7276fc5fa4..bb1a1471c0 100644
--- a/core/src/main/resources/com/graphhopper/util/si.txt
+++ b/core/src/main/resources/com/graphhopper/util/si.txt
@@ -16,6 +16,8 @@ web.toHint=Do
 web.moreButton=več
 web.gpxExportButton=izvozi GPX
 web.routeInfo=%1$s bo trajalo %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Usmerjanje ni mogoče. Lokacije ne pokaže na tem območju.
 web.bike=Kolo
 web.racingbike=cestno kolo
diff --git a/core/src/main/resources/com/graphhopper/util/sk.txt b/core/src/main/resources/com/graphhopper/util/sk.txt
index 7f6b68021f..301e04c071 100644
--- a/core/src/main/resources/com/graphhopper/util/sk.txt
+++ b/core/src/main/resources/com/graphhopper/util/sk.txt
@@ -16,6 +16,8 @@ web.toHint=Do
 web.moreButton=viac
 web.gpxExportButton=Export do GPX
 web.routeInfo=%1$s bude trvať %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Navigovanie nie je možné. Umiestnenie nebolo nájdené v oblasti.
 web.bike=Bicykel
 web.racingbike=Závodný bicykel
diff --git a/core/src/main/resources/com/graphhopper/util/sv_SE.txt b/core/src/main/resources/com/graphhopper/util/sv_SE.txt
index 0fa1a74e85..0db2c3f083 100644
--- a/core/src/main/resources/com/graphhopper/util/sv_SE.txt
+++ b/core/src/main/resources/com/graphhopper/util/sv_SE.txt
@@ -16,6 +16,8 @@ web.toHint=Till
 web.moreButton=fler
 web.gpxExportButton=exportera GPX-fil
 web.routeInfo=%1$s med körtid %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Kan inte beräkna rutt. Platsen eller platserna kan inte hittas i området.
 web.bike=Cykel
 web.racingbike=Tävlingscykel
diff --git a/core/src/main/resources/com/graphhopper/util/tr.txt b/core/src/main/resources/com/graphhopper/util/tr.txt
index 5ae8584858..b0de945785 100644
--- a/core/src/main/resources/com/graphhopper/util/tr.txt
+++ b/core/src/main/resources/com/graphhopper/util/tr.txt
@@ -16,6 +16,8 @@ web.toHint=yönüne
 web.moreButton=daha fazlası
 web.gpxExportButton=GPX ihracat
 web.routeInfo=%1$s alacak %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Rota planlanamadı. Bölgede yer bulunamadı.
 web.bike=Bisiklet
 web.racingbike=yaris bisikleti
diff --git a/core/src/main/resources/com/graphhopper/util/uk.txt b/core/src/main/resources/com/graphhopper/util/uk.txt
index a356a96217..0cef660598 100644
--- a/core/src/main/resources/com/graphhopper/util/uk.txt
+++ b/core/src/main/resources/com/graphhopper/util/uk.txt
@@ -16,6 +16,8 @@ web.toHint=До
 web.moreButton=ще
 web.gpxExportButton=Експорт в GPX
 web.routeInfo=%1$s займе %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Побудова маршруту неможлива. Місцезнаходження не визначено.
 web.bike=Велосипед
 web.racingbike=Шосейний велосипед
diff --git a/core/src/main/resources/com/graphhopper/util/vi_VI.txt b/core/src/main/resources/com/graphhopper/util/vi_VI.txt
index 015af51a0e..3924782cdc 100644
--- a/core/src/main/resources/com/graphhopper/util/vi_VI.txt
+++ b/core/src/main/resources/com/graphhopper/util/vi_VI.txt
@@ -16,6 +16,8 @@ web.toHint=Đến
 web.moreButton=thêm
 web.gpxExportButton=Xuất GPX
 web.routeInfo=%1$s mất %2$s
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=Không tìm thấy lộ trình! Các điểm đã chọn không tìm thấy trong vùng này
 web.bike=Xe đạp
 web.racingbike=Xe đua
diff --git a/core/src/main/resources/com/graphhopper/util/zh_CN.txt b/core/src/main/resources/com/graphhopper/util/zh_CN.txt
index 1a5809a030..049b401f42 100644
--- a/core/src/main/resources/com/graphhopper/util/zh_CN.txt
+++ b/core/src/main/resources/com/graphhopper/util/zh_CN.txt
@@ -16,6 +16,8 @@ web.toHint=终点
 web.moreButton=更多
 web.gpxExportButton=GPX导出
 web.routeInfo=%1$s 的路线，需要 %2$s 时间
+web.totalAscend=
+web.totalDescend=
 web.locationsNotFound=地点未找到
 web.bike=自行车
 web.racingbike=竞技自行车
diff --git a/core/src/test/java/com/graphhopper/GraphHopperIT.java b/core/src/test/java/com/graphhopper/GraphHopperIT.java
index 44a671ecaf..dd886e5f8c 100644
--- a/core/src/test/java/com/graphhopper/GraphHopperIT.java
+++ b/core/src/test/java/com/graphhopper/GraphHopperIT.java
@@ -246,6 +246,7 @@ public void testSRTMWithInstructions() throws Exception
         assertTrue(il.get(0).getPoints().is3D());
 
         String str = rsp.getPoints().toString();
+
         assertEquals("(43.73068455771767,7.421283689825812,62.0), (43.73067957305937,7.421382123709815,66.0), "
                 + "(43.73109792316924,7.421546222751131,45.0), (43.73129908884985,7.421589994913116,45.0), "
                 + "(43.731327028527716,7.421414533736137,45.0), (43.73125047381037,7.421366291225693,45.0), "
@@ -260,6 +261,9 @@ public void testSRTMWithInstructions() throws Exception
                 + "(43.727680946587874,7.419198768422206,11.0)",
                 str.substring(str.length() - 132));
 
+        assertEquals(84, rsp.getAscend(), 1e-1);
+        assertEquals(135, rsp.getDescend(), 1e-1);
+
         List<GPXEntry> list = rsp.getInstructions().createGPXList();
         assertEquals(60, list.size());
         final long lastEntryMillis = list.get(list.size() - 1).getTime();
diff --git a/core/src/test/java/com/graphhopper/GraphHopperTest.java b/core/src/test/java/com/graphhopper/GraphHopperTest.java
index aea1581083..79aa608512 100644
--- a/core/src/test/java/com/graphhopper/GraphHopperTest.java
+++ b/core/src/test/java/com/graphhopper/GraphHopperTest.java
@@ -19,11 +19,11 @@
 
 import com.graphhopper.reader.DataReader;
 import com.graphhopper.routing.*;
+import com.graphhopper.routing.ch.PrepareContractionHierarchies;
 import com.graphhopper.routing.util.*;
 import com.graphhopper.storage.*;
 import com.graphhopper.storage.index.QueryResult;
 import com.graphhopper.util.CmdArgs;
-import com.graphhopper.util.GHUtility;
 import com.graphhopper.util.Helper;
 import com.graphhopper.util.Instruction;
 import com.graphhopper.util.shapes.GHPoint;
@@ -33,7 +33,9 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.Arrays;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
@@ -393,6 +395,25 @@ public void testFailsForWrongConfig() throws IOException
             assertTrue(false);
         } catch (Exception ex)
         {
+            assertTrue(ex.getMessage(), ex.getMessage().startsWith("Encoding does not match"));
+        }
+
+        // different bytesForFlags should fail to load
+        instance = new GraphHopper().init(
+                new CmdArgs().
+                put("osmreader.osm", testOsm3).
+                put("osmreader.dataaccess", "RAM").
+                put("graph.flagEncoders", "FOOT,CAR").
+                put("graph.bytesForFlags", 8).
+                put("prepare.chWeighting", "no")).
+                setOSMFile(testOsm3);
+        try
+        {
+            instance.load(ghLoc);
+            assertTrue(false);
+        } catch (Exception ex)
+        {
+            assertTrue(ex.getMessage(), ex.getMessage().startsWith("Configured graph.bytesForFlags (8) is not equal to loaded 4"));
         }
 
         // different order is no longer okay, see #350
@@ -408,6 +429,7 @@ public void testFailsForWrongConfig() throws IOException
             assertTrue(false);
         } catch (Exception ex)
         {
+            assertTrue(ex.getMessage(), ex.getMessage().startsWith("Encoding does not match"));
         }
     }
 
@@ -592,8 +614,7 @@ public void testGetPathsDirectionEnforcement1()
     {
         // Test enforce start direction
         // Note: This Test does not pass for CH enabled    
-
-        GraphHopper instance = initSquareGraphInstance(false);
+        instance = createSquareGraphInstance(false);
 
         // Start in middle of edge 4-5 
         GHPoint start = new GHPoint(0.0015, 0.002);
@@ -614,8 +635,7 @@ public void testGetPathsDirectionEnforcement1()
     public void testGetPathsDirectionEnforcement2()
     {
         // Test enforce start & end direction
-
-        GraphHopper instance = initSquareGraphInstance(false);
+        instance = createSquareGraphInstance(false);
 
         // Start in middle of edge 4-5 
         GHPoint start = new GHPoint(0.0015, 0.002);
@@ -644,7 +664,7 @@ public void testGetPathsDirectionEnforcement2()
     @Test
     public void testGetPathsDirectionEnforcement3()
     {
-        GraphHopper instance = initSquareGraphInstance(false);
+        instance = createSquareGraphInstance(false);
 
         // Start in middle of edge 4-5 
         GHPoint start = new GHPoint(0.0015, 0.002);
@@ -666,8 +686,7 @@ public void testGetPathsDirectionEnforcement3()
     public void testGetPathsDirectionEnforcement4()
     {
         // Test straight via routing
-
-        GraphHopper instance = initSquareGraphInstance(false);
+        instance = createSquareGraphInstance(false);
 
         // Start in middle of edge 4-5 
         GHPoint start = new GHPoint(0.0015, 0.002);
@@ -693,8 +712,7 @@ public void testGetPathsDirectionEnforcement4()
     public void testGetPathsDirectionEnforcement5()
     {
         // Test independence of previous enforcement for subsequent pathes
-
-        GraphHopper instance = initSquareGraphInstance(false);
+        instance = createSquareGraphInstance(false);
 
         // Start in middle of edge 4-5 
         GHPoint start = new GHPoint(0.0015, 0.002);
@@ -720,8 +738,7 @@ public void testGetPathsDirectionEnforcement5()
     public void testGetPathsDirectionEnforcement6()
     {
         // Test if query results at tower nodes are ignored
-
-        GraphHopper instance = initSquareGraphInstance(false);
+        instance = createSquareGraphInstance(false);
 
         // QueryPoints directly on TowerNodes 
         GHPoint start = new GHPoint(0, 0);
@@ -741,7 +758,7 @@ public void testGetPathsDirectionEnforcement6()
         }, paths.get(1).calcNodes().toArray());
     }
 
-    private GraphHopper initSquareGraphInstance( boolean withCH )
+    private GraphHopper createSquareGraphInstance( boolean withCH )
     {
         CarFlagEncoder carEncoder = new CarFlagEncoder();
         EncodingManager encodingManager = new EncodingManager(carEncoder);
@@ -780,15 +797,15 @@ private GraphHopper initSquareGraphInstance( boolean withCH )
         g.edge(5, 8, 110, true);
         g.edge(7, 8, 110, true);
 
-        instance = new GraphHopper().
+        GraphHopper tmp = new GraphHopper().
                 putAlgorithmFactory(weighting, null).
                 setCHEnable(withCH).
                 setCHWeighting("fastest").
                 setEncodingManager(encodingManager);
-        instance.setGraphHopperStorage(g);
-        instance.postProcessing();
+        tmp.setGraphHopperStorage(g);
+        tmp.postProcessing();
 
-        return instance;
+        return tmp;
     }
 
     @Test
@@ -797,20 +814,20 @@ public void testCustomFactoryForNoneCH()
         CarFlagEncoder carEncoder = new CarFlagEncoder();
         EncodingManager em = new EncodingManager(carEncoder);
         Weighting weighting = new FastestWeighting(carEncoder);
-        GraphHopper closableInstance = new GraphHopper().setStoreOnFlush(true).
+        instance = new GraphHopper().setStoreOnFlush(false).
                 setCHEnable(false).
                 setEncodingManager(em).
                 setGraphHopperLocation(ghLoc).
                 setOSMFile(testOsm);
         RoutingAlgorithmFactory af = new RoutingAlgorithmFactorySimple();
-        closableInstance.putAlgorithmFactory(weighting, af);
-        closableInstance.importOrLoad();
+        instance.putAlgorithmFactory(weighting, af);
+        instance.importOrLoad();
 
-        assertTrue(af == closableInstance.getAlgorithmFactory(weighting));
+        assertTrue(af == instance.getAlgorithmFactory(weighting));
 
         // test that hints are passwed to algorithm opts
         final AtomicInteger cnt = new AtomicInteger(0);
-        closableInstance.putAlgorithmFactory(weighting, new RoutingAlgorithmFactorySimple()
+        instance.putAlgorithmFactory(weighting, new RoutingAlgorithmFactorySimple()
         {
             @Override
             public RoutingAlgorithm createAlgo( Graph g, AlgorithmOptions opts )
@@ -822,7 +839,50 @@ public RoutingAlgorithm createAlgo( Graph g, AlgorithmOptions opts )
         });
         GHRequest req = new GHRequest(51.2492152, 9.4317166, 51.2, 9.4);
         req.getHints().put("test", false);
-        closableInstance.route(req);
+        instance.route(req);
         assertEquals(1, cnt.get());
     }
+
+    @Test
+    public void testMultipleCHPreparationsInParallel()
+    {
+        HashMap<String, Integer> shortcutCountMap = new HashMap<String, Integer>();
+        // try all parallelization modes        
+        for (int threadCount = 1; threadCount < 6; threadCount++)
+        {
+            EncodingManager em = new EncodingManager(Arrays.asList(new CarFlagEncoder(), new MotorcycleFlagEncoder(),
+                    new MountainBikeFlagEncoder(), new RacingBikeFlagEncoder(), new FootFlagEncoder()),
+                    8);
+
+            GraphHopper tmpGH = new GraphHopper().setStoreOnFlush(false).
+                    setEncodingManager(em).
+                    setGraphHopperLocation(ghLoc).
+                    setOSMFile(testOsm).setCHPrepareThreads(threadCount);
+
+            tmpGH.importOrLoad();
+
+            assertEquals(5, tmpGH.getAlgorithmFactories().size());
+            for (RoutingAlgorithmFactory raf : tmpGH.getAlgorithmFactories())
+            {
+                PrepareContractionHierarchies pch = (PrepareContractionHierarchies) raf;
+                assertTrue("Preparation wasn't run! [" + threadCount + "]", pch.isPrepared());
+
+                String name = CHGraphImpl.weightingToFileName(pch.getWeighting());
+                Integer singleThreadShortcutCount = shortcutCountMap.get(name);
+                if (singleThreadShortcutCount == null)
+                    shortcutCountMap.put(name, pch.getShortcuts());
+                else
+                    assertEquals((int) singleThreadShortcutCount, pch.getShortcuts());
+
+                String keyError = "prepare.error." + name;
+                String valueError = tmpGH.getGraphHopperStorage().getProperties().get(keyError);
+                assertTrue("Properties for " + name + " should NOT contain error " + valueError + " [" + threadCount + "]", valueError.isEmpty());
+
+                String key = "prepare.date." + name;
+                String value = tmpGH.getGraphHopperStorage().getProperties().get(key);
+                assertTrue("Properties for " + name + " did NOT contain finish date [" + threadCount + "]", !value.isEmpty());
+            }
+            tmpGH.close();
+        }
+    }
 }
diff --git a/core/src/test/java/com/graphhopper/reader/OSMReaderTest.java b/core/src/test/java/com/graphhopper/reader/OSMReaderTest.java
index 4d70b50cb6..0624034ec0 100644
--- a/core/src/test/java/com/graphhopper/reader/OSMReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/OSMReaderTest.java
@@ -128,6 +128,7 @@ protected DataReader createReader( GraphHopperStorage tmpGraph )
         @Override
         protected DataReader importData() throws IOException
         {
+            getEncodingManager().setPreferredLanguage(getPreferredLanguage());
             GraphHopperStorage tmpGraph = newGraph(dir, getEncodingManager(), hasElevation(),
                     getEncodingManager().needsTurnCostsSupport());
             setGraphHopperStorage(tmpGraph);
@@ -801,4 +802,23 @@ public void testTurnFlagCombination()
             }
         }
     }
+
+    @Test
+    public void testPreferredLanguage()
+    {
+    	GraphHopper hopper = new GraphHopperTest(file1).setPreferredLanguage("de").importOrLoad();
+    	GraphHopperStorage graph = hopper.getGraphHopperStorage();
+    	int n20 = AbstractGraphStorageTester.getIdOf(graph, 52);
+    	EdgeIterator iter = carOutExplorer.setBaseNode(n20);
+    	assertTrue(iter.next());
+    	assertEquals("straße 123, B 122", iter.getName());
+
+    	hopper = new GraphHopperTest(file1).setPreferredLanguage("el").importOrLoad();
+    	graph = hopper.getGraphHopperStorage();
+    	n20 = AbstractGraphStorageTester.getIdOf(graph, 52);
+    	iter = carOutExplorer.setBaseNode(n20);
+    	assertTrue(iter.next());
+    	assertTrue(iter.next());
+    	assertEquals("διαδρομή 666", iter.getName());
+    }
 }
diff --git a/core/src/test/java/com/graphhopper/reader/OSMTagParserTest.java b/core/src/test/java/com/graphhopper/reader/OSMTagParserTest.java
new file mode 100644
index 0000000000..be2a8bc832
--- /dev/null
+++ b/core/src/test/java/com/graphhopper/reader/OSMTagParserTest.java
@@ -0,0 +1,76 @@
+/*
+ *  Licensed to GraphHopper and Peter Karich under one or more contributor
+ *  license agreements. See the NOTICE file distributed with this work for 
+ *  additional information regarding copyright ownership.
+ *
+ *  GraphHopper licenses this file to you under the Apache License, 
+ *  Version 2.0 (the "License"); you may not use this file except in 
+ *  compliance with the License. You may obtain a copy of the License at
+ *
+ *       http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package com.graphhopper.reader;
+
+import static org.junit.Assert.*;
+import static org.junit.Assert.fail;
+import org.junit.Test;
+
+/**
+ *
+ * @author Peter Karich, ratrun
+ */
+public class OSMTagParserTest
+{
+    @Test
+    public void testParseDuration()
+    {
+        assertEquals(10 * 60, OSMTagParser.parseDuration("00:10"));
+        assertEquals(35 * 60, OSMTagParser.parseDuration("35"));
+        assertEquals(70 * 60, OSMTagParser.parseDuration("01:10"));
+        assertEquals(70 * 60 + 2, OSMTagParser.parseDuration("01:10:02"));
+        assertEquals(0, OSMTagParser.parseDuration(null));
+        assertEquals(60 * 20 * 60, OSMTagParser.parseDuration("20:00"));
+        assertEquals(20 * 60, OSMTagParser.parseDuration("0:20:00"));
+        assertEquals((60 * 2 + 20) * 60 + 2, OSMTagParser.parseDuration("02:20:02"));
+        assertTrue(87840 * 60 <= OSMTagParser.parseDuration("P2M"));
+        assertTrue(87900 * 60 >= OSMTagParser.parseDuration("P2M"));
+        assertEquals(2 * 60, OSMTagParser.parseDuration("PT2M"));
+        assertEquals((5 * 60 + 12) * 60 + 36, OSMTagParser.parseDuration("PT5H12M36S"));
+    }
+
+    @Test
+    public void testWrongDurationFormats()
+    {
+        try
+        {
+            OSMTagParser.parseDuration("PT5h12m36s");
+            fail("parseDuration didn't throw when I expected it to");
+        } catch (IllegalArgumentException expectedException)
+        {
+            assertEquals(expectedException.getMessage(), "Cannot parse duration tag value: PT5h12m36s");
+        }
+        try
+        {
+            OSMTagParser.parseDuration("oh");
+            fail("parseDuration didn't throw when I expected it to");
+        } catch (IllegalArgumentException expectedException)
+        {
+            assertEquals(expectedException.getMessage(), "Cannot parse duration tag value: oh");
+        }
+        try
+        {
+            OSMTagParser.parseDuration("01:10:2");
+            fail("parseDuration didn't throw when I expected it to");
+        } catch (IllegalArgumentException expectedException)
+        {
+            assertEquals(expectedException.getMessage(), "Cannot parse duration tag value: 01:10:2");
+        }
+
+    }
+}
diff --git a/core/src/test/java/com/graphhopper/routing/util/AbstractFlagEncoderTest.java b/core/src/test/java/com/graphhopper/routing/util/AbstractFlagEncoderTest.java
index 40cb881ac7..822f3bacf5 100644
--- a/core/src/test/java/com/graphhopper/routing/util/AbstractFlagEncoderTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/AbstractFlagEncoderTest.java
@@ -47,15 +47,4 @@ public void testAcceptsCar()
         assertEquals(6, encoder.parseSpeed("walk"), 1e-3);
     }
 
-    @Test
-    public void testParseDuration()
-    {
-        assertEquals(10, AbstractFlagEncoder.parseDuration("00:10"));
-        assertEquals(70, AbstractFlagEncoder.parseDuration("01:10"));
-        assertEquals(0, AbstractFlagEncoder.parseDuration("oh"));
-        assertEquals(0, AbstractFlagEncoder.parseDuration(null));
-        assertEquals(60 * 20, AbstractFlagEncoder.parseDuration("20:00"));
-        assertEquals(60 * 20, AbstractFlagEncoder.parseDuration("0:20:00"));
-        assertEquals(60 * 24 * 2 + 60 * 20 + 2, AbstractFlagEncoder.parseDuration("02:20:02"));
-    }
 }
diff --git a/core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java b/core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java
index 1d70727f8f..1aab3fd30d 100644
--- a/core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java
+++ b/core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java
@@ -352,12 +352,39 @@ public void testRailway()
         way.setTag("route", "shuttle_train");
         way.setTag("motorcar", "yes");
         way.setTag("bicycle", "no");
-        way.setTag("duration", "35");
+        // Provide the duration value in seconds:
+        way.setTag("duration:seconds", Long.toString(35*60));
         way.setTag("estimated_distance", 50000);
         // accept
         assertTrue(encoder.acceptWay(way) > 0);
         // calculate speed from estimated_distance and duration
         assertEquals(60, encoder.getSpeed(encoder.handleFerryTags(way, 20, 30, 40)), 1e-1);
+
+        //Test for very short and slow 0.5km/h still realisitic ferry
+        way = new OSMWay(1);
+        way.setTag("route", "ferry");
+        way.setTag("motorcar", "yes");
+        // Provide the duration of 12 minutes in seconds:
+        way.setTag("duration:seconds", Long.toString(12*60));
+        way.setTag("estimated_distance", 100);
+        // accept
+        assertTrue(encoder.acceptWay(way) > 0);
+        // We can't store 0.5km/h, but we expect the lowest possible speed (5km/h)
+        assertEquals(5, encoder.getSpeed(encoder.handleFerryTags(way, 20, 30, 40)), 1e-1);
+
+        //Test for an unrealisitic long duration
+        way = new OSMWay(1);
+        way.setTag("route", "ferry");
+        way.setTag("motorcar", "yes");
+        // Provide the duration of 2 months in seconds:
+        way.setTag("duration:seconds", Long.toString(87900*60));
+        way.setTag("estimated_distance", 100);
+        // accept
+        assertTrue(encoder.acceptWay(way) > 0);
+        // We have ignored the unrealisitc long duration and take the unknown speed
+        assertEquals(20, encoder.getSpeed(encoder.handleFerryTags(way, 20, 30, 40)), 1e-1);
+        
+        
     }
 
     @Test
diff --git a/core/src/test/resources/com/graphhopper/reader/test-osm.xml b/core/src/test/resources/com/graphhopper/reader/test-osm.xml
index 860ece81d4..dc76e94773 100644
--- a/core/src/test/resources/com/graphhopper/reader/test-osm.xml
+++ b/core/src/test/resources/com/graphhopper/reader/test-osm.xml
@@ -34,6 +34,7 @@
         <nd ref="20"/>        
         <nd ref="30"/>
         <tag k="name" v="route 666" />
+        <tag k="name:el" v="διαδρομή 666" />
         <tag k="highway" v="motorway_link" />
         <tag k="destination" v="hof;fürth" />
     </way> 
@@ -43,6 +44,7 @@
         <nd ref="40"/>
         <nd ref="50"/>        
         <tag k="name" v="street 123;B 122" />
+        <tag k="name:de" v="straße 123;B 122" />
         <tag k="highway" v="service" />
     </way>
 </osm>
diff --git a/core/src/test/resources/com/graphhopper/reader/test-osm2.xml b/core/src/test/resources/com/graphhopper/reader/test-osm2.xml
index 889ff3f700..f88edd9c80 100644
--- a/core/src/test/resources/com/graphhopper/reader/test-osm2.xml
+++ b/core/src/test/resources/com/graphhopper/reader/test-osm2.xml
@@ -8,7 +8,7 @@
     <node id="20" lat="52.0" lon="9" uid="24854">
         <tag k="name" v="Halbendorf-Spree" />
     </node>
-    
+
     <node id="21" lat="52.1" lon="9.1" uid="24854">
         <tag k="name" v="Next-Halbendorf-Spree" />
     </node>
@@ -24,44 +24,44 @@
     <node id="30" lat="51.2" lon="9.4" uid="24855">
         <tag k="name" v="Dresden" />
     </node>
-    
+
     <node id="40" lat="54.0" lon="10.1">
         <tag k="name" v="Ferry End" />
-    </node>  
+    </node>
     <node id="50" lat="55.0" lon="10.2">
         <tag k="name" v="Ferry Start" />
     </node>
-    
+
     <node id="60" lat="56.0" lon="10.1">
         <tag k="name" v="Start" />
-    </node>  
+    </node>
     <node id="70" lat="57.0" lon="10.2">
         <tag k="name" v="End" />
     </node>
-             
+
     <node id="80" lat="54.1" lon="11.1">
         <tag k="name" v="Ferry2 End" />
-    </node>  
+    </node>
     <node id="90" lat="55.1" lon="11.2">
         <tag k="name" v="Ferry2 Start" />
-    </node>         
+    </node>
     
     <way id="10" uid="85761">
         <!-- 0-1, 1-2 -->
         <nd ref="10"/>
-        <nd ref="20"/>        
+        <nd ref="20"/>
         <nd ref="30"/>
         <tag k="oneway" v="true" />
         <tag k="highway" v="motorway" />
-    </way>    
-    
+    </way>
+
     <way id="11" uid="85761">
         <nd ref="21"/>
         <nd ref="20"/>
         <tag k="oneway" v="yes" />
         <tag k="highway" v="motorway" />
-    </way>    
-    
+    </way>
+
     <way id="12" uid="85761">
         <nd ref="20"/>
         <nd ref="22"/>
@@ -77,24 +77,41 @@
     </way>
 
     <way id="15" uid="85762">
-        <nd ref="50"/>        
+        <nd ref="50"/>
         <nd ref="40"/>
         <tag k="route" v="ferry"/>
-        <tag k="motorcar" v="yes"/>         
+        <tag k="motorcar" v="yes"/>
         <tag k="foot" v="yes"/>
-        <tag k="duration" v="01:10"/>        
+        <tag k="duration" v="01:10"/>
     </way>
-    
-    <way id="15" uid="85762">
-        <nd ref="80"/>        
+
+    <way id="16" uid="85762">
+        <nd ref="80"/>
         <nd ref="90"/>
-        <tag k="route" v="ferry"/>              
+        <tag k="route" v="ferry"/>
     </way>
-    
-    <way id="20">          
+
+<!-- invalid duration format -->
+    <way id="17" uid="85762">
+        <nd ref="80"/>
+        <nd ref="90"/>
+        <tag k="route" v="ferry"/>
+        <tag k="duration" v="P01:10"/>
+    </way>
+
+<!-- invalid long duration -->
+    <way id="18" uid="85762">
+        <nd ref="22"/>
+        <nd ref="23"/>
+        <tag k="route" v="ferry"/>
+        <tag k="duration" v="P1M"/>
+    </way>
+
+    <way id="20">
         <nd ref="60"/>
-        <nd ref="70"/>  
+        <nd ref="70"/>
         <tag k="highway" v="motorway" />
         <tag k="maxspeed" v="40" />
     </way>
+
 </osm>
diff --git a/docs/android/index.md b/docs/android/index.md
index 474c29b75a..9eadbeaacd 100644
--- a/docs/android/index.md
+++ b/docs/android/index.md
@@ -21,8 +21,7 @@ Please read [here](./android-studio-setup.md) for a detailed instruction.
 
 ## None-Android Studio
 
-Download the [Android SDK](http://developer.android.com/sdk/installing/index.html?pkg=tools) and 
-go to the Android SDK Manager and install at least 2.3 (API 9).
+Download the [Android SDK](http://developer.android.com/sdk/installing/index.html?pkg=tools) and go to the Android SDK Manager and install the latest SDK.
 
 ### Maven or NetBeans
  1. Download [Maven Android SDK Deployer](https://github.com/simpligility/maven-android-sdk-deployer) and execute `mvn install -P 5.1` - it uses [Android Maven Plugin](http://simpligility.github.io/android-maven-plugin/) under the hood where you need to set up ANDROID_HOME
@@ -50,11 +49,11 @@ Now that you have a running android app you need to copy somehow the routing and
   
 ## Locus Add-On
 
-The developer of Locus has create a routing plugin for [locus](http://www.locusmap.eu/) the source code for the add-on is available [here](https://bitbucket.org/asamm/locus-add-on-graphhopper) and could be useful for other Map-apps too. The discussion is happing [here](http://forum.locusmap.eu/index.php?topic=4036.0).
+The developer of Locus has create a routing plugin for [locus](http://www.locusmap.eu/) the source code for the add-on is available [here](https://bitbucket.org/asamm/locus-map-add-on-graphhopper) and could be useful for other Map-apps too. The discussion is [here](http://forum.locusmap.eu/index.php?topic=4036.0).
 
 ## Cruiser App
 
-The free offline map app [Cruiser](https://play.google.com/store/apps/details?id=gr.talent.cruiser) is using GraphHopper routing and allows also other things.
+The free offline map app [Cruiser](http://wiki.openstreetmap.org/wiki/Cruiser) is using GraphHopper routing and allows also other things.
 
 ## Limitations
 
diff --git a/docs/core/create-new-flagencoder.md b/docs/core/create-new-flagencoder.md
index be932c422a..2e5a491965 100644
--- a/docs/core/create-new-flagencoder.md
+++ b/docs/core/create-new-flagencoder.md
@@ -11,6 +11,10 @@ the speedFactor means by which factor the speed should be devided before storing
 As a third step you need to tune the speeds for the different road types and surfaces. Maybe
 now it is time to write a first test for your new FlagEncoder.
 
+Use it e.g. just via `graphHopper.setEncodingManager(new EncodingManager(myEncoder));`
+
+## Different forward and backward weights?
+
 If you need to support two different speed values for one street (one edge) you need to create
 a separate EncodedDoubleValue instance (reverseSpeedEncoder) managing the reverse speed, 
 see Bike2WeightFlagEncoder for an example. You'll have to overwrite the following methods:
@@ -22,9 +26,13 @@ see Bike2WeightFlagEncoder for an example. You'll have to overwrite the followin
  * reverseFlags
  * setLowSpeed
 
+## Elevation
+
 To incorporate or precalculate values based on the elevation data you can hook into applyWayTags
 and call edge.fetchWayGeometry(3) or again, see Bike2WeightFlagEncoder.
 
+## Add to the core
+
 If you want to include your FlagEncoder in GraphHopper you have to add the creation in
 EncodingManager.parseEncoderString to let the EncodingManager pick the correct class when faced
-with the string. The convention is that encoder.toString is identical to the string.
\ No newline at end of file
+with the string. The convention is that encoder.toString is identical to the string.
diff --git a/docs/index.md b/docs/index.md
index 7b0f01c7dd..2fe0bfeb7b 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -1,39 +1,39 @@
 # Users
 
  * [Quickstart](./web/quickstart.md): HowTo for users.
- * [Read Overview](https://graphhopper.com/#overview): Summary of the product Graphhopper. 
- * [Add GraphHopper Maps to your Browser](./web/open-search.md): Instructions how to setup Graphhopper as the standart search enginge in your browser.
- * [GraphHopper on Twitter](https://twitter.com/graphhopper): Find the official Graphhopper account on Twitter.
+ * [Read Overview](https://graphhopper.com/#overview): Summary of the product GraphHopper. 
+ * [Add GraphHopper Maps to your Browser](./web/open-search.md): Instructions how to setup GraphHopper as the standard search enginge in your browser.
+ * [Embed GraphHopper on your website](https://github.com/karussell/graphhopper-embed-form): A small code snippet on how to integrate GraphHopper Maps in your web site like a contact form
 
 # Translators
 
-* [Translations](./core/translations.md): Tutorial how to help with the Graphhopper translations or how to setup a new language.
+* [Translations](./core/translations.md): Tutorial how to help with the GraphHopper translations or how to setup a new language.
 
 
 # Developers
 
- * [Quickstart](./core/quickstart-from-source.md): Introduction for developers. Explains git checkout, IDE setup and commands for setting up a graphhopper server.
- * [Android](./android/index.md): Instructions how to setup the demo project for Graphhopper on Android as base for further development (i.e. with Android Studio).
- * [Windows](./core/windows-setup.md): Documentation about how to get an Graphhopper instance running on windows (cygwin).
- * [Set up and run GraphHopper in Eclipse](./core/eclipse-setup.md): Detailed instructions how to setup Graphhopper in eclipse with maven.
- * [iOS](https://github.com/graphhopper/graphhopper-ios/): Link to the Graphhopper-iOS github repository.
+ * [Quickstart](./core/quickstart-from-source.md): Introduction for developers. Explains git checkout, IDE setup and commands for setting up a GraphHopper server.
+ * [Android](./android/index.md): Instructions how to setup the demo project for GraphHopper on Android as base for further development (i.e. with Android Studio).
+ * [Windows](./core/windows-setup.md): Documentation about how to get an GraphHopper instance running on windows (cygwin).
+ * [Set up and run GraphHopper in Eclipse](./core/eclipse-setup.md): Detailed instructions how to setup GraphHopper in eclipse with maven.
+ * [iOS](https://github.com/graphhopper/graphhopper-ios/): Link to the GraphHopper-iOS github repository.
 
 ## Core
 
  * [Simple routing](./core/routing.md): Tutorial how to integrate GraphHopper in your Java application (or pick any JVM language)
  * [Create custom weighting](./core/weighting.md): Documentation about how to create a custom weighting class to influence the track calculation.
  * [Elevation](./core/elevation.md): Documentation how to enable the usage of elevation for the output of the track.
- * [Technical overview](./core/technical.md): Technical details about how graphhoppers calculations are working.
- * [Slides from 2014](https://graphhopper.com/public/slides/): Small presentations about how graphhopper ist working.
+ * [Technical overview](./core/technical.md): Technical details about how GraphHopper its calculations are working.
+ * [Slides from 2014](https://graphhopper.com/public/slides/): Small presentations about how GraphHopper ist working.
  * [Contraction Hierarchies](./core/ch.md): Details about speeding up the track calculations by [Contraction Hierarchies](http://en.wikipedia.org/wiki/Contraction_hierarchies).
 
 ## Web
 
- * [Routing API](./web/api-doc.md): Documentation of the Web API to communicate with any graphhopper server via http.
+ * [Routing API](./web/api-doc.md): Documentation of the Web API to communicate with any GraphHopper server via http.
  
 ## Advanced Topics
 
- * [Low level API](./core/low-level-api.md): Instructions how to use Graphhopper as a Java library.
+ * [Low level API](./core/low-level-api.md): Instructions how to use GraphHopper as a Java library.
  * [Create new FlagEncoder](./core/create-new-flagencoder.md): Documentation to create new routing profiles to influence which ways to favor and how the track-time is calculated.
  * [LocationIndex](./core/location-index.md): Documentation about how to get the location index for getting i.e. the nearest edge.
  * [World-Wide-Road-Network](./core/world-wide.md): Details about using the whole world wide street data.
diff --git a/web/src/main/java/com/graphhopper/http/SimpleRouteSerializer.java b/web/src/main/java/com/graphhopper/http/SimpleRouteSerializer.java
index 627b47b3a3..362c07bda2 100644
--- a/web/src/main/java/com/graphhopper/http/SimpleRouteSerializer.java
+++ b/web/src/main/java/com/graphhopper/http/SimpleRouteSerializer.java
@@ -85,6 +85,9 @@ public SimpleRouteSerializer( BBox maxBounds )
                     InstructionList instructions = rsp.getInstructions();
                     jsonPath.put("instructions", instructions.createJson());
                 }
+
+                jsonPath.put("ascend", rsp.getAscend());
+                jsonPath.put("descend", rsp.getDescend());
             }
             json.put("paths", Collections.singletonList(jsonPath));
         }
diff --git a/web/src/main/webapp/css/leaflet_numbered_markers.css b/web/src/main/webapp/css/leaflet_numbered_markers.css
new file mode 100644
index 0000000000..2edafa072d
--- /dev/null
+++ b/web/src/main/webapp/css/leaflet_numbered_markers.css
@@ -0,0 +1,12 @@
+.leaflet-div-icon {
+  background: transparent;
+  border: none;
+}
+
+.leaflet-marker-icon .number{
+  position: relative;
+  top: -41px;
+  font-size: 12px;
+  width: 25px;
+  text-align: center;
+}
\ No newline at end of file
diff --git a/web/src/main/webapp/css/style.css b/web/src/main/webapp/css/style.css
index 0d796d4261..fc27376fdb 100644
--- a/web/src/main/webapp/css/style.css
+++ b/web/src/main/webapp/css/style.css
@@ -1,4 +1,4 @@
-body {                
+body {
     color: #000;
     font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;    
     line-height: 1.4;
@@ -7,13 +7,13 @@ body {
     margin: 0;
     min-width: 600px;
 }
-#map {    
+#map {
     /* set size via JS */
     cursor: default;
 }
 
 #input {
-    float: left;                
+    float: left;
     margin-left: 10px; 
     /*padding-right: 15px; */
 }
@@ -28,6 +28,7 @@ body {
 #info a {
     padding-right: 5px;
 }
+
 #input, #instructions {
     width: 280px;
 }
@@ -39,7 +40,7 @@ body {
 .pointResolveFound a {
     background-color: white;
     padding-left: 4px;
-    padding-right: 3px;    
+    padding-right: 3px;
 }
 .pointResolveFound {
     overflow: hidden;
@@ -47,9 +48,9 @@ body {
     font-size: 10px;
     color: blue;
     float: right;
-    cursor: pointer;    
+    cursor: pointer;
     margin-top: -20px;
-    margin-right: 2px;    
+    margin-right: 2px;
 }
 
 .pointResolveError {
@@ -77,7 +78,7 @@ body {
 }
 #moreattribution {
     padding-top: 20px;
-    color: #666666                    
+    color: #666666
 }
 #locationpoints {
     padding-bottom: 10px;
@@ -99,8 +100,15 @@ body {
     float: right;
 }
 #routeDetails {
-    padding: 20px;
+    padding: 15px;
     font-size: 12px;
+    padding-bottom: 4px;
+}
+#versionDetails {
+    font-size: 10px;
+    padding-top: 4px;
+    padding-left: 15px;
+    padding-right: 15px;
 }
 .hidden {
     display: none;
@@ -235,6 +243,10 @@ td img.pic {
     background-image: linear-gradient(to bottom, #9f9f9f, #e7e7e7);    
 }
 
+#more-vehicle-btn {
+    cursor: pointer;
+}
+
 .autocomplete {
     border: 1px solid #999; 
     background: #FFF; 
@@ -280,12 +292,12 @@ td img.pic {
 
 #expandDetails {
     color: gray;
-    font-size:14px; 
+    font-size:11px;
     float: right;
-    font-weight: bold;    
-
     width: 20px;
-    height: 20px;    
+    height: 20px;
+    margin: 0px;
+    padding: 0px;
     background-image: linear-gradient(to bottom, white, #e7e7e7);
 }
 #moreButton {
diff --git a/web/src/main/webapp/img/marker_hole.png b/web/src/main/webapp/img/marker_hole.png
new file mode 100644
index 0000000000..17481f2ebb
Binary files /dev/null and b/web/src/main/webapp/img/marker_hole.png differ
diff --git a/web/src/main/webapp/img/racingbike.png b/web/src/main/webapp/img/racingbike.png
index 34a6c1f7c0..e666d2c673 100644
Binary files a/web/src/main/webapp/img/racingbike.png and b/web/src/main/webapp/img/racingbike.png differ
diff --git a/web/src/main/webapp/img/racingbike.svg b/web/src/main/webapp/img/racingbike.svg
index 0bfdef843f..354b426510 100644
--- a/web/src/main/webapp/img/racingbike.svg
+++ b/web/src/main/webapp/img/racingbike.svg
@@ -13,8 +13,11 @@
    height="24"
    id="svg4460"
    version="1.1"
-   inkscape:version="0.48.3.1 r9886"
-   sodipodi:docname="bicycle-24.svg">
+   inkscape:version="0.48.4 r9939"
+   sodipodi:docname="racingbike.svg"
+   inkscape:export-filename="/home/peterk/Documents/quell/graphhopper/web/src/main/webapp/img/racingbike.png"
+   inkscape:export-xdpi="110"
+   inkscape:export-ydpi="110">
   <defs
      id="defs4462" />
   <sodipodi:namedview
@@ -24,19 +27,19 @@
      borderopacity="1.0"
      inkscape:pageopacity="0.0"
      inkscape:pageshadow="2"
-     inkscape:zoom="7.9999996"
-     inkscape:cx="-12.109166"
-     inkscape:cy="18.352123"
+     inkscape:zoom="11.313708"
+     inkscape:cx="-17.593196"
+     inkscape:cy="17.160001"
      inkscape:document-units="px"
      inkscape:current-layer="layer1"
      showgrid="false"
      showguides="true"
      inkscape:guide-bbox="true"
-     inkscape:window-width="1220"
-     inkscape:window-height="833"
-     inkscape:window-x="56"
-     inkscape:window-y="20"
-     inkscape:window-maximized="0"
+     inkscape:window-width="1600"
+     inkscape:window-height="1146"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1"
      inkscape:snap-global="false">
     <inkscape:grid
        type="xygrid"
@@ -103,7 +106,7 @@
        sodipodi:cy="15.558912"
        sodipodi:rx="4.6403885"
        sodipodi:ry="4.6403885"
-       d="m -6.2755728,15.558912 a 4.6403885,4.6403885 0 1 1 -9.2807772,0 4.6403885,4.6403885 0 1 1 9.2807772,0 z"
+       d="m -6.2755728,15.558912 c 0,2.562816 -2.0775727,4.640389 -4.6403882,4.640389 -2.562816,0 -4.640389,-2.077573 -4.640389,-4.640389 0,-2.562816 2.077573,-4.640388 4.640389,-4.640388 2.5628155,0 4.6403882,2.077572 4.6403882,4.640388 z"
        transform="matrix(0.72957423,0,0,0.72957423,26.265996,1032.3096)" />
     <path
        sodipodi:type="arc"
@@ -113,7 +116,7 @@
        sodipodi:cy="15.558912"
        sodipodi:rx="4.6403885"
        sodipodi:ry="4.6403885"
-       d="m -6.2755728,15.558912 a 4.6403885,4.6403885 0 1 1 -9.2807772,0 4.6403885,4.6403885 0 1 1 9.2807772,0 z"
+       d="m -6.2755728,15.558912 c 0,2.562816 -2.0775727,4.640389 -4.6403882,4.640389 -2.562816,0 -4.640389,-2.077573 -4.640389,-4.640389 0,-2.562816 2.077573,-4.640388 4.640389,-4.640388 2.5628155,0 4.6403882,2.077572 4.6403882,4.640388 z"
        transform="matrix(0.72957423,0,0,0.72957423,14.674252,1032.3098)" />
     <path
        sodipodi:type="arc"
@@ -123,7 +126,7 @@
        sodipodi:cy="15.558912"
        sodipodi:rx="4.6403885"
        sodipodi:ry="4.6403885"
-       d="m -6.2755728,15.558912 a 4.6403885,4.6403885 0 1 1 -9.2807772,0 4.6403885,4.6403885 0 1 1 9.2807772,0 z"
+       d="m -6.2755728,15.558912 c 0,2.562816 -2.0775727,4.640389 -4.6403882,4.640389 -2.562816,0 -4.640389,-2.077573 -4.640389,-4.640389 0,-2.562816 2.077573,-4.640388 4.640389,-4.640388 2.5628155,0 4.6403882,2.077572 4.6403882,4.640388 z"
        transform="matrix(0.26624926,0,0,0.26624926,20.312579,1031.694)" />
     <path
        style="fill:none;stroke:#474747;stroke-width:1.37899995;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
@@ -143,5 +146,23 @@
        id="path3847"
        inkscape:connector-curvature="0"
        sodipodi:nodetypes="cc" />
+    <path
+       style="fill:#4d4d4d;stroke:#474747;stroke-width:0.80000001;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
+       d="m 11.823224,1034.688 -6.8125004,-0.375"
+       id="path2997"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+    <path
+       style="fill:#474747;fill-opacity:1;stroke:#474747;stroke-width:0.80000001;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
+       d="m 6.9116126,1037.9569 -3.6187195,-0.2134"
+       id="path2997-1"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
+    <path
+       style="fill:none;stroke:#474747;stroke-width:0.80000001;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
+       d="m 8.8901659,1036.181 -5.6035544,-0.3384"
+       id="path2997-4"
+       inkscape:connector-curvature="0"
+       sodipodi:nodetypes="cc" />
   </g>
 </svg>
diff --git a/web/src/main/webapp/index.html b/web/src/main/webapp/index.html
index 0cf58995bd..3f30827d32 100644
--- a/web/src/main/webapp/index.html
+++ b/web/src/main/webapp/index.html
@@ -12,22 +12,24 @@
         <script type="text/javascript" src="js/leaflet.js?v=0.7.3"></script>
         <link rel="stylesheet" href="css/Leaflet.Elevation-0.0.2.css" />
         <script type="text/javascript" src="js/d3.min.js"></script>
-        <script type="text/javascript" src="js/Leaflet.Elevation-0.0.2.min.js"></script>        
+        <script type="text/javascript" src="js/Leaflet.Elevation-0.0.2.min.js"></script>
 
+        <link rel="stylesheet" href="css/leaflet_numbered_markers.css" />
         <link rel="stylesheet" href="css/leaflet.contextmenu.css" />
         <link rel="stylesheet" href="css/leaflet.loading.css" />
         <link rel="stylesheet" href="css/ui-lightness/jquery-ui-1.10.4.css" />
         <script type="text/javascript" src="js/leaflet.contextmenu.js"></script>
         <script type="text/javascript" src="js/leaflet.loading.js"></script>
-        <script type="text/javascript" src="js/jquery-2.1.0.min.js"></script>        
-        <script type="text/javascript" src="js/jquery-ui-1.10.4.custom.min.js"></script>      
+        <script type="text/javascript" src="js/jquery-2.1.0.min.js"></script>
+        <script type="text/javascript" src="js/jquery-ui-1.10.4.custom.min.js"></script>
+        <script type="text/javascript" src="js/leaflet_numbered_markers.js"></script>
         <script type="text/javascript" src="js/jquery.history.js"></script>
         <!--
         <script type="text/javascript" src="js/jquery.autocomplete.min.js"></script>
         -->
         <script type="text/javascript" src="js/jquery.autocomplete.js"></script>
-        <script type="text/javascript" src="js/ghrequest.js?v=0.4.4"></script>
-        <script type="text/javascript" src="js/main.js?v=0.4.4"></script>
+        <script type="text/javascript" src="js/ghrequest.js?v=0.5.0"></script>
+        <script type="text/javascript" src="js/main.js?v=0.5.0"></script>
         <link rel="stylesheet" type="text/css" href="css/style.css" />
     </head>
     <body>
@@ -35,7 +37,7 @@
             <div id="input_header">
                 <div id="header_img">
                     <a class="no_link" href="https://graphhopper.com">
-                        <img alt="GraphHopper" src="./img/header.png"/>                    
+                        <img alt="GraphHopper" src="./img/header.png"/>
                     </a>
                 </div>
                 <div id="options">
@@ -47,12 +49,12 @@
                     <div id="locationpoints">
                         <div id="x_pointAdd" class="pointAdd"><img src="./img/point_add.png"/></div>
                     </div>
-                    <div class="clear"> </div>                
-                    <input id="searchButton" type="submit" value="Search">                
+                    <div class="clear"> </div>
+                    <input id="searchButton" type="submit" value="Search">
                 </form>      
                 <div id="export-link" title="Static Link" class="left"><a href="/maps"><img src='img/link.png'></a></div>
                 <div id="gpxExportButton" title="GPX Download"><a href=""><img alt="gpx" src='img/gpx.png'></a></div>
-                <div id="hosting">Powered by <a href='https://graphhopper.com/#directions-api'>GraphHopper API</a></div>                
+                <div id="hosting">Powered by <a href='https://graphhopper.com/#directions-api'>GraphHopper API</a></div>
             </div>
             <div class="clear"> </div>
             <div id="info" class="small_text">
diff --git a/web/src/main/webapp/js/ghrequest.js b/web/src/main/webapp/js/ghrequest.js
index c5a44745b2..7bfea1787c 100644
--- a/web/src/main/webapp/js/ghrequest.js
+++ b/web/src/main/webapp/js/ghrequest.js
@@ -315,7 +315,7 @@ GHRequest.prototype.init = function (params) {
 
     // overwrite elevation e.g. important if not supported from feature set
     this.api_params.elevation = false;
-    var featureSet = this.features[params.vehicle];
+    var featureSet = this.features[this.api_params.vehicle];
     if (featureSet && featureSet.elevation) {
         if ('elevation' in params)
             this.api_params.elevation = params.elevation;
@@ -377,7 +377,7 @@ GHRequest.prototype.createGeocodeURL = function (host, prevIndex) {
     var path = this.createPath(tmpHost + "/geocode?limit=6&type=" + this.dataType + "&key=" + this.key);
     if (prevIndex >= 0 && prevIndex < this.route.size()) {
         var point = this.route.getIndex(prevIndex);
-        path += "&lat=" + point.lat + "&lon=" + point.lng;
+        path += "&point=" + point.lat + "," + point.lng;
     }
     return path;
 };
diff --git a/web/src/main/webapp/js/leaflet_numbered_markers.js b/web/src/main/webapp/js/leaflet_numbered_markers.js
new file mode 100644
index 0000000000..2ab1983b9a
--- /dev/null
+++ b/web/src/main/webapp/js/leaflet_numbered_markers.js
@@ -0,0 +1,30 @@
+L.NumberedDivIcon = L.Icon.extend({
+  options: {
+    iconUrl: './img/marker_hole.png',
+    number: '',
+    shadowUrl: null,
+    iconSize: new L.Point(25, 41),
+    iconAnchor: new L.Point(12, 40),
+    popupAnchor: new L.Point(0, -33),
+    shadowSize: new L.Point(50, -64),
+    shadowAnchor: new L.Point(4, -62),
+    className: 'leaflet-div-icon'
+  },
+
+  createIcon: function () {
+    var div = document.createElement('div');
+    var img = this._createImg(this.options['iconUrl']);
+    var numdiv = document.createElement('div');
+    numdiv.setAttribute ( "class", "number" );
+    numdiv.innerHTML = this.options['number'] || '';
+    div.appendChild ( img );
+    div.appendChild ( numdiv );
+    this._setIconStyles(div, 'icon');
+    return div;
+  },
+
+  //you could change this to add a shadow like in the normal marker if you really wanted
+  createShadow: function () {
+    return null;
+  }
+});
\ No newline at end of file
diff --git a/web/src/main/webapp/js/main.js b/web/src/main/webapp/js/main.js
index 3a1a7ea638..f33a0e87f8 100644
--- a/web/src/main/webapp/js/main.js
+++ b/web/src/main/webapp/js/main.js
@@ -31,6 +31,7 @@ var routeSegmentPopup = null;
 var elevationControl = null;
 var activeLayer = '';
 var i18nIsInitialized;
+var metaVersionInfo = "";
 
 var iconFrom = L.icon({
     iconUrl: './img/marker-icon-green.png',
@@ -46,13 +47,6 @@ var iconTo = L.icon({
     iconAnchor: [12, 40]
 });
 
-var iconInt = L.icon({
-    iconUrl: './img/marker-icon-blue.png',
-    shadowSize: [50, 64],
-    shadowAnchor: [4, 62],
-    iconAnchor: [12, 40]
-});
-
 $(document).ready(function (e) {
     // fixing cross domain support e.g in Opera
     jQuery.support.cors = true;
@@ -112,13 +106,17 @@ $(document).ready(function (e) {
                 bounds.maxLon = tmp[2];
                 bounds.maxLat = tmp[3];
                 var vehiclesDiv = $("#vehicles");
-                function createButton(vehicle) {
+
+                function createButton(vehicle, hide) {
                     var button = $("<button class='vehicle-btn' title='" + tr(vehicle) + "'/>");
+                    if (hide)
+                        button.hide();
+
                     button.attr('id', vehicle);
                     button.html("<img src='img/" + vehicle + ".png' alt='" + tr(vehicle) + "'></img>");
                     button.click(function () {
                         ghRequest.initVehicle(vehicle);
-                        resolveAll()
+                        resolveAll();
                         routeLatLng(ghRequest);
                     });
                     return button;
@@ -127,15 +125,42 @@ $(document).ready(function (e) {
                 if (json.features) {
                     ghRequest.features = json.features;
 
-                    var vehicles = Object.keys(json.features);
+                    // car, foot and bike should come first. mc comes last
+                    var prefer = {"car": 1, "foot": 2, "bike": 3, "motorcycle": 10000};
+                    var showAllVehicles = urlParams.vehicle && (!prefer[urlParams.vehicle] || prefer[urlParams.vehicle] > 3);
+                    var vehicles = getSortedVehicleKeys(json.features, prefer);
                     if (vehicles.length > 0)
                         ghRequest.initVehicle(vehicles[0]);
 
-                    for (var key in json.features) {
-                        vehiclesDiv.append(createButton(key.toLowerCase()));
+                    var hiddenVehicles = [];
+                    for (var i in vehicles) {
+                        var btn = createButton(vehicles[i].toLowerCase(), !showAllVehicles && i > 2);
+                        vehiclesDiv.append(btn);
+
+                        if (i > 2)
+                            hiddenVehicles.push(btn);
+                    }
+
+                    if (!showAllVehicles && vehicles.length > 3) {
+                        var moreBtn = $("<a id='more-vehicle-btn'> ...</a>").click(function () {
+                            moreBtn.hide();
+                            for (var i in hiddenVehicles) {
+                                hiddenVehicles[i].show();
+                            }
+                        });
+                        vehiclesDiv.append(moreBtn);
                     }
                 }
 
+                if (json.import_date)
+                    metaVersionInfo = "<br/>Import date: " + json.import_date;
+                if (json.prepare_date)
+                    metaVersionInfo += "<br/>Prepare date: " + json.prepare_date;
+                if (json.version)
+                    metaVersionInfo += "<br/>GH Version: " + json.version;
+                if (json.build_date)
+                    metaVersionInfo += "<br/>Jar Date: " + json.build_date;
+
                 initMap(urlParams.layer);
 
                 // execute query
@@ -186,20 +211,45 @@ $(document).ready(function (e) {
     checkInput();
 });
 
+function getSortedVehicleKeys(vehicleHashMap, prefer) {
+    var keys = Object.keys(vehicleHashMap);
+
+    keys.sort(function (a, b) {
+        var intValA = prefer[a];
+        var intValB = prefer[b];
+
+        if (!intValA && !intValB)
+            return a.localeCompare(b);
+
+        if (!intValA)
+            intValA = 4;
+        if (!intValB)
+            intValB = 4;
+
+        return intValA - intValB;
+    });
+    return keys;
+}
+
 function initFromParams(params, doQuery) {
     ghRequest.init(params);
-    var fromAndTo = params.from && params.to,
-            routeNow = params.point && params.point.length >= 2 || fromAndTo;
+    var count = 0;
+    var singlePointIndex;
+    for (var key = 0; key < params.point.length; key++) {
+        if (params.point[key] !== "") {
+            count++;
+            singlePointIndex = key;
+        }
+    }
 
+    var routeNow = params.point && count >= 2;
     if (routeNow) {
-        if (fromAndTo)
-            resolveCoords([params.from, params.to], doQuery);
-        else
-            resolveCoords(params.point, doQuery);
-    } else if (params.point && params.point.length === 1) {
-        ghRequest.from = new GHInput(params.point[0]);
-        resolve("from", ghRequest.from);
-        focus(ghRequest.from, 15, true);
+        resolveCoords(params.point, doQuery);
+    } else if (params.point && count === 1) {
+        ghRequest.route.set(params.point[singlePointIndex], singlePointIndex, true);
+        resolveIndex(singlePointIndex).done(function () {
+            focus(ghRequest.route.getIndex(singlePointIndex), 15, singlePointIndex);
+        });
     }
 }
 
@@ -614,7 +664,7 @@ function setFlag(coord, index) {
     if (coord.lat) {
         var toFrom = getToFrom(index),
                 marker = L.marker([coord.lat, coord.lng], {
-                    icon: ((toFrom === FROM) ? iconFrom : ((toFrom === TO) ? iconTo : iconInt)),
+                    icon: ((toFrom === FROM) ? iconFrom : ((toFrom === TO) ? iconTo : new L.NumberedDivIcon({number: index}))),
                     draggable: true,
                     contextmenu: true,
                     contextmenuItems: [{
@@ -1039,7 +1089,12 @@ function routeLatLng(request, doQuery) {
 
         var tmpTime = createTimeString(path.time);
         var tmpDist = createDistanceString(path.distance);
+        var tmpEleInfoStr = "";
+        if (request.hasElevation())
+            tmpEleInfoStr = createEleInfoString(path.ascend, path.descend);
+
         descriptionDiv.append(tr("routeInfo", [tmpDist, tmpTime]));
+        descriptionDiv.append(tmpEleInfoStr);
 
         $('.defaulting').each(function (index, element) {
             $(element).css("color", "black");
@@ -1090,7 +1145,7 @@ function routeLatLng(request, doQuery) {
             if (request.getVehicle().toUpperCase() === "FOOT") {
                 osmVehicle = "foot";
             }
-            osmRouteLink.attr("href", "http://www.openstreetmap.org/directions?engine=graphhopper_" 
+            osmRouteLink.attr("href", "http://www.openstreetmap.org/directions?engine=graphhopper_"
                     + osmVehicle + "&route=" + encodeURIComponent(request.from.lat + "," + request.from.lng + ";" + request.to.lat + "," + request.to.lng));
             hiddenDiv.append(osmRouteLink);
 
@@ -1115,6 +1170,9 @@ function routeLatLng(request, doQuery) {
             var bingLink = $("<a>Bing</a> ");
             bingLink.attr("href", "https://www.bing.com/maps/default.aspx?rtp=adr." + request.from + "~adr." + request.to + addToBing);
             hiddenDiv.append(bingLink);
+            if (metaVersionInfo)
+                hiddenDiv.append(metaVersionInfo);
+
             $("#info").append(hiddenDiv);
         }
     });
@@ -1130,6 +1188,20 @@ function createDistanceString(dist) {
     return dist + tr2("kmAbbr");
 }
 
+function createEleInfoString(ascend, descend) {
+    var str = "";
+    if (ascend > 0 || descend > 0) {
+        str = "<br/> ";
+        if (ascend > 0)
+            str += "&#8599;" + round(ascend, 1) + tr2("mAbbr");
+
+        if (descend > 0)
+            str += " &#8600;" + round(descend, 1) + tr2("mAbbr");
+    }
+
+    return str;
+}
+
 function createTimeString(time) {
     var tmpTime = round(time / 60 / 1000, 1000);
     var resTimeStr;
@@ -1175,7 +1247,7 @@ function addInstruction(main, instr, instrIndex, lngLat) {
     else if (sign === 6)
         sign = "roundabout";
     else
-        throw "did not found sign " + sign;
+        throw "did not find sign " + sign;
     var title = instr.text;
     if (instr.annotation_text) {
         if (!title)
@@ -1247,8 +1319,6 @@ function parseUrl(query) {
         var key = vars[i].substring(0, indexPos);
         var value = vars[i].substring(indexPos + 1);
         value = decodeURIComponent(value.replace(/\+/g, ' '));
-        if (value === "")
-            continue;
 
         // force array for heading and point
         if (typeof res[key] === "undefined"
diff --git a/web/src/test/java/com/graphhopper/http/BaseServletTester.java b/web/src/test/java/com/graphhopper/http/BaseServletTester.java
index 924d19d696..70ed72f3f3 100644
--- a/web/src/test/java/com/graphhopper/http/BaseServletTester.java
+++ b/web/src/test/java/com/graphhopper/http/BaseServletTester.java
@@ -126,7 +126,7 @@ protected String queryString( String query, int code ) throws Exception
             resQuery += "&";
         }
         String url = getTestRouteAPIUrl() + "?" + resQuery;
-        Downloader downloader = new Downloader("web integration tester").setTimeout(1000);
+        Downloader downloader = new Downloader("web integration tester").setTimeout(2000);
         HttpURLConnection conn = downloader.createConnection(url);
         conn.connect();
         assertEquals(code, conn.getResponseCode());
diff --git a/web/src/test/webapp/SpecRunner.html b/web/src/test/webapp/SpecRunner.html
index 1deeae61ee..42eb224b0c 100644
--- a/web/src/test/webapp/SpecRunner.html
+++ b/web/src/test/webapp/SpecRunner.html
@@ -8,9 +8,9 @@
         <script type="text/javascript" src="lib/jasmine-1.3.1/jasmine.js"></script>
         <script type="text/javascript" src="lib/jasmine-1.3.1/jasmine-html.js"></script>
 
-        <!-- include source files here... -->
+        <!-- include source files here... -->        
         <script type="text/javascript" src="../../main/webapp/js/leaflet.js"></script>
-        <script type="text/javascript" src="../../main/webapp/js/jquery-1.10.2.min.js"></script>        
+        <script type="text/javascript" src="../../main/webapp/js/jquery-2.1.0.min.js"></script>
         <script type="text/javascript" src="../../main/webapp/js/ghrequest.js"></script>
         <script type="text/javascript" src="../../main/webapp/js/main.js"></script> 
 
@@ -21,7 +21,7 @@
     <body>
 
         <script type="text/javascript">
-            (function() {
+            (function () {
                 var jasmineEnv = jasmine.getEnv();
                 jasmineEnv.updateInterval = 1000;
 
@@ -29,13 +29,13 @@
 
                 jasmineEnv.addReporter(htmlReporter);
 
-                jasmineEnv.specFilter = function(spec) {
+                jasmineEnv.specFilter = function (spec) {
                     return htmlReporter.specFilter(spec);
                 };
 
                 var currentWindowOnload = window.onload;
 
-                window.onload = function() {
+                window.onload = function () {
                     if (currentWindowOnload) {
                         currentWindowOnload();
                     }
@@ -48,5 +48,9 @@
 
             })();
         </script>
+        <!-- accept JS error 'map undefined' as otherwise we need to include lots of unnecessary JS here
+        <div id="map">
+        </div>
+        -->
     </body>
 </html>
diff --git a/web/src/test/webapp/spec/UtilsSpec.js b/web/src/test/webapp/spec/UtilsSpec.js
index e9bd301808..35a1e13542 100644
--- a/web/src/test/webapp/spec/UtilsSpec.js
+++ b/web/src/test/webapp/spec/UtilsSpec.js
@@ -80,51 +80,10 @@ describe("utils", function () {
         // force array for point
         // URLs with one point only should work: https://graphhopper.com/maps/?point=50.413331%2C11.699066
         params = parseUrl("blup?point=49.946505%2C11.571232&point=&");
-        expect(params.point).toEqual(["49.946505,11.571232"]);
+        expect(params.point).toEqual(["49.946505,11.571232", ""]);
 
         params = parseUrl("blup?point=&point=49.946505%2C11.571232");
-        expect(params.point).toEqual(["49.946505,11.571232"]);
-    });
-
-    it("features should work", function () {
-        var ghRequest = new GHRequest("http://test.de?vehicle=car");
-        var params = {};
-        params.elevation = true;
-        ghRequest.features = {"car": {}};
-        ghRequest.init(params);
-        expect(ghRequest.elevation).toEqual(false);
-
-        ghRequest.features = {"car": {elevation: true}};
-        ghRequest.init(params);
-        expect(ghRequest.elevation).toEqual(true);
-
-        var params = {};
-        ghRequest.features = {"car": {elevation: true}};
-        ghRequest.init(params);
-        expect(ghRequest.elevation).toEqual(true);
-
-        var params = {};
-        params.elevation = false;
-        ghRequest.features = {"car": {elevation: true}};
-        ghRequest.init(params);
-        expect(ghRequest.elevation).toEqual(false);
-
-        var params = {};
-        params.elevation = true;
-        ghRequest.features = {"car": {elevation: false}};
-        ghRequest.init(params);
-        expect(ghRequest.elevation).toEqual(false);
-
-        ghRequest = new GHRequest("http://test.de");
-        var params = {point: [[4, 3], [2, 3]], test: "x", test_array: [1, 2]};
-        ghRequest.init(params);
-        
-        // skip point, layer etc
-        expect(ghRequest.api_params.point).toEqual(undefined);
-
-        // include all other parameters
-        expect(ghRequest.api_params.test).toEqual("x");
-        expect(ghRequest.api_params.test_array).toEqual([1, 2]);
+        expect(params.point).toEqual(["", "49.946505,11.571232"]);
     });
 
     it("ghrequest should init correctly from params", function () {
@@ -166,4 +125,53 @@ describe("utils", function () {
         expect(new GHInput("12.44,68.44").lng).toEqual(68.44);
         expect(new GHInput("london").lon).toEqual(undefined);
     });
+
+    it("should sort vehicles and prefer car, foot, bike", function () {
+        // car, foot and bike should come first. mc comes last
+        var prefer = {"car": 1, "foot": 2, "bike": 3, "motorcycle": 10000};
+        var keys = getSortedVehicleKeys({"motorcycle": "blup", "car": "blup", "mtb": "blup", "foot": "blup"}, prefer);
+        expect(keys).toEqual(["car", "foot", "mtb", "motorcycle"]);
+    });
+
+    it("features should work", function () {
+        var ghRequest = new GHRequest("http://test.de?vehicle=car");
+        var params = {};
+        params.elevation = true;
+        ghRequest.features = {"car": {}};
+        ghRequest.init(params);
+        expect(ghRequest.api_params.elevation).toEqual(false);
+
+        // overwrite
+        ghRequest.features = {"car": {elevation: true}};
+        ghRequest.init(params);
+        expect(ghRequest.api_params.elevation).toEqual(true);
+
+        var params = {};
+        ghRequest.features = {"car": {elevation: true}};
+        ghRequest.init(params);
+        expect(ghRequest.api_params.elevation).toEqual(true);
+
+        var params = {};
+        params.elevation = false;
+        ghRequest.features = {"car": {elevation: true}};
+        ghRequest.init(params);
+        expect(ghRequest.api_params.elevation).toEqual(false);
+
+        var params = {};
+        params.elevation = true;
+        ghRequest.features = {"car": {elevation: false}};
+        ghRequest.init(params);
+        expect(ghRequest.api_params.elevation).toEqual(false);
+
+        ghRequest = new GHRequest("http://test.de");
+        var params = {point: [[4, 3], [2, 3]], test: "x", test_array: [1, 2]};
+        ghRequest.init(params);
+
+        // skip point, layer etc
+        expect(ghRequest.api_params.point).toEqual(undefined);
+
+        // include all other parameters
+        expect(ghRequest.api_params.test).toEqual("x");
+        expect(ghRequest.api_params.test_array).toEqual([1, 2]);
+    });
 });
\ No newline at end of file
