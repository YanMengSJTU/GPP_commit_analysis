diff --git a/web-bundle/src/main/java/com/graphhopper/swl/CustomCarFlagEncoder.java b/web-bundle/src/main/java/com/graphhopper/swl/CustomCarFlagEncoder.java
index 9885d0f7db..0ee7fb951d 100644
--- a/web-bundle/src/main/java/com/graphhopper/swl/CustomCarFlagEncoder.java
+++ b/web-bundle/src/main/java/com/graphhopper/swl/CustomCarFlagEncoder.java
@@ -44,14 +44,14 @@ public void createEncodedValues(List<EncodedValue> registerNewEncodedValue, Stri
             registerNewEncodedValue.add(stableIdByte[i]);
         }
         for (int i=0; i<16; i++) {
-            reverseStableIdByte[i] = new SimpleIntEncodedValue("reverse-stable-id-byte-"+i, 8);
+            reverseStableIdByte[i] = new UnsignedIntEncodedValue("reverse-stable-id-byte-"+i, 8);
             registerNewEncodedValue.add(reverseStableIdByte[i]);
         }
     }
 
     final String getStableId(boolean reverse, EdgeIteratorState edge) {
         byte[] stableId = new byte[16];
-        SimpleIntEncodedValue[] idByte = reverse ? reverseStableIdByte : stableIdByte;
+        UnsignedIntEncodedValue[] idByte = reverse ? reverseStableIdByte : stableIdByte;
         for (int i=0; i<16; i++) {
             stableId[i] = (byte) edge.get(idByte[i]);
         }
@@ -64,7 +64,7 @@ final void setStableId(boolean reverse, EdgeIteratorState edge, String stableId)
         if (stableIdBytes.length != 16)
             throw new IllegalArgumentException("stable ID must be 16 bytes: " + DatatypeConverter.printHexBinary(stableIdBytes));
 
-        SimpleIntEncodedValue[] idByte = reverse ? reverseStableIdByte : stableIdByte;
+        UnsignedIntEncodedValue[] idByte = reverse ? reverseStableIdByte : stableIdByte;
         for (int i=0; i<16; i++) {
             edge.set(idByte[i], Byte.toUnsignedInt(stableIdBytes[i]));
         }
