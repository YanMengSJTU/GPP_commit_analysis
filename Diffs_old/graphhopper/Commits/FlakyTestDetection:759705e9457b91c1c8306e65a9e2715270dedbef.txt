diff --git a/docs/android/index.md b/docs/android/index.md
index 5d299f7644..6eba567455 100644
--- a/docs/android/index.md
+++ b/docs/android/index.md
@@ -1,8 +1,8 @@
 # Get Demo
 
-[Download GraphHopper Demo APK](http://graphhopper.com/#community)
+[Download GraphHopper Demo APK](../index.md#for-users)
 
-![simple routing](https://graphhopper.com/blog/wp-content/uploads/2016/10/android-demo-screenshot-2.png)
+![simple routing](https://www.graphhopper.com/wp-content/uploads/2016/10/android-demo-screenshot-2.png)
 
 # Set-up Development
 
diff --git a/docs/index.md b/docs/index.md
index 5c6aee5185..c52b85c2f5 100644
--- a/docs/index.md
+++ b/docs/index.md
@@ -7,77 +7,82 @@ Try out our live demo called [GraphHopper Maps](https://graphhopper.com/maps)
  [![GraphHopper Maps](https://karussell.files.wordpress.com/2014/12/graphhopper-maps-0-4-preview.png)](https://graphhopper.com/maps)
 
 [The Readme](../README.md#features) lists all features or [this list of slides](https://graphhopper.com/public/slides/).
-
-See [more users of GraphHopper](https://www.graphhopper.com/showcases/) or [Android apps](./android/index.md#apps) and let us know your application!
-
-Try the web demo 'GraphHopper Maps' with [this user guide](./web/quickstart.md) on your machine
-or the [Android demo](https://graphhopper.com/public/releases/graphhopper-android-0.8.2.apk).
-
-Other links:
-
- * [Add GraphHopper Maps to your Browser](./web/open-search.md): Instructions how to setup GraphHopper as the standard search enginge in your browser.
- * [Embed GraphHopper on your website](https://github.com/karussell/graphhopper-embed-form): A small code snippet on how to integrate GraphHopper Maps in your web site like a contact form
+See [users of GraphHopper](https://www.graphhopper.com/showcases/) or [Android apps](./android/index.md#apps) and let us know your application!
 
 ## Contact
 
 For all questions regarding the GraphHopper routing engine please use [our forum](https://discuss.graphhopper.com). 
-
 For bugs see our contribute section below.
 
-## Web
+---
+
+## For Users
+
+Try the web demo 'GraphHopper Maps' with [this user guide](./web/quickstart.md) on your machine
+or the [Android demo](https://graphhopper.com/public/releases/graphhopper-android-0.8.2.apk).
+
+#### Web
 
 The web module provides a web API for other programming languages as well as starts a simple user interface called GraphHopper Maps
 
  * [Routing API](./web/api-doc.md): Documentation of the Web API to communicate with any GraphHopper server via http.
- * [Deployment Guide](./core/deploy.md): Details about deploying GraphHopper
- * [Postgis query script](../core/files/postgis)
+ * [Deployment Guide](./core/deploy.md): Details about deploying GraphHopper 
  * There are official API clients in [Java](https://github.com/graphhopper/directions-api-java-client/) and [JavaScript](https://github.com/graphhopper/directions-api-js-client).
 
-### Configuration
+#### Configuration
 
 You can configure several aspects either programmatically or just via the [config.properties](../config-example.properties).
 
 The elevation configuration is separately documented [here](./core/elevation.md).
 
-## Developer
+---
+
+## For Developers
 
 [The quickstart](./core/quickstart-from-source.md) is an introduction for developers. Explains git checkout, IDE setup and commands for setting up a GraphHopper server.
 
 Find all changes in previous and current versions in the [changelogs](../core/files/changelogs.txt).
 
-### Contribute
+#### Contribute
 
 Read [here](../.github/CONTRIBUTING.md) on how to contribute as a developer and translator.
 
-### Technical
+#### Technical
 
 Various topics are explained in more detail separately:
 
  * [Technical overview](./core/technical.md): Technical details about how GraphHopper its calculations are working.
  * [Simple routing](./core/routing.md): Tutorial how to integrate GraphHopper in your Java application (or pick any JVM language)
  * [Create custom weighting](./core/weighting.md): Documentation about how to create a custom weighting class to influence the track calculation.
+ * [Import GTFS](../reader-gtfs): Simple steps to get GTFS import and routing done.
  * [LocationIndex](./core/location-index.md): Documentation about how to get the location index for getting i.e. the nearest edge. 
  * [Hybrid Mode](./core/landmarks.md): Details about speeding up the route calculation via A* and landmarks.
  * [Speed Mode](./core/ch.md): Details about speeding up the route calculations via [Contraction Hierarchies](http://en.wikipedia.org/wiki/Contraction_hierarchies).
  * [Low level API](./core/low-level-api.md): Instructions how to use GraphHopper as a Java library.
  * [Create new FlagEncoder](./core/create-new-flagencoder.md): Documentation to create new routing profiles to influence which ways to favor and how the track-time is calculated.
  * [Spatial Rules](./core/spatial-rules.md): Instruction on how to use and create new SpatialRules. SpatialRules are used to enforce country-specific routing rules.
+ * [Postgis query script](../core/files/postgis)
+
+#### Other links
+
+ * [Add GraphHopper Maps to your Browser](./web/open-search.md): Instructions how to setup GraphHopper as the standard search enginge in your browser.
+ * [Embed GraphHopper on your website](https://github.com/karussell/graphhopper-embed-form): A small code snippet on how to integrate GraphHopper Maps in your web site like a contact form
 
-### Android
+#### Android
 
  * [Android](./android/index.md): Instructions how to setup the demo project for GraphHopper on Android
  * [Android Studio Setup](./android/android-studio-setup.md)
 
-### iOS
+#### iOS
 
 Instructions on how to setup the GraphHopper-iOS clone for iOS development are [here](https://github.com/graphhopper/graphhopper-ios/)
 including a sample application.
 
-### Windows
+#### Windows
 
 Documentation about how to get an GraphHopper instance running on windows via cygwin is available [here](./core/windows-setup.md).
 
-### Eclipse
+#### Eclipse
 
-Setup in IntelliJ and NetBeans is just via open project. See[this document](./core/eclipse-setup.md) 
+Setup in IntelliJ and NetBeans is just via open project. See [this document](./core/eclipse-setup.md) 
 to set up GraphHopper in Eclipse with maven.
diff --git a/graphhopper.sh b/graphhopper.sh
index ac517e6619..d751ee5193 100755
--- a/graphhopper.sh
+++ b/graphhopper.sh
@@ -111,17 +111,10 @@ function execMvn {
 }
 
 function packageCoreJar {
-  if [ ! -d "./target" ]; then
-    echo "## building parent"
-    execMvn --non-recursive install
-  fi
-  
   if [ ! -f "$JAR" ]; then
     echo "## building graphhopper jar: $JAR"
     echo "## using maven at $MAVEN_HOME"
-    
-    execMvn --projects tools,reader-gtfs -am -DskipTests=true install
-    execMvn --projects tools -DskipTests=true install assembly:single
+    execMvn --projects tools -am -DskipTests=true package
   else
     echo "## existing jar found $JAR"
   fi
@@ -145,9 +138,7 @@ elif [ "$ACTION" = "build" ]; then
  exit  
  
 elif [ "$ACTION" = "buildweb" ]; then
- packageCoreJar
- execMvn --projects web -am -DskipTests=true install
- execMvn --projects web -DskipTests=true install assembly:single
+ execMvn --projects web -am -DskipTests=true package
  exit
 
 elif [ "$ACTION" = "extract" ]; then
@@ -158,8 +149,7 @@ elif [ "$ACTION" = "extract" ]; then
  exit
  
 elif [ "$ACTION" = "android" ]; then
- packageCoreJar
- execMvn -P include-android --projects android/app install android:deploy android:run
+ execMvn -P include-android --projects android/app -am package android:deploy android:run
  exit
 fi
 
@@ -225,8 +215,7 @@ if [ "$ACTION" = "ui" ] || [ "$ACTION" = "web" ]; then
   fi
   WEB_JAR="$GH_HOME/web/target/graphhopper-web-$VERSION-with-dep.jar"
   if [ ! -s "$WEB_JAR" ]; then
-    execMvn --projects web -am -DskipTests=true install
-    execMvn --projects web -DskipTests=true install assembly:single
+    execMvn --projects web -am -DskipTests=true package
   fi
 
   RC_BASE=./web/src/main/webapp
@@ -256,7 +245,7 @@ elif [ "$ACTION" = "torture" ]; then
 
 
 elif [ "$ACTION" = "miniui" ]; then
- execMvn --projects tools -DskipTests clean install assembly:single
+ execMvn --projects tools -am -DskipTests clean package
  JAR=tools/target/graphhopper-tools-$VERSION-jar-with-dependencies.jar   
  "$JAVA" $JAVA_OPTS -cp "$JAR" com.graphhopper.ui.MiniGraphUI datareader.file="$OSM_FILE" config=$CONFIG \
               graph.location="$GRAPH"
@@ -272,8 +261,7 @@ elif [ "$ACTION" = "measurement" ]; then
  # IMPORT_TIME=$(($END - $START))
 
  function startMeasurement {
-    execMvn --projects core -DskipTests clean install
-    execMvn --projects tools -DskipTests install assembly:single
+    execMvn --projects tools -am -DskipTests clean package
     COUNT=5000
     commit_info=$(git log -n 1 --pretty=oneline)
     echo -e "\nperform measurement via jar=> $JAR and ARGS=> $ARGS"
diff --git a/tools/pom.xml b/tools/pom.xml
index a67272987b..5e07a6f951 100644
--- a/tools/pom.xml
+++ b/tools/pom.xml
@@ -62,6 +62,15 @@
                         <descriptorRef>jar-with-dependencies</descriptorRef>
                     </descriptorRefs>
                 </configuration>
+                <executions>
+                    <execution>
+                        <id>make-assembly</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>single</goal>
+                        </goals>
+                    </execution>
+                </executions>
             </plugin>
         </plugins>
     </build>
diff --git a/web/pom.xml b/web/pom.xml
index 7927307e4f..c5d3347139 100644
--- a/web/pom.xml
+++ b/web/pom.xml
@@ -153,8 +153,7 @@
                 <executions>
                     <execution>
                         <id>make-assembly</id>
-                        <!-- bind to verify and not package to pass integration tests before creating assemblies -->
-                        <phase>integration-test</phase>
+                        <phase>package</phase>
                         <goals>
                             <goal>single</goal>
                         </goals>
