diff --git a/web/src/main/webapp/js/autocomplete.js b/web/src/main/webapp/js/autocomplete.js
index 66f3ab77d1..659222cc3c 100644
--- a/web/src/main/webapp/js/autocomplete.js
+++ b/web/src/main/webapp/js/autocomplete.js
@@ -1,9 +1,10 @@
 var formatTools = require('./tools/format.js');
+var GHInput = require('./graphhopper/GHInput.js');
 
 var dataToHtml = function (data, query) {
     var element = "";
     if (data.name)
-        element += "<div class='nameseg'>" + formatValue(data.name, query) + "</div>";
+        element += "<div class='nameseg'>" + formatTools.formatValue(data.name, query) + "</div>";
     var addStr = "";
     if (data.postcode)
         addStr = data.postcode;
@@ -13,7 +14,7 @@ var dataToHtml = function (data, query) {
         addStr = formatTools.insComma(addStr, data.country);
 
     if (addStr)
-        element += "<div class='cityseg'>" + formatValue(addStr, query) + "</div>";
+        element += "<div class='cityseg'>" + formatTools.formatValue(addStr, query) + "</div>";
 
     if (data.osm_key === "highway") {
         // ignore
@@ -42,16 +43,46 @@ var dataToText = function (data) {
     return text;
 }
 
-function getAutoCompleteDiv(index) {
+var AutoComplete = function (host, key) {
+    this.host = host;
+    this.key = key;
+    this.dataType = "json";
+};
+
+AutoComplete.prototype.createPath = function (url) {
+    for (var key in this.api_params) {
+        var val = this.api_params[key];
+        if (GHRoute.isArray(val)) {
+            for (var keyIndex in val) {
+                url += "&" + encodeURIComponent(key) + "=" + encodeURIComponent(val[keyIndex]);
+            }
+        } else {
+            url += "&" + encodeURIComponent(key) + "=" + encodeURIComponent(val);
+        }
+    }
+    return url;
+};
+
+AutoComplete.prototype.createGeocodeURL = function (ghRequest, prevIndex) {
+    var path = this.createPath(this.host + "/geocode?limit=6&type=" + this.dataType + "&key=" + this.key);
+    if (prevIndex >= 0 && prevIndex < ghRequest.route.size()) {
+        var point = ghRequest.route.getIndex(prevIndex);
+        path += "&point=" + point.lat + "," + point.lng;
+    }
+    return path;
+};
+
+AutoComplete.prototype.getAutoCompleteDiv = function (index) {
     return $('#locationpoints > div.pointDiv').eq(index).find(".pointInput");
 }
 
-function hideAutoComplete() {
+AutoComplete.prototype.hideAutoComplete = function () {
     $(':input[id$="_Input"]').autocomplete().hide();
 }
 
-function setAutoCompleteList(ghRequest, routeIfAllResolved, host, index) {
-    var myAutoDiv = getAutoCompleteDiv(index);
+AutoComplete.prototype.showListForIndex = function (ghRequest, routeIfAllResolved, index) {
+    var myAutoDiv = this.getAutoCompleteDiv(index);
+    var url = this.createGeocodeURL(ghRequest, index - 1);
 
     var options = {
         containerClass: "autocomplete",
@@ -73,8 +104,7 @@ function setAutoCompleteList(ghRequest, routeIfAllResolved, host, index) {
             return val === undefined;
         },
         serviceUrl: function () {
-            // see https://graphhopper.com/#directions-api
-            return ghRequest.createGeocodeURL(host, index - 1);
+            return url;
         },
         transformResult: function (response, originalQuery) {
             response.suggestions = [];
@@ -123,5 +153,12 @@ function setAutoCompleteList(ghRequest, routeIfAllResolved, host, index) {
 //    });
 }
 
-module.exports.hide = hideAutoComplete;
-module.exports.showListForIndex = setAutoCompleteList;
+AutoComplete.prototype.createStub = function () {
+    return {
+        showListForIndex: function () {},
+        hideAutoComplete: function () {}
+    };
+};
+
+module.exports = AutoComplete;
+
diff --git a/web/src/main/webapp/js/main-template.js b/web/src/main/webapp/js/main-template.js
index 5215205b25..1406341158 100644
--- a/web/src/main/webapp/js/main-template.js
+++ b/web/src/main/webapp/js/main-template.js
@@ -28,16 +28,16 @@ require('./lib/jquery.history.js');
 require('./lib/jquery.autocomplete.js');
 
 var GHRequest = require('./graphhopper/GHRequest.js');
+var AutoComplete = require('./autocomplete.js');
 
-var ghRequest = new GHRequest(host);
-var bounds = {};
-
-var activeLayer = '';
-var metaVersionInfo;
+// To enable autocomplete
+// - Remove the first line
+// - Uncomment the second line and add a valid API token
+var autocomplete = AutoComplete.prototype.createStub();
+// var autocomplete = new AutoComplete('http://graphhopper.com/api/1', 'your api token goes here');
 
 var mapLayer = require('./map.js');
 var nominatim = require('./nominatim.js');
-var autocomplete = require('./autocomplete.js');
 var gpxExport = require('./gpxexport.js');
 var messages = require('./messages.js');
 var translate = require('./translate.js');
@@ -47,6 +47,11 @@ var urlTools = require('./tools/url.js');
 var vehicle = require('./tools/vehicle.js');
 
 var debug = false;
+var ghRequest = new GHRequest(host);
+var bounds = {};
+
+var activeLayer = '';
+var metaVersionInfo;
 
 // usage: log('inside coolFunc',this,arguments);
 // http://paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/
@@ -296,7 +301,7 @@ function checkInput() {
             div.find(".pointDelete").hide();
         }
 
-        autocomplete.showListForIndex(ghRequest, routeIfAllResolved, host, i);
+        autocomplete.showListForIndex(ghRequest, routeIfAllResolved, i);
         if (translate.isI18nIsInitialized()) {
             var input = div.find(".pointInput");
             if (i === 0)
diff --git a/web/src/main/webapp/js/tools/format.js b/web/src/main/webapp/js/tools/format.js
index 24605f4b6a..209d55a8a3 100644
--- a/web/src/main/webapp/js/tools/format.js
+++ b/web/src/main/webapp/js/tools/format.js
@@ -62,3 +62,8 @@ module.exports.formatAddress = function (address) {
 };
 
 module.exports.insComma = insComma;
+
+module.exports.formatValue = function (orig, query) {
+    var pattern = '(' + $.Autocomplete.utils.escapeRegExChars(query) + ')';
+    return orig.replace(/[<>]/g, "_").replace(new RegExp(pattern, 'gi'), '<strong>$1<\/strong>');
+}
diff --git a/web/src/main/webapp/js/translate.js b/web/src/main/webapp/js/translate.js
index 9f8ee6b818..78910ecb9e 100644
--- a/web/src/main/webapp/js/translate.js
+++ b/web/src/main/webapp/js/translate.js
@@ -48,11 +48,6 @@ function stringFormat(str, args) {
     }
 }
 
-function formatValue(orig, query) {
-    var pattern = '(' + $.Autocomplete.utils.escapeRegExChars(query) + ')';
-    return orig.replace(/[<>]/g, "_").replace(new RegExp(pattern, 'gi'), '<strong>$1<\/strong>');
-}
-
 function initI18N() {
     if (global.$) {
         $('#searchButton').attr("value", tr("searchButton"));
