diff --git a/marmoset/src/main/webapp/AnimatedMarker.js b/marmoset/src/main/webapp/AnimatedMarker.js
index 9bc5d1f2a6..3515bbd391 100644
--- a/marmoset/src/main/webapp/AnimatedMarker.js
+++ b/marmoset/src/main/webapp/AnimatedMarker.js
@@ -1,3 +1,20 @@
+function angleFromCoordinate(lat1, long1, lat2, long2) {
+
+  var dLon = (long2 - long1);
+
+  var y = Math.sin(dLon) * Math.cos(lat2);
+  var x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1)
+      * Math.cos(lat2) * Math.cos(dLon);
+
+  var brng = Math.atan2(y, x);
+
+  brng = brng * 180/ Math.PI;
+  brng += 270;
+  brng = (brng + 360) % 360;
+
+  return brng;
+}
+
 L.AnimatedMarker = L.Marker.extend({
   options: {
     // meters
@@ -71,6 +88,27 @@ L.AnimatedMarker = L.Marker.extend({
       if (this._shadow) { this._shadow.style[L.DomUtil.TRANSITION] = 'all ' + speed + 'ms linear'; }
     }
 
+
+
+    // Set the rotation of the marker
+    if (this._icon && this._i == 0) {
+      // gets overwritten by leaflet if done without setTimeout
+      var i = this._i;
+      setTimeout(function () {
+        var s = this._latlngs[i];
+        var d = this._latlngs[i+1];
+        console.log(this._latlngs, this._i, i, s, d);
+        var angle = angleFromCoordinate(s[0], s[1], d[0], d[1]);
+        console.log(angle);
+
+        // hacky way of setting transform property without removing what leaflet does
+        var curStyle = this._icon.style[L.DomUtil.TRANSFORM].split(" ");
+        if (curStyle.length > 3)
+          curStyle.pop();
+        this._icon.style[L.DomUtil.TRANSFORM] = curStyle.join(" ") + " rotate("+ angle +"deg)";
+      }.bind(this), 0);
+    }
+
     // Move to the next vertex
     this.setLatLng(this._latlngs[this._i]);
     this._i++;
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index 05a38252b8..6e9d27f185 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -45,6 +45,7 @@ var carSet = {
             this._cars.forEach(function (c) {
                 c.remove();
             });
+            this._cars = [];
         }
 
         this.ws = new WebSocket("ws://localhost:8888");
@@ -67,25 +68,29 @@ var carSet = {
             if (this._cars[index]) {
                 this._cars[index].moveTo(lat, lon);
             } else {
-                this._cars[index] = new Car(0, lat, lon);
+                this._cars[index] = new Car(index, lat, lon);
             }
         }
     }
-
 };
 
-
-var Car = function(road, lat, lon) {
-    this.road = road;
+var Car = function(id, lat, lon) {
+    this.id = id;
     this.pos = [lat, lon];
 };
 
 Car.prototype = {
+
     moveTo: function(lat, lon) {
         var line = [this.pos, [lat, lon]];
         this.pos = [lat, lon];
         if (this.marker == null) {
-            this.marker = L.animatedMarker(line, {icon: carIcon, distance: 1, interval: 1000});
+            this.marker = L.animatedMarker(line, {
+                icon: carIcon,
+                distance: 1,
+                interval: 1000,
+                title: "ID:" + this.id
+            });
             window.map.addLayer(this.marker);
         } else {
             this.marker.stop();
@@ -96,6 +101,6 @@ Car.prototype = {
 
     remove: function() {
         if (this.marker)
-            this.marker.remove();
+            window.map.removeLayer(this.marker);
     }
 }
\ No newline at end of file
