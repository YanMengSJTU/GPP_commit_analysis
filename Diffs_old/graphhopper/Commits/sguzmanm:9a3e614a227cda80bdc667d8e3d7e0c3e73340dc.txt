diff --git a/android/app/build.gradle b/android/app/build.gradle
index 3fea4f0733..3f371e0765 100644
--- a/android/app/build.gradle
+++ b/android/app/build.gradle
@@ -4,10 +4,15 @@ android {
     compileSdkVersion 25
     buildToolsVersion "25.0.3"
 
+    configurations{
+        all*.exclude group: 'com.vividsolutions', module: 'jts-core'
+    }
+
     defaultConfig {
         applicationId "com.graphhopper.android"
         minSdkVersion 10
         targetSdkVersion 22
+        multiDexEnabled true
     }
 
     buildTypes {
diff --git a/android/app/src/main/java/com/graphhopper/android/MainActivity.java b/android/app/src/main/java/com/graphhopper/android/MainActivity.java
index 1d7235aaed..d93ccccaa2 100644
--- a/android/app/src/main/java/com/graphhopper/android/MainActivity.java
+++ b/android/app/src/main/java/com/graphhopper/android/MainActivity.java
@@ -196,8 +196,18 @@ private void initFiles(String area) {
         downloadingFiles();
     }
 
+    /**
+     * Method created by Sergio. Only called when there is certainty that the File with area name actually exists.
+     * @param area Name of the folder with the map.
+     */
+    private void initializeLocal(String area) {
+        prepareInProgress=true;
+        currentArea=area;
+        loadMap(new File(mapsFolder,currentArea+"-gh"));
+    }
+
     private void chooseAreaFromLocal() {
-        List<String> nameList = new ArrayList<>();
+       List<String> nameList = new ArrayList<>();
         String[] files = mapsFolder.list(new FilenameFilter() {
             @Override
             public boolean accept(File dir, String filename) {
@@ -218,6 +228,9 @@ public void onSelect(String selectedArea, String selectedFile) {
                         initFiles(selectedArea);
                     }
                 });
+        /*final File file=new File(mapsFolder,"colombia-gh");
+        if(file.exists())
+        initializeLocal("colombia");*/
     }
 
     private void chooseAreaFromRemote() {
@@ -226,7 +239,9 @@ private void chooseAreaFromRemote() {
                     throws Exception {
                 String[] lines = new AndroidDownloader().downloadAsString(fileListURL, false).split("\n");
                 List<String> res = new ArrayList<>();
+                Log.d("Remote"," ");
                 for (String str : lines) {
+                    Log.d("Remote",str);
                     int index = str.indexOf("href=\"");
                     if (index >= 0) {
                         index += 6;
@@ -320,6 +335,7 @@ protected Object saveDoInBackground(Void... _ignore)
                     throws Exception {
                 String localFolder = Helper.pruneFileEnd(AndroidHelper.getFileName(downloadURL));
                 localFolder = new File(mapsFolder, localFolder + "-gh").getAbsolutePath();
+                Log.d("URL",downloadURL+ " to "+localFolder);
                 log("downloading & unzipping " + downloadURL + " to " + localFolder);
                 AndroidDownloader downloader = new AndroidDownloader();
                 downloader.setTimeout(30000);
@@ -371,6 +387,12 @@ void loadMap(File areaFolder) {
 
         // Map position
         GeoPoint mapCenter = tileSource.getMapInfo().boundingBox.getCenterPoint();
+        if(currentArea.contains("colombia"))
+        {
+
+            mapView.map().setMapPosition( 4.603025, -74.065663 , 1 << 18);
+        }
+        else
         mapView.map().setMapPosition(mapCenter.getLatitude(), mapCenter.getLongitude(), 1 << 15);
 
         setContentView(mapView);
diff --git a/android/build.gradle b/android/build.gradle
index c237d1abc7..6433c56194 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -4,7 +4,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.2'
+        classpath 'com.android.tools.build:gradle:2.3.3'
     }
 }
 
