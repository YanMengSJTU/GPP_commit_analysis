diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index f748661f3d..b8efd151e0 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -1,4 +1,4 @@
-Feature: Verify a route from A to B
+Feature: Verify a route from A to B for DPN
     As a user
     I want to get a route from location A to location B by Foot using the routing service
     And route should be the fastest route and contain the waypoints,restrictions,time and other instructions
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
index 80b542c967..c9f087a134 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter-Errors.feature
@@ -47,6 +47,25 @@ Feature: Verify Error Messages for Vehicle Routing Service (Exeter)
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
       | car         |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
+  # Parameter :  point
+  @ErrorMessages
+  Scenario Outline: Incorrect Parameter Value "point"
+    Given I have route point as
+      | pointA           | pointB              |
+      | 50.729961,string | 50.723364,-3.523895 |
+    And I have vehicle as "<vehicleType>"
+    And I have weighting as "<routeType>"
+    And I have type as "<responseFormat>"
+    And I have srs as "BNG"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
+      | car         |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
+
+
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
index 5cf180be92..dd78783d2d 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
@@ -150,7 +150,7 @@ Feature: Verify a route from A to B
 
   # No Turns Restrictions 
   # Below test failing as it is going through no turn and and has been reported in jira as [ROUTE-198]
-  @Routing @KnownIssues
+  @Routing 
   Scenario Outline: Verify  No Turn  Restrictions on a Route (Western Way-Exeter)
     Given I have route point as
       | pointA              | pointB              |
diff --git a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
index 3c2800100d..9867335057 100644
--- a/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-PeakDistrict-Errors.feature
@@ -4,7 +4,7 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
 
   #Error Messages
   #Successful request
-  @ErrorMessages @Demo
+  @ErrorMessages 
   Scenario Outline: Successful request with all parameters
     Given I have route <point> as
       | pointA              | pointB              |
@@ -31,7 +31,7 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
       | POinT | VEHiCLE | WEIGHtING | LOCaLE | DEbUG | POINTs_ENCODED | CALc_POINTS | INSTRuCTIONS | ALGOrITHM | TYpE |
 
   # Parameter :  point
-  @ErrorMessages @Demo
+  @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
       | pointA           | pointB              |
@@ -47,6 +47,23 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                 | statusCode |
       | foot        |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in WGS84 projection. | 400        |
 
+  @ErrorMessages
+  Scenario Outline: Incorrect Parameter Value "point"
+    Given I have route point as
+      | pointA           | pointB              |
+      | 50.729961,string | 50.723364,-3.523895 |
+    And I have vehicle as "<vehicleType>"
+    And I have weighting as "<routeType>"
+    And I have type as "<responseFormat>"
+    And I have srs as "BNG"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                               | statusCode |
+      | foot        |            | fastest   | json           | Point 50.729961,string is not a valid point. Point must be a comma separated coordinate in BNG projection. | 400        |
+
   @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
@@ -304,8 +321,8 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | errorMessage                                  | statusCode |
-      | Srs abc is not a valid output_srs for output. | 400        |
+      | errorMessage                           | statusCode |
+      | Srs abc is not a valid srs for output. | 400        |
 
   @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "private "
@@ -390,7 +407,7 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | errorMessage                             | statusCode |
+      | errorMessage                                              | statusCode |
       | Cannot find point 0: 49.766808346389624,-7.55644832086991 | 400        |
 
   @Routing
@@ -406,7 +423,7 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
     Then I should be able to verify the statuscode as "<statusCode>"
 
     Examples: 
-      | errorMessage                       | statusCode |
+      | errorMessage                           | statusCode |
       | Cannot find point 0: 146580.0,282492.0 | 400        |
 
   # Nearest Point : Invalid Parameter Value "point"
@@ -640,11 +657,11 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
       | gpx  |
       | json |
 
-  @ErrorMessages
+  @ErrorMessages 
   Scenario Outline: verify valid parameter values for "SRS "
     Given I have route point as
-      | pointA              | pointB              |
-      | 53.410574,-1.825276 | 53.277655,-1.805662 |
+      | pointA   | pointB   |
+      | <pointA> | <pointB> |
     And I have vehicle as "foot"
     And I have weighting as "fastest"
     And I have locale as "en_US"
@@ -660,9 +677,9 @@ Feature: Verify Error Messages for non-vehicle Routing service (Peak District)
     Then I should be able to verify the http statuscode as "200"
 
     Examples: 
-      | SRS   |
-      | WGS84 |
-      | BNG   |
+      | SRS   | pointA              | pointB              |
+     # | WGS84 | 53.410574,-1.825276 | 53.277655,-1.805662 |
+      | BNG   | 282492,146580      | 270956,145684       |
 
   @ErrorMessages
   Scenario Outline: verify valid parameter values for "output_srs "
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java b/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java
index 05d00b4e2f..a27bc67226 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java
@@ -46,6 +46,7 @@
      * The factory to use to create RoutingElements. eg Itn, Dpn or Hn
      */
     private AbstractRoutingElementFactory<T> abstractFactory;
+	private String dataVersion;
 
     public AbstractOsInputFile(File file, AbstractRoutingElementFactory<T> abstractFactory) throws IOException {
         this(file, abstractFactory, "id");
@@ -66,6 +67,11 @@ public AbstractOsInputFile(File file, AbstractRoutingElementFactory<T> abstractF
     public InputStream getInputStream() {
         return bis;
     }
+    
+    public String getDataVersion()
+    {
+	    return dataVersion;
+    }
 
     public AbstractRoutingElementFactory<T> getAbstractFactory() {
         return abstractFactory;
@@ -156,7 +162,7 @@ private void openXMLStream(InputStream in) throws XMLStreamException {
             throw new IllegalArgumentException(String.format(
                     "File %s not a valid OS ITN stream", name));
         }
-
+        dataVersion = parser.getAttributeValue(null, idKey);
         eof = false;
     }
 
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
index 4cad675955..9f7e99ba85 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
@@ -51,6 +51,9 @@ protected void preProcessSingleFile(File hnFile) throws XMLStreamException, IOEx
             logger.error(PREPROCESS_FORMAT, hnFile.getName());
             in = new OsHnInputFile(hnFile);
             in.setWorkerThreads(workerThreads).open();
+            System.out.println("OsHnReader.preProcessSingleFile(" + in.getDataVersion()
+            		+ ":" + graphStorage + ")");
+            graphStorage.getProperties().put("hn.data_version", in.getDataVersion());
             preProcessSingleFile(in);
         } finally {
             Helper.close(in);
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
index 99932e4d4e..2b7decad5d 100755
--- a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
@@ -275,6 +275,7 @@ protected void preProcessSingleFile( File itnFile ) throws XMLStreamException, I
 			logger.error(PREPROCESS_FORMAT, itnFile.getName());
 			in = new OsItnInputFile(itnFile);
 			in.setWorkerThreads(workerThreads).open();
+			graphStorage.getProperties().put("itn.data_version", in.getDataVersion());
 			preProcessSingleFile(in);
 		} finally
 		{
@@ -818,6 +819,8 @@ protected DataReader createReader( GraphStorage tmpGraph )
 				}.setOSMFile(hnPath).setGraphHopperLocation(hnGraphLocation)
 				.setEncodingManager(encodingManager).setCHEnable(false).setAsHnReader();
 				hnGraphHopper.importOrLoad();
+				String value = hnGraphHopper.getGraph().getProperties().get("hn.data_version");
+				graphStorage.getProperties().put("hn.data_version", value);
 				// OsHnReader hnReader = new OsHnReader(hnGraphHopper.getGraph());
 				logger.error("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<=================================================");
 
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
index 7848998b49..e9f81dc674 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
@@ -12,6 +12,7 @@
 import com.graphhopper.GraphHopper;
 import com.graphhopper.reader.osgb.AbstractOsItnReaderTest;
 import com.graphhopper.storage.GraphStorage;
+import com.graphhopper.storage.StorableProperties;
 import com.graphhopper.util.CmdArgs;
 import com.graphhopper.util.EdgeExplorer;
 import com.graphhopper.util.Instruction;
@@ -77,7 +78,13 @@ public void testMotorwayARoadNetwork_NoHighwaysNetworkData() {
         assertEquals(Instruction.TURN_SLIGHT_RIGHT, instructionList.get(2).getSign());
         assertEquals("END ROAD", instructionList.get(2).getName());
         assertEquals(Instruction.FINISH, instructionList.get(3).getSign());
-
+    }
+    
+    @Test
+    public void testHNVersionInfo() {
+    	GraphHopper graphHopper = readHN();
+    	StorableProperties properties = graphHopper.getGraph().getProperties();
+    	assertEquals("HighwaysNetwork_March2015", properties.get("hn.data_version"));
     }
 
     /**
@@ -89,22 +96,7 @@ public void testMotorwayARoadNetwork_NoHighwaysNetworkData() {
      */
     @Test
     public void testMotorwayARoadNetwork_WithHighwaysNetworkData() {
-        System.out.println("===>>> testMotorwayARoadNetwork_WithHighwaysNetworkData()");
-        String graphLoc = "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/os-itn-hn-test-network-gh";
-        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml";
-
-
-        Map<String, String> args = new HashMap<>();
-        args.put("hn.data", "./src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml");
-        args.put("hn.graph.location", "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/highways_network");
-        args.put("graph.location", graphLoc);
-        args.put("osmreader.osm", inputFile);
-        args.put("config", "../config.properties");
-        CmdArgs commandLineArguments = new CmdArgs(args);
-        commandLineArguments = CmdArgs.readFromConfigAndMerge(commandLineArguments, "config", "graphhopper.config");
-
-        GraphHopper graphHopper = new GraphHopper().setInMemory().setAsItnReader().init(commandLineArguments).setCHEnable(false).setEncodingManager(encodingManager);
-        graphHopper.importOrLoad();
+        GraphHopper graphHopper = readHN();
         GraphStorage graph = graphHopper.getGraph();
 
         //        printNodes(graph.createEdgeExplorer(carOutEdges), 6);
@@ -128,6 +120,27 @@ public void testMotorwayARoadNetwork_WithHighwaysNetworkData() {
 
     }
 
+	private GraphHopper readHN()
+    {
+	    System.out.println("===>>> testMotorwayARoadNetwork_WithHighwaysNetworkData()");
+        String graphLoc = "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/os-itn-hn-test-network-gh";
+        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml";
+
+
+        Map<String, String> args = new HashMap<>();
+        args.put("hn.data", "./src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml");
+        args.put("hn.graph.location", "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/highways_network");
+        args.put("graph.location", graphLoc);
+        args.put("osmreader.osm", inputFile);
+        args.put("config", "../config.properties");
+        CmdArgs commandLineArguments = new CmdArgs(args);
+        commandLineArguments = CmdArgs.readFromConfigAndMerge(commandLineArguments, "config", "graphhopper.config");
+
+        GraphHopper graphHopper = new GraphHopper().setInMemory().setAsItnReader().init(commandLineArguments).setCHEnable(false).setEncodingManager(encodingManager);
+        graphHopper.importOrLoad();
+	    return graphHopper;
+    }
+
     private void testNodes(GraphStorage graph) {
         testNodes(graph, graph.createEdgeExplorer(carOutEdges));
     }
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
index d2d5af1a39..08bc726cb8 100755
--- a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
@@ -20,6 +20,8 @@
 import static com.graphhopper.util.GHUtility.count;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
 
 import java.io.File;
@@ -52,7 +54,19 @@
 public class OsItnReaderTest extends AbstractOsItnReaderTest {
 
     private static final Logger logger = LoggerFactory.getLogger(OsItnReaderTest.class);
-    private static final InputStream COMPLEX_ITN_EXAMPLE = OsItnReader.class.getResourceAsStream("os-itn-sample.xml");
+    
+    @Test
+    public void testReadVersionInfo() throws IOException {
+        final boolean turnRestrictionsImport = true;
+        final boolean is3D = false;
+        final GraphHopperStorage graph = configureStorage(turnRestrictionsImport, is3D);
+
+        final File file = new File("./src/test/resources/com/graphhopper/reader/os-itn-no-entry-multipoint-crossroad.xml");
+        readGraphFile(graph, file);
+        
+        assertNotNull(graph.getProperties().get("itn.data_version"));
+        assertEquals("GDS-58096-1", graph.getProperties().get("itn.data_version"));
+    }
 
     @Test
     public void testReadItnNoEntryMultipointCrossroad() throws IOException {
diff --git a/tools/Import.launch b/tools/Import.launch
new file mode 100644
index 0000000000..81d5349418
--- /dev/null
+++ b/tools/Import.launch
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/graphhopper-tools/src/main/java/com/graphhopper/tools/Import.java"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.jdt.launching.ATTR_USE_START_ON_FIRST_THREAD" value="true"/>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.m2e.launchconfig.classpathProvider"/>
+<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="com.graphhopper.tools.Import"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="osmreader.osm=&quot;${file_prompt}&quot; reader.implementation=OS${string_prompt:Dataset:ITN} graph.flagEncoders=${string_prompt:Encoders:oscar} prepare.chWeighting=none"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="graphhopper-tools"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.m2e.launchconfig.sourcepathProvider"/>
+</launchConfiguration>
diff --git a/tools/src/main/java/com/graphhopper/tools/Import.java b/tools/src/main/java/com/graphhopper/tools/Import.java
index 1627869017..b32bb1e906 100644
--- a/tools/src/main/java/com/graphhopper/tools/Import.java
+++ b/tools/src/main/java/com/graphhopper/tools/Import.java
@@ -1,7 +1,9 @@
 package com.graphhopper.tools;
 
 import com.graphhopper.GraphHopper;
+import com.graphhopper.storage.StorableProperties;
 import com.graphhopper.util.CmdArgs;
+import com.graphhopper.util.Constants;
 
 /**
  * @author Peter Karich
@@ -13,6 +15,11 @@ public static void main( String[] strs ) throws Exception
         CmdArgs args = CmdArgs.read(strs);
         GraphHopper hopper = new GraphHopper().init(args);
         hopper.importOrLoad();
+        StorableProperties properties = hopper.getGraph().getProperties();
+		properties.put("import_version", Constants.VERSION);
+        String versionType = (Constants.SNAPSHOT) ? "!! NON-PRODUCTION RELEASE !!" : "Production";
+        properties.put("import_version.type", versionType);
+        hopper.getGraph().flush();
         hopper.close();
     }
 }
diff --git a/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java b/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java
index de859e1b89..3488bfdf28 100644
--- a/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java
+++ b/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java
@@ -250,7 +250,7 @@ private TLongArrayList populateFidList() {
 
         private boolean isEndBlock(final String curLine) {
             boolean endBlock = false;
-            switch (curLine) {
+            switch (curLine.trim()) {
             case "</osgb:networkMember>":
             case "</osgb:roadInformationMember>":
             case "</osgb:roadMember>": {
diff --git a/web/src/main/java/com/graphhopper/http/InfoServlet.java b/web/src/main/java/com/graphhopper/http/InfoServlet.java
index 04f28d1601..0501486e21 100644
--- a/web/src/main/java/com/graphhopper/http/InfoServlet.java
+++ b/web/src/main/java/com/graphhopper/http/InfoServlet.java
@@ -68,18 +68,33 @@ public void doGet( HttpServletRequest req, HttpServletResponse res ) throws Serv
         json.put("features", features);
 
         json.put("version", Constants.VERSION);
+        String versionType = (Constants.SNAPSHOT) ? "!! NON-PRODUCTION RELEASE !!" : "Production";
+        json.put("version.type", versionType);
+        
+        
         json.put("build_date", Constants.BUILD_DATE);
 
         StorableProperties props = hopper.getGraph().getProperties();
-        json.put("import_date", props.get("osmreader.import.date"));
-
-        if (!Helper.isEmpty(props.get("prepare.date")))
-            json.put("prepare_date", props.get("prepare.date"));
-        
-        //build information
-//        Manifests.append(req.getServletContext());
-//        json.put("release-version", Manifests.read("release-version"));
+        addIfSet(json, props, "osmreader.import.date", "import_date");
+        addIfSet(json, props, "prepare.date");
+        addIfSet(json, props, "itn.data_version");
+        addIfSet(json, props, "hn.data_version");
+        addIfSet(json, props, "dpn.data_version");
+        addIfSet(json, props, "import_version");
+        addIfSet(json, props, "import_version.type");
 
         writeJson(req, res, json);
     }
+
+	private void addIfSet(JSONObject json, StorableProperties props,
+			String propertyName) {
+		addIfSet(json, props, propertyName, propertyName);
+	}
+
+	private void addIfSet(JSONObject json, StorableProperties props, String propertyName, String outputName) {
+		String value = props.get(propertyName);
+		if(!Helper.isEmpty(value)) {
+			json.put(outputName, value);
+		}
+	}
 }
