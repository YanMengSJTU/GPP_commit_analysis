diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/BywayOpenToAllTraffic.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/BywayOpenToAllTraffic.java
new file mode 100644
index 0000000000..7592470a86
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/BywayOpenToAllTraffic.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn;
+
+import com.graphhopper.reader.Way;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class BywayOpenToAllTraffic extends AbstractOsDpnOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way) {
+        way.setTag("designation", "byway_open_to_all_traffic");
+        way.setTag("highway", "track");
+    }
+
+}
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/dpn/Footpath.java b/core/src/main/java/com/graphhopper/reader/osgb/dpn/Footpath.java
new file mode 100644
index 0000000000..ec2d3bf126
--- /dev/null
+++ b/core/src/main/java/com/graphhopper/reader/osgb/dpn/Footpath.java
@@ -0,0 +1,16 @@
+package com.graphhopper.reader.osgb.dpn;
+
+import com.graphhopper.reader.Way;
+
+/**
+ * Created by sadam on 13/02/15.
+ */
+public class Footpath extends AbstractOsDpnOsmAttibuteMappingVisitor {
+
+    @Override
+    protected void applyAttributes(Way way)
+    {
+        way.setTag("designation", "public_footpath");
+    }
+
+}
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/BridleWayTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/BridleWayTest.java
index 29096c090e..7f30e3c4e8 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/dpn/BridleWayTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/BridleWayTest.java
@@ -25,7 +25,7 @@ public void init() {
     }
 
     @Test
-    public void testAddDesignation() {
+    public void testVisitWayAttribute() {
         visitor.visitWayAttribute("BridleWay", way);
         verify(way).setTag("designation", "public_bridleway");
     }
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/BywayOpenToAllTrafficTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/BywayOpenToAllTrafficTest.java
new file mode 100644
index 0000000000..2657721e0c
--- /dev/null
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/BywayOpenToAllTrafficTest.java
@@ -0,0 +1,35 @@
+package com.graphhopper.reader.osgb.dpn;
+
+import com.graphhopper.reader.Way;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.mockito.Mock;
+import org.mockito.MockitoAnnotations;
+
+import static org.junit.Assert.*;
+import static org.mockito.Mockito.verify;
+
+public class BywayOpenToAllTrafficTest {
+
+    static OsDpnOsmAttributeMappingVisitor visitor;
+    @Mock
+    Way way;
+
+    @BeforeClass
+    public static void createVisitor() {
+        visitor = new BywayOpenToAllTraffic();
+    }
+
+    @Before
+    public void init() {
+        MockitoAnnotations.initMocks(this);
+    }
+
+    @Test
+    public void testVisitWayAttribute() throws Exception {
+        visitor.visitWayAttribute("Byway Open To All Traffic", way);
+        verify(way).setTag("designation", "byway_open_to_all_traffic");
+        verify(way).setTag("highway", "track");
+    }
+}
\ No newline at end of file
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/dpn/FootpathTest.java b/core/src/test/java/com/graphhopper/reader/osgb/dpn/FootpathTest.java
new file mode 100644
index 0000000000..18661c96ca
--- /dev/null
+++ b/core/src/test/java/com/graphhopper/reader/osgb/dpn/FootpathTest.java
@@ -0,0 +1,33 @@
+package com.graphhopper.reader.osgb.dpn;
+
+import com.graphhopper.reader.Way;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.mockito.Mock;
+import org.mockito.MockitoAnnotations;
+
+import static org.mockito.Mockito.verify;
+
+public class FootpathTest {
+    static OsDpnOsmAttributeMappingVisitor visitor;
+    @Mock
+    Way way;
+
+    @BeforeClass
+    public static void createVisitor() {
+        visitor = new Footpath();
+    }
+
+    @Before
+    public void init() {
+        MockitoAnnotations.initMocks(this);
+    }
+
+    @Test
+    public void testVisitWayAttribute() {
+        visitor.visitWayAttribute("Footpath", way);
+        verify(way).setTag("designation", "public_footpath");
+    }
+
+}
\ No newline at end of file
