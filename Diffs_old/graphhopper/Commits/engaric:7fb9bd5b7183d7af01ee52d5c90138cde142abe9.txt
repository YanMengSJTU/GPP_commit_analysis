diff --git a/core/pom.xml b/core/pom.xml
index 2352ea9506..9bc4ceeccc 100644
--- a/core/pom.xml
+++ b/core/pom.xml
@@ -61,12 +61,6 @@
         </dependency>
         -->
         
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-            <scope>test</scope>
-        </dependency>
         <dependency>
             <groupId>log4j</groupId>
             <artifactId>log4j</artifactId>
diff --git a/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java b/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java
index 4bc60f4006..51f34582c6 100644
--- a/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java
+++ b/core/src/main/java/com/graphhopper/routing/util/OsAvoidanceDecorator.java
@@ -76,21 +76,21 @@ public boolean isValidForWay(Way way) {
 				return hasTag(way, "natural", "shingle");
 			}
 		}
-		// ,
-		// Spoil(1024) {
-		// @Override
-		// public boolean isValidForWay(Way way) {
-		// return hasTag(way, "natural", "spoil");
-		// }
-		// },
-		//
-		// TidalWater(2048) {
-		// @Override
-		// public boolean isValidForWay(Way way) {
-		// return hasTag(way, "natural", "water")
-		// && way.hasTag("tidal", "yes");
-		// }
-		// }
+		 ,
+		 Spoil(2048) {
+		 @Override
+		 public boolean isValidForWay(Way way) {
+		 return hasTag(way, "natural", "spoil");
+		 }
+		 },
+		
+		 TidalWater(4096) {
+		 @Override
+		 public boolean isValidForWay(Way way) {
+		 return hasTag(way, "natural", "water")
+		 && way.hasTag("tidal", "yes");
+		 }
+		 }
 		;
 
 		public String toString() {
@@ -136,7 +136,7 @@ public boolean representedIn(String[] attributes) {
 	}
 
 	protected void defineEncoder(int shift) {
-		wayTypeEncoder = new EncodedValue("HazardType", shift, 12, 1, 0, 2048,
+		wayTypeEncoder = new EncodedValue("HazardType", shift, 14, 1, 0, 8191,
 				true);
 	}
 
