diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
index 507ba48465..5243d9916f 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
@@ -14,6 +14,7 @@
 
     private static MarmosetHopper mh;
     private static MarmosetSocketServer mss;
+    private static boolean isRunning = false;
 
     public static void main(String[] args) throws IOException, InterruptedException
     {
@@ -22,12 +23,36 @@ public static void main(String[] args) throws IOException, InterruptedException
 
         startFileServer();
         startWebSocketServer();
+    }
 
-        while (true) {
-            mh.timestep();
-            String data = mh.getVehicleData();
-            mss.distributeData(data);
-            Thread.sleep(1000);
+    public static void run()
+    {
+        if (!isRunning)
+        {
+            isRunning = true;
+            new Thread() {
+                @Override
+                public void run()
+                {
+                    int i = 0;
+                    while (true)
+                    {
+                        System.out.println("Running iteration " + i);
+                        i++;
+                        mh.timestep();
+                        String data = mh.getVehicleData();
+                        mss.distributeData(data);
+                        try
+                        {
+                            Thread.sleep(1000);
+                        }
+                        catch (InterruptedException e)
+                        {
+                            e.printStackTrace();
+                        }
+                    }
+                }
+            }.start();
         }
     }
 
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
index c4aa53a493..7ca1c2dc5f 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
@@ -1,6 +1,7 @@
 package com.graphhopper.marmoset;
 
 import com.graphhopper.GraphHopper;
+import com.graphhopper.marmoset.util.Location;
 import com.graphhopper.util.CmdArgs;
 
 import java.io.IOException;
@@ -35,7 +36,8 @@ public void init()
 
         args.put("osmreader.osm", "british-isles-latest.osm.pbf");
         hopper.init(args);
-        vehicles.add(new VehicleController(new Vehicle(0, 51.505, -0.09)));
+        hopper.importOrLoad();
+        vehicles.add(new VehicleController(hopper, new Vehicle(0, 51.505, -0.09), new Location(51.48, -0.10)));
     }
 
     public void timestep() {
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
index 1f610583c4..91dcd2e029 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
@@ -43,9 +43,12 @@ public void onClose(WebSocket webSocket, int i, String s, boolean b)
 
     @Override
     public void onMessage(WebSocket webSocket, String s)
-                                                    {
-                                                       System.out.println("Message:" + s);
-                                                                                          }
+    {
+        if (s.equals("run"))
+        {
+            Marmoset.run();
+        }
+    }
 
     @Override
     public void onError(WebSocket webSocket, Exception e)
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
index b641ed3c94..5517b489d1 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
@@ -1,5 +1,7 @@
 package com.graphhopper.marmoset;
 
+import com.graphhopper.marmoset.util.Location;
+
 /**
  * Created by alexander on 16/02/2016.
  */
@@ -8,14 +10,12 @@
     private static int maxId = 0;
 
     private long currentRoadId; // OSM ID of the current road
-    private double lat;
-    private double lon;
+    private Location loc;
     public final int id;
 
     public Vehicle(long startRoadId, double lat, double lon)
     {
-        this.lat = lat;
-        this.lon = lon;
+        this.loc = new Location(lat, lon);
         this.id = maxId++;
         this.currentRoadId = startRoadId;
     }
@@ -25,26 +25,25 @@ public long getCurrentRoadId()
         return currentRoadId;
     }
 
-    public double getLat()
-    {
-        return lat;
-    }
-
-    public double getLon()
+    public Location getLocation()
     {
-        return lon;
+        return loc;
     }
 
     @Override
     public String toString()
     {
-        return String.format("%d|%f|%f", id, getLat(), getLon());
+        return String.valueOf(id) + "|" + loc.toString();
     }
 
     public void moveTo(long newRoad, double newLat, double newLon)
     {
         currentRoadId = newRoad;
-        lat = newLat;
-        lon = newLon;
+        loc.set(newLat, newLon);
+    }
+
+    public void moveBy(double latDiff, double lonDiff)
+    {
+        loc.add(latDiff, lonDiff);
     }
 }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java b/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
index 2bda5efd19..5f7155a3ac 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
@@ -1,14 +1,25 @@
 package com.graphhopper.marmoset;
 
+import com.graphhopper.GHRequest;
+import com.graphhopper.GraphHopper;
+import com.graphhopper.PathWrapper;
+import com.graphhopper.marmoset.util.Location;
+import com.graphhopper.util.InstructionList;
+import com.graphhopper.util.PointList;
+
 /**
  * Created by alexander on 16/02/2016.
  */
 public class VehicleController {
     private Vehicle vehicle;
+    private GraphHopper hopper;
+    private Location dest;
 
-    public VehicleController(Vehicle vehicle)
+    public VehicleController(GraphHopper hopper, Vehicle vehicle, Location dest)
     {
+        this.hopper = hopper;
         this.vehicle = vehicle;
+        this.dest = dest;
     }
 
     public Vehicle getVehicle()
@@ -16,7 +27,17 @@ public Vehicle getVehicle()
         return vehicle;
     }
 
-    public void calculateStep() {
-        vehicle.moveTo(0, vehicle.getLat() + 0.001, vehicle.getLon() + 0.001);
+    public void calculateStep()
+    {
+        GHRequest r = new GHRequest(vehicle.getLocation().getLat(), vehicle.getLocation().getLon(),
+                dest.getLat(), dest.getLon());
+        PathWrapper route = hopper.route(r).getBest();
+
+        PointList path = route.getPoints();
+        InstructionList il = route.getInstructions();
+
+        System.out.println(path.toString());
+        System.out.println(il.toString());
+        vehicle.moveTo(0, path.getLat(2), path.getLon(2));
     }
 }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/util/Location.java b/marmoset/src/main/java/com/graphhopper/marmoset/util/Location.java
new file mode 100644
index 0000000000..c41ee526df
--- /dev/null
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/util/Location.java
@@ -0,0 +1,42 @@
+package com.graphhopper.marmoset.util;
+
+/**
+ * Created by alexander on 23/02/2016.
+ */
+public class Location {
+    private double lat;
+    private double lon;
+
+    public Location(double lat, double lon)
+    {
+        this.set(lat, lon);
+    }
+
+    public void add(double lat, double lon)
+    {
+        this.lat += lat;
+        this.lon += lon;
+    }
+
+    public void set(double lat, double lon)
+    {
+        this.lat = lat;
+        this.lon = lon;
+    }
+
+    public double getLat()
+    {
+        return lat;
+    }
+
+    public double getLon()
+    {
+        return lon;
+    }
+
+    @Override
+    public String toString()
+    {
+        return String.format("%f.10|%f.10", lat, lon);
+    }
+}
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index 076cb32a90..b62ea51c55 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -32,7 +32,9 @@ var carSet = {
         this.ws.onmessage = function (e) {
             this.processData(e.data);
         }.bind(this);
-
+        this.ws.onopen = function(e) {
+            e.target.send("run");
+        };
     },
 
     // deals with the set of data that comes from the websocket
@@ -62,6 +64,7 @@ var Car = function(road, lat, lon) {
 Car.prototype = {
     moveTo: function(lat, lon) {
         var line = [this.pos, [lat, lon]];
+        console.log(line);
         this.pos = [lat, lon];
         if (this.marker == null) {
             this.marker = L.animatedMarker(line, {icon: carIcon, distance: 1, interval: 1000});
