diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java
index 670c37e25b..e234cce5ec 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXUtil.java
@@ -54,6 +54,10 @@ public boolean isWayPointOnTrack(Waypoint aWayPoint, Track aTrack) {
 
 		}
 
+		if(!isWayPointOnTrack)
+		{
+			LOG.info("Track Point not found on the GPX track");
+		}
 		return isWayPointOnTrack;
 	}
 
@@ -83,12 +87,15 @@ public boolean isWayPointOnGPXRoutes(Waypoint wp) {
 
 		for (Route route : getRoutes()) {
 			isWayPointOnRoute = isWayPointOnRoute(wp, route);
-
+			
 			if (isWayPointOnRoute(wp, route)) {
 				break;
 			}
 
 		}
+		if(!isWayPointOnRoute){
+			LOG.info("Way Point not found on the GPX route");
+		}
 		return isWayPointOnRoute;
 	}
 
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
index 17c0b9133c..1472aa1039 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONUtil.java
@@ -30,6 +30,11 @@ public boolean isWayPointinpath(Waypoint w) {
 			}
 
 		}
+		
+		if(!iswaypointinPath)
+		{
+			LOG.info("Way point not found in the JSON Route");
+		}
 
 		return iswaypointinPath;
 
@@ -42,13 +47,18 @@ public boolean isWayPointinPath(Waypoint we, HashSet<Waypoint> wa) {
 
 			if (new RouteWayPoint(we).equals(new RouteWayPoint(waypoint))) {
 				iswaypointinPath = true;
-				LOG.info("WayPoint " + we + " Found In a Path");
+				LOG.info("WayPoint " + we + " Found In a JSON Route");
 			}
 			if (iswaypointinPath) {
 				break;
 			}
 		}
 
+		
+		if(!iswaypointinPath)
+		{
+			LOG.info("Way point not found in the JSON Route");
+		}
 		return iswaypointinPath;
 	}
 
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperXMLUnitParserRouteTest.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperXMLUnitParserRouteTest.java
deleted file mode 100644
index d697a34e39..0000000000
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperXMLUnitParserRouteTest.java
+++ /dev/null
@@ -1,47 +0,0 @@
-package uk.co.ordnancesurvey.gpx.graphhopper;
-
-import java.io.FileInputStream;
-import java.io.IOException;
-
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
-import javax.xml.parsers.ParserConfigurationException;
-
-import org.custommonkey.xmlunit.XMLTestCase;
-import org.custommonkey.xmlunit.XMLUnit;
-import org.xml.sax.SAXException;
-
-public class GraphHopperXMLUnitParserRouteTest extends XMLTestCase {
-
-	private DocumentBuilder builder;
-	
-
-	public GraphHopperXMLUnitParserRouteTest(String gpxFileName) {
-		try {
-			init(gpxFileName);
-		} catch (ParserConfigurationException e) {
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-		} catch (SAXException e) {
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-		} catch (IOException e) {
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-		}
-	}
-
-	private void init(String gpxFileName)throws ParserConfigurationException, SAXException, IOException {
-		XMLUnit.setControlParser("org.apache.xerces.jaxp.DocumentBuilderFactoryImpl");
-		// this next line is strictly not required - if no test parser is
-		// explicitly specified then the same factory class will be used for
-		// both test and control
-		XMLUnit.setTestParser("org.apache.xerces.jaxp.DocumentBuilderFactoryImpl");
-
-		XMLUnit.setSAXParserFactory("org.apache.xerces.jaxp.SAXParserFactoryImpl");
-		XMLUnit.setTransformerFactory("org.apache.xalan.processor.TransformerFactoryImpl");
-		builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
-		String path = getClass().getResource("sampleGraphHopper.gpx").getPath();
-		builder.parse(new FileInputStream(gpxFileName));
-	}
-}
