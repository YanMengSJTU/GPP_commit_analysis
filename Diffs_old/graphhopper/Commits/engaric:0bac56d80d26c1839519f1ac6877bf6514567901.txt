diff --git a/DockerArchive/GraphHopper/Dockerfile b/DockerArchive/GraphHopper/Dockerfile
new file mode 100644
index 0000000000..24bea9847a
--- /dev/null
+++ b/DockerArchive/GraphHopper/Dockerfile
@@ -0,0 +1,46 @@
+# Builds a graphhopper instance on centos baseline with java-7
+FROM centos:latest
+MAINTAINER Ordnance Survey WS-PIP
+
+RUN ["yum","-y", "install", "java-1.7.0-openjdk.x86_64"]
+
+ADD apache-tomcat-8.0.20.tar.gz /usr/
+
+RUN ["ln","-s","/usr/apache-tomcat-8.0.20", "/usr/tomcat"]
+EXPOSE 8000
+EXPOSE 8080
+EXPOSE 5701
+
+RUN echo "AWS_ACCESS_KEY_ID=***REMOVED***" >> /usr/tomcat/conf/catalina.properties
+RUN echo "AWS_SECRET_KEY=***REMOVED***" >> /usr/tomcat/conf/catalina.properties
+RUN echo "CONFIG_BUCKET=os-gs-eb" >> /usr/tomcat/conf/catalina.properties
+RUN echo "KEYSTORE_CONFIG=api.conf" >> /usr/tomcat/conf/catalina.properties
+RUN echo "KEY_PASS=addressapi" >> /usr/tomcat/conf/catalina.properties
+RUN echo "OS_PLACES_KEY=***REMOVED***" >> /usr/tomcat/conf/catalina.properties
+RUN echo "ROUTING_ARCHIVE=DPN.LATEST.tar.bz2" >> /usr/tomcat/conf/catalina.properties
+RUN echo "ROUTING_CONFIG=dpn-config.properties" >> /usr/tomcat/conf/catalina.properties
+RUN echo "TRUST_PASS=addressapi" >> /usr/tomcat/conf/catalina.properties
+RUN echo "WEBAPP_DIR=/var/lib/tomcat7/webapps/graphhopper-web-0.4-SNAPSHOT-t7mp" >> /usr/tomcat/conf/catalina.properties
+RUN echo "graphhopper.config=/config.properties" >> /usr/tomcat/conf/catalina.properties
+RUN echo "graphhopper.graph.location=/graphhopper-gh" >> /usr/tomcat/conf/catalina.properties
+RUN echo "graphhopper_graph_location=/graphhopper-gh" >> /usr/tomcat/conf/catalina.properties
+
+RUN echo "graph.location=/graphhopper-gh" >> /usr/tomcat/conf/catalina.properties
+
+RUN ["rm -rf /usr/tomcat/webapps/ROOT/*"]
+
+ADD graphhopper-web/ /usr/tomcat/webapps/ROOT/
+RUN ["sed -i 's/OS_PLACES_KEY/***REMOVED***/g' /usr/tomcat/webapps/ROOT/js/search.js"]
+ADD config.properties /config.properties
+
+ADD graphhopper-gh/ /graphhopper-gh/
+
+RUN ["ls -lat /usr/tomcat/webapps/ROOT"]
+
+#expose debug port and start tomcat with jpda debug enabled
+ENV JPDA_ADDRESS 8000
+ENV JPDA_TRANSPORT dt_socket
+CMD /usr/tomcat/bin/catalina.sh jpda start && tail -F /usr/tomcat/logs/catalina.out
+
+
+
diff --git a/DockerArchive/GraphHopper/apache-tomcat-8.0.20.tar.gz b/DockerArchive/GraphHopper/apache-tomcat-8.0.20.tar.gz
new file mode 100644
index 0000000000..109a031f60
Binary files /dev/null and b/DockerArchive/GraphHopper/apache-tomcat-8.0.20.tar.gz differ
diff --git a/DockerArchive/GraphHopper/build-and-start-dockers.sh b/DockerArchive/GraphHopper/build-and-start-dockers.sh
new file mode 100755
index 0000000000..72eba567e0
--- /dev/null
+++ b/DockerArchive/GraphHopper/build-and-start-dockers.sh
@@ -0,0 +1,24 @@
+#rm ./graphhopper-web-*.war
+#cp ../../web/target/graphhopper-web-*.war .
+
+rm -rf graphhopper-web
+mkdir graphhopper-web
+#jar xvf ../../web/target/graphhopper-web-*.war -C graphhopper-web/
+unzip -p ../../web/target/graphhopper-web-*.war -d graphhopper-web/
+
+cp ../../config.properties .
+
+rm -rf graphhopper-gh/
+#cp -r /home/phopkins/Documents/graphhopper/core/58096-SX9192-modified-gh/ graphhopper-gh/
+cp -r /data/Development/graphhopper/core/target/output/os-itn-hn-test-network-gh/ graphhopper-gh/
+
+sudo docker build -t="wspip/graphhopper:v1" .
+sudo docker stop graphhopper-web
+sudo docker rm graphhopper-web
+
+
+#port forward port 8000 (tomcat debug port) to port 8000 for master, 8001 for slave1, 8002 for slave2
+sudo docker run -p 80:8080 -p 8000:8000 --name="graphhopper-web" -d wspip/graphhopper:v1
+
+gnome-terminal --geometry 240x60+0+0 --title "GraphHopper: 80" -e "sudo docker start -a graphhopper-web"
+
diff --git a/core/itngen_plus_hn.sh b/core/itngen_plus_hn.sh
new file mode 100755
index 0000000000..55b03ab491
--- /dev/null
+++ b/core/itngen_plus_hn.sh
@@ -0,0 +1,41 @@
+STARTTIME=$(date +%s)
+
+LOGIT=
+#LOGIT=:${HOME}/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar:${HOME}/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar
+
+# Highways Network Data
+#ITNDATA=/data/Development/highways_network
+#GRAPHOUTPUTDIR=${HOME}/Documents/graphhopper/core/hn-gh
+
+HN_DATA=/data/Development/highways_network_full/
+HN_GRAPH_LOCATION=${HOME}/Documents/graphhopper/core/hn-gh
+
+# Actual ITN Data
+#ITNDATA=${HOME}/Development/OSMMITN/data
+#GRAPHOUTPUTDIR=${HOME}/Documents/graphhopper/core/itn-gh
+
+# Sample Data
+#ITNDATA=${HOME}/Development/geoserver-service-test/geoservertest/itn-sample-data/58096-SX9192-2c1.gz
+#GRAPHOUTPUTDIR=${HOME}/Documents/graphhopper/core/58096-SX9192-2c1-gh
+
+# Modified Sample Data
+ITNDATA=/media/sf_/media/shared/modified-exeter/58096-SX9192-modified.xml
+GRAPHOUTPUTDIR=${HOME}/Documents/graphhopper/core/58096-SX9192-modified-gh
+
+#ITNDATA=${HOME}/Development/graphhopper2/graphhopper/tools/os-itn-m27-m3-north.xml
+#GRAPHOUTPUTDIR=${HOME}/Documents/graphhopper/core/os-itn-m27-m3-north-gh
+
+#ITNDATA=${HOME}/Development/graphhopper2/graphhopper/core/os-itn-carlisle-warwick-road.xml
+#GRAPHOUTPUTDIR=${HOME}/Documents/graphhopper/core/os-itn-carlisle-warwick-road-gh
+
+#ITNDATA=${HOME}/Development/graphhopper2/graphhopper/tools/os-itn-wickham-direction-error.xml
+#GRAPHOUTPUTDIR=${HOME}/Documents/graphhopper/core/os-itn-wickham-direction-error-gh
+
+echo "Remove " ${GRAPHOUTPUTDIR} 
+rm -rf ${GRAPHOUTPUTDIR} 
+rm -rf ${HN_GRAPH_LOCATION} 
+
+java -Xmx4596m -Xms2048m -XX:+UseParallelGC -XX:+UseParallelOldGC -cp ../tools/target/classes:target/classes:${HOME}/.m2/repository/net/java/dev/jsr-275/jsr-275/1.0-beta-2/jsr-275-1.0-beta-2.jar:${HOME}/.m2/repository/java3d/vecmath/1.3.2/vecmath-1.3.2.jar:${HOME}/.m2/repository/org/geotools/gt-opengis/12.1/gt-opengis-12.1.jar:${HOME}/.m2/repository/org/geotools/gt-epsg-hsql/12.1/gt-epsg-hsql-12.1.jar:${HOME}/.m2/repository/org/hsqldb/hsqldb/2.3.2/hsqldb-2.3.2.jar:${HOME}/.m2/repository/javax/media/jai_core/1.1.3/jai_core-1.1.3.jar:${HOME}/.m2/repository/org/geotools/gt-referencing/12.1/gt-referencing-12.1.jar:${HOME}/.m2/repository/org/geotools/gt-metadata/12.1/gt-metadata-12.1.jar:${HOME}/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar:${HOME}/.m2/repository/net/sf/trove4j/trove4j/3.0.3/trove4j-3.0.3.jar${LOGIT} com.graphhopper.tools.Import osmreader.osm=${ITNDATA} reader.implementation=OSITN graph.location=${GRAPHOUTPUTDIR} hn.data=${HN_DATA} hn.graph.location=${HN_GRAPH_LOCATION} graph.flagEncoders="car|turnCosts=true" prepare.chWeighting=none osmreader.acceptWay=car config=../config.properties
+
+ENDTIME=$(date +%s)
+echo "Generation took $[$ENDTIME - $STARTTIME] seconds"
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
index 93f7ecf1bf..39cac91a80 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnReader.java
@@ -1,6 +1,8 @@
 package com.graphhopper.reader.osgb.hn;
 
 
+import gnu.trove.map.TLongObjectMap;
+
 import java.io.File;
 import java.io.IOException;
 
@@ -22,8 +24,14 @@
 
     private static final Logger logger = LoggerFactory.getLogger(OsHnReader.class.getName());
 
+    private TLongObjectMap<String> edgeEnvironmentMap;
+
     public OsHnReader(GraphStorage storage) {
+        this(storage, null);
+    }
+    public OsHnReader(GraphStorage storage, TLongObjectMap<String> edgeEnvironmentMap) {
         super(storage);
+        this.edgeEnvironmentMap = edgeEnvironmentMap;
     }
 
     @Override
@@ -88,8 +96,18 @@ private void preProcessSingleFile(OsHnInputFile in)
         logger.error("==== preProcessSingleFile");
         RoutingElement item;
         while ((item = in.getNext()) != null) {
-            // Don't do anything different to the InputFile
+            // Look for this road (or is a road link) in the itn data and add additional tags based on environment
+            if (edgeEnvironmentMap!=null) {
+                // No instanceof check required yet as only OsHnRoadLink are returned
+                //if (item instanceof OsHnRoadLink) {
+                OsHnRoadLink osHnRoadLink = (OsHnRoadLink)item;
+                String environment = osHnRoadLink.getEnvironment();
+                long id = osHnRoadLink.getId();
+                edgeEnvironmentMap.put(id, environment);
+                //}
+            }
         }
+        System.out.println("=====================> We have found environments for " + edgeEnvironmentMap.size() + " ways");
     }
 
 
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoadLink.java b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoadLink.java
index cc5bbd7170..a698722516 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoadLink.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoadLink.java
@@ -10,16 +10,20 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-public class OsHnRoadLink {
-    private final long id;
+import com.graphhopper.reader.OSMElement;
+
+public class OsHnRoadLink extends OSMElement {
     private static final Logger logger = LoggerFactory.getLogger(OsHnRoadLink.class);
 
+    private String environment;
+
     public OsHnRoadLink(long id, XMLStreamReader parser) throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
-        this.id = id;
+        super(id, WAY);
         parser.nextTag();
         readTags(parser);
     }
-    protected void readTags(XMLStreamReader parser) throws XMLStreamException, MismatchedDimensionException, FactoryException, TransformException {
+    @Override
+    protected void readTags(XMLStreamReader parser) throws XMLStreamException {
         int event = parser.getEventType();
         while (event != XMLStreamConstants.END_DOCUMENT && (event != XMLStreamConstants.END_ELEMENT || !exitElement(parser))) {
             if (event == XMLStreamConstants.CHARACTERS) {
@@ -32,7 +36,9 @@ protected void readTags(XMLStreamReader parser) throws XMLStreamException, Misma
                     case "environment": {
                         //                        event = handleCoordinates(parser);
                         String elementText = parser.getElementText();
-                        System.out.println("Environment " + elementText);
+                        environment = elementText;
+                        //                        System.out.println("Environment " + environment);
+
                         event = parser.getEventType();
                         break;
                     }
@@ -47,10 +53,10 @@ protected void readTags(XMLStreamReader parser) throws XMLStreamException, Misma
                 }
             }
         }
-        System.out.println("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<");
+        //        System.out.println("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<");
     }
     private boolean exitElement(XMLStreamReader parser) {
-        System.out.println("exitElement  " + parser.getLocalName());
+        //        System.out.println("exitElement  " + parser.getLocalName());
         switch (parser.getLocalName()) {
         case "RoadLink":
         case "RoadNode":
@@ -58,5 +64,10 @@ private boolean exitElement(XMLStreamReader parser) {
         }
         return false;
     }
-
+    public String getEnvironment() {
+        return environment;
+    }
+    public void setEnvironment(String environment) {
+        this.environment = environment;
+    }
 }
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoutingElementFactory.java b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoutingElementFactory.java
index d0ecec067c..3b15edf257 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoutingElementFactory.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/hn/OsHnRoutingElementFactory.java
@@ -39,14 +39,14 @@ public RoutingElement create(String name, String idStr, XMLStreamReader parser)
         }
         switch (name) {
         case "RoadNode": {
-            logger.error(">>>>>>>>>>>> RoadNode " + id);
+            //            logger.error(">>>>>>>>>>>> RoadNode " + id);
             //            return OSITNNode.create(id, parser);
-            //            new OsHnRoadLink(id, parser);
+            return new OsHnRoadLink(id, parser);
         }
         case "RoadLink": {
-            logger.error(">>>>>>>>>>>> RoadLink " + id);
+            //            logger.error(">>>>>>>>>>>> RoadLink " + id);
             //            return OSITNWay.create(id, parser);
-            //            new OsHnRoadLink(id, parser);
+            return new OsHnRoadLink(id, parser);
         }
 
         }
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java b/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java
index d4e480fc63..1bfd480f8a 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/itn/OSITNElement.java
@@ -177,17 +177,18 @@ protected void readTags(XMLStreamReader parser) throws XMLStreamException, Misma
     }
 
     private int handleRoadNature(XMLStreamReader parser) throws XMLStreamException {
-//        String nature = resolveNature(parser.getElementText());
-//        String highwayType = getTag("highway");
-//        if (null != nature && null != highwayType) {
-//            highwayType = highwayType + "-";
-//            highwayType = highwayType + nature;
-//            setTag("highway", highwayType);
-//        }
-    	if(parser.getElementText().equals("Roundabout")) {
-    		setTag("junction", "roundabout");
+        String elementText = parser.getElementText();
+        String nature = resolveNature(elementText);
+        //        String highwayType = getTag("highway");
+        if (null != nature && !hasTag("nature")) {
+            //            highwayType = highwayType + "-";
+            //            highwayType = highwayType + nature;
+            setTag("nature", nature);
+        }
+        else if(elementText.equals("Roundabout")) {
+            setTag("junction", "roundabout");
             setTag("direction", "clockwise");
-    	}
+        }
         return parser.getEventType();
     }
 
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
index 2a4437fd1c..6370babff7 100755
--- a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
@@ -36,6 +36,7 @@
 import com.graphhopper.GraphHopper;
 import com.graphhopper.coll.GHLongIntBTree;
 import com.graphhopper.coll.LongIntMap;
+import com.graphhopper.reader.DataReader;
 import com.graphhopper.reader.ITurnCostTableEntry;
 import com.graphhopper.reader.Node;
 import com.graphhopper.reader.OSMElement;
@@ -49,6 +50,7 @@
 import com.graphhopper.reader.Way;
 import com.graphhopper.reader.dem.ElevationProvider;
 import com.graphhopper.reader.osgb.AbstractOsReader;
+import com.graphhopper.reader.osgb.hn.OsHnReader;
 import com.graphhopper.routing.util.CarFlagEncoder;
 import com.graphhopper.routing.util.EncodingManager;
 import com.graphhopper.routing.util.FlagEncoder;
@@ -216,6 +218,7 @@ public void process(ProcessData processData, OsItnInputFile in) throws XMLStream
 
     private TLongObjectMap<String> edgeNameMap;
     private TLongObjectMap<String> edgeRoadTypeMap;
+    private TLongObjectMap<String> edgeEnvironmentMap;
     private TLongObjectMap<String> edgeRoadDirectionMap;
 
     private TLongObjectMap<TDoubleObjectMap<TDoubleLongMap>> edgeIdToXToYToNodeFlagsMap;
@@ -299,7 +302,7 @@ private void preProcessSingleFile(OsItnInputFile in) throws XMLStreamException,
         // Limit the number of xml nodes we process to speed up ingestion
         in.setAbstractFactory(new OsItnPreProcessRoutingElementFactory());
         while ((item = in.getNext()) != null) {
-            logger.error(OS_ITN_READER_PRE_PROCESS_FORMAT, item.getType());
+            logger.debug(OS_ITN_READER_PRE_PROCESS_FORMAT, item.getType());
             if (item.isType(OSMElement.WAY)) {
                 final OSITNWay way = (OSITNWay) item;
                 boolean valid = filterWay(way);
@@ -530,6 +533,13 @@ private TLongSet getProhibitedWayIds() {
         return edgeRoadTypeMap;
     }
 
+    private TLongObjectMap<String> getEdgeEnvironmentMap() {
+        if (edgeEnvironmentMap == null)
+            edgeEnvironmentMap = new TLongObjectHashMap<String>(getOsmIdStoreRequiredSet().size());
+
+        return edgeEnvironmentMap;
+    }
+
     private TLongObjectMap<String> getEdgeRoadDirectionMap() {
         if (edgeRoadDirectionMap == null)
             edgeRoadDirectionMap = new TLongObjectHashMap<String>(getOsmIdStoreRequiredSet().size());
@@ -709,6 +719,12 @@ protected void flush()
                         //                fullyLoaded = true;
                     }
 
+                    @Override
+                    protected DataReader createReader(GraphStorage tmpGraph) {
+                        DataReader reader = new OsHnReader(tmpGraph, getEdgeEnvironmentMap() );
+                        return initReader(reader);
+                    }
+
                 }.setOSMFile(hnPath).setGraphHopperLocation(hnGraphLocation).setEncodingManager(encodingManager).setCHEnable(false).setAsHnReader();
                 hnGraphHopper.importOrLoad();
                 //                OsHnReader hnReader = new OsHnReader(hnGraphHopper.getGraph());
@@ -841,6 +857,18 @@ private void processWay(OSITNWay way, List<OSITNNode> wayNodes) {
         if (null != wayType && !way.hasTag("highway")) {
             way.setTag("highway", wayType);
         }
+        String wayEnvironment = getWayEnvironment(way.getId());
+        if (null != wayEnvironment && !way.hasTag("environment")) {
+
+            String nature = way.getTag("nature");
+            if (!Helper.isEmpty(nature))
+            {
+                wayEnvironment += ":"+nature;
+            }
+
+            System.out.println(">>>>>>>>>>>>>>>> Way " + wayOsmId + " is in environment " + wayEnvironment );
+            way.setTag("environment", wayEnvironment);
+        }
 
         String wayDirection = getWayRoadDirection(way.getId());
         // If the way is ONEWAY then set the direction
@@ -1331,6 +1359,9 @@ private String getWayName(long id) {
     private String getWayRoadType(long id) {
         return getEdgeRoadTypeMap().remove(id);
     }
+    private String getWayEnvironment(long id) {
+        return getEdgeEnvironmentMap().remove(id);
+    }
 
     private String getWayRoadDirection(long id) {
         return getEdgeRoadDirectionMap().remove(id);
@@ -1448,7 +1479,7 @@ boolean addNode(OSITNNode node) {
             // logger.warn(MISSING_FROM_MAP_FORMAT, node.getId());
             return false;
         }
-        logger.warn(ADDING_NODE_AS_FORMAT, node.getId(), nodeType);
+        logger.debug(ADDING_NODE_AS_FORMAT, node.getId(), nodeType);
         double lat = node.getLat();
         double lon = node.getLon();
         double ele = getElevation(node);
diff --git a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
index 7e27507591..0768fa3a78 100644
--- a/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
@@ -35,14 +35,23 @@
  */
 public class CarFlagEncoder extends AbstractFlagEncoder
 {
-    protected final Map<String, Integer> trackTypeSpeedMap = new HashMap<String, Integer>();
-    protected final Set<String> badSurfaceSpeedMap = new HashSet<String>();
+    protected final Map<String, Integer> trackTypeSpeedMap = new HashMap<>();
+    protected final Set<String> badSurfaceSpeedMap = new HashSet<>();
     /**
      * A map which associates string to speed. Get some impression:
      * http://www.itoworld.com/map/124#fullscreen
      * http://wiki.openstreetmap.org/wiki/OSM_tags_for_routing/Maxspeed
      */
-    protected final Map<String, Integer> defaultSpeedMap = new HashMap<String, Integer>();
+    protected final Map<String, Integer> defaultSpeedMap = new HashMap<>();
+
+    protected final Map<String, String> environmentMaxSpeedMap = new HashMap<>();
+
+    /**
+     * 1mph = 1.60934kph
+     */
+    public static final int SEVENTY_MPH_IN_KPH = 112;
+    public static final int SIXTY_MPH_IN_KPH = 96;
+    public static final int THIRTY_MPH_IN_KPH = 48;
 
     /**
      * Should be only instantied via EncodingManager
@@ -128,39 +137,39 @@ public CarFlagEncoder( int speedBits, double speedFactor, int maxTurnCosts )
         // forestry stuff
         defaultSpeedMap.put("track", 15);
 
-        defaultSpeedMap.put("Motorway", 100);
-        defaultSpeedMap.put("A Road", 55);
-        defaultSpeedMap.put("B Road", 35);
-        defaultSpeedMap.put("Minor Road", 35);
-        defaultSpeedMap.put("Local Street", 35);
+        defaultSpeedMap.put("Motorway", SEVENTY_MPH_IN_KPH);
+        defaultSpeedMap.put("A Road", SIXTY_MPH_IN_KPH);
+        defaultSpeedMap.put("B Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Minor Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Local Street", THIRTY_MPH_IN_KPH);
         //        defaultSpeedMap.put("Alley", 35);
-        defaultSpeedMap.put("A Road-Single Carriageway", 55);
-        defaultSpeedMap.put("B Road", 35);
-        defaultSpeedMap.put("Minor Road", 35);
-        defaultSpeedMap.put("Local Street", 35);
+        defaultSpeedMap.put("A Road-Single Carriageway", SIXTY_MPH_IN_KPH);
+        defaultSpeedMap.put("B Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Minor Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Local Street", THIRTY_MPH_IN_KPH);
         //        defaultSpeedMap.put("Alley", 35);
-        defaultSpeedMap.put("Motorway", 100);
-        defaultSpeedMap.put("A Road", 55);
-        defaultSpeedMap.put("B Road", 35);
-        defaultSpeedMap.put("Minor Road", 35);
-        defaultSpeedMap.put("Local Street", 35);
+        defaultSpeedMap.put("Motorway", SEVENTY_MPH_IN_KPH);
+        defaultSpeedMap.put("A Road", SIXTY_MPH_IN_KPH);
+        defaultSpeedMap.put("B Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Minor Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Local Street", THIRTY_MPH_IN_KPH);
         //        defaultSpeedMap.put("Alley", 35);
-        defaultSpeedMap.put("A Road-Dual Carriageway", 55);
-        defaultSpeedMap.put("B Road", 35);
-        defaultSpeedMap.put("Minor Road", 35);
-        defaultSpeedMap.put("Local Street", 35);
+        defaultSpeedMap.put("A Road-Dual Carriageway", SIXTY_MPH_IN_KPH);
+        defaultSpeedMap.put("B Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Minor Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Local Street", THIRTY_MPH_IN_KPH);
         //        defaultSpeedMap.put("Alley", 35);
-        defaultSpeedMap.put("Motorway-Slip Road", 100);
-        defaultSpeedMap.put("A Road-Slip Road", 55);
-        defaultSpeedMap.put("B Road", 35);
-        defaultSpeedMap.put("Minor Road", 35);
-        defaultSpeedMap.put("Local Street", 35);
+        defaultSpeedMap.put("Motorway-Slip Road", SEVENTY_MPH_IN_KPH);
+        defaultSpeedMap.put("A Road-Slip Road", SIXTY_MPH_IN_KPH);
+        defaultSpeedMap.put("B Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Minor Road", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Local Street", THIRTY_MPH_IN_KPH);
         //        defaultSpeedMap.put("Alley", 35);
-        defaultSpeedMap.put("Motorway-Roundabout", 100);
-        defaultSpeedMap.put("A Road-Roundabout", 55);
-        defaultSpeedMap.put("B Road-Roundabout", 35);
-        defaultSpeedMap.put("Minor Road-Roundabout", 35);
-        defaultSpeedMap.put("Local Street-Roundabout", 35);
+        defaultSpeedMap.put("Motorway-Roundabout", SEVENTY_MPH_IN_KPH);
+        defaultSpeedMap.put("A Road-Roundabout", SIXTY_MPH_IN_KPH);
+        defaultSpeedMap.put("B Road-Roundabout", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Minor Road-Roundabout", THIRTY_MPH_IN_KPH);
+        defaultSpeedMap.put("Local Street-Roundabout", THIRTY_MPH_IN_KPH);
 
         // You can not drive down a pedestrianised street
         defaultSpeedMap.put("Pedestrianised Street", 0);
@@ -201,6 +210,11 @@ public CarFlagEncoder( int speedBits, double speedFactor, int maxTurnCosts )
         vehicleQualifierTypeInclusions.add("Motor Vehicles");
         vehicleQualifierTypeInclusions.add("All Vehicles");
 
+
+        //        environmentMaxSpeedMap.put("Rural", 60);
+        environmentMaxSpeedMap.put("Urban:Single Carriageway", ""+THIRTY_MPH_IN_KPH);
+
+
     }
 
     /**
@@ -304,6 +318,18 @@ public long handleWayTags( Way way, long allowed, long relationFlags )
         {
             // get assumed speed from highway type
             double speed = getSpeed(way);
+
+            // set the max speed tag for the environment
+            String environment = way.getTag("environment");
+            if (!Helper.isEmpty(environment))
+            {
+                String maxSpeed = environmentMaxSpeedMap.get(environment);
+                if (!Helper.isEmpty(maxSpeed)) {
+                    //                    System.out.println(">>>>>>>>>>>>>>> Set max speed to " + maxSpeed);
+                    way.setTag("maxspeed", maxSpeed);
+                }
+            }
+
             speed = applyMaxSpeed(way, speed, true);
 
             // limit speed to max 30 km/h if bad surface
diff --git a/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java b/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
index 32deb6d820..bdef5efbb1 100644
--- a/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
+++ b/core/src/main/java/com/graphhopper/routing/util/EncodingManager.java
@@ -1,14 +1,14 @@
 /*
  *  Licensed to GraphHopper and Peter Karich under one or more contributor
- *  license agreements. See the NOTICE file distributed with this work for 
+ *  license agreements. See the NOTICE file distributed with this work for
  *  additional information regarding copyright ownership.
- * 
- *  GraphHopper licenses this file to you under the Apache License, 
- *  Version 2.0 (the "License"); you may not use this file except in 
+ *
+ *  GraphHopper licenses this file to you under the Apache License,
+ *  Version 2.0 (the "License"); you may not use this file except in
  *  compliance with the License. You may obtain a copy of the License at
- * 
+ *
  *       http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  *  Unless required by applicable law or agreed to in writing, software
  *  distributed under the License is distributed on an "AS IS" BASIS,
  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -23,8 +23,6 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.Collections;
-import java.util.Comparator;
 import java.util.List;
 
 import com.graphhopper.reader.DataReader;
@@ -37,10 +35,8 @@
 import com.graphhopper.storage.Directory;
 import com.graphhopper.storage.RAMDirectory;
 import com.graphhopper.storage.StorableProperties;
-import com.graphhopper.util.BitUtil;
 import com.graphhopper.util.EdgeIteratorState;
 import com.graphhopper.util.Helper;
-import java.util.*;
 
 /**
  * Manager class to register encoder, assign their flag values and check objects with all encoders
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/AbstractOsItnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/AbstractOsItnReaderTest.java
index 909cf7eaf7..6aeed8c4e4 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/AbstractOsItnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/AbstractOsItnReaderTest.java
@@ -7,9 +7,13 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.Locale;
 
 import org.junit.Before;
 
+import com.graphhopper.GHRequest;
+import com.graphhopper.GHResponse;
+import com.graphhopper.GraphHopper;
 import com.graphhopper.reader.osgb.itn.OsItnReader;
 import com.graphhopper.routing.util.AbstractFlagEncoder;
 import com.graphhopper.routing.util.BikeFlagEncoder;
@@ -18,7 +22,6 @@
 import com.graphhopper.routing.util.DefaultEdgeFilter;
 import com.graphhopper.routing.util.EdgeFilter;
 import com.graphhopper.routing.util.EncodingManager;
-import com.graphhopper.routing.util.FlagEncoder;
 import com.graphhopper.routing.util.FootFlagEncoder;
 import com.graphhopper.storage.GraphExtension;
 import com.graphhopper.storage.GraphHopperStorage;
@@ -26,6 +29,11 @@
 import com.graphhopper.storage.TurnCostExtension;
 import com.graphhopper.util.EdgeExplorer;
 import com.graphhopper.util.EdgeIterator;
+import com.graphhopper.util.Instruction;
+import com.graphhopper.util.InstructionList;
+import com.graphhopper.util.Translation;
+import com.graphhopper.util.TranslationMap;
+import com.graphhopper.util.shapes.GHPoint;
 
 public abstract class AbstractOsItnReaderTest {
 
@@ -184,4 +192,29 @@ protected void printNodes(EdgeExplorer outExplorer, int numNodes) {
             }
         }
     }
+
+    protected InstructionList route(GraphHopper graphHopper, double lat1, double lon1, double lat2, double lon2) {
+        GHPoint start = new GHPoint(lat1, lon1);
+        GHPoint end = new GHPoint(lat2, lon2);
+        System.out.println("Route from " + start + " to " + end);
+        GHRequest ghRequest = new GHRequest(start, end);
+        ghRequest.setVehicle("car");
+        GHResponse ghResponse = graphHopper.route(ghRequest);
+        //        System.err.println("ghResponse.getPoints() " + ghResponse.getPoints());
+        InstructionList instructionList = ghResponse.getInstructions();
+        //        outputInstructionList(instructionList);
+        return instructionList;
+    }
+    protected void outputInstructionList(InstructionList instructionList) {
+        //        System.err.println("ghResponse.getInstructions() " + ghResponse.getInstructions());
+        //        System.err.println("ghResponse.getDebugInfo() " + ghResponse.getDebugInfo());
+        System.out.println("Turn Descriptions:");
+        Translation tr = new TranslationMap().doImport().getWithFallBack(Locale.US);
+        for (Instruction instruction : instructionList) {
+            System.out.println("\t" + instruction.getName() + "\t" + instruction.getDistance() + "\t" + instruction.getSign() + "\t" + instruction.getTime() + "\t" + instruction.getTurnDescription(tr));
+        }
+        System.out.println("End Turn Descriptions");
+
+    }
+
 }
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java b/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java
index e4b8e0a538..39a65665fd 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java
@@ -5,13 +5,10 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.util.Locale;
 
-import org.junit.Test;
 import org.junit.Ignore;
+import org.junit.Test;
 
-import com.graphhopper.GHRequest;
-import com.graphhopper.GHResponse;
 import com.graphhopper.GraphHopper;
 import com.graphhopper.routing.util.CarFlagEncoder;
 import com.graphhopper.routing.util.EncodingManager;
@@ -20,9 +17,6 @@
 import com.graphhopper.util.EdgeExplorer;
 import com.graphhopper.util.Instruction;
 import com.graphhopper.util.InstructionList;
-import com.graphhopper.util.Translation;
-import com.graphhopper.util.TranslationMap;
-import com.graphhopper.util.shapes.GHPoint;
 
 public class WickhamDirectionErrorTest extends AbstractOsItnReaderTest {
 
@@ -91,29 +85,6 @@ public void testWorkingTurn() {
 
     }
 
-    private InstructionList route(GraphHopper graphHopper, double lat1, double lon1, double lat2, double lon2) {
-        GHPoint start = new GHPoint(lat1, lon1);
-        GHPoint end = new GHPoint(lat2, lon2);
-        System.out.println("Route from " + start + " to " + end);
-        GHRequest ghRequest = new GHRequest(start, end);
-        ghRequest.setVehicle("car");
-        GHResponse ghResponse = graphHopper.route(ghRequest);
-        //        System.err.println("ghResponse.getPoints() " + ghResponse.getPoints());
-        InstructionList instructionList = ghResponse.getInstructions();
-        //        outputInstructionList(instructionList);
-        return instructionList;
-    }
-    private void outputInstructionList(InstructionList instructionList) {
-        //        System.err.println("ghResponse.getInstructions() " + ghResponse.getInstructions());
-        //        System.err.println("ghResponse.getDebugInfo() " + ghResponse.getDebugInfo());
-        System.out.println("Turn Descriptions:");
-        Translation tr = new TranslationMap().doImport().getWithFallBack(Locale.US);
-        for (Instruction instruction : instructionList) {
-            System.out.println("\t" + instruction.getName() + "\t" + instruction.getDistance() + "\t" + instruction.getSign() + "\t" + instruction.getTime() + "\t" + instruction.getTurnDescription(tr));
-        }
-        System.out.println("End Turn Descriptions");
-
-    }
     private EdgeExplorer printNodes(GraphStorage graph) {
         final EdgeExplorer explorer = graph.createEdgeExplorer(carOutEdges);
         printNodes(explorer, 9);
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
index 2c07e3be3c..6f34b77429 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/hn/OsHnReaderTest.java
@@ -1,31 +1,29 @@
 package com.graphhopper.reader.osgb.hn;
 
-import org.junit.Before;
+import static com.graphhopper.util.GHUtility.count;
+import static org.junit.Assert.assertEquals;
+
+import java.util.HashMap;
+import java.util.Map;
+
 import org.junit.Ignore;
 import org.junit.Test;
 
 import com.graphhopper.GraphHopper;
-import com.graphhopper.routing.util.BikeFlagEncoder;
-import com.graphhopper.routing.util.BusFlagEncoder;
-import com.graphhopper.routing.util.CarFlagEncoder;
-import com.graphhopper.routing.util.EncodingManager;
-import com.graphhopper.routing.util.FlagEncoder;
-import com.graphhopper.routing.util.FootFlagEncoder;
+import com.graphhopper.reader.osgb.AbstractOsItnReaderTest;
 import com.graphhopper.storage.GraphStorage;
+import com.graphhopper.util.CmdArgs;
+import com.graphhopper.util.EdgeExplorer;
+import com.graphhopper.util.Instruction;
+import com.graphhopper.util.InstructionList;
 
-public class OsHnReaderTest {
+/**
+ * Unit testing for the Highways Network data.
+ * @author phopkins
+ *
+ */
+public class OsHnReaderTest extends AbstractOsItnReaderTest {
 
-    protected EncodingManager encodingManager;
-
-    @Before
-    public void createEncodingManager() {
-        FlagEncoder carEncoder = new CarFlagEncoder(5, 5, 3);
-        FlagEncoder busEncoder = new BusFlagEncoder(5, 5, 3);
-        // carEncoder = new RelationCarFlagEncoder(5, 5, 3);
-        FlagEncoder bikeEncoder = new BikeFlagEncoder(4, 2, 3);
-        FlagEncoder footEncoder = new FootFlagEncoder();
-        encodingManager = new EncodingManager(footEncoder, carEncoder, bikeEncoder);
-    }
     @Test
     @Ignore
     public void testReader() {
@@ -49,4 +47,97 @@ protected void flush()
         GraphStorage graph = graphHopper.getGraph();
 
     }
+
+    /**
+     * This test reads in the ITN data set WITHOUT any Highways Network data and asserts that the route from node ###79 to ###85  is along the shorter route (takes the TOP ROAD).
+     */
+    @Test
+    public void testMotorwayARoadNetwork_NoHighwaysNetworkData() {
+        String graphLoc = "./target/output/testMotorwayARoadNetwork_NoHighwaysNetworkData/os-itn-hn-test-network-gh";
+        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml";
+        GraphHopper graphHopper = new GraphHopper().setInMemory().setOSMFile(inputFile).setGraphHopperLocation(graphLoc).setCHEnable(false).setEncodingManager(encodingManager).setAsItnReader();
+        graphHopper.importOrLoad();
+        GraphStorage graph = graphHopper.getGraph();
+        printNodes(graph.createEdgeExplorer(carOutEdges), 6);
+        testNodes(graph);
+        // 79 => 295000.000 90000.000 = -3.49   50.70
+        // 80 => 290000.000,90000.000 = -3.56   50.70
+        // 81 => 280000.000 90000.000 = -3.70   50.70
+        // 82 => 270000.000,90000.000 = -3.84   50.69
+        // 82 => 280000.000 80000.000 = -3.70   50.61
+        // 85 => 265000.000 90000.000 = -3.91   50.69
+        InstructionList instructionList = route(graphHopper, 50.70, -3.49, 50.69, -3.91);
+        outputInstructionList(instructionList);
+
+        assertEquals(Instruction.CONTINUE_ON_STREET, instructionList.get(0).getSign());
+        assertEquals("START ROAD", instructionList.get(0).getName());
+        assertEquals(Instruction.TURN_SLIGHT_RIGHT, instructionList.get(1).getSign());
+        assertEquals("TOP ROAD", instructionList.get(1).getName());
+        assertEquals(Instruction.TURN_SLIGHT_RIGHT, instructionList.get(2).getSign());
+        assertEquals("END ROAD", instructionList.get(2).getName());
+        assertEquals(Instruction.FINISH, instructionList.get(3).getSign());
+
+    }
+
+    /**
+     * This test reads in the ITN data and decorates it with the Highways Network data.
+     * It then asserts that the route from node ###79 to ###85 is along the longer route (takes the BOTTOM ROAD).
+     * This is because TOP ROAD is specified in the Highways Network data as environment Urban and in ITN it is Single Carriageway
+     * (BOTTOM ROAD is Dual Carriageway Motorway and therefore 70mph). Our rules
+     * state that a non-Urban Single Carriageway is 60mph but an Urban Single Carriageway is 30mpg. Therefore the longer route is quicker
+     */
+    @Test
+    public void testMotorwayARoadNetwork_WithHighwaysNetworkData() {
+        String graphLoc = "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/os-itn-hn-test-network-gh";
+        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml";
+
+
+        Map<String, String> args = new HashMap<>();
+        args.put("hn.data", "./src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml");
+        args.put("hn.graph.location", "./target/output/testMotorwayARoadNetwork_WithHighwaysNetworkData/highways_network");
+        args.put("graph.location", graphLoc);
+        args.put("osmreader.osm", inputFile);
+        args.put("config", "../config.properties");
+        CmdArgs commandLineArguments = new CmdArgs(args);
+        commandLineArguments = CmdArgs.readFromConfigAndMerge(commandLineArguments, "config", "graphhopper.config");
+
+        GraphHopper graphHopper = new GraphHopper().setInMemory().setAsItnReader().init(commandLineArguments).setCHEnable(false).setEncodingManager(encodingManager);
+        graphHopper.importOrLoad();
+        GraphStorage graph = graphHopper.getGraph();
+
+        printNodes(graph.createEdgeExplorer(carOutEdges), 6);
+        testNodes(graph);
+        // 79 => 295000.000 90000.000 = -3.49   50.70
+        // 80 => 290000.000,90000.000 = -3.56   50.70
+        // 81 => 280000.000 90000.000 = -3.70   50.70
+        // 82 => 270000.000,90000.000 = -3.84   50.69
+        // 82 => 280000.000 80000.000 = -3.70   50.61
+        // 85 => 265000.000 90000.000 = -3.91   50.69
+        InstructionList instructionList = route(graphHopper, 50.70, -3.49, 50.69, -3.91);
+        outputInstructionList(instructionList);
+
+        assertEquals(Instruction.CONTINUE_ON_STREET, instructionList.get(0).getSign());
+        assertEquals("START ROAD", instructionList.get(0).getName());
+        assertEquals(Instruction.TURN_SLIGHT_LEFT, instructionList.get(1).getSign());
+        assertEquals("BOTTOM ROAD", instructionList.get(1).getName());
+        assertEquals(Instruction.TURN_SLIGHT_LEFT, instructionList.get(2).getSign());
+        assertEquals("END ROAD", instructionList.get(2).getName());
+        assertEquals(Instruction.FINISH, instructionList.get(3).getSign());
+
+    }
+
+    private void testNodes(GraphStorage graph) {
+        testNodes(graph, graph.createEdgeExplorer(carOutEdges));
+    }
+    private void testNodes(GraphStorage graph, EdgeExplorer explorer) {
+        assertEquals(6, graph.getNodes());
+        assertEquals(3, count(explorer.setBaseNode(0)));
+        assertEquals(3, count(explorer.setBaseNode(1)));
+        assertEquals(2, count(explorer.setBaseNode(2)));
+        assertEquals(2, count(explorer.setBaseNode(3)));
+        assertEquals(1, count(explorer.setBaseNode(4)));
+        assertEquals(1, count(explorer.setBaseNode(5)));
+
+    }
+
 }
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
index d615875691..6f7f281370 100755
--- a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
@@ -318,13 +318,14 @@ public void testRegex() {
     }
 
     @Test
-    @Ignore
+    //    @Ignore
     public void testItnGraphHopperWithHighwaysNetworkData() {
-        String graphLoc = "./target/output/os-itn-wickham-direction-error-gh";
-        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-wickham-direction-error.xml";
+        String graphLoc = "./target/output/modified-exeter-gh";
+        String inputFile = "/media/sf_/media/shared/modified-exeter/58096-SX9192-modified.xml";
+        //        String inputFile = "./src/test/resources/com/graphhopper/reader/os-itn-wickham-direction-error.xml";
 
         Map<String, String> args = new HashMap<>();
-        args.put("hn.data", "/data/Development/highways_network/");
+        args.put("hn.data", "/data/Development/highways_network_full/");
         args.put("hn.graph.location", "./target/output/highways_network");
         args.put("graph.location", graphLoc);
         args.put("osmreader.osm", inputFile);
diff --git a/core/src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml b/core/src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml
new file mode 100644
index 0000000000..f112e3180f
--- /dev/null
+++ b/core/src/test/resources/com/graphhopper/reader/hn/os-hn-single-urban.xml
@@ -0,0 +1,94 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<gml:FeatureCollection xmlns:gml="http://www.opengis.net/gml/3.2"
+	xsi:schemaLocation="http://namespaces.os.uk/mastermap/highwayNetwork/1.0 HighwayNetwork.xsd http://namespaces.osuk/mastermap/routingAndAssetManagement/1.0 RoutingAndAssetManagment.xsd http://namespaces.ordnancesurvey.co.uk/mastermap/network/1.0 GeneralNetwork/1.0/generalNetwork.xsd http://www.opengis.net/gml/3.2 gml/3.2.1/gml.xsd"
+	gml:id="HighwaysNetwork_March2015" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema"
+	xmlns:highway="http://namespaces.os.uk/mastermap/highwayNetwork/1.0" xmlns:base2="http://inspire.ec.europa.eu/schemas/base2/1.0"
+	xmlns:sc="http://www.interactive-instruments.de/ShapeChange/AppInfo" xmlns:gmd="http://www.isotc211.org/2005/gmd"
+	xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:gss="http://www.isotc211.org/2005/gss"
+	xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:ad="urn:x-inspire:specification:gmlas:Addresses:3.0"
+	xmlns:base="urn:x-inspire:specification:gmlas:BaseTypes:3.2" xmlns:gn="urn:x-inspire:specification:gmlas:GeographicalNames:3.0"
+	xmlns:cp="urn:x-inspire:specification:gmlas:CadastralParcels:3.0" xmlns:au="urn:x-inspire:specification:gmlas:AdministrativeUnits:3.0"
+	xmlns:stat="urn:x-inspire:specification:gmlas:StatisticalUnits:0.0" xmlns:bui="urn:x-inspire:specification:gmlas:Buildings:0.0"
+	xmlns:tn-a="urn:x-inspire:specification:gmlas:AirTransportNetwork:3.0" xmlns:net="urn:x-inspire:specification:gmlas:Network:3.2"
+	xmlns:tn="urn:x-inspire:specification:gmlas:CommonTransportElements:3.0" xmlns:am="http://inspire.ec.europa.eu/schemas/am/3.0"
+	xmlns:su-core="http://inspire.ec.europa.eu/schemas/su-core/3.0" xmlns:gmlexr="http://www.opengis.net/gml/3.3/exr"
+	xmlns:gmlxbt="http://www.opengis.net/gml/3.3/xbt" xmlns:tn-ro="urn:x-inspire:specification:gmlas:RoadTransportNetwork:3.0"
+	xmlns:names="http://namespaces.os.uk/open/names/1.0/" xmlns:ram="http://namespaces.osuk/mastermap/routingAndAssetManagement/1.0"
+	xmlns:network="http://namespaces.ordnancesurvey.co.uk/mastermap/network/1.0">
+	<gml:featureMember>
+		<highway:RoadLink gml:id="osgb4000000025288017">
+			<gml:identifier codeSpace="http://inspire.jrc.ec.europa.eu/ids">http://data.os.uk/id/4000000022044835</gml:identifier>
+			<net:beginLifespanVersion>2008-04-15T00:00:00.000</net:beginLifespanVersion>
+			<net:inspireId>
+				<base:Identifier>
+					<base:localId>4000000022044835</base:localId>
+					<base:namespace>http://data.os.uk</base:namespace>
+					<base:versionId>1</base:versionId>
+				</base:Identifier>
+			</net:inspireId>
+			<net:inNetwork xlink:href="#OSHighwayNetwork" />
+			<net:centrelineGeometry>
+				<gml:LineString srsName="urn:ogc:def:crs:EPSG::27700" gml:id="LOCAL_ID_7640">
+					<gml:posList srsDimension="2" count="8">378958.894 160220.012 378969.4 160221.8 378984.4 160219.4 378992.2
+						160218.5 379006.9 160223.6 379023.4 160231.7 379034.2 160239.2 379047.1 160254.2</gml:posList>
+				</gml:LineString>
+			</net:centrelineGeometry>
+			<net:fictitious>false</net:fictitious>
+			<net:endNode xlink:href="#osgb4000000022044777" />
+			<net:startNode xlink:href="#osgb4000000022044778" />
+			<tn:validFrom nilReason="unknown" xsi:nil="true" />
+			<highway:roadClassification>Not Classified</highway:roadClassification>
+			<highway:formOfWay>Single Carriageway</highway:formOfWay>
+			<highway:length uom="m">100.57</highway:length>
+			<highway:operationalState>
+				<highway:OperationalStateType>
+					<highway:state>Open</highway:state>
+				</highway:OperationalStateType>
+			</highway:operationalState>
+			<highway:provenance>OS</highway:provenance>
+			<highway:environment>Urban</highway:environment>
+			<highway:directionality codeSpace="http://inspire.ec.europa.eu/codelist/LinkDirectionValue/">both directions</highway:directionality>
+			<highway:reasonForChange>New</highway:reasonForChange>
+			<highway:relatedRoadArea xlink:href="#osgb1000002317449102" />
+			<highway:relatedRoadArea xlink:href="#osgb1000002526083932" />
+		</highway:RoadLink>
+	</gml:featureMember>
+	<gml:featureMember>
+		<highway:RoadLink gml:id="osgb4000000025288018">
+			<gml:identifier codeSpace="http://inspire.jrc.ec.europa.eu/ids">http://data.os.uk/id/4000000022044835</gml:identifier>
+			<net:beginLifespanVersion>2008-04-15T00:00:00.000</net:beginLifespanVersion>
+			<net:inspireId>
+				<base:Identifier>
+					<base:localId>4000000022044835</base:localId>
+					<base:namespace>http://data.os.uk</base:namespace>
+					<base:versionId>1</base:versionId>
+				</base:Identifier>
+			</net:inspireId>
+			<net:inNetwork xlink:href="#OSHighwayNetwork" />
+			<net:centrelineGeometry>
+				<gml:LineString srsName="urn:ogc:def:crs:EPSG::27700" gml:id="LOCAL_ID_7640">
+					<gml:posList srsDimension="2" count="8">378958.894 160220.012 378969.4 160221.8 378984.4 160219.4 378992.2
+						160218.5 379006.9 160223.6 379023.4 160231.7 379034.2 160239.2 379047.1 160254.2</gml:posList>
+				</gml:LineString>
+			</net:centrelineGeometry>
+			<net:fictitious>false</net:fictitious>
+			<net:endNode xlink:href="#osgb4000000022044777" />
+			<net:startNode xlink:href="#osgb4000000022044778" />
+			<tn:validFrom nilReason="unknown" xsi:nil="true" />
+			<highway:roadClassification>Not Classified</highway:roadClassification>
+			<highway:formOfWay>Single Carriageway</highway:formOfWay>
+			<highway:length uom="m">100.57</highway:length>
+			<highway:operationalState>
+				<highway:OperationalStateType>
+					<highway:state>Open</highway:state>
+				</highway:OperationalStateType>
+			</highway:operationalState>
+			<highway:provenance>OS</highway:provenance>
+			<highway:environment>Urban</highway:environment>
+			<highway:directionality codeSpace="http://inspire.ec.europa.eu/codelist/LinkDirectionValue/">both directions</highway:directionality>
+			<highway:reasonForChange>New</highway:reasonForChange>
+			<highway:relatedRoadArea xlink:href="#osgb1000002317449102" />
+			<highway:relatedRoadArea xlink:href="#osgb1000002526083932" />
+		</highway:RoadLink>
+	</gml:featureMember>
+</gml:FeatureCollection>
diff --git a/core/src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml b/core/src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml
new file mode 100644
index 0000000000..a8036b5e5a
--- /dev/null
+++ b/core/src/test/resources/com/graphhopper/reader/os-itn-hn-test-network.xml
@@ -0,0 +1,409 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<osgb:FeatureCollection xmlns:osgb='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb'
+	xmlns:gml='http://www.opengis.net/gml' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
+	xsi:schemaLocation='http://www.ordnancesurvey.co.uk/xml/namespaces/osgb http://www.ordnancesurvey.co.uk/xml/schema/v7/OSDNFFeatures.xsd'
+	fid='GDS-58096-1'>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277879'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>295000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+    <osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277880'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>290000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277882'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>270000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277883'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,80000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277884'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>280000.000,95000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadNode fid='osgb4000000025277885'>
+			<osgb:version>2</osgb:version>
+			<osgb:versionDate>2005-09-13</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2002-10-31</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:point>
+				<gml:Point srsName='osgb:BNG'>
+					<gml:coordinates>265000.000,90000.000</gml:coordinates>
+				</gml:Point>
+			</osgb:point>
+			<osgb:referenceToTopographicArea xlink:href='#osgb1000002062025665' />
+		</osgb:RoadNode>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288016">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>500.0</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>295000.000,90000.000 290000.000,90000.000</gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277879" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277880" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288017">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>500.0</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>290000.000,90000.000 280000.000,95000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277880" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277884" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288018">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+			<osgb:length>500.0</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,95000.000 270000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277884" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277882" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639"></osgb:referenceToTopographicArea>
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288019">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+			<osgb:descriptiveTerm>Motorway</osgb:descriptiveTerm>
+			<osgb:natureOfRoad>Dual Carriageway</osgb:natureOfRoad>
+			<osgb:length>1000.0</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>290000.000,90000.000 280000.000,80000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277880"></osgb:directedNode>
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277883" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+	<osgb:networkMember>
+		<osgb:RoadLink fid="osgb4000000025288020">
+			<osgb:version>4</osgb:version>
+			<osgb:versionDate>2006-02-03</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-01-27</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+            <osgb:descriptiveTerm>Motorway</osgb:descriptiveTerm>
+            <osgb:natureOfRoad>Dual Carriageway</osgb:natureOfRoad>
+			<osgb:length>1000.0</osgb:length>
+			<osgb:polyline>
+				<gml:LineString srsName="osgb:BNG">
+					<gml:coordinates>280000.000,80000.000 270000.000,90000.000 </gml:coordinates>
+				</gml:LineString>
+			</osgb:polyline>
+			<osgb:directedNode orientation="-" xlink:href="#osgb4000000025277883" />
+			<osgb:directedNode orientation="+" xlink:href="#osgb4000000025277882" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+			<osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+		</osgb:RoadLink>
+	</osgb:networkMember>
+    <osgb:networkMember>
+        <osgb:RoadLink fid="osgb4000000025288021">
+            <osgb:version>4</osgb:version>
+            <osgb:versionDate>2006-02-03</osgb:versionDate>
+            <osgb:theme>Road Network</osgb:theme>
+            <osgb:changeHistory>
+                <osgb:changeDate>2003-01-27</osgb:changeDate>
+                <osgb:reasonForChange>New</osgb:reasonForChange>
+            </osgb:changeHistory>
+            <osgb:changeHistory>
+                <osgb:changeDate>2003-01-27</osgb:changeDate>
+                <osgb:reasonForChange>Modified</osgb:reasonForChange>
+            </osgb:changeHistory>
+            <osgb:descriptiveGroup>Road Topology</osgb:descriptiveGroup>
+            <osgb:descriptiveTerm>A Road</osgb:descriptiveTerm>
+            <osgb:natureOfRoad>Single Carriageway</osgb:natureOfRoad>
+            <osgb:length>500.0</osgb:length>
+            <osgb:polyline>
+                <gml:LineString srsName="osgb:BNG">
+                    <gml:coordinates>265000.000,90000.000 270000.000,90000.000</gml:coordinates>
+                </gml:LineString>
+            </osgb:polyline>
+            <osgb:directedNode orientation="-" xlink:href="#osgb4000000025277885" />
+            <osgb:directedNode orientation="+" xlink:href="#osgb4000000025277882" />
+            <osgb:referenceToTopographicArea xlink:href="#osgb1000002062010639" />
+            <osgb:referenceToTopographicArea xlink:href="#osgb1000002062041282" />
+            <osgb:referenceToTopographicArea xlink:href="#osgb1000002062010640" />
+            <osgb:referenceToTopographicArea xlink:href="#osgb1000002062010474" />
+        </osgb:RoadLink>
+    </osgb:networkMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366114'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>TOP ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288017' />
+			<osgb:networkMember xlink:href='#osgb4000000025288018' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+	<osgb:roadMember>
+		<osgb:Road fid='osgb4000000025366115'>
+			<osgb:version>6</osgb:version>
+			<osgb:versionDate>2008-11-11</osgb:versionDate>
+			<osgb:theme>Road Network</osgb:theme>
+			<osgb:changeHistory>
+				<osgb:changeDate>2003-03-13</osgb:changeDate>
+				<osgb:reasonForChange>New</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2004-10-26</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-02-11</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-07-15</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:changeHistory>
+				<osgb:changeDate>2008-10-08</osgb:changeDate>
+				<osgb:reasonForChange>Modified</osgb:reasonForChange>
+			</osgb:changeHistory>
+			<osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+			<osgb:roadName>BOTTOM ROAD</osgb:roadName>
+			<osgb:networkMember xlink:href='#osgb4000000025288019' />
+			<osgb:networkMember xlink:href='#osgb4000000025288020' />
+			<osgb:boundedBy>
+				<gml:Box srsName='osgb:BNG'>
+					<gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+				</gml:Box>
+			</osgb:boundedBy>
+		</osgb:Road>
+	</osgb:roadMember>
+    <osgb:roadMember>
+        <osgb:Road fid='osgb4000000025366116'>
+            <osgb:version>6</osgb:version>
+            <osgb:versionDate>2008-11-11</osgb:versionDate>
+            <osgb:theme>Road Network</osgb:theme>
+            <osgb:changeHistory>
+                <osgb:changeDate>2003-03-13</osgb:changeDate>
+                <osgb:reasonForChange>New</osgb:reasonForChange>
+            </osgb:changeHistory>
+            <osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+            <osgb:roadName>START ROAD</osgb:roadName>
+            <osgb:networkMember xlink:href='#osgb4000000025288016' />
+            <osgb:boundedBy>
+                <gml:Box srsName='osgb:BNG'>
+                    <gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+                </gml:Box>
+            </osgb:boundedBy>
+        </osgb:Road>
+    </osgb:roadMember>
+    <osgb:roadMember>
+        <osgb:Road fid='osgb4000000025366117'>
+            <osgb:version>6</osgb:version>
+            <osgb:versionDate>2008-11-11</osgb:versionDate>
+            <osgb:theme>Road Network</osgb:theme>
+            <osgb:changeHistory>
+                <osgb:changeDate>2003-03-13</osgb:changeDate>
+                <osgb:reasonForChange>New</osgb:reasonForChange>
+            </osgb:changeHistory>
+            <osgb:descriptiveGroup>Named Road</osgb:descriptiveGroup>
+            <osgb:roadName>END ROAD</osgb:roadName>
+            <osgb:networkMember xlink:href='#osgb4000000025288021' />
+            <osgb:boundedBy>
+                <gml:Box srsName='osgb:BNG'>
+                    <gml:coordinates>291211.000,92187.000 291549.000,93434.920</gml:coordinates>
+                </gml:Box>
+            </osgb:boundedBy>
+        </osgb:Road>
+    </osgb:roadMember>
+	<osgb:boundedBy>
+		<gml:Box srsName='osgb:BNG'>
+			<gml:coordinates>290822.000,91912.000 293199.000,94222.000</gml:coordinates>
+		</gml:Box>
+	</osgb:boundedBy>
+</osgb:FeatureCollection>
