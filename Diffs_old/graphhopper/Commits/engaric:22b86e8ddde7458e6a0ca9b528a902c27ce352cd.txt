diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/IntegrationTestProperties.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/IntegrationTestProperties.java
index 5d574caeca..56728ecbfc 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/IntegrationTestProperties.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/IntegrationTestProperties.java
@@ -44,6 +44,12 @@ public static int getTestPropertyInt(final String property) {
         String propertyValue = getTestProperty(property);
         return Integer.parseInt(propertyValue);
     }
+    
+    
+	public static void setTestProperty(final String property, final String value) {
+				instance.setProperty(property,value);
+		
+	}
 
     public static boolean getTestPropertyBool(final String property) {
         String testProperty = getTestProperty(property);
@@ -66,6 +72,9 @@ public String getProperty(String property) {
         return testProperties.getProperty(property);
     }
 
+    public void setProperty(String property,String value) {
+         testProperties.setProperty(property,value);
+    }
     private IntegrationTestProperties() {
         testProperties = new Properties();
 
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
index 012289e919..b51249d376 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
@@ -12,12 +12,14 @@
 import cucumber.api.Scenario;
 import cucumber.api.java.After;
 import cucumber.api.java.Before;
+
 import cucumber.api.java.en.Given;
 import cucumber.api.java.en.Then;
 import cucumber.api.java.en.When;
 
 public class GraphHopperHooks {
 	GraphHopperUIUtil graphUiUtil;
+	String testON="";
 
 	String instruction;
 	String nearestPoint = "";
@@ -32,9 +34,27 @@
 	@Before
 	public void init()
 	{
+		testON=IntegrationTestProperties.getTestProperty("testON");
 		graphUiUtil=new GraphHopperUIUtil(IntegrationTestProperties.getTestProperty("graphHopperWebUrl"));
 	}
 
+	
+	@Before({"@WebOnly"})
+	public void overrideTestONProperty()
+	{
+		
+		testON=IntegrationTestProperties.getTestProperty("testON");
+		IntegrationTestProperties.setTestProperty("testON", "Web");
+	}
+
+	
+	@After({"@WebOnly"})
+	public void rollBackTestONProperty()
+	{
+		IntegrationTestProperties.setTestProperty("testON", testON);
+	}
+
+	
 	@Given("^I request a nearest point from  \"([^\"]*)\" from Nearest Point API$")
 	public void I_request_a_nearest_point_from_from_Nearest_Point_API(
 			String pointA) {
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
index 37bfdfa35b..30518d9310 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
@@ -870,6 +870,25 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType | responseFormat | errorMessage | statusCode |
       | car         |            | fastest   | json           |              | 404        |
 
+
+  @Routing @ErrorMessages
+  Scenario Outline: Incorrect Parameter Value "point"
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,string | 50.723364,-3.523895 |
+    And I have vehicles as "<vehicleType>"
+    And I have avoidances as "<avoidances>"
+    And I have weighting as "<routeType>"
+    And I have type as "<responseFormat>"
+    When I request for a route
+    Then I should be able to verify the response message as "<errorMessage>"
+    Then I should be able to verify the statuscode as "<statusCode>"
+
+    Examples: 
+      | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                     | statusCode |
+      | car         |            | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 404        |
+
+
   @Routing @ErrorMessages
   Scenario Outline: Incorrect Parameter Name "points"
     Given I have route points as
@@ -885,7 +904,7 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         |            | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 404        |
+      | car         |            | fastest   | json           | Parameter points is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 404        |
 
   @Routing @ErrorMessages
   Scenario Outline: Missing Parameter "point"
@@ -899,10 +918,13 @@ Feature: Verify a route from A to B
 
     Examples: 
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                                                                                     | statusCode |
-      | car         |            | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 404        |
+      | car         |            | fastest   | json           |No point parameter provided| 404        |
 
   @Routing @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "avoidances"
+      Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
     Given I have vehicle as "<vehicleType>"
     And I have avoidances as "<avoidances>"
     And I have weighting as "<routeType>"
diff --git a/acceptancetesting/src/test/cucumber/routing.feature b/acceptancetesting/src/test/cucumber/routing.feature
index 5f1d442677..74913eb31d 100644
--- a/acceptancetesting/src/test/cucumber/routing.feature
+++ b/acceptancetesting/src/test/cucumber/routing.feature
@@ -354,7 +354,7 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @WebOnly
+   @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Southampton to London)
     Given I have route point as
       | pointA                                                            | pointB                                 |
@@ -372,7 +372,7 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @WebOnly
+   @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Hounslow to Slough)
     Given I have route point as
       | pointA                              | pointB                                      |
@@ -390,7 +390,7 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @WebOnly
+  @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Southampton to London)
     Given I have route point as
       | pointA                                                     | pointB                                              |
@@ -408,7 +408,7 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @WebOnly
+   @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Birmingham to reading)
     Given I have route point as
       | pointA                                                      | pointB                                                                                |
@@ -426,7 +426,7 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @WebOnly
+   @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Southhampton to London)
     Given I have route point as
       | pointA                                               | pointB                           |
@@ -444,7 +444,7 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @WebOnly
+   @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Coventry)
     Given I have route point as
       | pointA                                                         | pointB                              |
@@ -463,7 +463,7 @@ Feature: Verify a route from A to B
       | vehicleType | avoidances | routeType |
       | car         |            | fastest   |
 
-  @Routing @WebOnly
+  @WebOnly
   Scenario Outline: Verify  Route using Full UK Address (Kington to London )
     Given I have route point as
       | pointA                           | pointB                                |
