diff --git a/core/src/main/java/com/graphhopper/routing/util/OsCarFlagEncoder.java b/core/src/main/java/com/graphhopper/routing/util/OsCarFlagEncoder.java
index 4d5c120f66..9349376514 100644
--- a/core/src/main/java/com/graphhopper/routing/util/OsCarFlagEncoder.java
+++ b/core/src/main/java/com/graphhopper/routing/util/OsCarFlagEncoder.java
@@ -8,19 +8,20 @@
 	private EncodedValue startStopEncoder;
 	
 	public OsCarFlagEncoder() {
-		super(5, 5, 0);
-		restrictedValues.clear();
+		this(5, 5, 0);
 //		setOsAvoidanceDecorator();
 	}
 
 	public OsCarFlagEncoder(String propertiesStr) {
 		super(propertiesStr);
+		maxPossibleSpeed = SEVENTY_MPH_IN_KPH;
 		restrictedValues.clear();
 //		setOsAvoidanceDecorator();
 	}
 
 	public OsCarFlagEncoder(int speedBits, double speedFactor, int maxTurnCosts) {
 		super(speedBits, speedFactor, maxTurnCosts);
+		maxPossibleSpeed = SEVENTY_MPH_IN_KPH;
 		restrictedValues.clear();
 //		setOsAvoidanceDecorator();
 	}
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/OSCarFlagEncoderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/OSCarFlagEncoderTest.java
index 9d80203fa5..c4adc5871a 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/OSCarFlagEncoderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/OSCarFlagEncoderTest.java
@@ -8,6 +8,8 @@
 import org.junit.Before;
 import org.junit.Test;
 
+import com.graphhopper.reader.OSMWay;
+import com.graphhopper.routing.util.CarFlagEncoder;
 import com.graphhopper.routing.util.DefaultEdgeFilter;
 import com.graphhopper.routing.util.EncodingManager;
 import com.graphhopper.routing.util.OsCarFlagEncoder;
@@ -68,4 +70,24 @@ public void testReadSimplePrivateRestrictedCrossRoads() throws IOException
 		checkSimpleNodeNetwork(graph);
 		checkAccessNodeNetwork(graph, osCarEncoder, true);
 	}
+	
+	@Test
+	/**
+	 * Tests that the max speed for an OS car is 70mph.
+	 * 
+	 * Note that the 70mph is factored to be divisible by five such that it fits the current factor 5 speed encoding.
+	 * @throws IOException
+	 */
+	public void testMaxSpeedForCaris70mph() throws IOException {
+		
+		final int factoredMPHinKPH = (CarFlagEncoder.SEVENTY_MPH_IN_KPH/5)*5;
+		
+        OSMWay way = new OSMWay(1);
+        way.setTag("highway", "motorway");
+        way.setTag("maxspeed", "120");
+        long allowed = osCarEncoder.acceptWay(way);
+        long encoded = osCarEncoder.handleWayTags(way, allowed, 0);
+        assertEquals(factoredMPHinKPH, osCarEncoder.getSpeed(encoded), 1e-1);
+
+	}
 }
