diff --git a/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java b/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java
index 05d00b4e2f..a27bc67226 100644
--- a/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/AbstractOsInputFile.java
@@ -46,6 +46,7 @@
      * The factory to use to create RoutingElements. eg Itn, Dpn or Hn
      */
     private AbstractRoutingElementFactory<T> abstractFactory;
+	private String dataVersion;
 
     public AbstractOsInputFile(File file, AbstractRoutingElementFactory<T> abstractFactory) throws IOException {
         this(file, abstractFactory, "id");
@@ -66,6 +67,11 @@ public AbstractOsInputFile(File file, AbstractRoutingElementFactory<T> abstractF
     public InputStream getInputStream() {
         return bis;
     }
+    
+    public String getDataVersion()
+    {
+	    return dataVersion;
+    }
 
     public AbstractRoutingElementFactory<T> getAbstractFactory() {
         return abstractFactory;
@@ -156,7 +162,7 @@ private void openXMLStream(InputStream in) throws XMLStreamException {
             throw new IllegalArgumentException(String.format(
                     "File %s not a valid OS ITN stream", name));
         }
-
+        dataVersion = parser.getAttributeValue(null, idKey);
         eof = false;
     }
 
diff --git a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
index 99932e4d4e..85e58e8c85 100755
--- a/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
+++ b/core/src/main/java/com/graphhopper/reader/osgb/itn/OsItnReader.java
@@ -275,6 +275,7 @@ protected void preProcessSingleFile( File itnFile ) throws XMLStreamException, I
 			logger.error(PREPROCESS_FORMAT, itnFile.getName());
 			in = new OsItnInputFile(itnFile);
 			in.setWorkerThreads(workerThreads).open();
+			graphStorage.getProperties().put("itn.data_version", in.getDataVersion());
 			preProcessSingleFile(in);
 		} finally
 		{
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
index d2d5af1a39..ad6a28d963 100755
--- a/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/itn/OsItnReaderTest.java
@@ -20,6 +20,8 @@
 import static com.graphhopper.util.GHUtility.count;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
 
 import java.io.File;
@@ -52,7 +54,19 @@
 public class OsItnReaderTest extends AbstractOsItnReaderTest {
 
     private static final Logger logger = LoggerFactory.getLogger(OsItnReaderTest.class);
-    private static final InputStream COMPLEX_ITN_EXAMPLE = OsItnReader.class.getResourceAsStream("os-itn-sample.xml");
+    
+    @Test
+    public void testReadVersionInfo() throws IOException {
+        final boolean turnRestrictionsImport = true;
+        final boolean is3D = false;
+        final GraphHopperStorage graph = configureStorage(turnRestrictionsImport, is3D);
+
+        final File file = new File("./src/test/resources/com/graphhopper/reader/os-itn-no-entry-multipoint-crossroad.xml");
+        readGraphFile(graph, file);
+        
+        assertNotNull(graph.getProperties().get("itn.data_version"));
+        assertNotEquals("", graph.getProperties().get("itn.data_version"));
+    }
 
     @Test
     public void testReadItnNoEntryMultipointCrossroad() throws IOException {
diff --git a/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java b/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java
index de859e1b89..3488bfdf28 100644
--- a/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java
+++ b/tools/src/main/java/com/graphhopper/tools/routeExtractor/AbstractProblemRouteExtractor.java
@@ -250,7 +250,7 @@ private TLongArrayList populateFidList() {
 
         private boolean isEndBlock(final String curLine) {
             boolean endBlock = false;
-            switch (curLine) {
+            switch (curLine.trim()) {
             case "</osgb:networkMember>":
             case "</osgb:roadInformationMember>":
             case "</osgb:roadMember>": {
