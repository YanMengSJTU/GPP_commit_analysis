diff --git a/core/src/main/java/com/graphhopper/routing/weighting/TDWeighting.java b/core/src/main/java/com/graphhopper/routing/weighting/TDWeighting.java
index 8803fc5135..a5ef56baae 100644
--- a/core/src/main/java/com/graphhopper/routing/weighting/TDWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/weighting/TDWeighting.java
@@ -25,5 +25,6 @@
 
     long calcTDMillis(EdgeIteratorState edge, boolean reverse, int prevOrNextEdgeId, long linkEnterTime);
 
+    long getInitialTime();
 }
 
diff --git a/core/src/main/java/com/graphhopper/util/details/TimeDetails.java b/core/src/main/java/com/graphhopper/util/details/TimeDetails.java
index d65d314d39..816ee61f45 100644
--- a/core/src/main/java/com/graphhopper/util/details/TimeDetails.java
+++ b/core/src/main/java/com/graphhopper/util/details/TimeDetails.java
@@ -17,6 +17,7 @@
  */
 package com.graphhopper.util.details;
 
+import com.graphhopper.routing.weighting.TDWeighting;
 import com.graphhopper.routing.weighting.Weighting;
 import com.graphhopper.util.EdgeIteratorState;
 
@@ -32,18 +33,27 @@
     private final Weighting weighting;
 
     private int edgeId = -1;
+    private long accumulatedTime = 0;
     private long time = 0;
 
     public TimeDetails(Weighting weighting) {
         super(TIME);
         this.weighting = weighting;
+        if (weighting instanceof TDWeighting) {
+            this.accumulatedTime = ((TDWeighting) weighting).getInitialTime();
+        }
     }
 
     @Override
     public boolean isEdgeDifferentToLastEdge(EdgeIteratorState edge) {
         if (edge.getEdge() != edgeId) {
             edgeId = edge.getEdge();
-            time = weighting.calcMillis(edge, false, -1);
+            if (weighting instanceof TDWeighting) {
+                time = ((TDWeighting) weighting).calcTDMillis(edge, false, -1, accumulatedTime);
+            } else {
+                time = weighting.calcMillis(edge, false, -1);
+            }
+            accumulatedTime += time;
             return true;
         }
         return false;
diff --git a/web-bundle/src/main/java/com/graphhopper/swl/FastestCarTDWeighting.java b/web-bundle/src/main/java/com/graphhopper/swl/FastestCarTDWeighting.java
index e5f8e621e4..3c0aa477c2 100644
--- a/web-bundle/src/main/java/com/graphhopper/swl/FastestCarTDWeighting.java
+++ b/web-bundle/src/main/java/com/graphhopper/swl/FastestCarTDWeighting.java
@@ -91,6 +91,11 @@ public long calcTDMillis(EdgeIteratorState edge, boolean reverse, int prevOrNext
         return time;
     }
 
+    @Override
+    public long getInitialTime() {
+        return 0;
+    }
+
     @Override
     public FlagEncoder getFlagEncoder() {
         return encoder;
