diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
index 3ab827ecbc..20ff0acd71 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
@@ -9,6 +9,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.net.InetSocketAddress;
+import java.nio.ByteBuffer;
 import java.util.stream.IntStream;
 
 /**
@@ -61,7 +62,7 @@ public static void run(int initialVehicles)
                         logger.info("===ITERATION [" + i + "]===");
                         i++;
                         mh.timestep();
-                        String data = mh.getVehicleData();
+                        ByteBuffer data = mh.getVehicleBytes();
                         mss.distributeData(data);
                     }
                     try
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
index 3a92c671c3..a8ded228b4 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
@@ -8,6 +8,7 @@
 import org.slf4j.LoggerFactory;
 
 import java.io.IOException;
+import java.nio.ByteBuffer;
 import java.util.*;
 import java.util.stream.Collectors;
 import java.util.stream.IntStream;
@@ -84,9 +85,17 @@ public synchronized void timestep()
         vehicles = vehicles.stream().filter(v -> !v.isFinished()).collect(Collectors.toList());
     }
 
-    public synchronized String getVehicleData()
+    public synchronized String getVehicleString()
     {
-        return vehicles.parallelStream().map(Vehicle::toString).collect(Collectors.joining(","));
+        return vehicles.stream().map(Vehicle::toString).collect(Collectors.joining(","));
+    }
+
+    public synchronized ByteBuffer getVehicleBytes()
+    {
+        ByteBuffer buffer =  ByteBuffer.allocate(vehicles.size() * 4 * 6);
+        vehicles.stream().forEach(v -> v.addToBuffer(buffer));
+        buffer.rewind();
+        return buffer;
     }
 
     public GraphHopper getGraphHopper()
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
index 4e83573e88..8f0c5796ad 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
@@ -8,6 +8,7 @@
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
+import java.nio.ByteBuffer;
 import java.util.Collections;
 import java.util.HashSet;
 import java.util.Set;
@@ -31,6 +32,11 @@ public synchronized void distributeData(String s)
         sockets.stream().forEach(socket -> socket.send(s));
     }
 
+    public void distributeData(ByteBuffer data)
+    {
+        sockets.stream().forEach(socket -> socket.send(data));
+    }
+
     @Override
     public void stop()
     {
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
index 65e05d8800..85a773f024 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
@@ -11,6 +11,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import java.nio.ByteBuffer;
 import java.util.List;
 import java.util.Random;
 import java.util.stream.Collectors;
@@ -217,4 +218,10 @@ public String toString()
         return String.format("%d|%s|%d", id, loc.toString(), v);
     }
 
+    public void addToBuffer(ByteBuffer b)
+    {
+        int pos = b.position();
+        b.putInt(id).putInt(v).putDouble(loc.getLat()).putDouble(loc.getLon());
+        logger.debug(String.format("[%d]%d|%d|%f|%f", id, b.getInt(pos), b.getInt(pos + 4), b.getDouble(pos + 8), b.getDouble(pos + 16)));
+    }
 }
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index 9f61247ccb..8a23695c76 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -59,6 +59,7 @@ var carSet = {
         }
 
         this.ws = new WebSocket("ws://localhost:8888");
+        this.ws.binaryType = "arraybuffer";
         this.ws.onmessage = function (e) {
             this.processData(e.data);
         }.bind(this);
@@ -82,13 +83,15 @@ var carSet = {
 
     // deals with the set of data that comes from the websocket
     processData: function(data) {
-        var msgs = data.split(",");
-        for (var i = 0; i < msgs.length; i++) {
-            var msg = msgs[i].split("|");
-            var lat = parseFloat(msg[1]);
-            var lon = parseFloat(msg[2]);
-            var vel = parseInt(msg[3]);
-            var index = parseInt(msg[0]);
+        if (!data instanceof ArrayBuffer) {
+            return;
+        }
+        var view = new DataView(data);
+        for (var i = 0; i < data.byteLength; i += 24) {
+            var index = view.getInt32(i);
+            var vel = view.getInt32(i + 4);
+            var lat = view.getFloat64(i + 8);
+            var lon = view.getFloat64(i + 16);
             if (this._cars[index]) {
                 this._cars[index].moveTo(lat, lon, vel);
             } else {
@@ -102,7 +105,7 @@ var Car = function(id, vel, lat, lon) {
     this.id = id;
     this.vel = vel;
     this.pos = [lat, lon];
-    this.moveTo(lat, lon);
+    this.moveTo(lat, lon, vel);
 };
 
 Car.prototype = {
