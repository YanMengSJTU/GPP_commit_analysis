diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
index 554543161a..eb50d01d36 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
@@ -134,6 +134,10 @@ public String parseRoute(String routeType, String avoidances,String routeOptions
 				
 		String apikey = IntegrationTestProperties.getTestProperty("apiKey");
 
+		if (vehicle.equalsIgnoreCase("mountainbike"))
+		{
+			vehicle="mtb";
+		}
 		StringBuilder sb = new StringBuilder();
 		sb.append(graphHopperUrl);
 		sb.append("route?");
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
index 66604c71e7..1a007a48da 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
@@ -174,7 +174,9 @@ public void parse(String routeType, String avoidances, String routeOptions,
 		}
 
 		String apikey = IntegrationTestProperties.getTestProperty("apiKey");
-
+		if (vehicle.equalsIgnoreCase("mountainbike")) {
+			vehicle = "mtb";
+		}
 		StringBuilder sb = new StringBuilder();
 		sb.append(graphHopperUrl);
 		sb.append("route?");
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperComponentIdentification.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperComponentIdentification.java
index 6f51c11ca4..aa04c222ba 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperComponentIdentification.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperComponentIdentification.java
@@ -15,6 +15,7 @@
 	public static final ComponentIdentifier ADD_WAYPOINT= new ComponentByXPATH("//*[@class='pointAdd']");
 	public static final  ComponentIdentifier ROUTE_TYPE_CAR = new ComponentID("car");
 	public static final  ComponentIdentifier ROUTE_TYPE_BIKE = new ComponentID("bike");
+	public static final  ComponentIdentifier ROUTE_TYPE_MOUNTAINBIKE = new ComponentByXPATH("//*[@id='mtb']");
 	public static final  ComponentIdentifier ROUTE_TYPE_WALK = new ComponentID("foot");
 	public static final  ComponentIdentifier ROUTE_SEARCH = new ComponentID("searchButton");
 	public static final  ComponentIdentifier WAYPOINT_ONMAP = new ComponentByXPATH("//*[@class='leaflet-popup-content']", INNER_HTML);
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
index 1361d85ba1..b42d61146f 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperHooks.java
@@ -1,7 +1,5 @@
 package uk.co.ordnancesurvey.routing;
 
-import gherkin.formatter.model.Feature;
-
 import java.io.IOException;
 import java.text.ParseException;
 import java.util.List;
@@ -12,7 +10,6 @@
 import uk.co.ordnancesurvey.gpx.graphhopper.IntegrationTestProperties;
 import cucumber.api.Scenario;
 import cucumber.api.java.After;
-import cucumber.api.java.Before;
 import cucumber.api.java.en.Given;
 import cucumber.api.java.en.Then;
 
@@ -90,7 +87,7 @@ public void getRouteWithAvoidances(String pointA, String pointB,
 		case "WEB":
 
 			graphUiUtil
-					.getRouteFromUI(routeOptions, "", pointA, pointB, pointC);
+					.getRouteFromUI(routeOptions, avoidance, pointA, pointB, pointC);
 			break;
 		case "SERVICE":
 			graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
@@ -102,9 +99,9 @@ public void getRouteWithAvoidances(String pointA, String pointB,
 				graphUiUtil.getRouteFromServiceWithAvoidance(routeOptions,
 						avoidance, pointA, pointB, pointC);
 				graphUiUtil
-						.getRouteFromUI(routeOptions, pointA, pointB, pointC);
+						.getRouteFromUI(routeOptions, avoidance,pointA, pointB, pointC);
 			} else {
-				graphUiUtil.getRouteFromUI(routeOptions, "", pointA, pointB,
+				graphUiUtil.getRouteFromUI(routeOptions, avoidance, pointA, pointB,
 						pointC);
 			}
 
@@ -113,7 +110,7 @@ public void getRouteWithAvoidances(String pointA, String pointB,
 		}
 
 	}
-
+/*
 	public void getRoute(String pointA, String pointB, String routeOptions,
 			String pointC, String pointD) throws InterruptedException {
 
@@ -148,7 +145,7 @@ public void getRoute(String pointA, String pointB, String routeOptions,
 
 		}
 
-	}
+	}*/
 
 	@Given("^I request a route between \"([^\"]*)\" and \"([^\"]*)\" as a \"([^\"]*)\" from RoutingAPI and avoid \"([^\"]*)\" via \"([^\"]*)\" and \"([^\"]*)\"$")
 	public void getRouteWithAvoidances(String pointA, String pointB,
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index 22f6a45599..632d0b716f 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -367,11 +367,12 @@ public boolean isWayPointonRouteMap(String wayPointIndex,
 				isWayPointonRouteMapService = GPHJsonService
 						.isWayPointinPath(wp);
 			}
+			isWayPointonRouteMap=(isWayPointonRouteMapUI) && (isWayPointonRouteMapService);
 
 			break;
 		}
 
-		return (isWayPointonRouteMapUI) && (isWayPointonRouteMapService);
+		return isWayPointonRouteMap;
 
 	}
 
diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index 2031d40fe4..3c325d03f6 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -5,130 +5,129 @@ Feature: Verify a route from A to B
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Mill lane-BUXTON)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco        | waypointdesc            | azimuth | direction | time  | distance | avoidance |
       | 4             | 53.1356,-1.820891 | Continue onto Mill Lane | 70.0    | E         | 23171 | 32.2     |           |
 
     Examples: 
-      | pointA              | pointB             | routetype | avoidances |
-      | 53.176062,-1.871472 | 53.154773,-1.77272 | foot      |            |
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 53.176062,-1.871472 | 53.154773,-1.77272 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Chatswoth Park)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.221055,-1.623152 | Turn right onto B Road        | 157.0   | SE        | 984273 | 1367.1   |           |
       | 5             | 53.197269,-1.608797 | Continue onto Chatsworth Road | 181.0   | S         | 678871 | 942.9    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.211013,-1.619393 | 53.185757,-1.611969 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.211013,-1.619393 | 53.185757,-1.611969 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Musden Low)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance | avoidance |
       | 3             | 53.042479,-1.820522 | Turn right onto Route | 297.0   | NW        | 35181 | 48.9     |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.049589,-1.823866 | 53.076372,-1.853379 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.049589,-1.823866 | 53.076372,-1.853379 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (A54)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc         | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.176842,-2.069334 | Turn left onto Track | 255.0   | W         | 187602 | 260.6    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.173064,-2.060321 | 53.214387,-2.017271 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.173064,-2.060321 | 53.214387,-2.017271 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Townhead )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance | avoidance |
       | 5             | 53.11862,-1.909506 | Turn slight left onto Route | 169.0   | S         | 51007 | 70.8     |           |
 
     Examples: 
-      | pointA              | pointB             | routetype | avoidances |
-      | 53.122676,-1.909914 | 53.088159,-1.87142 | foot      |            |
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 53.122676,-1.909914 | 53.088159,-1.87142 | foot         |            |
 
- @Routing 
+  @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Martin's Low)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance | avoidance |
-      | 3             | 53.071624,-1.914417 | Turn right onto Path | 356.0  | N         | 425697 | 591.2     |           |
-
+      | wayPointIndex | waypointco          | waypointdesc         | azimuth | direction | time   | distance | avoidance |
+      | 3             | 53.071624,-1.914417 | Turn right onto Path | 356.0   | N         | 425697 | 591.2    |           |
 
     Examples: 
-      | pointA             | pointB              | routetype | avoidances |
-      | 53.06535,-1.906169 | 53.100994,-1.956274 | foot      |            |
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 53.06535,-1.906169 | 53.100994,-1.956274 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Castleton Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.347406,-1.760973 | Turn left onto Castleton Road | 109.0   | E         | 878424 | 1220.0   | ARoad     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Hernstone Lane )
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time   | distance | avoidance |
       | 3             | 53.305821,-1.814508 | Continue onto Hernstone Lane | 299.0   | NW        | 304923 | 423.5    | ARoad     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Monyash Road)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time   | distance | avoidance |
       | 5             | 53.20882,-1.688212 | Continue onto Monyash Road | 55.0    | NE        | 482979 | 670.8    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.194909,-1.710481 | 53.156696,-1.634947 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.194909,-1.710481 | 53.156696,-1.634947 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Whitfield lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.143286,-1.647841 | Turn right onto Elton Road | 282.0   | W         | 195384 | 271.4    |           |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.142876,-1.642599 | 53.163897,-1.714249 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.142876,-1.642599 | 53.163897,-1.714249 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  (Cardlemere Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time   | distance | avoidance |
       | 4             | 53.129383,-1.754591 | Turn left onto Cardlemere Lane | 121.0   | SE        | 594909 | 826.3    |           |
 
     Examples: 
-      | pointA              | pointB             | routetype | avoidances |
-      | 53.114295,-1.762789 | 53.086961,-1.69626 | foot      |            |
+      | pointA              | pointB             | routeOptions | avoidances |
+      | 53.114295,-1.762789 | 53.086961,-1.69626 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Old Coalpit Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.23952,-1.803512  | Turn left onto Sough Lane       | 189.0   | S         | 452948 | 629.1    |           |
@@ -136,24 +135,24 @@ Feature: Verify a route from A to B
       | 34            | 53.129146,-1.866738 | Turn left onto Cheadle Road     | 179.0   | S         | 171195 | 237.8    |           |
 
     Examples: 
-      | pointA              | pointB            | pointC              | routetype | avoidances |
-      | 53.238625,-1.794511 | 53.1651,-1.776435 | 53.125221,-1.871205 | foot      |            |
+      | pointA              | pointB            | pointC              | routeOptions | avoidances |
+      | 53.238625,-1.794511 | 53.1651,-1.776435 | 53.125221,-1.871205 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Newhouses Farm)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time    | distance | avoidance |
       | 7             | 53.305394,-1.819253 | Turn slight right onto Hernstone Lane | 66.0    | NE        | 304923  | 423.5    | ARoad     |
       | 14            | 53.25475,-1.727239  | Continue onto Castlegate Lane         | 183.0   | S         | 1156073 | 1605.7   |           |
 
     Examples: 
-      | pointA              | pointB             | pointC              | routetype | avoidances |
-      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      |            |
+      | pointA              | pointB             | pointC              | routeOptions | avoidances |
+      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Bakewell)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time    | distance | avoidance |
       | 6             | 53.145466,-1.778242 | Continue onto Tissington Trail | 17.0    | N         | 2006616 | 2787.0   |           |
@@ -161,12 +160,12 @@ Feature: Verify a route from A to B
       | 19            | 53.20882,-1.688212  | Continue onto Monyash Road     | 55.0    | NE        | 369935  | 513.8    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC              | routetype | avoidances |
-      | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 | foot      |            |
+      | pointA              | pointB              | pointC              | routeOptions | avoidances |
+      | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Mill Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance | avoidance |
       | 5             | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |           |
@@ -174,12 +173,12 @@ Feature: Verify a route from A to B
       | 16            | 53.181282,-1.869038 | Turn left onto Market Place     | 315.0   | NW        | 791    | 1.1      |           |
 
     Examples: 
-      | pointA              | pointB              | pointC             | pointD              | routetype | avoidances |
-      | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 | foot      |            |
+      | pointA              | pointB              | pointC             | pointD              | routeOptions | avoidances |
+      | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Tag Lane)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time    | distance | avoidance |
       | 7             | 53.227765,-1.848174 | Turn left onto Old Coalpit Lane | 58.0    | NE        | 908755  | 1262.2   | ARoad     |
@@ -188,12 +187,12 @@ Feature: Verify a route from A to B
       | 32            | 53.224822,-1.70717  | Turn left onto Hall End Lane    | 59.0    | NE        | 80272   | 111.5    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC              | pointD              | routetype | avoidances |
-      | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 | foot      |            |
+      | pointA              | pointB              | pointC              | pointD              | routeOptions | avoidances |
+      | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 | foot         |            |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Dowlow Farm)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>" via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance | avoidance |
       | 2             | 53.206014,-1.83483  | Turn right onto Midshires Way | 191.0   | S         | 265210 | 368.3    |           |
@@ -201,59 +200,60 @@ Feature: Verify a route from A to B
       | 28            | 53.124725,-1.870683 | Turn right onto Cheadle Road  | 243.0   | SW        | 121072 | 168.2    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC              | pointD             | routetype | avoidances |
-      | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 | foot      |            |
+      | pointA              | pointB              | pointC              | pointD             | routeOptions | avoidances |
+      | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 | foot         |            |
 
   # Avoidances : A Road,Boulders,Cliff,Inland Water,Marsh,Quarry Or Pit,Scree,Rock,Mud,Sand,Shingle
   #scree
   @Routing
   Scenario Outline: Verify DPN Route without Scree avoidance -(scree)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance | avoidance |
       | 15            | 53.252061,-1.826618 | Continue onto Path | 97.0    | E         | 24386 | 33.9     | Scree     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot         |            |
 
   @Routing
   Scenario Outline: Verify DPN Route with Scree avoidance -(scree)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance | avoidance |
       | 15            | 53.252061,-1.826618 | Continue onto Path | 97.0    | E         | 24386 | 33.9     | Scree     |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      | Scree      |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot         | Scree      |
 
   #cliff
   ##############
-  @Routing  @Current
+  @Routing
   Scenario Outline: Verify DPN Route without cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
-      | 5             | 53.311409,-1.627165 | Continue onto Route | 178.0  | S         | 2655 | 3.7   | Cliff     |
-   Examples: 
-      | pointA             | pointB              | routetype | avoidances |
-      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      |            |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
+      | 5             | 53.311409,-1.627165 | Continue onto Route | 178.0   | S         | 2655 | 3.7      | Cliff     |
+
+    Examples: 
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot         |            |
 
- @Routing @Current
+  @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
-        | 5             | 53.311409,-1.627165 | Continue onto Route | 178.0  | S         | 2655 | 3.7   | Cliff     |
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
+      | 5             | 53.311409,-1.627165 | Continue onto Route | 178.0   | S         | 2655 | 3.7      | Cliff     |
 
     Examples: 
-      | pointA             | pointB              | routetype | avoidances |
-      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      | Cliff      |
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot         | Cliff      |
 
   @Routing
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
       | 3             | 53.547029,-1.979038 | Continue onto Route | 191.0   | S         | 3920 | 5.4      | Cliff     |
@@ -261,12 +261,11 @@ Feature: Verify a route from A to B
       | 7             | 53.542735,-1.981237 | Continue onto Route | 185.0   | S         | 9321 | 12.9     | Cliff     |
 
     Examples: 
-      | pointA            | pointB              | routetype | avoidances |
-      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      |            |
+      | pointA            | pointB              | routeOptions | avoidances |
+      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot         |            |
 
-  @Current
   Scenario Outline: Verify DPN Route with cliff avoidance -(cliff)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance | avoidance |
       | 3             | 53.547029,-1.979038 | Continue onto Route | 191.0   | S         | 3920 | 5.4      | Cliff     |
@@ -274,53 +273,63 @@ Feature: Verify a route from A to B
       | 7             | 53.542735,-1.981237 | Continue onto Route | 185.0   | S         | 9321 | 12.9     | Cliff     |
 
     Examples: 
-      | pointA            | pointB              | routetype | avoidances |
-      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      | Cliff      |
+      | pointA            | pointB              | routeOptions | avoidances |
+      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot         | Cliff      |
 
   #boulders
   @Routing
   Scenario Outline: Verify DPN Route without boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
       | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    | Boulders  |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      |            |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot         |            |
 
-  @Current
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance | avoidance |
       | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    | Boulders  |
 
     Examples: 
-      | pointA              | pointB              | routetype | avoidances |
-      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      | Boulders   |
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot         | Boulders   |
 
   #Multiple Avoidance
-  @Routing @Avoidance
+  @Routing
   Scenario Outline: Verify DPN Route without boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
       | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0   | E         | 1660   | 2.3      | Cliff     |
       | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0   | SE        | 178328 | 247.7    | Boulders  |
 
     Examples: 
-      | pointA            | pointB              | routetype | avoidances |
-      | 53.5534,-1.983177 | 53.490733,-1.977715 | foot      |            |
+      | pointA            | pointB              | routeOptions | avoidances |
+      | 53.5534,-1.983177 | 53.490733,-1.977715 | foot         |            |
 
-  @Routing @Avoidance
+  @Routing
   Scenario Outline: Verify DPN Route with boulders avoidance -(boulders)
-    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidances>"
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance | avoidance |
       | 6             | 53.545217,-1.986871 | Continue onto Route | 106.0   | E         | 1660   | 2.3      | Cliff     |
       | 9             | 53.545038,-1.986338 | Continue onto Route | 130.0   | SE        | 178328 | 247.7    | Boulders  |
 
     Examples: 
-      | pointA            | pointB              | routetype      | avoidances     |
+      | pointA            | pointB              | routeOptions   | avoidances     |
       | 53.5534,-1.983177 | 53.490733,-1.977715 | foot,fastavoid | Boulders,Cliff |
+
+  @Current
+  Scenario Outline: Verify DPN Route with boulders avoidance -()
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                        | azimuth | direction | time  | distance | avoidance         |
+      | 1             | 53.297007,-1.679015 | Continue onto Sir William Hill Road | 79.0    | E         | 61737 | 308.7    | cycleway, unpaved |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.298525,-1.679533 | 53.203145,-1.799292 | mountainbike |            |
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
index d5fb029403..31f8b33b08 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
@@ -431,8 +431,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                          | azimuth | direction | time  | distance | avoidance |
-      | 2             | 50.732011,-3.53798 | Turn slight left onto STREATHAM DRIVE | 234.0   | SW        | 11955 | 152.2    |           |
-
+      | 2             | 50.727823,-3.540036 | Turn slight left onto HELE ROAD | 85.0   | E        | 12281 | 153.5    |           |
     Examples: 
       | pointA              | pointB             | routeOptions | avoidances |
       | 50.729373,-3.540902 | 50.725564,-3.51809 | car,shortest |            |
@@ -442,7 +441,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc             | azimuth | direction | time | distance | avoidance |
-      | 2             | 50.733417,-3.524972 | Continue onto UNION ROAD | 77.0    | E         | 5507 | 68.8     |           |
+      | 2             | 50.733417,-3.524972 | Continue onto UNION ROAD | 77.0    | E         | 2478 | 68.8     |           |
 
     Examples: 
       | pointA              | pointB             | routeOptions | avoidances |
diff --git a/acceptancetesting/src/test/cucumber/routing.feature b/acceptancetesting/src/test/cucumber/routing.feature
index 9fe5a60df7..c67fbdf1c9 100644
--- a/acceptancetesting/src/test/cucumber/routing.feature
+++ b/acceptancetesting/src/test/cucumber/routing.feature
@@ -434,23 +434,13 @@ Feature: Verify a route from A to B
       | 56.38721,-3.466273 | 56.136656,-3.970408 | 55.871665,-4.195067 | 55.950467,-3.208924 | car,fastest  |            |
 
   @Routing
-  Scenario Outline: Verify  nearest point of point using NearestPoint API
+  Scenario Outline: Verify  nearest point on a Route
     Given I request a nearest point from  "<pointA>" from Nearest Point API
     Then I should be able to verify the nearest point to be "<pointB>" at a distance of "<distance>"
 
     Examples: 
-      | pointA                                 | pointB                                 | distance           |
-      | 51.878966,-0.903849                    | 51.875144098888576,-0.9107481891829116 | 636.3215777261629  |
-      | 53.101756,-1.954888                    | 53.10043020792586,-1.961414745138117 | 460.0011625834564  |
-      | 53.065293927002806,-1.9071498141906338 | 53.065293927002806,-1.9071498141906338 | 0                  |
-      | 52.784893,-1.84522                     | 52.79515894789604,-1.8521510478589918  | 1233.001210212637   |
-      | 52.79515894789604,-1.8521510478589918  | 52.79515894789604,-1.8521510478589918  | 0                  |
-      | 54.094977,-2.006081                    | 54.09420551570219,-2.0283477834242833  | 1454.551799711362  |
-      | 54.115309,-2.111881                    | 54.133065323525635,-2.131028334744908  | 2335.612435123903  |
-      | 54.095897,-2.144795                    | 54.08689388826998,-2.1488754559056935  | 1035.8644445463867 |
-      | 50.658849,-1.386463                    | 50.65520130477257,-1.4000444889283343  | 1039.7773305822475 |
-      | 56.025277,-4.917874                    | 56.02196904113215,-4.906092518708935   | 819.3253424080308  |
-      | 50.664175,-1.358463                    | 50.66192580003871,-1.3486298102579224  | 736.8284619868352  |
+      | pointA              | pointB                                 | distance          |
+      | 51.878966,-0.903849 | 51.875144098888576,-0.9107481891829116 | 636.3215777261629 |
 
   # Fastest and Shortest Route Scenarios
   @Routing
@@ -478,3 +468,124 @@ Feature: Verify a route from A to B
     Examples: 
       | pointA                                 | pointB                                 | routeOptions | avoidances |
       | 51.471546541834144,-0.3618621826171875 | 51.45914115860512,-0.96679687499999995 | car,fastest  |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route from London to Liverpool
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                                      | azimuth | direction | time    | distance | avoidance |
+      | 9             | 53.47091,-2.632536  | Turn slight left onto M6                          | 186.0   | S         | 6600018 | 183338.0 |           |
+      | 11            | 51.632754,-0.299837 | Continue onto A41 (EDGWARE WAY (WATFORD BY-PASS)) | 156.0   | SE        | 48011   | 1267.0   |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.432923,-2.971511 | 51.505165,-0.147902 | car,fastest  |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route from London to Liverpool
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                                        | azimuth | direction | time  | distance | avoidance |
+      | 30            | 53.340148,-2.735071 | Turn slight left onto A533 (BRIDGEWATER EXPRESSWAY) | 96.0    | E         | 34015 | 897.7    |           |
+      | 41            | 53.291868,-2.591888 | Turn slight right onto A49 (WARRINGTON ROAD)        | 162.0   | S         | 99801 | 2633.8   |           |
+      | 80            | 53.101356,-2.286824 | Turn slight left onto LINLEY LANE (A50)             | 174.0   | S         | 6872  | 85.9     |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 53.432923,-2.971511 | 51.505165,-0.147902 | car,shortest |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route in Isle of Wight
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time   | distance | avoidance |
+      | 5             | 50.705368,-1.324668 | Turn right onto GUNVILLE ROAD         | 161.0   | S         | 119526 | 1494.1   |           |
+      | 9             | 50.687826,-1.320457 | Turn right onto BOWCOMBE ROAD (B3323) | 200.0   | S         | 274969 | 3715.5   |           |
+
+    Examples: 
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.690318,-1.38526 | 50.664175,-1.358463 | car,fastest  |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route in Isle of Wight
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                               | azimuth | direction | time  | distance | avoidance |
+      | 6             | 50.643066,-1.391581 | Turn left onto LIMERSTONE ROAD (B3399)     | 77.0    | E         | 74475 | 1034.4   |           |
+      | 10            | 50.64454,-1.354991  | Turn slight left onto FARRIERS WAY (B3323) | 11.0    | N         | 22784 | 284.8    |           |
+
+    Examples: 
+      | pointA             | pointB              | routeOptions | avoidances |
+      | 50.690318,-1.38526 | 50.664175,-1.358463 | car,shortest |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route  from Stronchullin to Admore
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                           | azimuth | direction | time  | distance | avoidance |
+      | 10            | 56.005209,-4.750748 | Continue onto WEST CLYDE STREET (A814) | 97.0    | E         | 40914 | 1079.8   |           |
+      | 16            | 55.986711,-4.666085 | Continue onto STONEYMOLLAN ROAD        | 2.0     | N         | 44867 | 623.2    |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 56.025277,-4.917874 | 55.992355,-4.636534 | car,fastest  |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route from Stronchullin to Admore
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time   | distance | avoidance |
+      | 5             | 56.09353,-4.836554  | At roundabout, take exit 1 onto A814 | 86.0    | E         | 76206  | 2011.0   |           |
+      | 15            | 55.975811,-4.678383 | Turn left onto RED ROAD              | 42.0    | NE        | 120144 | 1668.7   |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 56.025277,-4.917874 | 55.992355,-4.636534 | car,shortest |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route from Swansea to Bath
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time  | distance | avoidance |
+      | 7             | 51.624622,-3.857058 | At roundabout, take exit 3 onto A483 | 5.0     | N         | 52856 | 1394.9   |           |
+      | 15            | 51.387526,-2.346317 | Turn right onto WARMINSTER ROAD      | 161.0   | S         | 759   | 9.5      |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 51.630586,-3.943108 | 51.386345,-2.344899 | car,fastest  |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route from Swansea to Bath
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                                         | azimuth | direction | time   | distance | avoidance |
+      | 15            | 51.531866,-3.681224 | Turn left onto BRIDGE STREET (B4281)                 | 50.0    | NE        | 780    | 9.8      |           |
+      | 32            | 51.567867,-3.022101 | At roundabout, take exit 1 onto CARDIFF ROAD (B4237) | 36.0    | NE        | 203767 | 2710.8   |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 51.630586,-3.943108 | 51.386345,-2.344899 | car,shortest |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route from Turbo to Plymouth
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time | distance | avoidance |
+      | 10            | 50.413722,-4.328221 | Continue onto A38 (MILL ROAD) | 74.0    | E         | 5105 | 134.8    |           |
+      | 19            | 50.398962,-4.133073 | Turn left onto MAITLAND DRIVE | 36.0    | NE        | 4813 | 60.2     |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.270096,-5.052681 | 50.399429,-4.132644 | car,fastest  |            |
+
+  @Routing
+  Scenario Outline: Verify  waypoints on a Route from Turbo to Plymouth
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routeOptions>" from RoutingAPI and avoid "<avoidances>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                         | azimuth | direction | time   | distance | avoidance |
+      | 15            | 50.292674,-4.941538 | At roundabout, take exit 1 onto A390 | 87.0    | E         | 604536 | 12232.4  |           |
+      | 42            | 50.440131,-4.411407 | Turn slight left onto EAST ROAD      | 87.0    | E         | 24268  | 303.4    |           |
+
+    Examples: 
+      | pointA              | pointB              | routeOptions | avoidances |
+      | 50.270096,-5.052681 | 50.399429,-4.132644 | car,shortest |            |
diff --git a/web/src/main/webapp/index.html b/web/src/main/webapp/index.html
index 1712ab63d0..92f345d8d9 100644
--- a/web/src/main/webapp/index.html
+++ b/web/src/main/webapp/index.html
@@ -9,40 +9,28 @@
         <title>Driving Directions - GraphHopper Maps</title>
         <meta name="description" content="A fast route planner for biking, hiking and more! Based on OpenStreetMap including elevation data. Try out for free!"/>
         <link rel="stylesheet" href="css/leaflet.css?v=0.7.3" />
-        <script type="text/javascript" src="js/leaflet.js?v=0.7.3"></script>
-        <link rel="stylesheet" href="css/Leaflet.Elevation-0.0.2.css" />
-        <script type="text/javascript" src="js/d3.min.js"></script>
-        <script type="text/javascript" src="js/Leaflet.Elevation-0.0.2.min.js"></script>        
-<link href="css/L.Control.Zoomslider.css" rel="stylesheet">
-
         <link rel="stylesheet" href="css/leaflet.contextmenu.css" />
         <link rel="stylesheet" href="css/leaflet.loading.css" />
         <link rel="stylesheet" href="css/ui-lightness/jquery-ui-1.10.4.css" />
-        <script async type="text/javascript" src="js/leaflet.contextmenu.js"></script>
-    
-        <script src="js/proj4.js"></script>
-        <script src="js/proj4leaflet.js"></script>
-        <script src="js/L.Control.Zoomslider.js"></script>
-        <script src="js/leaflet-tilelayer-os-wmts.js"></script>
-        
+
+        <link rel="stylesheet" href="css/Leaflet.Elevation-0.0.2.css" />
+		<link rel="stylesheet" href="css/L.Control.Zoomslider.css">
         <!-- Latest compiled and minified CSS -->
         <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
-        
         <!-- Optional theme -->
         <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap-theme.min.css">
         <!-- Type Ahead -->
         <link rel="stylesheet" type="text/css" href="css/typeahead.css">
-        
-        <script type="text/javascript" src="js/leaflet.loading.js"></script>
-        <script type="text/javascript" src="js/jquery-2.1.0.min.js"></script>        
-        <script type="text/javascript" src="js/jquery-ui-1.10.4.custom.min.js"></script>      
-        <script type="text/javascript" src="js/jquery.history.js"></script>
-        <!--
-        <script type="text/javascript" src="js/jquery.autocomplete.min.js"></script>
-        -->
-        <script type="text/javascript" src="js/jquery.autocomplete.js"></script>
-        <script type="text/javascript" src="js/ghrequest.js?v=0.4.4"></script>
-        <link rel="stylesheet" type="text/css" href="css/style.css" />
+		<link rel="stylesheet" type="text/css" href="css/style.css" />
+		<link rel="prefetch" href="./img/os-logo.png">
+		<link rel="prefetch" href="./img/point_add.png">
+		<link rel="prefetch" href="./img/point_delete.png">
+		<link rel="prefetch" href="img/link.png">
+		<link rel="prefetch" href="img/gpx.png">
+		<link rel="prefetch" href="img/loading.gif">
+		<link rel="prefetch" href="img/marker-small-green.png">
+		<link rel="prefetch" href="img/marker-small-red.png">
+		<link rel="prefetch" href="./css/images/layers.png">
     </head>
     <body>
         <div id="input">
@@ -58,7 +46,6 @@
                     </span>
                     <div id="advanced">
                     <button title="Settings" id="settings-btn">
-                        <img src="img/settings.png" alt="Settings">
                     </button>
                     </div>
                      <div class="collapse">
@@ -147,15 +134,25 @@
         <div id="map">
         </div>
   
+  		<script type="text/javascript" src="js/leaflet.js?v=0.7.3"></script>
+        <script async type="text/javascript" src="js/leaflet.contextmenu.js"></script>
+        <script type="text/javascript" src="js/d3.min.js"></script>
+        <script type="text/javascript" src="js/Leaflet.Elevation-0.0.2.min.js"></script>        
+        <script src="js/proj4.js"></script>
+        <script src="js/proj4leaflet.js"></script>
+        <script src="js/L.Control.Zoomslider.js"></script>
+        <script src="js/leaflet-tilelayer-os-wmts.js"></script>
+        <script type="text/javascript" src="js/leaflet.loading.js"></script>
         <script type="text/javascript" src="js/jquery-2.1.3.min.js"></script>
         <script type="text/javascript" src="js/jquery-ui-1.10.4.custom.min.js" defer></script>      
+        <script type="text/javascript" src="js/jquery.history.js"></script>
 <!--         <script type="text/javascript" src="js/jquery.autocomplete.min.js"></script> -->
         <script type="text/javascript" src="js/jquery.autocomplete.js"></script>
         <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
     
         <script type='text/javascript' src="js/typeahead.bundle.js"></script>
         <script type="text/javascript" src="js/search.js"></script>
-        <script type="text/javascript" src="js/ghrequest.js?v=0.4.4"></script>
-        <script type="text/javascript" src="js/main-bng.js?v=0.4.4"></script>
+        <script type="text/javascript" src="js/ghrequest.js"></script>
+        <script type="text/javascript" src="js/main-bng.js"></script>
     </body>
 </html>
