diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
index 718cf92ec4..62a9784b3c 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
@@ -115,7 +115,7 @@ public synchronized Metrics getMetrics()
 
         int slowed = vehicles.stream().mapToInt(v -> v.didSlow() ? 1 : 0).reduce(0, (acc, i) -> acc + i);
         double averageCells = vehicles.stream().mapToDouble(Vehicle::getVelocity).average().getAsDouble();
-        long notAtMax = vehicles.stream().filter(v -> v.getMaxVelocity() <= v.getVelocity()).count();
+        long notAtMax = vehicles.stream().filter(v -> v.getVelocity() < v.getMaxVelocity()).count();
 
         return new Metrics(slowed, averageCells, notAtMax, vehicles.size());
     }
diff --git a/marmoset/src/main/webapp/AnimatedMarker.js b/marmoset/src/main/webapp/AnimatedMarker.js
index 11087a60f9..1921eea286 100644
--- a/marmoset/src/main/webapp/AnimatedMarker.js
+++ b/marmoset/src/main/webapp/AnimatedMarker.js
@@ -8,10 +8,7 @@ function angleFromCoordinate(lat1, long1, lat2, long2) {
 
   var brng = Math.atan2(y, x);
 
-  brng = brng * 180/ Math.PI;
-  brng += 270;
-  brng = (brng + 360) % 360;
-
+  brng += 1.5 * Math.PI;
   return brng;
 }
 
diff --git a/marmoset/src/main/webapp/index.html b/marmoset/src/main/webapp/index.html
index b38bacae08..4417ab31a3 100644
--- a/marmoset/src/main/webapp/index.html
+++ b/marmoset/src/main/webapp/index.html
@@ -17,6 +17,11 @@
             #map {
                 height: 90%;
             }
+            #canvas {
+                position: absolute;
+                z-index: 10;
+                pointer-events: none;
+            }
             #info {
                 position:absolute;
                 top:0;
@@ -42,8 +47,10 @@
         </div>
         <div id="info"></div>
         <br>
+        <canvas id="canvas" width="1400" height="900"></canvas>
         <div id="map"></div>
 
+        <img src="car-icon-opt.png" id="icon"/>
         <script src="main.js"></script>
     </body>
 </html>
\ No newline at end of file
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index 6a8b2c048e..223de4b969 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -1,7 +1,13 @@
 /**
  * Created by alexander on 22/02/2016.
  */
+
 function initMap() {
+
+    window.canvas = document.getElementById("canvas");
+    window.ctx = canvas.getContext("2d");
+    window.icon = document.getElementById("icon");
+
     window.carIcon = L.icon({
         iconUrl: 'car-icon-opt.png',
         iconSize: [20,8]
@@ -14,6 +20,29 @@ function initMap() {
         id: 'alxhill.p69lilm1',
         accessToken: 'pk.eyJ1IjoiYWx4aGlsbCIsImEiOiJjaWtyMnM5cTAwMDFzd2RrcWxjdW14dGlhIn0._vGArimDzlTVhET5T_GZzA',
     }).addTo(window.map);
+
+    resizeCanvas(window.map.getSize());
+    window.map.on('moveend', function() {
+        console.log('panning');
+        resizeCanvas(window.map.getSize());
+        //ctx.clearRect(0, 0, canvas.width, canvas.height);
+        window.map.fireEvent('viewreset', {hard: true});
+        //window.map.setView(window.map.getCenter(), window.map.getZoom(), true);
+
+    });
+
+    window.addEventListener('resize', function(){
+        console.log("resize");
+    })
+
+}
+
+function resizeCanvas(size)
+{
+    if (size.x != window.canvas.width)
+        window.canvas.width = size.x;
+    if (size.y != window.canvas.height)
+        window.canvas.height = size.y;
 }
 
 function initButtons(carSet) {
@@ -40,6 +69,7 @@ function initAll() {
     initButtons(carSet);
 }
 
+
 var carSet = {
     _cars: [],
     _carCount: 0,
@@ -90,6 +120,7 @@ var carSet = {
 
     // deals with the set of data that comes from the websocket
     processData: function(data) {
+        ctx.clearRect(0, 0, canvas.width, canvas.height);
         var view = new DataView(data);
         var totalVel = 0;
         for (var i = 0; i < data.byteLength; i += 24) {
@@ -119,10 +150,13 @@ L.AngleMarker = L.Marker.extend({
     },
 
     _setPos: function (pos) {
-        L.Marker.prototype._setPos.call(this, pos);
+        //L.Marker.prototype._setPos.call(this, pos);
+        ctx.translate(pos.x, pos.y);
         if (this.options.angle) {
-            this._icon.style[L.DomUtil.TRANSFORM] += ' rotate(' + this.options.angle + 'deg)';
+            ctx.rotate(this.options.angle);
         }
+        ctx.drawImage(icon, -icon.offsetWidth/2, -icon.offsetHeight/2);
+        ctx.setTransform(1,0,0,1,0,0);
     }
 });
 L.angleMarker = function(latlngs, options) {
@@ -142,9 +176,12 @@ Car.prototype = {
         this.vel = vel;
 
         if (this.marker == null) {
-            this.marker = L.angleMarker([lat,lon], {
-                icon: carIcon,
-                angle: 180*Math.random()
+            this.marker = L.circleMarker([lat,lon], {
+                stroke: false,
+                radius: 4,
+                opacity: 0.8
+                //icon: carIcon,
+                //angle: 180*Math.random()
             });
             window.map.addLayer(this.marker);
         } else {
