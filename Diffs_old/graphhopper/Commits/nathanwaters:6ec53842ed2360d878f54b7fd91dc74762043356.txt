diff --git a/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java b/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java
index c879af44a3..0519bd8bed 100644
--- a/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java
+++ b/reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java
@@ -27,6 +27,7 @@
 package com.conveyal.gtfs;
 
 import com.conveyal.gtfs.error.GTFSError;
+import com.conveyal.gtfs.error.GeneralError;
 import com.conveyal.gtfs.model.Calendar;
 import com.conveyal.gtfs.model.*;
 import com.google.common.collect.Iterables;
@@ -140,6 +141,9 @@ else if (feedId == null || feedId.isEmpty()) {
         db.getAtomicString("feed_id").set(feedId);
 
         new Agency.Loader(this).loadTable(zip);
+        if (agency.isEmpty()) {
+            errors.add(new GeneralError("agency", 0, "agency_id", "Need at least one agency."));
+        }
 
         // calendars and calendar dates are joined into services. This means a lot of manipulating service objects as
         // they are loaded; since mapdb keys/values are immutable, load them in memory then copy them to MapDB once
diff --git a/reader-gtfs/src/main/java/com/conveyal/gtfs/error/GeneralError.java b/reader-gtfs/src/main/java/com/conveyal/gtfs/error/GeneralError.java
index 9ba99c09ed..3b479492b7 100644
--- a/reader-gtfs/src/main/java/com/conveyal/gtfs/error/GeneralError.java
+++ b/reader-gtfs/src/main/java/com/conveyal/gtfs/error/GeneralError.java
@@ -36,6 +36,7 @@
 
     public GeneralError(String file, long line, String field, String message) {
         super(file, line, field);
+        this.message = message;
     }
 
     @Override public String getMessage() {
diff --git a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java
index 818d9529c1..2e8b3aa909 100644
--- a/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java
+++ b/reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java
@@ -19,6 +19,7 @@
 package com.graphhopper.reader.gtfs;
 
 import com.conveyal.gtfs.GTFSFeed;
+import com.conveyal.gtfs.error.GTFSError;
 import com.conveyal.gtfs.model.Fare;
 import com.conveyal.gtfs.model.FareRule;
 import com.google.transit.realtime.GtfsRealtime;
@@ -199,6 +200,9 @@ void loadGtfsFromFile(String id, ZipFile zip) {
 			Files.deleteIfExists(file.toPath());
 			GTFSFeed feed = new GTFSFeed(file);
 			feed.loadFromFile(zip);
+			for (GTFSError error : feed.errors) {
+				System.out.println(error.getMessageWithContext());
+			}
 			fixFares(feed, zip);
 			this.gtfsFeeds.put(id, feed);
 		} catch (IOException e) {
