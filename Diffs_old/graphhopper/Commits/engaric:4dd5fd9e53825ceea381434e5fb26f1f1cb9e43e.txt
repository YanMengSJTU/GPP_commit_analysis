diff --git a/.travis.yml b/.travis.yml
index b1b8faf3f1..01e661078f 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -8,4 +8,4 @@ install: true
 script: ./core/files/travis-build.sh
 notifications:
   email:
-    - github@graphhopper.com
\ No newline at end of file
+    - engaric@hotmail.com
\ No newline at end of file
diff --git "a/acceptancetesting/.\target/screenshot.png" "b/acceptancetesting/.\target/screenshot.png"
deleted file mode 100644
index 284cefca8a..0000000000
Binary files "a/acceptancetesting/.\target/screenshot.png" and /dev/null differ
diff --git a/acceptancetesting/.settings/org.eclipse.jdt.core.prefs b/acceptancetesting/.settings/org.eclipse.jdt.core.prefs
index ec4300d5d0..6b5aebc4b5 100644
--- a/acceptancetesting/.settings/org.eclipse.jdt.core.prefs
+++ b/acceptancetesting/.settings/org.eclipse.jdt.core.prefs
@@ -1,5 +1,13 @@
 eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
 org.eclipse.jdt.core.compiler.compliance=1.7
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
 org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
 org.eclipse.jdt.core.compiler.source=1.7
diff --git a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
index effe4c1453..1b0664e0d4 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Exeter.feature
@@ -118,12 +118,12 @@ Feature: Verify a route from A to B
       | pointA              | pointB              | routetype |
       | 50.726735,-3.520955 | 50.726914,-3.522033 | car       |
 
-  @Routing 
+  @Routing
   Scenario Outline: Verify  No Turn Restriction (Denmark Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance |
-      | 3             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 293      | NW        | 25597 | 248.881   |
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time  | distance |
+      | 3             | 50.725002,-3.520632 | Turn left onto RUSSELL STREET | 293     | NW        | 25597 | 248.881  |
 
     Examples: 
       | pointA              | pointB              | routetype |
@@ -140,17 +140,16 @@ Feature: Verify a route from A to B
       | pointA             | pointB             | routetype |
       | 50.72148,-3.532485 | 50.721888,-3.53182 | car       |
 
-    @Routing
+  @Routing
   Scenario Outline: Verify No  Turn Restrictions(Except Bus)  on a Route (BELGROVE ROAD -Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints not on the route map:
-      | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance |
+      | wayPointIndex | waypointco         | waypointdesc                       | azimuth | direction | time | distance |
       | 2             | 50.725997,-3.52296 | Turn sharp left onto CHEEKE STREET | 135     | SE        | 5639 | 56.915   |
 
     Examples: 
       | pointA              | pointB             | routetype |
       | 50.726085,-3.522837 | 50.725076,-3.52442 | car       |
-      
 
   # Mandatory Turn Restrictions
   @Routing
@@ -289,8 +288,37 @@ Feature: Verify a route from A to B
       | 50.7244,-3.535817 | 50.723705,-3.534493 | car       |
 
   #Private Road
-  @Routing
-  Scenario Outline: Verify  Private Road Restricted Access (Denmark Road-Exeter)
+  Scenario Outline: Verify  a Private Road (Publicly Accessible) on a Route  (PERRY ROAD)
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco         | waypointdesc                    | azimuth | direction | time  | distance |
+      | 2             | 50.732011,-3.53798 | Turn right onto STREATHAM DRIVE | 3       | N         | 17156 | 166.807  |
+
+    Examples: 
+      | pointA              | pointB              | routetype |
+      | 50.732296,-3.535372 | 50.733538,-3.537462 | car       |
+
+  Scenario Outline: Verify a  Private Road (Publicly Accessible) on a Route (QUEEN STREET)
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc                                 | azimuth | direction | time  | distance |
+      | 2             | 50.727397,-3.535531 | Turn slight left onto NEW NORTH ROAD (B3183) | 287     | W         | 18644 | 181.293  |
+
+    Examples: 
+      | pointA              | pointB              | routetype |
+      | 50.727003,-3.535041 | 50.727023,-3.533083 | car       |
+
+  Scenario Outline: Verify a PrivateRoad -Restricted Access(WESTERN WAY)
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco         | waypointdesc                      | azimuth | direction | time | distance |
+      | 1             | 50.72593,-3.521909 | Continue onto B3212 (WESTERN WAY) | 51      | NE        | 3985 | 38.745   |
+
+    Examples: 
+      | pointA              | pointB             | routetype |
+      | 50.725876,-3.521801 | 50.72619,-3.521541 | car       |
+
+  Scenario Outline: Verify a Private Road - Restricted Access (Denmark Road-Exeter)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the trackPoints not on the route map:
       | trackPointco      |
diff --git a/core/src/main/java/com/graphhopper/reader/OSMTurnRelation.java b/core/src/main/java/com/graphhopper/reader/OSMTurnRelation.java
index c8c262622d..0a76564e00 100644
--- a/core/src/main/java/com/graphhopper/reader/OSMTurnRelation.java
+++ b/core/src/main/java/com/graphhopper/reader/OSMTurnRelation.java
@@ -93,8 +93,8 @@ public long getOsmIdTo()
     public Collection<ITurnCostTableEntry> getRestrictionAsEntries(TurnCostEncoder encoder,
 		    EdgeExplorer edgeOutExplorer, EdgeExplorer edgeInExplorer, DataReader dataReader)
     {
-	OsItnReader itnReader = (OsItnReader) dataReader;
-	int viaNodeId = itnReader.getInternalNodeIdOfOsmNode(this.viaOsmNodeId);
+	OSMReader osmReader = (OSMReader) dataReader;
+	int viaNodeId = osmReader.getInternalNodeIdOfOsmNode(this.viaOsmNodeId);
 
 	try
 	{
@@ -110,7 +110,7 @@ public long getOsmIdTo()
 	    EdgeIterator iter = edgeInExplorer.setBaseNode(viaNodeId);
 
 	    while (iter.next())
-		if (itnReader.getOsmIdOfInternalEdge(iter.getEdge()) == this.fromOsmWayId)
+		if (osmReader.getOsmIdOfInternalEdge(iter.getEdge()) == this.fromOsmWayId)
 		{
 		    edgeIdFrom = iter.getEdge();
 		    break;
@@ -128,7 +128,7 @@ public long getOsmIdTo()
 	    while (iter.next())
 	    {
 		int edgeId = iter.getEdge();
-		long wayId = itnReader.getOsmIdOfInternalEdge(edgeId);
+		long wayId = osmReader.getOsmIdOfInternalEdge(edgeId);
 		if (edgeId != edgeIdFrom && this.restriction == Type.ONLY
 				&& wayId != this.toOsmWayId || this.restriction == Type.NOT
 				&& wayId == this.toOsmWayId && wayId >= 0)
diff --git a/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java b/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java
index 2b992ad4f5..e4b8e0a538 100644
--- a/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java
+++ b/core/src/test/java/com/graphhopper/reader/osgb/WickhamDirectionErrorTest.java
@@ -8,6 +8,7 @@
 import java.util.Locale;
 
 import org.junit.Test;
+import org.junit.Ignore;
 
 import com.graphhopper.GHRequest;
 import com.graphhopper.GHResponse;
@@ -77,7 +78,9 @@ public void testActualGraph() {
         assertEquals(Instruction.FINISH, instructionList.get(2).getSign());
 
     }
+
     @Test
+    @Ignore
     public void testWorkingTurn() {
         String graphLoc = "/home/phopkins/Documents/graphhopper/core/itn-gh";
         String inputFile = "/home/phopkins/Development/OSMMITN/data";
diff --git a/web/pom.xml b/web/pom.xml
index e324010ffa..f99d49551a 100644
--- a/web/pom.xml
+++ b/web/pom.xml
@@ -1,199 +1,192 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-
-    <modelVersion>4.0.0</modelVersion>
-    <groupId>com.graphhopper</groupId>
-    <artifactId>graphhopper-web</artifactId>
-    <packaging>jar</packaging>
-    <version>0.4-SNAPSHOT</version>
-    <name>GraphHopper Web</name>
-    <description>Example on how to use GraphHopper in a web-based application</description>
-        
-    <parent>
-        <groupId>com.graphhopper</groupId>
-        <artifactId>graphhopper-parent</artifactId>    	
-        <version>0.4-SNAPSHOT</version>
-    </parent>
-    <properties>
-        <jetty.version>8.1.16.v20140903</jetty.version>
-    </properties>
-    
-    <dependencies>
-        <dependency>
-            <groupId>com.graphhopper</groupId>
-            <artifactId>graphhopper</artifactId>
-            <version>${project.parent.version}</version>            
-        </dependency>
-        
-        <dependency>
-            <groupId>org.json</groupId>
-            <artifactId>json</artifactId>
-            <version>20140107</version>            
-        </dependency>    
-        
-        <dependency>
-            <groupId>com.google.inject</groupId>
-            <artifactId>guice</artifactId>
-            <version>3.0</version>
-        </dependency>
-        
-        <!-- necessary to use guice ('@Inject') in servlets -->
-        <dependency>
-            <groupId>com.google.inject.extensions</groupId>
-            <artifactId>guice-servlet</artifactId>
-            <version>3.0</version>
-        </dependency>
-                
-        <dependency>
-            <groupId>javax.servlet</groupId>
-            <artifactId>javax.servlet-api</artifactId>
-            <version>3.1.0</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-api</artifactId>
-            <version>${slf4j.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-log4j12</artifactId>
-            <version>${slf4j.version}</version>
-            <scope>runtime</scope>
-        </dependency>
-        
-        <dependency>
-            <groupId>log4j</groupId>
-            <artifactId>log4j</artifactId>
-            <version>${log4j.version}</version>
-            <scope>compile</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.eclipse.jetty</groupId>
-            <artifactId>jetty-servlets</artifactId>
-            <version>${jetty.version}</version>
-        </dependency>
-        
-        <dependency>
-            <groupId>org.eclipse.jetty</groupId>
-            <artifactId>jetty-server</artifactId>
-            <version>${jetty.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.jetty</groupId>
-            <artifactId>jetty-servlet</artifactId>
-            <version>${jetty.version}</version>
-        </dependency>
-        
-        <!-- for integration tests of service -->
-        <dependency>
-            <groupId>org.eclipse.jetty</groupId>
-            <artifactId>jetty-webapp</artifactId>
-            <version>${jetty.version}</version>
-            <scope>test</scope>
-        </dependency>
-        <!--
-        <dependency>
-            <groupId>org.apache.httpcomponents</groupId>
-            <artifactId>httpclient</artifactId>
-            <version>4.2.5</version>
-            <scope>test</scope>
-        </dependency>
-        -->
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>2.17</version>
-            </plugin>
-            <!-- create a jar file too, so others can use it more easily -->
-            <plugin>
-                <artifactId>maven-war-plugin</artifactId>
-                <version>2.4</version>
-                <configuration>
-                    <attachClasses>true</attachClasses>
-                </configuration>
-            </plugin>            
-            <plugin>
-                <artifactId>maven-assembly-plugin</artifactId>
-                <version>2.4.1</version>
-                <configuration>
-                    <archive>
-                        <manifest>
-                            <mainClass>com.graphhopper.http.GHServer</mainClass>
-                        </manifest>
-                    </archive>
-                    <descriptors>
-                        <descriptor>src/main/assembly/jar.xml</descriptor>
-                        <!-- this is defined to be executed afterwards -->
-                        <descriptor>src/main/assembly/zip.xml</descriptor>
-                    </descriptors>
-                </configuration>
-                <executions>
-                    <execution>
-                        <id>make-assembly</id>
-                        <!-- bind to verify and not package to pass integration tests before creating assemblies -->
-                        <phase>integration-test</phase> 
-                       <goals>
-                            <goal>single</goal>
-                        </goals>
-                    </execution>
-                </executions>
-
-<!--
-                <executions>
-                    <execution>
-                        <id>build-jar</id>
-                        <configuration>
-                            <archive>
-                                <manifest>
-                                    <mainClass>com.graphhopper.http.GHServer</mainClass>
-                                </manifest>
-                            </archive>
-                    
-                            <descriptorRefs>
-                                <descriptorRef>jar-with-dependencies</descriptorRef>
-                            </descriptorRefs>
-                        </configuration>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>single</goal>
-                        </goals>                        
-                    </execution>
-                    <execution>
-                        <id>build-zip</id>
-                        
-                        <configuration>
-                            <appendAssemblyId>false</appendAssemblyId>
-                            <descriptors>
-                                <descriptor>src/main/assembly/zip.xml</descriptor>                                        
-                            </descriptors>                            
-                        </configuration>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>single</goal>
-                        </goals>
-                    </execution>
-                </executions>
-                -->
-                <!--                <executions>
-                    <execution>
-                        <id>make-assembly</id>  this is used for inheritance merges 
-                        <phase>package</phase>  bind to the packaging phase 
-                        <goals>
-                            <goal>single</goal>
-                        </goals>
-                    </execution>
-                </executions>-->
-            </plugin>
- 
-        </plugins>
-    </build>
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+
+	<modelVersion>4.0.0</modelVersion>
+	<groupId>com.graphhopper</groupId>
+	<artifactId>graphhopper-web</artifactId>
+	<packaging>war</packaging>
+	<version>0.4-SNAPSHOT</version>
+	<name>GraphHopper Web</name>
+	<description>Example on how to use GraphHopper in a web-based application</description>
+
+	<parent>
+		<groupId>com.graphhopper</groupId>
+		<artifactId>graphhopper-parent</artifactId>
+		<version>0.4-SNAPSHOT</version>
+	</parent>
+	<properties>
+		<jetty.version>8.1.16.v20140903</jetty.version>
+		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
+        <beanstalk.versionLabel>${maven.build.timestamp}</beanstalk.versionLabel>
+        <beanstalk.region>eu-west-1</beanstalk.region>
+	</properties>
+
+	<dependencies>
+		<dependency>
+			<groupId>com.graphhopper</groupId>
+			<artifactId>graphhopper</artifactId>
+			<version>${project.parent.version}</version>
+		</dependency>
+
+		<dependency>
+			<groupId>org.json</groupId>
+			<artifactId>json</artifactId>
+			<version>20140107</version>
+		</dependency>
+
+		<dependency>
+			<groupId>com.google.inject</groupId>
+			<artifactId>guice</artifactId>
+			<version>3.0</version>
+		</dependency>
+
+		<!-- necessary to use guice ('@Inject') in servlets -->
+		<dependency>
+			<groupId>com.google.inject.extensions</groupId>
+			<artifactId>guice-servlet</artifactId>
+			<version>3.0</version>
+		</dependency>
+
+		<dependency>
+			<groupId>javax.servlet</groupId>
+			<artifactId>javax.servlet-api</artifactId>
+			<version>3.1.0</version>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.slf4j</groupId>
+			<artifactId>slf4j-api</artifactId>
+			<version>${slf4j.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.slf4j</groupId>
+			<artifactId>slf4j-log4j12</artifactId>
+			<version>${slf4j.version}</version>
+			<scope>runtime</scope>
+		</dependency>
+
+		<dependency>
+			<groupId>log4j</groupId>
+			<artifactId>log4j</artifactId>
+			<version>${log4j.version}</version>
+			<scope>compile</scope>
+		</dependency>
+
+		<dependency>
+			<groupId>org.eclipse.jetty</groupId>
+			<artifactId>jetty-servlets</artifactId>
+			<version>${jetty.version}</version>
+		</dependency>
+
+		<dependency>
+			<groupId>org.eclipse.jetty</groupId>
+			<artifactId>jetty-server</artifactId>
+			<version>${jetty.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.eclipse.jetty</groupId>
+			<artifactId>jetty-servlet</artifactId>
+			<version>${jetty.version}</version>
+		</dependency>
+
+		<!-- for integration tests of service -->
+		<dependency>
+			<groupId>org.eclipse.jetty</groupId>
+			<artifactId>jetty-webapp</artifactId>
+			<version>${jetty.version}</version>
+			<scope>test</scope>
+		</dependency>
+		<!-- <dependency> <groupId>org.apache.httpcomponents</groupId> <artifactId>httpclient</artifactId> 
+			<version>4.2.5</version> <scope>test</scope> </dependency> -->
+	</dependencies>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-surefire-plugin</artifactId>
+				<version>2.17</version>
+			</plugin>
+
+			<!-- create a jar file too, so others can use it more easily -->
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-jar-plugin</artifactId>
+				<version>2.5</version>
+				<configuration>
+					<archive>
+						<manifest>
+							<mainClass>com.graphhopper.http.GHServer</mainClass>
+						</manifest>
+					</archive>
+				</configuration>
+				<executions>
+					<execution>
+						<id>make-a-jar</id>
+						<phase>package</phase>
+						<goals>
+							<goal>jar</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+			
+			<!-- create a standard war file too, so others can use it more easily -->
+			<plugin>
+				<artifactId>maven-war-plugin</artifactId>
+				<version>2.5</version>
+				<configuration>
+					<!-- <attachClasses>true</attachClasses> -->
+					<primaryArtifact>true</primaryArtifact>
+                    <packagingExcludes>WEB-INF/lib/jetty*.jar</packagingExcludes>
+				</configuration>
+			</plugin>
+
+			<plugin>
+				<artifactId>maven-assembly-plugin</artifactId>
+				<version>2.4.1</version>
+				<configuration>
+					<archive>
+						<manifest>
+							<mainClass>com.graphhopper.http.GHServer</mainClass>
+						</manifest>
+					</archive>
+					<descriptors>
+						<descriptor>src/main/assembly/jar.xml</descriptor>
+						<!-- this is defined to be executed afterwards -->
+						<descriptor>src/main/assembly/zip.xml</descriptor>
+					</descriptors>
+				</configuration>
+				<executions>
+					<execution>
+						<id>make-assembly</id>
+						<!-- bind to verify and not package to pass integration tests before 
+							creating assemblies -->
+						<phase>integration-test</phase>
+						<goals>
+							<goal>single</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+
+			<plugin>
+				<groupId>br.com.ingenieux</groupId>
+				<artifactId>beanstalk-maven-plugin</artifactId>
+				<version>1.4.0</version>
+				<configuration>
+					<applicationName>GraphHopper</applicationName>
+					<s3Bucket>elasticbeanstalk-eu-west-1-203198560946</s3Bucket>
+					<s3Key>${project.artifactId}-${project.version}.war</s3Key>
+                    <environmentName>dpn-env</environmentName>
+                    <cnamePrefix>dpn-env</cnamePrefix>
+                    <versionDescription>Deployed from maven plugin</versionDescription>
+				</configuration>
+			</plugin>
+
+		</plugins>
+	</build>
 
 </project>
 
diff --git a/web/src/main/webapp/.ebextensions/server-update.config b/web/src/main/webapp/.ebextensions/server-update.config
index a41bd75868..e0bbf10960 100644
--- a/web/src/main/webapp/.ebextensions/server-update.config
+++ b/web/src/main/webapp/.ebextensions/server-update.config
@@ -2,37 +2,44 @@ files:
     "/extract.sh" :
         owner: root
         group: root
+        mode: "000755"
         content: |
             #!/bin/bash
-             
-            # This assumes there is already a tar.bz2 file called itnfull.tar.bz2 in /
+            # Remove the existing config.properties so it can be replaced
+            rm -f /config.properties
+            #fetch the preingested routing data
+            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://graphhopper/${ROUTING_ARCHIVE} .
+            #fetch applicatio config file
+            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://graphhopper/${ROUTING_CONFIG} /config.properties
             
+            # This assumes there is already a tar.bz2 file called ${ROUTING_ARCHIVE} in /
             # Remove existing data
-            rm -rf itn-gh
-             
+            rm -rf ${graphhopper_graph_location}
+
             # Extract the route data
-            tar xvjf itnfull.tar.bz2 -C /
-            #tar xvjf itn-exeter-modified.tar.bz2 -C /
-            
+            tar xvjf ${ROUTING_ARCHIVE} -C /
+
             # Change the owner to tomcat
-            chown -R tomcat:tomcat itn-gh
+            chown -R tomcat:tomcat ${graphhopper_graph_location}
             
-            # Remove the existing config.properties so it can be replaced
-            rm -f /config.properties
-        
-        mode: "000755"
+           
+
+
 commands:
     01-install-awscli:
         command: easy_install awscli
-    02-download-s3-asset:
-        command: aws s3 cp --region eu-west-1 s3://graphhopper/itn-exeter-modified.tar.bz2 .
-    03-create-post-dir:
+    02-create-post-dir:
         command: mkdir /opt/elasticbeanstalk/hooks/appdeploy/post
         ignoreErrors: true
-    04-download-s3-asset2:
+    03-download-s3-asset-for-post:
         command: aws s3 cp --region eu-west-1 s3://graphhopper/env_vars.sh /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh
-    05-run-extract-script:
-        command: bash /extract.sh 
-    06-download-s3-config-properties:
-        command: aws s3 cp --region eu-west-1 s3://graphhopper/config.properties .
+    04-set-execute-post:
+        command: chmod a+x /opt/elasticbeanstalk/hooks/appdeploy/post/99_update_osplaces_key.sh    
+                         
+
+
+container_commands:
+    download-s3-asset-and-extract:
+        command: /extract.sh 
+    
          
