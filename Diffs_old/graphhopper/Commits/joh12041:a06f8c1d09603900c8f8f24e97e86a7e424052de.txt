diff --git a/core/src/main/java/com/graphhopper/RoutingExample.java b/core/src/main/java/com/graphhopper/RoutingExample.java
index b8a6e3620f..7c309fda1a 100644
--- a/core/src/main/java/com/graphhopper/RoutingExample.java
+++ b/core/src/main/java/com/graphhopper/RoutingExample.java
@@ -39,7 +39,8 @@ public static void main(String[] args) throws Exception {
         ArrayList<float[]> inputPoints = new ArrayList<float[]>();
         Scanner sc_in = new Scanner(new File(inputPointsFN));
         FileWriter sc_out = new FileWriter(outputPointsFN, true);
-        sc_out.write("overview_polyline_points,total_time_in_sec,total_distance_in_meters,waypoints,number_of_steps,maneuvers,idx" + System.getProperty("line.separator"));
+        sc_out.write("overview_polyline_points,total_time_in_sec,total_distance_in_meters,waypoints,number_of_steps,maneuvers" +
+                System.getProperty("line.separator"));
         String header = sc_in.nextLine();
         float laF;
         float loF;
@@ -78,7 +79,7 @@ public static void main(String[] args) throws Exception {
             if (pointsToSkip.containsKey(i)) {
                 System.out.println(i + ": Skipping.");
                 sc_out.write("\"[(" + points[0] + "," + points[1] + "),(" + points[2] + "," + points[3] + ")]\"," +
-                        "-1,-1,[],-1,[]," + points[4] + System.getProperty("line.separator"));
+                        "-1,-1,[],-1,[]" + System.getProperty("line.separator"));
                 continue;
             }
             GHRequest req = new GHRequest(points[0], points[1], points[2], points[3]).  // latFrom, lonFrom, latTo, lonTo
@@ -104,7 +105,7 @@ public static void main(String[] args) throws Exception {
             InstructionList il = path.getInstructions();
             int numDirections = il.getSize();
             sc_out.write("\"[" + pointList + "]\"," + timeInSec + "," + distance + ",[]," + numDirections +
-                    ",[]," + points[4] + System.getProperty("line.separator"));
+                    ",[]" + System.getProperty("line.separator"));
             System.out.println(i + ": Distance: " + distance + "m;\tTime: " + timeInSec + "sec;\t# Directions: " + numDirections);
             // iterate over every turn instruction
             //for(Instruction instruction : il) {
