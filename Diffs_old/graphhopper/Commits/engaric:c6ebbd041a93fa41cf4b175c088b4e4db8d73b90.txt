diff --git a/acceptancetesting/src/test/cucumber/Routing-Errors.feature b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
index 12c7564c8e..c6bae41b8b 100644
--- a/acceptancetesting/src/test/cucumber/Routing-Errors.feature
+++ b/acceptancetesting/src/test/cucumber/Routing-Errors.feature
@@ -1,10 +1,10 @@
-Feature: Verify Error Messages from a routing service
+ssFeature: Verify Error Messages from a routing service
    As a user
    I want to get a valid Error message and status code for a invalid route request
 
   #Error Messages
   #Successful request
-   @ErrorMessages
+  @ErrorMessages
   Scenario: Successful request with all parameters
     Given I have route point as
       | pointA              | pointB              |
@@ -26,65 +26,8 @@ Feature: Verify Error Messages from a routing service
       | wayPointIndex | waypointco          | waypointdesc                | azimuth | direction | time | distance | avoidance |
       | 2             | 50.729205,-3.523206 | Turn right onto WELL STREET | 210.0   | SW        | 4050 | 112.5    |           |
 
-  # Parameter :  vehicle
-   @ErrorMessages 
-  Scenario Outline: Incorrect Parameter Value for "Vehicle"
-    Given I have route point as
-      | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
-    And I have vehicle as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
-    And I have weighting as "<routeType>"
-    When I request for a route
-    Then I should be able to verify the http response message as "<httpErrorMessage>"
-    Then I should be able to verify the http statuscode as "<statusCode>"
-    Then I should be able to verify the response message as "<errorMessage>"
-    Then I should be able to verify the statuscode as "<statusCode>"
-
-    Examples: 
-      | vehicleType | avoidances | routeType | errorMessage                                                  | statusCode | httpErrorMessage |
-      | 123         |            | fastest   | Vehicle 123 is not a valid vehicle. Valid vehicles are car.   | 400        | Bad Request      |
-      | foot        |            | fastest   | Vehicle foot is not a valid vehicle. Valid vehicles are car.  | 400        | Bad Request      |
-      | cycle       |            | fastest   | Vehicle cycle is not a valid vehicle. Valid vehicles are car. | 400        | Bad Request      |
-      | Bike        |            | fastest   | Vehicle Bike is not a valid vehicle. Valid vehicles are car.  | 400        | Bad Request      |
-
-  # Parameter :  vehicle
-   @ErrorMessages
-  Scenario Outline: Incorrect Parameter Name "vehicles"
-    Given I have route point as
-      | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
-    And I have vehicles as "<vehicleType>"
-    And I have avoidances as "<avoidances>"
-    And I have weighting as "<routeType>"
-    And I have type as "<responseFormat>"
-    When I request for a route
-    Then I should be able to verify the response message as "<errorMessage>"
-    Then I should be able to verify the statuscode as "<statusCode>"
-
-    Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage | statusCode |
-      | car         |            | fastest   | json           |              | 400        |
-
-  # Parameter :  vehicle
-   @ErrorMessages
-  Scenario Outline: Missing Parameter "vehicle"
-    Given I have route points as
-      | pointA              | pointB              |
-      | 50.729961,-3.524853 | 50.723364,-3.523895 |
-    And I have avoidances as "<avoidances>"
-    And I have weighting as "<routeType>"
-    And I have type as "<responseFormat>"
-    When I request for a route
-    Then I should be able to verify the response message as "<errorMessage>"
-    Then I should be able to verify the statuscode as "<statusCode>"
-
-    Examples: 
-      | vehicleType | avoidances | routeType | responseFormat | errorMessage                | statusCode |
-      | car         |            | fastest   | json           | No point parameter provided | 400        |
-
   # Parameter :  point
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
       | pointA           | pointB              |
@@ -101,7 +44,7 @@ Feature: Verify Error Messages from a routing service
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                     | statusCode |
       | car         |            | fastest   | json           | At least 2 points has to be specified, but was:1 | 400        |
 
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
       | pointA              |
@@ -118,7 +61,7 @@ Feature: Verify Error Messages from a routing service
       | vehicleType | avoidances | routeType | responseFormat | errorMessage                                     | statusCode |
       | car         |            | fastest   | json           | At least 2 points has to be specified, but was:1 | 400        |
 
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Incorrect Parameter Value "point"
     Given I have route point as
       | pointA       | pointB              |
@@ -136,7 +79,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | json           | Cannot find point 0: 292530.0,92635.0 | 400        |
 
   # Parameter :  point
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Incorrect Parameter Name "points"
     Given I have route points as
       | pointA              | pointB              |
@@ -154,7 +97,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | json           | No point parameter provided | 400        |
 
   # Parameter :  point
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Missing Parameter "point"
     Given I have vehicle as "<vehicleType>"
     And I have avoidances as "<avoidances>"
@@ -169,7 +112,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | json           | No point parameter provided | 400        |
 
   # Parameter :  avoidances
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "avoidances"
     Given I have route point as
       | pointA              | pointB              |
@@ -187,7 +130,7 @@ Feature: Verify Error Messages from a routing service
       | car         | trees      | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  avoidances
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "avoidances"
     Given I have route point as
       | pointA              | pointB              |
@@ -205,7 +148,7 @@ Feature: Verify Error Messages from a routing service
       | car         | cliff      | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  weighting
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "weighting"
     Given I have route point as
       | pointA              | pointB              |
@@ -223,7 +166,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | quick     | json           | Weighting faster not supported. Valid weightings are shorted, fastest, fastavoid, shortavoid | 400        |
 
   # Parameter :  weighting
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "weighting"
     Given I have route point as
       | pointA              | pointB              |
@@ -241,7 +184,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  locale
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "locale"
     Given I have route point as
       | pointA              | pointB              |
@@ -260,7 +203,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | en     | json           | en is not a valid value for parameter locale. Valid values are bg, ca, cz, de_DE, el, en_US, es, fa, fil, fi, fr, gl, he, hu_HU, it, ja, ne, nl, pl_PL, pt_BR, pt_PT, ro, ru, si, sk, sv_SE, tr, uk, vi_VI or zh_CN | 400        |
 
   # Parameter :  locale
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "locale"
     Given I have route point as
       | pointA              | pointB              |
@@ -279,7 +222,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | en-GB  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  instructions
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "instructions"
     Given I have route point as
       | pointA              | pointB              |
@@ -298,7 +241,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | msg("box")   | json           | msg("box") is not a valid value for parameter instructions. Valid values are true or false | 400        |
 
   # Parameter :  instructions
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "instructions"
     Given I have route point as
       | pointA              | pointB              |
@@ -317,7 +260,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | true         | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  algorithm
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "algorithm"
     Given I have route point as
       | pointA              | pointB              |
@@ -338,7 +281,7 @@ Feature: Verify Error Messages from a routing service
 
   #
   # Parameter :  algorithm
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Valid Parameter Values for "algorithm"
     Given I have route point as
       | pointA              | pointB              |
@@ -361,7 +304,7 @@ Feature: Verify Error Messages from a routing service
 
   #
   # Parameter :  algorithm
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "algorithm"
     Given I have route point as
       | pointA              | pointB              |
@@ -380,7 +323,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | dijkstra  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  points_encoded
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "points_encoded"
     Given I have route point as
       | pointA              | pointB              |
@@ -399,7 +342,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | xyz            | json           | xyz is not a valid value for parameter pointsEncodedString. Valid values are true or false | 400        |
 
   # Parameter :  points_encoded
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "points_encoded"
     Given I have route point as
       | pointA              | pointB              |
@@ -418,7 +361,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | true           | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  debug
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "debug"
     Given I have route point as
       | pointA              | pointB              |
@@ -437,7 +380,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | xyz   | json           | xyz is not a valid value for parameter debug. Valid values are true or false | 400        |
 
   # Parameter :  debug
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "debug"
     Given I have route point as
       | pointA              | pointB              |
@@ -456,7 +399,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | true  | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  calc_points
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "calc_points"
     Given I have route point as
       | pointA              | pointB              |
@@ -475,7 +418,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | xyz         | json           | xyz is not a valid value for parameter calc_points. Valid values are true or false | 400        |
 
   # Parameter :  calc_points
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "calc_points"
     Given I have route point as
       | pointA              | pointB              |
@@ -494,7 +437,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | true        | json           | Parameter blah is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # Parameter :  Type
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Value for "type"
     Given I have route point as
       | pointA              | pointB              |
@@ -513,7 +456,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | true        | txt            | txt is not a valid value for parameter type. Valid values are GPX or JSON. | 400        |
 
   # Parameter :  Type
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Invalid Parameter Name for "calc_points"
     Given I have route point as
       | pointA              | pointB              |
@@ -532,7 +475,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | true        | json           | Parameter calc_pointSSS is not a valid parameter for resource nearest. Valid parameters for requested resource are point. | 400        |
 
   # http method
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: http methods "PUT/POST/DEL/GET"
     Given I have route point as
       | pointA              | pointB              |
@@ -555,7 +498,7 @@ Feature: Verify Error Messages from a routing service
       | car         |            | fastest   | OPTIONS    | json           | OK                 | 200        |
 
   # Nearest Point : Invalid Parameter Value "point"
-   @ErrorMessages
+  @ErrorMessages
   Scenario Outline: Verify  nearest point of point using NearestPoint API
     Given I have type as "<responseFormat>"
     And My routing points for nearestPoint API as "<pointA>"
@@ -567,3 +510,202 @@ Feature: Verify Error Messages from a routing service
     Examples: 
       | pointA              | errorMessage | responseFormat | statusCode |
       | 51.878966,-0.903849 | e            | json           | 400        |
+
+  #Successful request
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "locale"
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have avoidances as ""
+    And I have weighting as "fastest"
+    And I have locale as "<locale>"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have points_calc as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | locale |
+      | en     |
+      | bg     |
+      | ca     |
+      | cz     |
+      | de_DE  |
+      | en_US  |
+      | es     |
+      | fa     |
+      | fil    |
+      | fi     |
+      | fr     |
+      | gl     |
+      | he     |
+      | hu_HU  |
+      | it     |
+      | ja     |
+      | ne     |
+      | nl     |
+      | pl_PL  |
+      | pt_BR  |
+      | pt_PT  |
+      | ro     |
+      | ru     |
+      | si     |
+      | sk     |
+      | sv_SE  |
+      | tr     |
+      | uk     |
+      | vi_VI  |
+      | zh_CN  |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "algorithm "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have avoidances as ""
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have points_calc as "true"
+    And I have instructions as "true"
+    And I have algorithm as "<algorithm>"
+    And I have type as "json"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | algorithm  |
+      | dijkstra   |
+      | astar      |
+      | astarbi    |
+      | dijkstrabi |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "debug "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have avoidances as ""
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "<debug>"
+    And I have points_encoded as "true"
+    And I have points_calc as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | debug |
+      | true  |
+      | false |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "points_calc "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have avoidances as ""
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have points_calc as "<points_calc>"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | points_calc |
+      | true        |
+      | false       |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "points_encoded "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have avoidances as ""
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "<points_encoded>"
+    And I have points_calc as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | points_encoded |
+      | true           |
+      | false          |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "instructions "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have avoidances as ""
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have points_calc as "true"
+    And I have instructions as "<instructions>"
+    And I have algorithm as "astar"
+    And I have type as "json"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | instructions |
+      | true         |
+      | false        |
+
+  @ErrorMessages
+  Scenario Outline: verify valid parameter values for "type "
+    Given I have route point as
+      | pointA              | pointB              |
+      | 50.729961,-3.524853 | 50.723364,-3.523895 |
+    And I have vehicle as "car"
+    And I have avoidances as ""
+    And I have weighting as "fastest"
+    And I have locale as "en_US"
+    And I have debug as "true"
+    And I have points_encoded as "true"
+    And I have points_calc as "true"
+    And I have instructions as "true"
+    And I have algorithm as "astar"
+    And I have type as "<type>"
+    When I request for a route
+    Then I should be able to verify the http response message as "OK"
+    Then I should be able to verify the http statuscode as "200"
+
+    Examples: 
+      | type |
+      | gpx  |
+      | json |
