diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
index 39664e2a7d..e9652c631a 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
@@ -6,17 +6,9 @@
 import com.graphhopper.marmoset.util.CellsGraph;
 import com.graphhopper.marmoset.util.Location;
 import com.graphhopper.routing.Path;
-import com.graphhopper.routing.util.EdgeFilter;
-import com.graphhopper.routing.util.FlagEncoder;
-import com.graphhopper.storage.GraphHopperStorage;
-import com.graphhopper.storage.index.LocationIndex;
-import com.graphhopper.storage.index.QueryResult;
 import com.graphhopper.util.*;
-import com.graphhopper.util.shapes.GHPoint3D;
 
 import java.util.List;
-import java.util.OptionalInt;
-import java.util.Random;
 import java.util.stream.Collectors;
 
 /**
@@ -61,7 +53,7 @@ public boolean isFinished()
     public void init()
     {
         cellId = 0; // TODO: figure out which cell the vehicle should start at
-        v = 1;
+        v = 0;
 
         cg = hopper.getCellsGraph();
 
@@ -161,12 +153,24 @@ public void updateLocation()
                 loc.set(newLat, newLon);
                 if (currDist + nextDist > dist)
                 {
-                    edgeIndex++;
+                    nextEdge();
                 }
+                return;
             }
             currDist += nextDist;
+            i++;
         }
 
+        // if we get here we've reached the end of the edge
+        loc.set(path.getLat(path.getSize() - 1), path.getLon(path.getSize() - 1));
+        nextEdge();
+    }
+
+    private void nextEdge()
+    {
+        edgeIndex++;
+        edgeId = edgeList.get(edgeIndex).getEdge();
+        cellId = 0;
     }
 
     @Override
