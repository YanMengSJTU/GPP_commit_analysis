diff --git a/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java b/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java
index 98d67923cb..63b36d89af 100644
--- a/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java
+++ b/core/src/main/java/com/graphhopper/routing/util/EscapePrivateWeighting.java
@@ -37,11 +37,9 @@ public double getMinWeight( double distance )
 	@Override
 	public double calcWeight( EdgeIteratorState edgeState, boolean reverse, int prevOrNextEdgeId )
 	{
-		System.err.println(edgeState.getClass() + ":" + edgeState.toString());
 		double calcWeight = innerWeighting.calcWeight(edgeState, reverse, prevOrNextEdgeId);
 		if(encoder.getLong(edgeState.getFlags(), KEY)>0) {
 			EdgeIteratorState edgeProps=null;
-			System.err.println("EDGE"+ edgeState.getEdge()+":PREVNEXT"  + prevOrNextEdgeId);
 			if(!isStartOrEnd(edgeState) && prevOrNextEdgeId>EdgeIterator.NO_EDGE) {
 				edgeProps = graph.getEdgeProps(prevOrNextEdgeId, Integer.MIN_VALUE);
 			}
@@ -52,7 +50,6 @@ public double calcWeight( EdgeIteratorState edgeState, boolean reverse, int prev
 				calcWeight = Double.POSITIVE_INFINITY;
 			}
 		}
-		System.err.println("WEIGHT:" +calcWeight);
 		return calcWeight;
 	}
 
@@ -61,7 +58,6 @@ private boolean isStartOrEnd( EdgeIteratorState edgeState )
 	    int baseNode = edgeState.getBaseNode();
 		int adjNode = edgeState.getAdjNode();
 		boolean startEnd = baseNode == start  || baseNode == end  || adjNode == start || adjNode == end;
-		System.err.println("STARTEND:" + startEnd + ":" + edgeState.toString());
 		return startEnd;
     }
 
