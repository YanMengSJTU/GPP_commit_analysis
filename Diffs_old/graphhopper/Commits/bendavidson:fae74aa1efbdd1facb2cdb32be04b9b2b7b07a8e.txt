diff --git a/core/src/main/java/com/graphhopper/util/InstructionList.java b/core/src/main/java/com/graphhopper/util/InstructionList.java
index 7cace9a9b3..4d7e8451cc 100644
--- a/core/src/main/java/com/graphhopper/util/InstructionList.java
+++ b/core/src/main/java/com/graphhopper/util/InstructionList.java
@@ -258,7 +258,7 @@ public String createGPX( String trackName, long startTimeMillis, boolean include
         return gpxOutput.toString().replaceAll("\\'", "\"");
     }
 
-    private void createRteptBlock( StringBuilder output, Instruction instruction, Instruction nextI )
+    public void createRteptBlock( StringBuilder output, Instruction instruction, Instruction nextI )
     {
         output.append("\n<rtept lat=\"").append(Helper.round6(instruction.getFirstLat())).
                 append("\" lon=\"").append(Helper.round6(instruction.getFirstLon())).append("\">");
diff --git a/core/src/main/java/com/graphhopper/util/PMap.java b/core/src/main/java/com/graphhopper/util/PMap.java
index 1397c7aad5..5fccd296c1 100644
--- a/core/src/main/java/com/graphhopper/util/PMap.java
+++ b/core/src/main/java/com/graphhopper/util/PMap.java
@@ -77,7 +77,7 @@ public PMap put( String key, Object str )
 
     public PMap remove( String key )
     {
-        map.remove(key);
+        map.remove(key.toLowerCase());
         return this;
     }
 
diff --git a/core/src/test/java/com/graphhopper/util/PMapTest.java b/core/src/test/java/com/graphhopper/util/PMapTest.java
index b9ae820355..411895d687 100644
--- a/core/src/test/java/com/graphhopper/util/PMapTest.java
+++ b/core/src/test/java/com/graphhopper/util/PMapTest.java
@@ -35,6 +35,9 @@ public void keyCanHaveAnyCasing()
         assertEquals("valueA", subject.get("foo", ""));
         assertEquals("valueA", subject.get("FOO", ""));
         assertEquals("valueA", subject.get("Foo", ""));
+        
+        subject.remove("FoO");        
+        assertEquals("", subject.get("foo", ""));
     }
 
     @Test
diff --git a/docs/android/index.md b/docs/android/index.md
index 9e518cf79e..883563ad9c 100644
--- a/docs/android/index.md
+++ b/docs/android/index.md
@@ -61,6 +61,15 @@ The developer of Locus has create a routing plugin for [locus](http://www.locusm
 
 The free offline map app [Cruiser](http://wiki.openstreetmap.org/wiki/Cruiser) is using GraphHopper routing and allows also other things.
 
+## Frameworks
+
+### OSMBonusPack
+
+The [OSMBonusPack](https://github.com/MKergall/osmbonuspack) supports the GraphHopper Routing API via a [GraphHopperRoadManager](https://github.com/MKergall/osmbonuspack/wiki/WhichRoutingService) and also provides map tile integration for various providers.
+
+### GraphHopper Directions API
+
+The [GraphHopper Directions API Java client](https://github.com/graphhopper/directions-api-java-client/blob/master/README.md) supports fetching the route and instructions from official and custom servers.
 
 ## Limitations
 
diff --git a/docs/core/routing.md b/docs/core/routing.md
index 65d18c2e8a..4e364eb95e 100644
--- a/docs/core/routing.md
+++ b/docs/core/routing.md
@@ -1,7 +1,7 @@
 To do routing in your Java code you'll need just a few lines of code:
 
 ```java
-// create singleton
+// create one GraphHopper instance
 GraphHopper hopper = new GraphHopper().forServer();
 hopper.setOSMFile(osmFile);
 // where to store graphhopper files?
