diff --git a/isochrone/src/main/java/com/graphhopper/isochrone/algorithm/Isochrone.java b/isochrone/src/main/java/com/graphhopper/isochrone/algorithm/Isochrone.java
index abb378ba53..add3c0150e 100644
--- a/isochrone/src/main/java/com/graphhopper/isochrone/algorithm/Isochrone.java
+++ b/isochrone/src/main/java/com/graphhopper/isochrone/algorithm/Isochrone.java
@@ -210,12 +210,14 @@ private void searchInternal(int from) {
                     fromHeap.add(nEdge);
                 } else if (nEdge.weight > tmpWeight) {
                     fromHeap.remove(nEdge);
-                    nEdge.edge = iter.getEdge();
-                    nEdge.weight = tmpWeight;
-                    nEdge.distance = tmpDistance;
-                    nEdge.time = tmpTime;
-                    nEdge.parent = currEdge;
-                    fromHeap.add(nEdge);
+                    if ((exploreType == TIME && tmpTime < this.finishLimit) || tmpDistance < this.finishLimit) {
+                        nEdge.edge = iter.getEdge();
+                        nEdge.weight = tmpWeight;
+                        nEdge.distance = tmpDistance;
+                        nEdge.time = tmpTime;
+                        nEdge.parent = currEdge;
+                        fromHeap.add(nEdge);
+                    }
                 }
             }
 
diff --git a/web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java b/web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java
index 622266a139..857f180b26 100644
--- a/web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java
+++ b/web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java
@@ -86,7 +86,7 @@ public Response doGet(
         Isochrone isochrone = new Isochrone(queryGraph, weighting, reverseFlow);
 
         if (distanceInMeter > 0) {
-            double maxMeter = 50 * 1000;
+            double maxMeter = 100 * 1000;
             if (distanceInMeter > maxMeter)
                 throw new IllegalArgumentException("Specify a limit of less than " + maxMeter / 1000f + "km");
             if (nBuckets > (distanceInMeter / 500))
