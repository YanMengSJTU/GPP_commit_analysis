diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
index a4081c1b5a..507ba48465 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
@@ -15,13 +15,20 @@
     private static MarmosetHopper mh;
     private static MarmosetSocketServer mss;
 
-    public static void main(String[] args) throws IOException
+    public static void main(String[] args) throws IOException, InterruptedException
     {
         mh = new MarmosetHopper();
         mh.init();
 
         startFileServer();
         startWebSocketServer();
+
+        while (true) {
+            mh.timestep();
+            String data = mh.getVehicleData();
+            mss.distributeData(data);
+            Thread.sleep(1000);
+        }
     }
 
     private static void startWebSocketServer()
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
index 54bc596f1b..c4aa53a493 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
@@ -11,8 +11,8 @@
  * Created by alexander on 15/02/2016.
  */
 public class MarmosetHopper {
-    GraphHopper hopper;
 
+    GraphHopper hopper;
     List<VehicleController> vehicles;
 
     public MarmosetHopper() {
@@ -38,6 +38,12 @@ public void init()
         vehicles.add(new VehicleController(new Vehicle(0, 51.505, -0.09)));
     }
 
+    public void timestep() {
+        for (VehicleController v : vehicles) {
+            v.calculateStep();
+        }
+    }
+
     public String getVehicleData() {
         StringBuilder sb = new StringBuilder();
         for (VehicleController v : vehicles)
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
index 0e25b23718..b641ed3c94 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Vehicle.java
@@ -40,4 +40,11 @@ public String toString()
     {
         return String.format("%d|%f|%f", id, getLat(), getLon());
     }
+
+    public void moveTo(long newRoad, double newLat, double newLon)
+    {
+        currentRoadId = newRoad;
+        lat = newLat;
+        lon = newLon;
+    }
 }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java b/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
index d6f92b08f9..f12067861f 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/VehicleController.java
@@ -15,4 +15,8 @@ public Vehicle getVehicle()
     {
         return vehicle;
     }
+
+    public void calculateStep() {
+        vehicle.moveTo(0, vehicle.getLat() + 0.01, vehicle.getLon() + 0.01);
+    }
 }
diff --git a/marmoset/src/main/webapp/index.html b/marmoset/src/main/webapp/index.html
index a2dd5e1523..0e31e787a7 100644
--- a/marmoset/src/main/webapp/index.html
+++ b/marmoset/src/main/webapp/index.html
@@ -9,7 +9,7 @@
             #map {height: 100%;}
         </style>
     </head>
-    <body>
+    <body onload="initAll()">
         <div id="map"></div>
 
         <script src="main.js"></script>
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index 1d957079ca..0225b6c6b5 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -1,21 +1,70 @@
 /**
  * Created by alexander on 22/02/2016.
  */
+function initMap() {
+    window.carIcon = L.icon({
+        iconUrl: 'car-icon.png',
+        iconSize: [40,30]
+    });
 
-var carIcon = L.icon({
-    iconUrl: 'car-icon.png',
-    iconSize: [40,30]
-});
-
-var map = L.map('map').setView([51.505, -0.09], 13);
-L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
-    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>',
-    maxZoom: 18,
-    id: 'alxhill.p69lilm1',
-    accessToken: 'pk.eyJ1IjoiYWx4aGlsbCIsImEiOiJjaWtyMnM5cTAwMDFzd2RrcWxjdW14dGlhIn0._vGArimDzlTVhET5T_GZzA'
-}).addTo(map);
-
-var line = L.polyline([[51.505, -0.09], [51.5, -0.08]]);
-var marker1 = L.animatedMarker(line.getLatLngs(), {icon: carIcon});
-console.log(line.getLatLngs(), marker1);
-map.addLayer(marker1);
+    window.map = L.map('map').setView([51.505, -0.09], 13);
+    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
+        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>',
+        maxZoom: 18,
+        id: 'alxhill.p69lilm1',
+        accessToken: 'pk.eyJ1IjoiYWx4aGlsbCIsImEiOiJjaWtyMnM5cTAwMDFzd2RrcWxjdW14dGlhIn0._vGArimDzlTVhET5T_GZzA'
+    }).addTo(map);
+}
+
+
+function initAll() {
+    initMap();
+    carSet.init();
+}
+
+
+var carSet = {
+    _cars: [],
+
+    // start listening to the websocket and setup the callbacks
+    init: function() {
+        this.ws = new WebSocket("ws://localhost:8888");
+        this.ws.onmessage = function (e) {
+            this.processData(e.data);
+        }.bind(this);
+
+    },
+
+    // deals with the set of data that comes from the websocket
+    processData: function(data) {
+        var msgs = data.split(",");
+        for (var i = 0; i < msgs.length; i++) {
+            var msg = msgs[i].split("|");
+            var lat = parseFloat(msg[1]);
+            var lon = parseFloat(msg[2]);
+            var index = parseInt(msg[0]);
+            console.log(lat, lon, index);
+            if (this._cars[index]) {
+                this._cars[index].moveTo(lat, lon);
+            } else {
+                this._cars[index] = new Car(0, lat, lon);
+            }
+        }
+    }
+
+};
+
+
+var Car = function(road, lat, lon) {
+    this.road = road;
+    this.pos = [lat, lon];
+};
+
+Car.prototype = {
+    moveTo: function(lat, lon) {
+        var line = L.polyline([this.pos, [lat, lon]]);
+        var marker = L.animatedMarker(line.getLatLngs(), {icon: carIcon, interval: 1000});
+        this.pos = [lat, lon];
+        window.map.addLayer(marker);
+    }
+}
\ No newline at end of file
