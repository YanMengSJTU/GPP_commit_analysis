diff --git a/web/src/main/java/com/graphhopper/http/GHErrorHandler.java b/web/src/main/java/com/graphhopper/http/GHErrorHandler.java
index 742923b5fc..e1c4bced19 100644
--- a/web/src/main/java/com/graphhopper/http/GHErrorHandler.java
+++ b/web/src/main/java/com/graphhopper/http/GHErrorHandler.java
@@ -41,16 +41,15 @@ public void handle(String str, Request req, HttpServletRequest httpReq, HttpServ
             url += "?" + httpReq.getQueryString();
 
         if (throwable != null) {
-            String message = throwable.getMessage();
-            logger.error(message + "! Via:" + url, throwable);
+            logger.error("Internal error for request " + url, throwable);
         } else {
             String message = (String) httpReq.getAttribute("javax.servlet.error.message");
             if (httpRes.getStatus() / 100 == 4) {
-                logger.warn(message + ", via:" + url);
+                logger.warn("Bad request '" + message + "' " + url);
             } else if (message != null) {
-                logger.error("Internal error " + message + "! Via:" + url);
+                logger.error("Internal error with message " + message + " for " + url);
             } else {
-                logger.error("Internal error " + str + ", throwable unknown! Via:" + url);
+                logger.error("Internal error with unknown throwable (" + str + ") for " + url);
             }
         }
 
diff --git a/web/src/main/java/com/graphhopper/http/GHServer.java b/web/src/main/java/com/graphhopper/http/GHServer.java
index 3c0828a712..2386053a00 100644
--- a/web/src/main/java/com/graphhopper/http/GHServer.java
+++ b/web/src/main/java/com/graphhopper/http/GHServer.java
@@ -70,21 +70,20 @@ public void start(Injector injector) throws Exception {
         this.injector = injector;
         ResourceHandler resHandler = new ResourceHandler();
         resHandler.setDirectoriesListed(false);
-        resHandler.setWelcomeFiles(new String[]{
-                "index.html"
-        });
+        resHandler.setWelcomeFiles(new String[]{"index.html"});
         resHandler.setRedirectWelcome(false);
 
+        String contextPath = args.get("jetty.contextpath", "/");
         ContextHandler contextHandler = new ContextHandler();
-        contextHandler.setContextPath("/");
+        contextHandler.setErrorHandler(new GHErrorHandler());
+        contextHandler.setContextPath(contextPath);
         contextHandler.setBaseResource(Resource.newResource(args.get("jetty.resourcebase", "./web/src/main/webapp")));
         contextHandler.setHandler(resHandler);
 
         server = new Server();
         // getSessionHandler and getSecurityHandler should always return null
         ServletContextHandler servHandler = new ServletContextHandler(ServletContextHandler.NO_SECURITY | ServletContextHandler.NO_SESSIONS);
-        servHandler.setErrorHandler(new GHErrorHandler());
-        servHandler.setContextPath("/");
+        servHandler.setContextPath(contextPath);
 
         // Putting this here (and not in the guice servlet module) because it should take precedence
         // over more specific routes. And guice, strangely, is order-dependent (even though, except in the servlet
