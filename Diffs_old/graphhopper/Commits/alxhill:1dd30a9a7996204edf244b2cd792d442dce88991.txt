diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
index 50ba1dd2c7..44061825ac 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/Marmoset.java
@@ -1,8 +1,6 @@
 package com.graphhopper.marmoset;
-
 import fi.iki.elonen.NanoHTTPD;
 import fi.iki.elonen.SimpleWebServer;
-import fi.iki.elonen.util.ServerRunner;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -23,10 +21,11 @@
     private static boolean isRunning = false;
 
     private static Logger logger = LoggerFactory.getLogger(Marmoset.class);
-    private static Thread marmosetThread;
 
-    public static void main(String[] args) throws IOException, InterruptedException
-    {
+    private static int iteration;
+
+
+    public static void main(String[] args) throws IOException, InterruptedException {
         mh = new MarmosetHopper();
         mh.init();
 
@@ -36,51 +35,19 @@ public static void main(String[] args) throws IOException, InterruptedException
         System.out.println("Press enter to terminate");
         try {
             System.in.read();
-        }
-        catch (Throwable ignored) {}
+        } catch (Throwable ignored) {}
 
         mss.stop();
         fileServer.stop();
-        if (marmosetThread != null)
-        {
-            marmosetThread.interrupt();
-        }
     }
 
-    public static void run(int initialVehicles)
-    {
-        if (!isRunning)
-        {
+    public static void start(int initialVehicles) {
+        if (!isRunning) {
             isRunning = true;
-            Runnable task = () -> {
-                int i = 0;
-                mh.startSimulation(initialVehicles);
-                while (!Thread.interrupted())
-                {
-                    if (!mh.paused())
-                    {
-                        logger.info("===ITERATION [" + i + "]===");
-                        i++;
-                        mh.timestep();
-                        ByteBuffer data = mh.getVehicleBytes();
-                        mss.distributeData(data);
-                    }
-                    try
-                    {
-                        Thread.sleep(1000);
-                    }
-                    catch (InterruptedException e)
-                    {
-                        return;
-                    }
-                }
-            };
-
-            marmosetThread = new Thread(task);
-            marmosetThread.start();
-        }
-        else if (mh.paused())
-        {
+            iteration = 0;
+            mh.startSimulation(initialVehicles);
+            nextTimestep();
+        } else if (mh.paused()) {
             mh.unpause();
         }
     }
@@ -92,7 +59,7 @@ public static void pause()
 
     public static void addVehicles(int count)
     {
-        System.out.println("Adding " + count + " vehicles (" + (count + mh.getVehicleCount()) + ")");
+        logger.info("Adding " + count + " vehicles (" + (count + mh.getVehicleCount()) + ")");
         IntStream.range(0, count).forEach(i -> mh.addVehicle());
     }
 
@@ -102,7 +69,7 @@ private static void startWebSocketServer()
 
         mss = new MarmosetSocketServer(new InetSocketAddress(port));
         mss.start();
-        System.out.println("Listening for websocket requests.");
+        logger.info("Listening for websocket requests.");
     }
 
     private static void startFileServer()
@@ -112,11 +79,19 @@ private static void startFileServer()
         try
         {
             fileServer.start(5000, false);
-            System.out.println("File server started");
+            logger.info("File server started");
         }
         catch (IOException e)
         {
-            System.err.println("Failed to start server: " + e);
+            logger.info("Failed to start server: " + e);
         }
     }
+
+    public static void nextTimestep() {
+        logger.info("===ITERATION [" + iteration + "]===");
+        iteration++;
+        mh.timestep();
+        ByteBuffer data = mh.getVehicleBytes();
+        mss.distributeData(data);
+    }
 }
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
index 9d1a5e0ccb..54a18b8556 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetHopper.java
@@ -69,7 +69,6 @@ public synchronized void startSimulation(int initialVehicles)
     {
         logger.info("Starting simulation with " + initialVehicles + " vehicles");
         IntStream.range(0, initialVehicles).forEach(v -> addVehicle());
-        vehicles = vehicles.stream().filter(v -> !v.isFinished()).collect(Collectors.toList());
     }
 
     public synchronized void timestep()
diff --git a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
index 8f0c5796ad..75fc16f487 100644
--- a/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
+++ b/marmoset/src/main/java/com/graphhopper/marmoset/MarmosetSocketServer.java
@@ -69,7 +69,7 @@ public void onMessage(WebSocket webSocket, String s)
         if (s.matches("start\\|\\d+"))
         {
             String num = s.split("\\|")[1];
-            Marmoset.run(Integer.valueOf(num, 10));
+            Marmoset.start(Integer.valueOf(num, 10));
         }
         else if (s.matches("addVehicles\\|\\d+"))
         {
@@ -80,6 +80,10 @@ else if (s.equals("pause"))
         {
             Marmoset.pause();
         }
+        else if (s.equals("next"))
+        {
+            Marmoset.nextTimestep();
+        }
     }
 
     @Override
diff --git a/marmoset/src/main/webapp/main.js b/marmoset/src/main/webapp/main.js
index f7fc50a2a9..94ac51cd03 100644
--- a/marmoset/src/main/webapp/main.js
+++ b/marmoset/src/main/webapp/main.js
@@ -63,6 +63,11 @@ var carSet = {
         this.ws.binaryType = "arraybuffer";
         this.ws.onmessage = function (e) {
             this.processData(e.data);
+            window.setTimeout(function () {
+                // send the 'next' command to tell the server that it's ready to
+                // received more data from the back end
+                this.ws.send("next");
+            }.bind(this));
         }.bind(this);
         this.ws.onopen = function (e) {
             this.ws.send("start|" + count);
@@ -137,7 +142,7 @@ Car.prototype = {
         if (this.marker == null) {
             this.marker = L.angleMarker([lat,lon], {
                 icon: carIcon,
-                angle: 180
+                angle: 180*Math.random()
             });
             window.map.addLayer(this.marker);
         } else {
