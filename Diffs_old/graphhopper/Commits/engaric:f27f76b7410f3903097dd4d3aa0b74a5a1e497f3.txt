diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
index 4687470858..0d4bfba3ca 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperGPXParserRouteTest.java
@@ -95,7 +95,7 @@ CloseableHttpResponse doSendAndGetResponse(String serviceUrl)
 		return httpClient.execute(httpget);
 	}
 
-	public String parseRoute(String routeType, String vehicle, String[] points) {
+	public String parseRoute(String routeType, String avoidance,String vehicle, String[] points) {
 		LOG.debug("Here we are");
 		// Set up the URL
 		String xmlResponse = "";
@@ -130,6 +130,11 @@ public String parseRoute(String routeType, String vehicle, String[] points) {
 		sb.append("&vehicle=");
 		sb.append(vehicle);
 		sb.append(coordinateString);
+		if(!avoidance.equals(""))
+		{
+		sb.append("&weighting=fastavoid");
+		sb.append("&avoidances="+avoidance);
+		}
 
 		try {
 			CloseableHttpResponse httpResponse = sendAndGetResponse(sb
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
index 6198d33918..6b2107c282 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/gpx/graphhopper/GraphHopperJSONParser.java
@@ -122,7 +122,7 @@ public void parse(String routeType,String avoidance, String vehicle, String[] st
 					.getTestProperty("graphHopperWebUrlViaApigee");
 		} else {
 			graphHopperUrl = IntegrationTestProperties
-					.getTestProperty("graphHopperWebUrlViaApigee");
+					.getTestProperty("graphHopperWebUrl");
 		}
 
 		String apikey = IntegrationTestProperties.getTestProperty("apiKey");
@@ -139,8 +139,10 @@ public void parse(String routeType,String avoidance, String vehicle, String[] st
 		sb.append("&apikey=");
 		sb.append(apikey);
 		sb.append("&points_encoded=false");
-		sb.append("&avoidances="+avoidance);
-		sb.append("&weighting=fastavoid");
+		
+		if (!avoidance.equals("")){
+			sb.append("&avoidances="+avoidance);
+		sb.append("&weighting=fastavoid");}
 		GraphHopperGPXParserRouteTest GPHService = new GraphHopperGPXParserRouteTest();
 		try {
 			CloseableHttpResponse httpResponse = GPHService
diff --git a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
index abdff0cf7d..91855c5fd7 100644
--- a/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
+++ b/acceptancetesting/src/main/java/uk/co/ordnancesurvey/routing/GraphHopperUIUtil.java
@@ -147,7 +147,7 @@ public void getRouteFromUI(String routeType, String avoidance,
 			}
 		}
 
-		if (avoidance != "") {
+		if (!avoidance.equals("")) {
 
 			clickElement(settingsButton);
 			switch (avoidance.toLowerCase().trim()) {
@@ -221,7 +221,7 @@ public void getRouteFromServiceWithAvoidance(String routeType,
 
 		if (IntegrationTestProperties.getTestProperty("routeType")
 				.equals("gpx")) {
-			GPHService.parseRoute("gpx", routeType, points);
+			GPHService.parseRoute("gpx",avoidance, routeType, points);
 		}
 
 		else {
@@ -235,7 +235,7 @@ public void getRouteFromService(String routeType, String... points) {
 
 		if (IntegrationTestProperties.getTestProperty("routeType")
 				.equals("gpx")) {
-			GPHService.parseRoute("gpx", routeType, points);
+			GPHService.parseRoute("gpx", "",routeType, points);
 		}
 
 		else {
diff --git a/acceptancetesting/src/test/cucumber/DPNRouting.feature b/acceptancetesting/src/test/cucumber/DPNRouting.feature
index 4fee0138ce..f82d3869ed 100644
--- a/acceptancetesting/src/test/cucumber/DPNRouting.feature
+++ b/acceptancetesting/src/test/cucumber/DPNRouting.feature
@@ -8,7 +8,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco        | waypointdesc            | azimuth | direction | time  | distance |
-      | 4             | 53.1356,-1.820891 | Continue onto Mill Lane | 69.0    | E         | 23165 | 32.2     |
+      | 4             | 53.1356,-1.820891 | Continue onto Mill Lane | 70.0    | E         | 23171 | 32.2     |
 
     Examples: 
       | pointA              | pointB             | routetype |
@@ -19,8 +19,8 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance |
-      | 2             | 53.221055,-1.623152 | Turn right onto B Road        | 143.0   | SE        | 953593 | 1324.4   |
-      | 5             | 53.197269,-1.608797 | Continue onto Chatsworth Road | 180.0   | S         | 670049 | 930.6    |
+      | 2             | 53.221055,-1.623152 | Turn right onto B Road        | 157.0   | SE        | 984273 | 1367.1   |
+      | 5             | 53.197269,-1.608797 | Continue onto Chatsworth Road | 181.0   | S         | 678871 | 942.9    |
 
     Examples: 
       | pointA              | pointB              | routetype |
@@ -31,7 +31,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance |
-      | 3             | 53.042479,-1.820522 | Turn right onto Route | 237.0   | SW        | 25753 | 35.8     |
+      | 3             | 53.042479,-1.820522 | Turn right onto Route | 297.0   | NW        | 35181 | 48.9     |
 
     Examples: 
       | pointA              | pointB              | routetype |
@@ -42,7 +42,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc         | azimuth | direction | time   | distance |
-      | 4             | 53.176842,-2.069334 | Turn left onto Track | 265.0   | W         | 171340 | 238.0    |
+      | 4             | 53.176842,-2.069334 | Turn left onto Track | 255.0   | W         | 187602 | 260.6    |
 
     Examples: 
       | pointA              | pointB              | routetype |
@@ -53,7 +53,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc                | azimuth | direction | time  | distance |
-      | 5             | 53.11862,-1.909506 | Turn slight left onto Route | 152.0   | SE        | 40897 | 56.8     |
+      | 5             | 53.11862,-1.909506 | Turn slight left onto Route | 169.0   | S         | 51007 | 70.8     |
 
     Examples: 
       | pointA              | pointB             | routetype |
@@ -64,7 +64,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc          | azimuth | direction | time  | distance |
-      | 3             | 53.066198,-1.905401 | Turn right onto Track | 103.0   | E         | 38673 | 53.7     |
+      | 3             | 53.066198,-1.905401 | Turn right onto Track | 105.0   | E         | 38678 | 53.7     |
 
     Examples: 
       | pointA             | pointB              | routetype |
@@ -75,29 +75,29 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance |
-      | 2             | 53.347406,-1.760973 | Turn left onto Castleton Road | 81.0    | E         | 855317 | 1187.9   |
+      | 2             | 53.347406,-1.760973 | Turn left onto Castleton Road | 109.0   | E         | 878424 | 1220.0   |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      |
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.348832,-1.761122 | 53.197338,-1.594157 | foot      | ARoad     |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Hernstone Lane )
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                 | azimuth | direction | time   | distance |
-      | 3             | 53.305821,-1.814508 | Continue onto Hernstone Lane | 299.0   | NW        | 298331 | 414.4    |
+      | 3             | 53.305821,-1.814508 | Continue onto Hernstone Lane | 299.0   | NW        | 304923 | 423.5    |
 
     Examples: 
-      | pointA              | pointB              | routetype |
-      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      |
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.300714,-1.786126 | 53.287803,-1.816746 | foot      | ARoad     |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route (Monyash Road)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco         | waypointdesc               | azimuth | direction | time   | distance |
-      | 5             | 53.20882,-1.688212 | Continue onto Monyash Road | 54.0    | NE        | 445921 | 619.3    |
+      | 5             | 53.20882,-1.688212 | Continue onto Monyash Road | 55.0    | NE        | 482979 | 670.8    |
 
     Examples: 
       | pointA              | pointB              | routetype |
@@ -108,7 +108,7 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc               | azimuth | direction | time   | distance |
-      | 4             | 53.143286,-1.647841 | Turn right onto Elton Road | 287.0   | W         | 193296 | 268.5    |
+      | 4             | 53.143286,-1.647841 | Turn right onto Elton Road | 282.0   | W         | 195384 | 271.4    |
 
     Examples: 
       | pointA              | pointB              | routetype |
@@ -118,8 +118,8 @@ Feature: Verify a route from A to B
   Scenario Outline: Verify  Road Names on a Walking Route  (Cardlemere Lane)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time   | distance |
-      | 4             | 53.129383,-1.754591 | Turn slight left onto Cardlemere Lane | 127.0   | SE        | 581179 | 807.2    |
+      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time   | distance |
+      | 4             | 53.129383,-1.754591 | Turn left onto Cardlemere Lane | 121.0   | SE        | 594909 | 826.3    |
 
     Examples: 
       | pointA              | pointB             | routetype |
@@ -130,9 +130,9 @@ Feature: Verify a route from A to B
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance |
-      | 2             | 53.23952,-1.803512  | Turn left onto Sough Lane       | 225.0   | SW        | 350707 | 487.1    |
-      | 29            | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 205.0   | SW        | 48332  | 67.1     |
-      | 34            | 53.129146,-1.866738 | Turn left onto Cheadle Road     | 190.0   | S         | 169171 | 235.0    |
+      | 2             | 53.23952,-1.803512  | Turn left onto Sough Lane       | 189.0   | S         | 452948 | 629.1    |
+      | 29            | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |
+      | 34            | 53.129146,-1.866738 | Turn left onto Cheadle Road     | 179.0   | S         | 171195 | 237.8    |
 
     Examples: 
       | pointA              | pointB            | pointC              | routetype |
@@ -142,87 +142,159 @@ Feature: Verify a route from A to B
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Newhouses Farm)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time    | distance |
-      | 7             | 53.305394,-1.819253 | Turn slight left onto Hernstone Lane  | 43.0    | NE        | 298331  | 414.4    |
-      | 12            | 53.25475,-1.727239  | Turn slight left onto Castlegate Lane | 179.0   | S         | 1149598 | 1596.7   |
+      | wayPointIndex | waypointco          | waypointdesc                          | azimuth | direction | time    | distance | avoidance |
+      | 7             | 53.305394,-1.819253 | Turn slight right onto Hernstone Lane | 66.0    | NE        | 304923  | 423.5    | ARoad     |
+      | 12            | 53.25475,-1.727239  | Continue onto Castlegate Lane         | 183.0   | S         | 1156073 | 1605.7   | ARoad     |
 
     Examples: 
-      | pointA              | pointB             | pointC              | routetype |
-      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      |
+      | pointA              | pointB             | pointC              | routetype | avoidance |
+      | 53.303058,-1.836061 | 53.28261,-1.761964 | 53.233207,-1.633878 | foot      | ARoad     |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route using one intermediate point ( Bakewell)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                            | azimuth | direction | time    | distance |
-      | 6             | 53.145466,-1.778242 | Turn slight right onto Tissington Trail | 355.0   | N         | 1731124 | 2404.3   |
-      | 15            | 53.195536,-1.762602 | Continue onto Church Street             | 74.0    | E         | 906984  | 1259.7   |
-      | 19            | 53.20882,-1.688212  | Continue onto Monyash Road              | 54.0    | NE        | 359536  | 499.4    |
+      | wayPointIndex | waypointco          | waypointdesc                   | azimuth | direction | time    | distance |
+      | 6             | 53.145466,-1.778242 | Continue onto Tissington Trail | 17.0    | N         | 2006616 | 2787.0   |
+      | 15            | 53.195118,-1.761669 | Continue onto Church Street    | 38.0    | NE        | 897815  | 1247.0   |
+      | 19            | 53.20882,-1.688212  | Continue onto Monyash Road     | 55.0    | NE        | 369935  | 513.8    |
 
     Examples: 
-      | pointA              | pointB              | pointC              | routetype |
-      | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 | foot      |
+      | pointA              | pointB              | pointC              | routetype | avoidance |
+      | 53.138247,-1.752507 | 53.195653,-1.762655 | 53.211574,-1.682278 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Mill Lane)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time   | distance |
-      | 5             | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 205.0   | SW        | 48332  | 67.1     |
-      | 12            | 53.131356,-1.852045 | Turn slight right onto Path     | 305.0   | NW        | 700132 | 972.4    |
+      | 5             | 53.140548,-1.810174 | Turn slight left onto Mill Lane | 216.0   | SW        | 49046  | 68.1     |
+      | 12            | 53.131356,-1.852045 | Turn slight right onto Path     | 317.0   | NW        | 721024 | 1001.4   |
       | 16            | 53.181282,-1.869038 | Turn left onto Market Place     | 315.0   | NW        | 791    | 1.1      |
 
     Examples: 
-      | pointA              | pointB              | pointC             | pointD              | routetype |
-      | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 | foot      |
+      | pointA              | pointB              | pointC             | pointD              | routetype | avoidance |
+      | 53.139805,-1.803217 | 53.133646,-1.826223 | 53.14993,-1.868096 | 53.181298,-1.869034 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Tag Lane)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                            | azimuth | direction | time   | distance |
-      | 7             | 53.227765,-1.848174 | Turn slight right onto Old Coalpit Lane | 73.0    | E         | 902277 | 1253.2   |
-      | 18            | 53.244806,-1.809527 | Turn slight left onto Blackwell Dale    | 25.0    | NE        | 988875 | 1373.4   |
-      | 26            | 53.281439,-1.765527 | Continue onto Whitecross Road           | 53.0    | NE        | 218224 | 303.1    |
-      | 32            | 53.224822,-1.70717  | Turn left onto Hall End Lane            | 68.0    | E         | 78256  | 108.7    |
+      | wayPointIndex | waypointco          | waypointdesc                    | azimuth | direction | time    | distance | avoidance |
+      | 7             | 53.227765,-1.848174 | Turn left onto Old Coalpit Lane | 58.0    | NE        | 908755  | 1262.2   | ARoad     |
+      | 18            | 53.244806,-1.809527 | Continue onto Blackwell Dale    | 48.0    | NE        | 1027560 | 1427.2   |           |
+      | 26            | 53.281579,-1.765467 | Continue onto Whitecross Road   | 59.0    | NE        | 210216  | 292.0    |           |
+      | 32            | 53.224822,-1.70717  | Turn left onto Hall End Lane    | 59.0    | NE        | 80272   | 111.5    |           |
 
     Examples: 
-      | pointA              | pointB              | pointC              | pointD              | routetype |
-      | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 | foot      |
+      | pointA              | pointB              | pointC              | pointD              | routetype | avoidance |
+      | 53.190346,-1.802704 | 53.239419,-1.818421 | 53.280601,-1.764495 | 53.233207,-1.633878 | foot      |           |
 
   @Routing
   Scenario Outline: Verify  Road Names on a Walking Route  using 2 intermediate waypoints (Dowlow Farm)
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI via "<pointC>" and "<pointD>"
     Then I should be able to verify the waypoints on the route map:
-      | wayPointIndex | waypointco          | waypointdesc                       | azimuth | direction | time   | distance |
-      | 2             | 53.206014,-1.83483  | Turn right onto Midshires Way      | 191.0   | S         | 265173 | 368.3    |
-      | 19            | 53.202937,-1.870926 | Continue onto Glutton Dale         | 220.0   | SW        | 267936 | 372.1    |
-      | 28            | 53.181324,-1.869107 | Turn slight left onto Market Place | 135.0   | SE        | 4729   | 6.6      |
-      | 32            | 53.129146,-1.866738 | Continue onto Cheadle Road         | 190.0   | S         | 169171 | 235.0    |
+      | wayPointIndex | waypointco          | waypointdesc                  | azimuth | direction | time   | distance |
+      | 2             | 53.206014,-1.83483  | Turn right onto Midshires Way | 191.0   | S         | 265210 | 368.3    |
+      | 19            | 53.202937,-1.870926 | Continue onto Glutton Dale    | 254.0   | W         | 279743 | 388.5    |
+      | 28            | 53.124725,-1.870683 | Turn right onto Cheadle Road  | 243.0   | SW        | 121072 | 168.2    |
 
     Examples: 
-      | pointA              | pointB              | pointC              | pointD             | routetype |
-      | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 | foot      |
+      | pointA              | pointB              | pointC              | pointD             | routetype | avoidance |
+      | 53.206965,-1.839021 | 53.203607,-1.857557 | 53.149631,-1.867364 | 53.11417,-1.895082 | foot      |           |
 
   # Avoidances : A Road,Boulders,Cliff,Inland Water,Marsh,Quarry Or Pit,Scree,Rock,Mud,Sand,Shingle
+  #scree
   @Routing
-  Scenario Outline: Verify  Road Names on a Walking Route  (Mill lane-BUXTON)
+  Scenario Outline: Verify DPN Route without Scree avoidance
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance |
-      | 4             | 53.252061,-1.826618 | continue onto Path | 97.0    | E         | 24386 | 33.87    |
+      | 4             | 53.252061,-1.826618 | continue onto Path | 97.0    | E         | 24386 | 33.9     |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
       | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      |           |
 
   @Routing
-  Scenario Outline: Verify  Road Names on a Walking Route  (Mill lane-BUXTON)
+  Scenario Outline: Verify DPN Route with Scree avoidance
     Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
     Then I should be able to verify the waypoints not on the route map:
       | wayPointIndex | waypointco          | waypointdesc       | azimuth | direction | time  | distance |
-      | 4             | 53.252061,-1.826618 | continue onto Path | 97.0    | E         | 24386 | 33.87    |
+      | 4             | 53.252061,-1.826618 | continue onto Path | 97.0    | E         | 24386 | 33.9     |
+
+    Examples: 
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      | scree     |
+
+  #cliff
+  @Routing
+  Scenario Outline: Verify DPN Route without cliff avoidance
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance |
+      | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    |
+
+    Examples: 
+      | pointA             | pointB              | routetype | avoidance |
+      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      |           |
+
+  @Routing
+  Scenario Outline: Verify DPN Route with cliff avoidance
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Then I should be able to verify the waypoints not on the route map:
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time   | distance |
+      | 4             | 53.312731,-1.627617 | Continue onto Route | 164.0   | S         | 264332 | 367.1    |
+
+    Examples: 
+      | pointA             | pointB              | routetype | avoidance |
+      | 53.31676,-1.631903 | 53.156465,-1.908797 | foot      | cliff     |
+
+  @Routing
+  Scenario Outline: Verify DPN Route with cliff avoidance
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance |
+      | 3             | 53.547029,-1.979038 | continue onto Route | 191.0   | S         | 3920 | 5.4      |
+      | 5             | 53.546893,-1.979082 | continue onto Route | 180.0   | S         | 5085 | 7.1      |
+      | 7             | 53.542735,-1.981237 | continue onto Route | 185.0   | S         | 9321 | 12.9     |
+
+    Examples: 
+      | pointA            | pointB              | routetype | avoidance |
+      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      |           |
+
+  @Routing
+  Scenario Outline: Verify DPN Route with cliff avoidance
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Then I should be able to verify the waypoints not on the route map:
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time | distance |
+      | 3             | 53.547029,-1.979038 | continue onto Route | 191.0   | S         | 3920 | 5.4      |
+      | 5             | 53.546893,-1.979082 | continue onto Route | 180.0   | S         | 5085 | 7.1      |
+      | 7             | 53.542735,-1.981237 | continue onto Route | 185.0   | S         | 9321 | 12.9     |
+
+    Examples: 
+      | pointA            | pointB              | routetype | avoidance |
+      | 53.5534,-1.983177 | 53.540061,-1.978324 | foot      | cliff     |
+
+  #boulders
+  @Routing
+  Scenario Outline: Verify DPN Route without boulders avoidance
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Then I should be able to verify the waypoints on the route map:
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance |
+      | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    |
+
+    Examples: 
+      | pointA              | pointB              | routetype | avoidance |
+      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      |           |
+
+  @Routing
+  Scenario Outline: Verify DPN Route with boulders avoidance
+    Given I request a route between "<pointA>" and "<pointB>" as a "<routetype>" from RoutingAPI and avoid "<avoidance>"
+    Then I should be able to verify the waypoints not on the route map:
+      | wayPointIndex | waypointco          | waypointdesc        | azimuth | direction | time  | distance |
+      | 3             | 53.309004,-1.627564 | Turn left onto Path | 98.0    | E         | 99563 | 138.3    |
 
     Examples: 
       | pointA              | pointB              | routetype | avoidance |
-      | 53.267104,-1.818304 | 53.131858,-1.661941 | foot      |  scree    |
+      | 53.311217,-1.629849 | 53.156465,-1.908797 | foot      | boulders  |
