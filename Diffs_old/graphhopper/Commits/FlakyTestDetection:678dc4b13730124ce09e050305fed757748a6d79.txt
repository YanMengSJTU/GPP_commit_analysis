diff --git a/core/src/main/java/com/graphhopper/util/Constants.java b/core/src/main/java/com/graphhopper/util/Constants.java
index 57ca5e6c90..b300b1c3e8 100644
--- a/core/src/main/java/com/graphhopper/util/Constants.java
+++ b/core/src/main/java/com/graphhopper/util/Constants.java
@@ -21,6 +21,7 @@
 
 import java.io.InputStreamReader;
 import java.util.List;
+import java.util.StringTokenizer;
 
 import static com.graphhopper.util.Helper.readFile;
 
@@ -32,6 +33,8 @@
      * The value of <tt>System.getProperty("java.version")</tt>. *
      */
     public static final String JAVA_VERSION = System.getProperty("java.version");
+
+
     /**
      * The value of <tt>System.getProperty("os.name")</tt>. *
      */
@@ -59,6 +62,11 @@
     public static final String OS_ARCH = System.getProperty("os.arch");
     public static final String OS_VERSION = System.getProperty("os.version");
     public static final String JAVA_VENDOR = System.getProperty("java.vendor");
+    public static final String JVM_SPEC_VERSION = System.getProperty("java.specification.version");
+    public static final boolean JRE_IS_MINIMUM_JAVA9;
+    private static final int JVM_MAJOR_VERSION;
+    private static final int JVM_MINOR_VERSION;
+
     public static final int VERSION_NODE = 5;
     public static final int VERSION_EDGE = 14;
     public static final int VERSION_SHORTCUT = 2;
@@ -73,6 +81,15 @@
     public static final boolean SNAPSHOT;
 
     static {
+        final StringTokenizer st = new StringTokenizer(JVM_SPEC_VERSION, ".");
+        JVM_MAJOR_VERSION = Integer.parseInt(st.nextToken());
+        if (st.hasMoreTokens()) {
+            JVM_MINOR_VERSION = Integer.parseInt(st.nextToken());
+        } else {
+            JVM_MINOR_VERSION = 0;
+        }
+        JRE_IS_MINIMUM_JAVA9 = JVM_MAJOR_VERSION > 1 || (JVM_MAJOR_VERSION == 1 && JVM_MINOR_VERSION >= 9);
+
         String version = "0.0";
         try {
             // see com/graphhopper/version file in resources which is modified in the maven packaging process
diff --git a/core/src/main/java/com/graphhopper/util/Helper.java b/core/src/main/java/com/graphhopper/util/Helper.java
index dd1ab0e2ce..d4c4da0246 100644
--- a/core/src/main/java/com/graphhopper/util/Helper.java
+++ b/core/src/main/java/com/graphhopper/util/Helper.java
@@ -371,7 +371,7 @@ public static void cleanMappedByteBuffer(final ByteBuffer buffer) {
             AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {
                 @Override
                 public Object run() throws Exception {
-                    if (Constants.JAVA_VERSION.equals("9-ea")) {
+                    if (Constants.JRE_IS_MINIMUM_JAVA9) {
                         // >=JDK9 class sun.misc.Unsafe { void invokeCleaner(ByteBuffer buf) }
                         final Class<?> unsafeClass = Class.forName("sun.misc.Unsafe");
                         // we do not need to check for a specific class, we can call the Unsafe method with any buffer class
diff --git a/pom.xml b/pom.xml
index 95f343fea1..c6889af7dd 100644
--- a/pom.xml
+++ b/pom.xml
@@ -287,31 +287,10 @@
         <profile>
             <id>jdk9</id>
             <activation>
-                <activeByDefault>false</activeByDefault>                                
-                <jdk>9-ea</jdk>
+                <activeByDefault>false</activeByDefault>
+                <jdk>9</jdk>
             </activation>
-            <properties />           
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-failsafe-plugin</artifactId>
-                        <configuration>
-                            <systemPropertyVariables />
-                            <argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine>
-                        </configuration>
-                    </plugin>
-                    <plugin>
-                        <groupId>org.apache.maven.plugins</groupId>
-                        <artifactId>maven-surefire-plugin</artifactId>
-                        <version>2.19.1</version>
-                        <configuration>
-                            <!-- See #852 and #701 for the add exports or add opens option
-                            -->                            
-                            <argLine>-Xmx100m -Xms100m --add-opens java.base/java.lang=ALL-UNNAMED</argLine>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
+            <!-- 1. reader-shp does not work yet with jdk9. 2. See #852 and #701 for possible compiler options -->
         </profile>
     </profiles>
 
