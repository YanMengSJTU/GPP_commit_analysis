diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java b/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java
index c3d5dea..cef6f89 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java
@@ -351,7 +351,7 @@ public Cursor query(@NonNull String sql, @NonNull String... args) {
    * @see SQLiteDatabase#insert(String, String, ContentValues)
    */
   // TODO @WorkerThread
-  public long insert(@NonNull String triggerPath, @NonNull String table, @NonNull ContentValues values) {
+  public long insert(@NonNull Set<String> triggerPath, @NonNull String table, @NonNull ContentValues values) {
     return insert(triggerPath, table, values, CONFLICT_NONE);
   }
 
@@ -361,7 +361,7 @@ public long insert(@NonNull String triggerPath, @NonNull String table, @NonNull
    * @see SQLiteDatabase#insertWithOnConflict(String, String, ContentValues, int)
    */
   // TODO @WorkerThread
-  public long insert(String triggerPath, @NonNull String table, @NonNull ContentValues values,
+  public long insert(Set<String> triggerPath, @NonNull String table, @NonNull ContentValues values,
                      @ConflictAlgorithm int conflictAlgorithm) {
     SQLiteDatabase db = getWriteableDatabase();
 
@@ -375,7 +375,7 @@ public long insert(String triggerPath, @NonNull String table, @NonNull ContentVa
 
     if (rowId != -1) {
       // Only send a table trigger if the insert was successful.
-      sendTableTrigger(Collections.singleton(triggerPath));
+      sendTableTrigger(triggerPath);
     }
     return rowId;
   }
@@ -387,7 +387,7 @@ public long insert(String triggerPath, @NonNull String table, @NonNull ContentVa
    * @see SQLiteDatabase#delete(String, String, String[])
    */
   // TODO @WorkerThread
-  public int delete(@NonNull String triggerPath, @NonNull String table, @Nullable String whereClause,
+  public int delete(@NonNull Set<String> triggers, @NonNull String table, @Nullable String whereClause,
       @Nullable String... whereArgs) {
     SQLiteDatabase db = getWriteableDatabase();
 
@@ -401,7 +401,7 @@ public int delete(@NonNull String triggerPath, @NonNull String table, @Nullable
 
     if (rows > 0) {
       // Only send a table trigger if rows were affected.
-      sendTableTrigger(Collections.singleton(triggerPath));
+      sendTableTrigger(triggers);
     }
     return rows;
   }
@@ -413,7 +413,7 @@ public int delete(@NonNull String triggerPath, @NonNull String table, @Nullable
    * @see SQLiteDatabase#update(String, ContentValues, String, String[])
    */
   // TODO @WorkerThread
-  public int update(@NonNull String triggerPath, @NonNull String table, @NonNull ContentValues values,
+  public int update(@NonNull Set<String> triggerPath, @NonNull String table, @NonNull ContentValues values,
       @Nullable String whereClause, @Nullable String... whereArgs) {
     return update(triggerPath, table, values, CONFLICT_NONE, whereClause, whereArgs);
   }
@@ -425,7 +425,7 @@ public int update(@NonNull String triggerPath, @NonNull String table, @NonNull C
    * @see SQLiteDatabase#updateWithOnConflict(String, ContentValues, String, String[], int)
    */
   // TODO @WorkerThread
-  public int update(@NonNull String triggerPath, @NonNull String table,
+  public int update(@NonNull Set<String> triggerPath, @NonNull String table,
                     ContentValues values, @ConflictAlgorithm int conflictAlgorithm, @Nullable String whereClause,
                     @Nullable String... whereArgs) {
     SQLiteDatabase db = getWriteableDatabase();
@@ -441,7 +441,7 @@ public int update(@NonNull String triggerPath, @NonNull String table,
 
     if (rows > 0) {
       // Only send a table trigger if rows were affected.
-      sendTableTrigger(Collections.singleton(triggerPath));
+      sendTableTrigger(triggerPath);
     }
     return rows;
   }
