diff --git a/sample/build.gradle b/sample/build.gradle
index b83e1cb..b277344 100644
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -52,8 +52,8 @@ dependencies {
 android {
     compileSdkVersion versions.compileSdk
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_7
-        targetCompatibility JavaVersion.VERSION_1_7
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
     }
 
     lintOptions {
diff --git a/sample/src/main/AndroidManifest.xml b/sample/src/main/AndroidManifest.xml
index 7944ab2..c4214a1 100644
--- a/sample/src/main/AndroidManifest.xml
+++ b/sample/src/main/AndroidManifest.xml
@@ -16,7 +16,8 @@
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
         android:theme="@style/AppTheme">
-        <activity android:name=".ui.SplashActivity">
+        <activity
+            android:name=".ui.SplashActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
 
@@ -24,7 +25,9 @@
                 <category android:name="android.intent.category.DEFAULT"/>
             </intent-filter>
         </activity>
-        <activity android:name=".ui.MainActivity">
+        <activity
+            android:name=".ui.MainActivity"
+            android:launchMode="singleTask">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
             </intent-filter>
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/TodoApp.java b/sample/src/main/java/com/example/sqlbrite/todo/TodoApp.java
index ba04ad6..9b8becd 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/TodoApp.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/TodoApp.java
@@ -15,19 +15,37 @@
  */
 package com.example.sqlbrite.todo;
 
+import android.app.Activity;
 import android.app.Application;
 import android.content.Context;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Looper;
+import android.support.annotation.MainThread;
 import android.support.multidex.MultiDex;
 
 import com.example.sqlbrite.todo.di.AppScopeComponent;
 import com.example.sqlbrite.todo.di.InjectHelper;
 
+import java.util.Iterator;
+import java.util.LinkedList;
+import java.util.List;
+
+import javax.inject.Inject;
+
 import timber.log.Timber;
 
 public final class TodoApp extends Application {
 
     private AppScopeComponent mAppScopeComponent;
 
+    @Inject
+    ActivityMgr mActivityMgr;
+
+    public static TodoApp getApplication(Context context) {
+        return (TodoApp) context.getApplicationContext();
+    }
+
     @Override
     protected void attachBaseContext(Context base) {
         super.attachBaseContext(base);
@@ -45,5 +63,79 @@ public void onCreate() {
 
         mAppScopeComponent = InjectHelper.instance()
                 .init(this);
+
+        mAppScopeComponent.inject(this);
+
+    }
+
+    public void exit() {
+        if (Looper.getMainLooper() == Looper.myLooper()) {
+            exitInMainThread();
+        } else {
+            new Handler(Looper.getMainLooper()).post(new Runnable() {
+                @Override
+                public void run() {
+                    exitInMainThread();
+                }
+            });
+        }
+    }
+
+    private void exitInMainThread() {
+        mActivityMgr.finishAllActivity();
+    }
+
+    public final static class ActivityMgr {
+        private List<Activity> mActivitys;
+
+        public ActivityMgr(Application app) {
+            mActivitys = new LinkedList<>();
+            app.registerActivityLifecycleCallbacks(new Application.ActivityLifecycleCallbacks() {
+                @Override
+                public void onActivityCreated(Activity activity, Bundle savedInstanceState) {
+                    mActivitys.add(activity);
+                }
+
+                @Override
+                public void onActivityStarted(Activity activity) {
+                }
+
+                @Override
+                public void onActivityResumed(Activity activity) {
+                }
+
+                @Override
+                public void onActivityPaused(Activity activity) {
+                }
+
+                @Override
+                public void onActivityStopped(Activity activity) {
+                }
+
+                @Override
+                public void onActivitySaveInstanceState(Activity activity, Bundle outState) {
+                }
+
+                @Override
+                public void onActivityDestroyed(Activity activity) {
+                    if (!mActivitys.isEmpty()) {
+                        mActivitys.remove(activity);
+                    }
+                }
+            });
+        }
+
+        @MainThread
+        void finishAllActivity() {
+            if (mActivitys.isEmpty()) {
+                return;
+            }
+            Iterator<Activity> iterator = mActivitys.iterator();
+            while (iterator.hasNext()) {
+                Activity activity = iterator.next();
+                activity.finish();
+                iterator.remove();
+            }
+        }
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/controler/LoginViewControler.java b/sample/src/main/java/com/example/sqlbrite/todo/controler/LoginViewControler.java
index 714dce3..ca41c5d 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/controler/LoginViewControler.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/controler/LoginViewControler.java
@@ -4,18 +4,14 @@
 import com.example.sqlbrite.todo.model.users.UserSession;
 import com.example.sqlbrite.todo.schedulers.SchedulerProvider;
 
-import java.util.concurrent.Callable;
-
 import javax.inject.Inject;
 
 import io.reactivex.Completable;
-import io.reactivex.CompletableSource;
 import io.reactivex.Observable;
 import io.reactivex.ObservableEmitter;
 import io.reactivex.ObservableOnSubscribe;
 import io.reactivex.Single;
 import io.reactivex.SingleSource;
-import io.reactivex.functions.Action;
 import io.reactivex.functions.Consumer;
 import io.reactivex.functions.Function;
 
@@ -79,25 +75,16 @@ public Completable logout() {
             throw new AssertionError("Must login firstly!");
         }
         return Single
-                .fromCallable(new Callable<UserSession>() {
-                    @Override
-                    public UserSession call() throws Exception {
-                        return mUserSession;
-                    }
+                .fromCallable(() -> {
+                    return mUserSession;
                 })
                 .subscribeOn(mSchedulerProvider.viewModel())
                 .observeOn(mSchedulerProvider.viewModel())
-                .flatMapCompletable(new Function<UserSession, CompletableSource>() {
-                    @Override
-                    public CompletableSource apply(UserSession userSession) throws Exception {
-                        return userSession.logout();
-                    }
+                .flatMapCompletable(userSession -> {
+                    return userSession.logout();
                 })
-                .doOnComplete(new Action() {
-                    @Override
-                    public void run() throws Exception {
-                        mUserSession = null;
-                    }
+                .doOnComplete(() -> {
+                    mUserSession = null;
                 });
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java b/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java
index 09829cf..82acd36 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java
@@ -18,6 +18,7 @@
 import android.app.Application;
 import android.arch.lifecycle.ViewModelProvider;
 
+import com.example.sqlbrite.todo.TodoApp;
 import com.example.sqlbrite.todo.controler.LoginViewControler;
 import com.example.sqlbrite.todo.di.model.remote.TodoApiModule.GitHubApiInterface;
 import com.example.sqlbrite.todo.model.users.LoginManager;
@@ -56,5 +57,7 @@
 
     LoginViewControler loginViewControler();
 
+    void inject(TodoApp app);
+
     void inject(SplashActivity activity);
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeModule.java b/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeModule.java
index c61a5e4..2578b61 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeModule.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeModule.java
@@ -18,6 +18,7 @@
 import android.app.Application;
 import android.content.Context;
 
+import com.example.sqlbrite.todo.TodoApp;
 import com.example.sqlbrite.todo.controler.LoginViewControler;
 import com.example.sqlbrite.todo.di.model.AppScopeModelModule;
 import com.example.sqlbrite.todo.di.schedulers.SchedulerModule;
@@ -55,6 +56,12 @@ public Context provideContext() {
         return mApplication;
     }
 
+    @Provides
+    @Singleton
+    public TodoApp.ActivityMgr provideActivityMgr(Application app) {
+        return new TodoApp.ActivityMgr(app);
+    }
+
     @Provides
     @Singleton
     public LoginViewControler provideLoginViewModel(UserManager userManager, SchedulerProvider schedulerProvider) {
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/users/LoginManager.java b/sample/src/main/java/com/example/sqlbrite/todo/model/users/LoginManager.java
index eac0cc5..bd2fa52 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/users/LoginManager.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/users/LoginManager.java
@@ -48,7 +48,8 @@ public LoginManagerImpl(GitHubApiInterface gitHubApiInterface, SchedulerProvider
         @Override
         public Completable logout(String userId) {
             return mGitHubApiInterface.logout(userId)
-                    .subscribeOn(mSchedulerProvider.io());
+                    .subscribeOn(mSchedulerProvider.io())
+                    .onErrorComplete();
         }
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
index 8a88718..40c3c5f 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
@@ -15,7 +15,9 @@
  */
 package com.example.sqlbrite.todo.ui;
 
+import android.content.Intent;
 import android.os.Bundle;
+import android.view.KeyEvent;
 import android.widget.Toast;
 
 import com.example.sqlbrite.todo.R;
@@ -45,6 +47,8 @@ protected void onCreate(final Bundle savedInstanceState) {
     protected void onResume() {
         super.onResume();
 
+        // Obtain currrent login user to do sth.
+        // No login no trigger
         getViewModel().currentAliveUserSession()
                 .compose(this.<UserSession>bindToLifecycle())
                 .observeOn(getSchedulerProvider().ui())
@@ -87,4 +91,17 @@ public void onNewListClicked() {
     public void onNewItemClicked(long listId) {
         NewItemFragment.newInstance(listId).show(getSupportFragmentManager(), "new-item");
     }
+
+    @Override
+    public boolean onKeyDown(int keyCode, KeyEvent event) {
+        if (keyCode == KeyEvent.KEYCODE_BACK) {
+            Intent intent = new Intent(Intent.ACTION_MAIN);
+            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            intent.addCategory(Intent.CATEGORY_HOME);
+            startActivity(intent);
+            return true;
+        } else {
+            return super.onKeyDown(keyCode, event);
+        }
+    }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/SystemSettingActivity.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/SystemSettingActivity.java
index bf4e998..d22d773 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/SystemSettingActivity.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/SystemSettingActivity.java
@@ -1,10 +1,13 @@
 package com.example.sqlbrite.todo.ui;
 
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.Button;
+import android.widget.Toast;
 
 import com.example.sqlbrite.todo.R;
+import com.example.sqlbrite.todo.TodoApp;
 import com.example.sqlbrite.todo.controler.SystemSettingViewModel;
 import com.example.sqlbrite.todo.di.ActivityScopeComponent;
 
@@ -14,6 +17,7 @@
 
 public class SystemSettingActivity extends BaseViewModelActivity<SystemSettingViewModel> {
 
+    private static final String TAG = "SystemSettingActivity";
     @BindView(R.id.btn_logout)
     Button mBtnLogout;
 
@@ -32,6 +36,19 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @OnClick(R.id.btn_logout)
     void listClicked(View v) {
-        getViewModel().logout();
+        getViewModel().logout()
+                .observeOn(getSchedulerProvider().ui())
+                .subscribe(
+                        () -> {
+                            Toast.makeText(SystemSettingActivity.this, "注销成功!", Toast.LENGTH_SHORT).show();
+
+                            TodoApp.getApplication(this).exit();
+                        },
+
+                        error -> {
+                            Toast.makeText(SystemSettingActivity.this, "注销失败!", Toast.LENGTH_SHORT).show();
+                            Log.e(TAG, "注销失败!", error);
+                        }
+                );
     }
 }
