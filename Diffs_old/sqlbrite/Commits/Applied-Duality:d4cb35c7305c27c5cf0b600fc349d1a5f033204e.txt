diff --git a/STATUS.md b/STATUS.md
new file mode 100644
index 0000000..929c68e
--- /dev/null
+++ b/STATUS.md
@@ -0,0 +1,10 @@
+Status
+======
+
+Seems to compile with RxMobile, but I lack the time and patience
+to figure out how to get the tests to actually run from the complicated build files.
+It all builds just fine.
+
+The sample application was using some really old version of RxAndroid,
+and instead of trying to make that work, I removed it from the project
+(until the sample in original repo gets updated).
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 43fc5cb..0d3d981 100644
--- a/build.gradle
+++ b/build.gradle
@@ -29,8 +29,8 @@ ext {
   timber = 'com.jakewharton.timber:timber:2.7.1'
   autoParcel = 'com.github.frankiesardo:auto-parcel:0.3'
   autoParcelProcessor = 'com.github.frankiesardo:auto-parcel-processor:0.3'
-  rxJava = 'io.reactivex:rxjava:1.0.6'
-  rxAndroid = 'io.reactivex:rxandroid:0.24.0'
+  //rxJava = 'io.reactivex:rxjava:1.0.6'
+  //rxAndroid = 'io.reactivex:rxandroid:0.24.0'
   truth = 'com.google.truth:truth:0.25'
   findbugsJsr305 = 'com.google.code.findbugs:jsr305:3.0.0'
   findbugsAnnotations = 'com.google.code.findbugs:annotations:3.0.0'
diff --git a/settings.gradle b/settings.gradle
index 1ba2cf3..fcfe45b 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,4 +1,3 @@
 include ':sqlbrite'
-include ':sqlbrite-sample'
 
 rootProject.name = 'sqlbrite-root'
diff --git a/sqlbrite-sample/build.gradle b/sqlbrite-sample/build.gradle
deleted file mode 100644
index 39ac81b..0000000
--- a/sqlbrite-sample/build.gradle
+++ /dev/null
@@ -1,80 +0,0 @@
-buildscript {
-  dependencies {
-    classpath rootProject.ext.androidPlugin
-    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
-  }
-}
-
-apply plugin: 'com.android.application'
-apply plugin: 'com.neenbedankt.android-apt'
-apply from: rootProject.file('gradle/android-findbugs.gradle')
-
-dependencies {
-  // Android dependencies.
-  compile rootProject.ext.supportV4
-  compile rootProject.ext.supportAnnotations
-
-  // Square dependencies.
-  compile rootProject.ext.dagger
-  apt rootProject.ext.daggerCompiler
-
-  // Third-party dependencies.
-  compile rootProject.ext.butterKnife
-  compile rootProject.ext.timber
-  compile rootProject.ext.rxAndroid
-  compile rootProject.ext.autoParcel
-  apt rootProject.ext.autoParcelProcessor
-
-  provided rootProject.ext.findbugsJsr305
-  provided rootProject.ext.findbugsAnnotations
-
-  // In-repo dependencies.
-  compile project(':sqlbrite')
-}
-
-def isCi() {
-  return "true".equals(System.getenv('CI'))
-}
-
-android {
-  compileSdkVersion rootProject.ext.compileSdkVersion
-  buildToolsVersion rootProject.ext.buildToolsVersion
-
-  compileOptions {
-    sourceCompatibility JavaVersion.VERSION_1_7
-    targetCompatibility JavaVersion.VERSION_1_7
-  }
-
-  lintOptions {
-    textOutput 'stdout'
-  }
-
-  dexOptions {
-    preDexLibraries = !isCi()
-  }
-
-  defaultConfig {
-    minSdkVersion 15
-    targetSdkVersion 21
-    applicationId 'com.example.sqlbrite.todo'
-
-    versionCode 1
-    versionName '1.0'
-  }
-
-  signingConfigs {
-    debug {
-      storeFile file('debug.keystore')
-      storePassword 'android'
-      keyAlias 'android'
-      keyPassword 'android'
-    }
-  }
-
-  buildTypes {
-    debug {
-      applicationIdSuffix '.development'
-      signingConfig signingConfigs.debug
-    }
-  }
-}
diff --git a/sqlbrite-sample/debug.keystore b/sqlbrite-sample/debug.keystore
deleted file mode 100644
index 32fcf49..0000000
Binary files a/sqlbrite-sample/debug.keystore and /dev/null differ
diff --git a/sqlbrite-sample/src/main/AndroidManifest.xml b/sqlbrite-sample/src/main/AndroidManifest.xml
deleted file mode 100644
index cd8b9ac..0000000
--- a/sqlbrite-sample/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.sqlbrite.todo"
-    >
-
-  <application
-      android:label="@string/app_name"
-      android:name=".TodoApp"
-      android:allowBackup="false"
-      android:icon="@drawable/ic_launcher"
-      >
-    <activity
-        android:name=".ui.MainActivity"
-        >
-      <intent-filter>
-        <action android:name="android.intent.action.MAIN"/>
-
-        <category android:name="android.intent.category.LAUNCHER"/>
-        <category android:name="android.intent.category.DEFAULT"/>
-      </intent-filter>
-    </activity>
-
-  </application>
-</manifest>
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/TodoApp.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/TodoApp.java
deleted file mode 100644
index d99b5a4..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/TodoApp.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo;
-
-import android.app.Application;
-import android.content.Context;
-import dagger.ObjectGraph;
-import timber.log.Timber;
-
-public final class TodoApp extends Application {
-  private ObjectGraph objectGraph;
-
-  @Override public void onCreate() {
-    super.onCreate();
-
-    if (BuildConfig.DEBUG) {
-      Timber.plant(new Timber.DebugTree());
-    }
-
-    objectGraph = ObjectGraph.create(new TodoModule(this));
-  }
-
-  public static ObjectGraph objectGraph(Context context) {
-    return ((TodoApp) context.getApplicationContext()).objectGraph;
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/TodoModule.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/TodoModule.java
deleted file mode 100644
index eea28ab..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/TodoModule.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo;
-
-import android.app.Application;
-import com.example.sqlbrite.todo.db.DbModule;
-import com.example.sqlbrite.todo.ui.UiModule;
-import dagger.Module;
-import dagger.Provides;
-import javax.inject.Singleton;
-
-@Module(
-    includes = {
-        DbModule.class,
-        UiModule.class
-    }
-)
-public final class TodoModule {
-  private final Application application;
-
-  TodoModule(Application application) {
-    this.application = application;
-  }
-
-  @Provides @Singleton Application provideApplication() {
-    return application;
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/Db.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/Db.java
deleted file mode 100644
index 60a928b..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/Db.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.db;
-
-import android.database.Cursor;
-
-public final class Db {
-  public static final int BOOLEAN_FALSE = 0;
-  public static final int BOOLEAN_TRUE = 1;
-
-  public static String getString(Cursor cursor, String columnName) {
-    return cursor.getString(cursor.getColumnIndexOrThrow(columnName));
-  }
-
-  public static boolean getBoolean(Cursor cursor, String columnName) {
-    return getInt(cursor, columnName) == BOOLEAN_TRUE;
-  }
-
-  public static long getLong(Cursor cursor, String columnName) {
-    return cursor.getLong(cursor.getColumnIndexOrThrow(columnName));
-  }
-
-  public static int getInt(Cursor cursor, String columnName) {
-    return cursor.getInt(cursor.getColumnIndexOrThrow(columnName));
-  }
-
-  private Db() {
-    throw new AssertionError("No instances.");
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
deleted file mode 100644
index 884ba18..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.db;
-
-import android.app.Application;
-import android.database.sqlite.SQLiteOpenHelper;
-import com.example.sqlbrite.todo.BuildConfig;
-import com.squareup.sqlbrite.SqlBrite;
-import dagger.Module;
-import dagger.Provides;
-import javax.inject.Singleton;
-import timber.log.Timber;
-
-@Module(complete = false, library = true)
-public final class DbModule {
-  @Provides @Singleton SQLiteOpenHelper provideOpenHelper(Application application) {
-    return new DbOpenHelper(application);
-  }
-
-  @Provides @Singleton SqlBrite provideSqlBrite(SQLiteOpenHelper openHelper) {
-    SqlBrite db = SqlBrite.create(openHelper);
-
-    if (BuildConfig.DEBUG) {
-      db.setLogger(new SqlBrite.Logger() {
-        @Override public void log(String message) {
-          Timber.tag("Database").v(message);
-        }
-      });
-      db.setLoggingEnabled(true);
-    }
-
-    return db;
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/DbOpenHelper.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/DbOpenHelper.java
deleted file mode 100644
index 00af8eb..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/DbOpenHelper.java
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.db;
-
-import android.content.Context;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
-
-final class DbOpenHelper extends SQLiteOpenHelper {
-  private static final int VERSION = 1;
-
-  private static final String CREATE_LIST = ""
-      + "CREATE TABLE " + TodoList.TABLE + "("
-      + TodoList.ID + " INTEGER NOT NULL PRIMARY KEY,"
-      + TodoList.NAME + " TEXT NOT NULL,"
-      + TodoList.ARCHIVED + " INTEGER NOT NULL DEFAULT 0"
-      + ")";
-  private static final String CREATE_ITEM = ""
-      + "CREATE TABLE " + TodoItem.TABLE + "("
-      + TodoItem.ID + " INTEGER NOT NULL PRIMARY KEY,"
-      + TodoItem.LIST_ID + " INTEGER NOT NULL REFERENCES " + TodoList.TABLE + "(" + TodoList.ID + "),"
-      + TodoItem.DESCRIPTION + " TEXT NOT NULL,"
-      + TodoItem.COMPLETE + " INTEGER NOT NULL DEFAULT 0"
-      + ")";
-  private static final String CREATE_ITEM_LIST_ID_INDEX =
-      "CREATE INDEX item_list_id ON " + TodoItem.TABLE + " (" + TodoItem.LIST_ID + ")";
-
-  public DbOpenHelper(Context context) {
-    super(context, "todo.db", null /* factory */, VERSION);
-  }
-
-  @Override public void onCreate(SQLiteDatabase db) {
-    db.execSQL(CREATE_LIST);
-    db.execSQL(CREATE_ITEM);
-    db.execSQL(CREATE_ITEM_LIST_ID_INDEX);
-
-    long groceryListId = db.insert(TodoList.TABLE, null, new TodoList.Builder()
-        .name("Grocery List")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(groceryListId)
-        .description("Beer")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(groceryListId)
-        .description("Point Break on DVD")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(groceryListId)
-        .description("Bad Boys 2 on DVD")
-        .build());
-
-    long holidayPresentsListId = db.insert(TodoList.TABLE, null, new TodoList.Builder()
-        .name("Holiday Presents")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(holidayPresentsListId)
-        .description("Pogo Stick for Jake W.")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(holidayPresentsListId)
-        .description("Jack-in-the-box for Alec S.")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(holidayPresentsListId)
-        .description("Pogs for Matt P.")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(holidayPresentsListId)
-        .description("Coal for Jesse W.")
-        .build());
-
-    long workListId = db.insert(TodoList.TABLE, null, new TodoList.Builder()
-        .name("Work Items")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(workListId)
-        .description("Finish SqlBrite library")
-        .complete(true)
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(workListId)
-        .description("Finish SqlBrite sample app")
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder()
-        .listId(workListId)
-        .description("Publish SqlBrite to GitHub")
-        .build());
-
-    long birthdayPresentsListId = db.insert(TodoList.TABLE, null, new TodoList.Builder()
-        .name("Birthday Presents")
-        .archived(true)
-        .build());
-    db.insert(TodoItem.TABLE, null, new TodoItem.Builder().listId(birthdayPresentsListId)
-        .description("New car")
-        .complete(true)
-        .build());
-  }
-
-  @Override public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/TodoItem.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/TodoItem.java
deleted file mode 100644
index 2a67f2d..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/TodoItem.java
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.db;
-
-import android.content.ContentValues;
-import android.database.Cursor;
-import auto.parcel.AutoParcel;
-import java.util.ArrayList;
-import java.util.List;
-import rx.functions.Func1;
-
-import static com.squareup.sqlbrite.SqlBrite.Query;
-
-@AutoParcel
-public abstract class TodoItem {
-  public static final String TABLE = "todo_item";
-
-  public static final String ID = "_id";
-  public static final String LIST_ID = "todo_list_id";
-  public static final String DESCRIPTION = "description";
-  public static final String COMPLETE = "complete";
-
-  public abstract long id();
-  public abstract long listId();
-  public abstract String description();
-  public abstract boolean complete();
-
-  public static final Func1<Query, List<TodoItem>> MAP = new Func1<Query, List<TodoItem>>() {
-    @Override public List<TodoItem> call(Query query) {
-      Cursor cursor = query.run();
-      try {
-        List<TodoItem> values = new ArrayList<>(cursor.getCount());
-        while (cursor.moveToNext()) {
-          long id = Db.getLong(cursor, ID);
-          long listId = Db.getLong(cursor, LIST_ID);
-          String description = Db.getString(cursor, DESCRIPTION);
-          boolean complete = Db.getBoolean(cursor, COMPLETE);
-          values.add(new AutoParcel_TodoItem(id, listId, description, complete));
-        }
-        return values;
-      } finally {
-        cursor.close();
-      }
-    }
-  };
-
-  public static final class Builder {
-    private final ContentValues values = new ContentValues();
-
-    public Builder id(long id) {
-      values.put(ID, id);
-      return this;
-    }
-
-    public Builder listId(long listId) {
-      values.put(LIST_ID, listId);
-      return this;
-    }
-
-    public Builder description(String description) {
-      values.put(DESCRIPTION, description);
-      return this;
-    }
-
-    public Builder complete(boolean complete) {
-      values.put(COMPLETE, complete);
-      return this;
-    }
-
-    public ContentValues build() {
-      return values; // TODO defensive copy?
-    }
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/TodoList.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/TodoList.java
deleted file mode 100644
index 0c890a6..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/db/TodoList.java
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.db;
-
-import android.content.ContentValues;
-import android.database.Cursor;
-import auto.parcel.AutoParcel;
-import java.util.ArrayList;
-import java.util.List;
-import rx.functions.Func1;
-
-// Note: normally I wouldn't prefix table classes but I didn't want 'List' to be overloaded.
-@AutoParcel
-public abstract class TodoList {
-  public static final String TABLE = "todo_list";
-
-  public static final String ID = "_id";
-  public static final String NAME = "name";
-  public static final String ARCHIVED = "archived";
-
-  public abstract long id();
-  public abstract String name();
-  public abstract boolean archived();
-
-  public static Func1<Cursor, List<TodoList>> MAP = new Func1<Cursor, List<TodoList>>() {
-    @Override public List<TodoList> call(final Cursor cursor) {
-      try {
-        List<TodoList> values = new ArrayList<>(cursor.getCount());
-
-        while (cursor.moveToNext()) {
-          long id = Db.getLong(cursor, ID);
-          String name = Db.getString(cursor, NAME);
-          boolean archived = Db.getBoolean(cursor, ARCHIVED);
-          values.add(new AutoParcel_TodoList(id, name, archived));
-        }
-        return values;
-      } finally {
-        cursor.close();
-      }
-    }
-  };
-
-  public static final class Builder {
-    private final ContentValues values = new ContentValues();
-
-    public Builder id(long id) {
-      values.put(ID, id);
-      return this;
-    }
-
-    public Builder name(String name) {
-      values.put(NAME, name);
-      return this;
-    }
-
-    public Builder archived(boolean archived) {
-      values.put(ARCHIVED, archived);
-      return this;
-    }
-
-    public ContentValues build() {
-      return values; // TODO defensive copy?
-    }
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsAdapter.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsAdapter.java
deleted file mode 100644
index 22ccff4..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsAdapter.java
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.content.Context;
-import android.text.SpannableString;
-import android.text.style.StrikethroughSpan;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseAdapter;
-import android.widget.CheckedTextView;
-import com.example.sqlbrite.todo.db.TodoItem;
-import java.util.Collections;
-import java.util.List;
-import rx.functions.Action1;
-
-final class ItemsAdapter extends BaseAdapter implements Action1<List<TodoItem>> {
-  private final LayoutInflater inflater;
-
-  private List<TodoItem> items = Collections.emptyList();
-
-  public ItemsAdapter(Context context) {
-    inflater = LayoutInflater.from(context);
-  }
-
-  @Override public void call(List<TodoItem> items) {
-    this.items = items;
-    notifyDataSetChanged();
-  }
-
-  @Override public int getCount() {
-    return items.size();
-  }
-
-  @Override public TodoItem getItem(int position) {
-    return items.get(position);
-  }
-
-  @Override public long getItemId(int position) {
-    return getItem(position).id();
-  }
-
-  @Override public boolean hasStableIds() {
-    return true;
-  }
-
-  @Override public View getView(int position, View convertView, ViewGroup parent) {
-    if (convertView == null) {
-      convertView = inflater.inflate(android.R.layout.simple_list_item_multiple_choice, parent, false);
-    }
-
-    TodoItem item = getItem(position);
-    CheckedTextView textView = (CheckedTextView) convertView;
-    textView.setChecked(item.complete());
-
-    CharSequence description = item.description();
-    if (item.complete()) {
-      SpannableString spannable = new SpannableString(description);
-      spannable.setSpan(new StrikethroughSpan(), 0, description.length(), 0);
-      description = spannable;
-    }
-
-    textView.setText(description);
-
-    return convertView;
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
deleted file mode 100644
index 46bfbb2..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
+++ /dev/null
@@ -1,209 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.app.Activity;
-import android.database.Cursor;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ListView;
-import butterknife.ButterKnife;
-import butterknife.InjectView;
-import com.example.sqlbrite.todo.R;
-import com.example.sqlbrite.todo.TodoApp;
-import com.example.sqlbrite.todo.db.Db;
-import com.example.sqlbrite.todo.db.TodoItem;
-import com.example.sqlbrite.todo.db.TodoList;
-import com.squareup.sqlbrite.SqlBrite;
-import javax.inject.Inject;
-import rx.Observable;
-import rx.android.schedulers.AndroidSchedulers;
-import rx.android.widget.OnItemClickEvent;
-import rx.android.widget.WidgetObservable;
-import rx.functions.Action1;
-import rx.functions.Func1;
-import rx.functions.Func2;
-import rx.schedulers.Schedulers;
-import rx.subscriptions.CompositeSubscription;
-
-import static android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM;
-import static android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT;
-import static com.squareup.sqlbrite.SqlBrite.Query;
-
-public final class ItemsFragment extends Fragment {
-  private static final String KEY_LIST_ID = "list_id";
-  private static final String LIST_QUERY = "SELECT * FROM "
-      + TodoItem.TABLE
-      + " WHERE "
-      + TodoItem.LIST_ID
-      + " = ? ORDER BY "
-      + TodoItem.COMPLETE
-      + " ASC";
-  private static final String COUNT_QUERY = "SELECT COUNT(*) FROM "
-      + TodoItem.TABLE
-      + " WHERE "
-      + TodoItem.COMPLETE
-      + " = "
-      + Db.BOOLEAN_FALSE
-      + " AND "
-      + TodoItem.LIST_ID
-      + " = ?";
-  private static final String TITLE_QUERY =
-      "SELECT " + TodoList.NAME + " FROM " + TodoList.TABLE + " WHERE " + TodoList.ID + " = ?";
-
-  public interface Listener {
-    void onNewItemClicked(long listId);
-  }
-
-  public static ItemsFragment newInstance(long listId) {
-    Bundle arguments = new Bundle();
-    arguments.putLong(KEY_LIST_ID, listId);
-
-    ItemsFragment fragment = new ItemsFragment();
-    fragment.setArguments(arguments);
-    return fragment;
-  }
-
-  @Inject SqlBrite db;
-
-  @InjectView(android.R.id.list) ListView listView;
-  @InjectView(android.R.id.empty) View emptyView;
-
-  private Listener listener;
-  private ItemsAdapter adapter;
-  private CompositeSubscription subscriptions;
-
-  private long getListId() {
-    return getArguments().getLong(KEY_LIST_ID);
-  }
-
-  @Override public void onAttach(Activity activity) {
-    if (!(activity instanceof Listener)) {
-      throw new IllegalStateException("Activity must implement fragment Listener.");
-    }
-
-    super.onAttach(activity);
-    TodoApp.objectGraph(activity).inject(this);
-    setHasOptionsMenu(true);
-
-    listener = (Listener) activity;
-    adapter = new ItemsAdapter(activity);
-  }
-
-  @Override public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-    super.onCreateOptionsMenu(menu, inflater);
-
-    menu.add(R.string.new_item)
-        .setShowAsActionFlags(SHOW_AS_ACTION_IF_ROOM | SHOW_AS_ACTION_WITH_TEXT)
-        .setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
-          @Override public boolean onMenuItemClick(MenuItem item) {
-            listener.onNewItemClicked(getListId());
-            return true;
-          }
-        });
-  }
-
-  @Override public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
-      @Nullable Bundle savedInstanceState) {
-    return inflater.inflate(R.layout.items, container, false);
-  }
-
-  @Override
-  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
-    super.onViewCreated(view, savedInstanceState);
-    ButterKnife.inject(this, view);
-    listView.setEmptyView(emptyView);
-    listView.setAdapter(adapter);
-
-    WidgetObservable.itemClicks(listView) //
-        .subscribeOn(AndroidSchedulers.mainThread())
-        .observeOn(Schedulers.io())
-        .subscribe(new Action1<OnItemClickEvent>() {
-          @Override public void call(OnItemClickEvent event) {
-            boolean newValue = !adapter.getItem(event.position()).complete();
-            db.update(TodoItem.TABLE, new TodoItem.Builder().complete(newValue).build(),
-                TodoItem.ID + " = ?", String.valueOf(event.id()));
-          }
-        });
-  }
-
-  @Override public void onResume() {
-    super.onResume();
-    String listId = String.valueOf(getListId());
-
-    subscriptions = new CompositeSubscription();
-
-    Observable<Integer> itemCount = db.createQuery(TodoItem.TABLE, COUNT_QUERY, listId) //
-        .map(new Func1<Query, Integer>() {
-          @Override public Integer call(Query query) {
-            Cursor cursor = query.run();
-            try {
-              if (!cursor.moveToNext()) {
-                throw new AssertionError("No rows");
-              }
-              return cursor.getInt(0);
-            } finally {
-              cursor.close();
-            }
-          }
-        });
-    Observable<String> listName =
-        db.createQuery(TodoList.TABLE, TITLE_QUERY, listId).map(new Func1<Query, String>() {
-          @Override public String call(Query query) {
-            Cursor cursor = query.run();
-            try {
-              if (!cursor.moveToNext()) {
-                throw new AssertionError("No rows");
-              }
-              return cursor.getString(0);
-            } finally {
-              cursor.close();
-            }
-          }
-        });
-    subscriptions.add(
-        Observable.combineLatest(listName, itemCount, new Func2<String, Integer, String>() {
-          @Override public String call(String listName, Integer itemCount) {
-            return listName + " (" + itemCount + ")";
-          }
-        })
-            .subscribeOn(Schedulers.io())
-            .observeOn(AndroidSchedulers.mainThread())
-            .subscribe(new Action1<String>() {
-              @Override public void call(String title) {
-                getActivity().setTitle(title);
-              }
-            }));
-
-    subscriptions.add(db.createQuery(TodoItem.TABLE, LIST_QUERY, listId)
-        .map(TodoItem.MAP)
-        .subscribeOn(Schedulers.io())
-        .observeOn(AndroidSchedulers.mainThread())
-        .subscribe(adapter));
-  }
-
-  @Override public void onPause() {
-    super.onPause();
-    subscriptions.unsubscribe();
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsAdapter.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsAdapter.java
deleted file mode 100644
index b88362c..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsAdapter.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseAdapter;
-import android.widget.TextView;
-import java.util.Collections;
-import java.util.List;
-import rx.functions.Action1;
-
-final class ListsAdapter extends BaseAdapter implements Action1<List<ListsItem>> {
-  private final LayoutInflater inflater;
-
-  private List<ListsItem> items = Collections.emptyList();
-
-  public ListsAdapter(Context context) {
-    this.inflater = LayoutInflater.from(context);
-  }
-
-  @Override public void call(List<ListsItem> items) {
-    this.items = items;
-    notifyDataSetChanged();
-  }
-
-  @Override public int getCount() {
-    return items.size();
-  }
-
-  @Override public ListsItem getItem(int position) {
-    return items.get(position);
-  }
-
-  @Override public long getItemId(int position) {
-    return getItem(position).id();
-  }
-
-  @Override public boolean hasStableIds() {
-    return true;
-  }
-
-  @Override public View getView(int position, View convertView, ViewGroup parent) {
-    if (convertView == null) {
-      convertView = inflater.inflate(android.R.layout.simple_list_item_1, parent, false);
-    }
-
-    ListsItem item = getItem(position);
-    ((TextView) convertView).setText(item.name() + " (" + item.itemCount() + ")");
-
-    return convertView;
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
deleted file mode 100644
index 7109a4f..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
+++ /dev/null
@@ -1,121 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ListView;
-import butterknife.ButterKnife;
-import butterknife.InjectView;
-import butterknife.OnItemClick;
-import com.example.sqlbrite.todo.R;
-import com.example.sqlbrite.todo.TodoApp;
-import com.squareup.sqlbrite.SqlBrite;
-import javax.inject.Inject;
-import rx.Subscription;
-import rx.android.schedulers.AndroidSchedulers;
-import rx.schedulers.Schedulers;
-
-import static android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM;
-import static android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT;
-
-public final class ListsFragment extends Fragment {
-  interface Listener {
-    void onListClicked(long id);
-    void onNewListClicked();
-  }
-
-  static ListsFragment newInstance() {
-    return new ListsFragment();
-  }
-
-  @Inject SqlBrite db;
-
-  @InjectView(android.R.id.list) ListView listView;
-  @InjectView(android.R.id.empty) View emptyView;
-
-  private Listener listener;
-  private ListsAdapter adapter;
-  private Subscription subscription;
-
-  @Override public void onAttach(Activity activity) {
-    if (!(activity instanceof Listener)) {
-      throw new IllegalStateException("Activity must implement fragment Listener.");
-    }
-
-    super.onAttach(activity);
-    TodoApp.objectGraph(activity).inject(this);
-    setHasOptionsMenu(true);
-
-    listener = (Listener) activity;
-    adapter = new ListsAdapter(activity);
-  }
-
-  @Override public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-    super.onCreateOptionsMenu(menu, inflater);
-
-    menu.add(R.string.new_list)
-        .setShowAsActionFlags(SHOW_AS_ACTION_IF_ROOM | SHOW_AS_ACTION_WITH_TEXT)
-        .setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
-          @Override public boolean onMenuItemClick(MenuItem item) {
-            listener.onNewListClicked();
-            return true;
-          }
-        });
-  }
-
-  @Override public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
-      @Nullable Bundle savedInstanceState) {
-    return inflater.inflate(R.layout.lists, container, false);
-  }
-
-  @Override
-  public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
-    super.onViewCreated(view, savedInstanceState);
-    ButterKnife.inject(this, view);
-    listView.setEmptyView(emptyView);
-    listView.setAdapter(adapter);
-  }
-
-  @OnItemClick(android.R.id.list) void listClicked(long listId) {
-    listener.onListClicked(listId);
-  }
-
-  @Override public void onResume() {
-    super.onResume();
-
-    getActivity().setTitle("To-Do");
-
-    subscription = db.createQuery(ListsItem.TABLES, ListsItem.QUERY)
-        .map(ListsItem.MAP)
-        .subscribeOn(Schedulers.io())
-        .observeOn(AndroidSchedulers.mainThread())
-        .subscribe(adapter);
-  }
-
-  @Override public void onPause() {
-    super.onPause();
-    subscription.unsubscribe();
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsItem.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsItem.java
deleted file mode 100644
index dfe7781..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/ListsItem.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.database.Cursor;
-import auto.parcel.AutoParcel;
-import com.example.sqlbrite.todo.db.Db;
-import com.example.sqlbrite.todo.db.TodoItem;
-import com.example.sqlbrite.todo.db.TodoList;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.List;
-import rx.functions.Func1;
-
-import static com.squareup.sqlbrite.SqlBrite.Query;
-
-@AutoParcel
-abstract class ListsItem {
-  private static String ALIAS_LIST = "list";
-  private static String ALIAS_ITEM = "item";
-
-  private static String LIST_ID = ALIAS_LIST + "." + TodoList.ID;
-  private static String LIST_NAME = ALIAS_LIST + "." + TodoList.NAME;
-  private static String ITEM_COUNT = "item_count";
-  private static String ITEM_ID = ALIAS_ITEM + "." + TodoItem.ID;
-  private static String ITEM_LIST_ID = ALIAS_ITEM + "." + TodoItem.LIST_ID;
-
-  public static Collection<String> TABLES = Arrays.asList(TodoList.TABLE, TodoItem.TABLE);
-  public static String QUERY = ""
-      + "SELECT " + LIST_ID + ", " + LIST_NAME + ", COUNT(" + ITEM_ID + ") as " + ITEM_COUNT
-      + " FROM " + TodoList.TABLE + " AS " + ALIAS_LIST
-      + " LEFT OUTER JOIN " + TodoItem.TABLE + " AS " + ALIAS_ITEM + " ON " + LIST_ID + " = " + ITEM_LIST_ID
-      + " GROUP BY " + LIST_ID;
-
-  abstract long id();
-  abstract String name();
-  abstract int itemCount();
-
-  static Func1<Query, List<ListsItem>> MAP = new Func1<Query, List<ListsItem>>() {
-    @Override public List<ListsItem> call(Query query) {
-      Cursor cursor = query.run();
-      try {
-        List<ListsItem> values = new ArrayList<>(cursor.getCount());
-        while (cursor.moveToNext()) {
-          long id = Db.getLong(cursor, TodoList.ID);
-          String name = Db.getString(cursor, TodoList.NAME);
-          int itemCount = Db.getInt(cursor, ITEM_COUNT);
-          values.add(new AutoParcel_ListsItem(id, name, itemCount));
-        }
-        return values;
-      } finally {
-        cursor.close();
-      }
-    }
-  };
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
deleted file mode 100644
index f5b8cb3..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.os.Bundle;
-import android.support.v4.app.FragmentActivity;
-import com.example.sqlbrite.todo.R;
-
-public final class MainActivity extends FragmentActivity
-    implements ListsFragment.Listener, ItemsFragment.Listener {
-
-  @Override protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    if (savedInstanceState == null) {
-      getSupportFragmentManager().beginTransaction()
-          .add(android.R.id.content, ListsFragment.newInstance())
-          .commit();
-    }
-  }
-
-  @Override public void onListClicked(long id) {
-    getSupportFragmentManager().beginTransaction()
-        .setCustomAnimations(R.anim.slide_in_right, R.anim.slide_out_left, R.anim.slide_in_left,
-            R.anim.slide_out_right)
-        .replace(android.R.id.content, ItemsFragment.newInstance(id))
-        .addToBackStack(null)
-        .commit();
-  }
-
-  @Override public void onNewListClicked() {
-    NewListFragment.newInstance().show(getSupportFragmentManager(), "new-list");
-  }
-
-  @Override public void onNewItemClicked(long listId) {
-    NewItemFragment.newInstance(listId).show(getSupportFragmentManager(), "new-item");
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
deleted file mode 100644
index 9b6de72..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.EditText;
-import com.example.sqlbrite.todo.R;
-import com.example.sqlbrite.todo.TodoApp;
-import com.example.sqlbrite.todo.db.TodoItem;
-import com.squareup.sqlbrite.SqlBrite;
-import javax.inject.Inject;
-import rx.Observable;
-import rx.android.schedulers.AndroidSchedulers;
-import rx.android.widget.OnTextChangeEvent;
-import rx.android.widget.WidgetObservable;
-import rx.functions.Action1;
-import rx.functions.Func2;
-import rx.schedulers.Schedulers;
-import rx.subjects.PublishSubject;
-
-import static butterknife.ButterKnife.findById;
-
-public final class NewItemFragment extends DialogFragment {
-  private static final String KEY_LIST_ID = "list_id";
-
-  public static NewItemFragment newInstance(long listId) {
-    Bundle arguments = new Bundle();
-    arguments.putLong(KEY_LIST_ID, listId);
-
-    NewItemFragment fragment = new NewItemFragment();
-    fragment.setArguments(arguments);
-    return fragment;
-  }
-
-  private final PublishSubject<String> createClicked = PublishSubject.create();
-
-  @Inject SqlBrite db;
-
-  private long getListId() {
-    return getArguments().getLong(KEY_LIST_ID);
-  }
-
-  @Override public void onAttach(Activity activity) {
-    super.onAttach(activity);
-    TodoApp.objectGraph(activity).inject(this);
-  }
-
-  @NonNull @Override public Dialog onCreateDialog(Bundle savedInstanceState) {
-    final Context context = getActivity();
-    View view = LayoutInflater.from(context).inflate(R.layout.new_item, null);
-
-    EditText name = findById(view, android.R.id.input);
-    Observable<OnTextChangeEvent> nameText = WidgetObservable.text(name);
-
-    Observable.combineLatest(createClicked, nameText,
-        new Func2<String, OnTextChangeEvent, String>() {
-          @Override public String call(String ignored, OnTextChangeEvent event) {
-            return event.text().toString();
-          }
-        }) //
-        .subscribeOn(AndroidSchedulers.mainThread())
-        .observeOn(Schedulers.io())
-        .subscribe(new Action1<String>() {
-          @Override public void call(String description) {
-            db.insert(TodoItem.TABLE,
-                new TodoItem.Builder().listId(getListId()).description(description).build());
-          }
-        });
-
-    return new AlertDialog.Builder(context) //
-        .setTitle(R.string.new_item)
-        .setView(view)
-        .setPositiveButton(R.string.create, new DialogInterface.OnClickListener() {
-          @Override public void onClick(DialogInterface dialog, int which) {
-            createClicked.onNext("clicked");
-          }
-        })
-        .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
-          @Override public void onClick(DialogInterface dialog, int which) {
-          }
-        })
-        .create();
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
deleted file mode 100644
index 0f669c2..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.EditText;
-import com.example.sqlbrite.todo.R;
-import com.example.sqlbrite.todo.TodoApp;
-import com.example.sqlbrite.todo.db.TodoList;
-import com.squareup.sqlbrite.SqlBrite;
-import javax.inject.Inject;
-import rx.Observable;
-import rx.android.schedulers.AndroidSchedulers;
-import rx.android.widget.OnTextChangeEvent;
-import rx.android.widget.WidgetObservable;
-import rx.functions.Action1;
-import rx.functions.Func2;
-import rx.schedulers.Schedulers;
-import rx.subjects.PublishSubject;
-
-import static butterknife.ButterKnife.findById;
-
-public final class NewListFragment extends DialogFragment {
-  public static NewListFragment newInstance() {
-    return new NewListFragment();
-  }
-
-  private final PublishSubject<String> createClicked = PublishSubject.create();
-
-  @Inject SqlBrite db;
-
-  @Override public void onAttach(Activity activity) {
-    super.onAttach(activity);
-    TodoApp.objectGraph(activity).inject(this);
-  }
-
-  @NonNull @Override public Dialog onCreateDialog(Bundle savedInstanceState) {
-    final Context context = getActivity();
-    View view = LayoutInflater.from(context).inflate(R.layout.new_list, null);
-
-    EditText name = findById(view, android.R.id.input);
-    Observable<OnTextChangeEvent> nameText = WidgetObservable.text(name);
-
-    Observable.combineLatest(createClicked, nameText,
-        new Func2<String, OnTextChangeEvent, String>() {
-          @Override public String call(String ignored, OnTextChangeEvent event) {
-            return event.text().toString();
-          }
-        }) //
-        .subscribeOn(AndroidSchedulers.mainThread())
-        .observeOn(Schedulers.io())
-        .subscribe(new Action1<String>() {
-          @Override public void call(String name) {
-            db.insert(TodoList.TABLE, new TodoList.Builder().name(name).build());
-          }
-        });
-
-    return new AlertDialog.Builder(context) //
-        .setTitle(R.string.new_list)
-        .setView(view)
-        .setPositiveButton(R.string.create, new DialogInterface.OnClickListener() {
-          @Override public void onClick(DialogInterface dialog, int which) {
-            createClicked.onNext("clicked");
-          }
-        })
-        .setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
-          @Override public void onClick(DialogInterface dialog, int which) {
-          }
-        })
-        .create();
-  }
-}
diff --git a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/UiModule.java b/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/UiModule.java
deleted file mode 100644
index 1e3c8a5..0000000
--- a/sqlbrite-sample/src/main/java/com/example/sqlbrite/todo/ui/UiModule.java
+++ /dev/null
@@ -1,31 +0,0 @@
-/*
- * Copyright (C) 2015 Square, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.example.sqlbrite.todo.ui;
-
-import dagger.Module;
-
-@Module(
-    injects = {
-        ItemsFragment.class,
-        ListsFragment.class,
-        NewItemFragment.class,
-        NewListFragment.class
-    },
-    complete = false,
-    library = true
-)
-public final class UiModule {
-}
diff --git a/sqlbrite-sample/src/main/res/anim/slide_in_left.xml b/sqlbrite-sample/src/main/res/anim/slide_in_left.xml
deleted file mode 100644
index acff111..0000000
--- a/sqlbrite-sample/src/main/res/anim/slide_in_left.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/common/res/anim/slide_in_left.xml
-**
-** Copyright 2007, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-
-<set xmlns:android="http://schemas.android.com/apk/res/android">
-	<translate android:fromXDelta="-25%p" android:toXDelta="0"
-            android:duration="@android:integer/config_shortAnimTime"/>
-	<alpha android:fromAlpha="0.0" android:toAlpha="1.0"
-            android:duration="@android:integer/config_shortAnimTime" />
-</set>
diff --git a/sqlbrite-sample/src/main/res/anim/slide_in_right.xml b/sqlbrite-sample/src/main/res/anim/slide_in_right.xml
deleted file mode 100644
index 1e05791..0000000
--- a/sqlbrite-sample/src/main/res/anim/slide_in_right.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/common/res/anim/slide_in_right.xml
-**
-** Copyright 2007, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-
-<set xmlns:android="http://schemas.android.com/apk/res/android">
-	<translate android:fromXDelta="25%p" android:toXDelta="0"
-            android:duration="@android:integer/config_shortAnimTime"/>
-	<alpha android:fromAlpha="0.0" android:toAlpha="1.0"
-            android:duration="@android:integer/config_shortAnimTime" />
-</set>
diff --git a/sqlbrite-sample/src/main/res/anim/slide_out_left.xml b/sqlbrite-sample/src/main/res/anim/slide_out_left.xml
deleted file mode 100644
index 8c1d760..0000000
--- a/sqlbrite-sample/src/main/res/anim/slide_out_left.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/common/res/anim/slide_out_left.xml
-**
-** Copyright 2007, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-
-<set xmlns:android="http://schemas.android.com/apk/res/android">
-	<translate android:fromXDelta="0" android:toXDelta="-25%p"
-            android:duration="@android:integer/config_shortAnimTime"/>
-	<alpha android:fromAlpha="1.0" android:toAlpha="0.0"
-            android:duration="@android:integer/config_shortAnimTime" />
-</set>
diff --git a/sqlbrite-sample/src/main/res/anim/slide_out_right.xml b/sqlbrite-sample/src/main/res/anim/slide_out_right.xml
deleted file mode 100644
index d517f87..0000000
--- a/sqlbrite-sample/src/main/res/anim/slide_out_right.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/common/res/anim/slide_out_right.xml
-**
-** Copyright 2007, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-
-<set xmlns:android="http://schemas.android.com/apk/res/android">
-	<translate android:fromXDelta="0" android:toXDelta="25%p"
-            android:duration="@android:integer/config_shortAnimTime"/>
-	<alpha android:fromAlpha="1.0" android:toAlpha="0.0"
-            android:duration="@android:integer/config_shortAnimTime" />
-</set>
diff --git a/sqlbrite-sample/src/main/res/drawable-hdpi/ic_launcher.png b/sqlbrite-sample/src/main/res/drawable-hdpi/ic_launcher.png
deleted file mode 100644
index cde69bc..0000000
Binary files a/sqlbrite-sample/src/main/res/drawable-hdpi/ic_launcher.png and /dev/null differ
diff --git a/sqlbrite-sample/src/main/res/drawable-xhdpi/ic_launcher.png b/sqlbrite-sample/src/main/res/drawable-xhdpi/ic_launcher.png
deleted file mode 100644
index bfa42f0..0000000
Binary files a/sqlbrite-sample/src/main/res/drawable-xhdpi/ic_launcher.png and /dev/null differ
diff --git a/sqlbrite-sample/src/main/res/drawable-xxhdpi/ic_launcher.png b/sqlbrite-sample/src/main/res/drawable-xxhdpi/ic_launcher.png
deleted file mode 100644
index 324e72c..0000000
Binary files a/sqlbrite-sample/src/main/res/drawable-xxhdpi/ic_launcher.png and /dev/null differ
diff --git a/sqlbrite-sample/src/main/res/drawable-xxxhdpi/ic_launcher.png b/sqlbrite-sample/src/main/res/drawable-xxxhdpi/ic_launcher.png
deleted file mode 100644
index aee44e1..0000000
Binary files a/sqlbrite-sample/src/main/res/drawable-xxxhdpi/ic_launcher.png and /dev/null differ
diff --git a/sqlbrite-sample/src/main/res/layout/items.xml b/sqlbrite-sample/src/main/res/layout/items.xml
deleted file mode 100644
index 04c4859..0000000
--- a/sqlbrite-sample/src/main/res/layout/items.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    >
-  <!-- TODO get nice empty view / icon -->
-  <ImageView
-      android:id="@android:id/empty"
-      android:layout_width="wrap_content"
-      android:layout_height="wrap_content"
-      android:layout_gravity="center"
-      />
-  <ListView
-      android:id="@android:id/list"
-      android:layout_width="match_parent"
-      android:layout_height="match_parent"
-      />
-</FrameLayout>
diff --git a/sqlbrite-sample/src/main/res/layout/lists.xml b/sqlbrite-sample/src/main/res/layout/lists.xml
deleted file mode 100644
index 04c4859..0000000
--- a/sqlbrite-sample/src/main/res/layout/lists.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    >
-  <!-- TODO get nice empty view / icon -->
-  <ImageView
-      android:id="@android:id/empty"
-      android:layout_width="wrap_content"
-      android:layout_height="wrap_content"
-      android:layout_gravity="center"
-      />
-  <ListView
-      android:id="@android:id/list"
-      android:layout_width="match_parent"
-      android:layout_height="match_parent"
-      />
-</FrameLayout>
diff --git a/sqlbrite-sample/src/main/res/layout/new_item.xml b/sqlbrite-sample/src/main/res/layout/new_item.xml
deleted file mode 100644
index f83497b..0000000
--- a/sqlbrite-sample/src/main/res/layout/new_item.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:padding="12dp"
-    >
-  <EditText
-      android:id="@android:id/input"
-      android:layout_width="match_parent"
-      android:layout_height="wrap_content"
-      android:inputType="textCapSentences|textAutoCorrect"
-      android:hint="@string/new_item_hint"
-      />
-</FrameLayout>
diff --git a/sqlbrite-sample/src/main/res/layout/new_list.xml b/sqlbrite-sample/src/main/res/layout/new_list.xml
deleted file mode 100644
index bd979f3..0000000
--- a/sqlbrite-sample/src/main/res/layout/new_list.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<FrameLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:padding="12dp"
-    >
-  <EditText
-      android:id="@android:id/input"
-      android:layout_width="match_parent"
-      android:layout_height="wrap_content"
-      android:inputType="textCapWords|textAutoCorrect"
-      android:hint="@string/new_list_hint"
-      />
-</FrameLayout>
diff --git a/sqlbrite-sample/src/main/res/values/strings.xml b/sqlbrite-sample/src/main/res/values/strings.xml
deleted file mode 100644
index 50904cd..0000000
--- a/sqlbrite-sample/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-  <string name="app_name">SqlBrite To-Do</string>
-
-  <string name="create">Create</string>
-  <string name="cancel">Cancel</string>
-  <string name="new_list">New List</string>
-  <string name="new_list_hint">Name</string>
-  <string name="new_item">New Item</string>
-  <string name="new_item_hint">Description</string>
-</resources>
diff --git a/sqlbrite/build.gradle b/sqlbrite/build.gradle
index 8c312a0..21a2b76 100644
--- a/sqlbrite/build.gradle
+++ b/sqlbrite/build.gradle
@@ -1,14 +1,17 @@
+apply plugin: 'com.android.library'
+
 buildscript {
   dependencies {
     classpath rootProject.ext.androidPlugin
   }
 }
 
-apply plugin: 'com.android.library'
+//apply plugin: 'com.android.library'
+apply plugin: 'me.tatarka.retrolambda'
 apply from: rootProject.file('gradle/android-findbugs.gradle')
 
 dependencies {
-  compile rootProject.ext.rxJava
+  //compile rootProject.ext.rxJava
   compile rootProject.ext.supportAnnotations
 
   androidTestCompile rootProject.ext.testingSupportLib
@@ -17,6 +20,24 @@ dependencies {
   }
 }
 
+buildscript {
+    repositories {
+        mavenCentral()
+    }
+
+    dependencies {
+        classpath 'me.tatarka:gradle-retrolambda:3.2.0'
+    }
+}
+
+repositories {
+    mavenCentral()
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+}
+
 def isCi() {
   return "true".equals(System.getenv('CI'))
 }
@@ -29,11 +50,6 @@ android {
     testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
   }
 
-  compileOptions {
-    sourceCompatibility JavaVersion.VERSION_1_7
-    targetCompatibility JavaVersion.VERSION_1_7
-  }
-
   dexOptions {
     preDexLibraries = !isCi()
   }
@@ -66,4 +82,4 @@ if (isCi()) {
   }
 }
 
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
+//apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
diff --git a/sqlbrite/libs/rxmobile-android-0.0.1.jar b/sqlbrite/libs/rxmobile-android-0.0.1.jar
new file mode 100644
index 0000000..9a1e610
Binary files /dev/null and b/sqlbrite/libs/rxmobile-android-0.0.1.jar differ
diff --git a/sqlbrite/libs/rxmobile-java-0.0.1-javadoc.jar b/sqlbrite/libs/rxmobile-java-0.0.1-javadoc.jar
new file mode 100644
index 0000000..41c4f58
Binary files /dev/null and b/sqlbrite/libs/rxmobile-java-0.0.1-javadoc.jar differ
diff --git a/sqlbrite/libs/rxmobile-java-0.0.1.jar b/sqlbrite/libs/rxmobile-java-0.0.1.jar
new file mode 100644
index 0000000..dc53ef8
Binary files /dev/null and b/sqlbrite/libs/rxmobile-java-0.0.1.jar differ
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/RecordingObserver.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/RecordingObserver.java
index 96e1d20..38beb46 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/RecordingObserver.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/RecordingObserver.java
@@ -25,7 +25,7 @@
 import static com.squareup.sqlbrite.SqlBrite.Query;
 import static java.util.concurrent.TimeUnit.SECONDS;
 
-final class RecordingObserver implements Observer<Query> {
+final class RecordingObserver extends Observer<Query> {
   private static final Object COMPLETED = "<completed>";
   private static final String TAG = RecordingObserver.class.getSimpleName();
 
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/SqlBriteTest.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/SqlBriteTest.java
index 6432b1a..68c069f 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/SqlBriteTest.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/SqlBriteTest.java
@@ -50,6 +50,7 @@
 import static com.squareup.sqlbrite.TestDb.employee;
 import static com.squareup.sqlbrite.TestDb.manager;
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
+import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
 
 @RunWith(AndroidJUnit4.class)
@@ -108,9 +109,10 @@
     final List<String> logs = new ArrayList<>();
     db.setLoggingEnabled(false);
     db.setLogger(new SqlBrite.Logger() {
-      @Override public void log(String message) {
-        logs.add(message);
-      }
+        @Override
+        public void log(String message) {
+            logs.add(message);
+        }
     });
 
     db.insert(TABLE_EMPLOYEE, employee("john", "John Johnson"));
@@ -163,7 +165,7 @@
 
   @Test public void queryObservesInsertDebounced() {
     db.createQuery(TABLE_EMPLOYEE, SELECT_EMPLOYEES)
-        .debounce(500, MILLISECONDS)
+        .throttle(500, MILLISECONDS)
         .subscribe(o);
     o.assertCursor()
         .hasRow("alice", "Alice Allison")
@@ -314,7 +316,8 @@
   }
 
   @Test public void queryNotNotifiedAfterUnsubscribe() {
-    Subscription subscription = db.createQuery(TABLE_EMPLOYEE, SELECT_EMPLOYEES).subscribe(o);
+    Subscription subscription = o;
+    db.createQuery(TABLE_EMPLOYEE, SELECT_EMPLOYEES).subscribe(o);
     o.assertCursor()
         .hasRow("alice", "Alice Allison")
         .hasRow("bob", "Bob Bobberson")
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java b/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java
index 3ec76bc..4d36a47 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java
@@ -32,9 +32,12 @@
 import java.util.LinkedHashSet;
 import java.util.Set;
 import java.util.concurrent.TimeUnit;
+
+
 import rx.Observable;
-import rx.functions.Func1;
-import rx.subjects.PublishSubject;
+import rx.functions.Function;
+import rx.functions.Predicate;
+import rx.subjects.Subject;
 
 import static android.database.sqlite.SQLiteDatabase.CONFLICT_ABORT;
 import static android.database.sqlite.SQLiteDatabase.CONFLICT_FAIL;
@@ -75,7 +78,7 @@ public static SqlBrite create(@NonNull SQLiteOpenHelper helper) {
   private final SQLiteOpenHelper helper;
   private final ThreadLocal<Transaction> transactions = new ThreadLocal<>();
   /** Publishes sets of tables which have changed. */
-  private final PublishSubject<Set<String>> triggers = PublishSubject.create();
+  private final Subject<Set<String>> triggers = new Subject<>();
 
   // Read and write guarded by 'databaseLock'. Lazily initialized. Use methods to access.
   private volatile SQLiteDatabase readableDatabase;
@@ -249,8 +252,8 @@ public void endTransaction() {
    */
   public Observable<Query> createQuery(@NonNull final String table, @NonNull String sql,
       @NonNull String... args) {
-    Func1<Set<String>, Boolean> tableFilter = new Func1<Set<String>, Boolean>() {
-      @Override public Boolean call(Set<String> triggers) {
+    Predicate<Set<String>> tableFilter = new Predicate<Set<String>>() {
+      @Override public boolean test(Set<String> triggers) {
         return triggers.contains(table);
       }
 
@@ -269,8 +272,8 @@ public void endTransaction() {
    */
   public Observable<Query> createQuery(@NonNull final Iterable<String> tables, @NonNull String sql,
       @NonNull String... args) {
-    Func1<Set<String>, Boolean> tableFilter = new Func1<Set<String>, Boolean>() {
-      @Override public Boolean call(Set<String> triggers) {
+    Predicate<Set<String>> tableFilter = new Predicate<Set<String>>() {
+      @Override public boolean test(Set<String> triggers) {
         for (String table : tables) {
           if (triggers.contains(table)) {
             return true;
@@ -286,7 +289,7 @@ public void endTransaction() {
     return createQuery(tableFilter, sql, args);
   }
 
-  private Observable<Query> createQuery(final Func1<Set<String>, Boolean> tableFilter,
+  private Observable<Query> createQuery(final Predicate<Set<String>> tableFilter,
       final String sql, final String... args) {
     if (transactions.get() != null) {
       throw new IllegalStateException("Cannot create observable query in transaction. "
@@ -306,11 +309,11 @@ public void endTransaction() {
       }
     };
 
-    return triggers //
+    return triggers.asObservable() //
         .filter(tableFilter) // Only trigger on tables we care about.
         .startWith(INITIAL_TRIGGER) // Immediately execute the query for initial value.
-        .map(new Func1<Set<String>, Query>() {
-          @Override public Query call(Set<String> trigger) {
+        .map(new Function<Set<String>, Query>() {
+          @Override public Query apply(Set<String> trigger) {
             if (transactions.get() != null) {
               throw new IllegalStateException(
                   "Cannot subscribe to observable query in a transaction.");
