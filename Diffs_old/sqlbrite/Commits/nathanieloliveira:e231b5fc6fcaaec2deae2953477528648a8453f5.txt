diff --git a/build.gradle b/build.gradle
index 6520d0e..6e5f822 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,54 +1,63 @@
 allprojects {
-  buildscript {
+    buildscript {
+        repositories {
+            jcenter()
+        }
+    }
+
     repositories {
-      mavenCentral()
+        jcenter()
     }
-  }
+}
 
-  repositories {
-    mavenCentral()
-  }
+task wrapper(type: Wrapper) {
+    gradleVersion = '2.10'
 }
 
 ext {
-  androidPlugin = 'com.android.tools.build:gradle:1.3.0'
-  compileSdkVersion = 23
-  buildToolsVersion = '23.0.0'
-
-  // Android dependencies.
-  supportV4 = 'com.android.support:support-v4:23.0.0'
-  supportAnnotations = 'com.android.support:support-annotations:23.0.0'
-  supportTestRunner = 'com.android.support.test:runner:0.3'
-
-  // Dagger dependencies.
-  dagger = 'com.google.dagger:dagger:2.4'
-  daggerCompiler = 'com.google.dagger:dagger-compiler:2.4'
-
-  // Third-party dependencies.
-  butterKnife = 'com.jakewharton:butterknife:6.1.0'
-  timber = 'com.jakewharton.timber:timber:2.7.1'
-  autoValue = 'com.google.auto.value:auto-value:1.2-rc1'
-  autoValueParcel = 'com.ryanharter.auto.value:auto-value-parcel:0.2.0'
-  rxJava = 'io.reactivex:rxjava:1.1.0'
-  rxAndroid = 'io.reactivex:rxandroid:1.0.1'
-  rxBinding = 'com.jakewharton.rxbinding:rxbinding:0.2.0'
-  truth = 'com.google.truth:truth:0.27'
-  findbugsJsr305 = 'com.google.code.findbugs:jsr305:3.0.0'
-  findbugsAnnotations = 'com.google.code.findbugs:annotations:3.0.0'
+    androidPlugin = 'com.android.tools.build:gradle:2.1.0'
+    compileSdkVersion = 24
+    buildToolsVersion = '24.0.0'
+
+    androidMaven = 'com.github.dcendents:android-maven-gradle-plugin:1.3'
+
+    // Android dependencies.
+    supportV4 = 'com.android.support:support-v4:24.0.0'
+    supportAnnotations = 'com.android.support:support-annotations:24.0.0'
+    supportTestRunner = 'com.android.support.test:runner:0.5'
+
+    // Dagger dependencies.
+    dagger = 'com.google.dagger:dagger:2.4'
+    daggerCompiler = 'com.google.dagger:dagger-compiler:2.4'
+
+    // Third-party dependencies.
+    butterKnife = 'com.jakewharton:butterknife:6.1.0'
+    timber = 'com.jakewharton.timber:timber:2.7.1'
+    autoValue = 'com.google.auto.value:auto-value:1.2-rc1'
+    autoValueParcel = 'com.ryanharter.auto.value:auto-value-parcel:0.2.0'
+    rxJava = 'io.reactivex:rxjava:1.1.6'
+    rxAndroid = 'io.reactivex:rxandroid:1.0.1'
+    rxBinding = 'com.jakewharton.rxbinding:rxbinding:0.2.0'
+    truth = 'com.google.truth:truth:0.27'
+    findbugsJsr305 = 'com.google.code.findbugs:jsr305:3.0.0'
+    findbugsAnnotations = 'com.google.code.findbugs:annotations:3.0.0'
+
+    // sqlite support
+    sqliteSupport = 'io.requery:sqlite-android:3.13.0-2'
 }
 
 configurations {
-  osstrich
+    osstrich
 }
 dependencies {
-  osstrich 'com.squareup.osstrich:osstrich:1.2.0'
+    osstrich 'com.squareup.osstrich:osstrich:1.2.0'
 }
 task publishJavadoc(type: JavaExec) {
-  classpath = configurations.osstrich
-  main = 'com.squareup.osstrich.JavadocPublisher'
-  args = [
-      'build/javadoc',
-      'https://github.com/square/sqlbrite',
-      'com.squareup.sqlbrite'
-  ]
+    classpath = configurations.osstrich
+    main = 'com.squareup.osstrich.JavadocPublisher'
+    args = [
+            'build/javadoc',
+            'https://github.com/square/sqlbrite',
+            'com.squareup.sqlbrite'
+    ]
 }
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 667288a..13372ae 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index aee0967..122a0dc 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Nov 26 14:54:50 EST 2014
+#Mon Dec 28 10:00:20 PST 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.6-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
diff --git a/gradlew b/gradlew
index 91a7e26..9d82f78 100755
--- a/gradlew
+++ b/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java b/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
index 2147fdd..7c728bc 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
@@ -16,18 +16,22 @@
 package com.example.sqlbrite.todo.db;
 
 import android.app.Application;
-import android.database.sqlite.SQLiteOpenHelper;
+
 import com.squareup.sqlbrite.BriteDatabase;
 import com.squareup.sqlbrite.SqlBrite;
+
+import javax.inject.Singleton;
+
 import dagger.Module;
 import dagger.Provides;
-import javax.inject.Singleton;
+import io.requery.android.database.sqlite.SQLiteOpenHelper;
 import rx.schedulers.Schedulers;
 import timber.log.Timber;
 
 @Module
 public final class DbModule {
-  @Provides @Singleton SQLiteOpenHelper provideOpenHelper(Application application) {
+  @Provides @Singleton
+  SQLiteOpenHelper provideOpenHelper(Application application) {
     return new DbOpenHelper(application);
   }
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/db/DbOpenHelper.java b/sample/src/main/java/com/example/sqlbrite/todo/db/DbOpenHelper.java
index 00af8eb..397812d 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/db/DbOpenHelper.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/db/DbOpenHelper.java
@@ -16,8 +16,9 @@
 package com.example.sqlbrite.todo.db;
 
 import android.content.Context;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
+
+import io.requery.android.database.sqlite.SQLiteDatabase;
+import io.requery.android.database.sqlite.SQLiteOpenHelper;
 
 final class DbOpenHelper extends SQLiteOpenHelper {
   private static final int VERSION = 1;
diff --git a/sqlbrite/build.gradle b/sqlbrite/build.gradle
index fccb727..ea540c2 100644
--- a/sqlbrite/build.gradle
+++ b/sqlbrite/build.gradle
@@ -1,15 +1,20 @@
 buildscript {
   dependencies {
     classpath rootProject.ext.androidPlugin
+    classpath rootProject.ext.androidMaven
   }
 }
 
 apply plugin: 'com.android.library'
+apply plugin: 'com.github.dcendents.android-maven'
 apply from: rootProject.file('gradle/android-findbugs.gradle')
 
+group = 'com.github.nathanieloliveira'
+
 dependencies {
   compile rootProject.ext.rxJava
   compile rootProject.ext.supportAnnotations
+  compile rootProject.ext.sqliteSupport
 
   androidTestCompile rootProject.ext.supportTestRunner
   androidTestCompile(rootProject.ext.truth) {
@@ -65,5 +70,3 @@ if (isCi()) {
     variant.connectedInstrumentTest.dependsOn startEmulator
   }
 }
-
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/BriteDatabaseTest.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/BriteDatabaseTest.java
index bda04d0..255404b 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/BriteDatabaseTest.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/BriteDatabaseTest.java
@@ -18,22 +18,26 @@
 import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.SQLException;
-import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
 import android.support.test.InstrumentationRegistry;
 import android.support.test.runner.AndroidJUnit4;
+
 import com.squareup.sqlbrite.BriteDatabase.Transaction;
 import com.squareup.sqlbrite.TestDb.Employee;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
 import java.io.Closeable;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 import java.util.concurrent.CountDownLatch;
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
+
+import io.requery.android.database.sqlite.SQLiteDatabase;
 import rx.Observable;
 import rx.Subscription;
 import rx.functions.Action1;
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/TestDb.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/TestDb.java
index 6fa8d20..97946bf 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/TestDb.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite/TestDb.java
@@ -18,11 +18,13 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
 import android.support.annotation.NonNull;
+
 import java.util.Arrays;
 import java.util.Collection;
+
+import io.requery.android.database.sqlite.SQLiteDatabase;
+import io.requery.android.database.sqlite.SQLiteOpenHelper;
 import rx.functions.Func1;
 
 import static com.squareup.sqlbrite.TestDb.EmployeeTable.ID;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java b/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java
index 0348ed8..79efc49 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite/BriteDatabase.java
@@ -17,14 +17,14 @@
 
 import android.content.ContentValues;
 import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
 import android.database.sqlite.SQLiteTransactionListener;
 import android.support.annotation.CheckResult;
 import android.support.annotation.IntDef;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+
 import com.squareup.sqlbrite.SqlBrite.Query;
+
 import java.io.Closeable;
 import java.lang.annotation.Retention;
 import java.util.Arrays;
@@ -32,6 +32,9 @@
 import java.util.LinkedHashSet;
 import java.util.Set;
 import java.util.concurrent.TimeUnit;
+
+import io.requery.android.database.sqlite.SQLiteDatabase;
+import io.requery.android.database.sqlite.SQLiteOpenHelper;
 import rx.Observable;
 import rx.Scheduler;
 import rx.Subscriber;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java b/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java
index 1728b67..3cefdea 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite/SqlBrite.java
@@ -17,12 +17,14 @@
 
 import android.content.ContentResolver;
 import android.database.Cursor;
-import android.database.sqlite.SQLiteOpenHelper;
 import android.support.annotation.CheckResult;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.util.Log;
+
 import java.util.List;
+
+import io.requery.android.database.sqlite.SQLiteOpenHelper;
 import rx.Observable;
 import rx.Observable.Operator;
 import rx.Scheduler;
diff --git a/sqlbrite/src/main/res/mipmap-hdpi/ic_launcher.png b/sqlbrite/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000..a35fe28
Binary files /dev/null and b/sqlbrite/src/main/res/mipmap-hdpi/ic_launcher.png differ
