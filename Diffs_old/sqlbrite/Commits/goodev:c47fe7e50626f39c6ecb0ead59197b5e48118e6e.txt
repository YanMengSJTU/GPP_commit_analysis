diff --git a/build.gradle b/build.gradle
index 483e1e9..0d84629 100644
--- a/build.gradle
+++ b/build.gradle
@@ -12,13 +12,14 @@ allprojects {
 }
 
 ext {
-  androidPlugin = 'com.android.tools.build:gradle:2.2.2'
+  androidPlugin = 'com.android.tools.build:gradle:2.3.1'
   compileSdkVersion = 25
-  buildToolsVersion = '25.0.1'
+  buildToolsVersion = '25.0.2'
 
   // Android dependencies.
-  supportV4 = 'com.android.support:support-v4:25.0.1'
-  supportAnnotations = 'com.android.support:support-annotations:25.0.1'
+  supportV4 = 'com.android.support:support-v4:25.3.1'
+  supportAnnotations = 'com.android.support:support-annotations:25.3.1'
+  supportRv = 'com.android.support:recyclerview-v7:25.3.1'
   supportTestRunner = 'com.android.support.test:runner:0.5'
 
   // Dagger dependencies.
@@ -33,7 +34,8 @@ ext {
   autoValueParcel = 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
   rxJava = 'io.reactivex:rxjava:1.2.3'
   rxAndroid = 'io.reactivex:rxandroid:1.2.1'
-  rxBinding = 'com.jakewharton.rxbinding:rxbinding:0.4.0'
+  rxBinding = 'com.jakewharton.rxbinding:rxbinding:1.0.1'
+  rxBindingRv = 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:1.0.1'
   truth = 'com.google.truth:truth:0.30'
   findbugsJsr305 = 'com.google.code.findbugs:jsr305:3.0.0'
   findbugsAnnotations = 'com.google.code.findbugs:annotations:3.0.0'
diff --git a/gradle.properties b/gradle.properties
index fbfb802..dc53662 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,16 +1,29 @@
-GROUP=com.squareup.sqlbrite
-VERSION_NAME=1.1.2-SNAPSHOT
-
-POM_DESCRIPTION=A lightweight wrapper around SQLiteOpenHelper which introduces reactive stream semantics to SQL operations.
-
-POM_URL=http://github.com/square/sqlbrite/
-POM_SCM_URL=http://github.com/square/sqlbrite/
-POM_SCM_CONNECTION=scm:git:git://github.com/square/sqlbrite.git
-POM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/square/sqlbrite.git
-
-POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
-POM_LICENCE_DIST=repo
-
-POM_DEVELOPER_ID=square
-POM_DEVELOPER_NAME=Square, Inc.
+## Project-wide Gradle settings.
+#
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+#
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx1024m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+#
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+#Thu Apr 20 16:10:33 CST 2017
+systemProp.http.proxyPort=1080
+POM_LICENCE_URL=http\://www.apache.org/licenses/LICENSE-2.0.txt
+VERSION_NAME=1.1.2-SNAPSHOT
+POM_DEVELOPER_ID=square
+POM_SCM_DEV_CONNECTION=scm\:git\:ssh\://git@github.com/square/sqlbrite.git
+POM_SCM_URL=http\://github.com/square/sqlbrite/
+GROUP=com.squareup.sqlbrite
+POM_LICENCE_DIST=repo
+POM_DEVELOPER_NAME=Square, Inc.
+systemProp.http.proxyHost=10.1.205.9
+POM_URL=http\://github.com/square/sqlbrite/
+POM_SCM_CONNECTION=scm\:git\:git\://github.com/square/sqlbrite.git
+POM_LICENCE_NAME=The Apache Software License, Version 2.0
+POM_DESCRIPTION=A lightweight wrapper around SQLiteOpenHelper which introduces reactive stream semantics to SQL operations.
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 224f727..202f9db 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Nov 26 14:54:50 EST 2014
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
+#Thu Apr 20 16:13:16 CST 2017
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
diff --git a/sample/build.gradle b/sample/build.gradle
index 32ce65c..a7ae558 100644
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -23,6 +23,8 @@ dependencies {
   compile rootProject.ext.rxJava
   compile rootProject.ext.rxAndroid
   compile rootProject.ext.rxBinding
+  compile rootProject.ext.rxBindingRv
+  compile rootProject.ext.supportRv
 
   provided rootProject.ext.autoValue
   annotationProcessor rootProject.ext.autoValue
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsAdapter.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsAdapter.java
index 22ccff4..76f02d8 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsAdapter.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsAdapter.java
@@ -16,66 +16,92 @@
 package com.example.sqlbrite.todo.ui;
 
 import android.content.Context;
+import android.support.v7.widget.RecyclerView;
 import android.text.SpannableString;
 import android.text.style.StrikethroughSpan;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.BaseAdapter;
 import android.widget.CheckedTextView;
+
 import com.example.sqlbrite.todo.db.TodoItem;
+import com.jakewharton.rxbinding.view.RxView;
+import com.squareup.sqlbrite.BriteDatabase;
+
 import java.util.Collections;
 import java.util.List;
+
 import rx.functions.Action1;
+import rx.schedulers.Schedulers;
 
-final class ItemsAdapter extends BaseAdapter implements Action1<List<TodoItem>> {
-  private final LayoutInflater inflater;
+final class ItemsAdapter extends RecyclerView.Adapter<ItemsAdapter.ViewHolder> implements Action1<List<TodoItem>> {
+    private final LayoutInflater inflater;
 
-  private List<TodoItem> items = Collections.emptyList();
+    private List<TodoItem> items = Collections.emptyList();
+    private BriteDatabase db;
+
+    public ItemsAdapter(Context context, BriteDatabase db) {
+        inflater = LayoutInflater.from(context);
+        this.db = db;
+    }
 
-  public ItemsAdapter(Context context) {
-    inflater = LayoutInflater.from(context);
-  }
+    @Override
+    public void call(List<TodoItem> items) {
+        this.items = items;
+        notifyDataSetChanged();
+    }
 
-  @Override public void call(List<TodoItem> items) {
-    this.items = items;
-    notifyDataSetChanged();
-  }
 
-  @Override public int getCount() {
-    return items.size();
-  }
+    public TodoItem getItem(int position) {
+        return items.get(position);
+    }
 
-  @Override public TodoItem getItem(int position) {
-    return items.get(position);
-  }
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        return new ViewHolder(inflater.inflate(android.R.layout.simple_list_item_multiple_choice, parent, false));
+    }
 
-  @Override public long getItemId(int position) {
-    return getItem(position).id();
-  }
+    @Override
+    public void onBindViewHolder(ViewHolder holder, int position) {
+        TodoItem item = getItem(position);
+        CheckedTextView textView = (CheckedTextView) holder.itemView;
+        textView.setChecked(item.complete());
 
-  @Override public boolean hasStableIds() {
-    return true;
-  }
+        CharSequence description = item.description();
+        if (item.complete()) {
+            SpannableString spannable = new SpannableString(description);
+            spannable.setSpan(new StrikethroughSpan(), 0, description.length(), 0);
+            description = spannable;
+        }
 
-  @Override public View getView(int position, View convertView, ViewGroup parent) {
-    if (convertView == null) {
-      convertView = inflater.inflate(android.R.layout.simple_list_item_multiple_choice, parent, false);
+        textView.setText(description);
     }
 
-    TodoItem item = getItem(position);
-    CheckedTextView textView = (CheckedTextView) convertView;
-    textView.setChecked(item.complete());
+    @Override
+    public long getItemId(int position) {
+        return getItem(position).id();
+    }
 
-    CharSequence description = item.description();
-    if (item.complete()) {
-      SpannableString spannable = new SpannableString(description);
-      spannable.setSpan(new StrikethroughSpan(), 0, description.length(), 0);
-      description = spannable;
+    @Override
+    public int getItemCount() {
+        return items.size();
     }
 
-    textView.setText(description);
 
-    return convertView;
-  }
+    class ViewHolder extends RecyclerView.ViewHolder {
+        public ViewHolder(View itemView) {
+            super(itemView);
+            RxView.clicks(itemView) //
+                    .observeOn(Schedulers.io())
+                    .subscribe(new Action1<Void>() {
+                        @Override
+                        public void call(Void aVoid) {
+                            TodoItem item = getItem(getAdapterPosition());
+                            boolean newValue = !item.complete();
+                            db.update(TodoItem.TABLE, new TodoItem.Builder().complete(newValue).build(),
+                                    TodoItem.ID + " = ?", String.valueOf(item.id()));
+                        }
+                    });
+        }
+    }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
index b64a2fe..0c84786 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
@@ -21,6 +21,8 @@
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.support.v4.view.MenuItemCompat;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -35,6 +37,8 @@
 import com.example.sqlbrite.todo.db.Db;
 import com.example.sqlbrite.todo.db.TodoItem;
 import com.example.sqlbrite.todo.db.TodoList;
+import com.jakewharton.rxbinding.support.v7.widget.RxRecyclerView;
+import com.jakewharton.rxbinding.support.v7.widget.RxRecyclerViewAdapter;
 import com.jakewharton.rxbinding.widget.AdapterViewItemClickEvent;
 import com.jakewharton.rxbinding.widget.RxAdapterView;
 import com.squareup.sqlbrite.BriteDatabase;
@@ -87,7 +91,8 @@ public static ItemsFragment newInstance(long listId) {
 
   @Inject BriteDatabase db;
 
-  @BindView(android.R.id.list) ListView listView;
+  @BindView(android.R.id.list)
+  RecyclerView listView;
   @BindView(android.R.id.empty) View emptyView;
 
   private Listener listener;
@@ -108,7 +113,7 @@ private long getListId() {
     setHasOptionsMenu(true);
 
     listener = (Listener) activity;
-    adapter = new ItemsAdapter(activity);
+    adapter = new ItemsAdapter(activity, db);
   }
 
   @Override public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
@@ -133,18 +138,9 @@ private long getListId() {
   public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
     super.onViewCreated(view, savedInstanceState);
     ButterKnife.bind(this, view);
-    listView.setEmptyView(emptyView);
     listView.setAdapter(adapter);
+    listView.setLayoutManager(new LinearLayoutManager(getContext()));
 
-    RxAdapterView.itemClickEvents(listView) //
-        .observeOn(Schedulers.io())
-        .subscribe(new Action1<AdapterViewItemClickEvent>() {
-          @Override public void call(AdapterViewItemClickEvent event) {
-            boolean newValue = !adapter.getItem(event.position()).complete();
-            db.update(TodoItem.TABLE, new TodoItem.Builder().complete(newValue).build(),
-                TodoItem.ID + " = ?", String.valueOf(event.id()));
-          }
-        });
   }
 
   @Override public void onResume() {
diff --git a/sample/src/main/res/layout/items.xml b/sample/src/main/res/layout/items.xml
index 04c4859..6475380 100644
--- a/sample/src/main/res/layout/items.xml
+++ b/sample/src/main/res/layout/items.xml
@@ -12,7 +12,7 @@
       android:layout_height="wrap_content"
       android:layout_gravity="center"
       />
-  <ListView
+  <android.support.v7.widget.RecyclerView
       android:id="@android:id/list"
       android:layout_width="match_parent"
       android:layout_height="match_parent"
