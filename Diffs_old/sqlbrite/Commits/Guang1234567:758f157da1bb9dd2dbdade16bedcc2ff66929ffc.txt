diff --git a/README.md b/README.md
index 6194eeb..28ec413 100755
--- a/README.md
+++ b/README.md
@@ -1,3 +1,83 @@
+Something I added
+=========
+
+2017-12-27 13:19:59
+---------
+
+1. Integrate [android-database-sqlcipher][] into `SqlBrite`.
+
+2. Integrate [wcdb][] into `SqlBrite`.
+
+Usage
+-----
+
+```java
+
+        // 1) android native sqlite, no cipher
+        /*
+        Configuration configuration = Configuration.builder(application)
+            .name("todo.db")
+            .callback(new DbCallback())
+            .build();
+
+        Factory factory = new FrameworkSQLiteOpenHelperFactory();
+        SupportSQLiteOpenHelper helper = factory.create(configuration);
+
+        BriteDatabase db = sqlBrite.wrapDatabaseHelper(helper, Schedulers.io());
+        db.setLoggingEnabled(true);
+        //*/
+
+
+        // 2) SQLCipher is an SQLite extension that provides 256 bit AES encryption of database files.
+        /*
+        Configuration configuration_sqlcipher = Configuration.builder(application)
+                .name("todo_sqlcipher.db")
+                .callback(new DbCallback())
+                .build();
+
+        SqlcipherSQLiteOpenHelperFactory factory_sqlcipher = new SqlcipherSQLiteOpenHelperFactory();
+        SupportSQLiteOpenHelper helper_sqlcipher = factory_sqlcipher.create(configuration_sqlcipher, "Passsword_1234567");
+
+        BriteDatabase db_sqlcipher = sqlBrite.wrapDatabaseHelper(helper_sqlcipher, Schedulers.io());
+        db_sqlcipher.setLoggingEnabled(true);
+        //*/
+
+
+        // 3) wcdb base on SQLCipher, no cipher
+        /*
+        Configuration configuration_wcdb = Configuration.builder(application)
+                .name("todo_wcdb.db")
+                .callback(new DbCallback())
+                .build();
+
+        WcdbSQLiteOpenHelperFactory factory_wcdb = new WcdbSQLiteOpenHelperFactory();
+        SupportSQLiteOpenHelper helper_wcdb = factory_wcdb.create(configuration_wcdb);
+
+        BriteDatabase db_wcdb = sqlBrite.wrapDatabaseHelper(helper_wcdb, Schedulers.io());
+        db_wcdb.setLoggingEnabled(true);
+        //*/
+
+
+        // 4) wcdb base on SQLCipher, has cipher
+        ///*
+        Configuration configuration_wcdb_cipher = Configuration.builder(application)
+                .name("todo_wcdb_cipher.db")
+                .callback(new DbCallback())
+                .build();
+
+        WcdbSQLiteOpenHelperFactory factory_wcdb_cipher = new WcdbSQLiteOpenHelperFactory();
+        SupportSQLiteOpenHelper helper_wcdb_cipher = factory_wcdb_cipher.create(configuration_wcdb_cipher, "Passsword_7654321");
+
+        BriteDatabase db_wcdb_cipher = sqlBrite.wrapDatabaseHelper(helper_wcdb_cipher, Schedulers.io());
+        db_wcdb_cipher.setLoggingEnabled(true);
+        //*/
+
+```
+
+
+
+
+
 SQL Brite
 =========
 
@@ -184,3 +264,6 @@ License
 
  [snap]: https://oss.sonatype.org/content/repositories/snapshots/
  [sqldelight]: https://github.com/square/sqldelight/
+ 
+ [android-database-sqlcipher]: https://github.com/sqlcipher/android-database-sqlcipher
+ [wcdb]: https://github.com/Tencent/wcdb
