diff --git a/build.gradle b/build.gradle
index f0db291..c23afcc 100644
--- a/build.gradle
+++ b/build.gradle
@@ -29,19 +29,17 @@ allprojects {
 
 ext {
   // Android dependencies.
-  supportV4 = 'com.android.support:support-v4:28.0.0'
-  supportAnnotations = 'com.android.support:support-annotations:28.0.0'
-  supportTestRunner = 'com.android.support.test:runner:1.0.2'
-  supportTestRules = 'com.android.support.test:rules:1.0.2'
+  supportV4 = 'androidx.legacy:legacy-support-v4:1.0.0'
+  supportAnnotations = 'androidx.annotation:annotation:1.0.0'
+  supportTestRunner = 'androidx.test.ext:junit:1.1.1'
+  supportTestRules = 'androidx.test:rules:1.2.0'
 
-  supportSqlite = 'android.arch.persistence:db:1.1.1'
-  supportSqliteFramework = 'android.arch.persistence:db-framework:1.1.1'
+  supportSqlite = 'androidx.sqlite:sqlite:2.0.0'
+  supportSqliteFramework = 'androidx.sqlite:sqlite-framework:2.0.0'
 
   // Third-party dependencies.
   dagger = 'com.google.dagger:dagger:2.13'
   daggerCompiler = 'com.google.dagger:dagger-compiler:2.13'
-  butterKnifeRuntime = 'com.jakewharton:butterknife:8.8.1'
-  butterKnifeCompiler = 'com.jakewharton:butterknife-compiler:8.8.1'
   timber = 'com.jakewharton.timber:timber:4.6.0'
   autoValue = 'com.google.auto.value:auto-value:1.5'
   autoValueParcel = 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
diff --git a/gradle.properties b/gradle.properties
index 521b54f..a84614c 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -14,3 +14,5 @@ POM_LICENCE_DIST=repo
 
 POM_DEVELOPER_ID=square
 POM_DEVELOPER_NAME=Square, Inc.
+android.useAndroidX=true
+android.enableJetifier=true
diff --git a/sample/build.gradle b/sample/build.gradle
index 02bb0e7..80a9ebf 100644
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -7,8 +7,6 @@ dependencies {
   implementation rootProject.ext.dagger
   annotationProcessor rootProject.ext.daggerCompiler
 
-  implementation rootProject.ext.butterKnifeRuntime
-  annotationProcessor rootProject.ext.butterKnifeCompiler
   implementation rootProject.ext.timber
   implementation rootProject.ext.rxJava
   implementation rootProject.ext.rxAndroid
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/db/DbCallback.java b/sample/src/main/java/com/example/sqlbrite/todo/db/DbCallback.java
index a69d920..4e71e7a 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/db/DbCallback.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/db/DbCallback.java
@@ -15,11 +15,8 @@
  */
 package com.example.sqlbrite.todo.db;
 
-import android.arch.persistence.db.SupportSQLiteDatabase;
-import android.arch.persistence.db.SupportSQLiteOpenHelper;
-import android.content.Context;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
+import androidx.sqlite.db.SupportSQLiteDatabase;
+import androidx.sqlite.db.SupportSQLiteOpenHelper;
 
 import static android.database.sqlite.SQLiteDatabase.CONFLICT_FAIL;
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java b/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
index c2701fe..501ee80 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/db/DbModule.java
@@ -16,10 +16,10 @@
 package com.example.sqlbrite.todo.db;
 
 import android.app.Application;
-import android.arch.persistence.db.SupportSQLiteOpenHelper;
-import android.arch.persistence.db.SupportSQLiteOpenHelper.Configuration;
-import android.arch.persistence.db.SupportSQLiteOpenHelper.Factory;
-import android.arch.persistence.db.framework.FrameworkSQLiteOpenHelperFactory;
+import androidx.sqlite.db.SupportSQLiteOpenHelper;
+import androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration;
+import androidx.sqlite.db.SupportSQLiteOpenHelper.Factory;
+import androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory;
 import com.squareup.sqlbrite3.BriteDatabase;
 import com.squareup.sqlbrite3.SqlBrite;
 import dagger.Module;
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
index 6e39d27..b00840d 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
@@ -18,9 +18,9 @@
 import android.app.Activity;
 import android.database.Cursor;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v4.view.MenuItemCompat;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+import androidx.core.view.MenuItemCompat;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -28,8 +28,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ListView;
-import butterknife.BindView;
-import butterknife.ButterKnife;
 import com.example.sqlbrite.todo.R;
 import com.example.sqlbrite.todo.TodoApp;
 import com.example.sqlbrite.todo.db.Db;
@@ -48,8 +46,8 @@
 import javax.inject.Inject;
 
 import static android.database.sqlite.SQLiteDatabase.CONFLICT_NONE;
-import static android.support.v4.view.MenuItemCompat.SHOW_AS_ACTION_IF_ROOM;
-import static android.support.v4.view.MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT;
+import static androidx.core.view.MenuItemCompat.SHOW_AS_ACTION_IF_ROOM;
+import static androidx.core.view.MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT;
 import static com.squareup.sqlbrite3.SqlBrite.Query;
 
 public final class ItemsFragment extends Fragment {
@@ -88,9 +86,6 @@ public static ItemsFragment newInstance(long listId) {
 
   @Inject BriteDatabase db;
 
-  @BindView(android.R.id.list) ListView listView;
-  @BindView(android.R.id.empty) View emptyView;
-
   private Listener listener;
   private ItemsAdapter adapter;
   private CompositeDisposable disposables;
@@ -133,7 +128,8 @@ private long getListId() {
   @Override
   public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
     super.onViewCreated(view, savedInstanceState);
-    ButterKnife.bind(this, view);
+    ListView listView = view.findViewById(android.R.id.list);
+    View emptyView = view.findViewById(android.R.id.empty);
     listView.setEmptyView(emptyView);
     listView.setAdapter(adapter);
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
index 3869577..db529fc 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
@@ -17,19 +17,18 @@
 
 import android.app.Activity;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.v4.app.Fragment;
-import android.support.v4.view.MenuItemCompat;
+import androidx.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.fragment.app.Fragment;
+import androidx.core.view.MenuItemCompat;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.AdapterView;
 import android.widget.ListView;
-import butterknife.BindView;
-import butterknife.ButterKnife;
-import butterknife.OnItemClick;
 import com.example.sqlbrite.todo.R;
 import com.example.sqlbrite.todo.TodoApp;
 import com.squareup.sqlbrite3.BriteDatabase;
@@ -37,8 +36,8 @@
 import io.reactivex.disposables.Disposable;
 import javax.inject.Inject;
 
-import static android.support.v4.view.MenuItemCompat.SHOW_AS_ACTION_IF_ROOM;
-import static android.support.v4.view.MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT;
+import static androidx.core.view.MenuItemCompat.SHOW_AS_ACTION_IF_ROOM;
+import static androidx.core.view.MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT;
 
 public final class ListsFragment extends Fragment {
   interface Listener {
@@ -52,9 +51,6 @@ static ListsFragment newInstance() {
 
   @Inject BriteDatabase db;
 
-  @BindView(android.R.id.list) ListView listView;
-  @BindView(android.R.id.empty) View emptyView;
-
   private Listener listener;
   private ListsAdapter adapter;
   private Disposable disposable;
@@ -93,13 +89,16 @@ static ListsFragment newInstance() {
   @Override
   public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
     super.onViewCreated(view, savedInstanceState);
-    ButterKnife.bind(this, view);
+    ListView listView = view.findViewById(android.R.id.list);
+    View emptyView = view.findViewById(android.R.id.empty);
     listView.setEmptyView(emptyView);
     listView.setAdapter(adapter);
-  }
-
-  @OnItemClick(android.R.id.list) void listClicked(long listId) {
-    listener.onListClicked(listId);
+    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+      @Override
+      public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+        listener.onListClicked(id);
+      }
+    });
   }
 
   @Override public void onResume() {
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
index f5b8cb3..a5c5435 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/MainActivity.java
@@ -16,7 +16,7 @@
 package com.example.sqlbrite.todo.ui;
 
 import android.os.Bundle;
-import android.support.v4.app.FragmentActivity;
+import androidx.fragment.app.FragmentActivity;
 import com.example.sqlbrite.todo.R;
 
 public final class MainActivity extends FragmentActivity
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
index d584d97..3e4e83c 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
@@ -21,8 +21,8 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
+import androidx.annotation.NonNull;
+import androidx.fragment.app.DialogFragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.EditText;
@@ -39,7 +39,6 @@
 import javax.inject.Inject;
 
 import static android.database.sqlite.SQLiteDatabase.CONFLICT_NONE;
-import static butterknife.ButterKnife.findById;
 
 public final class NewItemFragment extends DialogFragment {
   private static final String KEY_LIST_ID = "list_id";
@@ -70,7 +69,7 @@ private long getListId() {
     final Context context = getActivity();
     View view = LayoutInflater.from(context).inflate(R.layout.new_item, null);
 
-    EditText name = findById(view, android.R.id.input);
+    EditText name = view.findViewById(android.R.id.input);
     Observable.combineLatest(createClicked, RxTextView.textChanges(name),
         new BiFunction<String, CharSequence, String>() {
           @Override public String apply(String ignored, CharSequence text) {
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
index 5050419..aa9079d 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
@@ -21,8 +21,8 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v4.app.DialogFragment;
+import androidx.annotation.NonNull;
+import androidx.fragment.app.DialogFragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.EditText;
@@ -39,7 +39,6 @@
 import javax.inject.Inject;
 
 import static android.database.sqlite.SQLiteDatabase.CONFLICT_NONE;
-import static butterknife.ButterKnife.findById;
 
 public final class NewListFragment extends DialogFragment {
   public static NewListFragment newInstance() {
@@ -59,7 +58,7 @@ public static NewListFragment newInstance() {
     final Context context = getActivity();
     View view = LayoutInflater.from(context).inflate(R.layout.new_list, null);
 
-    EditText name = findById(view, android.R.id.input);
+    EditText name = view.findViewById(android.R.id.input);
     Observable.combineLatest(createClicked, RxTextView.textChanges(name),
         new BiFunction<String, CharSequence, String>() {
           @Override public String apply(String ignored, CharSequence text) {
diff --git a/sqlbrite/build.gradle b/sqlbrite/build.gradle
index d627afa..c30fa75 100644
--- a/sqlbrite/build.gradle
+++ b/sqlbrite/build.gradle
@@ -19,7 +19,7 @@ android {
   defaultConfig {
     minSdkVersion versions.minSdk
 
-    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
+    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
   }
 
   compileOptions {
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteContentResolverTest.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteContentResolverTest.java
index df51ba5..26cbc13 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteContentResolverTest.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteContentResolverTest.java
@@ -21,10 +21,10 @@
 import android.database.Cursor;
 import android.database.MatrixCursor;
 import android.net.Uri;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.test.rule.provider.ProviderTestRule;
-import android.support.test.runner.AndroidJUnit4;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.test.rule.provider.ProviderTestRule;
 
 import com.squareup.sqlbrite3.SqlBrite.Query;
 
@@ -48,7 +48,8 @@
 
 public final class BriteContentResolverTest {
 
-  @NonNull private static final Uri AUTHORITY = Objects.requireNonNull(Uri.parse("content://test_authority"));
+  @NonNull
+  private static final Uri AUTHORITY = Objects.requireNonNull(Uri.parse("content://test_authority"));
 
   @Rule
   public ProviderTestRule providerRule = new ProviderTestRule.Builder(
@@ -206,7 +207,7 @@ public String getType(@NonNull Uri uri) {
     }
 
     @Override public int update(@NonNull Uri uri, @Nullable ContentValues values, @Nullable String selection,
-        @Nullable String[] selectionArgs) {
+                                @Nullable String[] selectionArgs) {
       for (String key : storage.keySet()) {
         if (values != null) {
           storage.put(key, values.getAsString(VALUE));
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteDatabaseTest.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteDatabaseTest.java
index a897a65..4fe629c 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteDatabaseTest.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/BriteDatabaseTest.java
@@ -16,21 +16,21 @@
 package com.squareup.sqlbrite3;
 
 import android.annotation.TargetApi;
-import android.arch.persistence.db.SimpleSQLiteQuery;
-import android.arch.persistence.db.SupportSQLiteDatabase;
-import android.arch.persistence.db.SupportSQLiteOpenHelper;
-import android.arch.persistence.db.SupportSQLiteOpenHelper.Configuration;
-import android.arch.persistence.db.SupportSQLiteOpenHelper.Factory;
-import android.arch.persistence.db.SupportSQLiteStatement;
-import android.arch.persistence.db.framework.FrameworkSQLiteOpenHelperFactory;
+import androidx.sqlite.db.SimpleSQLiteQuery;
+import androidx.sqlite.db.SupportSQLiteDatabase;
+import androidx.sqlite.db.SupportSQLiteOpenHelper;
+import androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration;
+import androidx.sqlite.db.SupportSQLiteOpenHelper.Factory;
+import androidx.sqlite.db.SupportSQLiteStatement;
+import androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory;
 import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteException;
 import android.os.Build;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.filters.SdkSuppress;
-import android.support.test.runner.AndroidJUnit4;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.filters.SdkSuppress;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import com.squareup.sqlbrite3.BriteDatabase.Transaction;
 import com.squareup.sqlbrite3.RecordingObserver.CursorAssert;
 import com.squareup.sqlbrite3.TestDb.Employee;
@@ -85,7 +85,9 @@
   private BriteDatabase db;
 
   @Before public void setUp() throws IOException {
-    Configuration configuration = Configuration.builder(InstrumentationRegistry.getContext())
+    Configuration configuration = Configuration.builder(
+            InstrumentationRegistry.getInstrumentation().getTargetContext()
+    )
         .callback(testDb)
         .name(dbFolder.newFile().getPath())
         .build();
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/QueryTest.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/QueryTest.java
index dacecb8..22ed162 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/QueryTest.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/QueryTest.java
@@ -15,15 +15,15 @@
  */
 package com.squareup.sqlbrite3;
 
-import android.arch.persistence.db.SupportSQLiteOpenHelper;
-import android.arch.persistence.db.SupportSQLiteOpenHelper.Configuration;
-import android.arch.persistence.db.SupportSQLiteOpenHelper.Factory;
-import android.arch.persistence.db.framework.FrameworkSQLiteOpenHelperFactory;
+import androidx.sqlite.db.SupportSQLiteOpenHelper;
+import androidx.sqlite.db.SupportSQLiteOpenHelper.Configuration;
+import androidx.sqlite.db.SupportSQLiteOpenHelper.Factory;
+import androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory;
 import android.database.Cursor;
 import android.os.Build;
-import android.support.annotation.Nullable;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.filters.SdkSuppress;
+import androidx.annotation.Nullable;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.filters.SdkSuppress;
 import com.squareup.sqlbrite3.SqlBrite.Query;
 import com.squareup.sqlbrite3.TestDb.Employee;
 import io.reactivex.Observable;
@@ -45,7 +45,9 @@
   private BriteDatabase db;
 
   @Before public void setUp() {
-    Configuration configuration = Configuration.builder(InstrumentationRegistry.getContext())
+    Configuration configuration = Configuration.builder(
+            InstrumentationRegistry.getInstrumentation().getTargetContext()
+    )
         .callback(new TestDb())
         .build();
 
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/SqlBriteTest.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/SqlBriteTest.java
index 4c96b14..eb07d6c 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/SqlBriteTest.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/SqlBriteTest.java
@@ -2,8 +2,8 @@
 
 import android.database.Cursor;
 import android.database.MatrixCursor;
-import android.support.annotation.Nullable;
-import android.support.test.runner.AndroidJUnit4;
+import androidx.annotation.Nullable;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import com.squareup.sqlbrite3.SqlBrite.Query;
 import io.reactivex.functions.Function;
 import java.util.List;
diff --git a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/TestDb.java b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/TestDb.java
index df91280..c9d137b 100644
--- a/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/TestDb.java
+++ b/sqlbrite/src/androidTest/java/com/squareup/sqlbrite3/TestDb.java
@@ -15,11 +15,11 @@
  */
 package com.squareup.sqlbrite3;
 
-import android.arch.persistence.db.SupportSQLiteDatabase;
-import android.arch.persistence.db.SupportSQLiteOpenHelper;
+import androidx.sqlite.db.SupportSQLiteDatabase;
+import androidx.sqlite.db.SupportSQLiteOpenHelper;
 import android.content.ContentValues;
 import android.database.Cursor;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 import io.reactivex.functions.Function;
 import java.util.Arrays;
 import java.util.Collection;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteContentResolver.java b/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteContentResolver.java
index 7b2ec06..e7ecd90 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteContentResolver.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteContentResolver.java
@@ -21,9 +21,9 @@
 import android.net.Uri;
 import android.os.Handler;
 import android.os.Looper;
-import android.support.annotation.CheckResult;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.CheckResult;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import com.squareup.sqlbrite3.SqlBrite.Logger;
 import com.squareup.sqlbrite3.SqlBrite.Query;
 import io.reactivex.Observable;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteDatabase.java b/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteDatabase.java
index 21af6d1..510d685 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteDatabase.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite3/BriteDatabase.java
@@ -15,20 +15,20 @@
  */
 package com.squareup.sqlbrite3;
 
-import android.arch.persistence.db.SimpleSQLiteQuery;
-import android.arch.persistence.db.SupportSQLiteDatabase;
-import android.arch.persistence.db.SupportSQLiteOpenHelper;
-import android.arch.persistence.db.SupportSQLiteOpenHelper.Callback;
-import android.arch.persistence.db.SupportSQLiteQuery;
-import android.arch.persistence.db.SupportSQLiteStatement;
+import androidx.sqlite.db.SimpleSQLiteQuery;
+import androidx.sqlite.db.SupportSQLiteDatabase;
+import androidx.sqlite.db.SupportSQLiteOpenHelper;
+import androidx.sqlite.db.SupportSQLiteOpenHelper.Callback;
+import androidx.sqlite.db.SupportSQLiteQuery;
+import androidx.sqlite.db.SupportSQLiteStatement;
 import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteTransactionListener;
-import android.support.annotation.CheckResult;
-import android.support.annotation.IntDef;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.WorkerThread;
+import androidx.annotation.CheckResult;
+import androidx.annotation.IntDef;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.WorkerThread;
 import com.squareup.sqlbrite3.SqlBrite.Logger;
 import com.squareup.sqlbrite3.SqlBrite.Query;
 import io.reactivex.Observable;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryObservable.java b/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryObservable.java
index 68dcc9d..031dff6 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryObservable.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryObservable.java
@@ -2,9 +2,9 @@
 
 import android.database.Cursor;
 import android.os.Build;
-import android.support.annotation.CheckResult;
-import android.support.annotation.NonNull;
-import android.support.annotation.RequiresApi;
+import androidx.annotation.CheckResult;
+import androidx.annotation.NonNull;
+import androidx.annotation.RequiresApi;
 import com.squareup.sqlbrite3.SqlBrite.Query;
 import io.reactivex.Observable;
 import io.reactivex.Observer;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOneOperator.java b/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOneOperator.java
index 3c26713..1f1ba13 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOneOperator.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOneOperator.java
@@ -16,7 +16,7 @@
 package com.squareup.sqlbrite3;
 
 import android.database.Cursor;
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 import io.reactivex.ObservableOperator;
 import io.reactivex.Observer;
 import io.reactivex.exceptions.Exceptions;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOptionalOperator.java b/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOptionalOperator.java
index f5ec414..196f4c6 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOptionalOperator.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite3/QueryToOptionalOperator.java
@@ -17,7 +17,7 @@
 
 import android.database.Cursor;
 import android.os.Build;
-import android.support.annotation.RequiresApi;
+import androidx.annotation.RequiresApi;
 import io.reactivex.ObservableOperator;
 import io.reactivex.Observer;
 import io.reactivex.exceptions.Exceptions;
diff --git a/sqlbrite/src/main/java/com/squareup/sqlbrite3/SqlBrite.java b/sqlbrite/src/main/java/com/squareup/sqlbrite3/SqlBrite.java
index ee4c7bc..3c8f311 100644
--- a/sqlbrite/src/main/java/com/squareup/sqlbrite3/SqlBrite.java
+++ b/sqlbrite/src/main/java/com/squareup/sqlbrite3/SqlBrite.java
@@ -15,15 +15,15 @@
  */
 package com.squareup.sqlbrite3;
 
-import android.arch.persistence.db.SupportSQLiteOpenHelper;
+import androidx.sqlite.db.SupportSQLiteOpenHelper;
 import android.content.ContentResolver;
 import android.database.Cursor;
 import android.os.Build;
-import android.support.annotation.CheckResult;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RequiresApi;
-import android.support.annotation.WorkerThread;
+import androidx.annotation.CheckResult;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RequiresApi;
+import androidx.annotation.WorkerThread;
 import android.util.Log;
 import io.reactivex.Observable;
 import io.reactivex.ObservableEmitter;
