diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelDialogFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelDialogFragment.java
new file mode 100644
index 0000000..f9ddab7
--- /dev/null
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelDialogFragment.java
@@ -0,0 +1,79 @@
+package com.example.sqlbrite.todo.ui;
+
+import android.arch.lifecycle.ViewModel;
+import android.arch.lifecycle.ViewModelProvider;
+import android.arch.lifecycle.ViewModelProviders;
+import android.content.Context;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.view.LayoutInflater;
+
+import com.example.sqlbrite.todo.di.FragmentScopeComponent;
+import com.example.sqlbrite.todo.di.InjectHelper;
+import com.example.sqlbrite.todo.schedulers.SchedulerProvider;
+import com.trello.rxlifecycle2.components.support.RxAppCompatDialogFragment;
+
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.Type;
+
+import javax.inject.Inject;
+
+/**
+ * @author Guang1234567
+ * @date 2018/3/9 10:03
+ */
+
+public abstract class BaseViewModelDialogFragment<VIEWMODEL extends ViewModel> extends RxAppCompatDialogFragment {
+
+    private FragmentScopeComponent mFragmentScopeComponent;
+
+    @Inject
+    SchedulerProvider mSchedulerProvider;
+
+    @Inject
+    ViewModelProvider.Factory mViewModelFactory;
+
+    private VIEWMODEL mViewModel;
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (!(getActivity() instanceof BaseViewModelActivity)) {
+            throw new IllegalStateException("Activity must extends " + BaseViewModelActivity.class);
+        }
+
+        mFragmentScopeComponent = InjectHelper.instance().createFragmentScopeComponent(getActivity(), this);
+        injectOnAttach(mFragmentScopeComponent);
+    }
+
+    protected FragmentScopeComponent getFragmentScopeComponent() {
+        return mFragmentScopeComponent;
+    }
+
+    protected abstract void injectOnAttach(FragmentScopeComponent component);
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public LayoutInflater onGetLayoutInflater(@Nullable Bundle savedInstanceState) {
+
+        Class<VIEWMODEL> viewModelClazz;
+        Type genericSuperclass = this.getClass().getGenericSuperclass();
+        if (genericSuperclass instanceof ParameterizedType) {
+            Type[] actualTypeArguments = ((ParameterizedType) genericSuperclass).getActualTypeArguments();
+            viewModelClazz = (Class<VIEWMODEL>) actualTypeArguments[0];
+        } else {
+            viewModelClazz = (Class<VIEWMODEL>) genericSuperclass;
+        }
+        mViewModel = (VIEWMODEL) ViewModelProviders.of(getActivity(), mViewModelFactory).get(viewModelClazz);
+
+        return super.onGetLayoutInflater(savedInstanceState);
+    }
+
+    protected VIEWMODEL getViewModel() {
+        return mViewModel;
+    }
+
+    public SchedulerProvider getSchedulerProvider() {
+        return mSchedulerProvider;
+    }
+}
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelFragment.java
index bf20809..0e2c1a2 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelFragment.java
@@ -42,14 +42,14 @@ public void onAttach(Context context) {
         }
 
         mFragmentScopeComponent = InjectHelper.instance().createFragmentScopeComponent(getActivity(), this);
-        injectonAttach(mFragmentScopeComponent);
+        injectOnAttach(mFragmentScopeComponent);
     }
 
     protected FragmentScopeComponent getFragmentScopeComponent() {
         return mFragmentScopeComponent;
     }
 
-    protected abstract void injectonAttach(FragmentScopeComponent component);
+    protected abstract void injectOnAttach(FragmentScopeComponent component);
 
     @SuppressWarnings("unchecked")
     @Override
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
index aaaccdf..0209072 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/ItemsFragment.java
@@ -92,7 +92,7 @@ public void onAttach(Context context) {
     }
 
     @Override
-    protected void injectonAttach(FragmentScopeComponent component) {
+    protected void injectOnAttach(FragmentScopeComponent component) {
         component.inject(this);
     }
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
index b7910e1..e23ca20 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/ListsFragment.java
@@ -80,7 +80,7 @@ public void onAttach(Context context) {
     }
 
     @Override
-    protected void injectonAttach(FragmentScopeComponent component) {
+    protected void injectOnAttach(FragmentScopeComponent component) {
         component.inject(this);
     }
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
index 7327b38..31322d3 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewItemFragment.java
@@ -18,8 +18,6 @@
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.Dialog;
-import android.arch.lifecycle.ViewModelProvider;
-import android.arch.lifecycle.ViewModelProviders;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
@@ -30,19 +28,16 @@
 
 import com.example.sqlbrite.todo.R;
 import com.example.sqlbrite.todo.controler.MainViewModel;
+import com.example.sqlbrite.todo.di.FragmentScopeComponent;
 import com.example.sqlbrite.todo.di.InjectHelper;
-import com.example.sqlbrite.todo.schedulers.SchedulerProvider;
 import com.jakewharton.rxbinding2.widget.RxTextView;
-import com.trello.rxlifecycle2.components.support.RxAppCompatDialogFragment;
-
-import javax.inject.Inject;
 
 import io.reactivex.Observable;
 import io.reactivex.functions.BiFunction;
 import io.reactivex.functions.Consumer;
 import io.reactivex.subjects.PublishSubject;
 
-public final class NewItemFragment extends RxAppCompatDialogFragment {
+public final class NewItemFragment extends BaseViewModelDialogFragment<MainViewModel> {
     private static final String KEY_LIST_ID = "list_id";
 
     public static NewItemFragment newInstance(long listId) {
@@ -56,15 +51,6 @@ public static NewItemFragment newInstance(long listId) {
 
     private final PublishSubject<String> createClicked = PublishSubject.create();
 
-    @Inject
-    SchedulerProvider mSchedulerProvider;
-
-    @Inject
-    ViewModelProvider.Factory mViewModelFactory;
-
-    //@Inject
-    MainViewModel mViewModel;
-
     private long getListId() {
         return getArguments().getLong(KEY_LIST_ID);
     }
@@ -75,10 +61,14 @@ public void onAttach(Activity context) {
         InjectHelper.instance().createFragmentScopeComponent(getActivity(), this).inject(this);
     }
 
+    @Override
+    protected void injectOnAttach(FragmentScopeComponent component) {
+        component.inject(this);
+    }
+
     @NonNull
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
-        mViewModel = ViewModelProviders.of(getActivity(), mViewModelFactory).get(MainViewModel.class);
 
         final Context context = getActivity();
         View view = LayoutInflater.from(context).inflate(R.layout.new_item, null);
@@ -95,7 +85,7 @@ public String apply(String ignored, CharSequence text) {
                 .subscribe(new Consumer<String>() {
                     @Override
                     public void accept(String description) {
-                        mViewModel.createNewOneTodoItem(getListId(), description);
+                        getViewModel().createNewOneTodoItem(getListId(), description);
                     }
                 });
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
index 7a18970..c7f9e8a 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/NewListFragment.java
@@ -17,8 +17,6 @@
 
 import android.app.AlertDialog;
 import android.app.Dialog;
-import android.arch.lifecycle.ViewModelProvider;
-import android.arch.lifecycle.ViewModelProviders;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
@@ -29,45 +27,37 @@
 
 import com.example.sqlbrite.todo.R;
 import com.example.sqlbrite.todo.controler.MainViewModel;
+import com.example.sqlbrite.todo.di.FragmentScopeComponent;
 import com.example.sqlbrite.todo.di.InjectHelper;
-import com.example.sqlbrite.todo.schedulers.SchedulerProvider;
 import com.jakewharton.rxbinding2.widget.RxTextView;
-import com.trello.rxlifecycle2.components.support.RxAppCompatDialogFragment;
-
-import javax.inject.Inject;
 
 import io.reactivex.Observable;
 import io.reactivex.functions.BiFunction;
 import io.reactivex.functions.Consumer;
 import io.reactivex.subjects.PublishSubject;
 
-public final class NewListFragment extends RxAppCompatDialogFragment {
+public final class NewListFragment extends BaseViewModelDialogFragment<MainViewModel> {
+
     public static NewListFragment newInstance() {
         return new NewListFragment();
     }
 
     private final PublishSubject<String> createClicked = PublishSubject.create();
 
-
-    @Inject
-    SchedulerProvider mSchedulerProvider;
-
-    @Inject
-    ViewModelProvider.Factory mViewModelFactory;
-
-    //@Inject
-    MainViewModel mViewModel;
-
     @Override
     public void onAttach(Context context) {
         super.onAttach(context);
         InjectHelper.instance().createFragmentScopeComponent(getActivity(), this).inject(this);
     }
 
+    @Override
+    protected void injectOnAttach(FragmentScopeComponent component) {
+        component.inject(this);
+    }
+
     @NonNull
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
-        mViewModel = ViewModelProviders.of(getActivity(), mViewModelFactory).get(MainViewModel.class);
 
         final Context context = getActivity();
         View view = LayoutInflater.from(context).inflate(R.layout.new_list, null);
@@ -84,7 +74,7 @@ public String apply(String ignored, CharSequence text) {
                 .subscribe(new Consumer<String>() {
                     @Override
                     public void accept(String name) {
-                        mViewModel.createNewOneTodoList(name);
+                        getViewModel().createNewOneTodoList(name);
                     }
                 });
 
