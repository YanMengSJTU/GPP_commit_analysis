diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/DbCallback.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/DbCallback.java
index f35f2d5..ce878ed 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/DbCallback.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/DbCallback.java
@@ -48,64 +48,64 @@ public DbCallback() {
     db.execSQL(CREATE_ITEM);
     db.execSQL(CREATE_ITEM_LIST_ID_INDEX);
 
-    long groceryListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.Builder()
+    long groceryListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.ContentValuesBuilder()
         .name("Grocery List")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(groceryListId)
         .description("Beer")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(groceryListId)
         .description("Point Break on DVD")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(groceryListId)
         .description("Bad Boys 2 on DVD")
         .build());
 
-    long holidayPresentsListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.Builder()
+    long holidayPresentsListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.ContentValuesBuilder()
         .name("Holiday Presents")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(holidayPresentsListId)
         .description("Pogo Stick for Jake W.")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(holidayPresentsListId)
         .description("Jack-in-the-box for Alec S.")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(holidayPresentsListId)
         .description("Pogs for Matt P.")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(holidayPresentsListId)
         .description("Cola for Jesse W.")
         .build());
 
-    long workListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.Builder()
+    long workListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.ContentValuesBuilder()
         .name("Work Items")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(workListId)
         .description("Finish SqlBrite library")
         .complete(true)
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(workListId)
         .description("Finish SqlBrite sample app")
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder()
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder()
         .listId(workListId)
         .description("Publish SqlBrite to GitHub")
         .build());
 
-    long birthdayPresentsListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.Builder()
+    long birthdayPresentsListId = db.insert(TodoList.TABLE, CONFLICT_FAIL, new TodoList.ContentValuesBuilder()
         .name("Birthday Presents")
         .archived(true)
         .build());
-    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.Builder().listId(birthdayPresentsListId)
+    db.insert(TodoItem.TABLE, CONFLICT_FAIL, new TodoItem.ContentValuesBuilder().listId(birthdayPresentsListId)
         .description("New car")
         .complete(true)
         .build());
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItem.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItem.java
index 65f439d..10c4400 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItem.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItem.java
@@ -46,25 +46,25 @@
     @ColumnName(COMPLETE)
     public abstract boolean complete();
 
-    public static final class Builder {
+    public static final class ContentValuesBuilder {
         private final ContentValues values = new ContentValues();
 
-        public Builder id(long id) {
+        public ContentValuesBuilder id(long id) {
             values.put(ID, id);
             return this;
         }
 
-        public Builder listId(long listId) {
+        public ContentValuesBuilder listId(long listId) {
             values.put(LIST_ID, listId);
             return this;
         }
 
-        public Builder description(String description) {
+        public ContentValuesBuilder description(String description) {
             values.put(DESCRIPTION, description);
             return this;
         }
 
-        public Builder complete(boolean complete) {
+        public ContentValuesBuilder complete(boolean complete) {
             values.put(COMPLETE, complete ? Db.BOOLEAN_TRUE : Db.BOOLEAN_FALSE);
             return this;
         }
@@ -79,7 +79,7 @@ public ContentValues build() {
         return AutoValue_TodoItem.MAPPER_FUNCTION;
     }
 
-    public static TodoItem toEntity(Cursor cursor) {
+    public static TodoItem createFromCursor(Cursor cursor) {
         return AutoValue_TodoItem.createFromCursor(cursor);
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItemDao.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItemDao.java
index 021a051..3993092 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItemDao.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoItemDao.java
@@ -31,8 +31,8 @@ protected ContentValues toContentValues(TodoItem e) {
     }
 
     @Override
-    protected TodoItem toEntity(Cursor cursor) {
-        return TodoItem.toEntity(cursor);
+    protected TodoItem createFromCursor(Cursor cursor) {
+        return TodoItem.createFromCursor(cursor);
     }
 
     @Override
@@ -53,7 +53,7 @@ protected String toTableName(Class<TodoItem> clazz) {
 
     public boolean complete(long id, boolean complete) {
         return update(getTableName(), CONFLICT_NONE,
-                new TodoItem.Builder().complete(complete).build(), TodoItem.ID + " = ?",
+                new TodoItem.ContentValuesBuilder().complete(complete).build(), TodoItem.ID + " = ?",
                 String.valueOf(id)) > 0;
     }
 
@@ -100,7 +100,7 @@ public Integer apply(SqlBrite.Query query) {
 
     public long createNewOne(long listId, String description) {
         return insert(CONFLICT_NONE,
-                new TodoItem.Builder()
+                new TodoItem.ContentValuesBuilder()
                         .listId(listId)
                         .description(description)
                         .build());
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java
index 52523bc..f41c5dd 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java
@@ -43,20 +43,20 @@
     @ColumnName(ARCHIVED)
     public abstract boolean archived();
 
-    public static final class Builder {
+    public static final class ContentValuesBuilder {
         private final ContentValues values = new ContentValues();
 
-        public Builder id(long id) {
+        public ContentValuesBuilder id(long id) {
             values.put(ID, id);
             return this;
         }
 
-        public Builder name(String name) {
+        public ContentValuesBuilder name(String name) {
             values.put(NAME, name);
             return this;
         }
 
-        public Builder archived(boolean archived) {
+        public ContentValuesBuilder archived(boolean archived) {
             values.put(ARCHIVED, archived);
             return this;
         }
@@ -71,7 +71,7 @@ public ContentValues build() {
         return AutoValue_TodoList.MAPPER_FUNCTION;
     }
 
-    public static TodoList toEntity(Cursor cursor) {
+    public static TodoList createFromCursor(Cursor cursor) {
         return AutoValue_TodoList.createFromCursor(cursor);
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoListDao.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoListDao.java
index 26bc5db..9edf010 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoListDao.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoListDao.java
@@ -29,8 +29,8 @@ protected ContentValues toContentValues(TodoList e) {
     }
 
     @Override
-    protected TodoList toEntity(Cursor cursor) {
-        return TodoList.toEntity(cursor);
+    protected TodoList createFromCursor(Cursor cursor) {
+        return TodoList.createFromCursor(cursor);
     }
 
     @Override
@@ -70,6 +70,6 @@ public String apply(SqlBrite.Query query) {
     }
 
     public long createNewOne(String name) {
-        return insert(CONFLICT_NONE, new TodoList.Builder().name(name).build());
+        return insert(CONFLICT_NONE, new TodoList.ContentValuesBuilder().name(name).build());
     }
 }
diff --git a/sqlbrite-support/src/main/java/com/squareup/sqlbrite3/support/dao/BriteDaoSupport.java b/sqlbrite-support/src/main/java/com/squareup/sqlbrite3/support/dao/BriteDaoSupport.java
index b3d5e6b..81a1769 100644
--- a/sqlbrite-support/src/main/java/com/squareup/sqlbrite3/support/dao/BriteDaoSupport.java
+++ b/sqlbrite-support/src/main/java/com/squareup/sqlbrite3/support/dao/BriteDaoSupport.java
@@ -29,7 +29,7 @@
 
     private final String mTableName;
 
-    private final String SQL_QUERY;
+    private final String SQL_QUERY_BY_ID;
 
     public BriteDaoSupport(BriteDatabase database) {
         mDatabase = database;
@@ -39,7 +39,12 @@ public BriteDaoSupport(BriteDatabase database) {
 
         mTableName = toTableName(mEntityClazz);
 
-        SQL_QUERY = new StringBuilder("SELECT * FROM ").append(mTableName).toString();
+        SQL_QUERY_BY_ID = new StringBuilder("SELECT * FROM ")
+                .append(mTableName)
+                .append(" WHERE ")
+                .append(BaseColumns._ID)
+                .append("=?")
+                .toString();
     }
 
     final public long insert(ENTITY t) {
@@ -80,12 +85,12 @@ protected int update(@NonNull final String table, int conflictAlgorithm,
 
     @CheckResult
     @Nullable
-    final public ENTITY queryById(long rowId) {
+    final public ENTITY queryById(final long rowId) {
         ENTITY e = null;
-        Cursor cursor = mDatabase.query(SQL_QUERY);
+        Cursor cursor = mDatabase.query(SQL_QUERY_BY_ID, new String[]{String.valueOf(rowId)});
         if (cursor != null && !cursor.isClosed()) {
             if (cursor.moveToFirst()) {
-                e = toEntity(cursor);
+                e = createFromCursor(cursor);
             }
             cursor.close();
         }
@@ -99,7 +104,7 @@ final public ENTITY queryById(long rowId) {
         if (c != null && !c.isClosed()) {
             if (c.getCount() > 0) {
                 while (c.moveToNext()) {
-                    result.add(toEntity(c));
+                    result.add(createFromCursor(c));
                 }
             }
             c.close();
@@ -131,7 +136,7 @@ final protected String getTableName() {
 
     protected abstract ContentValues toContentValues(ENTITY e);
 
-    protected abstract ENTITY toEntity(Cursor cursor);
+    protected abstract ENTITY createFromCursor(Cursor cursor);
 
     protected abstract long toRowId(ENTITY e);
 
diff --git a/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteCursorCompatWcdb.java b/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteCursorCompatWcdb.java
index babadef..f97055c 100644
Binary files a/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteCursorCompatWcdb.java and b/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteCursorCompatWcdb.java differ
diff --git a/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteQueryCompatWcdb.java b/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteQueryCompatWcdb.java
index 047c581..6252b38 100644
Binary files a/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteQueryCompatWcdb.java and b/sqlbrite-wcdb-integration/src/main/java/android/arch/persistence/db/wcdb/SQLiteQueryCompatWcdb.java differ
