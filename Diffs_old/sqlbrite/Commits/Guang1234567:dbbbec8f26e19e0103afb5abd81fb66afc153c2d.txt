diff --git a/build.gradle b/build.gradle
index 2e70b7b..7e9a216 100644
--- a/build.gradle
+++ b/build.gradle
@@ -40,8 +40,11 @@ ext {
     androidSupportVersion = '27.0.0'
     supportV4 = "com.android.support:support-v4:$androidSupportVersion"
     supportAnnotations = "com.android.support:support-annotations:$androidSupportVersion"
+    supportMultidex = 'com.android.support:multidex:1.0.3'
     supportTestRunner = 'com.android.support.test:runner:0.5'
 
+    rxbase = 'com.gg.rxbase:rxbase:1.1.1'
+
     // https://developer.android.com/topic/libraries/architecture/adding-components.html
     androidArchViewModel = 'android.arch.lifecycle:viewmodel:1.1.0'
     androidArchExtensions = 'android.arch.lifecycle:extensions:1.1.0'
@@ -64,11 +67,15 @@ ext {
     butterKnifeRuntime = 'com.jakewharton:butterknife:8.8.1'
     butterKnifeCompiler = 'com.jakewharton:butterknife-compiler:8.8.1'
     timber = 'com.jakewharton.timber:timber:4.6.0'
+
     autoValue = 'com.google.auto.value:auto-value:1.5.4'
     autoValueGson = 'com.ryanharter.auto.value:auto-value-gson:0.7.0'
     autoValueGsonAnnotations = 'com.ryanharter.auto.value:auto-value-gson-annotations:0.7.0'
     autoValueParcel = 'com.ryanharter.auto.value:auto-value-parcel:0.2.6'
     autoValueParcelAdapter = 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.6'
+    autoValueCursor = 'com.gabrielittner.auto.value:auto-value-cursor:1.1.0'
+    autoValueCursorAnnotations = 'com.gabrielittner.auto.value:auto-value-cursor-annotations:1.1.0'
+
     rxJava = 'io.reactivex.rxjava2:rxjava:2.1.3'
     rxAndroid = 'io.reactivex.rxjava2:rxandroid:2.0.1'
     rxBinding = 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
diff --git a/sample/build.gradle b/sample/build.gradle
index 1247c68..9a97ba8 100644
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -3,6 +3,7 @@ apply plugin: 'com.android.application'
 dependencies {
     implementation rootProject.ext.supportV4
     implementation rootProject.ext.supportAnnotations
+    implementation rootProject.ext.supportMultidex
 
     implementation rootProject.ext.dagger
     implementation 'com.android.support.constraint:constraint-layout:1.0.2'
@@ -19,8 +20,10 @@ dependencies {
     annotationProcessor rootProject.ext.autoValue
     compileOnly rootProject.ext.autoValueGsonAnnotations
     annotationProcessor rootProject.ext.autoValueGson
-    compileOnly rootProject.ext.autoValueParcelAdapter
+    implementation rootProject.ext.autoValueParcelAdapter
     annotationProcessor rootProject.ext.autoValueParcel
+    compileOnly rootProject.ext.autoValueCursorAnnotations
+    annotationProcessor rootProject.ext.autoValueCursor
 
     implementation project(':sqlbrite')
     implementation project(':sqlbrite-support')
@@ -42,9 +45,7 @@ dependencies {
     implementation rootProject.ext.retrofit_rxAdapter
     implementation rootProject.ext.okhttp_logging_interceptor
 
-    implementation 'com.android.support:multidex:1.0.3'
-
-    compile 'com.gg.rxbase:rxbase:1.1.1'
+    implementation rootProject.ext.rxbase
 }
 
 android {
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScope.java b/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScope.java
index 08a7e1d..911a3be 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScope.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScope.java
@@ -6,7 +6,7 @@
 import javax.inject.Scope;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 13:09
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeComponent.java b/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeComponent.java
index 8d87988..59476d5 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeComponent.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeComponent.java
@@ -11,7 +11,7 @@
 import dagger.Component;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 13:10
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeModule.java b/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeModule.java
index ceafd4d..be784bc 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeModule.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/ActivityScopeModule.java
@@ -9,7 +9,7 @@
 import dagger.Provides;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 13:11
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScope.java b/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScope.java
index 950ae83..fd31a1b 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScope.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScope.java
@@ -6,7 +6,7 @@
 import javax.inject.Scope;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 12:38
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScopeModule.java b/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScopeModule.java
index 08803d0..5010903 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScopeModule.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/FragmentScopeModule.java
@@ -6,7 +6,7 @@
 import dagger.Provides;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 13:11
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/InjectHelper.java b/sample/src/main/java/com/example/sqlbrite/todo/di/InjectHelper.java
index fea56f5..ecc9bdb 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/InjectHelper.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/InjectHelper.java
@@ -15,7 +15,7 @@
 import com.example.sqlbrite.todo.ui.BaseViewModelActivity;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 17:34
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/UserScope.java b/sample/src/main/java/com/example/sqlbrite/todo/di/UserScope.java
index cd7ee5d..675fa29 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/UserScope.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/UserScope.java
@@ -6,7 +6,7 @@
 import javax.inject.Scope;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 12:38
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/model/remote/MyGsonTypeAdapterFactory.java b/sample/src/main/java/com/example/sqlbrite/todo/di/model/remote/MyGsonTypeAdapterFactory.java
index cc13d67..09c5538 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/model/remote/MyGsonTypeAdapterFactory.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/model/remote/MyGsonTypeAdapterFactory.java
@@ -4,7 +4,7 @@
 import com.ryanharter.auto.value.gson.GsonTypeAdapterFactory;
 
 /**
- * @author lihanguang
+ * @author Guang1234567
  * @date 2017/5/4 19:22:20
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/autovalue/DateCursorTypeAdapter.java b/sample/src/main/java/com/example/sqlbrite/todo/model/autovalue/DateCursorTypeAdapter.java
new file mode 100644
index 0000000..e220510
--- /dev/null
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/autovalue/DateCursorTypeAdapter.java
@@ -0,0 +1,26 @@
+package com.example.sqlbrite.todo.model.autovalue;
+
+import android.content.ContentValues;
+import android.database.Cursor;
+
+import com.gabrielittner.auto.value.cursor.ColumnTypeAdapter;
+import com.squareup.sqlbrite3.support.DbUtils;
+
+import java.util.Date;
+
+/**
+ * @author lihanguang
+ * @date 2017/5/5 00:45
+ */
+
+public class DateCursorTypeAdapter implements ColumnTypeAdapter<Date> {
+    public Date fromCursor(Cursor cursor, String columnName) {
+        long d = DbUtils.getLong(cursor, columnName);
+        return new Date(d);
+    }
+
+    public void toContentValues(ContentValues values, String columnName, Date value) {
+        // leave this empty when you don't use a "toContentValues()" method
+        values.put(columnName, value.getTime());
+    }
+}
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/autovalue/DateParcelTypeAdapter.java b/sample/src/main/java/com/example/sqlbrite/todo/model/autovalue/DateParcelTypeAdapter.java
new file mode 100644
index 0000000..0e66c3a
--- /dev/null
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/autovalue/DateParcelTypeAdapter.java
@@ -0,0 +1,22 @@
+package com.example.sqlbrite.todo.model.autovalue;
+
+import android.os.Parcel;
+
+import com.ryanharter.auto.value.parcel.TypeAdapter;
+
+import java.util.Date;
+
+/**
+ * @author lihanguang
+ * @date 2017/5/5 00:45
+ */
+
+public class DateParcelTypeAdapter implements TypeAdapter<Date> {
+    public Date fromParcel(Parcel in) {
+        return new Date(in.readLong());
+    }
+
+    public void toParcel(Date value, Parcel dest) {
+        dest.writeLong(value.getTime());
+    }
+}
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/BaseEntity.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/BaseEntity.java
new file mode 100644
index 0000000..31e2a69
--- /dev/null
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/BaseEntity.java
@@ -0,0 +1,19 @@
+package com.example.sqlbrite.todo.model.local.db;
+
+import android.content.ContentValues;
+import android.database.Cursor;
+
+import io.reactivex.functions.Function;
+
+/**
+ * 所有数据实体的基类
+ *
+ * @author lihanguang
+ * @date 2016/2/23 17:47
+ */
+abstract class BaseEntity {
+    // Optional: When you include an abstract method that returns ContentValues and doesn't have
+    // any parameters the extension will implement it for you
+    abstract ContentValues toContentValues();
+
+}
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java
index 9fdb202..17cee8a 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/db/TodoList.java
@@ -19,6 +19,7 @@
 import android.database.Cursor;
 import android.os.Parcelable;
 
+import com.gabrielittner.auto.value.cursor.ColumnName;
 import com.google.auto.value.AutoValue;
 import com.squareup.sqlbrite3.support.DbUtils;
 
@@ -26,17 +27,20 @@
 
 // Note: normally I wouldn't prefix table classes but I didn't want 'List' to be overloaded.
 @AutoValue
-public abstract class TodoList implements Parcelable {
+public abstract class TodoList extends BaseEntity implements Parcelable {
     public static final String TABLE = "todo_list";
 
     public static final String ID = "_id";
     public static final String NAME = "name";
     public static final String ARCHIVED = "archived";
 
+    @ColumnName(ID)
     public abstract long id();
 
+    @ColumnName(NAME)
     public abstract String name();
 
+    @ColumnName(ARCHIVED)
     public abstract boolean archived();
 
     public static final class Builder {
@@ -69,18 +73,12 @@ public TodoList apply(Cursor cursor) {
         }
     };
 
-    static TodoList toEntity(Cursor cursor) {
-        long id = DbUtils.getLong(cursor, TodoList.ID);
-        String name = DbUtils.getString(cursor, TodoList.NAME);
-        boolean archived = DbUtils.getBoolean(cursor, TodoList.ARCHIVED);
-        return new AutoValue_TodoList(id, name, archived);
+    // Optional: if your project includes RxJava 2 the extension will generate a Function<Cursor, User>
+    public static Function<Cursor, TodoList> toEntity() {
+        return AutoValue_TodoList.MAPPER_FUNCTION;
     }
 
-    ContentValues toContentValues() {
-        return new TodoList.Builder()
-                .id(id())
-                .name(name())
-                .archived(archived())
-                .build();
+    public static TodoList toEntity(Cursor cursor) {
+        return AutoValue_TodoList.createFromCursor(cursor);
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/users/User.java b/sample/src/main/java/com/example/sqlbrite/todo/model/users/User.java
index 5255c31..5641a85 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/users/User.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/users/User.java
@@ -1,12 +1,18 @@
 package com.example.sqlbrite.todo.model.users;
 
+import android.os.Parcelable;
+
+import com.example.sqlbrite.todo.model.autovalue.DateParcelTypeAdapter;
 import com.google.auto.value.AutoValue;
 import com.google.gson.Gson;
 import com.google.gson.TypeAdapter;
 import com.google.gson.annotations.SerializedName;
+import com.ryanharter.auto.value.parcel.ParcelAdapter;
+
+import java.util.Date;
 
 @AutoValue
-public abstract class User {
+public abstract class User implements Parcelable {
 
     @SerializedName("id")
     public abstract String id();
@@ -14,8 +20,27 @@
     @SerializedName("name")
     public abstract String name();
 
-    public static User create(String id, String name) {
-        return new AutoValue_User(id, name);
+    @SerializedName("timestamp")
+    @ParcelAdapter(DateParcelTypeAdapter.class)
+    public abstract Date timestamp();
+
+    public static Builder builder() {
+        return new AutoValue_User.Builder();
+    }
+
+    @AutoValue.Builder
+    public abstract static class Builder {
+        public abstract Builder id(String id);
+
+        public abstract Builder name(String name);
+
+        public abstract Builder timestamp(Date timestamp);
+
+        public abstract User build();
+    }
+
+    public static User create(String id, String name, Date timestamp) {
+        return new AutoValue_User(id, name, timestamp);
     }
 
     // The public static method returning a TypeAdapter<Foo> is what
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserManager.java b/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserManager.java
index 7d39f08..a6fbbcd 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserManager.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserManager.java
@@ -7,6 +7,8 @@
 import com.example.sqlbrite.todo.di.model.remote.TodoApiModule.GitHubApiInterface;
 import com.example.sqlbrite.todo.schedulers.SchedulerProvider;
 
+import java.util.Date;
+
 import javax.inject.Inject;
 
 import io.reactivex.Completable;
@@ -16,7 +18,7 @@
 import io.reactivex.functions.Function;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 12:31
  */
 
@@ -46,7 +48,13 @@ public UserManagerImpl(Application application, GitHubApiInterface gitHubApiInte
         public Single<UserSession> startSessionForUser(String userId) {
             return mGitHubApiInterface.login(userId)
                     .subscribeOn(mSchedulerProvider.net())
-                    .onErrorReturnItem(User.create(userId, "伪造的人"))
+                    .onErrorReturnItem(
+                            User.builder()
+                                    .id(userId)
+                                    .name("伪造的人")
+                                    .timestamp(new Date())
+                                    .build()
+                    )
                     .observeOn(mSchedulerProvider.ui())
                     .flatMap(new Function<User, Single<UserSession>>() {
                         @Override
@@ -84,7 +92,7 @@ private void onStartUserSession(UserSession userSession) {
             mUserScopeComponent = InjectHelper.instance().createUserScopeComponent(userSession.user().id());
         }
 
-        public void  oncloseUserSession(UserSession userSession) {
+        public void oncloseUserSession(UserSession userSession) {
             mUserScopeComponent = null;
         }
     }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserSession.java b/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserSession.java
index 1b305af..b1bb262 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserSession.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/users/UserSession.java
@@ -7,7 +7,7 @@
 import io.reactivex.Single;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/14 18:42
  */
 
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelActivity.java b/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelActivity.java
index e7f7963..6b9cefd 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelActivity.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/ui/BaseViewModelActivity.java
@@ -15,7 +15,7 @@
 import javax.inject.Inject;
 
 /**
- * @author Administrator
+ * @author Guang1234567
  * @date 2018/3/10 11:21
  */
 
