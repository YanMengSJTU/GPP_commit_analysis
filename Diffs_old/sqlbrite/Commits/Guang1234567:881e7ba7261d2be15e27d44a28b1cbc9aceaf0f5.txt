diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java b/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java
index d4d6d79..623c755 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/AppScopeComponent.java
@@ -26,6 +26,7 @@
 import com.example.sqlbrite.todo.model.users.UserManager;
 import com.example.sqlbrite.todo.schedulers.SchedulerProvider;
 import com.example.sqlbrite.todo.ui.SplashActivity;
+import com.google.gson.Gson;
 
 import javax.inject.Named;
 import javax.inject.Singleton;
@@ -42,6 +43,8 @@
 
     SchedulerProvider schedulerProvider();
 
+    Gson gson();
+
     /*Retrofit retrofit();
 
     @Named("cached")
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/AppScopePreferencesModule.java b/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/AppScopePreferencesModule.java
index a037e30..e02cb20 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/AppScopePreferencesModule.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/AppScopePreferencesModule.java
@@ -21,6 +21,7 @@
 
 import com.example.sqlbrite.todo.model.local.preferences.AppPrefs;
 import com.f2prateek.rx.preferences2.RxSharedPreferences;
+import com.google.gson.Gson;
 
 import javax.inject.Named;
 import javax.inject.Singleton;
@@ -47,7 +48,7 @@ public RxSharedPreferences provideRxSharedPreferences(@Named("app_scope") Shared
 
     @Provides
     @Singleton
-    public AppPrefs provideAppPrefs(@Named("app_scope") RxSharedPreferences sharedPreferences) {
-        return new AppPrefs(sharedPreferences);
+    public AppPrefs provideAppPrefs(@Named("app_scope") RxSharedPreferences sharedPreferences, Gson gson) {
+        return new AppPrefs(sharedPreferences, gson);
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/UserScopePreferencesModule.java b/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/UserScopePreferencesModule.java
index c13e083..f40eff9 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/UserScopePreferencesModule.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/di/model/local/preferences/UserScopePreferencesModule.java
@@ -22,6 +22,7 @@
 import com.example.sqlbrite.todo.di.UserScope;
 import com.example.sqlbrite.todo.model.local.preferences.UserPrefs;
 import com.f2prateek.rx.preferences2.RxSharedPreferences;
+import com.google.gson.Gson;
 
 import javax.inject.Named;
 
@@ -52,7 +53,7 @@ public RxSharedPreferences provideRxSharedPreferences(@Named("user_scope") Share
 
     @Provides
     @UserScope
-    public UserPrefs provideUserPrefs(@Named("user_scope") RxSharedPreferences sharedPreferences) {
-        return new UserPrefs(sharedPreferences);
+    public UserPrefs provideUserPrefs(@Named("user_scope") RxSharedPreferences sharedPreferences, Gson gson) {
+        return new UserPrefs(sharedPreferences, gson);
     }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/AppPrefs.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/AppPrefs.java
index 5d8f8d2..728a924 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/AppPrefs.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/AppPrefs.java
@@ -1,7 +1,10 @@
 package com.example.sqlbrite.todo.model.local.preferences;
 
+import android.graphics.Point;
+
 import com.f2prateek.rx.preferences2.Preference;
 import com.f2prateek.rx.preferences2.RxSharedPreferences;
+import com.google.gson.Gson;
 
 /**
  * @author Guang1234567
@@ -12,11 +15,18 @@
 
     private final RxSharedPreferences mPreferences;
 
-    public AppPrefs(RxSharedPreferences preferences) {
+    private final Gson mGson;
+
+    public AppPrefs(RxSharedPreferences preferences, Gson gson) {
         mPreferences = preferences;
+        mGson = gson;
     }
 
     public Preference<String> lastLoginUserId() {
         return mPreferences.getString("last_login_userid");
     }
+
+    public Preference<Point> lastPoint() {
+        return mPreferences.getObject("last_point", new Point(0, 0), new PreferenceJsonConverter<Point>(mGson, Point.class));
+    }
 }
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/PointPreferenceConverter.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/PointPreferenceConverter.java
new file mode 100644
index 0000000..e4ab3e7
--- /dev/null
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/PointPreferenceConverter.java
@@ -0,0 +1,24 @@
+package com.example.sqlbrite.todo.model.local.preferences;
+
+import android.graphics.Point;
+import android.support.annotation.NonNull;
+
+import com.f2prateek.rx.preferences2.Preference;
+
+final class PointPreferenceConverter implements Preference.Converter<Point> {
+  @NonNull
+  @Override
+  public Point deserialize(@NonNull String serialized) {
+    String[] parts = serialized.split(",");
+    if (parts.length != 2) {
+      throw new IllegalStateException("Malformed point value: '" + serialized + "'");
+    }
+    return new Point(Integer.parseInt(parts[0]), Integer.parseInt(parts[1]));
+  }
+
+  @NonNull
+  @Override
+  public String serialize(@NonNull Point value) {
+    return value.x + "," + value.y;
+  }
+}
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/PreferenceJsonConverter.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/PreferenceJsonConverter.java
new file mode 100644
index 0000000..294805f
--- /dev/null
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/PreferenceJsonConverter.java
@@ -0,0 +1,33 @@
+package com.example.sqlbrite.todo.model.local.preferences;
+
+import android.support.annotation.NonNull;
+import android.util.Base64;
+
+import com.f2prateek.rx.preferences2.Preference;
+import com.google.gson.Gson;
+
+import java.lang.reflect.Type;
+
+public final class PreferenceJsonConverter<T> implements Preference.Converter<T> {
+
+    private final Gson mGson;
+
+    private final Type mTypeOfT;
+
+    public PreferenceJsonConverter(Gson gson, Type typeOfT) {
+        mGson = gson;
+        mTypeOfT = typeOfT;
+    }
+
+    @NonNull
+    @Override
+    public T deserialize(@NonNull String serialized) {
+        return mGson.fromJson(new String(Base64.decode(serialized, Base64.DEFAULT)), mTypeOfT);
+    }
+
+    @NonNull
+    @Override
+    public String serialize(@NonNull T value) {
+        return Base64.encodeToString(mGson.toJson(value).getBytes(), Base64.DEFAULT);
+    }
+}
diff --git a/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/UserPrefs.java b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/UserPrefs.java
index 05e4a4d..4a9c8de 100644
--- a/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/UserPrefs.java
+++ b/sample/src/main/java/com/example/sqlbrite/todo/model/local/preferences/UserPrefs.java
@@ -2,6 +2,7 @@
 
 import com.f2prateek.rx.preferences2.Preference;
 import com.f2prateek.rx.preferences2.RxSharedPreferences;
+import com.google.gson.Gson;
 
 /**
  * @author Guang1234567
@@ -12,7 +13,10 @@
 
     private final RxSharedPreferences mPreferences;
 
-    public UserPrefs(RxSharedPreferences preferences) {
+    private final Gson mGson;
+
+    public UserPrefs(RxSharedPreferences preferences, Gson gson) {
         mPreferences = preferences;
+        mGson = gson;
     }
 }
