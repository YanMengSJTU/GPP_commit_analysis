diff --git a/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java b/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java
index b16e4213..a2cb8b3d 100644
--- a/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java
+++ b/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java
@@ -132,7 +132,7 @@ public void setRequestHeaders(Header[] requestHeaders) {
         @Override
         public void handleMessage(Message msg) {
             AsyncHttpResponseHandler service = mResponder.get();
-            if (service != null) {
+            if (null != service) {
                 service.handleMessage(msg);
             }
         }
@@ -166,10 +166,8 @@ public String getCharset() {
      * Creates a new AsyncHttpResponseHandler
      */
     public AsyncHttpResponseHandler() {
-        // Set up a handler to post events back to the correct thread if possible
-        if (Looper.myLooper() != null) {
-            handler = new ResponderHandler(this);
-        }
+        // Init Looper by calling postRunnable without argument
+        postRunnable(null);
     }
 
     /**
@@ -310,9 +308,19 @@ protected void sendMessage(Message msg) {
      * @param runnable runnable instance, can be null
      */
     protected void postRunnable(Runnable runnable) {
-        if (runnable != null) {
+        boolean missingLooper = null == Looper.myLooper();
+        if (missingLooper) {
+            Looper.prepare();
+        }
+        if (null == handler) {
+            handler = new ResponderHandler(this);
+        }
+        if (null != runnable) {
             handler.post(runnable);
         }
+        if (missingLooper) {
+            Looper.loop();
+        }
     }
 
     /**
@@ -370,9 +378,9 @@ public void sendResponseMessage(HttpResponse response) throws IOException {
                 if (contentLength > Integer.MAX_VALUE) {
                     throw new IllegalArgumentException("HTTP entity too large to be buffered in memory");
                 }
-                int buffersize =  (contentLength < 0) ? BUFFER_SIZE : (int) contentLength;
+                int buffersize = (contentLength < 0) ? BUFFER_SIZE : (int) contentLength;
                 try {
-                    ByteArrayBuffer buffer = new ByteArrayBuffer((int) buffersize);
+                    ByteArrayBuffer buffer = new ByteArrayBuffer(buffersize);
                     try {
                         byte[] tmp = new byte[BUFFER_SIZE];
                         int l, count = 0;
diff --git a/library/src/main/java/com/loopj/android/http/RequestParams.java b/library/src/main/java/com/loopj/android/http/RequestParams.java
index 825132fd..ded71e33 100644
--- a/library/src/main/java/com/loopj/android/http/RequestParams.java
+++ b/library/src/main/java/com/loopj/android/http/RequestParams.java
@@ -70,7 +70,8 @@
  * String[] colors = { "blue", "yellow" }; // Ordered collection
  * params.put("colors", colors); // url params: "colors[]=blue&amp;colors[]=yellow"
  *
- * List&lt;Map&lt;String, String&gt;&gt; listOfMaps = new ArrayList&lt;Map&lt;String, String&gt;&gt;();
+ * List&lt;Map&lt;String, String&gt;&gt; listOfMaps = new ArrayList&lt;Map&lt;String,
+ * String&gt;&gt;();
  * Map&lt;String, String&gt; user1 = new HashMap&lt;String, String&gt;();
  * user1.put("age", "30");
  * user1.put("gender", "male");
@@ -181,7 +182,10 @@ public void put(String key, File file) throws FileNotFoundException {
      * @throws java.io.FileNotFoundException throws if wrong File argument was passed
      */
     public void put(String key, File file, String contentType) throws FileNotFoundException {
-        if (key != null && file != null) {
+        if (file == null || !file.exists()) {
+            throw new FileNotFoundException();
+        }
+        if (key != null) {
             fileParams.put(key, new FileWrapper(file, contentType));
         }
     }
@@ -353,9 +357,9 @@ private HttpEntity createJsonStreamerEntity() throws IOException {
         for (ConcurrentHashMap.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
             FileWrapper fileWrapper = entry.getValue();
             entity.addPart(entry.getKey(),
-                           new FileInputStream(fileWrapper.file),
-                           fileWrapper.file.getName(),
-                           fileWrapper.contentType);
+                    new FileInputStream(fileWrapper.file),
+                    fileWrapper.file.getName(),
+                    fileWrapper.contentType);
         }
 
         // Add stream params
@@ -363,9 +367,9 @@ private HttpEntity createJsonStreamerEntity() throws IOException {
             StreamWrapper stream = entry.getValue();
             if (stream.inputStream != null) {
                 entity.addPart(entry.getKey(),
-                               stream.inputStream,
-                               stream.name,
-                               stream.contentType);
+                        stream.inputStream,
+                        stream.name,
+                        stream.contentType);
             }
         }
 
diff --git a/sample/src/main/AndroidManifest.xml b/sample/src/main/AndroidManifest.xml
index 23b6ee77..cde76377 100644
--- a/sample/src/main/AndroidManifest.xml
+++ b/sample/src/main/AndroidManifest.xml
@@ -7,8 +7,7 @@
     <uses-permission android:name="android.permission.INTERNET"/>
 
     <uses-sdk
-        android:minSdkVersion="3"
-        android:targetSdkVersion="18" />
+        android:minSdkVersion="3" />
 
     <application
         android:icon="@drawable/ic_launcher"
diff --git a/sample/src/main/res/layout/parent_layout.xml b/sample/src/main/res/layout/parent_layout.xml
index a7ad216e..f6872a06 100644
--- a/sample/src/main/res/layout/parent_layout.xml
+++ b/sample/src/main/res/layout/parent_layout.xml
@@ -30,7 +30,7 @@
                 android:id="@+id/button_run"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:text="Run" />
+                android:text="@string/button_run" />
         </LinearLayout>
 
         <LinearLayout
@@ -42,7 +42,7 @@
             <TextView
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
-                android:text="Headers (key=val, one per line)" />
+                android:text="@string/label_headers" />
 
             <EditText
                 android:id="@+id/edit_headers"
@@ -63,7 +63,7 @@
             <TextView
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
-                android:text="Request body" />
+                android:text="@string/label_req_body" />
 
             <EditText
                 android:id="@+id/edit_body"
diff --git a/sample/src/main/res/values/strings.xml b/sample/src/main/res/values/strings.xml
index b8d68899..3eb4b4d5 100644
--- a/sample/src/main/res/values/strings.xml
+++ b/sample/src/main/res/values/strings.xml
@@ -9,4 +9,7 @@
     <string name="title_delete_sample">DELETE</string>
     <string name="title_file_sample">GET to File</string>
     <string name="title_binary_sample">GET binary data</string>
+    <string name="button_run">Run</string>
+    <string name="label_headers">Headers (key=val, one per line)</string>
+    <string name="label_req_body">Request body</string>
 </resources>
