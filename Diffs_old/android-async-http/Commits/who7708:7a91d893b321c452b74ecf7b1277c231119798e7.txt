diff --git a/sample/src/main/java/com/loopj/android/http/sample/PatchSample.java b/sample/src/main/java/com/loopj/android/http/sample/PatchSample.java
index 10926a55..71baae4e 100644
--- a/sample/src/main/java/com/loopj/android/http/sample/PatchSample.java
+++ b/sample/src/main/java/com/loopj/android/http/sample/PatchSample.java
@@ -64,5 +64,4 @@ public void onFailure(int statusCode, Header[] headers, byte[] errorResponse, Th
         };
     }
 
-
 }
diff --git a/sample/src/main/java/com/loopj/android/http/sample/Redirect302Sample.java b/sample/src/main/java/com/loopj/android/http/sample/Redirect302Sample.java
index faf92cbf..345d540e 100644
--- a/sample/src/main/java/com/loopj/android/http/sample/Redirect302Sample.java
+++ b/sample/src/main/java/com/loopj/android/http/sample/Redirect302Sample.java
@@ -47,14 +47,17 @@ public boolean onCreateOptionsMenu(Menu menu) {
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
         MenuItem menuItemEnableRedirects = menu.findItem(MENU_ENABLE_REDIRECTS);
-        if (menuItemEnableRedirects != null)
+        if (menuItemEnableRedirects != null) {
             menuItemEnableRedirects.setChecked(enableRedirects);
+        }
         MenuItem menuItemEnableRelativeRedirects = menu.findItem(MENU_ENABLE_RELATIVE_REDIRECTs);
-        if (menuItemEnableRelativeRedirects != null)
+        if (menuItemEnableRelativeRedirects != null) {
             menuItemEnableRelativeRedirects.setChecked(enableRelativeRedirects);
+        }
         MenuItem menuItemEnableCircularRedirects = menu.findItem(MENU_ENABLE_CIRCULAR_REDIRECTS);
-        if (menuItemEnableCircularRedirects != null)
+        if (menuItemEnableCircularRedirects != null) {
             menuItemEnableCircularRedirects.setChecked(enableCircularRedirects);
+        }
         return super.onPrepareOptionsMenu(menu);
     }
 
diff --git a/sample/src/main/java/com/loopj/android/http/sample/RequestParamsDebug.java b/sample/src/main/java/com/loopj/android/http/sample/RequestParamsDebug.java
index a753be40..9868c33a 100644
--- a/sample/src/main/java/com/loopj/android/http/sample/RequestParamsDebug.java
+++ b/sample/src/main/java/com/loopj/android/http/sample/RequestParamsDebug.java
@@ -101,8 +101,9 @@ private RequestParams getRequestParams() {
         Map<String, Set<String>> mapOfSets = new HashMap<>();
         for (String pair : pairs) {
             String[] kv = pair.split("=");
-            if (kv.length != 2)
+            if (kv.length != 2) {
                 continue;
+            }
             String key = kv[0].trim();
             String value = kv[1].trim();
             if ("array".equals(key)) {
diff --git a/sample/src/main/java/com/loopj/android/http/sample/SampleParentActivity.java b/sample/src/main/java/com/loopj/android/http/sample/SampleParentActivity.java
index ddb3e43a..7dc35129 100755
--- a/sample/src/main/java/com/loopj/android/http/sample/SampleParentActivity.java
+++ b/sample/src/main/java/com/loopj/android/http/sample/SampleParentActivity.java
@@ -102,8 +102,9 @@ public void onClick(View v) {
     private boolean enableLogging = true;
 
     protected static String throwableToString(Throwable t) {
-        if (t == null)
+        if (t == null) {
             return null;
+        }
 
         StringWriter sw = new StringWriter();
         t.printStackTrace(new PrintWriter(sw));
@@ -395,8 +396,9 @@ public void setAsyncHttpClient(AsyncHttpClient client) {
     @TargetApi(Build.VERSION_CODES.HONEYCOMB)
     private void setHomeAsUpEnabled() {
         if (Integer.valueOf(Build.VERSION.SDK) >= 11) {
-            if (getActionBar() != null)
+            if (getActionBar() != null) {
                 getActionBar().setDisplayHomeAsUpEnabled(true);
+            }
         }
     }
 }
diff --git a/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java b/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java
index c963a055..aac4e7e0 100755
--- a/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java
+++ b/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java
@@ -81,8 +81,9 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     protected void onListItemClick(ListView l, View v, int position, long id) {
-        if (position >= 0 && position < samplesConfig.length)
+        if (position >= 0 && position < samplesConfig.length) {
             startActivity(new Intent(this, samplesConfig[position].targetClass));
+        }
     }
 
     private static class SampleConfig {
diff --git a/sample/src/standard/java/com/loopj/android/http/sample/SampleApplication.java b/sample/src/standard/java/com/loopj/android/http/sample/SampleApplication.java
index 2ef13dc0..9feb29d7 100644
--- a/sample/src/standard/java/com/loopj/android/http/sample/SampleApplication.java
+++ b/sample/src/standard/java/com/loopj/android/http/sample/SampleApplication.java
@@ -18,7 +18,8 @@ public void onCreate() {
 
     @TargetApi(Build.VERSION_CODES.HONEYCOMB)
     private void setStrictMode() {
-        if (Integer.valueOf(Build.VERSION.SDK) > 3) {
+//        if (Integer.valueOf(Build.VERSION.SDK) > 3) {
+        if (Build.VERSION.SDK_INT > 3) {
             Log.d(LOG_TAG, "Enabling StrictMode policy over Sample application");
             StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
                     .detectAll()
