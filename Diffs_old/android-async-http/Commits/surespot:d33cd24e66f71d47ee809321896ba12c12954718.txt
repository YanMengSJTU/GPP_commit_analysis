diff --git a/src/com/twofours/surespot/SurespotCachingHttpClient.java b/src/com/twofours/surespot/SurespotCachingHttpClient.java
index 4300fe1a..cb2ea944 100644
--- a/src/com/twofours/surespot/SurespotCachingHttpClient.java
+++ b/src/com/twofours/surespot/SurespotCachingHttpClient.java
@@ -143,7 +143,7 @@ public SurespotHttpCacheStorage(Context context) throws IOException {
 
 		@Override
 		public HttpCacheEntry getEntry(String arg0) throws IOException {
-		//	SurespotLog.v(TAG, "getting entry, url: " + arg0);
+			SurespotLog.v(TAG, "getting entry, url: " + arg0);
 			HttpCacheEntry entry = null;
 			try {
 				Snapshot snapshot = null;
@@ -157,9 +157,13 @@ public HttpCacheEntry getEntry(String arg0) throws IOException {
 				InputStream is = snapshot.getInputStream(0);
 				ObjectInputStream ois = new ObjectInputStream(is);
 
+				
+				
 				entry = (HttpCacheEntry) ois.readObject();
 				snapshot.close();
 				ois.close();
+				
+				SurespotLog.v(TAG, "read cache entry, resource length: " + entry.getResource().length());
 			}
 			catch (Exception e) {
 				throw new IOException("Error retrieving cache entry: " + arg0);
@@ -171,9 +175,9 @@ public HttpCacheEntry getEntry(String arg0) throws IOException {
 		@Override
 		public void putEntry(String key, HttpCacheEntry entry) throws IOException {
 			try {
-		//		SurespotLog.v(TAG, "putting cache entry, url: " + key);
+				SurespotLog.v(TAG, "putting cache entry, url: " + key + ", resource length: " + entry.getResource().length());
 				String gKey = generateKey(key);
-				//SurespotLog.v(TAG, "putting cache entry, key: " + gKey);
+				// SurespotLog.v(TAG, "putting cache entry, key: " + gKey);
 
 				DiskLruCache.Editor edit = mCache.edit(gKey);
 
@@ -192,15 +196,15 @@ public void putEntry(String key, HttpCacheEntry entry) throws IOException {
 
 		@Override
 		public void removeEntry(String arg0) throws IOException {
-		//	SurespotLog.v(TAG, "removing cache entry, key: " + arg0);
-			String gKey = generateKey(arg0);			
+			// SurespotLog.v(TAG, "removing cache entry, key: " + arg0);
+			String gKey = generateKey(arg0);
 			mCache.remove(gKey);
 		}
 
 		@Override
 		public void updateEntry(String arg0, HttpCacheUpdateCallback arg1) throws IOException, HttpCacheUpdateException {
-			try {				
-			//	SurespotLog.v(TAG, "updating entry, url: " + arg0);
+			try {
+				// SurespotLog.v(TAG, "updating entry, url: " + arg0);
 				HttpCacheEntry entry = getEntry(arg0);
 				if (entry != null) {
 					putEntry(arg0, arg1.update(entry));
@@ -303,11 +307,32 @@ public boolean isSharedCache() {
 
 	public void removeEntry(String key) {
 		try {
-			SurespotLog.v(TAG, "removing cache entry, url: " + key);
+			SurespotLog.v(TAG, "removing cache entry, key: " + key);
 			mCacheStorage.removeEntry(key);
 		}
 		catch (IOException e) {
 			SurespotLog.w(TAG, "removeEntry", e);
 		}
 	}
+
+	public void addCacheEntry(String key, HttpCacheEntry entry) {
+		try {
+			mCacheStorage.putEntry(key, entry);
+		}
+		catch (IOException e) {
+			SurespotLog.w(TAG, "addToCache", e);
+		}
+	}
+
+	public HttpCacheEntry getCacheEntry(String key) {
+		try {
+			return mCacheStorage.getEntry(key);
+		}
+		catch (IOException e) {
+			SurespotLog.w(TAG, "getCacheEntry", e);
+
+		}
+
+		return null;
+	}
 }
