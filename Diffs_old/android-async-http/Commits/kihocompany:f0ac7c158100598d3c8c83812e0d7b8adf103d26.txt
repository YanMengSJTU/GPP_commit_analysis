diff --git a/.travis.yml b/.travis.yml
index c92d7a2c..ab2cbbd0 100755
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,10 +3,13 @@ sudo: false
 jdk: openjdk7
 android:
   components:
-    - build-tools-23.0.1
-    - extra-android-support
-    - extra-android-m2repository
+    - platform-tools
+    - tools
+    - build-tools-23.0.3
     - android-23
+    - extra-android-m2repository
+    - extra-google-m2repository
+
   licenses:
     - '.+'
 script:
diff --git a/library/build.gradle b/library/build.gradle
index 7a55b32c..943c394e 100755
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -2,10 +2,10 @@ apply plugin: 'com.android.library'
 
 android {
     compileSdkVersion 23
-    buildToolsVersion '23.0.1'
+    buildToolsVersion '23.0.3'
 
     defaultConfig {
-        minSdkVersion 3
+        minSdkVersion 9
         targetSdkVersion 23
         consumerProguardFiles 'proguard.txt'
     }
diff --git a/library/src/main/java/com/loopj/android/http/MySSLSocketFactory.java b/library/src/main/java/com/loopj/android/http/MySSLSocketFactory.java
index 6d88a68d..fe5913b0 100755
--- a/library/src/main/java/com/loopj/android/http/MySSLSocketFactory.java
+++ b/library/src/main/java/com/loopj/android/http/MySSLSocketFactory.java
@@ -72,9 +72,19 @@ public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException,
 
         X509TrustManager tm = new X509TrustManager() {
             public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+                try {
+                    chain[0].checkValidity();
+                } catch (Exception e) {
+                    throw new CertificateException("Certificate not valid or trusted.");
+                }
             }
 
             public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
+                try {
+                    chain[0].checkValidity();
+                } catch (Exception e) {
+                    throw new CertificateException("Certificate not valid or trusted.");
+                }
             }
 
             public X509Certificate[] getAcceptedIssuers() {
diff --git a/library/src/main/java/com/loopj/android/http/PersistentCookieStore.java b/library/src/main/java/com/loopj/android/http/PersistentCookieStore.java
index b3419ea1..b290746b 100755
--- a/library/src/main/java/com/loopj/android/http/PersistentCookieStore.java
+++ b/library/src/main/java/com/loopj/android/http/PersistentCookieStore.java
@@ -97,7 +97,7 @@ public void addCookie(Cookie cookie) {
         SharedPreferences.Editor prefsWriter = cookiePrefs.edit();
         prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join(",", cookies.keySet()));
         prefsWriter.putString(COOKIE_NAME_PREFIX + name, encodeCookie(new SerializableCookie(cookie)));
-        prefsWriter.commit();
+        prefsWriter.apply();
     }
 
     @Override
@@ -108,7 +108,7 @@ public void clear() {
             prefsWriter.remove(COOKIE_NAME_PREFIX + name);
         }
         prefsWriter.remove(COOKIE_NAME_STORE);
-        prefsWriter.commit();
+        prefsWriter.apply();
 
         // Clear cookies from local store
         cookies.clear();
@@ -138,7 +138,7 @@ public boolean clearExpired(Date date) {
         if (clearedAny) {
             prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join(",", cookies.keySet()));
         }
-        prefsWriter.commit();
+        prefsWriter.apply();
 
         return clearedAny;
     }
@@ -168,7 +168,7 @@ public void deleteCookie(Cookie cookie) {
         cookies.remove(name);
         SharedPreferences.Editor prefsWriter = cookiePrefs.edit();
         prefsWriter.remove(COOKIE_NAME_PREFIX + name);
-        prefsWriter.commit();
+        prefsWriter.apply();
     }
 
     /**
diff --git a/sample/build.gradle b/sample/build.gradle
index eb44af0e..7f31e48d 100755
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -9,10 +9,10 @@ repositories {
 
 android {
     compileSdkVersion 23
-    buildToolsVersion '23.0.1'
+    buildToolsVersion '23.0.3'
 
     defaultConfig {
-        minSdkVersion 3
+        minSdkVersion 9
         targetSdkVersion 23
     }
 
@@ -20,7 +20,7 @@ android {
         standard {
         }
         withLeakCanary {
-            minSdkVersion 8
+            minSdkVersion 9
             targetSdkVersion 23
         }
     }
