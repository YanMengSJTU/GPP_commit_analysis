diff --git a/build.gradle b/build.gradle
index 2a500d66..7a08fb42 100755
--- a/build.gradle
+++ b/build.gradle
@@ -1,10 +1,17 @@
 buildscript {
     repositories {
         mavenCentral()
+        //maven {
+        //    url 'https://maven.google.com/'
+        //    name 'Google'
+        //}
+        google()
+        jcenter()
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.3.1'
+        //classpath 'com.android.tools.build:gradle:1.3.1'
+        classpath 'com.android.tools.build:gradle:3.1.4'
     }
 }
 
@@ -19,6 +26,15 @@ allprojects {
     repositories {
         mavenLocal()
         mavenCentral()
+        //maven {
+        //    url 'https://maven.google.com/'
+        //    name 'Google'
+        //}
+        google()
+        jcenter()
+        maven {
+            url "https://maven.google.com"
+        }
     }
 
     tasks.withType(JavaCompile) {
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 30d399d8..7a3265ee 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 3af41f22..8b447102 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Fri Jul 31 10:35:35 CEST 2015
+#Fri Sep 14 15:48:07 KST 2018
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.5-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
diff --git a/gradlew b/gradlew
index 91a7e269..cccdd3d5 100755
--- a/gradlew
+++ b/gradlew
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/usr/bin/env sh
 
 ##############################################################################
 ##
@@ -6,20 +6,38 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn ( ) {
+warn () {
     echo "$*"
 }
 
-die ( ) {
+die () {
     echo
     echo "$*"
     echo
@@ -30,6 +48,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,31 +59,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
-APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -90,7 +89,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -114,6 +113,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
@@ -154,11 +154,19 @@ if $cygwin ; then
     esac
 fi
 
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
 }
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
 
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
+exec "$JAVACMD" "$@"
diff --git a/gradlew.bat b/gradlew.bat
index aec99730..e95643d6 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -8,14 +8,14 @@
 @rem Set local scope for the variables with windows NT shell
 if "%OS%"=="Windows_NT" setlocal
 
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
 set DIRNAME=%~dp0
 if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
 
@@ -46,10 +46,9 @@ echo location of your Java installation.
 goto fail
 
 :init
-@rem Get command-line arguments, handling Windowz variants
+@rem Get command-line arguments, handling Windows variants
 
 if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
 
 :win9xME_args
 @rem Slurp the command line arguments.
@@ -60,11 +59,6 @@ set _SKIP=2
 if "x%~1" == "x" goto execute
 
 set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
 
 :execute
 @rem Setup the command line
diff --git a/library/build.gradle b/library/build.gradle
index 943c394e..520c6ad6 100755
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -2,7 +2,7 @@ apply plugin: 'com.android.library'
 
 android {
     compileSdkVersion 23
-    buildToolsVersion '23.0.3'
+    //buildToolsVersion '23.0.3'
 
     defaultConfig {
         minSdkVersion 9
@@ -19,13 +19,13 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_6
-        targetCompatibility JavaVersion.VERSION_1_6
+        //sourceCompatibility JavaVersion.VERSION_1_6
+        //targetCompatibility JavaVersion.VERSION_1_6
     }
 }
 
 dependencies {
-    compile 'cz.msebera.android:httpclient:4.3.6'
+    implementation 'cz.msebera.android:httpclient:4.3.6'
 }
 
 android.libraryVariants.all { variant ->
diff --git a/library/src/main/java/com/loopj/android/http/RequestParams.java b/library/src/main/java/com/loopj/android/http/RequestParams.java
index cade5be6..0387b928 100755
--- a/library/src/main/java/com/loopj/android/http/RequestParams.java
+++ b/library/src/main/java/com/loopj/android/http/RequestParams.java
@@ -33,7 +33,7 @@
 import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
-import java.util.concurrent.ConcurrentSkipList;
+import java.util.concurrent.ConcurrentHashMap;
 
 import cz.msebera.android.httpclient.HttpEntity;
 import cz.msebera.android.httpclient.client.entity.UrlEncodedFormEntity;
@@ -99,11 +99,11 @@
             "application/json";
 
     protected final static String LOG_TAG = "RequestParams";
-    protected final ConcurrentSkipList<String, String> urlParams = new ConcurrentSkipList<String, String>();
-    protected final ConcurrentSkipList<String, StreamWrapper> streamParams = new ConcurrentSkipList<String, StreamWrapper>();
-    protected final ConcurrentSkipList<String, FileWrapper> fileParams = new ConcurrentSkipList<String, FileWrapper>();
-    protected final ConcurrentSkipList<String, List<FileWrapper>> fileArrayParams = new ConcurrentSkipList<String, List<FileWrapper>>();
-    protected final ConcurrentSkipList<String, Object> urlParamsWithObjects = new ConcurrentSkipList<String, Object>();
+    protected final ConcurrentHashMap<String, String> urlParams = new ConcurrentHashMap<String, String>();
+    protected final ConcurrentHashMap<String, StreamWrapper> streamParams = new ConcurrentHashMap<String, StreamWrapper>();
+    protected final ConcurrentHashMap<String, FileWrapper> fileParams = new ConcurrentHashMap<String, FileWrapper>();
+    protected final ConcurrentHashMap<String, List<FileWrapper>> fileArrayParams = new ConcurrentHashMap<String, List<FileWrapper>>();
+    protected final ConcurrentHashMap<String, Object> urlParamsWithObjects = new ConcurrentHashMap<String, Object>();
     protected boolean isRepeatable;
     protected boolean forceMultipartEntity = false;
     protected boolean useJsonStreamer;
@@ -425,7 +425,7 @@ public boolean has(String key) {
     @Override
     public String toString() {
         StringBuilder result = new StringBuilder();
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, String> entry : urlParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -434,7 +434,7 @@ public String toString() {
             result.append(entry.getValue());
         }
 
-        for (ConcurrentSkipList.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -443,7 +443,7 @@ public String toString() {
             result.append("STREAM");
         }
 
-        for (ConcurrentSkipList.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -452,7 +452,7 @@ public String toString() {
             result.append("FILE");
         }
 
-        for (ConcurrentSkipList.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -530,22 +530,22 @@ private HttpEntity createJsonStreamerEntity(ResponseHandlerInterface progressHan
                 elapsedFieldInJsonStreamer);
 
         // Add string params
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, String> entry : urlParams.entrySet()) {
             entity.addPart(entry.getKey(), entry.getValue());
         }
 
         // Add non-string params
-        for (ConcurrentSkipList.Entry<String, Object> entry : urlParamsWithObjects.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, Object> entry : urlParamsWithObjects.entrySet()) {
             entity.addPart(entry.getKey(), entry.getValue());
         }
 
         // Add file params
-        for (ConcurrentSkipList.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
             entity.addPart(entry.getKey(), entry.getValue());
         }
 
         // Add stream params
-        for (ConcurrentSkipList.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
             StreamWrapper stream = entry.getValue();
             if (stream.inputStream != null) {
                 entity.addPart(entry.getKey(),
@@ -575,7 +575,7 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
         entity.setIsRepeatable(isRepeatable);
 
         // Add string params
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, String> entry : urlParams.entrySet()) {
             entity.addPartWithCharset(entry.getKey(), entry.getValue(), contentEncoding);
         }
 
@@ -586,7 +586,7 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
         }
 
         // Add stream params
-        for (ConcurrentSkipList.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
             StreamWrapper stream = entry.getValue();
             if (stream.inputStream != null) {
                 entity.addPart(entry.getKey(), stream.name, stream.inputStream,
@@ -595,13 +595,13 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
         }
 
         // Add file params
-        for (ConcurrentSkipList.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
             FileWrapper fileWrapper = entry.getValue();
             entity.addPart(entry.getKey(), fileWrapper.file, fileWrapper.contentType, fileWrapper.customFileName);
         }
 
         // Add file collection
-        for (ConcurrentSkipList.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
             List<FileWrapper> fileWrapper = entry.getValue();
             for (FileWrapper fw : fileWrapper) {
                 entity.addPart(entry.getKey(), fw.file, fw.contentType, fw.customFileName);
@@ -614,7 +614,7 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
     protected List<BasicNameValuePair> getParamsList() {
         List<BasicNameValuePair> lparams = new LinkedList<BasicNameValuePair>();
 
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentHashMap.Entry<String, String> entry : urlParams.entrySet()) {
             lparams.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));
         }
 
diff --git a/sample/build.gradle b/sample/build.gradle
index 7f31e48d..f4c60b75 100755
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -9,13 +9,14 @@ repositories {
 
 android {
     compileSdkVersion 23
-    buildToolsVersion '23.0.3'
+    //buildToolsVersion '23.0.3'
 
     defaultConfig {
         minSdkVersion 9
         targetSdkVersion 23
     }
 
+    flavorDimensions "default"
     productFlavors {
         standard {
         }
@@ -26,8 +27,8 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_7
-        targetCompatibility JavaVersion.VERSION_1_7
+        //sourceCompatibility JavaVersion.VERSION_1_7
+        //targetCompatibility JavaVersion.VERSION_1_7
     }
 
     lintOptions {
@@ -46,8 +47,9 @@ android {
 }
 
 dependencies {
-    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.3'
-    compile project(':library')
+    implementation 'cz.msebera.android:httpclient:4.3.6'
+    implementation 'com.fasterxml.jackson.core:jackson-databind:2.5.3'
+    implementation project(':library')
     // LeakCanary
-    withLeakCanaryCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
+    withLeakCanaryImplementation 'com.squareup.leakcanary:leakcanary-android:1.3.1'
 }
