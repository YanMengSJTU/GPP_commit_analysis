diff --git a/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java b/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java
index b7f6ddc9..eeaa1d6d 100644
--- a/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java
+++ b/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java
@@ -941,11 +941,15 @@ public static String getUrlWithQueryString(boolean shouldEncodeUrl, String url,
             url = url.replace(" ", "%20");
 
         if (params != null) {
-            String paramString = params.getParamString();
-            if (!url.contains("?")) {
-                url += "?" + paramString;
-            } else {
-                url += "&" + paramString;
+            // Construct the query string and trim it, in case it
+            // includes any excessive white spaces.
+            String paramString = params.getParamString().trim();
+
+            // Only add the query string if it isn't empty and it
+            // isn't equal to '?'.
+            if (!paramString.equals("") && !paramString.equals("?")) {
+                url += url.contains("?") ? "&" : "?";
+                url += paramString;
             }
         }
 
diff --git a/library/src/main/java/com/loopj/android/http/RetryHandler.java b/library/src/main/java/com/loopj/android/http/RetryHandler.java
index f777d1fe..d8dffa1d 100644
--- a/library/src/main/java/com/loopj/android/http/RetryHandler.java
+++ b/library/src/main/java/com/loopj/android/http/RetryHandler.java
@@ -75,12 +75,12 @@ public boolean retryRequest(IOException exception, int executionCount, HttpConte
         if (executionCount > maxRetries) {
             // Do not retry if over max retry count
             retry = false;
-        } else if (isInList(exceptionBlacklist, exception)) {
-            // immediately cancel retry if the error is blacklisted
-            retry = false;
         } else if (isInList(exceptionWhitelist, exception)) {
             // immediately retry if error is whitelisted
             retry = true;
+        } else if (isInList(exceptionBlacklist, exception)) {
+            // immediately cancel retry if the error is blacklisted
+            retry = false;
         } else if (!sent) {
             // for most other errors, retry only if request hasn't been fully sent yet
             retry = true;
@@ -119,4 +119,4 @@ protected boolean isInList(HashSet<Class<?>> list, Throwable error) {
         }
         return false;
     }
-}
\ No newline at end of file
+}
