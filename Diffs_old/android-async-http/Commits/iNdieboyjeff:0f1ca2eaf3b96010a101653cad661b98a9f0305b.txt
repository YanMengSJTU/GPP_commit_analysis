diff --git a/.travis.yml b/.travis.yml
index 6e6a0f59..69ae732e 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -16,9 +16,9 @@ before_install:
   # for gradle output style
   - export TERM=dumb
   # newer version of gradle
-  - wget http://services.gradle.org/distributions/gradle-1.9-bin.zip
-  - unzip -qq gradle-1.9-bin.zip
-  - export GRADLE_HOME=$PWD/gradle-1.9
+  - wget http://services.gradle.org/distributions/gradle-1.10-bin.zip
+  - unzip -qq gradle-1.10-bin.zip
+  - export GRADLE_HOME=$PWD/gradle-1.10
   - export PATH=$GRADLE_HOME/bin:$PATH
   # just to test gradle version, against our provided one
   - gradle -v
@@ -31,7 +31,7 @@ before_install:
   - echo "sdk.dir=$ANDROID_HOME" > local.properties
   # list packages for debug purpose
   - android list sdk -a -e -u
-  - echo yes | android update sdk -t tools,platform-tools,extra-android-support,extra-android-m2repository,android-19,build-tools-19.0.0 --force --no-ui
+  - echo yes | android update sdk -t tools,platform-tools,extra-android-support,extra-android-m2repository,android-19,build-tools-19.0.1 --force --no-ui
   # Sonatype bypass
   - echo "nexusUsername=dummy" >> library/gradle.properties
   - echo "nexusPassword=dummy" >> library/gradle.properties
diff --git a/build.gradle b/build.gradle
index 5f3653e4..ca484909 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:0.7.+'
+        classpath 'com.android.tools.build:gradle:+'
     }
 }
 
diff --git a/library/build.gradle b/library/build.gradle
index 5ac1d7e9..e7b17970 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -2,7 +2,12 @@ apply plugin: 'android-library'
 
 android {
     compileSdkVersion 19
-    buildToolsVersion '19.0.0'
+    buildToolsVersion '19.0.1'
+
+    defaultConfig {
+        minSdkVersion 3
+        targetSdkVersion 19
+    }
     
     lintOptions {
         abortOnError false
diff --git a/library/src/main/AndroidManifest.xml b/library/src/main/AndroidManifest.xml
index 13d6f26e..f45dcd47 100644
--- a/library/src/main/AndroidManifest.xml
+++ b/library/src/main/AndroidManifest.xml
@@ -4,9 +4,6 @@
     android:versionName="1.4.5-SNAPSHOT"
     android:versionCode="145">
 
-    <uses-sdk
-        android:minSdkVersion="3" />
-
     <uses-permission android:name="android.permission.INTERNET" />
 
     <application />
diff --git a/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java b/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java
index 66404cc3..985c5267 100644
--- a/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java
+++ b/library/src/main/java/com/loopj/android/http/AsyncHttpResponseHandler.java
@@ -32,7 +32,6 @@
 
 import java.io.IOException;
 import java.io.InputStream;
-import java.lang.ref.WeakReference;
 import java.net.URI;
 
 /**
@@ -92,7 +91,7 @@
 
     protected static final int BUFFER_SIZE = 4096;
 
-    private Handler handler;
+    private final Handler handler;
     public static final String DEFAULT_CHARSET = "UTF-8";
     private String responseCharset = DEFAULT_CHARSET;
     private Boolean useSynchronousMode = false;
@@ -121,21 +120,18 @@ public void setRequestHeaders(Header[] requestHeaders) {
     }
 
     /**
-     * Avoid leaks by using a non-anonymous handler class with a weak reference
+     * Avoid leaks by using a non-anonymous handler class.
      */
-    static class ResponderHandler extends Handler {
-        private final WeakReference<AsyncHttpResponseHandler> mResponder;
+    private static class ResponderHandler extends Handler {
+        private final AsyncHttpResponseHandler mResponder;
 
-        ResponderHandler(AsyncHttpResponseHandler service) {
-            mResponder = new WeakReference<AsyncHttpResponseHandler>(service);
+        ResponderHandler(AsyncHttpResponseHandler mResponder) {
+            this.mResponder = mResponder;
         }
 
         @Override
         public void handleMessage(Message msg) {
-            AsyncHttpResponseHandler service = mResponder.get();
-            if (null != service) {
-                service.handleMessage(msg);
-            }
+            mResponder.handleMessage(msg);
         }
     }
 
@@ -167,7 +163,10 @@ public String getCharset() {
      * Creates a new AsyncHttpResponseHandler
      */
     public AsyncHttpResponseHandler() {
-        // Init Looper by calling postRunnable without argument
+        // There is always a handler ready for delivering messages.
+        handler = new ResponderHandler(this);
+
+        // Init Looper by calling postRunnable without an argument.
         postRunnable(null);
     }
 
@@ -178,7 +177,7 @@ public AsyncHttpResponseHandler() {
      * @param totalSize    total size of file
      */
     public void onProgress(int bytesWritten, int totalSize) {
-        Log.d(LOG_TAG, String.format("Progress %d from %d (%d%%)", bytesWritten, totalSize, (totalSize > 0) ? (bytesWritten / totalSize) * 100 : -1));
+        Log.v(LOG_TAG, String.format("Progress %d from %d (%d%%)", bytesWritten, totalSize, (totalSize > 0) ? (bytesWritten / totalSize) * 100 : -1));
     }
 
     /**
@@ -307,7 +306,7 @@ protected void handleMessage(Message message) {
     }
 
     protected void sendMessage(Message msg) {
-        if (getUseSynchronousMode() || handler == null) {
+        if (getUseSynchronousMode()) {
             handleMessage(msg);
         } else if (!Thread.currentThread().isInterrupted()) { // do not send messages if request has been cancelled
             handler.sendMessage(msg);
@@ -324,9 +323,6 @@ protected void postRunnable(Runnable runnable) {
         if (missingLooper) {
             Looper.prepare();
         }
-        if (null == handler) {
-            handler = new ResponderHandler(this);
-        }
         if (null != runnable) {
             handler.post(runnable);
         }
@@ -343,17 +339,7 @@ protected void postRunnable(Runnable runnable) {
      * @return Message instance, should not be null
      */
     protected Message obtainMessage(int responseMessageId, Object responseMessageData) {
-        Message msg;
-        if (handler != null) {
-            msg = handler.obtainMessage(responseMessageId, responseMessageData);
-        } else {
-            msg = Message.obtain();
-            if (msg != null) {
-                msg.what = responseMessageId;
-                msg.obj = responseMessageData;
-            }
-        }
-        return msg;
+        return handler.obtainMessage(responseMessageId, responseMessageData);
     }
 
     @Override
diff --git a/sample/build.gradle b/sample/build.gradle
index 57c4aada..af693013 100644
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -17,7 +17,7 @@ repositories {
 
 android {
     compileSdkVersion 19
-    buildToolsVersion '19.0.0'
+    buildToolsVersion '19.0.1'
 
     defaultConfig {
         minSdkVersion 3
diff --git a/sample/src/main/AndroidManifest.xml b/sample/src/main/AndroidManifest.xml
index cde76377..a7d337e9 100644
--- a/sample/src/main/AndroidManifest.xml
+++ b/sample/src/main/AndroidManifest.xml
@@ -6,9 +6,6 @@
 
     <uses-permission android:name="android.permission.INTERNET"/>
 
-    <uses-sdk
-        android:minSdkVersion="3" />
-
     <application
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
