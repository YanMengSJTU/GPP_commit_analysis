diff --git a/src/com/loopj/android/http/AsyncHttpResponseHandler.java b/src/com/loopj/android/http/AsyncHttpResponseHandler.java
index 2107acc6..7897b2c1 100644
--- a/src/com/loopj/android/http/AsyncHttpResponseHandler.java
+++ b/src/com/loopj/android/http/AsyncHttpResponseHandler.java
@@ -143,13 +143,21 @@ public void onFailure(Throwable error, String content) {
     protected void sendSuccessMessage(int statusCode, Header[] headers, String responseBody) {
         sendMessage(obtainMessage(SUCCESS_MESSAGE, new Object[]{new Integer(statusCode),headers, responseBody}));
     }
-
+    
     protected void sendFailureMessage(Throwable e, String responseBody) {
-        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, responseBody}));
+        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, null, responseBody}));
     }
-    
+
+    protected void sendFailureMessage(Throwable e, Header[] headers, String responseBody) {
+        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, headers, responseBody}));
+    }
+
+    protected void sendFailureMessage(Throwable e, Header[] headers, byte[] responseBody) {
+        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, headers, responseBody}));
+    }
+
     protected void sendFailureMessage(Throwable e, byte[] responseBody) {
-        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, responseBody}));
+        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, null, responseBody}));
     }
 
     protected void sendStartMessage() {
@@ -169,7 +177,7 @@ protected void handleSuccessMessage(int statusCode, Header[] headers, String res
         onSuccess(statusCode, headers, responseBody);
     }
 
-    protected void handleFailureMessage(Throwable e, String responseBody) {
+    protected void handleFailureMessage(Throwable e, Header [] headers, String responseBody) {
         onFailure(e, responseBody);
     }
 
@@ -186,7 +194,7 @@ protected void handleMessage(Message msg) {
                 break;
             case FAILURE_MESSAGE:
                 response = (Object[])msg.obj;
-                handleFailureMessage((Throwable)response[0], (String)response[1]);
+                handleFailureMessage((Throwable)response[0], (Header[]) response[1], (String)response[2]);
                 break;
             case START_MESSAGE:
                 onStart();
@@ -229,13 +237,15 @@ void sendResponseMessage(HttpResponse response) {
                 responseBody = EntityUtils.toString(entity, "UTF-8");
             }
         } catch(IOException e) {
-            sendFailureMessage(e, (String) null);
+            sendFailureMessage(e, response.getAllHeaders(), (String) null);
         }
 
         if(status.getStatusCode() >= 300) {
-            sendFailureMessage(new HttpResponseException(status.getStatusCode(), status.getReasonPhrase()), responseBody);
+            sendFailureMessage(new HttpResponseException(
+                status.getStatusCode(), status.getReasonPhrase()),
+                response.getAllHeaders(), responseBody);
         } else {
-            sendSuccessMessage(status.getStatusCode(),response.getAllHeaders(), responseBody);
+            sendSuccessMessage(status.getStatusCode(), response.getAllHeaders(), responseBody);
         }
     }
 }
\ No newline at end of file
diff --git a/src/com/loopj/android/http/JsonHttpResponseHandler.java b/src/com/loopj/android/http/JsonHttpResponseHandler.java
index 5cc6a0ea..ce9d6947 100644
--- a/src/com/loopj/android/http/JsonHttpResponseHandler.java
+++ b/src/com/loopj/android/http/JsonHttpResponseHandler.java
@@ -98,7 +98,7 @@ protected void sendSuccessMessage(int statusCode, Header[] headers, String respo
             Object jsonResponse = parseResponse(responseBody);
             sendMessage(obtainMessage(SUCCESS_JSON_MESSAGE, new Object[]{statusCode, headers, jsonResponse}));
         } catch(JSONException e) {
-            sendFailureMessage(e, responseBody);
+            sendFailureMessage(e, headers, responseBody);
         }
     }
 
@@ -143,7 +143,7 @@ protected Object parseResponse(String responseBody) throws JSONException {
     }
 
     @Override
-    protected void handleFailureMessage(Throwable e, String responseBody) {
+    protected void handleFailureMessage(Throwable e, Header[] headers, String responseBody) {
         try {
             if (responseBody != null) {
                 Object jsonResponse = parseResponse(responseBody);
