diff --git a/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java b/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java
index 61040538..1b38e239 100644
--- a/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java
+++ b/library/src/main/java/com/loopj/android/http/AsyncHttpClient.java
@@ -337,6 +337,7 @@ public void setMaxConnections(int maxConnections) {
         this.maxConnections = maxConnections;
         final HttpParams httpParams = this.httpClient.getParams();
         ConnManagerParams.setMaxConnectionsPerRoute(httpParams, new ConnPerRouteBean(this.maxConnections));
+        this.threadPool.setCorePoolSize(maxConnections);
     }
 
     /**
diff --git a/library/src/main/java/com/loopj/android/http/AsyncHttpRequest.java b/library/src/main/java/com/loopj/android/http/AsyncHttpRequest.java
index d6c36f2a..a3d7afd2 100644
--- a/library/src/main/java/com/loopj/android/http/AsyncHttpRequest.java
+++ b/library/src/main/java/com/loopj/android/http/AsyncHttpRequest.java
@@ -55,6 +55,8 @@ public void run() {
         } catch (IOException e) {
             if (responseHandler != null) {
                 responseHandler.sendFailureMessage(0, null, null, e);
+            } else {
+                Log.e("AsyncHttpRequest", "makeRequestWithRetries returned error, but handler is null", e);
             }
         }
 
diff --git a/sample/src/main/AndroidManifest.xml b/sample/src/main/AndroidManifest.xml
index 3e0a2fa8..23b6ee77 100644
--- a/sample/src/main/AndroidManifest.xml
+++ b/sample/src/main/AndroidManifest.xml
@@ -27,6 +27,7 @@
         <activity android:name=".JsonSample" />
         <activity android:name=".FileSample" />
         <activity android:name=".BinarySample" />
+        <activity android:name=".ThreadingTimeoutSample" />
     </application>
 
 </manifest>
diff --git a/sample/src/main/java/com/loopj/android/http/sample/PostSample.java b/sample/src/main/java/com/loopj/android/http/sample/PostSample.java
index 8ecad2b0..202fd480 100644
--- a/sample/src/main/java/com/loopj/android/http/sample/PostSample.java
+++ b/sample/src/main/java/com/loopj/android/http/sample/PostSample.java
@@ -5,14 +5,12 @@
 
 import org.apache.http.Header;
 import org.apache.http.HttpEntity;
-import org.apache.http.message.BasicHeader;
 
 public class PostSample extends SampleParentActivity {
     private static final String LOG_TAG = "PostSample";
 
     @Override
     protected void executeSample(AsyncHttpClient client, String URL, Header[] headers, HttpEntity entity, AsyncHttpResponseHandler responseHandler) {
-        headers = new Header[]{ new BasicHeader("Content-Type", "ee") };
         client.post(this, URL, headers, entity, null, responseHandler);
     }
 
diff --git a/sample/src/main/java/com/loopj/android/http/sample/ThreadingTimeoutSample.java b/sample/src/main/java/com/loopj/android/http/sample/ThreadingTimeoutSample.java
new file mode 100644
index 00000000..aeb131a5
--- /dev/null
+++ b/sample/src/main/java/com/loopj/android/http/sample/ThreadingTimeoutSample.java
@@ -0,0 +1,79 @@
+package com.loopj.android.http.sample;
+
+import android.util.SparseArray;
+
+import com.loopj.android.http.AsyncHttpClient;
+import com.loopj.android.http.AsyncHttpResponseHandler;
+
+import org.apache.http.Header;
+import org.apache.http.HttpEntity;
+
+import java.util.Random;
+
+public class ThreadingTimeoutSample extends SampleParentActivity {
+
+    private static final String LOG_TAG = "ThreadingTimeoutSample";
+    private SparseArray<String> states = new SparseArray<String>();
+
+    @Override
+    protected int getSampleTitle() {
+        return R.string.app_name;
+    }
+
+    @Override
+    protected boolean isRequestBodyAllowed() {
+        return false;
+    }
+
+    @Override
+    protected boolean isRequestHeadersAllowed() {
+        return false;
+    }
+
+    @Override
+    protected String getDefaultURL() {
+        return "http://httpbin.org/delay/6";
+    }
+
+    private synchronized void setStatus(int id, String status) {
+        String current = states.get(id, null);
+        states.put(id, current == null ? status : current + "," + status);
+        clearOutputs();
+        for (int i = 0; i < states.size(); i++) {
+            debugResponse(LOG_TAG, states.keyAt(i) + ": " + states.get(states.keyAt(i)));
+        }
+    }
+
+    @Override
+    protected AsyncHttpResponseHandler getResponseHandler() {
+        return new AsyncHttpResponseHandler() {
+
+            private int id = new Random().nextInt(1000);
+
+            @Override
+            public void onStart() {
+                setStatus(id, "START");
+            }
+
+            @Override
+            public void onSuccess(int statusCode, Header[] headers, byte[] responseBody) {
+                setStatus(id, "SUCCESS");
+            }
+
+            @Override
+            public void onFinish() {
+                setStatus(id, "FINISH");
+            }
+
+            @Override
+            public void onFailure(int statusCode, Header[] headers, byte[] responseBody, Throwable error) {
+                setStatus(id, "FAILURE");
+            }
+        };
+    }
+
+    @Override
+    protected void executeSample(AsyncHttpClient client, String URL, Header[] headers, HttpEntity entity, AsyncHttpResponseHandler responseHandler) {
+        client.get(this, URL, headers, null, responseHandler);
+    }
+}
diff --git a/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java b/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java
index 736c5424..857a0ffb 100644
--- a/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java
+++ b/sample/src/main/java/com/loopj/android/http/sample/WaypointsActivity.java
@@ -9,7 +9,7 @@
 
 public class WaypointsActivity extends ListActivity {
 
-    private static final String[] samples = new String[]{"GET", "POST", "DELETE", "PUT", "JSON", "FILE", "BINARY"};
+    private static final String[] samples = new String[]{"GET", "POST", "DELETE", "PUT", "JSON", "FILE", "BINARY", "THREADING TIMEOUTS"};
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -43,6 +43,9 @@ protected void onListItemClick(ListView l, View v, int position, long id) {
             case 6:
                 targetClass = BinarySample.class;
                 break;
+            case 7:
+                targetClass = ThreadingTimeoutSample.class;
+                break;
         }
         if (targetClass != null)
             startActivity(new Intent(this, targetClass));
