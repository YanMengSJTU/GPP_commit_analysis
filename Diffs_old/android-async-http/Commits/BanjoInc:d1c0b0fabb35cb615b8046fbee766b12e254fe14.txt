diff --git a/project.properties b/project.properties
index 1880987e..6905bdf0 100644
--- a/project.properties
+++ b/project.properties
@@ -9,4 +9,4 @@
 
 android.library=true
 # Project target.
-target=android-3
+target=android-18
diff --git a/src/com/loopj/android/http/AsyncHttpClient.java b/src/com/loopj/android/http/AsyncHttpClient.java
index 5f0750d7..6bdbe495 100644
--- a/src/com/loopj/android/http/AsyncHttpClient.java
+++ b/src/com/loopj/android/http/AsyncHttpClient.java
@@ -104,8 +104,8 @@
 
     private final DefaultHttpClient httpClient;
     private final HttpContext httpContext;
-    private ThreadPoolExecutor threadPool;
-    private final Map<Context, List<WeakReference<Future<?>>>> requestMap;
+    protected ThreadPoolExecutor threadPool;
+    protected final Map<Context, List<WeakReference<Future<?>>>> requestMap;
     private final Map<String, String> clientHeaderMap;
 
 
@@ -550,7 +550,7 @@ public void delete(Context context, String url, Header[] headers, AsyncHttpRespo
 
 
     // Private stuff
-    protected void sendRequest(DefaultHttpClient client, HttpContext httpContext, HttpUriRequest uriRequest, String contentType, AsyncHttpResponseHandler responseHandler, Context context) {
+    protected Future<?> sendRequest(DefaultHttpClient client, HttpContext httpContext, HttpUriRequest uriRequest, String contentType, AsyncHttpResponseHandler responseHandler, Context context) {
         if(contentType != null) {
             uriRequest.addHeader("Content-Type", contentType);
         }
@@ -569,6 +569,8 @@ protected void sendRequest(DefaultHttpClient client, HttpContext httpContext, Ht
 
             // TODO: Remove dead weakrefs from requestLists?
         }
+
+        return request;
     }
 
     public static String getUrlWithQueryString(String url, RequestParams params) {
diff --git a/src/com/loopj/android/http/AsyncHttpRequest.java b/src/com/loopj/android/http/AsyncHttpRequest.java
index 48e6807e..58c222a8 100644
--- a/src/com/loopj/android/http/AsyncHttpRequest.java
+++ b/src/com/loopj/android/http/AsyncHttpRequest.java
@@ -30,7 +30,7 @@
 import org.apache.http.impl.client.AbstractHttpClient;
 import org.apache.http.protocol.HttpContext;
 
-class AsyncHttpRequest implements Runnable {
+public class AsyncHttpRequest implements Runnable {
     private final AbstractHttpClient client;
     private final HttpContext context;
     private final HttpUriRequest request;
diff --git a/src/com/loopj/android/http/SyncHttpClient.java b/src/com/loopj/android/http/SyncHttpClient.java
index 1fd4441f..fd19c3de 100644
--- a/src/com/loopj/android/http/SyncHttpClient.java
+++ b/src/com/loopj/android/http/SyncHttpClient.java
@@ -7,6 +7,8 @@
 import android.content.Context;
 import android.os.Message;
 
+import java.util.concurrent.Future;
+
 public abstract class SyncHttpClient extends AsyncHttpClient {
 	private int responseCode;
 	/*
@@ -53,7 +55,7 @@ public int getResponseCode() {
 
 	// Private stuff
     @Override
-    protected void sendRequest(DefaultHttpClient client,
+    protected Future<?> sendRequest(DefaultHttpClient client,
 			HttpContext httpContext, HttpUriRequest uriRequest,
 			String contentType, AsyncHttpResponseHandler responseHandler,
 			Context context) {
@@ -66,6 +68,8 @@ protected void sendRequest(DefaultHttpClient client,
 		 */
 		new AsyncHttpRequest(client, httpContext, uriRequest, responseHandler)
 				.run();
+
+        return null;
 	}
 
 	public abstract String onRequestFailed(Throwable error, String content);
