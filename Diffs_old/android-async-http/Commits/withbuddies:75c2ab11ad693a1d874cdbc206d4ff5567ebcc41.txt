diff --git a/src/com/loopj/android/http/AsyncHttpClient.java b/src/com/loopj/android/http/AsyncHttpClient.java
index 54e14b96..fbaafd21 100644
--- a/src/com/loopj/android/http/AsyncHttpClient.java
+++ b/src/com/loopj/android/http/AsyncHttpClient.java
@@ -379,6 +379,18 @@ public void post(String url, RequestParams params, AsyncHttpResponseHandler resp
         post(null, url, params, responseHandler);
     }
 
+    /**
+     * Perform a HTTP POST request with parameters.
+     * And set one-time headers and content-type for the request
+     * @param url the URL to send the request to.
+     * @param entity a raw {@link HttpEntity} to send with the request, for example, use this to send string/json/xml payloads to a server by passing a {@link org.apache.http.entity.StringEntity}.
+     * @param contentType the content type of the payload you are sending, for example application/json if sending a json payload.
+     * @param responseHandler the response handler instance that should handle the response.
+     */
+    public void post(String url, HttpEntity entity, String contentType, AsyncHttpResponseHandler responseHandler) {
+        post(null, url, entity, contentType, responseHandler);
+    }
+
     /**
      * Perform a HTTP POST request and track the Android Context which initiated the request.
      * @param context the Android Context which initiated the request.
@@ -469,6 +481,18 @@ public void put(String url, RequestParams params, AsyncHttpResponseHandler respo
         put(null, url, params, responseHandler);
     }
 
+    /**
+     * Perform a HTTP PUT request with parameters.
+     * And set one-time headers and content-type for the request
+     * @param url the URL to send the request to.
+     * @param entity a raw {@link HttpEntity} to send with the request, for example, use this to send string/json/xml payloads to a server by passing a {@link org.apache.http.entity.StringEntity}.
+     * @param contentType the content type of the payload you are sending, for example application/json if sending a json payload.
+     * @param responseHandler the response handler instance that should handle the response.
+     */
+    public void put(String url, HttpEntity entity, String contentType, AsyncHttpResponseHandler responseHandler) {
+    	put(null, url, entity, contentType, responseHandler);
+    }
+
     /**
      * Perform a HTTP PUT request and track the Android Context which initiated the request.
      * @param context the Android Context which initiated the request.
