diff --git a/src/com/loopj/android/http/AsyncHttpClient.java b/src/com/loopj/android/http/AsyncHttpClient.java
index 4063ae57..95dc9940 100644
--- a/src/com/loopj/android/http/AsyncHttpClient.java
+++ b/src/com/loopj/android/http/AsyncHttpClient.java
@@ -143,6 +143,9 @@ public void process(HttpRequest request, HttpContext context) {
         httpClient.addResponseInterceptor(new HttpResponseInterceptor() {
             public void process(HttpResponse response, HttpContext context) {
                 final HttpEntity entity = response.getEntity();
+                if (entity == null) {
+                    return;
+                }
                 final Header encoding = entity.getContentEncoding();
                 if (encoding != null) {
                     for (HeaderElement element : encoding.getElements()) {
diff --git a/src/com/loopj/android/http/AsyncHttpResponseHandler.java b/src/com/loopj/android/http/AsyncHttpResponseHandler.java
index 14992239..f7932709 100644
--- a/src/com/loopj/android/http/AsyncHttpResponseHandler.java
+++ b/src/com/loopj/android/http/AsyncHttpResponseHandler.java
@@ -210,8 +210,12 @@ void sendResponseMessage(HttpResponse response) {
             if(status.getStatusCode() >= 300) {
                 sendFailureMessage(EntityUtils.toString(entity),
                                    new HttpResponseException(status.getStatusCode(), status.getReasonPhrase()));
-            } else {                
-                sendSuccessMessage(EntityUtils.toString(entity));
+            } else {
+                if (entity != null) {
+                    sendSuccessMessage(EntityUtils.toString(entity));
+                } else {
+                    sendSuccessMessage(null);
+                }
             }
         } catch(IOException e) {
             sendFailureMessage(null, e);
