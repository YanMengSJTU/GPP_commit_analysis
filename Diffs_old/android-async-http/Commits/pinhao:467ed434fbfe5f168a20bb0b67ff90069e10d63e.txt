diff --git a/.classpath b/.classpath
index 69b7cb08..d3bb07b4 100644
--- a/.classpath
+++ b/.classpath
@@ -1,8 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
+	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="src" path="gen"/>
+	<classpathentry kind="output" path="bin/classes"/>
+</classpath>
diff --git a/src/com/loopj/android/http/AsyncHttpResponseHandler.java b/src/com/loopj/android/http/AsyncHttpResponseHandler.java
index c42a17b2..a6f1ab3d 100644
--- a/src/com/loopj/android/http/AsyncHttpResponseHandler.java
+++ b/src/com/loopj/android/http/AsyncHttpResponseHandler.java
@@ -151,7 +151,7 @@ public void onFailure(int statusCode, byte[] responseBody, Throwable error) {
      * @param current the current number of bytes loaded from the response
      * @param total the total number of bytes in the response
      */
-    public void onProgress(int current, int total) {
+    public void onProgress(long current, long total) {
     }
 
     /**
@@ -183,7 +183,7 @@ protected void sendFinishMessage() {
         sendMessage(obtainMessage(FINISH_MESSAGE, null));
     }
 
-    protected void sendProgressMessage(int current, int total) {
+    protected void sendProgressMessage(long current, long total) {
         sendMessage(obtainMessage(PROGRESS_MESSAGE, new Object[] { current, total }));
     }
 
@@ -203,7 +203,7 @@ protected void handleFailureMessage(int statusCode, byte[] responseBody, Throwab
         onFailure(statusCode, responseBody, error);
     }
 
-    protected void handleProgressMessage(int current, int total) {
+    protected void handleProgressMessage(long current, long total) {
         onProgress(current, total);
     }
 
@@ -232,7 +232,7 @@ protected void handleMessage(Message msg) {
             break;
         case PROGRESS_MESSAGE:
             response = (Object[]) msg.obj;
-            onProgress(((Integer) response[0]).intValue(), ((Integer) response[1]).intValue());
+            onProgress(((Long) response[0]).longValue(), ((Long) response[1]).longValue());
             break;
         case RETRY_MESSAGE:
             onRetry();
@@ -279,12 +279,13 @@ protected Message obtainMessage(int responseMessage, Object response) {
                     ByteArrayBuffer buffer = new ByteArrayBuffer((int) contentLength);
                     try {
                         byte[] tmp = new byte[BUFFER_SIZE];
-                        int l, count = 0;
+                        int l;
+                        long count = 0;
                         // do not send messages if request has been cancelled
                         while ((l = instream.read(tmp)) != -1 && !Thread.currentThread().isInterrupted()) {
                             count += l;
                             buffer.append(tmp, 0, l);
-                            sendProgressMessage(count, (int) contentLength);
+                            sendProgressMessage(count, contentLength);
                         }
                     } finally {
                         instream.close();
