diff --git a/src/com/allthelucky/net/RequestManager.java b/src/com/allthelucky/net/RequestManager.java
index 41ad9f95..ea55ae25 100644
--- a/src/com/allthelucky/net/RequestManager.java
+++ b/src/com/allthelucky/net/RequestManager.java
@@ -21,6 +21,7 @@
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
 import android.text.TextUtils;
+import android.util.Log;
 
 import com.loopj.android.http.AsyncHttpClient;
 import com.loopj.android.http.AsyncHttpResponseHandler;
@@ -146,13 +147,19 @@ public void get(Context context, String url, RequestListener requestListener, in
      * @param actionId
      */
     public void get(Context context, String url, RequestListener requestListener, boolean cache, int actionId) {
+        final String encodeUrl = ApplicationUtils.urlEncode(url);
         if (!cache) {
             asyncHttpClient.get(context, url, new HttpRequestListener(requestListener, actionId));
         } else {
-            if (!hasCache(context, ApplicationUtils.urlEncode(url))) {
-                loadAndSaveResource(context, url, requestListener, 0l, actionId);
+            if (!hasCache(context, encodeUrl)) {
+                loadAndSaveResource(context, encodeUrl, requestListener, 0l, actionId);
             } else {
-                checkCache(context, ApplicationUtils.urlEncode(url), requestListener, actionId);
+                loadCache(context, encodeUrl, requestListener, actionId);
+                if (!ApplicationUtils.hasNetwork(context)) {
+                    return;
+                } else {
+                    checkUpdate(context, encodeUrl, actionId);
+                }
             }
         }
     }
@@ -171,53 +178,45 @@ private void loadAndSaveResource(final Context context, final String url, final
                 requestListener, lastModified), actionId));
     }
 
-    private void checkCache(final Context context, final String url, final RequestListener requestListener,
-            final int actionId) {
-        if (!ApplicationUtils.hasNetwork(context)) {
-            loadCache(context, url, requestListener, actionId);
-        } else {
-            final SharedPreferences pref = context.getSharedPreferences("cachefiles", Context.MODE_PRIVATE);
-            final String fileName = ApplicationUtils.encryptMD5(url);
-            new AsyncTask<Void, Void, Long>() {
-                @Override
-                protected Long doInBackground(Void... params) {
-                    return getLastModified(url);
-                }
-
-                protected void onPostExecute(Long result) {
-                    if (result != -1 && result != pref.getLong(fileName, 0l)) {
-                        loadAndSaveResource(context, url, requestListener, result, actionId);
-                    } else {
-                        loadCache(context, url, requestListener, actionId);
+    /**
+     * 检测/更新缓存
+     * 
+     * @param context
+     * @param url
+     * @param actionId
+     */
+    private void checkUpdate(final Context context, final String url, final int actionId) {
+        final SharedPreferences pref = context.getSharedPreferences("cachefiles", Context.MODE_PRIVATE);
+        final String fileName = ApplicationUtils.encryptMD5(url);
+        new AsyncTask<Void, Void, Long>() {
+            @Override
+            protected Long doInBackground(Void... params) {
+                long lastModified = -1l;
+                try {
+                    final URL u = new URL(url);
+                    final HttpURLConnection conn = (HttpURLConnection) u.openConnection();
+                    conn.setConnectTimeout(5 * 1000);
+                    conn.setRequestProperty("User-agent", "Mozilla/4.0");
+                    conn.setRequestProperty("Connection", "Keep-Alive");
+                    conn.setRequestProperty("Charset", "UTF-8");
+                    conn.setRequestMethod("GET");
+                    conn.connect();
+                    if (conn.getResponseCode() == 200) {
+                        lastModified = conn.getLastModified();
                     }
+                    conn.disconnect();
+                } catch (Exception e) {
+                    e.printStackTrace();
                 }
-            }.execute();
-        }
-    }
+                return lastModified;
+            }
 
-    /**
-     * get last modified time
-     */
-    private long getLastModified(final String url) {
-        try {
-            URL u = new URL(url);
-            HttpURLConnection conn = (HttpURLConnection) u.openConnection();
-            conn.setConnectTimeout(5 * 1000);
-            conn.setRequestProperty("User-agent", "Mozilla/4.0");
-            conn.setRequestProperty("Connection", "Keep-Alive");
-            conn.setRequestProperty("Charset", "UTF-8");
-            conn.setRequestMethod("GET");
-            conn.connect();
-            long lastModified = -1;
-            if (conn.getResponseCode() == 200) {
-                lastModified = conn.getLastModified();
+            protected void onPostExecute(Long result) {
+                if (result != -1l && result != pref.getLong(fileName, 0l)) {
+                    loadAndSaveResource(context, url, null, result, actionId);// 不返回数据到接口
+                }
             }
-            conn.disconnect();
-            return lastModified;
-        } catch (Exception e) {
-            e.printStackTrace();
-            return -1;
-        }
+        }.execute();
     }
 
     /**
